bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  this.isResolved()  &&  validator!=  null);  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  this.isResolved()  &&  validator!=  null);  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	this.isResolved()  &&  validator!=  null);	  return(this.isResolved()    &&    this.validator!=    null);    this.isResolved()    &&    this.validator!=    null);    	non-compiled	[CE]  not  a  statement	24	None	replace
2	[BUG]  [BUGGY]  this.isResolved()  &&  validator!=  null;  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  this.isResolved()  &&  validator!=  null;  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	this.isResolved()  &&  validator!=  null;	  return(this.isResolved()    &&    this.validator!=    null);    this.isResolved()    &&    this.validator!=    null);    	non-compiled	[CE]  not  a  statement	24	None	replace
3	[BUG]  [BUGGY]  if(this.isResolved())  {  return(this.validator!=  null);  this.isResolved()  &&  this.validator!=  null);  }  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.isResolved())  {  return(this.validator!=  null);  this.isResolved()  &&  this.validator!=  null);  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.isResolved())  {  return(this.validator!=  null);  this.isResolved()  &&  this.validator!=  null);  }	  return(this.isResolved()    &&    this.validator!=    null);    this.isResolved()    &&    this.validator!=    null);    	non-compiled	[CE]  not  a  statement	24	None	replace
4	[BUG]  [BUGGY]  if(this.isResolved())  {  return(this.validator!=  null);  }  else  if(this.isResolved())  {  this.validator  =  validator;  }  [CE]  missing  return  statement  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.isResolved())  {  return(this.validator!=  null);  }  else  if(this.isResolved())  {  this.validator  =  validator;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.isResolved())  {  return(this.validator!=  null);  }  else  if(this.isResolved())  {  this.validator  =  validator;  }	  return(this.isResolved()    &&    this.validator!=    null);    this.isResolved()    &&    this.validator!=    null);    	non-compiled	[CE]  missing  return  statement	24	None	replace
5	[BUG]  [BUGGY]  this.isResolved()  &&  this.validator!=  null);  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  this.isResolved()  &&  this.validator!=  null);  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	this.isResolved()  &&  this.validator!=  null);	  return(this.isResolved()    &&    this.validator!=    null);    this.isResolved()    &&    this.validator!=    null);    	non-compiled	[CE]  not  a  statement	24	None	replace
6	[BUG]  [BUGGY]  if(this.isResolved())  {  JSType  referencedType  =  getReferencedType(referenced);  if(referencedType  ==  null)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.isResolved())  {  JSType  referencedType  =  getReferencedType(referenced);  if(referencedType  ==  null)  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.isResolved())  {  JSType  referencedType  =  getReferencedType(referenced);  if(referencedType  ==  null)  {  return  false;  }	  return    false;    if(this.isResolved())    {    JSType    referencedType    =    getReferencedType(referenced);    if(referencedType    ==    null)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	90	None	replace
7	[BUG]  [BUGGY]  if(this.isReferenced())  {  JSType  referencedType  =  getReferencedType(referenced);  if(referencedType  ==  null)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.isReferenced())  {  JSType  referencedType  =  getReferencedType(referenced);  if(referencedType  ==  null)  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.isReferenced())  {  JSType  referencedType  =  getReferencedType(referenced);  if(referencedType  ==  null)  {  return  false;  }	  return    false;    if(this.isResolved())    {    JSType    referencedType    =    getReferencedType(referenced);    if(referencedType    ==    null)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	90	None	replace
8	[BUG]  [BUGGY]  if(this.isReferencedType())  {  JSType  referencedType  =  getReferencedType(referenced);  if(referencedType  ==  null)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.isReferencedType())  {  JSType  referencedType  =  getReferencedType(referenced);  if(referencedType  ==  null)  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.isReferencedType())  {  JSType  referencedType  =  getReferencedType(referenced);  if(referencedType  ==  null)  {  return  false;  }	  return    false;    if(this.isResolved())    {    JSType    referencedType    =    getReferencedType(referenced);    if(referencedType    ==    null)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	90	None	replace
9	[BUG]  [BUGGY]  if(this.isResolved())  {  JSType  referencedType  =  getReferencedType(referenced);  if(referencedType!=  null)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.isResolved())  {  JSType  referencedType  =  getReferencedType(referenced);  if(referencedType!=  null)  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.isResolved())  {  JSType  referencedType  =  getReferencedType(referenced);  if(referencedType!=  null)  {  return  false;  }	  return    false;    if(this.isResolved())    {    JSType    referencedType    =    getReferencedType(referenced);    if(referencedType    ==    null)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	90	None	replace
10	[BUG]  [BUGGY]  Predicate  <?>  referencedType  =  getReferencedType(referenced);  if(referencedType!=  null)  {  return  false;  }  [CE]  cannot  find  symbol  referenced  [FE]                                AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  Predicate  <?>  referencedType  =  getReferencedType(referenced);  if(referencedType!=  null)  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	Predicate  <?>  referencedType  =  getReferencedType(referenced);  if(referencedType!=  null)  {  return  false;  }	  return    false;    if(this.isResolved())    {    JSType    referencedType    =    getReferencedType(referenced);    if(referencedType    ==    null)    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol  referenced	90	None	replace
11	[BUG]  [BUGGY]  Predicate  <?>  referencedType  =  getReferencedType(referenced);  if(referencedType  ==  null)  {  return  false;  }  [CE]  cannot  find  symbol  referenced  [FE]                                  AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  Predicate  <?>  referencedType  =  getReferencedType(referenced);  if(referencedType  ==  null)  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	Predicate  <?>  referencedType  =  getReferencedType(referenced);  if(referencedType  ==  null)  {  return  false;  }	  return    false;    if(this.isResolved())    {    JSType    referencedType    =    getReferencedType(referenced);    if(referencedType    ==    null)    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol  referenced	90	None	replace
12	[BUG]  [BUGGY]  Predicate  <  JSType>  referencedType  =  getReferencedType(referenced);  if(referencedType  ==  null)  {  return  false;  }  [CE]  cannot  find  symbol  referenced  [FE]                                    AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  Predicate  <  JSType>  referencedType  =  getReferencedType(referenced);  if(referencedType  ==  null)  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	Predicate  <  JSType>  referencedType  =  getReferencedType(referenced);  if(referencedType  ==  null)  {  return  false;  }	  return    false;    if(this.isResolved())    {    JSType    referencedType    =    getReferencedType(referenced);    if(referencedType    ==    null)    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol  referenced	90	None	replace
13	[BUG]  [BUGGY]  this.forAnnotations  =  propertyNode.getFirstChild();  if(!this.isResolved())  {  return  false;  }  [CE]  cannot  find  symbol  forAnnotations  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  this.forAnnotations  =  propertyNode.getFirstChild();  if(!this.isResolved())  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	this.forAnnotations  =  propertyNode.getFirstChild();  if(!this.isResolved())  {  return  false;  }	  return    false;    if(validator!=    null)    {    forAnnotations    <    propertyNode    =    propertyNode.getFirstChild();    if(!this.isResolved())    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol  forAnnotations	143	None	replace
14	[BUG]  [BUGGY]  this.forAnnotations  =  propertyNode.getFirstChild();  [CE]  cannot  find  symbol  forAnnotations  [FE]                      AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  this.forAnnotations  =  propertyNode.getFirstChild();  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	this.forAnnotations  =  propertyNode.getFirstChild();	  return    false;    if(validator!=    null)    {    forAnnotations    <    propertyNode    =    propertyNode.getFirstChild();    if(!this.isResolved())    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol  forAnnotations	143	None	replace
15	[BUG]  [BUGGY]  this.forAnnotations  =  forAnnotations.getFirstChild();  if(!this.isResolved())  {  return  false;  }  [CE]  cannot  find  symbol  forAnnotations  [FE]                        AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  this.forAnnotations  =  forAnnotations.getFirstChild();  if(!this.isResolved())  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	this.forAnnotations  =  forAnnotations.getFirstChild();  if(!this.isResolved())  {  return  false;  }	  return    false;    if(validator!=    null)    {    forAnnotations    <    propertyNode    =    propertyNode.getFirstChild();    if(!this.isResolved())    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol  forAnnotations	143	None	replace
16	[BUG]  [BUGGY]  this.forAnnotations  =  propertyNode.getFirstChild();  if(!this.isResolved())  {  return  true;  }  [CE]  cannot  find  symbol  forAnnotations  [FE]                          AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  this.forAnnotations  =  propertyNode.getFirstChild();  if(!this.isResolved())  {  return  true;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	this.forAnnotations  =  propertyNode.getFirstChild();  if(!this.isResolved())  {  return  true;  }	  return    false;    if(validator!=    null)    {    forAnnotations    <    propertyNode    =    propertyNode.getFirstChild();    if(!this.isResolved())    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol  forAnnotations	143	None	replace
17	[BUG]  [BUGGY]  this.forAnnotations  =  propertyNode.getFirstChild();  if(this.isResolved())  {  return  false;  }  [CE]  cannot  find  symbol  forAnnotations  [FE]                            AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  this.forAnnotations  =  propertyNode.getFirstChild();  if(this.isResolved())  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	this.forAnnotations  =  propertyNode.getFirstChild();  if(this.isResolved())  {  return  false;  }	  return    false;    if(validator!=    null)    {    forAnnotations    <    propertyNode    =    propertyNode.getFirstChild();    if(!this.isResolved())    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol  forAnnotations	143	None	replace
18	[BUG]  [BUGGY]  Predicate  <?>  propertyNode  =  validator.getPropertyNode(propertyName);  [CE]  cannot  find  symbol  propertyName  [FE]                              AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  Predicate  <?>  propertyNode  =  validator.getPropertyNode(propertyName);  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	Predicate  <?>  propertyNode  =  validator.getPropertyNode(propertyName);	  return    false;    if(validator!=    null)    {    forAnnotations    <    propertyNode    =    propertyNode.getFirstChild();    if(!this.isResolved())    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol  propertyName	143	None	replace
19	[BUG]  [BUGGY]  this.forAnnotations  =  forAnnotations.getFirstChild();  if(!this.isResolved())  {  return  true;  }  [CE]  cannot  find  symbol  forAnnotations  [FE]                                AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  this.forAnnotations  =  forAnnotations.getFirstChild();  if(!this.isResolved())  {  return  true;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	this.forAnnotations  =  forAnnotations.getFirstChild();  if(!this.isResolved())  {  return  true;  }	  return    false;    if(validator!=    null)    {    forAnnotations    <    propertyNode    =    propertyNode.getFirstChild();    if(!this.isResolved())    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol  forAnnotations	143	None	replace
20	[BUG]  [BUGGY]  Predicate  <?>  property  =  this.referencedType.getProperty(propertyName);  if(property!=  null)  {  return  super.setValidator(validator);  }  [CE]  cannot  find  symbol  propertyName  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  Predicate  <?>  property  =  this.referencedType.getProperty(propertyName);  if(property!=  null)  {  return  super.setValidator(validator);  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	Predicate  <?>  property  =  this.referencedType.getProperty(propertyName);  if(property!=  null)  {  return  super.setValidator(validator);  }	  return    super.setValidator(validator);    if(this.isResolved())    {    Predicate    <?>    property    =    this.referencedType.getProperty(propertyName);    if(property!=    null)    {    return    super.setValidator(validator);    }    	non-compiled	[CE]  cannot  find  symbol  propertyName	77	None	replace
21	[BUG]  [BUGGY]  PropertyContinuation  <?>  property  =  this.referencedType.getProperty(propertyName);  if(property!=  null)  {  return  super.setValidator(validator);  }  [CE]  type  PropertyContinuation  does  not  take  parameters  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  PropertyContinuation  <?>  property  =  this.referencedType.getProperty(propertyName);  if(property!=  null)  {  return  super.setValidator(validator);  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	PropertyContinuation  <?>  property  =  this.referencedType.getProperty(propertyName);  if(property!=  null)  {  return  super.setValidator(validator);  }	  return    super.setValidator(validator);    if(this.isResolved())    {    Predicate    <?>    property    =    this.referencedType.getProperty(propertyName);    if(property!=    null)    {    return    super.setValidator(validator);    }    	non-compiled	[CE]  type  PropertyContinuation  does  not  take  parameters	77	None	replace
22	[BUG]  [BUGGY]  Predicate  <?>  property  =  this.referencedType.getProperty(propertyName);  if(property  ==  null)  {  return  super.setValidator(validator);  }  [CE]  cannot  find  symbol  propertyName  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  Predicate  <?>  property  =  this.referencedType.getProperty(propertyName);  if(property  ==  null)  {  return  super.setValidator(validator);  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	Predicate  <?>  property  =  this.referencedType.getProperty(propertyName);  if(property  ==  null)  {  return  super.setValidator(validator);  }	  return    super.setValidator(validator);    if(this.isResolved())    {    Predicate    <?>    property    =    this.referencedType.getProperty(propertyName);    if(property!=    null)    {    return    super.setValidator(validator);    }    	non-compiled	[CE]  cannot  find  symbol  propertyName	77	None	replace
23	[BUG]  [BUGGY]  if(this.referencedType!=  null)  {  Predicate  <?>  property  =  this.referencedType.getProperty(propertyName);  if(property!=  null)  {  return  super.setValidator(validator);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.referencedType!=  null)  {  Predicate  <?>  property  =  this.referencedType.getProperty(propertyName);  if(property!=  null)  {  return  super.setValidator(validator);  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.referencedType!=  null)  {  Predicate  <?>  property  =  this.referencedType.getProperty(propertyName);  if(property!=  null)  {  return  super.setValidator(validator);  }	  return    super.setValidator(validator);    if(this.isResolved())    {    Predicate    <?>    property    =    this.referencedType.getProperty(propertyName);    if(property!=    null)    {    return    super.setValidator(validator);    }    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
24	[BUG]  [BUGGY]  PropertyContinuation  <?>  property  =  this.referencedType.getProperty(propertyName);  if(property  ==  null)  {  return  super.setValidator(validator);  }  [CE]  type  PropertyContinuation  does  not  take  parameters  [FE]                      AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  PropertyContinuation  <?>  property  =  this.referencedType.getProperty(propertyName);  if(property  ==  null)  {  return  super.setValidator(validator);  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	PropertyContinuation  <?>  property  =  this.referencedType.getProperty(propertyName);  if(property  ==  null)  {  return  super.setValidator(validator);  }	  return    super.setValidator(validator);    if(this.isResolved())    {    Predicate    <?>    property    =    this.referencedType.getProperty(propertyName);    if(property!=    null)    {    return    super.setValidator(validator);    }    	non-compiled	[CE]  type  PropertyContinuation  does  not  take  parameters	77	None	replace
25	[BUG]  [BUGGY]  if(this.referencedType!=  null)  {  return  super.setValidator(validator);  }  [CE]  referencedType  has  private  access  in  ProxyObjectType  [FE]                        AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.referencedType!=  null)  {  return  super.setValidator(validator);  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.referencedType!=  null)  {  return  super.setValidator(validator);  }	  return    super.setValidator(validator);    if(this.isResolved())    {    Predicate    <?>    property    =    this.referencedType.getProperty(propertyName);    if(property!=    null)    {    return    super.setValidator(validator);    }    	non-compiled	[CE]  referencedType  has  private  access  in  ProxyObjectType	77	None	replace
26	[BUG]  [BUGGY]  Predicate  <?>  property  =  this.referencedType.getProperty(propertyName);  if(property!=  null)  {  return  super.set  [CE]  ';'  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  Predicate  <?>  property  =  this.referencedType.getProperty(propertyName);  if(property!=  null)  {  return  super.set  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	Predicate  <?>  property  =  this.referencedType.getProperty(propertyName);  if(property!=  null)  {  return  super.set	  return    super.setValidator(validator);    if(this.isResolved())    {    Predicate    <?>    property    =    this.referencedType.getProperty(propertyName);    if(property!=    null)    {    return    super.setValidator(validator);    }    	non-compiled	[CE]  ';'  expected	77	None	replace
27	[BUG]  [BUGGY]  Predicate  <?>  property  =  this.referencedType.getProperty(propertyName);  if(property!=  null)  {  return  super.setValidator(value);  }  [CE]  cannot  find  symbol  propertyName  [FE]                      AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  Predicate  <?>  property  =  this.referencedType.getProperty(propertyName);  if(property!=  null)  {  return  super.setValidator(value);  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	Predicate  <?>  property  =  this.referencedType.getProperty(propertyName);  if(property!=  null)  {  return  super.setValidator(value);  }	  return    super.setValidator(validator);    if(this.isResolved())    {    Predicate    <?>    property    =    this.referencedType.getProperty(propertyName);    if(property!=    null)    {    return    super.setValidator(value);    }    	non-compiled	[CE]  cannot  find  symbol  propertyName	81	None	replace
28	[BUG]  [BUGGY]  PropertyContinuation  <?>  property  =  this.referencedType.getProperty(propertyName);  if(property!=  null)  {  return  super.setValidator(value);  }  [CE]  type  PropertyContinuation  does  not  take  parameters  [FE]                        AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  PropertyContinuation  <?>  property  =  this.referencedType.getProperty(propertyName);  if(property!=  null)  {  return  super.setValidator(value);  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	PropertyContinuation  <?>  property  =  this.referencedType.getProperty(propertyName);  if(property!=  null)  {  return  super.setValidator(value);  }	  return    super.setValidator(validator);    if(this.isResolved())    {    Predicate    <?>    property    =    this.referencedType.getProperty(propertyName);    if(property!=    null)    {    return    super.setValidator(value);    }    	non-compiled	[CE]  type  PropertyContinuation  does  not  take  parameters	81	None	replace
29	[BUG]  [BUGGY]  Predicate  <?>  property  =  this.referencedType.getProperty(propertyName);  if(property  ==  null)  {  return  super.setValidator(value);  }  [CE]  cannot  find  symbol  propertyName  [FE]                          AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  Predicate  <?>  property  =  this.referencedType.getProperty(propertyName);  if(property  ==  null)  {  return  super.setValidator(value);  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	Predicate  <?>  property  =  this.referencedType.getProperty(propertyName);  if(property  ==  null)  {  return  super.setValidator(value);  }	  return    super.setValidator(validator);    if(this.isResolved())    {    Predicate    <?>    property    =    this.referencedType.getProperty(propertyName);    if(property!=    null)    {    return    super.setValidator(value);    }    	non-compiled	[CE]  cannot  find  symbol  propertyName	81	None	replace
30	[BUG]  [BUGGY]  if(!this.forAnnotations)  {  return  super.setValidator(validator);  if(this.isResolved())  {  Predicate  <?>  property  =  this.referencedType.getProperty(propertyName);  if(prop  [CE]  ')'  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(!this.forAnnotations)  {  return  super.setValidator(validator);  if(this.isResolved())  {  Predicate  <?>  property  =  this.referencedType.getProperty(propertyName);  if(prop  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(!this.forAnnotations)  {  return  super.setValidator(validator);  if(this.isResolved())  {  Predicate  <?>  property  =  this.referencedType.getProperty(propertyName);  if(prop	  return    super.setValidator(validator);    if(this.isResolved())    {    Predicate    <?>    property    =    this.referencedType.getProperty(propertyName);    if(property!=    null)    {    return    super.setValidator(value);    }    	non-compiled	[CE]  ')'  expected	81	None	replace
31	[BUG]  [BUGGY]  if(!this.forAnnotations)  {  return  super.setValidator(validator);  if(this.isResolved())  {  Predicate  <?>  property  =  this.referencedType.getProperty(propertyName);  if(property!=  null)  {  return  super  [CE]  '.'  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(!this.forAnnotations)  {  return  super.setValidator(validator);  if(this.isResolved())  {  Predicate  <?>  property  =  this.referencedType.getProperty(propertyName);  if(property!=  null)  {  return  super  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(!this.forAnnotations)  {  return  super.setValidator(validator);  if(this.isResolved())  {  Predicate  <?>  property  =  this.referencedType.getProperty(propertyName);  if(property!=  null)  {  return  super	  return    super.setValidator(validator);    if(this.isResolved())    {    Predicate    <?>    property    =    this.referencedType.getProperty(propertyName);    if(property!=    null)    {    return    super.setValidator(value);    }    	non-compiled	[CE]  '.'  expected	81	None	replace
32	[BUG]  [BUGGY]  Predicate  <  JSType>  property  =  this.referencedType.getProperty(propertyName);  if(property  ==  null)  {  return  super.setValidator(property);  }  [CE]  cannot  find  symbol  propertyName  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  Predicate  <  JSType>  property  =  this.referencedType.getProperty(propertyName);  if(property  ==  null)  {  return  super.setValidator(property);  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	Predicate  <  JSType>  property  =  this.referencedType.getProperty(propertyName);  if(property  ==  null)  {  return  super.setValidator(property);  }	  return    super.setValidator(validator);    if(this.isResolved())    {    Predicate    <    JSType>    property    =    this.referencedType.getProperty(propertyName);    if(property    ==    null)    {    return    super.setValidator(property);    }    	non-compiled	[CE]  cannot  find  symbol  propertyName	49	None	replace
33	[BUG]  [BUGGY]  Predicate  <  JSType>  property  =  this.referencedType.getProperty(propertyName);  if(property!=  null)  {  return  super.setValidator(property);  }  [CE]  cannot  find  symbol  propertyName  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  Predicate  <  JSType>  property  =  this.referencedType.getProperty(propertyName);  if(property!=  null)  {  return  super.setValidator(property);  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	Predicate  <  JSType>  property  =  this.referencedType.getProperty(propertyName);  if(property!=  null)  {  return  super.setValidator(property);  }	  return    super.setValidator(validator);    if(this.isResolved())    {    Predicate    <    JSType>    property    =    this.referencedType.getProperty(propertyName);    if(property    ==    null)    {    return    super.setValidator(property);    }    	non-compiled	[CE]  cannot  find  symbol  propertyName	49	None	replace
34	[BUG]  [BUGGY]  PropertyContinuation  <  JSType>  property  =  this.referencedType.getProperty(propertyName);  if(property  ==  null)  {  return  super.setValidator(property);  }  [CE]  type  PropertyContinuation  does  not  take  parameters  [FE]                      AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  PropertyContinuation  <  JSType>  property  =  this.referencedType.getProperty(propertyName);  if(property  ==  null)  {  return  super.setValidator(property);  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	PropertyContinuation  <  JSType>  property  =  this.referencedType.getProperty(propertyName);  if(property  ==  null)  {  return  super.setValidator(property);  }	  return    super.setValidator(validator);    if(this.isResolved())    {    Predicate    <    JSType>    property    =    this.referencedType.getProperty(propertyName);    if(property    ==    null)    {    return    super.setValidator(property);    }    	non-compiled	[CE]  type  PropertyContinuation  does  not  take  parameters	49	None	replace
35	[BUG]  [BUGGY]  PropertyContinuation  <  JSType>  property  =  this.referencedType.getProperty(propertyName);  if(property!=  null)  {  return  super.setValidator(property);  }  [CE]  type  PropertyContinuation  does  not  take  parameters  [FE]                        AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  PropertyContinuation  <  JSType>  property  =  this.referencedType.getProperty(propertyName);  if(property!=  null)  {  return  super.setValidator(property);  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	PropertyContinuation  <  JSType>  property  =  this.referencedType.getProperty(propertyName);  if(property!=  null)  {  return  super.setValidator(property);  }	  return    super.setValidator(validator);    if(this.isResolved())    {    Predicate    <    JSType>    property    =    this.referencedType.getProperty(propertyName);    if(property    ==    null)    {    return    super.setValidator(property);    }    	non-compiled	[CE]  type  PropertyContinuation  does  not  take  parameters	49	None	replace
36	[BUG]  [BUGGY]  if(!this.forAnnotations)  {  return  super.setValidator(validator);  if(this.isResolved())  {  Predicate  <  JSType>  property  =  this.referencedType.getProperty(propertyName);  if(prop  [CE]  ')'  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(!this.forAnnotations)  {  return  super.setValidator(validator);  if(this.isResolved())  {  Predicate  <  JSType>  property  =  this.referencedType.getProperty(propertyName);  if(prop  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(!this.forAnnotations)  {  return  super.setValidator(validator);  if(this.isResolved())  {  Predicate  <  JSType>  property  =  this.referencedType.getProperty(propertyName);  if(prop	  return    super.setValidator(validator);    if(this.isResolved())    {    Predicate    <    JSType>    property    =    this.referencedType.getProperty(propertyName);    if(property    ==    null)    {    return    super.setValidator(property);    }    	non-compiled	[CE]  ')'  expected	49	None	replace
37	[BUG]  [BUGGY]  Predicate  <  JSType>  property  =  this.referencedType.getProperty(propertyName);  if(property  ==  null)  {  return  super.set  [CE]  ';'  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  Predicate  <  JSType>  property  =  this.referencedType.getProperty(propertyName);  if(property  ==  null)  {  return  super.set  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	Predicate  <  JSType>  property  =  this.referencedType.getProperty(propertyName);  if(property  ==  null)  {  return  super.set	  return    super.setValidator(validator);    if(this.isResolved())    {    Predicate    <    JSType>    property    =    this.referencedType.getProperty(propertyName);    if(property    ==    null)    {    return    super.setValidator(property);    }    	non-compiled	[CE]  ';'  expected	49	None	replace
38	[BUG]  [BUGGY]  Predicate  <  JSType>  property  =  this.referencedType.getProperty(propertyName);  if(property  ==  null)  {  return  super.setValidator(validator);  }  [CE]  cannot  find  symbol  propertyName  [FE]                              AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  Predicate  <  JSType>  property  =  this.referencedType.getProperty(propertyName);  if(property  ==  null)  {  return  super.setValidator(validator);  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	Predicate  <  JSType>  property  =  this.referencedType.getProperty(propertyName);  if(property  ==  null)  {  return  super.setValidator(validator);  }	  return    super.setValidator(validator);    if(this.isResolved())    {    Predicate    <    JSType>    property    =    this.referencedType.getProperty(propertyName);    if(property    ==    null)    {    return    super.setValidator(property);    }    	non-compiled	[CE]  cannot  find  symbol  propertyName	49	None	replace
39	[BUG]  [BUGGY]  Predicate  <?>  propertyNode  =  getPropertyNode(reference);  [CE]  incompatible  types  [FE]                                    AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  Predicate  <?>  propertyNode  =  getPropertyNode(reference);  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	Predicate  <?>  propertyNode  =  getPropertyNode(reference);	  Predicate    <?>    propertyNode    =    getPropertyNode(propertyName);    	non-compiled	[CE]  incompatible  types	137	None	replace
40	[BUG]  [BUGGY]  Predicate  <?>  propertyNode  =  getPropertyNode(this.sourceName);  [CE]  incompatible  types  [FE]                                      AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  Predicate  <?>  propertyNode  =  getPropertyNode(this.sourceName);  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	Predicate  <?>  propertyNode  =  getPropertyNode(this.sourceName);	  Predicate    <?>    propertyNode    =    getPropertyNode(propertyName);    	non-compiled	[CE]  incompatible  types	137	None	replace
41	[BUG]  [BUGGY]  Predicate  <?>  propertyNode  =  getPropertyNode(name);  [CE]  cannot  find  symbol  name  [FE]                                        AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  Predicate  <?>  propertyNode  =  getPropertyNode(name);  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	Predicate  <?>  propertyNode  =  getPropertyNode(name);	  Predicate    <?>    propertyNode    =    getPropertyNode(propertyName);    	non-compiled	[CE]  cannot  find  symbol  name	137	None	replace
42	[BUG]  [BUGGY]  Predicate  <?>  propertyNode  =  getPropertyNode(sourceName);  [CE]  incompatible  types  [FE]                                          AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  Predicate  <?>  propertyNode  =  getPropertyNode(sourceName);  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	Predicate  <?>  propertyNode  =  getPropertyNode(sourceName);	  Predicate    <?>    propertyNode    =    getPropertyNode(propertyName);    	non-compiled	[CE]  incompatible  types	137	None	replace
43	[BUG]  [BUGGY]  Predicate  <?>  propertyNode  =  getPropertyNode(this.propertyName);  [CE]  cannot  find  symbol  propertyName  [FE]                                            AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  Predicate  <?>  propertyNode  =  getPropertyNode(this.propertyName);  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	Predicate  <?>  propertyNode  =  getPropertyNode(this.propertyName);	  Predicate    <?>    propertyNode    =    getPropertyNode(propertyName);    	non-compiled	[CE]  cannot  find  symbol  propertyName	137	None	replace
44	[BUG]  [BUGGY]  Predicate  <?>  propertyNode  =  getPropertyNode(this.name);  [CE]  cannot  find  symbol  name  [FE]                                              AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  Predicate  <?>  propertyNode  =  getPropertyNode(this.name);  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	Predicate  <?>  propertyNode  =  getPropertyNode(this.name);	  Predicate    <?>    propertyNode    =    getPropertyNode(propertyName);    	non-compiled	[CE]  cannot  find  symbol  name	137	None	replace
45	[BUG]  [BUGGY]  Predicate  <?>  propertyNode  =  getPropertyNode(this.property);  [CE]  cannot  find  symbol  property  [FE]                                                AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  Predicate  <?>  propertyNode  =  getPropertyNode(this.property);  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	Predicate  <?>  propertyNode  =  getPropertyNode(this.property);	  Predicate    <?>    propertyNode    =    getPropertyNode(propertyName);    	non-compiled	[CE]  cannot  find  symbol  property	137	None	replace
46	[BUG]  [BUGGY]  Predicate  <  JSType>  referencedType  =  validator.getReferencedType();  if(referencedType!=  null)  {  return  referencedType.setValidator(value);  }  [CE]  cannot  find  symbol  [FE]                          AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  Predicate  <  JSType>  referencedType  =  validator.getReferencedType();  if(referencedType!=  null)  {  return  referencedType.setValidator(value);  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	Predicate  <  JSType>  referencedType  =  validator.getReferencedType();  if(referencedType!=  null)  {  return  referencedType.setValidator(value);  }	  if(this.isResolved())    {    Predicate    <    JSType>    referencedType    =    validator.getReferencedType();    if(referencedType!=    null)    {    return    referencedType.setValidator(value);    }    	non-compiled	[CE]  cannot  find  symbol	64	None	replace
47	[BUG]  [BUGGY]  if(validator!=  null)  {  if(this.isResolved())  {  Predicate  <  JSType>  referencedType  =  validator.getReferencedType();  if(referencedType!=  null)  {  return  referencedType.setValidator(value);  }  }  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(validator!=  null)  {  if(this.isResolved())  {  Predicate  <  JSType>  referencedType  =  validator.getReferencedType();  if(referencedType!=  null)  {  return  referencedType.setValidator(value);  }  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(validator!=  null)  {  if(this.isResolved())  {  Predicate  <  JSType>  referencedType  =  validator.getReferencedType();  if(referencedType!=  null)  {  return  referencedType.setValidator(value);  }  }	  if(this.isResolved())    {    Predicate    <    JSType>    referencedType    =    validator.getReferencedType();    if(referencedType!=    null)    {    return    referencedType.setValidator(value);    }    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
48	[BUG]  [BUGGY]  if(validator!=  null)  {  if(this.isResolved())  {  Predicate  <  JSType>  referencedType  =  validator.getReferencedType();  if(referencedType!=  null)  {  return  referencedType.setValidator(value);  }  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(validator!=  null)  {  if(this.isResolved())  {  Predicate  <  JSType>  referencedType  =  validator.getReferencedType();  if(referencedType!=  null)  {  return  referencedType.setValidator(value);  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(validator!=  null)  {  if(this.isResolved())  {  Predicate  <  JSType>  referencedType  =  validator.getReferencedType();  if(referencedType!=  null)  {  return  referencedType.setValidator(value);  }	  if(this.isResolved())    {    Predicate    <    JSType>    referencedType    =    validator.getReferencedType();    if(referencedType!=    null)    {    return    referencedType.setValidator(value);    }    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
49	[BUG]  [BUGGY]  Predicate  <  JSType>  referencedType  =  validator.getReferencedType();  if(referencedType  ==  null)  {  return  referencedType.setValidator(value);  }  [CE]  cannot  find  symbol  [FE]                                AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  Predicate  <  JSType>  referencedType  =  validator.getReferencedType();  if(referencedType  ==  null)  {  return  referencedType.setValidator(value);  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	Predicate  <  JSType>  referencedType  =  validator.getReferencedType();  if(referencedType  ==  null)  {  return  referencedType.setValidator(value);  }	  if(this.isResolved())    {    Predicate    <    JSType>    referencedType    =    validator.getReferencedType();    if(referencedType!=    null)    {    return    referencedType.setValidator(value);    }    	non-compiled	[CE]  cannot  find  symbol	64	None	replace
50	[BUG]  [BUGGY]  if(validator!=  null)  {  if(this.isResolved())  {  Predicate  <  JSType>  referencedType  =  validator.getReferencedType();  if(referencedType!=  null)  {  return  referencedType.setValidator(value  [CE]  ')'  expected  [FE]                                  AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(validator!=  null)  {  if(this.isResolved())  {  Predicate  <  JSType>  referencedType  =  validator.getReferencedType();  if(referencedType!=  null)  {  return  referencedType.setValidator(value  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(validator!=  null)  {  if(this.isResolved())  {  Predicate  <  JSType>  referencedType  =  validator.getReferencedType();  if(referencedType!=  null)  {  return  referencedType.setValidator(value	  if(this.isResolved())    {    Predicate    <    JSType>    referencedType    =    validator.getReferencedType();    if(referencedType!=    null)    {    return    referencedType.setValidator(value);    }    	non-compiled	[CE]  ')'  expected	64	None	replace
51	[BUG]  [BUGGY]  timeout  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  return(this.isResolved()  ||  validator  ==  null);  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	add	return(this.isResolved()  ||  validator  ==  null);	  return(this.isResolved()    &&    validator!=    null);    timeout    	compilable	timeout	57	1	replace
52	[BUG]  [BUGGY]  return(this.isResolved()  ||  validator  ==  null);  timeout  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  return(this.isResolved()  ||  validator  ==  null);  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	return(this.isResolved()  ||  validator  ==  null);	  return(this.isResolved()    &&    validator!=    null);    timeout    	compilable	timeout	57	1	replace
53	[BUG]  [BUGGY]  timeout  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  return(validator!=  null  &&  this.isResolved());  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	add	return(validator!=  null  &&  this.isResolved());	  return(this.isResolved()    &&    validator!=    null);    timeout    	compilable	timeout	57	1	replace
54	[BUG]  [BUGGY]  return(validator!=  null  &&  this.isResolved());  timeout  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  return(validator!=  null  &&  this.isResolved());  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	return(validator!=  null  &&  this.isResolved());	  return(this.isResolved()    &&    validator!=    null);    timeout    	compilable	timeout	57	1	replace
55	[BUG]  [BUGGY]  timeout  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  return(!this.isResolved()  &&  validator!=  null);  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	add	return(!this.isResolved()  &&  validator!=  null);	  return(this.isResolved()    &&    validator!=    null);    timeout    	compilable	timeout	57	1	replace
56	[BUG]  [BUGGY]  return(!this.isResolved()  &&  validator!=  null);  timeout  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  return(!this.isResolved()  &&  validator!=  null);  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	return(!this.isResolved()  &&  validator!=  null);	  return(this.isResolved()    &&    validator!=    null);    timeout    	compilable	timeout	57	1	replace
57	[BUG]  [BUGGY]  if(!this.validator.isValidator())  {  return  false;  }  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(!this.validator.isValidator())  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(!this.validator.isValidator())  {  return  false;  }	  if(!this.isValidator())    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol	30	None	replace
58	[BUG]  [BUGGY]  if(!this.isValidator()  ||  validator.isValidator())  {  return  false;  }  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(!this.isValidator()  ||  validator.isValidator())  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(!this.isValidator()  ||  validator.isValidator())  {  return  false;  }	  if(!this.isValidator())    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol	30	None	replace
59	[BUG]  [BUGGY]  if(!this.isValidator())return  false;  }  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(!this.isValidator())return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(!this.isValidator())return  false;  }	  if(!this.isValidator())    {    return    false;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	30	None	replace
60	[BUG]  [BUGGY]  if(!this.isValidator()  ||  this.validator.isValidator())  {  return  false;  }  [CE]  cannot  find  symbol  [FE]                          AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(!this.isValidator()  ||  this.validator.isValidator())  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(!this.isValidator()  ||  this.validator.isValidator())  {  return  false;  }	  if(!this.isValidator())    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol	30	None	replace
61	[BUG]  [BUGGY]  if(!this.isValidator()  ||  this.isResolved())  {  return  false;  }  [CE]  cannot  find  symbol  [FE]                            AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(!this.isValidator()  ||  this.isResolved())  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(!this.isValidator()  ||  this.isResolved())  {  return  false;  }	  if(!this.isValidator())    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol	30	None	replace
62	[BUG]  [BUGGY]  if(!this.forAnnotations)  {  forAnnotations  ignoreForwardReferencedTypes  =  this.ignoreForwardReferencedTypes;  if(ignoreForwardReferencedTypes)  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(!this.forAnnotations)  {  forAnnotations  ignoreForwardReferencedTypes  =  this.ignoreForwardReferencedTypes;  if(ignoreForwardReferencedTypes)  {  return  true;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(!this.forAnnotations)  {  forAnnotations  ignoreForwardReferencedTypes  =  this.ignoreForwardReferencedTypes;  if(ignoreForwardReferencedTypes)  {  return  true;  }	  return    false;    if(!this.forAnnotations)    {    forAnnotations    ignoreForwardReferencedTypes    =    this.ignoreForwardReferencedTypes;    if(ignoreForwardReferencedTypes)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
63	[BUG]  [BUGGY]  if(this.isResolved())  {  return  false;  }  else  if(!this.forAnnotations)  {  forAnnotations  ignoreForwardReferencedTypes  =  this.ignoreForwardReferencedTypes;  if(ignoreForwardReferencedTypes)  {  return  true  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.isResolved())  {  return  false;  }  else  if(!this.forAnnotations)  {  forAnnotations  ignoreForwardReferencedTypes  =  this.ignoreForwardReferencedTypes;  if(ignoreForwardReferencedTypes)  {  return  true  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.isResolved())  {  return  false;  }  else  if(!this.forAnnotations)  {  forAnnotations  ignoreForwardReferencedTypes  =  this.ignoreForwardReferencedTypes;  if(ignoreForwardReferencedTypes)  {  return  true	  return    false;    if(!this.forAnnotations)    {    forAnnotations    ignoreForwardReferencedTypes    =    this.ignoreForwardReferencedTypes;    if(ignoreForwardReferencedTypes)    {    return    true;    }    	non-compiled	[CE]  ';'  expected	85	None	replace
64	[BUG]  [BUGGY]  if(!this.forAnnotations)  {  forAnnotations  ignoreForwardReferencedTypes  =  validator;  if(ignoreForwardReferencedTypes)  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(!this.forAnnotations)  {  forAnnotations  ignoreForwardReferencedTypes  =  validator;  if(ignoreForwardReferencedTypes)  {  return  true;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(!this.forAnnotations)  {  forAnnotations  ignoreForwardReferencedTypes  =  validator;  if(ignoreForwardReferencedTypes)  {  return  true;  }	  return    false;    if(!this.forAnnotations)    {    forAnnotations    ignoreForwardReferencedTypes    =    this.ignoreForwardReferencedTypes;    if(ignoreForwardReferencedTypes)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
65	[BUG]  [BUGGY]  if(this.isResolved())  {  return  false;  }  else  if(!this.forAnnotations)  {  forAnnotations  ignoreForwardReferencedTypes  =  this.ignoreForwardReferencedTypes;  if(ignoreForwardReferencedTypes)  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.isResolved())  {  return  false;  }  else  if(!this.forAnnotations)  {  forAnnotations  ignoreForwardReferencedTypes  =  this.ignoreForwardReferencedTypes;  if(ignoreForwardReferencedTypes)  {  return  true;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.isResolved())  {  return  false;  }  else  if(!this.forAnnotations)  {  forAnnotations  ignoreForwardReferencedTypes  =  this.ignoreForwardReferencedTypes;  if(ignoreForwardReferencedTypes)  {  return  true;  }	  return    false;    if(!this.forAnnotations)    {    forAnnotations    ignoreForwardReferencedTypes    =    this.ignoreForwardReferencedTypes;    if(ignoreForwardReferencedTypes)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
66	[BUG]  [BUGGY]  if(!this.forAnnotations)  {  forAnnotations  ignoreForwardReferencedTypes  =  this.ignoreForwardReferencedTypes;  if(ignoreForwardReferencedTypes)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(!this.forAnnotations)  {  forAnnotations  ignoreForwardReferencedTypes  =  this.ignoreForwardReferencedTypes;  if(ignoreForwardReferencedTypes)  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(!this.forAnnotations)  {  forAnnotations  ignoreForwardReferencedTypes  =  this.ignoreForwardReferencedTypes;  if(ignoreForwardReferencedTypes)  {  return  false;  }	  return    false;    if(!this.forAnnotations)    {    forAnnotations    ignoreForwardReferencedTypes    =    this.ignoreForwardReferencedTypes;    if(ignoreForwardReferencedTypes)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
67	[BUG]  [BUGGY]  if(this.isResolved())  {  return  false;  }  else  if(!this.forAnnotations)  {  forAnnotations  ignoreForwardReferencedTypes  =  this.ignoreForwardReferencedTypes;  if(ignoreForwardReferencedTypes)  {  return  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.isResolved())  {  return  false;  }  else  if(!this.forAnnotations)  {  forAnnotations  ignoreForwardReferencedTypes  =  this.ignoreForwardReferencedTypes;  if(ignoreForwardReferencedTypes)  {  return  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.isResolved())  {  return  false;  }  else  if(!this.forAnnotations)  {  forAnnotations  ignoreForwardReferencedTypes  =  this.ignoreForwardReferencedTypes;  if(ignoreForwardReferencedTypes)  {  return	  return    false;    if(!this.forAnnotations)    {    forAnnotations    ignoreForwardReferencedTypes    =    this.ignoreForwardReferencedTypes;    if(ignoreForwardReferencedTypes)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
68	[BUG]  [BUGGY]  if(!this.forAnnotations)  {  forAnnotations  ignoreForwardReferencedTypes  =  null;  if(ignoreForwardReferencedTypes)  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(!this.forAnnotations)  {  forAnnotations  ignoreForwardReferencedTypes  =  null;  if(ignoreForwardReferencedTypes)  {  return  true;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(!this.forAnnotations)  {  forAnnotations  ignoreForwardReferencedTypes  =  null;  if(ignoreForwardReferencedTypes)  {  return  true;  }	  return    false;    if(!this.forAnnotations)    {    forAnnotations    ignoreForwardReferencedTypes    =    this.ignoreForwardReferencedTypes;    if(ignoreForwardReferencedTypes)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
69	[BUG]  [BUGGY]  if(this.forAnnotations!=  forAnnotations)  {  forAnnotations  ignoreForwardReferencedTypes  =  this.ignoreForwardReferencedTypes;  if(ignoreForwardReferencedTypes!=  null)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.forAnnotations!=  forAnnotations)  {  forAnnotations  ignoreForwardReferencedTypes  =  this.ignoreForwardReferencedTypes;  if(ignoreForwardReferencedTypes!=  null)  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.forAnnotations!=  forAnnotations)  {  forAnnotations  ignoreForwardReferencedTypes  =  this.ignoreForwardReferencedTypes;  if(ignoreForwardReferencedTypes!=  null)  {  return  false;  }	  return    false;    if(this.forAnnotations!=    forAnnotations)    {    forAnnotations    ignoreForwardReferencedTypes    =    this.ignoreForwardReferencedTypes;    if(ignoreForwardReferencedTypes    >=    null)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
70	[BUG]  [BUGGY]  if(this.forAnnotations  ==  forAnnotations)  {  forAnnotations  ignoreForwardReferencedTypes  =  this.ignoreForwardReferencedTypes;  if(ignoreForwardReferencedTypes!=  null)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.forAnnotations  ==  forAnnotations)  {  forAnnotations  ignoreForwardReferencedTypes  =  this.ignoreForwardReferencedTypes;  if(ignoreForwardReferencedTypes!=  null)  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.forAnnotations  ==  forAnnotations)  {  forAnnotations  ignoreForwardReferencedTypes  =  this.ignoreForwardReferencedTypes;  if(ignoreForwardReferencedTypes!=  null)  {  return  false;  }	  return    false;    if(this.forAnnotations!=    forAnnotations)    {    forAnnotations    ignoreForwardReferencedTypes    =    this.ignoreForwardReferencedTypes;    if(ignoreForwardReferencedTypes    >=    null)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
71	[BUG]  [BUGGY]  if(this.forAnnotations!=  validator)  {  if(this.forAnnotations!=  forAnnotations)  {  forAnnotations  ignoreForwardReferencedTypes  =  this.ignoreForwardReferencedTypes;  if(ignoreForwardReferencedTypes!=  null)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.forAnnotations!=  validator)  {  if(this.forAnnotations!=  forAnnotations)  {  forAnnotations  ignoreForwardReferencedTypes  =  this.ignoreForwardReferencedTypes;  if(ignoreForwardReferencedTypes!=  null)  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.forAnnotations!=  validator)  {  if(this.forAnnotations!=  forAnnotations)  {  forAnnotations  ignoreForwardReferencedTypes  =  this.ignoreForwardReferencedTypes;  if(ignoreForwardReferencedTypes!=  null)  {  return  false;  }	  return    false;    if(this.forAnnotations!=    forAnnotations)    {    forAnnotations    ignoreForwardReferencedTypes    =    this.ignoreForwardReferencedTypes;    if(ignoreForwardReferencedTypes    >=    null)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
72	[BUG]  [BUGGY]  if(this.forAnnotations!=  forAnnotations)  {  forAnnotations  ignoreForwardReferencedTypes  =  this.ignoreForwardReferencedTypes;  if(ignoreForwardReferencedTypes  ==  null)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.forAnnotations!=  forAnnotations)  {  forAnnotations  ignoreForwardReferencedTypes  =  this.ignoreForwardReferencedTypes;  if(ignoreForwardReferencedTypes  ==  null)  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.forAnnotations!=  forAnnotations)  {  forAnnotations  ignoreForwardReferencedTypes  =  this.ignoreForwardReferencedTypes;  if(ignoreForwardReferencedTypes  ==  null)  {  return  false;  }	  return    false;    if(this.forAnnotations!=    forAnnotations)    {    forAnnotations    ignoreForwardReferencedTypes    =    this.ignoreForwardReferencedTypes;    if(ignoreForwardReferencedTypes    >=    null)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
73	[BUG]  [BUGGY]  if(this.forAnnotations!=  validator)  {  if(this.forAnnotations!=  forAnnotations)  {  forAnnotations  ignoreForwardReferencedTypes  =  this.ignoreForwardReferencedTypes;  if(ignoreForwardReferencedTypes!=  null)  {  return  false  [CE]  ';'  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.forAnnotations!=  validator)  {  if(this.forAnnotations!=  forAnnotations)  {  forAnnotations  ignoreForwardReferencedTypes  =  this.ignoreForwardReferencedTypes;  if(ignoreForwardReferencedTypes!=  null)  {  return  false  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.forAnnotations!=  validator)  {  if(this.forAnnotations!=  forAnnotations)  {  forAnnotations  ignoreForwardReferencedTypes  =  this.ignoreForwardReferencedTypes;  if(ignoreForwardReferencedTypes!=  null)  {  return  false	  return    false;    if(this.forAnnotations!=    forAnnotations)    {    forAnnotations    ignoreForwardReferencedTypes    =    this.ignoreForwardReferencedTypes;    if(ignoreForwardReferencedTypes    >=    null)    {    return    false;    }    	non-compiled	[CE]  ';'  expected	6	None	replace
74	[BUG]  [BUGGY]  if(this.forAnnotations!=  validator)  {  if(this.forAnnotations!=  forAnnotations)  {  forAnnotations  ignoreForwardReferencedTypes  =  this.ignoreForwardReferencedTypes;  if(ignoreForwardReferencedTypes!=  null)  {  return  [CE]  illegal  start  of  expression  [FE]                                AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.forAnnotations!=  validator)  {  if(this.forAnnotations!=  forAnnotations)  {  forAnnotations  ignoreForwardReferencedTypes  =  this.ignoreForwardReferencedTypes;  if(ignoreForwardReferencedTypes!=  null)  {  return  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.forAnnotations!=  validator)  {  if(this.forAnnotations!=  forAnnotations)  {  forAnnotations  ignoreForwardReferencedTypes  =  this.ignoreForwardReferencedTypes;  if(ignoreForwardReferencedTypes!=  null)  {  return	  return    false;    if(this.forAnnotations!=    forAnnotations)    {    forAnnotations    ignoreForwardReferencedTypes    =    this.ignoreForwardReferencedTypes;    if(ignoreForwardReferencedTypes    >=    null)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
75	[BUG]  [BUGGY]  if(this.forAnnotations!=  forAnnotations)  {  forAnnotations  ignoreForwardReferencedTypes  =  null;  if(ignoreForwardReferencedTypes!=  null)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                                  AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.forAnnotations!=  forAnnotations)  {  forAnnotations  ignoreForwardReferencedTypes  =  null;  if(ignoreForwardReferencedTypes!=  null)  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.forAnnotations!=  forAnnotations)  {  forAnnotations  ignoreForwardReferencedTypes  =  null;  if(ignoreForwardReferencedTypes!=  null)  {  return  false;  }	  return    false;    if(this.forAnnotations!=    forAnnotations)    {    forAnnotations    ignoreForwardReferencedTypes    =    this.ignoreForwardReferencedTypes;    if(ignoreForwardReferencedTypes    >=    null)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
76	[BUG]  [BUGGY]  if(this.ignoreForwardReferencedTypes)  {  return  false;  }  [CE]  cannot  find  symbol  ignoreForwardReferencedTypes  [FE]                      AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.ignoreForwardReferencedTypes)  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.ignoreForwardReferencedTypes)  {  return  false;  }	  if(isForwardDeclared())    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol  ignoreForwardReferencedTypes	83	None	replace
77	[BUG]  [BUGGY]  if(isForwardDeclared())  {  return  true;  }  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(isForwardDeclared())  {  return  true;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(isForwardDeclared())  {  return  true;  }	  if(isForwardDeclared())    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol	83	None	replace
78	[BUG]  [BUGGY]  if(!isForwardDeclared())  {  return  false;  }  [CE]  cannot  find  symbol  [FE]                          AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(!isForwardDeclared())  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(!isForwardDeclared())  {  return  false;  }	  if(isForwardDeclared())    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol	83	None	replace
79	[BUG]  [BUGGY]  if(isForwardDeclared()  ||  isResolved())  {  return  false;  }  [CE]  cannot  find  symbol  [FE]                            AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(isForwardDeclared()  ||  isResolved())  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(isForwardDeclared()  ||  isResolved())  {  return  false;  }	  if(isForwardDeclared())    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol	83	None	replace
80	[BUG]  [BUGGY]  if(isForwardDeclared()  ||  isForwardDeclared)  {  return  false;  }  [CE]  cannot  find  symbol  [FE]                              AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(isForwardDeclared()  ||  isForwardDeclared)  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(isForwardDeclared()  ||  isForwardDeclared)  {  return  false;  }	  if(isForwardDeclared())    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol	83	None	replace
81	[BUG]  [BUGGY]  Predicate  <  JSType>  referencedType  =  validator.getReferencedType();  if(referencedType!=  null)  {  return  referencedType.setValidator(validator);  }  [CE]  cannot  find  symbol  [FE]                            AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  Predicate  <  JSType>  referencedType  =  validator.getReferencedType();  if(referencedType!=  null)  {  return  referencedType.setValidator(validator);  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	Predicate  <  JSType>  referencedType  =  validator.getReferencedType();  if(referencedType!=  null)  {  return  referencedType.setValidator(validator);  }	  if(this.isResolved())    {    Predicate    <    JSType>    referencedType    =    validator.getReferencedType();    if(referencedType!=    null)    {    return    referencedType.setValidator(validator);    }    	non-compiled	[CE]  cannot  find  symbol	65	None	replace
82	[BUG]  [BUGGY]  Predicate  <  JSType>  referencedType  =  validator.getReferencedType();  if(referencedType  ==  null)  {  return  referencedType.setValidator(validator);  }  [CE]  cannot  find  symbol  [FE]                              AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  Predicate  <  JSType>  referencedType  =  validator.getReferencedType();  if(referencedType  ==  null)  {  return  referencedType.setValidator(validator);  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	Predicate  <  JSType>  referencedType  =  validator.getReferencedType();  if(referencedType  ==  null)  {  return  referencedType.setValidator(validator);  }	  if(this.isResolved())    {    Predicate    <    JSType>    referencedType    =    validator.getReferencedType();    if(referencedType!=    null)    {    return    referencedType.setValidator(validator);    }    	non-compiled	[CE]  cannot  find  symbol	65	None	replace
83	[BUG]  [BUGGY]  if(this.isSlotType())  {  Predicate  <  JSType>  referencedType  =  validator.getReferencedType();  if(referencedType!=  null)  {  return  referencedType.setValidator(validator);  }  [CE]  illegal  start  of  expression  [FE]                                AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.isSlotType())  {  Predicate  <  JSType>  referencedType  =  validator.getReferencedType();  if(referencedType!=  null)  {  return  referencedType.setValidator(validator);  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.isSlotType())  {  Predicate  <  JSType>  referencedType  =  validator.getReferencedType();  if(referencedType!=  null)  {  return  referencedType.setValidator(validator);  }	  if(this.isResolved())    {    Predicate    <    JSType>    referencedType    =    validator.getReferencedType();    if(referencedType!=    null)    {    return    referencedType.setValidator(validator);    }    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
84	[BUG]  [BUGGY]  Predicate  <  JSType>  referencedType  =  validator.getReferencedType();  if(referencedType  >=  null)  {  return  referencedType.setValidator(validator);  }  [CE]  cannot  find  symbol  [FE]                                  AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  Predicate  <  JSType>  referencedType  =  validator.getReferencedType();  if(referencedType  >=  null)  {  return  referencedType.setValidator(validator);  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	Predicate  <  JSType>  referencedType  =  validator.getReferencedType();  if(referencedType  >=  null)  {  return  referencedType.setValidator(validator);  }	  if(this.isResolved())    {    Predicate    <    JSType>    referencedType    =    validator.getReferencedType();    if(referencedType!=    null)    {    return    referencedType.setValidator(validator);    }    	non-compiled	[CE]  cannot  find  symbol	65	None	replace
85	[BUG]  [BUGGY]  Predicate  <?>  validator  =  super.setValidator(validator);  [CE]  variable  validator  is  already  defined  in  method  setValidator(Predicate<JSType>)  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  Predicate  <?>  validator  =  super.setValidator(validator);  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	Predicate  <?>  validator  =  super.setValidator(validator);	  return    super.setValidator(validator);    if(this.isResolved())    {    return    super.setValidator(validator);    }    	non-compiled	[CE]  variable  validator  is  already  defined  in  method  setValidator(Predicate<JSType>)	50	None	replace
86	[BUG]  [BUGGY]  timeout  [FE]                      AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.isResolved())  {  return  super.setValidator(validator);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	add	if(this.isResolved())  {  return  super.setValidator(validator);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  return    super.setValidator(validator);    if(this.isResolved())    {    return    super.setValidator(validator);    }    	compilable	timeout	50	1	replace
87	[BUG]  [BUGGY]  if(this.isResolved())  {  return  super.setValidator(validator);  }  else  {  throw  new  IllegalArgumentException( " ");  }  timeout  [FE]                      AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.isResolved())  {  return  super.setValidator(validator);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.isResolved())  {  return  super.setValidator(validator);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  return    super.setValidator(validator);    if(this.isResolved())    {    return    super.setValidator(validator);    }    	compilable	timeout	50	1	replace
88	[BUG]  [BUGGY]  if(this.isResolved())  {  return  super.setValidator(validator);  }  else  {  for(JSType  referencedType  :  this.referencedType.getReferencedTypes())  {  return  referencedType.setValidator(validator);  }  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.isResolved())  {  return  super.setValidator(validator);  }  else  {  for(JSType  referencedType  :  this.referencedType.getReferencedTypes())  {  return  referencedType.setValidator(validator);  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.isResolved())  {  return  super.setValidator(validator);  }  else  {  for(JSType  referencedType  :  this.referencedType.getReferencedTypes())  {  return  referencedType.setValidator(validator);  }	  return    super.setValidator(validator);    if(this.isResolved())    {    return    super.setValidator(validator);    }    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
89	[BUG]  [BUGGY]  if(this.isResolved())  {  return  super.setValidator(validator);  }  else  {  for(JSType  referencedType  :  this.referencedTypes)  {  return  referencedType.setValidator(validator);  }  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.isResolved())  {  return  super.setValidator(validator);  }  else  {  for(JSType  referencedType  :  this.referencedTypes)  {  return  referencedType.setValidator(validator);  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.isResolved())  {  return  super.setValidator(validator);  }  else  {  for(JSType  referencedType  :  this.referencedTypes)  {  return  referencedType.setValidator(validator);  }	  return    super.setValidator(validator);    if(this.isResolved())    {    return    super.setValidator(validator);    }    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
90	[BUG]  [BUGGY]  if(this.isResolved())  {  return  super.setValidator(validator);  }  else  {  for(JSType  referencedType  :  this.referencedType.values())  {  return  referencedType.setValidator(validator);  }  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.isResolved())  {  return  super.setValidator(validator);  }  else  {  for(JSType  referencedType  :  this.referencedType.values())  {  return  referencedType.setValidator(validator);  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.isResolved())  {  return  super.setValidator(validator);  }  else  {  for(JSType  referencedType  :  this.referencedType.values())  {  return  referencedType.setValidator(validator);  }	  return    super.setValidator(validator);    if(this.isResolved())    {    return    super.setValidator(validator);    }    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
91	[BUG]  [BUGGY]  Predicate  <  JSType>  property  =  this.referencedType.getProperty(propertyName);  if(property!=  null)  {  return  super.setValidator(validator);  }  [CE]  cannot  find  symbol  propertyName  [FE]                      AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  Predicate  <  JSType>  property  =  this.referencedType.getProperty(propertyName);  if(property!=  null)  {  return  super.setValidator(validator);  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	Predicate  <  JSType>  property  =  this.referencedType.getProperty(propertyName);  if(property!=  null)  {  return  super.setValidator(validator);  }	  return    super.setValidator(validator);    if(this.isResolved())    {    Predicate    <    JSType>    property    =    this.referencedType.getProperty(propertyName);    if(property!=    null)    {    return    super.setValidator(validator);    }    	non-compiled	[CE]  cannot  find  symbol  propertyName	51	None	replace
92	[BUG]  [BUGGY]  PropertyContinuation  <  JSType>  property  =  this.referencedType.getProperty(propertyName);  if(property!=  null)  {  return  super.setValidator(validator);  }  [CE]  type  PropertyContinuation  does  not  take  parameters  [FE]                        AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  PropertyContinuation  <  JSType>  property  =  this.referencedType.getProperty(propertyName);  if(property!=  null)  {  return  super.setValidator(validator);  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	PropertyContinuation  <  JSType>  property  =  this.referencedType.getProperty(propertyName);  if(property!=  null)  {  return  super.setValidator(validator);  }	  return    super.setValidator(validator);    if(this.isResolved())    {    Predicate    <    JSType>    property    =    this.referencedType.getProperty(propertyName);    if(property!=    null)    {    return    super.setValidator(validator);    }    	non-compiled	[CE]  type  PropertyContinuation  does  not  take  parameters	51	None	replace
93	[BUG]  [BUGGY]  PropertyContinuation  <  JSType>  property  =  this.referencedType.getProperty(propertyName);  if(property  ==  null)  {  return  super.setValidator(validator);  }  [CE]  type  PropertyContinuation  does  not  take  parameters  [FE]                          AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  PropertyContinuation  <  JSType>  property  =  this.referencedType.getProperty(propertyName);  if(property  ==  null)  {  return  super.setValidator(validator);  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	PropertyContinuation  <  JSType>  property  =  this.referencedType.getProperty(propertyName);  if(property  ==  null)  {  return  super.setValidator(validator);  }	  return    super.setValidator(validator);    if(this.isResolved())    {    Predicate    <    JSType>    property    =    this.referencedType.getProperty(propertyName);    if(property!=    null)    {    return    super.setValidator(validator);    }    	non-compiled	[CE]  type  PropertyContinuation  does  not  take  parameters	51	None	replace
94	[BUG]  [BUGGY]  Predicate  <  JSType>  property  =  this.referencedType.getProperty(propertyName);  if(property!=  null)  {  return  super.set  [CE]  ';'  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  Predicate  <  JSType>  property  =  this.referencedType.getProperty(propertyName);  if(property!=  null)  {  return  super.set  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	Predicate  <  JSType>  property  =  this.referencedType.getProperty(propertyName);  if(property!=  null)  {  return  super.set	  return    super.setValidator(validator);    if(this.isResolved())    {    Predicate    <    JSType>    property    =    this.referencedType.getProperty(propertyName);    if(property!=    null)    {    return    super.setValidator(validator);    }    	non-compiled	[CE]  ';'  expected	51	None	replace
95	[BUG]  [BUGGY]  Predicate  <  JSType>  property  =  this.referencedType.getProperty(propertyName);  if(property  >=  null)  {  return  super.setValidator(validator);  }  [CE]  cannot  find  symbol  propertyName  [FE]                              AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  Predicate  <  JSType>  property  =  this.referencedType.getProperty(propertyName);  if(property  >=  null)  {  return  super.setValidator(validator);  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	Predicate  <  JSType>  property  =  this.referencedType.getProperty(propertyName);  if(property  >=  null)  {  return  super.setValidator(validator);  }	  return    super.setValidator(validator);    if(this.isResolved())    {    Predicate    <    JSType>    property    =    this.referencedType.getProperty(propertyName);    if(property!=    null)    {    return    super.setValidator(validator);    }    	non-compiled	[CE]  cannot  find  symbol  propertyName	51	None	replace
96	[BUG]  [BUGGY]  Predicate  <  JSType>  propertyNode  =  this.getPropertyNode(propertyName);  if(propertyNode!=  null)  {  return  false;  }  [CE]  cannot  find  symbol  propertyName  [FE]                                    AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  Predicate  <  JSType>  propertyNode  =  this.getPropertyNode(propertyName);  if(propertyNode!=  null)  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	Predicate  <  JSType>  propertyNode  =  this.getPropertyNode(propertyName);  if(propertyNode!=  null)  {  return  false;  }	  if(this.isResolved())    {    Predicate    <    JSType>    propertyNode    =    this.getPropertyNode(propertyName);    if(propertyNode!=    null)    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol  propertyName	113	None	replace
97	[BUG]  [BUGGY]  Predicate  <  JSType>  propertyNode  =  this.getPropertyNode(propertyName);  if(propertyNode  ==  null)  {  return  false;  }  [CE]  cannot  find  symbol  propertyName  [FE]                                      AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  Predicate  <  JSType>  propertyNode  =  this.getPropertyNode(propertyName);  if(propertyNode  ==  null)  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	Predicate  <  JSType>  propertyNode  =  this.getPropertyNode(propertyName);  if(propertyNode  ==  null)  {  return  false;  }	  if(this.isResolved())    {    Predicate    <    JSType>    propertyNode    =    this.getPropertyNode(propertyName);    if(propertyNode!=    null)    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol  propertyName	113	None	replace
98	[BUG]  [BUGGY]  if(this.isReferencedType())  {  Predicate  <  JSType>  propertyNode  =  this.getPropertyNode(propertyName);  if(propertyNode!=  null)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                                        AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.isReferencedType())  {  Predicate  <  JSType>  propertyNode  =  this.getPropertyNode(propertyName);  if(propertyNode!=  null)  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.isReferencedType())  {  Predicate  <  JSType>  propertyNode  =  this.getPropertyNode(propertyName);  if(propertyNode!=  null)  {  return  false;  }	  if(this.isResolved())    {    Predicate    <    JSType>    propertyNode    =    this.getPropertyNode(propertyName);    if(propertyNode!=    null)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	113	None	replace
99	[BUG]  [BUGGY]  if(this.isResolved())  {  Predicate  <  JSType>  propertyNode  =  this.getPropertyNode(propertyName);  if(propertyNode  ==  null)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                                          AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.isResolved())  {  Predicate  <  JSType>  propertyNode  =  this.getPropertyNode(propertyName);  if(propertyNode  ==  null)  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.isResolved())  {  Predicate  <  JSType>  propertyNode  =  this.getPropertyNode(propertyName);  if(propertyNode  ==  null)  {  return  false;  }	  if(this.isResolved())    {    Predicate    <    JSType>    propertyNode    =    this.getPropertyNode(propertyName);    if(propertyNode!=    null)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	113	None	replace
100	[BUG]  [BUGGY]  if(this.validator!=  null)  {  return  true;  }  [CE]  missing  return  statement  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.validator!=  null)  {  return  true;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.validator!=  null)  {  return  true;  }	  if(this.validator!=    null)    {    return    false;    }    	non-compiled	[CE]  missing  return  statement	32	None	replace
101	[BUG]  [BUGGY]  if(this.validator  ==  null)  {  return  true;  }  [CE]  missing  return  statement  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.validator  ==  null)  {  return  true;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.validator  ==  null)  {  return  true;  }	  if(this.validator!=    null)    {    return    false;    }    	non-compiled	[CE]  missing  return  statement	32	None	replace
102	[BUG]  [BUGGY]  if(this.validator  ==  validator)  {  return  false;  }  [CE]  missing  return  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.validator  ==  validator)  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.validator  ==  validator)  {  return  false;  }	  if(this.validator!=    null)    {    return    false;    }    	non-compiled	[CE]  missing  return  statement	32	None	replace
103	[BUG]  [BUGGY]  if(this.validator!=  null  ||  this.validator.isResolved())  {  return  false;  }  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.validator!=  null  ||  this.validator.isResolved())  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.validator!=  null  ||  this.validator.isResolved())  {  return  false;  }	  if(this.validator!=    null)    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol	32	None	replace
104	[BUG]  [BUGGY]  Predicate  <  JSType>  validator  =  this.referencedType.setValidator(validator);  if(validator!=  null)  {  return  false;  }  [CE]  variable  validator  is  already  defined  in  method  setValidator(Predicate<JSType>)  [FE]                                    AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  Predicate  <  JSType>  validator  =  this.referencedType.setValidator(validator);  if(validator!=  null)  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	Predicate  <  JSType>  validator  =  this.referencedType.setValidator(validator);  if(validator!=  null)  {  return  false;  }	  if(this.isResolved())    {    Predicate    <    JSType>    validator    =    this.referencedType.setValidator(validator);    if(validator!=    null)    {    return    false;    }    	non-compiled	[CE]  variable  validator  is  already  defined  in  method  setValidator(Predicate<JSType>)	69	None	replace
105	[BUG]  [BUGGY]  if(this.referencedType!=  null)  {  Predicate  <  JSType>  validator  =  this.referencedType.setValidator(validator);  if(validator!=  null)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                                      AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.referencedType!=  null)  {  Predicate  <  JSType>  validator  =  this.referencedType.setValidator(validator);  if(validator!=  null)  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.referencedType!=  null)  {  Predicate  <  JSType>  validator  =  this.referencedType.setValidator(validator);  if(validator!=  null)  {  return  false;  }	  if(this.isResolved())    {    Predicate    <    JSType>    validator    =    this.referencedType.setValidator(validator);    if(validator!=    null)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
106	[BUG]  [BUGGY]  Predicate  <  JSType>  validator  =  this.referencedType.setValidator(validator);  if(validator  ==  null)  {  return  false;  }  [CE]  variable  validator  is  already  defined  in  method  setValidator(Predicate<JSType>)  [FE]                                        AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  Predicate  <  JSType>  validator  =  this.referencedType.setValidator(validator);  if(validator  ==  null)  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	Predicate  <  JSType>  validator  =  this.referencedType.setValidator(validator);  if(validator  ==  null)  {  return  false;  }	  if(this.isResolved())    {    Predicate    <    JSType>    validator    =    this.referencedType.setValidator(validator);    if(validator!=    null)    {    return    false;    }    	non-compiled	[CE]  variable  validator  is  already  defined  in  method  setValidator(Predicate<JSType>)	69	None	replace
107	[BUG]  [BUGGY]  if(this.referencedType!=  null  ||  this.isResolved())  {  Predicate  <  JSType>  validator  =  this.referencedType.setValidator(validator);  if(validator!=  null)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                                          AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.referencedType!=  null  ||  this.isResolved())  {  Predicate  <  JSType>  validator  =  this.referencedType.setValidator(validator);  if(validator!=  null)  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.referencedType!=  null  ||  this.isResolved())  {  Predicate  <  JSType>  validator  =  this.referencedType.setValidator(validator);  if(validator!=  null)  {  return  false;  }	  if(this.isResolved())    {    Predicate    <    JSType>    validator    =    this.referencedType.setValidator(validator);    if(validator!=    null)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
108	[BUG]  [BUGGY]  this.referencedType.setValidator(validator);  if(validator!=  null)  {  return  false;  }  [CE]  referencedType  has  private  access  in  ProxyObjectType  [FE]                                            AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  this.referencedType.setValidator(validator);  if(validator!=  null)  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	this.referencedType.setValidator(validator);  if(validator!=  null)  {  return  false;  }	  if(this.isResolved())    {    Predicate    <    JSType>    validator    =    this.referencedType.setValidator(validator);    if(validator!=    null)    {    return    false;    }    	non-compiled	[CE]  referencedType  has  private  access  in  ProxyObjectType	69	None	replace
109	[BUG]  [BUGGY]  if(this.referencedType!=  null)  {  Predicate  <  JSType>  validator  =  this.referencedType.setValidator(validator);  if(validator  ==  null)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                                              AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.referencedType!=  null)  {  Predicate  <  JSType>  validator  =  this.referencedType.setValidator(validator);  if(validator  ==  null)  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.referencedType!=  null)  {  Predicate  <  JSType>  validator  =  this.referencedType.setValidator(validator);  if(validator  ==  null)  {  return  false;  }	  if(this.isResolved())    {    Predicate    <    JSType>    validator    =    this.referencedType.setValidator(validator);    if(validator!=    null)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
110	[BUG]  [BUGGY]  Predicate  <?>  validator  =  this.isResolved();  [CE]  variable  validator  is  already  defined  in  method  setValidator(Predicate<JSType>)  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  Predicate  <?>  validator  =  this.isResolved();  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	Predicate  <?>  validator  =  this.isResolved();	  if(this.isResolved())    {    return    super.setValidator(validator);    }    else    {    for(int    i    =    0;    i    <    this.isResolved();    i++)    {    return    super.setValidator(validator);    }    	non-compiled	[CE]  variable  validator  is  already  defined  in  method  setValidator(Predicate<JSType>)	120	None	replace
111	[BUG]  [BUGGY]  predicate.setValidator(validator);  [CE]  cannot  find  symbol  predicate  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  predicate.setValidator(validator);  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	predicate.setValidator(validator);	  if(this.isResolved())    {    return    super.setValidator(validator);    }    else    {    for(int    i    =    0;    i    <    this.isResolved();    i++)    {    return    super.setValidator(validator);    }    	non-compiled	[CE]  cannot  find  symbol  predicate	120	None	replace
112	[BUG]  [BUGGY]  Predicate  <  JSType>  this  =  validator.getPredicate();  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  Predicate  <  JSType>  this  =  validator.getPredicate();  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	Predicate  <  JSType>  this  =  validator.getPredicate();	  if(this.isResolved())    {    return    super.setValidator(validator);    }    else    {    for(int    i    =    0;    i    <    this.isResolved();    i++)    {    return    super.setValidator(validator);    }    	non-compiled	[CE]  not  a  statement	120	None	replace
113	[BUG]  [BUGGY]  Predicate  <?>  this  =  validator.getPredicate();  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  Predicate  <?>  this  =  validator.getPredicate();  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	Predicate  <?>  this  =  validator.getPredicate();	  if(this.isResolved())    {    return    super.setValidator(validator);    }    else    {    for(int    i    =    0;    i    <    this.isResolved();    i++)    {    return    super.setValidator(validator);    }    	non-compiled	[CE]  not  a  statement	120	None	replace
114	[BUG]  [BUGGY]  Predicate  <?>  thisType  =  validator.getReferencedType();  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  Predicate  <?>  thisType  =  validator.getReferencedType();  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	Predicate  <?>  thisType  =  validator.getReferencedType();	  if(this.isResolved())    {    return    super.setValidator(validator);    }    else    {    for(int    i    =    0;    i    <    this.isResolved();    i++)    {    return    super.setValidator(validator);    }    	non-compiled	[CE]  cannot  find  symbol	120	None	replace
115	[BUG]  [BUGGY]  Predicate  <?>  validator  =  this.getReferencedType();  [CE]  variable  validator  is  already  defined  in  method  setValidator(Predicate<JSType>)  [FE]                          AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  Predicate  <?>  validator  =  this.getReferencedType();  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	Predicate  <?>  validator  =  this.getReferencedType();	  if(this.isResolved())    {    return    super.setValidator(validator);    }    else    {    for(int    i    =    0;    i    <    this.isResolved();    i++)    {    return    super.setValidator(validator);    }    	non-compiled	[CE]  variable  validator  is  already  defined  in  method  setValidator(Predicate<JSType>)	120	None	replace
116	[BUG]  [BUGGY]  if(this.isResolved())  {  return  super.setValidator(validator);  }  else  {  Predicate  <  JSType>  propertyNode  =  this.isResolved();  return  super.setValidator(propertyNode);  }  [CE]  incompatible  types  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.isResolved())  {  return  super.setValidator(validator);  }  else  {  Predicate  <  JSType>  propertyNode  =  this.isResolved();  return  super.setValidator(propertyNode);  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.isResolved())  {  return  super.setValidator(validator);  }  else  {  Predicate  <  JSType>  propertyNode  =  this.isResolved();  return  super.setValidator(propertyNode);  }	  return    super.setValidator(validator);    if(this.isResolved())    {    return    super.setValidator(validator);    }    else    {    Predicate    <    JSType>    propertyNode    =    this.isResolved();    return    super.setValidator(propertyNode);    }    	non-compiled	[CE]  incompatible  types	125	None	replace
117	[BUG]  [BUGGY]  Predicate  <  JSType>  propertyNode  =  this.isResolved();  return  super.setValidator(propertyNode);  [CE]  incompatible  types  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  Predicate  <  JSType>  propertyNode  =  this.isResolved();  return  super.setValidator(propertyNode);  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	Predicate  <  JSType>  propertyNode  =  this.isResolved();  return  super.setValidator(propertyNode);	  return    super.setValidator(validator);    if(this.isResolved())    {    return    super.setValidator(validator);    }    else    {    Predicate    <    JSType>    propertyNode    =    this.isResolved();    return    super.setValidator(propertyNode);    }    	non-compiled	[CE]  incompatible  types	125	None	replace
118	[BUG]  [BUGGY]  if(this.isResolved())  {  return  super.setValidator(validator);  }  else  {  Predicate  <  JSType>  propertyNode  =  this.isResolved();  return  super.setValidator(prop  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.isResolved())  {  return  super.setValidator(validator);  }  else  {  Predicate  <  JSType>  propertyNode  =  this.isResolved();  return  super.setValidator(prop  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.isResolved())  {  return  super.setValidator(validator);  }  else  {  Predicate  <  JSType>  propertyNode  =  this.isResolved();  return  super.setValidator(prop	  return    super.setValidator(validator);    if(this.isResolved())    {    return    super.setValidator(validator);    }    else    {    Predicate    <    JSType>    propertyNode    =    this.isResolved();    return    super.setValidator(propertyNode);    }    	non-compiled	[CE]  ')'  expected	125	None	replace
119	[BUG]  [BUGGY]  Predicate  <  JSType>  propertyNode  =  this.isResolved();  return  super.setValidator(validator);  [CE]  incompatible  types  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  Predicate  <  JSType>  propertyNode  =  this.isResolved();  return  super.setValidator(validator);  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	Predicate  <  JSType>  propertyNode  =  this.isResolved();  return  super.setValidator(validator);	  return    super.setValidator(validator);    if(this.isResolved())    {    return    super.setValidator(validator);    }    else    {    Predicate    <    JSType>    propertyNode    =    this.isResolved();    return    super.setValidator(propertyNode);    }    	non-compiled	[CE]  incompatible  types	125	None	replace
120	[BUG]  [BUGGY]  if(this.isResolved())  {  return  super.setValidator(validator);  }  else  {  Predicate  <  JSType>  propertyNode  =  this.isResolved();  return  super.setValidator(property  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.isResolved())  {  return  super.setValidator(validator);  }  else  {  Predicate  <  JSType>  propertyNode  =  this.isResolved();  return  super.setValidator(property  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.isResolved())  {  return  super.setValidator(validator);  }  else  {  Predicate  <  JSType>  propertyNode  =  this.isResolved();  return  super.setValidator(property	  return    super.setValidator(validator);    if(this.isResolved())    {    return    super.setValidator(validator);    }    else    {    Predicate    <    JSType>    propertyNode    =    this.isResolved();    return    super.setValidator(propertyNode);    }    	non-compiled	[CE]  ')'  expected	125	None	replace
121	[BUG]  [BUGGY]  if(this.isResolved())  {  return  super.setValidator(validator);  }  else  {  Predicate  <  JSType>  propertyNode  =  this.isResolved();  return  super.setVal  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.isResolved())  {  return  super.setValidator(validator);  }  else  {  Predicate  <  JSType>  propertyNode  =  this.isResolved();  return  super.setVal  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.isResolved())  {  return  super.setValidator(validator);  }  else  {  Predicate  <  JSType>  propertyNode  =  this.isResolved();  return  super.setVal	  return    super.setValidator(validator);    if(this.isResolved())    {    return    super.setValidator(validator);    }    else    {    Predicate    <    JSType>    propertyNode    =    this.isResolved();    return    super.setValidator(propertyNode);    }    	non-compiled	[CE]  ';'  expected	125	None	replace
122	[BUG]  [BUGGY]  Predicate  <  JSType>  referencedType  =  this.referencedTypes.get(reference);  if(referencedType!=  null)  {  return  true;  }  [CE]  cannot  find  symbol  referencedTypes  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  Predicate  <  JSType>  referencedType  =  this.referencedTypes.get(reference);  if(referencedType!=  null)  {  return  true;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	Predicate  <  JSType>  referencedType  =  this.referencedTypes.get(reference);  if(referencedType!=  null)  {  return  true;  }	  if(this.isResolved())    {    return    false;    }    else    {    Predicate    <    JSType>    referencedType    =    this.referencedTypes.get(reference);    if(referencedType!=    null)    {    return    true;    }    	non-compiled	[CE]  cannot  find  symbol  referencedTypes	100	None	replace
123	[BUG]  [BUGGY]  Predicate  <  JSType>  referencedType  =  this.referencedTypes.get(reference);  if(referencedType  ==  null)  {  return  true;  }  [CE]  cannot  find  symbol  referencedTypes  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  Predicate  <  JSType>  referencedType  =  this.referencedTypes.get(reference);  if(referencedType  ==  null)  {  return  true;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	Predicate  <  JSType>  referencedType  =  this.referencedTypes.get(reference);  if(referencedType  ==  null)  {  return  true;  }	  if(this.isResolved())    {    return    false;    }    else    {    Predicate    <    JSType>    referencedType    =    this.referencedTypes.get(reference);    if(referencedType!=    null)    {    return    true;    }    	non-compiled	[CE]  cannot  find  symbol  referencedTypes	100	None	replace
124	[BUG]  [BUGGY]  Predicate  <  JSType>  referencedType  =  this.referencedTypes.get(reference);  if(referencedType!=  null)  {  return  false;  }  [CE]  cannot  find  symbol  referencedTypes  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  Predicate  <  JSType>  referencedType  =  this.referencedTypes.get(reference);  if(referencedType!=  null)  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	Predicate  <  JSType>  referencedType  =  this.referencedTypes.get(reference);  if(referencedType!=  null)  {  return  false;  }	  if(this.isResolved())    {    return    false;    }    else    {    Predicate    <    JSType>    referencedType    =    this.referencedTypes.get(reference);    if(referencedType!=    null)    {    return    true;    }    	non-compiled	[CE]  cannot  find  symbol  referencedTypes	100	None	replace
125	[BUG]  [BUGGY]  Predicate  <  JSType>  referencedType  =  this.referencedTypes.get(0);  if(referencedType!=  null)  {  return  true;  }  [CE]  cannot  find  symbol  referencedTypes  [FE]                      AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  Predicate  <  JSType>  referencedType  =  this.referencedTypes.get(0);  if(referencedType!=  null)  {  return  true;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	Predicate  <  JSType>  referencedType  =  this.referencedTypes.get(0);  if(referencedType!=  null)  {  return  true;  }	  if(this.isResolved())    {    return    false;    }    else    {    Predicate    <    JSType>    referencedType    =    this.referencedTypes.get(reference);    if(referencedType!=    null)    {    return    true;    }    	non-compiled	[CE]  cannot  find  symbol  referencedTypes	100	None	replace
126	[BUG]  [BUGGY]  this.referencedTypes.put(reference);  if(referencedType!=  null)  {  return  true;  }  [CE]  cannot  find  symbol  referencedTypes  [FE]                        AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  this.referencedTypes.put(reference);  if(referencedType!=  null)  {  return  true;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	this.referencedTypes.put(reference);  if(referencedType!=  null)  {  return  true;  }	  if(this.isResolved())    {    return    false;    }    else    {    Predicate    <    JSType>    referencedType    =    this.referencedTypes.get(reference);    if(referencedType!=    null)    {    return    true;    }    	non-compiled	[CE]  cannot  find  symbol  referencedTypes	100	None	replace
127	[BUG]  [BUGGY]  if(this.referencedTypes!=  null)  {  if(!this.isResolved())  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.referencedTypes!=  null)  {  if(!this.isResolved())  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.referencedTypes!=  null)  {  if(!this.isResolved())  {  return  false;  }	  if(this.isResolved())    {    return    false;    }    else    {    Predicate    <    JSType>    referencedType    =    this.referencedTypes.get(reference);    if(referencedType!=    null)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	100	None	replace
128	[BUG]  [BUGGY]  if(this.referencedType!=  null)  {  if(!this.isResolved())  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.referencedType!=  null)  {  if(!this.isResolved())  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.referencedType!=  null)  {  if(!this.isResolved())  {  return  false;  }	  if(this.isResolved())    {    return    false;    }    else    {    Predicate    <    JSType>    referencedType    =    this.referencedTypes.get(reference);    if(referencedType!=    null)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	100	None	replace
129	[BUG]  [BUGGY]  timeout  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  return(validator!=  null  ||  this.isResolved());  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	add	return(validator!=  null  ||  this.isResolved());	  return(this.isResolved()    ||    validator!=    null);    timeout    	compilable	timeout	107	1	replace
130	[BUG]  [BUGGY]  return(validator!=  null  ||  this.isResolved());  timeout  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  return(validator!=  null  ||  this.isResolved());  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	return(validator!=  null  ||  this.isResolved());	  return(this.isResolved()    ||    validator!=    null);    timeout    	compilable	timeout	107	1	replace
131	[BUG]  [BUGGY]  timeout  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  return(validator  ==  null  ||  this.isResolved());  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	add	return(validator  ==  null  ||  this.isResolved());	  return(this.isResolved()    ||    validator!=    null);    timeout    	compilable	timeout	107	1	replace
132	[BUG]  [BUGGY]  return(validator  ==  null  ||  this.isResolved());  timeout  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  return(validator  ==  null  ||  this.isResolved());  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	return(validator  ==  null  ||  this.isResolved());	  return(this.isResolved()    ||    validator!=    null);    timeout    	compilable	timeout	107	1	replace
133	[BUG]  [BUGGY]  if(!this.isForwardDeclared()  ||  isForwardDeclared)  {  return  true;  }  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(!this.isForwardDeclared()  ||  isForwardDeclared)  {  return  true;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(!this.isForwardDeclared()  ||  isForwardDeclared)  {  return  true;  }	  if(!this.isForwardDeclared())    {    return    true;    }    	non-compiled	[CE]  cannot  find  symbol	103	None	replace
134	[BUG]  [BUGGY]  if(!this.isForwardDeclared()  ||  this.isResolved())  {  return  true;  }  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(!this.isForwardDeclared()  ||  this.isResolved())  {  return  true;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(!this.isForwardDeclared()  ||  this.isResolved())  {  return  true;  }	  if(!this.isForwardDeclared())    {    return    true;    }    	non-compiled	[CE]  cannot  find  symbol	103	None	replace
135	[BUG]  [BUGGY]  if(!this.isForwardDeclared()  ||  validator.isResolved())  {  return  true;  }  [CE]  cannot  find  symbol  [FE]                          AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(!this.isForwardDeclared()  ||  validator.isResolved())  {  return  true;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(!this.isForwardDeclared()  ||  validator.isResolved())  {  return  true;  }	  if(!this.isForwardDeclared())    {    return    true;    }    	non-compiled	[CE]  cannot  find  symbol	103	None	replace
136	[BUG]  [BUGGY]  if(!this.isForwardDeclared()  ||  validator.isInferred())  {  return  true;  }  [CE]  cannot  find  symbol  [FE]                            AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(!this.isForwardDeclared()  ||  validator.isInferred())  {  return  true;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(!this.isForwardDeclared()  ||  validator.isInferred())  {  return  true;  }	  if(!this.isForwardDeclared())    {    return    true;    }    	non-compiled	[CE]  cannot  find  symbol	103	None	replace
137	[BUG]  [BUGGY]  if(this.slotType!=  null)return  true;  }  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.slotType!=  null)return  true;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.slotType!=  null)return  true;  }	  if(this.slotType!=    null)return    false;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	146	None	replace
138	[BUG]  [BUGGY]  if(this.slotType  ==  null)return  true;  }  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.slotType  ==  null)return  true;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.slotType  ==  null)return  true;  }	  if(this.slotType!=    null)return    false;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	146	None	replace
139	[BUG]  [BUGGY]  if(this.slotType  ==  null)return  false;  }  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.slotType  ==  null)return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.slotType  ==  null)return  false;  }	  if(this.slotType!=    null)return    false;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	146	None	replace
140	[BUG]  [BUGGY]  if(this.slotType!=  null  ||  this.slotType.isUnknownType())return  false;  }  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.slotType!=  null  ||  this.slotType.isUnknownType())return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.slotType!=  null  ||  this.slotType.isUnknownType())return  false;  }	  if(this.slotType!=    null)return    false;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	146	None	replace
141	[BUG]  [BUGGY]  if(this.slotType  ==  null  ||  this.slotType!=  null)return  false;  }  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.slotType  ==  null  ||  this.slotType!=  null)return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.slotType  ==  null  ||  this.slotType!=  null)return  false;  }	  if(this.slotType!=    null)return    false;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	146	None	replace
142	[BUG]  [BUGGY]  if(this.slotType!=  null  ||  this.slotType  ==  null)return  false;  }  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.slotType!=  null  ||  this.slotType  ==  null)return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.slotType!=  null  ||  this.slotType  ==  null)return  false;  }	  if(this.slotType!=    null)return    false;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	146	None	replace
143	[BUG]  [BUGGY]  Predicate  <  JSType>  property  =  this.getProperty(propertyName);  if(property!=  null)  {  return  super.setValidator(property);  }  [CE]  cannot  find  symbol  propertyName  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  Predicate  <  JSType>  property  =  this.getProperty(propertyName);  if(property!=  null)  {  return  super.setValidator(property);  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	Predicate  <  JSType>  property  =  this.getProperty(propertyName);  if(property!=  null)  {  return  super.setValidator(property);  }	  return    super.setValidator(validator);    if(this.isResolved())    {    Predicate    <    JSType>    property    =    this.getProperty(propertyName);    if(property!=    null)    {    return    super.setValidator(property);    }    	non-compiled	[CE]  cannot  find  symbol  propertyName	78	None	replace
144	[BUG]  [BUGGY]  if(this.isResolved())  {  Predicate  <  JSType>  property  =  this.getProperty(propertyName);  if(property!=  null)  {  return  super.setValidator(property);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.isResolved())  {  Predicate  <  JSType>  property  =  this.getProperty(propertyName);  if(property!=  null)  {  return  super.setValidator(property);  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.isResolved())  {  Predicate  <  JSType>  property  =  this.getProperty(propertyName);  if(property!=  null)  {  return  super.setValidator(property);  }	  return    super.setValidator(validator);    if(this.isResolved())    {    Predicate    <    JSType>    property    =    this.getProperty(propertyName);    if(property!=    null)    {    return    super.setValidator(property);    }    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
145	[BUG]  [BUGGY]  PropertyContinuation  <  JSType>  property  =  this.getProperty(propertyName);  if(property!=  null)  {  return  super.setValidator(property);  }  [CE]  type  PropertyContinuation  does  not  take  parameters  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  PropertyContinuation  <  JSType>  property  =  this.getProperty(propertyName);  if(property!=  null)  {  return  super.setValidator(property);  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	PropertyContinuation  <  JSType>  property  =  this.getProperty(propertyName);  if(property!=  null)  {  return  super.setValidator(property);  }	  return    super.setValidator(validator);    if(this.isResolved())    {    Predicate    <    JSType>    property    =    this.getProperty(propertyName);    if(property!=    null)    {    return    super.setValidator(property);    }    	non-compiled	[CE]  type  PropertyContinuation  does  not  take  parameters	78	None	replace
146	[BUG]  [BUGGY]  Predicate  <  JSType>  property  =  this.getProperty(propertyName);  if(property  ==  null)  {  return  super.setValidator(property);  }  [CE]  cannot  find  symbol  propertyName  [FE]                      AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  Predicate  <  JSType>  property  =  this.getProperty(propertyName);  if(property  ==  null)  {  return  super.setValidator(property);  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	Predicate  <  JSType>  property  =  this.getProperty(propertyName);  if(property  ==  null)  {  return  super.setValidator(property);  }	  return    super.setValidator(validator);    if(this.isResolved())    {    Predicate    <    JSType>    property    =    this.getProperty(propertyName);    if(property!=    null)    {    return    super.setValidator(property);    }    	non-compiled	[CE]  cannot  find  symbol  propertyName	78	None	replace
147	[BUG]  [BUGGY]  Predicate  <  JSType>  property  =  this.getPropertyName(property);  if(property!=  null)  {  return  super.setValidator(property);  }  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  Predicate  <  JSType>  property  =  this.getPropertyName(property);  if(property!=  null)  {  return  super.setValidator(property);  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	Predicate  <  JSType>  property  =  this.getPropertyName(property);  if(property!=  null)  {  return  super.setValidator(property);  }	  return    super.setValidator(validator);    if(this.isResolved())    {    Predicate    <    JSType>    property    =    this.getProperty(propertyName);    if(property!=    null)    {    return    super.setValidator(property);    }    	non-compiled	[CE]  cannot  find  symbol	78	None	replace
148	[BUG]  [BUGGY]  Predicate  <  JSType>  property  =  this.getProperty(propertyName);  if(property!=  null)  {  return  super.setValidator(validator);  }  [CE]  cannot  find  symbol  propertyName  [FE]                          AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  Predicate  <  JSType>  property  =  this.getProperty(propertyName);  if(property!=  null)  {  return  super.setValidator(validator);  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	Predicate  <  JSType>  property  =  this.getProperty(propertyName);  if(property!=  null)  {  return  super.setValidator(validator);  }	  return    super.setValidator(validator);    if(this.isResolved())    {    Predicate    <    JSType>    property    =    this.getProperty(propertyName);    if(property!=    null)    {    return    super.setValidator(property);    }    	non-compiled	[CE]  cannot  find  symbol  propertyName	78	None	replace
149	[BUG]  [BUGGY]  if(this.forAnnotations!=  null)return  true;  }  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.forAnnotations!=  null)return  true;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.forAnnotations!=  null)return  true;  }	  if(this.forAnnotations!=    null)return    false;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	149	None	replace
150	[BUG]  [BUGGY]  if(this.forAnnotations  ==  null)return  true;  }  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.forAnnotations  ==  null)return  true;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.forAnnotations  ==  null)return  true;  }	  if(this.forAnnotations!=    null)return    false;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	149	None	replace
151	[BUG]  [BUGGY]  if(this.forAnnotations!=  null  ||  this.forAnnotations.size()  ==  0)return  false;  }  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.forAnnotations!=  null  ||  this.forAnnotations.size()  ==  0)return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.forAnnotations!=  null  ||  this.forAnnotations.size()  ==  0)return  false;  }	  if(this.forAnnotations!=    null)return    false;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	149	None	replace
152	[BUG]  [BUGGY]  if(this.forAnnotations!=  null  ||  this.forAnnotations.contains(validator))  return  false;  }  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.forAnnotations!=  null  ||  this.forAnnotations.contains(validator))  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.forAnnotations!=  null  ||  this.forAnnotations.contains(validator))  return  false;  }	  if(this.forAnnotations!=    null)return    false;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	149	None	replace
153	[BUG]  [BUGGY]  if(this.forAnnotations!=  null)return  true;  [CE]  cannot  find  symbol  forAnnotations  [FE]                                AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.forAnnotations!=  null)return  true;  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.forAnnotations!=  null)return  true;	  if(this.forAnnotations!=    null)return    false;    }    	non-compiled	[CE]  cannot  find  symbol  forAnnotations	149	None	replace
154	[BUG]  [BUGGY]  if(!this.isValidator()  ||  validator.isValidator())  {  return  true;  }  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(!this.isValidator()  ||  validator.isValidator())  {  return  true;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(!this.isValidator()  ||  validator.isValidator())  {  return  true;  }	  if(!this.isValidator())    {    return    true;    }    	non-compiled	[CE]  cannot  find  symbol	15	None	replace
155	[BUG]  [BUGGY]  if(!this.validator.isValidator())  {  return  true;  }  [CE]  cannot  find  symbol  [FE]                          AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(!this.validator.isValidator())  {  return  true;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(!this.validator.isValidator())  {  return  true;  }	  if(!this.isValidator())    {    return    true;    }    	non-compiled	[CE]  cannot  find  symbol	15	None	replace
156	[BUG]  [BUGGY]  if(!this.isValidator()  ||  this.isResolved())  {  return  true;  }  [CE]  cannot  find  symbol  [FE]                            AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(!this.isValidator()  ||  this.isResolved())  {  return  true;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(!this.isValidator()  ||  this.isResolved())  {  return  true;  }	  if(!this.isValidator())    {    return    true;    }    	non-compiled	[CE]  cannot  find  symbol	15	None	replace
157	[BUG]  [BUGGY]  if(!this.isValidator()  ||  this.validator.isValidator())  {  return  true;  }  [CE]  cannot  find  symbol  [FE]                              AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(!this.isValidator()  ||  this.validator.isValidator())  {  return  true;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(!this.isValidator()  ||  this.validator.isValidator())  {  return  true;  }	  if(!this.isValidator())    {    return    true;    }    	non-compiled	[CE]  cannot  find  symbol	15	None	replace
158	[BUG]  [BUGGY]  Predicate  <  JSType>  referencedType  =  validator.getReferencedType();  if(referencedType!=  null)  {  return  referencedType.setValidator(referencedType);  }  [CE]  cannot  find  symbol  [FE]                                  AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  Predicate  <  JSType>  referencedType  =  validator.getReferencedType();  if(referencedType!=  null)  {  return  referencedType.setValidator(referencedType);  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	Predicate  <  JSType>  referencedType  =  validator.getReferencedType();  if(referencedType!=  null)  {  return  referencedType.setValidator(referencedType);  }	  if(this.isResolved())    {    Predicate    <    JSType>    referencedType    =    validator.getReferencedType();    if(referencedType!=    null)    {    return    referencedType.setValidator(referencedType);    }    	non-compiled	[CE]  cannot  find  symbol	68	None	replace
159	[BUG]  [BUGGY]  if(validator!=  null)  {  if(this.isResolved())  {  Predicate  <  JSType>  referencedType  =  validator.getReferencedType();  if(referencedType!=  null)  {  return  referencedType.setValidator(referencedType);  }  [CE]  illegal  start  of  expression  [FE]                                    AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(validator!=  null)  {  if(this.isResolved())  {  Predicate  <  JSType>  referencedType  =  validator.getReferencedType();  if(referencedType!=  null)  {  return  referencedType.setValidator(referencedType);  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(validator!=  null)  {  if(this.isResolved())  {  Predicate  <  JSType>  referencedType  =  validator.getReferencedType();  if(referencedType!=  null)  {  return  referencedType.setValidator(referencedType);  }	  if(this.isResolved())    {    Predicate    <    JSType>    referencedType    =    validator.getReferencedType();    if(referencedType!=    null)    {    return    referencedType.setValidator(referencedType);    }    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
160	[BUG]  [BUGGY]  if(validator!=  null)  {  if(this.isResolved())  {  Predicate  <  JSType>  referencedType  =  validator.getReferencedType();  if(referencedType!=  null)  {  return  referencedType.setValidator(referencedType);  }  }  [CE]  illegal  start  of  expression  [FE]                                      AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(validator!=  null)  {  if(this.isResolved())  {  Predicate  <  JSType>  referencedType  =  validator.getReferencedType();  if(referencedType!=  null)  {  return  referencedType.setValidator(referencedType);  }  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(validator!=  null)  {  if(this.isResolved())  {  Predicate  <  JSType>  referencedType  =  validator.getReferencedType();  if(referencedType!=  null)  {  return  referencedType.setValidator(referencedType);  }  }	  if(this.isResolved())    {    Predicate    <    JSType>    referencedType    =    validator.getReferencedType();    if(referencedType!=    null)    {    return    referencedType.setValidator(referencedType);    }    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
161	[BUG]  [BUGGY]  Predicate  <  JSType>  referencedType  =  validator.getReferencedType();  if(referencedType  ==  null)  {  return  referencedType.setValidator(referencedType);  }  [CE]  cannot  find  symbol  [FE]                                        AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  Predicate  <  JSType>  referencedType  =  validator.getReferencedType();  if(referencedType  ==  null)  {  return  referencedType.setValidator(referencedType);  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	Predicate  <  JSType>  referencedType  =  validator.getReferencedType();  if(referencedType  ==  null)  {  return  referencedType.setValidator(referencedType);  }	  if(this.isResolved())    {    Predicate    <    JSType>    referencedType    =    validator.getReferencedType();    if(referencedType!=    null)    {    return    referencedType.setValidator(referencedType);    }    	non-compiled	[CE]  cannot  find  symbol	68	None	replace
162	[BUG]  [BUGGY]  if(this.isSlotType())  {  Predicate  <  JSType>  referencedType  =  validator.getReferencedType();  if(referencedType  ==  null)  {  return  referencedType.setValidator(validator);  }  [CE]  illegal  start  of  expression  [FE]                                AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.isSlotType())  {  Predicate  <  JSType>  referencedType  =  validator.getReferencedType();  if(referencedType  ==  null)  {  return  referencedType.setValidator(validator);  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.isSlotType())  {  Predicate  <  JSType>  referencedType  =  validator.getReferencedType();  if(referencedType  ==  null)  {  return  referencedType.setValidator(validator);  }	  if(this.isResolved())    {    Predicate    <    JSType>    referencedType    =    validator.getReferencedType();    if(referencedType    ==    null)    {    return    referencedType.setValidator(validator);    }    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
163	[BUG]  [BUGGY]  if(this.forAnnotations  ==  validator)  {  return  false;  }  [CE]  cannot  find  symbol  forAnnotations  [FE]            AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.forAnnotations  ==  validator)  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.forAnnotations  ==  validator)  {  return  false;  }	  if(this.forAnnotations!=    forAnnotations)    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol  forAnnotations	44	None	replace
164	[BUG]  [BUGGY]  if(this.forAnnotations!=  invalidator)  {  return  false;  }  [CE]  cannot  find  symbol  forAnnotations  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.forAnnotations!=  invalidator)  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.forAnnotations!=  invalidator)  {  return  false;  }	  if(this.forAnnotations!=    forAnnotations)    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol  forAnnotations	44	None	replace
165	[BUG]  [BUGGY]  if(this.forAnnotations  >=  validator)  {  return  false;  }  [CE]  cannot  find  symbol  forAnnotations  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.forAnnotations  >=  validator)  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.forAnnotations  >=  validator)  {  return  false;  }	  if(this.forAnnotations!=    forAnnotations)    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol  forAnnotations	44	None	replace
166	[BUG]  [BUGGY]  if(this.forAnnotations!=  validators)  {  return  false;  }  [CE]  cannot  find  symbol  forAnnotations  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.forAnnotations!=  validators)  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.forAnnotations!=  validators)  {  return  false;  }	  if(this.forAnnotations!=    forAnnotations)    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol  forAnnotations	44	None	replace
167	[BUG]  [BUGGY]  if(this.isReferenced())  {  JSType  referencedType  =  getReferencedType(referenced);  if(referencedType!=  null)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.isReferenced())  {  JSType  referencedType  =  getReferencedType(referenced);  if(referencedType!=  null)  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.isReferenced())  {  JSType  referencedType  =  getReferencedType(referenced);  if(referencedType!=  null)  {  return  false;  }	  return    false;    if(this.isResolved())    {    JSType    referencedType    =    getReferencedType(referenced);    if(referencedType!=    null)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
168	[BUG]  [BUGGY]  if(this.isReferencedType())  {  JSType  referencedType  =  getReferencedType(referenced);  if(referencedType!=  null)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.isReferencedType())  {  JSType  referencedType  =  getReferencedType(referenced);  if(referencedType!=  null)  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.isReferencedType())  {  JSType  referencedType  =  getReferencedType(referenced);  if(referencedType!=  null)  {  return  false;  }	  return    false;    if(this.isResolved())    {    JSType    referencedType    =    getReferencedType(referenced);    if(referencedType!=    null)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
169	[BUG]  [BUGGY]  Predicate  <  JSType>  referencedType  =  getReferencedType(referenced);  if(referencedType!=  null)  {  return  false;  }  [CE]  cannot  find  symbol  referenced  [FE]                      AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  Predicate  <  JSType>  referencedType  =  getReferencedType(referenced);  if(referencedType!=  null)  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	Predicate  <  JSType>  referencedType  =  getReferencedType(referenced);  if(referencedType!=  null)  {  return  false;  }	  return    false;    if(this.isResolved())    {    JSType    referencedType    =    getReferencedType(referenced);    if(referencedType!=    null)    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol  referenced	87	None	replace
170	[BUG]  [BUGGY]  Predicate  <  JSType>  referencedType  =  getReferencedType(validator);  if(referencedType!=  null)  {  return  false;  }  [CE]  method  getReferencedType  in  class  NamedType  cannot  be  applied  to  given  types;  [FE]                        AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  Predicate  <  JSType>  referencedType  =  getReferencedType(validator);  if(referencedType!=  null)  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	Predicate  <  JSType>  referencedType  =  getReferencedType(validator);  if(referencedType!=  null)  {  return  false;  }	  return    false;    if(this.isResolved())    {    JSType    referencedType    =    getReferencedType(referenced);    if(referencedType!=    null)    {    return    false;    }    	non-compiled	[CE]  method  getReferencedType  in  class  NamedType  cannot  be  applied  to  given  types;	87	None	replace
171	[BUG]  [BUGGY]  timeout  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.isResolved())  {  return  super.setValidator(validator);  }  else  {  return  super.setValidator(validator);  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	add	if(this.isResolved())  {  return  super.setValidator(validator);  }  else  {  return  super.setValidator(validator);  }	  return    super.setValidator(validator);    if(this.isResolved())    {    return    super.setValidator(validator);    }    else    {    return    super.setValidator(validator);    }    	compilable	timeout	79	1	replace
172	[BUG]  [BUGGY]  if(this.isResolved())  {  return  super.setValidator(validator);  }  else  {  return  super.setValidator(validator);  }  timeout  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.isResolved())  {  return  super.setValidator(validator);  }  else  {  return  super.setValidator(validator);  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.isResolved())  {  return  super.setValidator(validator);  }  else  {  return  super.setValidator(validator);  }	  return    super.setValidator(validator);    if(this.isResolved())    {    return    super.setValidator(validator);    }    else    {    return    super.setValidator(validator);    }    	compilable	timeout	79	1	replace
173	[BUG]  [BUGGY]  Predicate  <?>  property  =  this.referencedType.getProperty(propertyName);  [CE]  cannot  find  symbol  propertyName  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  Predicate  <?>  property  =  this.referencedType.getProperty(propertyName);  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	Predicate  <?>  property  =  this.referencedType.getProperty(propertyName);	  return    super.setValidator(validator);    if(this.isResolved())    {    return    super.setValidator(validator);    }    else    {    return    super.setValidator(validator);    }    	non-compiled	[CE]  cannot  find  symbol  propertyName	79	None	replace
174	[BUG]  [BUGGY]  Predicate  <?>  property  =  this.referencedType.getProperty( "property ");  [CE]  referencedType  has  private  access  in  ProxyObjectType  [FE]                      AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  Predicate  <?>  property  =  this.referencedType.getProperty( "property ");  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	Predicate  <?>  property  =  this.referencedType.getProperty( "property ");	  return    super.setValidator(validator);    if(this.isResolved())    {    return    super.setValidator(validator);    }    else    {    return    super.setValidator(validator);    }    	non-compiled	[CE]  referencedType  has  private  access  in  ProxyObjectType	79	None	replace
175	[BUG]  [BUGGY]  if(this.isResolved())  {  return  super.setValidator(validator);  }  else  {  return  super.setValidator(validator;  }  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.isResolved())  {  return  super.setValidator(validator);  }  else  {  return  super.setValidator(validator;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.isResolved())  {  return  super.setValidator(validator);  }  else  {  return  super.setValidator(validator;  }	  return    super.setValidator(validator);    if(this.isResolved())    {    return    super.setValidator(validator);    }    else    {    return    super.setValidator(validator);    }    	non-compiled	[CE]  ')'  expected	79	None	replace
176	[BUG]  [BUGGY]  if(this.isResolved())  {  return  super.setValidator(validator);  }  else  {  return  super.setValidator[validator];  }  [CE]  cannot  find  symbol  setValidator  [FE]                          AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.isResolved())  {  return  super.setValidator(validator);  }  else  {  return  super.setValidator[validator];  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.isResolved())  {  return  super.setValidator(validator);  }  else  {  return  super.setValidator[validator];  }	  return    super.setValidator(validator);    if(this.isResolved())    {    return    super.setValidator(validator);    }    else    {    return    super.setValidator(validator);    }    	non-compiled	[CE]  cannot  find  symbol  setValidator	79	None	replace
177	[BUG]  [BUGGY]  if(this.forAnnotations)  {  return  false;  }  [CE]  cannot  find  symbol  forAnnotations  [FE]            AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.forAnnotations)  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.forAnnotations)  {  return  false;  }	  if(isForwardDeclared)    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol  forAnnotations	153	None	replace
178	[BUG]  [BUGGY]  if(this.ignoreForwardDeclared)  {  return  false;  }  [CE]  cannot  find  symbol  ignoreForwardDeclared  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.ignoreForwardDeclared)  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.ignoreForwardDeclared)  {  return  false;  }	  if(isForwardDeclared)    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol  ignoreForwardDeclared	153	None	replace
179	[BUG]  [BUGGY]  if(this.isForwardDeclared)  {  return  false;  }  [CE]  cannot  find  symbol  isForwardDeclared  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.isForwardDeclared)  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.isForwardDeclared)  {  return  false;  }	  if(isForwardDeclared)    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol  isForwardDeclared	153	None	replace
180	[BUG]  [BUGGY]  if(this.inferred)  {  return  false;  }  [CE]  cannot  find  symbol  inferred  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.inferred)  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.inferred)  {  return  false;  }	  if(isForwardDeclared)    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol  inferred	153	None	replace
181	[BUG]  [BUGGY]  if(validator)  {  return  false;  }  [CE]  incompatible  types  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(validator)  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(validator)  {  return  false;  }	  if(isForwardDeclared)    {    return    false;    }    	non-compiled	[CE]  incompatible  types	153	None	replace
182	[BUG]  [BUGGY]  if(this.validator!=  validator)  {  return  false;  }  [CE]  missing  return  statement  [FE]                          AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.validator!=  validator)  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.validator!=  validator)  {  return  false;  }	  if(this.validator    ==    null)    {    return    false;    }    	non-compiled	[CE]  missing  return  statement	150	None	replace
183	[BUG]  [BUGGY]  forAnnotations  <  propertyNode  =  propertyNode.getFirstChild();  if(!this.isResolved())  {  return  true;  }  [CE]  >  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  forAnnotations  <  propertyNode  =  propertyNode.getFirstChild();  if(!this.isResolved())  {  return  true;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	forAnnotations  <  propertyNode  =  propertyNode.getFirstChild();  if(!this.isResolved())  {  return  true;  }	  return    false;    if(validator!=    null)    {    forAnnotations    <    propertyNode    =    propertyNode.getFirstChild();    if(!this.isResolved())    {    return    true;    }    	non-compiled	[CE]  >  expected	145	None	replace
184	[BUG]  [BUGGY]  if(this.forAnnotations!=  null)  {  return  false;  forAnnotations  <  propertyNode  =  propertyNode.getFirstChild();  if(!this.isResolved())  {  return  true;  }  [CE]  >  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.forAnnotations!=  null)  {  return  false;  forAnnotations  <  propertyNode  =  propertyNode.getFirstChild();  if(!this.isResolved())  {  return  true;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.forAnnotations!=  null)  {  return  false;  forAnnotations  <  propertyNode  =  propertyNode.getFirstChild();  if(!this.isResolved())  {  return  true;  }	  return    false;    if(validator!=    null)    {    forAnnotations    <    propertyNode    =    propertyNode.getFirstChild();    if(!this.isResolved())    {    return    true;    }    	non-compiled	[CE]  >  expected	145	None	replace
185	[BUG]  [BUGGY]  forAnnotations  <  propertyNode  =  propertyNode.getFirstChild();  if(!this.isResolved())  {  return  false;  }  [CE]  >  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  forAnnotations  <  propertyNode  =  propertyNode.getFirstChild();  if(!this.isResolved())  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	forAnnotations  <  propertyNode  =  propertyNode.getFirstChild();  if(!this.isResolved())  {  return  false;  }	  return    false;    if(validator!=    null)    {    forAnnotations    <    propertyNode    =    propertyNode.getFirstChild();    if(!this.isResolved())    {    return    true;    }    	non-compiled	[CE]  >  expected	145	None	replace
186	[BUG]  [BUGGY]  if(this.forAnnotations!=  null)  {  return  false;  forAnnotations  <  propertyNode  =  propertyNode.getFirstChild();  if(!this.isResolved())  {  return  false;  }  [CE]  >  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.forAnnotations!=  null)  {  return  false;  forAnnotations  <  propertyNode  =  propertyNode.getFirstChild();  if(!this.isResolved())  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.forAnnotations!=  null)  {  return  false;  forAnnotations  <  propertyNode  =  propertyNode.getFirstChild();  if(!this.isResolved())  {  return  false;  }	  return    false;    if(validator!=    null)    {    forAnnotations    <    propertyNode    =    propertyNode.getFirstChild();    if(!this.isResolved())    {    return    true;    }    	non-compiled	[CE]  >  expected	145	None	replace
187	[BUG]  [BUGGY]  if(this.propertyContinuations!=  null)  {  return  true;  }  [CE]  missing  return  statement  [FE]                      AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.propertyContinuations!=  null)  {  return  true;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.propertyContinuations!=  null)  {  return  true;  }	  if(this.propertyContinuations!=    null)    {    return    false;    }    	non-compiled	[CE]  missing  return  statement	11	None	replace
188	[BUG]  [BUGGY]  if(this.propertyContinuations  ==  null)  {  return  true;  }  [CE]  missing  return  statement  [FE]                        AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.propertyContinuations  ==  null)  {  return  true;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.propertyContinuations  ==  null)  {  return  true;  }	  if(this.propertyContinuations!=    null)    {    return    false;    }    	non-compiled	[CE]  missing  return  statement	11	None	replace
189	[BUG]  [BUGGY]  if(this.propertyContinuations!=  null  ||  this.propertyContinuations.size()  ==  0)  {  return  false;  }  [CE]  missing  return  statement  [FE]                          AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.propertyContinuations!=  null  ||  this.propertyContinuations.size()  ==  0)  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.propertyContinuations!=  null  ||  this.propertyContinuations.size()  ==  0)  {  return  false;  }	  if(this.propertyContinuations!=    null)    {    return    false;    }    	non-compiled	[CE]  missing  return  statement	11	None	replace
190	[BUG]  [BUGGY]  if(this.propertyContinuations!=  null  ||  this.propertyContinuations.isEmpty())  {  return  false;  }  [CE]  missing  return  statement  [FE]                            AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.propertyContinuations!=  null  ||  this.propertyContinuations.isEmpty())  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.propertyContinuations!=  null  ||  this.propertyContinuations.isEmpty())  {  return  false;  }	  if(this.propertyContinuations!=    null)    {    return    false;    }    	non-compiled	[CE]  missing  return  statement	11	None	replace
191	[BUG]  [BUGGY]  if(this.propertyContinuations!=  null  ||  this.propertyContinuations.contains(validator))  {  return  false;  }  [CE]  missing  return  statement  [FE]                              AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.propertyContinuations!=  null  ||  this.propertyContinuations.contains(validator))  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.propertyContinuations!=  null  ||  this.propertyContinuations.contains(validator))  {  return  false;  }	  if(this.propertyContinuations!=    null)    {    return    false;    }    	non-compiled	[CE]  missing  return  statement	11	None	replace
192	[BUG]  [BUGGY]  if(!this.isValidation())  {  return  false;  }  [CE]  cannot  find  symbol  [FE]                            AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(!this.isValidation())  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(!this.isValidation())  {  return  false;  }	  if(!this.isValidation())    {    return    true;    }    	non-compiled	[CE]  cannot  find  symbol	17	None	replace
193	[BUG]  [BUGGY]  if(!this.isValidation()  ||  validator.isValidation())  {  return  true;  }  [CE]  cannot  find  symbol  [FE]                              AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(!this.isValidation()  ||  validator.isValidation())  {  return  true;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(!this.isValidation()  ||  validator.isValidation())  {  return  true;  }	  if(!this.isValidation())    {    return    true;    }    	non-compiled	[CE]  cannot  find  symbol	17	None	replace
194	[BUG]  [BUGGY]  if(!this.isValidation()  ||  this.validator.isValidation())  {  return  true;  }  [CE]  cannot  find  symbol  [FE]                                AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(!this.isValidation()  ||  this.validator.isValidation())  {  return  true;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(!this.isValidation()  ||  this.validator.isValidation())  {  return  true;  }	  if(!this.isValidation())    {    return    true;    }    	non-compiled	[CE]  cannot  find  symbol	17	None	replace
195	[BUG]  [BUGGY]  if(!this.validator.isValidation())  {  return  true;  }  [CE]  cannot  find  symbol  [FE]                                  AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(!this.validator.isValidation())  {  return  true;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(!this.validator.isValidation())  {  return  true;  }	  if(!this.isValidation())    {    return    true;    }    	non-compiled	[CE]  cannot  find  symbol	17	None	replace
196	[BUG]  [BUGGY]  if(this.isValidation())  {  return  true;  }  [CE]  cannot  find  symbol  [FE]                                    AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.isValidation())  {  return  true;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.isValidation())  {  return  true;  }	  if(!this.isValidation())    {    return    true;    }    	non-compiled	[CE]  cannot  find  symbol	17	None	replace
197	[BUG]  [BUGGY]  if(!this.isValidation()  ||  this.isResolved())  {  return  true;  }  [CE]  cannot  find  symbol  [FE]                                      AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(!this.isValidation()  ||  this.isResolved())  {  return  true;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(!this.isValidation()  ||  this.isResolved())  {  return  true;  }	  if(!this.isValidation())    {    return    true;    }    	non-compiled	[CE]  cannot  find  symbol	17	None	replace
198	[BUG]  [BUGGY]  Predicate  <  JSType>  propertyNode  =  this.getPropertyNode(propertyName);  if(propertyNode!=  null)  {  return  propertyNode.setValidator(valueNode);  }  [CE]  cannot  find  symbol  propertyName  [FE]                                AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  Predicate  <  JSType>  propertyNode  =  this.getPropertyNode(propertyName);  if(propertyNode!=  null)  {  return  propertyNode.setValidator(valueNode);  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	Predicate  <  JSType>  propertyNode  =  this.getPropertyNode(propertyName);  if(propertyNode!=  null)  {  return  propertyNode.setValidator(valueNode);  }	  if(this.isResolved())    {    Predicate    <    JSType>    propertyNode    =    this.getPropertyNode(propertyName);    if(propertyNode!=    null)    {    return    propertyNode.setValidator(valueNode);    }    	non-compiled	[CE]  cannot  find  symbol  propertyName	111	None	replace
199	[BUG]  [BUGGY]  Predicate  <  JSType>  propertyNode  =  this.getPropertyNode(propertyName);  if(propertyNode  ==  null)  {  return  propertyNode.setValidator(valueNode);  }  [CE]  cannot  find  symbol  propertyName  [FE]                                  AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  Predicate  <  JSType>  propertyNode  =  this.getPropertyNode(propertyName);  if(propertyNode  ==  null)  {  return  propertyNode.setValidator(valueNode);  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	Predicate  <  JSType>  propertyNode  =  this.getPropertyNode(propertyName);  if(propertyNode  ==  null)  {  return  propertyNode.setValidator(valueNode);  }	  if(this.isResolved())    {    Predicate    <    JSType>    propertyNode    =    this.getPropertyNode(propertyName);    if(propertyNode!=    null)    {    return    propertyNode.setValidator(valueNode);    }    	non-compiled	[CE]  cannot  find  symbol  propertyName	111	None	replace
200	[BUG]  [BUGGY]  Predicate  <  JSType>  propertyNode  =  this.getPropertyNode(propertyName);  if(propertyNode!=  null)  {  return  propertyNode.setValidator(validator);  }  [CE]  cannot  find  symbol  propertyName  [FE]                                    AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  Predicate  <  JSType>  propertyNode  =  this.getPropertyNode(propertyName);  if(propertyNode!=  null)  {  return  propertyNode.setValidator(validator);  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	Predicate  <  JSType>  propertyNode  =  this.getPropertyNode(propertyName);  if(propertyNode!=  null)  {  return  propertyNode.setValidator(validator);  }	  if(this.isResolved())    {    Predicate    <    JSType>    propertyNode    =    this.getPropertyNode(propertyName);    if(propertyNode!=    null)    {    return    propertyNode.setValidator(valueNode);    }    	non-compiled	[CE]  cannot  find  symbol  propertyName	111	None	replace
201	[BUG]  [BUGGY]  Predicate  <  JSType>  propertyNode  =  getPropertyNode(propertyName);  if(propertyNode!=  null)  {  return  propertyNode.setValidator(valueNode);  }  [CE]  cannot  find  symbol  propertyName  [FE]                                      AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  Predicate  <  JSType>  propertyNode  =  getPropertyNode(propertyName);  if(propertyNode!=  null)  {  return  propertyNode.setValidator(valueNode);  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	Predicate  <  JSType>  propertyNode  =  getPropertyNode(propertyName);  if(propertyNode!=  null)  {  return  propertyNode.setValidator(valueNode);  }	  if(this.isResolved())    {    Predicate    <    JSType>    propertyNode    =    this.getPropertyNode(propertyName);    if(propertyNode!=    null)    {    return    propertyNode.setValidator(valueNode);    }    	non-compiled	[CE]  cannot  find  symbol  propertyName	111	None	replace
202	[BUG]  [BUGGY]  Predicate  <  JSType>  propertyNode  =  this.getReferencedType(propertyName);  if(propertyNode!=  null)  {  return  propertyNode.setValidator(valueNode);  }  [CE]  cannot  find  symbol  propertyName  [FE]                                        AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  Predicate  <  JSType>  propertyNode  =  this.getReferencedType(propertyName);  if(propertyNode!=  null)  {  return  propertyNode.setValidator(valueNode);  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	Predicate  <  JSType>  propertyNode  =  this.getReferencedType(propertyName);  if(propertyNode!=  null)  {  return  propertyNode.setValidator(valueNode);  }	  if(this.isResolved())    {    Predicate    <    JSType>    propertyNode    =    this.getPropertyNode(propertyName);    if(propertyNode!=    null)    {    return    propertyNode.setValidator(valueNode);    }    	non-compiled	[CE]  cannot  find  symbol  propertyName	111	None	replace
203	[BUG]  [BUGGY]  if(!this.isInferred())  {  return  false;  }  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(!this.isInferred())  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(!this.isInferred())  {  return  false;  }	  if(this.isInferred())    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol	21	None	replace
204	[BUG]  [BUGGY]  if(isInferred())  {  return  false;  }  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(isInferred())  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(isInferred())  {  return  false;  }	  if(this.isInferred())    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol	21	None	replace
205	[BUG]  [BUGGY]  if(this.isInferred()  ||  this.isForwardDeclared())  {  return  false;  }  [CE]  cannot  find  symbol  [FE]                          AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.isInferred()  ||  this.isForwardDeclared())  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.isInferred()  ||  this.isForwardDeclared())  {  return  false;  }	  if(this.isInferred())    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol	21	None	replace
206	[BUG]  [BUGGY]  if(this.isInferred()  ||  this.referencedTypes.contains(validator))  {  return  false;  }  [CE]  cannot  find  symbol  [FE]                            AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.isInferred()  ||  this.referencedTypes.contains(validator))  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.isInferred()  ||  this.referencedTypes.contains(validator))  {  return  false;  }	  if(this.isInferred())    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol	21	None	replace
207	[BUG]  [BUGGY]  if(this.isInferred()  ||  isForwardDeclared)  {  return  false;  }  [CE]  cannot  find  symbol  [FE]                              AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.isInferred()  ||  isForwardDeclared)  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.isInferred()  ||  isForwardDeclared)  {  return  false;  }	  if(this.isInferred())    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol	21	None	replace
208	[BUG]  [BUGGY]  if(this.isInferred()  ||  this.isResolved())  {  return  false;  }  [CE]  cannot  find  symbol  [FE]                                AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.isInferred()  ||  this.isResolved())  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.isInferred()  ||  this.isResolved())  {  return  false;  }	  if(this.isInferred())    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol	21	None	replace
209	[BUG]  [BUGGY]  Predicate  <?>  propertyNode  =  this.slotType.getPropertyNode(this.sourceName);  [CE]  cannot  find  symbol  slotType  [FE]                          AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  Predicate  <?>  propertyNode  =  this.slotType.getPropertyNode(this.sourceName);  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	Predicate  <?>  propertyNode  =  this.slotType.getPropertyNode(this.sourceName);	  Predicate    <?>    propertyNode    =    this.slotType.getPropertyNode(propertyName);    	non-compiled	[CE]  cannot  find  symbol  slotType	132	None	replace
210	[BUG]  [BUGGY]  Predicate  <?>  propertyNode  =  this.slotType.getPropertyNode(name);  [CE]  cannot  find  symbol  name  [FE]                            AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  Predicate  <?>  propertyNode  =  this.slotType.getPropertyNode(name);  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	Predicate  <?>  propertyNode  =  this.slotType.getPropertyNode(name);	  Predicate    <?>    propertyNode    =    this.slotType.getPropertyNode(propertyName);    	non-compiled	[CE]  cannot  find  symbol  name	132	None	replace
211	[BUG]  [BUGGY]  Predicate  <?>  propertyNode  =  this.slotType.getPropertyNode(sourceName);  [CE]  cannot  find  symbol  slotType  [FE]                              AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  Predicate  <?>  propertyNode  =  this.slotType.getPropertyNode(sourceName);  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	Predicate  <?>  propertyNode  =  this.slotType.getPropertyNode(sourceName);	  Predicate    <?>    propertyNode    =    this.slotType.getPropertyNode(propertyName);    	non-compiled	[CE]  cannot  find  symbol  slotType	132	None	replace
212	[BUG]  [BUGGY]  Predicate  <?>  propertyNode  =  this.slotType.getPropertyNode(referencedType.propertyName);  [CE]  referencedType  has  private  access  in  ProxyObjectType  [FE]                                AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  Predicate  <?>  propertyNode  =  this.slotType.getPropertyNode(referencedType.propertyName);  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	Predicate  <?>  propertyNode  =  this.slotType.getPropertyNode(referencedType.propertyName);	  Predicate    <?>    propertyNode    =    this.slotType.getPropertyNode(propertyName);    	non-compiled	[CE]  referencedType  has  private  access  in  ProxyObjectType	132	None	replace
213	[BUG]  [BUGGY]  Predicate  <?>  propertyNode  =  this.slotType.getPropertyNode(referencedType);  [CE]  referencedType  has  private  access  in  ProxyObjectType  [FE]                                  AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  Predicate  <?>  propertyNode  =  this.slotType.getPropertyNode(referencedType);  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	Predicate  <?>  propertyNode  =  this.slotType.getPropertyNode(referencedType);	  Predicate    <?>    propertyNode    =    this.slotType.getPropertyNode(propertyName);    	non-compiled	[CE]  referencedType  has  private  access  in  ProxyObjectType	132	None	replace
214	[BUG]  [BUGGY]  Predicate  <?>  propertyNode  =  this.slotType.getPropertyNode(reference);  [CE]  cannot  find  symbol  slotType  [FE]                                    AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  Predicate  <?>  propertyNode  =  this.slotType.getPropertyNode(reference);  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	Predicate  <?>  propertyNode  =  this.slotType.getPropertyNode(reference);	  Predicate    <?>    propertyNode    =    this.slotType.getPropertyNode(propertyName);    	non-compiled	[CE]  cannot  find  symbol  slotType	132	None	replace
215	[BUG]  [BUGGY]  Predicate  <?>  propertyNode  =  this.slotType.getPropertyNode(value);  [CE]  cannot  find  symbol  value  [FE]                                      AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  Predicate  <?>  propertyNode  =  this.slotType.getPropertyNode(value);  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	Predicate  <?>  propertyNode  =  this.slotType.getPropertyNode(value);	  Predicate    <?>    propertyNode    =    this.slotType.getPropertyNode(propertyName);    	non-compiled	[CE]  cannot  find  symbol  value	132	None	replace
216	[BUG]  [BUGGY]  if(this.isResolved())  {  return  false;  forAnnotations  {  propertyNode  =  propertyNode.getFirstChild();  if(propertyNode!=  propertyNode)  {  return  true;  }  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.isResolved())  {  return  false;  forAnnotations  {  propertyNode  =  propertyNode.getFirstChild();  if(propertyNode!=  propertyNode)  {  return  true;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.isResolved())  {  return  false;  forAnnotations  {  propertyNode  =  propertyNode.getFirstChild();  if(propertyNode!=  propertyNode)  {  return  true;  }	  return    false;    if(isForwardDeclared)    {    forAnnotations    {    propertyNode    =    propertyNode.getFirstChild();    if(propertyNode!=    propertyNode)    {    return    true;    }    	non-compiled	[CE]  not  a  statement	139	None	replace
217	[BUG]  [BUGGY]  if(this.ignoreForwardReferencedTypes)  {  return  false;  forAnnotations  {  propertyNode  =  propertyNode.getFirstChild();  if(propertyNode!=  propertyNode)  {  return  true;  }  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.ignoreForwardReferencedTypes)  {  return  false;  forAnnotations  {  propertyNode  =  propertyNode.getFirstChild();  if(propertyNode!=  propertyNode)  {  return  true;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.ignoreForwardReferencedTypes)  {  return  false;  forAnnotations  {  propertyNode  =  propertyNode.getFirstChild();  if(propertyNode!=  propertyNode)  {  return  true;  }	  return    false;    if(isForwardDeclared)    {    forAnnotations    {    propertyNode    =    propertyNode.getFirstChild();    if(propertyNode!=    propertyNode)    {    return    true;    }    	non-compiled	[CE]  not  a  statement	139	None	replace
218	[BUG]  [BUGGY]  if(this.ignoreForwardReferencedTypes)  {  return  false;  forAnnotations  {  propertyNode  =  propertyNode.getFirstChild();  if(propertyNode!=  propertyNode)  {  return  true;  }  }  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.ignoreForwardReferencedTypes)  {  return  false;  forAnnotations  {  propertyNode  =  propertyNode.getFirstChild();  if(propertyNode!=  propertyNode)  {  return  true;  }  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.ignoreForwardReferencedTypes)  {  return  false;  forAnnotations  {  propertyNode  =  propertyNode.getFirstChild();  if(propertyNode!=  propertyNode)  {  return  true;  }  }	  return    false;    if(isForwardDeclared)    {    forAnnotations    {    propertyNode    =    propertyNode.getFirstChild();    if(propertyNode!=    propertyNode)    {    return    true;    }    	non-compiled	[CE]  not  a  statement	139	None	replace
219	[BUG]  [BUGGY]  if(this.forwardReferencedTypes!=  null)  {  return  false;  forAnnotations  {  propertyNode  =  propertyNode.getFirstChild();  if(propertyNode!=  propertyNode)  {  return  true;  }  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.forwardReferencedTypes!=  null)  {  return  false;  forAnnotations  {  propertyNode  =  propertyNode.getFirstChild();  if(propertyNode!=  propertyNode)  {  return  true;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.forwardReferencedTypes!=  null)  {  return  false;  forAnnotations  {  propertyNode  =  propertyNode.getFirstChild();  if(propertyNode!=  propertyNode)  {  return  true;  }	  return    false;    if(isForwardDeclared)    {    forAnnotations    {    propertyNode    =    propertyNode.getFirstChild();    if(propertyNode!=    propertyNode)    {    return    true;    }    	non-compiled	[CE]  not  a  statement	139	None	replace
220	[BUG]  [BUGGY]  if(this.isResolved())  {  return  false;  forAnnotations  {  propertyNode  =  propertyNode.getFirstChild();  if(propertyNode!=  propertyNode)  {  return  true;  }  }  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.isResolved())  {  return  false;  forAnnotations  {  propertyNode  =  propertyNode.getFirstChild();  if(propertyNode!=  propertyNode)  {  return  true;  }  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.isResolved())  {  return  false;  forAnnotations  {  propertyNode  =  propertyNode.getFirstChild();  if(propertyNode!=  propertyNode)  {  return  true;  }  }	  return    false;    if(isForwardDeclared)    {    forAnnotations    {    propertyNode    =    propertyNode.getFirstChild();    if(propertyNode!=    propertyNode)    {    return    true;    }    	non-compiled	[CE]  not  a  statement	139	None	replace
221	[BUG]  [BUGGY]  if(this.ignoreForwardReferencedTypes)  {  return  false;  }  else  if(isForwardDeclared)  {  forAnnotations  {  propertyNode  =  propertyNode.getFirstChild();  if(propertyNode!=  propertyNode)  {  return  true  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.ignoreForwardReferencedTypes)  {  return  false;  }  else  if(isForwardDeclared)  {  forAnnotations  {  propertyNode  =  propertyNode.getFirstChild();  if(propertyNode!=  propertyNode)  {  return  true  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.ignoreForwardReferencedTypes)  {  return  false;  }  else  if(isForwardDeclared)  {  forAnnotations  {  propertyNode  =  propertyNode.getFirstChild();  if(propertyNode!=  propertyNode)  {  return  true	  return    false;    if(isForwardDeclared)    {    forAnnotations    {    propertyNode    =    propertyNode.getFirstChild();    if(propertyNode!=    propertyNode)    {    return    true;    }    	non-compiled	[CE]  not  a  statement	139	None	replace
222	[BUG]  [BUGGY]  if(this.forwardReferencedTypes!=  null)  {  return  false;  forAnnotations  {  propertyNode  =  propertyNode.getFirstChild();  if(propertyNode!=  propertyNode)  {  return  true;  }  }  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.forwardReferencedTypes!=  null)  {  return  false;  forAnnotations  {  propertyNode  =  propertyNode.getFirstChild();  if(propertyNode!=  propertyNode)  {  return  true;  }  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.forwardReferencedTypes!=  null)  {  return  false;  forAnnotations  {  propertyNode  =  propertyNode.getFirstChild();  if(propertyNode!=  propertyNode)  {  return  true;  }  }	  return    false;    if(isForwardDeclared)    {    forAnnotations    {    propertyNode    =    propertyNode.getFirstChild();    if(propertyNode!=    propertyNode)    {    return    true;    }    	non-compiled	[CE]  not  a  statement	139	None	replace
223	[BUG]  [BUGGY]  if(this.isResolved())  {  return(this.isResolved()  ||  this.validator!=  null);  }  [CE]  missing  return  statement  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.isResolved())  {  return(this.isResolved()  ||  this.validator!=  null);  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.isResolved())  {  return(this.isResolved()  ||  this.validator!=  null);  }	  if(this.isResolved())    {    return(this.isResolved()    &&    this.validator!=    null);    }    	non-compiled	[CE]  missing  return  statement	58	None	replace
224	[BUG]  [BUGGY]  if(this.isResolved())  {  return(this.isResolved()  &&  validator  ==  null);  }  [CE]  missing  return  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.isResolved())  {  return(this.isResolved()  &&  validator  ==  null);  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.isResolved())  {  return(this.isResolved()  &&  validator  ==  null);  }	  if(this.isResolved())    {    return(this.isResolved()    &&    this.validator!=    null);    }    	non-compiled	[CE]  missing  return  statement	58	None	replace
225	[BUG]  [BUGGY]  timeout  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  return(this.isResolved()  ||  this.validator  ==  null);  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	add	return(this.isResolved()  ||  this.validator  ==  null);	  return(this.isResolved()    &&    this.validator    ==    null);    timeout    	compilable	timeout	60	1	replace
226	[BUG]  [BUGGY]  return(this.isResolved()  ||  this.validator  ==  null);  timeout  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  return(this.isResolved()  ||  this.validator  ==  null);  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	return(this.isResolved()  ||  this.validator  ==  null);	  return(this.isResolved()    &&    this.validator    ==    null);    timeout    	compilable	timeout	60	1	replace
227	[BUG]  [BUGGY]  if(this.isResolved())  {  return(this.isResolved()  &&  this.validator  ==  null);  }  [CE]  missing  return  statement  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.isResolved())  {  return(this.isResolved()  &&  this.validator  ==  null);  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.isResolved())  {  return(this.isResolved()  &&  this.validator  ==  null);  }	  return(this.isResolved()    &&    this.validator    ==    null);    timeout    	non-compiled	[CE]  missing  return  statement	60	None	replace
228	[BUG]  [BUGGY]  this.validator  =  validator;  [CE]  missing  return  statement  [FE]                      AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  this.validator  =  validator;  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	this.validator  =  validator;	  if(this.isResolved())    {    return    super.setValidator(validator);    }    else    {    this.validator    =    validator;    }    	non-compiled	[CE]  missing  return  statement	42	None	replace
229	[BUG]  [BUGGY]  Predicate  <?>  validator  =  this.isResolved()?  super.setValidator(validator);  [CE]  :  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  Predicate  <?>  validator  =  this.isResolved()?  super.setValidator(validator);  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	Predicate  <?>  validator  =  this.isResolved()?  super.setValidator(validator);	  if(this.isResolved())    {    return    super.setValidator(validator);    }    else    {    this.validator    =    validator;    }    	non-compiled	[CE]  :  expected	42	None	replace
230	[BUG]  [BUGGY]  Predicate  <  JSType>  validator  =  this.isResolved()?  super.setValidator(validator);  [CE]  :  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  Predicate  <  JSType>  validator  =  this.isResolved()?  super.setValidator(validator);  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	Predicate  <  JSType>  validator  =  this.isResolved()?  super.setValidator(validator);	  if(this.isResolved())    {    return    super.setValidator(validator);    }    else    {    this.validator    =    validator;    }    	non-compiled	[CE]  :  expected	42	None	replace
231	[BUG]  [BUGGY]  this.setValidator(validator);  [CE]  missing  return  statement  [FE]                            AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  this.setValidator(validator);  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	this.setValidator(validator);	  if(this.isResolved())    {    return    super.setValidator(validator);    }    else    {    this.validator    =    validator;    }    	non-compiled	[CE]  missing  return  statement	42	None	replace
232	[BUG]  [BUGGY]  this.referencedTypes.add(validator);  [CE]  cannot  find  symbol  referencedTypes  [FE]                              AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  this.referencedTypes.add(validator);  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	this.referencedTypes.add(validator);	  if(this.isResolved())    {    return    super.setValidator(validator);    }    else    {    this.validator    =    validator;    }    	non-compiled	[CE]  cannot  find  symbol  referencedTypes	42	None	replace
233	[BUG]  [BUGGY]  if(this.forAnnotations!=  forAnnotations)  {  forAnnotations  ignoreForwardReferencedTypes  =  this.ignoreForwardReferencedTypes;  if(ignoreForwardReferencedTypes  ==  null)  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.forAnnotations!=  forAnnotations)  {  forAnnotations  ignoreForwardReferencedTypes  =  this.ignoreForwardReferencedTypes;  if(ignoreForwardReferencedTypes  ==  null)  {  return  true;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.forAnnotations!=  forAnnotations)  {  forAnnotations  ignoreForwardReferencedTypes  =  this.ignoreForwardReferencedTypes;  if(ignoreForwardReferencedTypes  ==  null)  {  return  true;  }	  return    false;    if(this.forAnnotations!=    forAnnotations)    {    forAnnotations    ignoreForwardReferencedTypes    =    this.ignoreForwardReferencedTypes;    if(ignoreForwardReferencedTypes    ==    null)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
234	[BUG]  [BUGGY]  if(this.forAnnotations  ==  forAnnotations)  {  forAnnotations  ignoreForwardReferencedTypes  =  this.ignoreForwardReferencedTypes;  if(ignoreForwardReferencedTypes  ==  null)  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.forAnnotations  ==  forAnnotations)  {  forAnnotations  ignoreForwardReferencedTypes  =  this.ignoreForwardReferencedTypes;  if(ignoreForwardReferencedTypes  ==  null)  {  return  true;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.forAnnotations  ==  forAnnotations)  {  forAnnotations  ignoreForwardReferencedTypes  =  this.ignoreForwardReferencedTypes;  if(ignoreForwardReferencedTypes  ==  null)  {  return  true;  }	  return    false;    if(this.forAnnotations!=    forAnnotations)    {    forAnnotations    ignoreForwardReferencedTypes    =    this.ignoreForwardReferencedTypes;    if(ignoreForwardReferencedTypes    ==    null)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
235	[BUG]  [BUGGY]  if(this.forAnnotations  ==  forAnnotations)  {  forAnnotations  ignoreForwardReferencedTypes  =  this.ignoreForwardReferencedTypes;  if(ignoreForwardReferencedTypes!=  null)  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.forAnnotations  ==  forAnnotations)  {  forAnnotations  ignoreForwardReferencedTypes  =  this.ignoreForwardReferencedTypes;  if(ignoreForwardReferencedTypes!=  null)  {  return  true;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.forAnnotations  ==  forAnnotations)  {  forAnnotations  ignoreForwardReferencedTypes  =  this.ignoreForwardReferencedTypes;  if(ignoreForwardReferencedTypes!=  null)  {  return  true;  }	  return    false;    if(this.forAnnotations!=    forAnnotations)    {    forAnnotations    ignoreForwardReferencedTypes    =    this.ignoreForwardReferencedTypes;    if(ignoreForwardReferencedTypes    ==    null)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
236	[BUG]  [BUGGY]  if(this.forAnnotations!=  forAnnotations)  {  forAnnotations  ignoreForwardReferencedTypes  =  null;  if(ignoreForwardReferencedTypes  ==  null)  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                                AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.forAnnotations!=  forAnnotations)  {  forAnnotations  ignoreForwardReferencedTypes  =  null;  if(ignoreForwardReferencedTypes  ==  null)  {  return  true;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.forAnnotations!=  forAnnotations)  {  forAnnotations  ignoreForwardReferencedTypes  =  null;  if(ignoreForwardReferencedTypes  ==  null)  {  return  true;  }	  return    false;    if(this.forAnnotations!=    forAnnotations)    {    forAnnotations    ignoreForwardReferencedTypes    =    this.ignoreForwardReferencedTypes;    if(ignoreForwardReferencedTypes    ==    null)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
237	[BUG]  [BUGGY]  if(this.forAnnotations!=  forAnnotations)  {  forAnnotations  ignoreForwardReferencedTypes  =  this.ignoreForwardReferencedTypes;  if(ignoreForwardReferencedTypes  ==  null)  {  return  true  [CE]  ';'  expected  [FE]                                  AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.forAnnotations!=  forAnnotations)  {  forAnnotations  ignoreForwardReferencedTypes  =  this.ignoreForwardReferencedTypes;  if(ignoreForwardReferencedTypes  ==  null)  {  return  true  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.forAnnotations!=  forAnnotations)  {  forAnnotations  ignoreForwardReferencedTypes  =  this.ignoreForwardReferencedTypes;  if(ignoreForwardReferencedTypes  ==  null)  {  return  true	  return    false;    if(this.forAnnotations!=    forAnnotations)    {    forAnnotations    ignoreForwardReferencedTypes    =    this.ignoreForwardReferencedTypes;    if(ignoreForwardReferencedTypes    ==    null)    {    return    true;    }    	non-compiled	[CE]  ';'  expected	8	None	replace
238	[BUG]  [BUGGY]  if(this.forAnnotations!=  forAnnotations)  {  forAnnotations  ignoreForwardReferencedTypes  =  validator.getForwardReferencedTypes();  if(ignoreForwardReferencedTypes  ==  null)  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                                    AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.forAnnotations!=  forAnnotations)  {  forAnnotations  ignoreForwardReferencedTypes  =  validator.getForwardReferencedTypes();  if(ignoreForwardReferencedTypes  ==  null)  {  return  true;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.forAnnotations!=  forAnnotations)  {  forAnnotations  ignoreForwardReferencedTypes  =  validator.getForwardReferencedTypes();  if(ignoreForwardReferencedTypes  ==  null)  {  return  true;  }	  return    false;    if(this.forAnnotations!=    forAnnotations)    {    forAnnotations    ignoreForwardReferencedTypes    =    this.ignoreForwardReferencedTypes;    if(ignoreForwardReferencedTypes    ==    null)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
239	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.isResolved();  ++i)  {  return  super.setValidator(validator);  }  [CE]  bad  operand  types  for  binary  operator  '<'  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  for(int  i  =  0;  i  <  this.isResolved();  ++i)  {  return  super.setValidator(validator);  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	for(int  i  =  0;  i  <  this.isResolved();  ++i)  {  return  super.setValidator(validator);  }	  if(this.validator!=    null)    {    return    super.setValidator(validator);    }    else    {    for(int    i    =    0;    i    <    this.isResolved();    ++i)    {    return    super.setValidator(validator);    }    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '<'	121	None	replace
240	[BUG]  [BUGGY]  if(this.validator!=  null)  {  for(int  i  =  0;  i  <  this.isResolved();  ++i)  {  return  super.setValidator(validator);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.validator!=  null)  {  for(int  i  =  0;  i  <  this.isResolved();  ++i)  {  return  super.setValidator(validator);  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.validator!=  null)  {  for(int  i  =  0;  i  <  this.isResolved();  ++i)  {  return  super.setValidator(validator);  }	  if(this.validator!=    null)    {    return    super.setValidator(validator);    }    else    {    for(int    i    =    0;    i    <    this.isResolved();    ++i)    {    return    super.setValidator(validator);    }    	non-compiled	[CE]  illegal  start  of  expression	121	None	replace
241	[BUG]  [BUGGY]  if(this.validator!=  null)  {  if(this.isResolved())  {  return  super.setValidator(validator);  }  else  {  for(int  i  =  0;  i  <  this.isResolved();  ++i)  {  return  super.set  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.validator!=  null)  {  if(this.isResolved())  {  return  super.setValidator(validator);  }  else  {  for(int  i  =  0;  i  <  this.isResolved();  ++i)  {  return  super.set  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.validator!=  null)  {  if(this.isResolved())  {  return  super.setValidator(validator);  }  else  {  for(int  i  =  0;  i  <  this.isResolved();  ++i)  {  return  super.set	  if(this.validator!=    null)    {    return    super.setValidator(validator);    }    else    {    for(int    i    =    0;    i    <    this.isResolved();    ++i)    {    return    super.setValidator(validator);    }    	non-compiled	[CE]  ';'  expected	121	None	replace
242	[BUG]  [BUGGY]  if(this.validator!=  null)  {  for(int  i  =  0;  i  <  this.isResolved();  ++i)  {  return  super.setValidator(validator);  }  }  [CE]  bad  operand  types  for  binary  operator  '<'  [FE]                        AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.validator!=  null)  {  for(int  i  =  0;  i  <  this.isResolved();  ++i)  {  return  super.setValidator(validator);  }  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.validator!=  null)  {  for(int  i  =  0;  i  <  this.isResolved();  ++i)  {  return  super.setValidator(validator);  }  }	  if(this.validator!=    null)    {    return    super.setValidator(validator);    }    else    {    for(int    i    =    0;    i    <    this.isResolved();    ++i)    {    return    super.setValidator(validator);    }    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '<'	121	None	replace
243	[BUG]  [BUGGY]  if(this.isResolved())  {  if(this.validator!=  null)  {  return  super.setValidator(validator);  }  else  {  for(int  i  =  0;  i  <  this.isResolved();  ++i)  {  return  super.set  [CE]  ';'  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.isResolved())  {  if(this.validator!=  null)  {  return  super.setValidator(validator);  }  else  {  for(int  i  =  0;  i  <  this.isResolved();  ++i)  {  return  super.set  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.isResolved())  {  if(this.validator!=  null)  {  return  super.setValidator(validator);  }  else  {  for(int  i  =  0;  i  <  this.isResolved();  ++i)  {  return  super.set	  if(this.validator!=    null)    {    return    super.setValidator(validator);    }    else    {    for(int    i    =    0;    i    <    this.isResolved();    ++i)    {    return    super.setValidator(validator);    }    	non-compiled	[CE]  ';'  expected	121	None	replace
244	[BUG]  [BUGGY]  if(this.isResolved())  {  if(validator!=  null)  {  return  super.setValidator(validator);  }  else  {  for(int  i  =  0;  i  <  this.isResolved();  ++i)  {  return  super.set  [CE]  ';'  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.isResolved())  {  if(validator!=  null)  {  return  super.setValidator(validator);  }  else  {  for(int  i  =  0;  i  <  this.isResolved();  ++i)  {  return  super.set  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.isResolved())  {  if(validator!=  null)  {  return  super.setValidator(validator);  }  else  {  for(int  i  =  0;  i  <  this.isResolved();  ++i)  {  return  super.set	  if(this.validator!=    null)    {    return    super.setValidator(validator);    }    else    {    for(int    i    =    0;    i    <    this.isResolved();    ++i)    {    return    super.setValidator(validator);    }    	non-compiled	[CE]  ';'  expected	121	None	replace
245	[BUG]  [BUGGY]  if(this.validator!=  null)  {  if(this.isResolved())  {  return  super.setValidator(validator);  }  else  {  for(int  i  =  0;  i  <  this.isResolved();  ++i)  {  return  super  [CE]  '.'  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.validator!=  null)  {  if(this.isResolved())  {  return  super.setValidator(validator);  }  else  {  for(int  i  =  0;  i  <  this.isResolved();  ++i)  {  return  super  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.validator!=  null)  {  if(this.isResolved())  {  return  super.setValidator(validator);  }  else  {  for(int  i  =  0;  i  <  this.isResolved();  ++i)  {  return  super	  if(this.validator!=    null)    {    return    super.setValidator(validator);    }    else    {    for(int    i    =    0;    i    <    this.isResolved();    ++i)    {    return    super.setValidator(validator);    }    	non-compiled	[CE]  '.'  expected	121	None	replace
246	[BUG]  [BUGGY]  if(this.isForwardDeclared()  ||  this.isResolved())  {  return  true;  }  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.isForwardDeclared()  ||  this.isResolved())  {  return  true;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.isForwardDeclared()  ||  this.isResolved())  {  return  true;  }	  if(this.isForwardDeclared())    {    return    true;    }    	non-compiled	[CE]  cannot  find  symbol	19	None	replace
247	[BUG]  [BUGGY]  if(this.isForwardDeclared()  ||  this.isInferred())  {  return  true;  }  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.isForwardDeclared()  ||  this.isInferred())  {  return  true;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.isForwardDeclared()  ||  this.isInferred())  {  return  true;  }	  if(this.isForwardDeclared())    {    return    true;    }    	non-compiled	[CE]  cannot  find  symbol	19	None	replace
248	[BUG]  [BUGGY]  if(this.isForwardDeclared()  ||  isForwardDeclared)  {  return  true;  }  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.isForwardDeclared()  ||  isForwardDeclared)  {  return  true;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.isForwardDeclared()  ||  isForwardDeclared)  {  return  true;  }	  if(this.isForwardDeclared())    {    return    true;    }    	non-compiled	[CE]  cannot  find  symbol	19	None	replace
249	[BUG]  [BUGGY]  if(this.isForwardDeclared()  ||  this.isResolved())  {  return  false;  }  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.isForwardDeclared()  ||  this.isResolved())  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.isForwardDeclared()  ||  this.isResolved())  {  return  false;  }	  if(this.isForwardDeclared())    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
250	[BUG]  [BUGGY]  if(this.isForwardDeclared()  ||  this.isInferred())  {  return  false;  }  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.isForwardDeclared()  ||  this.isInferred())  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.isForwardDeclared()  ||  this.isInferred())  {  return  false;  }	  if(this.isForwardDeclared())    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
251	[BUG]  [BUGGY]  if(this.isForwardDeclared()  ||  isForwardDeclared)  {  return  false;  }  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.isForwardDeclared()  ||  isForwardDeclared)  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.isForwardDeclared()  ||  isForwardDeclared)  {  return  false;  }	  if(this.isForwardDeclared())    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
252	[BUG]  [BUGGY]  if(validator.isForwardDeclared())  {  return  false;  }  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(validator.isForwardDeclared())  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(validator.isForwardDeclared())  {  return  false;  }	  if(this.isForwardDeclared())    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
253	[BUG]  [BUGGY]  Predicate  <  JSType>  propertyNode  =  this.referencedTypes.get(reference);  if(propertyNode!=  propertyNode)  {  return  true;  }  [CE]  cannot  find  symbol  referencedTypes  [FE]            AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  Predicate  <  JSType>  propertyNode  =  this.referencedTypes.get(reference);  if(propertyNode!=  propertyNode)  {  return  true;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	Predicate  <  JSType>  propertyNode  =  this.referencedTypes.get(reference);  if(propertyNode!=  propertyNode)  {  return  true;  }	  if(this.isResolved())    {    return    false;    }    else    {    Predicate    <    JSType>    propertyNode    =    this.referencedTypes.get(reference);    if(propertyNode!=    propertyNode)    {    return    true;    }    	non-compiled	[CE]  cannot  find  symbol  referencedTypes	98	None	replace
254	[BUG]  [BUGGY]  Predicate  <  JSType>  propertyNode  =  this.referencedTypes.get(reference);  if(propertyNode  ==  propertyNode)  {  return  true;  }  [CE]  cannot  find  symbol  referencedTypes  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  Predicate  <  JSType>  propertyNode  =  this.referencedTypes.get(reference);  if(propertyNode  ==  propertyNode)  {  return  true;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	Predicate  <  JSType>  propertyNode  =  this.referencedTypes.get(reference);  if(propertyNode  ==  propertyNode)  {  return  true;  }	  if(this.isResolved())    {    return    false;    }    else    {    Predicate    <    JSType>    propertyNode    =    this.referencedTypes.get(reference);    if(propertyNode!=    propertyNode)    {    return    true;    }    	non-compiled	[CE]  cannot  find  symbol  referencedTypes	98	None	replace
255	[BUG]  [BUGGY]  if(this.referencedTypes!=  null)  {  if(this.isResolved())  {  return  false;  }  else  {  Predicate  <  JSType>  propertyNode  =  this.referencedTypes.get(reference);  if(propertyNode!=  property  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.referencedTypes!=  null)  {  if(this.isResolved())  {  return  false;  }  else  {  Predicate  <  JSType>  propertyNode  =  this.referencedTypes.get(reference);  if(propertyNode!=  property  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.referencedTypes!=  null)  {  if(this.isResolved())  {  return  false;  }  else  {  Predicate  <  JSType>  propertyNode  =  this.referencedTypes.get(reference);  if(propertyNode!=  property	  if(this.isResolved())    {    return    false;    }    else    {    Predicate    <    JSType>    propertyNode    =    this.referencedTypes.get(reference);    if(propertyNode!=    propertyNode)    {    return    true;    }    	non-compiled	[CE]  ')'  expected	98	None	replace
256	[BUG]  [BUGGY]  if(this.referencedTypes!=  null  ||  this.isResolved())  {  return  false;  }  else  {  Predicate  <  JSType>  propertyNode  =  this.referencedTypes.get(reference);  if(propertyNode!=  propertyNode)  {  return  true  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.referencedTypes!=  null  ||  this.isResolved())  {  return  false;  }  else  {  Predicate  <  JSType>  propertyNode  =  this.referencedTypes.get(reference);  if(propertyNode!=  propertyNode)  {  return  true  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.referencedTypes!=  null  ||  this.isResolved())  {  return  false;  }  else  {  Predicate  <  JSType>  propertyNode  =  this.referencedTypes.get(reference);  if(propertyNode!=  propertyNode)  {  return  true	  if(this.isResolved())    {    return    false;    }    else    {    Predicate    <    JSType>    propertyNode    =    this.referencedTypes.get(reference);    if(propertyNode!=    propertyNode)    {    return    true;    }    	non-compiled	[CE]  ';'  expected	98	None	replace
257	[BUG]  [BUGGY]  if(this.referencedTypes!=  null  ||  this.isResolved())  {  return  false;  }  else  {  Predicate  <  JSType>  propertyNode  =  this.referencedTypes.get(reference);  if(propertyNode!=  propertyNode)  {  return  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.referencedTypes!=  null  ||  this.isResolved())  {  return  false;  }  else  {  Predicate  <  JSType>  propertyNode  =  this.referencedTypes.get(reference);  if(propertyNode!=  propertyNode)  {  return  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.referencedTypes!=  null  ||  this.isResolved())  {  return  false;  }  else  {  Predicate  <  JSType>  propertyNode  =  this.referencedTypes.get(reference);  if(propertyNode!=  propertyNode)  {  return	  if(this.isResolved())    {    return    false;    }    else    {    Predicate    <    JSType>    propertyNode    =    this.referencedTypes.get(reference);    if(propertyNode!=    propertyNode)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	98	None	replace
258	[BUG]  [BUGGY]  if(this.referencedTypes!=  null  ||  this.isResolved())  {  return  false;  }  else  {  Predicate  <  JSType>  propertyNode  =  this.referencedTypes.get(reference);  if(propertyNode!=  property  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.referencedTypes!=  null  ||  this.isResolved())  {  return  false;  }  else  {  Predicate  <  JSType>  propertyNode  =  this.referencedTypes.get(reference);  if(propertyNode!=  property  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.referencedTypes!=  null  ||  this.isResolved())  {  return  false;  }  else  {  Predicate  <  JSType>  propertyNode  =  this.referencedTypes.get(reference);  if(propertyNode!=  property	  if(this.isResolved())    {    return    false;    }    else    {    Predicate    <    JSType>    propertyNode    =    this.referencedTypes.get(reference);    if(propertyNode!=    propertyNode)    {    return    true;    }    	non-compiled	[CE]  ')'  expected	98	None	replace
259	[BUG]  [BUGGY]  if(this.referencedTypes!=  null)  {  if(this.isResolved())  {  return  false;  }  else  {  Predicate  <  JSType>  propertyNode  =  this.referencedTypes.get(reference);  if(prop  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.referencedTypes!=  null)  {  if(this.isResolved())  {  return  false;  }  else  {  Predicate  <  JSType>  propertyNode  =  this.referencedTypes.get(reference);  if(prop  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.referencedTypes!=  null)  {  if(this.isResolved())  {  return  false;  }  else  {  Predicate  <  JSType>  propertyNode  =  this.referencedTypes.get(reference);  if(prop	  if(this.isResolved())    {    return    false;    }    else    {    Predicate    <    JSType>    propertyNode    =    this.referencedTypes.get(reference);    if(propertyNode!=    propertyNode)    {    return    true;    }    	non-compiled	[CE]  ')'  expected	98	None	replace
260	[BUG]  [BUGGY]  return(this.isResolved()  &&  this.validator  ==  null);  return(this.isResolved()  &&  this.validator  ==  null);  [CE]  unreachable  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  return(this.isResolved()  &&  this.validator  ==  null);  return(this.isResolved()  &&  this.validator  ==  null);  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	return(this.isResolved()    &&    this.validator    ==    null);    return(this.isResolved()  &&  this.validator  ==  null);	  timeout    	non-compiled	[CE]  unreachable  statement	59	None	add
261	[BUG]  [BUGGY]  return(this.isResolved()  &&  this.validator  ==  null);  this.isResolved()  &&  this.validator  ==  null);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  return(this.isResolved()  &&  this.validator  ==  null);  this.isResolved()  &&  this.validator  ==  null);  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	return(this.isResolved()    &&    this.validator    ==    null);    this.isResolved()  &&  this.validator  ==  null);	  timeout    	non-compiled	[CE]  not  a  statement	59	None	add
262	[BUG]  [BUGGY]  return(this.isResolved()  &&  this.validator  ==  null);  (this.isResolved()  &&  this.validator  ==  null);  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  return(this.isResolved()  &&  this.validator  ==  null);  (this.isResolved()  &&  this.validator  ==  null);  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	return(this.isResolved()    &&    this.validator    ==    null);    (this.isResolved()  &&  this.validator  ==  null);	  timeout    	non-compiled	[CE]  not  a  statement	59	None	add
263	[BUG]  [BUGGY]  return(this.isResolved()  &&  this.validator  ==  null);  if(this.isResolved()  &&  this.validator  ==  null);  [CE]  unreachable  statement  [FE]                        AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  return(this.isResolved()  &&  this.validator  ==  null);  if(this.isResolved()  &&  this.validator  ==  null);  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	return(this.isResolved()    &&    this.validator    ==    null);    if(this.isResolved()  &&  this.validator  ==  null);	  timeout    	non-compiled	[CE]  unreachable  statement	59	None	add
264	[BUG]  [BUGGY]  return(this.isResolved()  &&  this.validator  ==  null);  return(this.isResolved()  &&  this.validator!=  null);  [CE]  unreachable  statement  [FE]                          AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  return(this.isResolved()  &&  this.validator  ==  null);  return(this.isResolved()  &&  this.validator!=  null);  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	return(this.isResolved()    &&    this.validator    ==    null);    return(this.isResolved()  &&  this.validator!=  null);	  timeout    	non-compiled	[CE]  unreachable  statement	59	None	add
265	[BUG]  [BUGGY]  return(this.isResolved()  &&  this.validator  ==  null);  this.isResolved()  &&  this.validator!=  null);  [CE]  not  a  statement  [FE]                            AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  return(this.isResolved()  &&  this.validator  ==  null);  this.isResolved()  &&  this.validator!=  null);  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	return(this.isResolved()    &&    this.validator    ==    null);    this.isResolved()  &&  this.validator!=  null);	  timeout    	non-compiled	[CE]  not  a  statement	59	None	add
266	[BUG]  [BUGGY]  return(this.isResolved()  &&  this.validator  ==  null);  if(this.isResolved()  &&  this.validator!=  null);  [CE]  unreachable  statement  [FE]                              AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  return(this.isResolved()  &&  this.validator  ==  null);  if(this.isResolved()  &&  this.validator!=  null);  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	return(this.isResolved()    &&    this.validator    ==    null);    if(this.isResolved()  &&  this.validator!=  null);	  timeout    	non-compiled	[CE]  unreachable  statement	59	None	add
267	[BUG]  [BUGGY]  if(!this.isResolved())  {  return(this.isResolved()  &&  this.validator!=  null);  if(this.isResolved()  &&  this.validator!=  null);  }  [CE]  unreachable  statement  [FE]            AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(!this.isResolved())  {  return(this.isResolved()  &&  this.validator!=  null);  if(this.isResolved()  &&  this.validator!=  null);  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(!this.isResolved())  {  return(this.isResolved()  &&  this.validator!=  null);  if(this.isResolved()  &&  this.validator!=  null);  }	  return(this.isResolved()    &&    this.validator!=    null);    if(this.isResolved()    &&    this.validator!=    null);    }    	non-compiled	[CE]  unreachable  statement	131	None	replace
268	[BUG]  [BUGGY]  return(this.isResolved()  ||  this.validator!=  null);  if(this.isResolved()  &&  this.validator!=  null);  }  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  return(this.isResolved()  ||  this.validator!=  null);  if(this.isResolved()  &&  this.validator!=  null);  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	return(this.isResolved()  ||  this.validator!=  null);  if(this.isResolved()  &&  this.validator!=  null);  }	  return(this.isResolved()    &&    this.validator!=    null);    if(this.isResolved()    &&    this.validator!=    null);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	131	None	replace
269	[BUG]  [BUGGY]  return(this.isResolved()  ||  this.validator!=  null);  if(this.isResolved()  &&  this.validator!=  null);  [CE]  unreachable  statement  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  return(this.isResolved()  ||  this.validator!=  null);  if(this.isResolved()  &&  this.validator!=  null);  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	return(this.isResolved()  ||  this.validator!=  null);  if(this.isResolved()  &&  this.validator!=  null);	  return(this.isResolved()    &&    this.validator!=    null);    if(this.isResolved()    &&    this.validator!=    null);    }    	non-compiled	[CE]  unreachable  statement	131	None	replace
270	[BUG]  [BUGGY]  if(!this.isResolved())  {  return(this.isResolved()  &&  this.validator!=  null);  if(this.isResolved()  &&  this.validator  ==  null);  }  [CE]  unreachable  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(!this.isResolved())  {  return(this.isResolved()  &&  this.validator!=  null);  if(this.isResolved()  &&  this.validator  ==  null);  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(!this.isResolved())  {  return(this.isResolved()  &&  this.validator!=  null);  if(this.isResolved()  &&  this.validator  ==  null);  }	  return(this.isResolved()    &&    this.validator!=    null);    if(this.isResolved()    &&    this.validator!=    null);    }    	non-compiled	[CE]  unreachable  statement	131	None	replace
271	[BUG]  [BUGGY]  Predicate  <  JSType>  referencedType  =  this.referencedType.getReferencedType();  if(referencedType!=  null)  {  return  reference  ==  ';'  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  Predicate  <  JSType>  referencedType  =  this.referencedType.getReferencedType();  if(referencedType!=  null)  {  return  reference  ==  ';'  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	Predicate  <  JSType>  referencedType  =  this.referencedType.getReferencedType();  if(referencedType!=  null)  {  return  reference  ==  ';'	  if(this.isResolved())    {    return    super.setValidator(validator);    }    else    {    Predicate    <    JSType>    referencedType    =    this.referencedType.getReferencedType();    if(referencedType!=    null)    {    return    reference    	non-compiled	[CE]  ';'  expected	96	None	replace
272	[BUG]  [BUGGY]  Predicate  <  JSType>  referencedType  =  this.referencedType.getReferencedType();  if(referencedType!=  null)  {  return  reference!=  ';'  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  Predicate  <  JSType>  referencedType  =  this.referencedType.getReferencedType();  if(referencedType!=  null)  {  return  reference!=  ';'  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	Predicate  <  JSType>  referencedType  =  this.referencedType.getReferencedType();  if(referencedType!=  null)  {  return  reference!=  ';'	  if(this.isResolved())    {    return    super.setValidator(validator);    }    else    {    Predicate    <    JSType>    referencedType    =    this.referencedType.getReferencedType();    if(referencedType!=    null)    {    return    reference    	non-compiled	[CE]  ';'  expected	96	None	replace
273	[BUG]  [BUGGY]  Predicate  <  JSType>  referencedType  =  this.referencedType.getReferencedType();  if(referencedType!=  null)  {  return  reference  [Delete]  ';'  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  Predicate  <  JSType>  referencedType  =  this.referencedType.getReferencedType();  if(referencedType!=  null)  {  return  reference  [Delete]  ';'  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	Predicate  <  JSType>  referencedType  =  this.referencedType.getReferencedType();  if(referencedType!=  null)  {  return  reference  [Delete]  ';'	  if(this.isResolved())    {    return    super.setValidator(validator);    }    else    {    Predicate    <    JSType>    referencedType    =    this.referencedType.getReferencedType();    if(referencedType!=    null)    {    return    reference    	non-compiled	[CE]  ';'  expected	96	None	replace
274	[BUG]  [BUGGY]  Predicate  <  JSType>  referencedType  =  this.referencedType.getReferencedType();  if(referencedType!=  null)  {  return  reference  >=  ';'  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  Predicate  <  JSType>  referencedType  =  this.referencedType.getReferencedType();  if(referencedType!=  null)  {  return  reference  >=  ';'  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	Predicate  <  JSType>  referencedType  =  this.referencedType.getReferencedType();  if(referencedType!=  null)  {  return  reference  >=  ';'	  if(this.isResolved())    {    return    super.setValidator(validator);    }    else    {    Predicate    <    JSType>    referencedType    =    this.referencedType.getReferencedType();    if(referencedType!=    null)    {    return    reference    	non-compiled	[CE]  ';'  expected	96	None	replace
275	[BUG]  [BUGGY]  if(this.referencedType!=  null)  {  if(this.isResolved())  {  return  super.setValidator(validator);  }  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.referencedType!=  null)  {  if(this.isResolved())  {  return  super.setValidator(validator);  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.referencedType!=  null)  {  if(this.isResolved())  {  return  super.setValidator(validator);  }	  if(this.isResolved())    {    return    super.setValidator(validator);    }    else    {    Predicate    <    JSType>    referencedType    =    this.referencedType.getReferencedType();    if(referencedType!=    null)    {    return    reference    	non-compiled	[CE]  illegal  start  of  expression	96	None	replace
276	[BUG]  [BUGGY]  Predicate  <  JSType>  referencedType  =  this.referencedType.getReferencedType();  if(referencedType  ==  null)  {  return  reference!=  ';'  [CE]  ';'  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  Predicate  <  JSType>  referencedType  =  this.referencedType.getReferencedType();  if(referencedType  ==  null)  {  return  reference!=  ';'  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	Predicate  <  JSType>  referencedType  =  this.referencedType.getReferencedType();  if(referencedType  ==  null)  {  return  reference!=  ';'	  if(this.isResolved())    {    return    super.setValidator(validator);    }    else    {    Predicate    <    JSType>    referencedType    =    this.referencedType.getReferencedType();    if(referencedType!=    null)    {    return    reference    	non-compiled	[CE]  ';'  expected	96	None	replace
277	[BUG]  [BUGGY]  Predicate  <  JSType>  referencedType  =  this.referencedType.getReferencedType();  if(referencedType!=  null)  {  return  reference  >>  ';'  [CE]  ';'  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  Predicate  <  JSType>  referencedType  =  this.referencedType.getReferencedType();  if(referencedType!=  null)  {  return  reference  >>  ';'  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	Predicate  <  JSType>  referencedType  =  this.referencedType.getReferencedType();  if(referencedType!=  null)  {  return  reference  >>  ';'	  if(this.isResolved())    {    return    super.setValidator(validator);    }    else    {    Predicate    <    JSType>    referencedType    =    this.referencedType.getReferencedType();    if(referencedType!=    null)    {    return    reference    	non-compiled	[CE]  ';'  expected	96	None	replace
278	[BUG]  [BUGGY]  while(this.isResolved())  {  this.validator  =  super.setValidator(validator);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  while(this.isResolved())  {  this.validator  =  super.setValidator(validator);  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	while(this.isResolved())  {  this.validator  =  super.setValidator(validator);	  if(this.isResolved())    {    return    super.setValidator(validator);    }    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
279	[BUG]  [BUGGY]  this.isForwardDeclared())  {  return  super.setValidator(validator);  }  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  this.isForwardDeclared())  {  return  super.setValidator(validator);  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	this.isForwardDeclared())  {  return  super.setValidator(validator);  }	  if(this.isResolved())    {    return    super.setValidator(validator);    }    	non-compiled	[CE]  ';'  expected	38	None	replace
280	[BUG]  [BUGGY]  this.isResolved()  &&  super.setValidator(validator);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  this.isResolved()  &&  super.setValidator(validator);  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	this.isResolved()  &&  super.setValidator(validator);	  if(this.isResolved())    {    return    super.setValidator(validator);    }    	non-compiled	[CE]  not  a  statement	38	None	replace
281	[BUG]  [BUGGY]  while(this.isResolved())  {  if(validator!=  null)  {  return  super.setValidator(validator);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  while(this.isResolved())  {  if(validator!=  null)  {  return  super.setValidator(validator);  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	while(this.isResolved())  {  if(validator!=  null)  {  return  super.setValidator(validator);  }	  if(this.isResolved())    {    return    super.setValidator(validator);    }    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
282	[BUG]  [BUGGY]  while(this.isResolved())  {  if(validator  ==  null)  {  return  super.setValidator(validator);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  while(this.isResolved())  {  if(validator  ==  null)  {  return  super.setValidator(validator);  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	while(this.isResolved())  {  if(validator  ==  null)  {  return  super.setValidator(validator);  }	  if(this.isResolved())    {    return    super.setValidator(validator);    }    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
283	[BUG]  [BUGGY]  while(this.isResolved())  {  this.validator  =  super.setValidator(validator);  }  [CE]  incompatible  types  [FE]                        AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  while(this.isResolved())  {  this.validator  =  super.setValidator(validator);  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	while(this.isResolved())  {  this.validator  =  super.setValidator(validator);  }	  if(this.isResolved())    {    return    super.setValidator(validator);    }    	non-compiled	[CE]  incompatible  types	38	None	replace
284	[BUG]  [BUGGY]  if(this.isResolved())  {  return  false;  }  else  if(!this.forAnnotations)  {  forAnnotations  ignoreForwardReferencedTypes  =  this.ignoreForwardReferencedTypes;  if(ignoreForwardReferencedTypes)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.isResolved())  {  return  false;  }  else  if(!this.forAnnotations)  {  forAnnotations  ignoreForwardReferencedTypes  =  this.ignoreForwardReferencedTypes;  if(ignoreForwardReferencedTypes)  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.isResolved())  {  return  false;  }  else  if(!this.forAnnotations)  {  forAnnotations  ignoreForwardReferencedTypes  =  this.ignoreForwardReferencedTypes;  if(ignoreForwardReferencedTypes)  {  return  false;  }	  return    false;    if(!this.forAnnotations)    {    forAnnotations    ignoreForwardReferencedTypes    =    this.ignoreForwardReferencedTypes;    if(ignoreForwardReferencedTypes)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
285	[BUG]  [BUGGY]  if(!this.forAnnotations)  {  forAnnotations  ignoreForwardReferencedTypes  =  validator;  if(ignoreForwardReferencedTypes)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(!this.forAnnotations)  {  forAnnotations  ignoreForwardReferencedTypes  =  validator;  if(ignoreForwardReferencedTypes)  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(!this.forAnnotations)  {  forAnnotations  ignoreForwardReferencedTypes  =  validator;  if(ignoreForwardReferencedTypes)  {  return  false;  }	  return    false;    if(!this.forAnnotations)    {    forAnnotations    ignoreForwardReferencedTypes    =    this.ignoreForwardReferencedTypes;    if(ignoreForwardReferencedTypes)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
286	[BUG]  [BUGGY]  if(this.isResolved())  {  return  false;  }  else  if(!this.forAnnotations)  {  forAnnotations  ignoreForwardReferencedTypes  =  this.ignoreForwardReferencedTypes;  if(ignoreForwardReferencedTypes)  {  return  false  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.isResolved())  {  return  false;  }  else  if(!this.forAnnotations)  {  forAnnotations  ignoreForwardReferencedTypes  =  this.ignoreForwardReferencedTypes;  if(ignoreForwardReferencedTypes)  {  return  false  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.isResolved())  {  return  false;  }  else  if(!this.forAnnotations)  {  forAnnotations  ignoreForwardReferencedTypes  =  this.ignoreForwardReferencedTypes;  if(ignoreForwardReferencedTypes)  {  return  false	  return    false;    if(!this.forAnnotations)    {    forAnnotations    ignoreForwardReferencedTypes    =    this.ignoreForwardReferencedTypes;    if(ignoreForwardReferencedTypes)    {    return    false;    }    	non-compiled	[CE]  ';'  expected	84	None	replace
287	[BUG]  [BUGGY]  if(!this.forAnnotations)  {  forAnnotations  ignoreForwardReferencedTypes  =  null;  if(ignoreForwardReferencedTypes)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(!this.forAnnotations)  {  forAnnotations  ignoreForwardReferencedTypes  =  null;  if(ignoreForwardReferencedTypes)  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(!this.forAnnotations)  {  forAnnotations  ignoreForwardReferencedTypes  =  null;  if(ignoreForwardReferencedTypes)  {  return  false;  }	  return    false;    if(!this.forAnnotations)    {    forAnnotations    ignoreForwardReferencedTypes    =    this.ignoreForwardReferencedTypes;    if(ignoreForwardReferencedTypes)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
288	[BUG]  [BUGGY]  return  super.setValidator(this.validator);  return  super.setValidator(this.validator);  [CE]  unreachable  statement  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  return  super.setValidator(this.validator);  return  super.setValidator(this.validator);  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	return    super.setValidator(this.validator);    return  super.setValidator(this.validator);	  timeout    	non-compiled	[CE]  unreachable  statement	94	None	add
289	[BUG]  [BUGGY]  return  super.setValidator(this.validator);  if(this.isResolved())  {  return  super.setValidator(this.validator);  }  [CE]  unreachable  statement  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  return  super.setValidator(this.validator);  if(this.isResolved())  {  return  super.setValidator(this.validator);  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	return    super.setValidator(this.validator);    if(this.isResolved())  {  return  super.setValidator(this.validator);  }	  timeout    	non-compiled	[CE]  unreachable  statement	94	None	add
290	[BUG]  [BUGGY]  return  super.setValidator(this.validator);  if(this.isResolved())  {  return  super.setValidator(this.validator);  }  else  {  this.validator  =  validator;  }  [CE]  unreachable  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  return  super.setValidator(this.validator);  if(this.isResolved())  {  return  super.setValidator(this.validator);  }  else  {  this.validator  =  validator;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	return    super.setValidator(this.validator);    if(this.isResolved())  {  return  super.setValidator(this.validator);  }  else  {  this.validator  =  validator;  }	  timeout    	non-compiled	[CE]  unreachable  statement	94	None	add
291	[BUG]  [BUGGY]  return  super.setValidator(this.validator);  if(this.isResolved())  {  return  super.setValidator(this.validator);  }  else  {  Predicate  <  JSType>  referencedType  =  this.referencedType.getReferencedType();  if(referencedType!=  null)  {  return  reference  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  return  super.setValidator(this.validator);  if(this.isResolved())  {  return  super.setValidator(this.validator);  }  else  {  Predicate  <  JSType>  referencedType  =  this.referencedType.getReferencedType();  if(referencedType!=  null)  {  return  reference  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	return    super.setValidator(this.validator);    if(this.isResolved())  {  return  super.setValidator(this.validator);  }  else  {  Predicate  <  JSType>  referencedType  =  this.referencedType.getReferencedType();  if(referencedType!=  null)  {  return  reference	  timeout    	non-compiled	[CE]  ';'  expected	94	None	add
292	[BUG]  [BUGGY]  return  super.setValidator(this.validator);  if(this.isResolved())  {  return  super.setValidator(this.validator);  }  else  {  Predicate  <  JSType>  property  =  this.referencedType.getProperty(propertyName);  if(property!=  null)  {  return  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  return  super.setValidator(this.validator);  if(this.isResolved())  {  return  super.setValidator(this.validator);  }  else  {  Predicate  <  JSType>  property  =  this.referencedType.getProperty(propertyName);  if(property!=  null)  {  return  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	return    super.setValidator(this.validator);    if(this.isResolved())  {  return  super.setValidator(this.validator);  }  else  {  Predicate  <  JSType>  property  =  this.referencedType.getProperty(propertyName);  if(property!=  null)  {  return	  timeout    	non-compiled	[CE]  illegal  start  of  expression	94	None	add
293	[BUG]  [BUGGY]  return  super.setValidator(this.validator);  if(this.isResolved())  {  return  super.setValidator(this.validator);  }  else  {  Predicate  <  JSType>  property  =  this.referencedType.getProperty(propertyName);  if(property!=  null)  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  return  super.setValidator(this.validator);  if(this.isResolved())  {  return  super.setValidator(this.validator);  }  else  {  Predicate  <  JSType>  property  =  this.referencedType.getProperty(propertyName);  if(property!=  null)  {  return  true;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	return    super.setValidator(this.validator);    if(this.isResolved())  {  return  super.setValidator(this.validator);  }  else  {  Predicate  <  JSType>  property  =  this.referencedType.getProperty(propertyName);  if(property!=  null)  {  return  true;  }	  timeout    	non-compiled	[CE]  illegal  start  of  expression	94	None	add
294	[BUG]  [BUGGY]  return  super.setValidator(this.validator);  if(this.isResolved())  {  return  super.setValidator(this.validator);  }  else  {  Predicate  <  JSType>  property  =  this.referencedType.getProperty(propertyName);  if(property!=  null)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  return  super.setValidator(this.validator);  if(this.isResolved())  {  return  super.setValidator(this.validator);  }  else  {  Predicate  <  JSType>  property  =  this.referencedType.getProperty(propertyName);  if(property!=  null)  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	return    super.setValidator(this.validator);    if(this.isResolved())  {  return  super.setValidator(this.validator);  }  else  {  Predicate  <  JSType>  property  =  this.referencedType.getProperty(propertyName);  if(property!=  null)  {  return  false;  }	  timeout    	non-compiled	[CE]  illegal  start  of  expression	94	None	add
295	[BUG]  [BUGGY]  return  super.setValidator(this.validator);  if(this.isResolved())  {  return  super.setValidator(this.validator);  }  else  {  Predicate  <  JSType>  propertyNode  =  this.referencedType.getPropertyNode();  if(propertyNode!=  null)  {  return  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  return  super.setValidator(this.validator);  if(this.isResolved())  {  return  super.setValidator(this.validator);  }  else  {  Predicate  <  JSType>  propertyNode  =  this.referencedType.getPropertyNode();  if(propertyNode!=  null)  {  return  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	return    super.setValidator(this.validator);    if(this.isResolved())  {  return  super.setValidator(this.validator);  }  else  {  Predicate  <  JSType>  propertyNode  =  this.referencedType.getPropertyNode();  if(propertyNode!=  null)  {  return	  timeout    	non-compiled	[CE]  illegal  start  of  expression	94	None	add
296	[BUG]  [BUGGY]  if(this.isResolved())  {  return  super.setValidator(validator);  }  else  {  for(int  i  =  0;  i  <  this.isResolved();  i++)  {  return  super.setValidator(validator);  }  }  [CE]  bad  operand  types  for  binary  operator  '<'  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.isResolved())  {  return  super.setValidator(validator);  }  else  {  for(int  i  =  0;  i  <  this.isResolved();  i++)  {  return  super.setValidator(validator);  }  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.isResolved())  {  return  super.setValidator(validator);  }  else  {  for(int  i  =  0;  i  <  this.isResolved();  i++)  {  return  super.setValidator(validator);  }  }	  return    super.setValidator(validator);    if(this.isResolved())    {    return    super.setValidator(validator);    }    else    {    for(int    i    =    0;    i    <    this.isResolved();    i++)    {    return    super.setValidator(validator);    }    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '<'	126	None	replace
297	[BUG]  [BUGGY]  if(this.isResolved())  {  return  super.setValidator(validator);  }  else  {  for(int  i  =  0;  i  <  this.isResolved();  i++)  {  return  super.setVal  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.isResolved())  {  return  super.setValidator(validator);  }  else  {  for(int  i  =  0;  i  <  this.isResolved();  i++)  {  return  super.setVal  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.isResolved())  {  return  super.setValidator(validator);  }  else  {  for(int  i  =  0;  i  <  this.isResolved();  i++)  {  return  super.setVal	  return    super.setValidator(validator);    if(this.isResolved())    {    return    super.setValidator(validator);    }    else    {    for(int    i    =    0;    i    <    this.isResolved();    i++)    {    return    super.setValidator(validator);    }    	non-compiled	[CE]  ';'  expected	126	None	replace
298	[BUG]  [BUGGY]  if(this.isResolved())  {  return  super.setValidator(validator);  }  else  {  for(int  i  =  0;  i  <  this.isResolved();  i++)  {  return  super.set  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.isResolved())  {  return  super.setValidator(validator);  }  else  {  for(int  i  =  0;  i  <  this.isResolved();  i++)  {  return  super.set  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.isResolved())  {  return  super.setValidator(validator);  }  else  {  for(int  i  =  0;  i  <  this.isResolved();  i++)  {  return  super.set	  return    super.setValidator(validator);    if(this.isResolved())    {    return    super.setValidator(validator);    }    else    {    for(int    i    =    0;    i    <    this.isResolved();    i++)    {    return    super.setValidator(validator);    }    	non-compiled	[CE]  ';'  expected	126	None	replace
299	[BUG]  [BUGGY]  if(this.isResolved())  {  return  super.setValidator(validator);  }  else  {  for(int  i  =  0;  i  <  this.isResolved();  i++)  {  return  super.setValidator  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.isResolved())  {  return  super.setValidator(validator);  }  else  {  for(int  i  =  0;  i  <  this.isResolved();  i++)  {  return  super.setValidator  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.isResolved())  {  return  super.setValidator(validator);  }  else  {  for(int  i  =  0;  i  <  this.isResolved();  i++)  {  return  super.setValidator	  return    super.setValidator(validator);    if(this.isResolved())    {    return    super.setValidator(validator);    }    else    {    for(int    i    =    0;    i    <    this.isResolved();    i++)    {    return    super.setValidator(validator);    }    	non-compiled	[CE]  ';'  expected	126	None	replace
300	[BUG]  [BUGGY]  if(this.isResolved())  {  return  super.setValidator(validator);  }  else  {  for(int  i  =  0;  i  <  this.isResolved();  i++)  {  return  super.setValidator(validator  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.isResolved())  {  return  super.setValidator(validator);  }  else  {  for(int  i  =  0;  i  <  this.isResolved();  i++)  {  return  super.setValidator(validator  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.isResolved())  {  return  super.setValidator(validator);  }  else  {  for(int  i  =  0;  i  <  this.isResolved();  i++)  {  return  super.setValidator(validator	  return    super.setValidator(validator);    if(this.isResolved())    {    return    super.setValidator(validator);    }    else    {    for(int    i    =    0;    i    <    this.isResolved();    i++)    {    return    super.setValidator(validator);    }    	non-compiled	[CE]  ')'  expected	126	None	replace
301	[BUG]  [BUGGY]  if(this.isUnknownType()  ||  this.isReferencedType())  {  return  false;  }  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.isUnknownType()  ||  this.isReferencedType())  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.isUnknownType()  ||  this.isReferencedType())  {  return  false;  }	  if(this.isUnknownType())    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol	123	None	replace
302	[BUG]  [BUGGY]  if(this.isUnknownType()  ||  this.isForwardDeclared())  {  return  false;  }  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.isUnknownType()  ||  this.isForwardDeclared())  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.isUnknownType()  ||  this.isForwardDeclared())  {  return  false;  }	  if(this.isUnknownType())    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol	123	None	replace
303	[BUG]  [BUGGY]  if(!this.isUnknownType())  {  return  false;  }  [CE]  missing  return  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(!this.isUnknownType())  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(!this.isUnknownType())  {  return  false;  }	  if(this.isUnknownType())    {    return    false;    }    	non-compiled	[CE]  missing  return  statement	123	None	replace
304	[BUG]  [BUGGY]  if(this.isUnknownType()  ||  this.isSlotType())  {  return  false;  }  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.isUnknownType()  ||  this.isSlotType())  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.isUnknownType()  ||  this.isSlotType())  {  return  false;  }	  if(this.isUnknownType())    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol	123	None	replace
305	[BUG]  [BUGGY]  if(this.isUnknownType()  ||  this.isInferred())  {  return  false;  }  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.isUnknownType()  ||  this.isInferred())  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.isUnknownType()  ||  this.isInferred())  {  return  false;  }	  if(this.isUnknownType())    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol	123	None	replace
306	[BUG]  [BUGGY]  if(this.isUnknownType()  ||  this.isVarArgs())  {  return  false;  }  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.isUnknownType()  ||  this.isVarArgs())  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.isUnknownType()  ||  this.isVarArgs())  {  return  false;  }	  if(this.isUnknownType())    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol	123	None	replace
307	[BUG]  [BUGGY]  if(this.isResolved())  {  return  false;  forAnnotations  {  propertyNode  =  propertyNode.getFirstChild();  if(propertyNode!=  null)  {  return  true;  }  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.isResolved())  {  return  false;  forAnnotations  {  propertyNode  =  propertyNode.getFirstChild();  if(propertyNode!=  null)  {  return  true;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.isResolved())  {  return  false;  forAnnotations  {  propertyNode  =  propertyNode.getFirstChild();  if(propertyNode!=  null)  {  return  true;  }	  return    false;    if(isForwardDeclared)    {    forAnnotations    {    propertyNode    =    propertyNode.getFirstChild();    if(propertyNode!=    null)    {    return    true;    }    	non-compiled	[CE]  not  a  statement	140	None	replace
308	[BUG]  [BUGGY]  if(this.ignoreForwardReferencedTypes)  {  return  false;  forAnnotations  {  propertyNode  =  propertyNode.getFirstChild();  if(propertyNode!=  null)  {  return  true;  }  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.ignoreForwardReferencedTypes)  {  return  false;  forAnnotations  {  propertyNode  =  propertyNode.getFirstChild();  if(propertyNode!=  null)  {  return  true;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.ignoreForwardReferencedTypes)  {  return  false;  forAnnotations  {  propertyNode  =  propertyNode.getFirstChild();  if(propertyNode!=  null)  {  return  true;  }	  return    false;    if(isForwardDeclared)    {    forAnnotations    {    propertyNode    =    propertyNode.getFirstChild();    if(propertyNode!=    null)    {    return    true;    }    	non-compiled	[CE]  not  a  statement	140	None	replace
309	[BUG]  [BUGGY]  if(!this.isResolved())  {  return  false;  forAnnotations  {  propertyNode  =  propertyNode.getFirstChild();  if(propertyNode!=  null)  {  return  true;  }  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(!this.isResolved())  {  return  false;  forAnnotations  {  propertyNode  =  propertyNode.getFirstChild();  if(propertyNode!=  null)  {  return  true;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(!this.isResolved())  {  return  false;  forAnnotations  {  propertyNode  =  propertyNode.getFirstChild();  if(propertyNode!=  null)  {  return  true;  }	  return    false;    if(isForwardDeclared)    {    forAnnotations    {    propertyNode    =    propertyNode.getFirstChild();    if(propertyNode!=    null)    {    return    true;    }    	non-compiled	[CE]  not  a  statement	140	None	replace
310	[BUG]  [BUGGY]  if(this.ignoreForwardReferencedTypes)  {  return  false;  forAnnotations  {  propertyNode  =  propertyNode.getFirstChild();  if(propertyNode!=  null)  {  return  true;  }  }  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.ignoreForwardReferencedTypes)  {  return  false;  forAnnotations  {  propertyNode  =  propertyNode.getFirstChild();  if(propertyNode!=  null)  {  return  true;  }  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.ignoreForwardReferencedTypes)  {  return  false;  forAnnotations  {  propertyNode  =  propertyNode.getFirstChild();  if(propertyNode!=  null)  {  return  true;  }  }	  return    false;    if(isForwardDeclared)    {    forAnnotations    {    propertyNode    =    propertyNode.getFirstChild();    if(propertyNode!=    null)    {    return    true;    }    	non-compiled	[CE]  not  a  statement	140	None	replace
311	[BUG]  [BUGGY]  if(this.ignoreForwardReferencedTypes)  {  return  false;  }  else  if(isForwardDeclared)  {  forAnnotations  =  propertyNode.getFirstChild();  if(propertyNode!=  null)  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.ignoreForwardReferencedTypes)  {  return  false;  }  else  if(isForwardDeclared)  {  forAnnotations  =  propertyNode.getFirstChild();  if(propertyNode!=  null)  {  return  true;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.ignoreForwardReferencedTypes)  {  return  false;  }  else  if(isForwardDeclared)  {  forAnnotations  =  propertyNode.getFirstChild();  if(propertyNode!=  null)  {  return  true;  }	  return    false;    if(isForwardDeclared)    {    forAnnotations    {    propertyNode    =    propertyNode.getFirstChild();    if(propertyNode!=    null)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	140	None	replace
312	[BUG]  [BUGGY]  if(!this.isResolved())  {  return  false;  forAnnotations  {  propertyNode  =  propertyNode.getFirstChild();  if(propertyNode!=  null)  {  return  true;  }  }  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(!this.isResolved())  {  return  false;  forAnnotations  {  propertyNode  =  propertyNode.getFirstChild();  if(propertyNode!=  null)  {  return  true;  }  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(!this.isResolved())  {  return  false;  forAnnotations  {  propertyNode  =  propertyNode.getFirstChild();  if(propertyNode!=  null)  {  return  true;  }  }	  return    false;    if(isForwardDeclared)    {    forAnnotations    {    propertyNode    =    propertyNode.getFirstChild();    if(propertyNode!=    null)    {    return    true;    }    	non-compiled	[CE]  not  a  statement	140	None	replace
313	[BUG]  [BUGGY]  if(this.isResolved())  {  return  false;  forAnnotations  {  propertyNode  =  propertyNode.getFirstChild();  if(propertyNode!=  null)  {  return  true;  }  }  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.isResolved())  {  return  false;  forAnnotations  {  propertyNode  =  propertyNode.getFirstChild();  if(propertyNode!=  null)  {  return  true;  }  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.isResolved())  {  return  false;  forAnnotations  {  propertyNode  =  propertyNode.getFirstChild();  if(propertyNode!=  null)  {  return  true;  }  }	  return    false;    if(isForwardDeclared)    {    forAnnotations    {    propertyNode    =    propertyNode.getFirstChild();    if(propertyNode!=    null)    {    return    true;    }    	non-compiled	[CE]  not  a  statement	140	None	replace
314	[BUG]  [BUGGY]  Predicate  <  JSType>  property  =  this.referencedTypes.get(reference);  if(property!=  null)  {  return  true;  }  [CE]  cannot  find  symbol  referencedTypes  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  Predicate  <  JSType>  property  =  this.referencedTypes.get(reference);  if(property!=  null)  {  return  true;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	Predicate  <  JSType>  property  =  this.referencedTypes.get(reference);  if(property!=  null)  {  return  true;  }	  if(this.isResolved())    {    return    false;    }    else    {    Predicate    <    JSType>    property    =    this.referencedTypes.get(reference);    if(property!=    null)    {    return    true;    }    	non-compiled	[CE]  cannot  find  symbol  referencedTypes	102	None	replace
315	[BUG]  [BUGGY]  if(this.referencedTypes!=  null)  {  if(this.isResolved())  {  return  false;  }  else  {  Predicate  <  JSType>  property  =  this.referencedTypes.get(reference);  if(property!=  null)  {  return  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.referencedTypes!=  null)  {  if(this.isResolved())  {  return  false;  }  else  {  Predicate  <  JSType>  property  =  this.referencedTypes.get(reference);  if(property!=  null)  {  return  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.referencedTypes!=  null)  {  if(this.isResolved())  {  return  false;  }  else  {  Predicate  <  JSType>  property  =  this.referencedTypes.get(reference);  if(property!=  null)  {  return	  if(this.isResolved())    {    return    false;    }    else    {    Predicate    <    JSType>    property    =    this.referencedTypes.get(reference);    if(property!=    null)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	102	None	replace
316	[BUG]  [BUGGY]  if(this.referencedTypes!=  null)  {  if(this.isResolved())  {  return  false;  }  else  {  Predicate  <  JSType>  property  =  this.referencedTypes.get(reference);  if(property!=  null)  {  return  true  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.referencedTypes!=  null)  {  if(this.isResolved())  {  return  false;  }  else  {  Predicate  <  JSType>  property  =  this.referencedTypes.get(reference);  if(property!=  null)  {  return  true  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.referencedTypes!=  null)  {  if(this.isResolved())  {  return  false;  }  else  {  Predicate  <  JSType>  property  =  this.referencedTypes.get(reference);  if(property!=  null)  {  return  true	  if(this.isResolved())    {    return    false;    }    else    {    Predicate    <    JSType>    property    =    this.referencedTypes.get(reference);    if(property!=    null)    {    return    true;    }    	non-compiled	[CE]  ';'  expected	102	None	replace
317	[BUG]  [BUGGY]  Predicate  <  JSType>  property  =  this.referencedTypes.get(reference);  if(property  ==  null)  {  return  true;  }  [CE]  cannot  find  symbol  referencedTypes  [FE]                          AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  Predicate  <  JSType>  property  =  this.referencedTypes.get(reference);  if(property  ==  null)  {  return  true;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	Predicate  <  JSType>  property  =  this.referencedTypes.get(reference);  if(property  ==  null)  {  return  true;  }	  if(this.isResolved())    {    return    false;    }    else    {    Predicate    <    JSType>    property    =    this.referencedTypes.get(reference);    if(property!=    null)    {    return    true;    }    	non-compiled	[CE]  cannot  find  symbol  referencedTypes	102	None	replace
318	[BUG]  [BUGGY]  if(this.referencedTypes!=  null  ||  this.isResolved())  {  return  false;  }  else  {  Predicate  <  JSType>  property  =  this.referencedTypes.get(reference);  if(property!=  null)  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.referencedTypes!=  null  ||  this.isResolved())  {  return  false;  }  else  {  Predicate  <  JSType>  property  =  this.referencedTypes.get(reference);  if(property!=  null)  {  return  true;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.referencedTypes!=  null  ||  this.isResolved())  {  return  false;  }  else  {  Predicate  <  JSType>  property  =  this.referencedTypes.get(reference);  if(property!=  null)  {  return  true;  }	  if(this.isResolved())    {    return    false;    }    else    {    Predicate    <    JSType>    property    =    this.referencedTypes.get(reference);    if(property!=    null)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	102	None	replace
319	[BUG]  [BUGGY]  if(this.referencedTypes!=  null)  {  if(this.isResolved())  {  return  false;  }  else  {  Predicate  <  JSType>  property  =  this.referencedTypes.get(reference);  if(property!=  null)  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.referencedTypes!=  null)  {  if(this.isResolved())  {  return  false;  }  else  {  Predicate  <  JSType>  property  =  this.referencedTypes.get(reference);  if(property!=  null)  {  return  true;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.referencedTypes!=  null)  {  if(this.isResolved())  {  return  false;  }  else  {  Predicate  <  JSType>  property  =  this.referencedTypes.get(reference);  if(property!=  null)  {  return  true;  }	  if(this.isResolved())    {    return    false;    }    else    {    Predicate    <    JSType>    property    =    this.referencedTypes.get(reference);    if(property!=    null)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	102	None	replace
320	[BUG]  [BUGGY]  if(this.referencedTypes!=  null)  {  if(!this.isResolved())  {  return  false;  }  else  {  Predicate  <  JSType>  property  =  this.referencedTypes.get(reference);  if(property!=  null)  {  return  [CE]  illegal  start  of  expression  [FE]                                AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.referencedTypes!=  null)  {  if(!this.isResolved())  {  return  false;  }  else  {  Predicate  <  JSType>  property  =  this.referencedTypes.get(reference);  if(property!=  null)  {  return  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.referencedTypes!=  null)  {  if(!this.isResolved())  {  return  false;  }  else  {  Predicate  <  JSType>  property  =  this.referencedTypes.get(reference);  if(property!=  null)  {  return	  if(this.isResolved())    {    return    false;    }    else    {    Predicate    <    JSType>    property    =    this.referencedTypes.get(reference);    if(property!=    null)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	102	None	replace
321	[BUG]  [BUGGY]  if(!this.isResolved())  {  return  false;  if(isForwardDeclared)  {  forAnnotations  {  propertyNode  =  propertyNode.getFirstChild();  if(propertyNode!=  propertyNode)  {  return  false;  }  }  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(!this.isResolved())  {  return  false;  if(isForwardDeclared)  {  forAnnotations  {  propertyNode  =  propertyNode.getFirstChild();  if(propertyNode!=  propertyNode)  {  return  false;  }  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(!this.isResolved())  {  return  false;  if(isForwardDeclared)  {  forAnnotations  {  propertyNode  =  propertyNode.getFirstChild();  if(propertyNode!=  propertyNode)  {  return  false;  }  }	  return    false;    if(isForwardDeclared)    {    forAnnotations    {    propertyNode    =    propertyNode.getFirstChild();    if(propertyNode!=    propertyNode)    {    return    false;    }    	non-compiled	[CE]  not  a  statement	144	None	replace
322	[BUG]  [BUGGY]  if(this.isResolved())  {  return  false;  forAnnotations  {  propertyNode  =  propertyNode.getFirstChild();  if(propertyNode!=  propertyNode)  {  return  false;  }  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.isResolved())  {  return  false;  forAnnotations  {  propertyNode  =  propertyNode.getFirstChild();  if(propertyNode!=  propertyNode)  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.isResolved())  {  return  false;  forAnnotations  {  propertyNode  =  propertyNode.getFirstChild();  if(propertyNode!=  propertyNode)  {  return  false;  }	  return    false;    if(isForwardDeclared)    {    forAnnotations    {    propertyNode    =    propertyNode.getFirstChild();    if(propertyNode!=    propertyNode)    {    return    false;    }    	non-compiled	[CE]  not  a  statement	144	None	replace
323	[BUG]  [BUGGY]  if(!this.isResolved())  {  return  false;  if(isForwardDeclared)  {  forAnnotations  {  propertyNode  =  propertyNode.getFirstChild();  if(propertyNode!=  propertyNode)  {  return  false;  }  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(!this.isResolved())  {  return  false;  if(isForwardDeclared)  {  forAnnotations  {  propertyNode  =  propertyNode.getFirstChild();  if(propertyNode!=  propertyNode)  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(!this.isResolved())  {  return  false;  if(isForwardDeclared)  {  forAnnotations  {  propertyNode  =  propertyNode.getFirstChild();  if(propertyNode!=  propertyNode)  {  return  false;  }	  return    false;    if(isForwardDeclared)    {    forAnnotations    {    propertyNode    =    propertyNode.getFirstChild();    if(propertyNode!=    propertyNode)    {    return    false;    }    	non-compiled	[CE]  not  a  statement	144	None	replace
324	[BUG]  [BUGGY]  if(this.ignoreForwardReferencedTypes)  {  return  false;  forAnnotations  {  propertyNode  =  propertyNode.getFirstChild();  if(propertyNode!=  propertyNode)  {  return  false;  }  [CE]  not  a  statement  [FE]                            AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.ignoreForwardReferencedTypes)  {  return  false;  forAnnotations  {  propertyNode  =  propertyNode.getFirstChild();  if(propertyNode!=  propertyNode)  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.ignoreForwardReferencedTypes)  {  return  false;  forAnnotations  {  propertyNode  =  propertyNode.getFirstChild();  if(propertyNode!=  propertyNode)  {  return  false;  }	  return    false;    if(isForwardDeclared)    {    forAnnotations    {    propertyNode    =    propertyNode.getFirstChild();    if(propertyNode!=    propertyNode)    {    return    false;    }    	non-compiled	[CE]  not  a  statement	144	None	replace
325	[BUG]  [BUGGY]  if(!this.isResolved())  {  return  false;  forAnnotations  {  propertyNode  =  propertyNode.getFirstChild();  if(propertyNode!=  propertyNode)  {  return  false;  }  [CE]  not  a  statement  [FE]                              AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(!this.isResolved())  {  return  false;  forAnnotations  {  propertyNode  =  propertyNode.getFirstChild();  if(propertyNode!=  propertyNode)  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(!this.isResolved())  {  return  false;  forAnnotations  {  propertyNode  =  propertyNode.getFirstChild();  if(propertyNode!=  propertyNode)  {  return  false;  }	  return    false;    if(isForwardDeclared)    {    forAnnotations    {    propertyNode    =    propertyNode.getFirstChild();    if(propertyNode!=    propertyNode)    {    return    false;    }    	non-compiled	[CE]  not  a  statement	144	None	replace
326	[BUG]  [BUGGY]  if(!this.isResolved())  {  return  false;  if(isForwardDeclared)  {  forAnnotations  {  propertyNode  =  propertyNode.getFirstChild();  if(propertyNode!=  propertyNode)  {  return  true;  }  [CE]  not  a  statement  [FE]                                AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(!this.isResolved())  {  return  false;  if(isForwardDeclared)  {  forAnnotations  {  propertyNode  =  propertyNode.getFirstChild();  if(propertyNode!=  propertyNode)  {  return  true;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(!this.isResolved())  {  return  false;  if(isForwardDeclared)  {  forAnnotations  {  propertyNode  =  propertyNode.getFirstChild();  if(propertyNode!=  propertyNode)  {  return  true;  }	  return    false;    if(isForwardDeclared)    {    forAnnotations    {    propertyNode    =    propertyNode.getFirstChild();    if(propertyNode!=    propertyNode)    {    return    false;    }    	non-compiled	[CE]  not  a  statement	144	None	replace
327	[BUG]  [BUGGY]  if(!this.isResolved())  {  return  false;  if(isForwardDeclared)  {  forAnnotations  {  propertyNode  =  propertyNode.getFirstChild();  if(propertyNode  ==  propertyNode)  {  return  false;  }  }  [CE]  not  a  statement  [FE]                                  AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(!this.isResolved())  {  return  false;  if(isForwardDeclared)  {  forAnnotations  {  propertyNode  =  propertyNode.getFirstChild();  if(propertyNode  ==  propertyNode)  {  return  false;  }  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(!this.isResolved())  {  return  false;  if(isForwardDeclared)  {  forAnnotations  {  propertyNode  =  propertyNode.getFirstChild();  if(propertyNode  ==  propertyNode)  {  return  false;  }  }	  return    false;    if(isForwardDeclared)    {    forAnnotations    {    propertyNode    =    propertyNode.getFirstChild();    if(propertyNode!=    propertyNode)    {    return    false;    }    	non-compiled	[CE]  not  a  statement	144	None	replace
328	[BUG]  [BUGGY]  if(this.forType  ==  null)  {  return  true;  }  [CE]  cannot  find  symbol  forType  [FE]                          AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.forType  ==  null)  {  return  true;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.forType  ==  null)  {  return  true;  }	  if(this.forType    ==    null)    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol  forType	13	None	replace
329	[BUG]  [BUGGY]  if(this.forType  ==  null  ||  this.forType!=  null)  {  return  false;  }  [CE]  cannot  find  symbol  forType  [FE]                            AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.forType  ==  null  ||  this.forType!=  null)  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.forType  ==  null  ||  this.forType!=  null)  {  return  false;  }	  if(this.forType    ==    null)    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol  forType	13	None	replace
330	[BUG]  [BUGGY]  if(this.forType!=  null)  {  return  true;  }  [CE]  cannot  find  symbol  forType  [FE]                              AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.forType!=  null)  {  return  true;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.forType!=  null)  {  return  true;  }	  if(this.forType    ==    null)    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol  forType	13	None	replace
331	[BUG]  [BUGGY]  this.isUnknownType();  [CE]  missing  return  statement  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  this.isUnknownType();  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	this.isUnknownType();	  if(this.isUnknownType())    {    return    true;    }    	non-compiled	[CE]  missing  return  statement	124	None	replace
332	[BUG]  [BUGGY]  if(this.isUnknownType()  ||  this.isReferencedType())  {  return  true;  }  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.isUnknownType()  ||  this.isReferencedType())  {  return  true;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.isUnknownType()  ||  this.isReferencedType())  {  return  true;  }	  if(this.isUnknownType())    {    return    true;    }    	non-compiled	[CE]  cannot  find  symbol	124	None	replace
333	[BUG]  [BUGGY]  if(this.isUnknownType()  ||  this.isInferred())  {  return  true;  }  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.isUnknownType()  ||  this.isInferred())  {  return  true;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.isUnknownType()  ||  this.isInferred())  {  return  true;  }	  if(this.isUnknownType())    {    return    true;    }    	non-compiled	[CE]  cannot  find  symbol	124	None	replace
334	[BUG]  [BUGGY]  if(this.isUnknownType()  ||  this.isResolved())  {  return  true;  }  [CE]  missing  return  statement  [FE]                      AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.isUnknownType()  ||  this.isResolved())  {  return  true;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.isUnknownType()  ||  this.isResolved())  {  return  true;  }	  if(this.isUnknownType())    {    return    true;    }    	non-compiled	[CE]  missing  return  statement	124	None	replace
335	[BUG]  [BUGGY]  if(this.isUnknownType()  ||  this.isSlotType())  {  return  true;  }  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.isUnknownType()  ||  this.isSlotType())  {  return  true;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.isUnknownType()  ||  this.isSlotType())  {  return  true;  }	  if(this.isUnknownType())    {    return    true;    }    	non-compiled	[CE]  cannot  find  symbol	124	None	replace
336	[BUG]  [BUGGY]  if(this.isUnknownType()  ||  this.isVarArgs())  {  return  true;  }  [CE]  cannot  find  symbol  [FE]                          AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.isUnknownType()  ||  this.isVarArgs())  {  return  true;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.isUnknownType()  ||  this.isVarArgs())  {  return  true;  }	  if(this.isUnknownType())    {    return    true;    }    	non-compiled	[CE]  cannot  find  symbol	124	None	replace
337	[BUG]  [BUGGY]  if(this.forAnnotations!=  forAnnotations)  {  forAnnotations  ignoreForwardReferencedTypes  =  this.ignoreForwardReferencedTypes;  if(ignoreForwardReferencedTypes  ==  false)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.forAnnotations!=  forAnnotations)  {  forAnnotations  ignoreForwardReferencedTypes  =  this.ignoreForwardReferencedTypes;  if(ignoreForwardReferencedTypes  ==  false)  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.forAnnotations!=  forAnnotations)  {  forAnnotations  ignoreForwardReferencedTypes  =  this.ignoreForwardReferencedTypes;  if(ignoreForwardReferencedTypes  ==  false)  {  return  false;  }	  return    false;    if(this.forAnnotations!=    forAnnotations)    {    forAnnotations    ignoreForwardReferencedTypes    =    this.ignoreForwardReferencedTypes;    if(ignoreForwardReferencedTypes    ==    false)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
338	[BUG]  [BUGGY]  if(this.forAnnotations  ==  forAnnotations)  {  forAnnotations  ignoreForwardReferencedTypes  =  this.ignoreForwardReferencedTypes;  if(ignoreForwardReferencedTypes  ==  false)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.forAnnotations  ==  forAnnotations)  {  forAnnotations  ignoreForwardReferencedTypes  =  this.ignoreForwardReferencedTypes;  if(ignoreForwardReferencedTypes  ==  false)  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.forAnnotations  ==  forAnnotations)  {  forAnnotations  ignoreForwardReferencedTypes  =  this.ignoreForwardReferencedTypes;  if(ignoreForwardReferencedTypes  ==  false)  {  return  false;  }	  return    false;    if(this.forAnnotations!=    forAnnotations)    {    forAnnotations    ignoreForwardReferencedTypes    =    this.ignoreForwardReferencedTypes;    if(ignoreForwardReferencedTypes    ==    false)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
339	[BUG]  [BUGGY]  if(this.forAnnotations!=  forAnnotations)  {  inferred  =  true;  forAnnotations  ignoreForwardReferencedTypes  =  this.ignoreForwardReferencedTypes;  if(ignoreForwardReferencedTypes  ==  false)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.forAnnotations!=  forAnnotations)  {  inferred  =  true;  forAnnotations  ignoreForwardReferencedTypes  =  this.ignoreForwardReferencedTypes;  if(ignoreForwardReferencedTypes  ==  false)  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.forAnnotations!=  forAnnotations)  {  inferred  =  true;  forAnnotations  ignoreForwardReferencedTypes  =  this.ignoreForwardReferencedTypes;  if(ignoreForwardReferencedTypes  ==  false)  {  return  false;  }	  return    false;    if(this.forAnnotations!=    forAnnotations)    {    forAnnotations    ignoreForwardReferencedTypes    =    this.ignoreForwardReferencedTypes;    if(ignoreForwardReferencedTypes    ==    false)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
340	[BUG]  [BUGGY]  if(this.forAnnotations!=  forAnnotations)  {  forAnnotations  ignoreForwardReferencedTypes  =  this.ignoreForwardReferencedTypes;  if(ignoreForwardReferencedTypes  ==  false)  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.forAnnotations!=  forAnnotations)  {  forAnnotations  ignoreForwardReferencedTypes  =  this.ignoreForwardReferencedTypes;  if(ignoreForwardReferencedTypes  ==  false)  {  return  true;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.forAnnotations!=  forAnnotations)  {  forAnnotations  ignoreForwardReferencedTypes  =  this.ignoreForwardReferencedTypes;  if(ignoreForwardReferencedTypes  ==  false)  {  return  true;  }	  return    false;    if(this.forAnnotations!=    forAnnotations)    {    forAnnotations    ignoreForwardReferencedTypes    =    this.ignoreForwardReferencedTypes;    if(ignoreForwardReferencedTypes    ==    false)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
341	[BUG]  [BUGGY]  if(this.forAnnotations!=  forAnnotations)  {  inferred  =  false;  forAnnotations  ignoreForwardReferencedTypes  =  this.ignoreForwardReferencedTypes;  if(ignoreForwardReferencedTypes  ==  false)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                                AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.forAnnotations!=  forAnnotations)  {  inferred  =  false;  forAnnotations  ignoreForwardReferencedTypes  =  this.ignoreForwardReferencedTypes;  if(ignoreForwardReferencedTypes  ==  false)  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.forAnnotations!=  forAnnotations)  {  inferred  =  false;  forAnnotations  ignoreForwardReferencedTypes  =  this.ignoreForwardReferencedTypes;  if(ignoreForwardReferencedTypes  ==  false)  {  return  false;  }	  return    false;    if(this.forAnnotations!=    forAnnotations)    {    forAnnotations    ignoreForwardReferencedTypes    =    this.ignoreForwardReferencedTypes;    if(ignoreForwardReferencedTypes    ==    false)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
342	[BUG]  [BUGGY]  if(this.forAnnotations!=  forAnnotations)  {  forAnnotations  ignoreForwardReferencedTypes  =  this.ignoreForwardReferencedTypes;  if(ignoreForwardReferencedTypes  ==  true)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                                  AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.forAnnotations!=  forAnnotations)  {  forAnnotations  ignoreForwardReferencedTypes  =  this.ignoreForwardReferencedTypes;  if(ignoreForwardReferencedTypes  ==  true)  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.forAnnotations!=  forAnnotations)  {  forAnnotations  ignoreForwardReferencedTypes  =  this.ignoreForwardReferencedTypes;  if(ignoreForwardReferencedTypes  ==  true)  {  return  false;  }	  return    false;    if(this.forAnnotations!=    forAnnotations)    {    forAnnotations    ignoreForwardReferencedTypes    =    this.ignoreForwardReferencedTypes;    if(ignoreForwardReferencedTypes    ==    false)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
343	[BUG]  [BUGGY]  if(this.forAnnotations!=  forAnnotations)  {  forAnnotations  ignoreForwardReferencedTypes  =  validator.getForwardReferencedTypes();  if(ignoreForwardReferencedTypes  ==  false)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                                    AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.forAnnotations!=  forAnnotations)  {  forAnnotations  ignoreForwardReferencedTypes  =  validator.getForwardReferencedTypes();  if(ignoreForwardReferencedTypes  ==  false)  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.forAnnotations!=  forAnnotations)  {  forAnnotations  ignoreForwardReferencedTypes  =  validator.getForwardReferencedTypes();  if(ignoreForwardReferencedTypes  ==  false)  {  return  false;  }	  return    false;    if(this.forAnnotations!=    forAnnotations)    {    forAnnotations    ignoreForwardReferencedTypes    =    this.ignoreForwardReferencedTypes;    if(ignoreForwardReferencedTypes    ==    false)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
344	[BUG]  [BUGGY]  if(this.ignoreForwardReferencedTypes  ==  null)  {  return  false;  }  [CE]  cannot  find  symbol  ignoreForwardReferencedTypes  [FE]                          AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.ignoreForwardReferencedTypes  ==  null)  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.ignoreForwardReferencedTypes  ==  null)  {  return  false;  }	  if(this.forAnonymousTypes    ==    null)    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol  ignoreForwardReferencedTypes	93	None	replace
345	[BUG]  [BUGGY]  if(this.ignoreForwardReferencedTypes!=  null)  {  return  false;  }  [CE]  cannot  find  symbol  ignoreForwardReferencedTypes  [FE]                            AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.ignoreForwardReferencedTypes!=  null)  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.ignoreForwardReferencedTypes!=  null)  {  return  false;  }	  if(this.forAnonymousTypes    ==    null)    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol  ignoreForwardReferencedTypes	93	None	replace
346	[BUG]  [BUGGY]  if(this.forAnonymousTypes!=  null)  {  return  true;  }  [CE]  cannot  find  symbol  forAnonymousTypes  [FE]                              AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.forAnonymousTypes!=  null)  {  return  true;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.forAnonymousTypes!=  null)  {  return  true;  }	  if(this.forAnonymousTypes    ==    null)    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol  forAnonymousTypes	93	None	replace
347	[BUG]  [BUGGY]  if(!this.isReferenced())  {  return  false;  }  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(!this.isReferenced())  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(!this.isReferenced())  {  return  false;  }	  if(this.isReferenced())    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol	76	None	replace
348	[BUG]  [BUGGY]  if(this.isReferenced()  ||  this.slotType.isReferenced())  {  return  false;  }  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.isReferenced()  ||  this.slotType.isReferenced())  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.isReferenced()  ||  this.slotType.isReferenced())  {  return  false;  }	  if(this.isReferenced())    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol	76	None	replace
349	[BUG]  [BUGGY]  if(isReferenced())  {  return  false;  }  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(isReferenced())  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(isReferenced())  {  return  false;  }	  if(this.isReferenced())    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol	76	None	replace
350	[BUG]  [BUGGY]  if(referenced.isReferenced())  {  return  false;  }  [CE]  cannot  find  symbol  referenced  [FE]                          AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(referenced.isReferenced())  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(referenced.isReferenced())  {  return  false;  }	  if(this.isReferenced())    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol  referenced	76	None	replace
351	[BUG]  [BUGGY]  if(referencedType.isReferenced())  {  return  false;  }  [CE]  referencedType  has  private  access  in  ProxyObjectType  [FE]                            AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(referencedType.isReferenced())  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(referencedType.isReferenced())  {  return  false;  }	  if(this.isReferenced())    {    return    false;    }    	non-compiled	[CE]  referencedType  has  private  access  in  ProxyObjectType	76	None	replace
352	[BUG]  [BUGGY]  if(this.isReferencedType())  {  return  false;  }  [CE]  cannot  find  symbol  [FE]                              AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.isReferencedType())  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.isReferencedType())  {  return  false;  }	  if(this.isReferenced())    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol	76	None	replace
353	[BUG]  [BUGGY]  this.isResolved())  {  return  true;  }  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  this.isResolved())  {  return  true;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	this.isResolved())  {  return  true;  }	  this.isForwardDeclared())    {    return    true;    }    	non-compiled	[CE]  ';'  expected	74	None	replace
354	[BUG]  [BUGGY]  this.isReferencedTypes())  {  return  true;  }  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  this.isReferencedTypes())  {  return  true;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	this.isReferencedTypes())  {  return  true;  }	  this.isForwardDeclared())    {    return    true;    }    	non-compiled	[CE]  ';'  expected	74	None	replace
355	[BUG]  [BUGGY]  this.isForwardDeclared()  &&  this.ignoreForwardReferencedTypes)  {  return  false;  }  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  this.isForwardDeclared()  &&  this.ignoreForwardReferencedTypes)  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	this.isForwardDeclared()  &&  this.ignoreForwardReferencedTypes)  {  return  false;  }	  this.isForwardDeclared())    {    return    true;    }    	non-compiled	[CE]  not  a  statement	74	None	replace
356	[BUG]  [BUGGY]  this.isReferencedType())  {  return  true;  }  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  this.isReferencedType())  {  return  true;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	this.isReferencedType())  {  return  true;  }	  this.isForwardDeclared())    {    return    true;    }    	non-compiled	[CE]  ';'  expected	74	None	replace
357	[BUG]  [BUGGY]  this.isInferred())  {  return  true;  }  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  this.isInferred())  {  return  true;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	this.isInferred())  {  return  true;  }	  this.isForwardDeclared())    {    return    true;    }    	non-compiled	[CE]  ';'  expected	74	None	replace
358	[BUG]  [BUGGY]  Predicate  <  JSType>  propertyNode  =  this.propertyNode.getValue();  if(propertyNode!=  null)  {  return  false;  }  [CE]  cannot  find  symbol  propertyNode  [FE]                                      AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  Predicate  <  JSType>  propertyNode  =  this.propertyNode.getValue();  if(propertyNode!=  null)  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	Predicate  <  JSType>  propertyNode  =  this.propertyNode.getValue();  if(propertyNode!=  null)  {  return  false;  }	  if(this.isResolved())    {    Predicate    <    JSType>    propertyNode    =    this.propertyNode.getValue();    if(propertyNode!=    null)    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol  propertyNode	114	None	replace
359	[BUG]  [BUGGY]  Predicate  <  JSType>  propertyNode  =  this.propertyNode.getValue();  if(propertyNode  ==  null)  {  return  false;  }  [CE]  cannot  find  symbol  propertyNode  [FE]                                        AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  Predicate  <  JSType>  propertyNode  =  this.propertyNode.getValue();  if(propertyNode  ==  null)  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	Predicate  <  JSType>  propertyNode  =  this.propertyNode.getValue();  if(propertyNode  ==  null)  {  return  false;  }	  if(this.isResolved())    {    Predicate    <    JSType>    propertyNode    =    this.propertyNode.getValue();    if(propertyNode!=    null)    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol  propertyNode	114	None	replace
360	[BUG]  [BUGGY]  if(this.isResolved())  {  Predicate  <  JSType>  propertyNode  =  this.propertyNode.getValue();  if(propertyNode  ==  null)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                                          AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.isResolved())  {  Predicate  <  JSType>  propertyNode  =  this.propertyNode.getValue();  if(propertyNode  ==  null)  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.isResolved())  {  Predicate  <  JSType>  propertyNode  =  this.propertyNode.getValue();  if(propertyNode  ==  null)  {  return  false;  }	  if(this.isResolved())    {    Predicate    <    JSType>    propertyNode    =    this.propertyNode.getValue();    if(propertyNode!=    null)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	114	None	replace
361	[BUG]  [BUGGY]  this.propertyNode  =  propertyNode.getValue();  if(propertyNode!=  null)  {  return  false;  }  [CE]  cannot  find  symbol  propertyNode  [FE]                                            AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  this.propertyNode  =  propertyNode.getValue();  if(propertyNode!=  null)  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	this.propertyNode  =  propertyNode.getValue();  if(propertyNode!=  null)  {  return  false;  }	  if(this.isResolved())    {    Predicate    <    JSType>    propertyNode    =    this.propertyNode.getValue();    if(propertyNode!=    null)    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol  propertyNode	114	None	replace
362	[BUG]  [BUGGY]  Predicate  <  JSType>  property  =  this.referencedTypes.get(reference);  if(property.isResolved())  {  return  true;  }  [CE]  cannot  find  symbol  referencedTypes  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  Predicate  <  JSType>  property  =  this.referencedTypes.get(reference);  if(property.isResolved())  {  return  true;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	Predicate  <  JSType>  property  =  this.referencedTypes.get(reference);  if(property.isResolved())  {  return  true;  }	  if(this.validator!=    null)    {    return    super.setValidator(validator);    }    else    {    Predicate    <    JSType>    property    =    this.referencedTypes.get(reference);    if(property.isResolved())    {    return    true;    }    	non-compiled	[CE]  cannot  find  symbol  referencedTypes	97	None	replace
363	[BUG]  [BUGGY]  if(this.referencedTypes!=  null)  {  if(this.validator!=  null)  {  return  super.setValidator(validator);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.referencedTypes!=  null)  {  if(this.validator!=  null)  {  return  super.setValidator(validator);  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.referencedTypes!=  null)  {  if(this.validator!=  null)  {  return  super.setValidator(validator);  }	  if(this.validator!=    null)    {    return    super.setValidator(validator);    }    else    {    Predicate    <    JSType>    property    =    this.referencedTypes.get(reference);    if(property.isResolved())    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	97	None	replace
364	[BUG]  [BUGGY]  if(this.referencedTypes!=  null)  {  if(validator!=  null)  {  return  super.setValidator(validator);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.referencedTypes!=  null)  {  if(validator!=  null)  {  return  super.setValidator(validator);  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.referencedTypes!=  null)  {  if(validator!=  null)  {  return  super.setValidator(validator);  }	  if(this.validator!=    null)    {    return    super.setValidator(validator);    }    else    {    Predicate    <    JSType>    property    =    this.referencedTypes.get(reference);    if(property.isResolved())    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	97	None	replace
365	[BUG]  [BUGGY]  if(this.referencedTypes!=  null)  {  if(this.validator!=  null)  {  return  super.setValidator(validator);  }  else  {  Predicate  <  JSType>  property  =  this.referencedTypes.get(reference);  if(prop  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.referencedTypes!=  null)  {  if(this.validator!=  null)  {  return  super.setValidator(validator);  }  else  {  Predicate  <  JSType>  property  =  this.referencedTypes.get(reference);  if(prop  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.referencedTypes!=  null)  {  if(this.validator!=  null)  {  return  super.setValidator(validator);  }  else  {  Predicate  <  JSType>  property  =  this.referencedTypes.get(reference);  if(prop	  if(this.validator!=    null)    {    return    super.setValidator(validator);    }    else    {    Predicate    <    JSType>    property    =    this.referencedTypes.get(reference);    if(property.isResolved())    {    return    true;    }    	non-compiled	[CE]  ')'  expected	97	None	replace
366	[BUG]  [BUGGY]  Predicate  <  JSType>  super  =  this.referencedTypes.get(reference);  if(property.isResolved())  {  return  true;  }  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  Predicate  <  JSType>  super  =  this.referencedTypes.get(reference);  if(property.isResolved())  {  return  true;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	Predicate  <  JSType>  super  =  this.referencedTypes.get(reference);  if(property.isResolved())  {  return  true;  }	  if(this.validator!=    null)    {    return    super.setValidator(validator);    }    else    {    Predicate    <    JSType>    property    =    this.referencedTypes.get(reference);    if(property.isResolved())    {    return    true;    }    	non-compiled	[CE]  not  a  statement	97	None	replace
367	[BUG]  [BUGGY]  if(this.referencedTypes!=  null)  {  if(this.validator!=  null)  {  return  super.setValidator(validator);  }  else  {  Predicate  <  JSType>  property  =  this.referencedTypes.get(reference);  if  [CE]  '('  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.referencedTypes!=  null)  {  if(this.validator!=  null)  {  return  super.setValidator(validator);  }  else  {  Predicate  <  JSType>  property  =  this.referencedTypes.get(reference);  if  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.referencedTypes!=  null)  {  if(this.validator!=  null)  {  return  super.setValidator(validator);  }  else  {  Predicate  <  JSType>  property  =  this.referencedTypes.get(reference);  if	  if(this.validator!=    null)    {    return    super.setValidator(validator);    }    else    {    Predicate    <    JSType>    property    =    this.referencedTypes.get(reference);    if(property.isResolved())    {    return    true;    }    	non-compiled	[CE]  '('  expected	97	None	replace
368	[BUG]  [BUGGY]  if(this.referencedTypes!=  null)  {  if(!this.referencedTypes.containsKey(reference))  {  return  super.setValidator(validator);  }  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.referencedTypes!=  null)  {  if(!this.referencedTypes.containsKey(reference))  {  return  super.setValidator(validator);  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.referencedTypes!=  null)  {  if(!this.referencedTypes.containsKey(reference))  {  return  super.setValidator(validator);  }	  if(this.validator!=    null)    {    return    super.setValidator(validator);    }    else    {    Predicate    <    JSType>    property    =    this.referencedTypes.get(reference);    if(property.isResolved())    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	97	None	replace
369	[BUG]  [BUGGY]  if(this.isResolved())  {  return  super.setValidator(validator);  }  else  {  for(int  i  =  0;  i  <  this.isResolved();  ++i)  {  return  super.setValidator(validator);  }  }  [CE]  bad  operand  types  for  binary  operator  '<'  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.isResolved())  {  return  super.setValidator(validator);  }  else  {  for(int  i  =  0;  i  <  this.isResolved();  ++i)  {  return  super.setValidator(validator);  }  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.isResolved())  {  return  super.setValidator(validator);  }  else  {  for(int  i  =  0;  i  <  this.isResolved();  ++i)  {  return  super.setValidator(validator);  }  }	  return    super.setValidator(validator);    if(this.isResolved())    {    return    super.setValidator(validator);    }    else    {    for(int    i    =    0;    i    <    this.isResolved();    ++i)    {    return    super.setValidator(validator);    }    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '<'	127	None	replace
370	[BUG]  [BUGGY]  if(this.isResolved())  {  return  super.setValidator(validator);  }  else  {  for(int  i  =  0;  i  <  this.isResolved();  ++i)  {  return  super.setVal  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.isResolved())  {  return  super.setValidator(validator);  }  else  {  for(int  i  =  0;  i  <  this.isResolved();  ++i)  {  return  super.setVal  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.isResolved())  {  return  super.setValidator(validator);  }  else  {  for(int  i  =  0;  i  <  this.isResolved();  ++i)  {  return  super.setVal	  return    super.setValidator(validator);    if(this.isResolved())    {    return    super.setValidator(validator);    }    else    {    for(int    i    =    0;    i    <    this.isResolved();    ++i)    {    return    super.setValidator(validator);    }    	non-compiled	[CE]  ';'  expected	127	None	replace
371	[BUG]  [BUGGY]  if(this.isResolved())  {  return  super.setValidator(validator);  }  else  {  for(int  i  =  0;  i  <  this.isResolved();  ++i)  {  return  super.set  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.isResolved())  {  return  super.setValidator(validator);  }  else  {  for(int  i  =  0;  i  <  this.isResolved();  ++i)  {  return  super.set  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.isResolved())  {  return  super.setValidator(validator);  }  else  {  for(int  i  =  0;  i  <  this.isResolved();  ++i)  {  return  super.set	  return    super.setValidator(validator);    if(this.isResolved())    {    return    super.setValidator(validator);    }    else    {    for(int    i    =    0;    i    <    this.isResolved();    ++i)    {    return    super.setValidator(validator);    }    	non-compiled	[CE]  ';'  expected	127	None	replace
372	[BUG]  [BUGGY]  if(this.isResolved())  {  return  super.setValidator(validator);  }  else  {  for(int  i  =  0;  i  <  this.isResolved();  ++i)  {  return  super.setValidator  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.isResolved())  {  return  super.setValidator(validator);  }  else  {  for(int  i  =  0;  i  <  this.isResolved();  ++i)  {  return  super.setValidator  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.isResolved())  {  return  super.setValidator(validator);  }  else  {  for(int  i  =  0;  i  <  this.isResolved();  ++i)  {  return  super.setValidator	  return    super.setValidator(validator);    if(this.isResolved())    {    return    super.setValidator(validator);    }    else    {    for(int    i    =    0;    i    <    this.isResolved();    ++i)    {    return    super.setValidator(validator);    }    	non-compiled	[CE]  ';'  expected	127	None	replace
373	[BUG]  [BUGGY]  if(this.isResolved())  {  return  super.setValidator(validator);  }  else  {  for(int  i  =  0;  i  <  this.isResolved();  ++i)  {  return  super.setValidator(validator  [CE]  ')'  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.isResolved())  {  return  super.setValidator(validator);  }  else  {  for(int  i  =  0;  i  <  this.isResolved();  ++i)  {  return  super.setValidator(validator  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.isResolved())  {  return  super.setValidator(validator);  }  else  {  for(int  i  =  0;  i  <  this.isResolved();  ++i)  {  return  super.setValidator(validator	  return    super.setValidator(validator);    if(this.isResolved())    {    return    super.setValidator(validator);    }    else    {    for(int    i    =    0;    i    <    this.isResolved();    ++i)    {    return    super.setValidator(validator);    }    	non-compiled	[CE]  ')'  expected	127	None	replace
374	[BUG]  [BUGGY]  Predicate  <  JSType>  propertyNode  =  this.referencedTypes.get(reference);  if(propertyNode!=  null)  {  return  true;  }  [CE]  cannot  find  symbol  referencedTypes  [FE]                              AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  Predicate  <  JSType>  propertyNode  =  this.referencedTypes.get(reference);  if(propertyNode!=  null)  {  return  true;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	Predicate  <  JSType>  propertyNode  =  this.referencedTypes.get(reference);  if(propertyNode!=  null)  {  return  true;  }	  if(this.isResolved())    {    Predicate    <    JSType>    propertyNode    =    this.referencedTypes.get(reference);    if(propertyNode!=    null)    {    return    true;    }    	non-compiled	[CE]  cannot  find  symbol  referencedTypes	110	None	replace
375	[BUG]  [BUGGY]  Predicate  <  JSType>  propertyNode  =  this.referencedTypes.get(reference);  if(propertyNode  ==  null)  {  return  true;  }  [CE]  cannot  find  symbol  referencedTypes  [FE]                                AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  Predicate  <  JSType>  propertyNode  =  this.referencedTypes.get(reference);  if(propertyNode  ==  null)  {  return  true;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	Predicate  <  JSType>  propertyNode  =  this.referencedTypes.get(reference);  if(propertyNode  ==  null)  {  return  true;  }	  if(this.isResolved())    {    Predicate    <    JSType>    propertyNode    =    this.referencedTypes.get(reference);    if(propertyNode!=    null)    {    return    true;    }    	non-compiled	[CE]  cannot  find  symbol  referencedTypes	110	None	replace
376	[BUG]  [BUGGY]  if(this.referencedTypes!=  null)  {  Predicate  <  JSType>  propertyNode  =  this.referencedTypes.get(reference);  if(propertyNode!=  null)  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                                  AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.referencedTypes!=  null)  {  Predicate  <  JSType>  propertyNode  =  this.referencedTypes.get(reference);  if(propertyNode!=  null)  {  return  true;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.referencedTypes!=  null)  {  Predicate  <  JSType>  propertyNode  =  this.referencedTypes.get(reference);  if(propertyNode!=  null)  {  return  true;  }	  if(this.isResolved())    {    Predicate    <    JSType>    propertyNode    =    this.referencedTypes.get(reference);    if(propertyNode!=    null)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	110	None	replace
377	[BUG]  [BUGGY]  Predicate  <  JSType>  propertyNode  =  this.referencedTypes.get(reference);  if(propertyNode!=  null)  {  return  false;  }  [CE]  cannot  find  symbol  referencedTypes  [FE]                                    AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  Predicate  <  JSType>  propertyNode  =  this.referencedTypes.get(reference);  if(propertyNode!=  null)  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	Predicate  <  JSType>  propertyNode  =  this.referencedTypes.get(reference);  if(propertyNode!=  null)  {  return  false;  }	  if(this.isResolved())    {    Predicate    <    JSType>    propertyNode    =    this.referencedTypes.get(reference);    if(propertyNode!=    null)    {    return    true;    }    	non-compiled	[CE]  cannot  find  symbol  referencedTypes	110	None	replace
378	[BUG]  [BUGGY]  if(this.referencedTypes!=  null)  {  Predicate  <  JSType>  propertyNode  =  this.referencedTypes.get(reference);  if(propertyNode  ==  null)  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                                      AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.referencedTypes!=  null)  {  Predicate  <  JSType>  propertyNode  =  this.referencedTypes.get(reference);  if(propertyNode  ==  null)  {  return  true;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.referencedTypes!=  null)  {  Predicate  <  JSType>  propertyNode  =  this.referencedTypes.get(reference);  if(propertyNode  ==  null)  {  return  true;  }	  if(this.isResolved())    {    Predicate    <    JSType>    propertyNode    =    this.referencedTypes.get(reference);    if(propertyNode!=    null)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	110	None	replace
379	[BUG]  [BUGGY]  Predicate  <  JSType>  propertyNode  =  this.referencedTypes.get(0);  if(propertyNode!=  null)  {  return  true;  }  [CE]  cannot  find  symbol  referencedTypes  [FE]                                        AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  Predicate  <  JSType>  propertyNode  =  this.referencedTypes.get(0);  if(propertyNode!=  null)  {  return  true;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	Predicate  <  JSType>  propertyNode  =  this.referencedTypes.get(0);  if(propertyNode!=  null)  {  return  true;  }	  if(this.isResolved())    {    Predicate    <    JSType>    propertyNode    =    this.referencedTypes.get(reference);    if(propertyNode!=    null)    {    return    true;    }    	non-compiled	[CE]  cannot  find  symbol  referencedTypes	110	None	replace
380	[BUG]  [BUGGY]  Predicate  <?>  propertyNode  =  this.value.getPropertyNode();  [CE]  cannot  find  symbol  value  [FE]                                  AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  Predicate  <?>  propertyNode  =  this.value.getPropertyNode();  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	Predicate  <?>  propertyNode  =  this.value.getPropertyNode();	  Predicate    <?>    propertyNode    =    this.slotType.getPropertyNode();    	non-compiled	[CE]  cannot  find  symbol  value	136	None	replace
381	[BUG]  [BUGGY]  Predicate  <?>  propertyNode  =  this.propertyNode.getPropertyNode();  [CE]  cannot  find  symbol  propertyNode  [FE]                                    AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  Predicate  <?>  propertyNode  =  this.propertyNode.getPropertyNode();  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	Predicate  <?>  propertyNode  =  this.propertyNode.getPropertyNode();	  Predicate    <?>    propertyNode    =    this.slotType.getPropertyNode();    	non-compiled	[CE]  cannot  find  symbol  propertyNode	136	None	replace
382	[BUG]  [BUGGY]  Predicate  <?>  propertyNode  =  this.referencedType.getPropertyNode();  [CE]  referencedType  has  private  access  in  ProxyObjectType  [FE]                                      AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  Predicate  <?>  propertyNode  =  this.referencedType.getPropertyNode();  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	Predicate  <?>  propertyNode  =  this.referencedType.getPropertyNode();	  Predicate    <?>    propertyNode    =    this.slotType.getPropertyNode();    	non-compiled	[CE]  referencedType  has  private  access  in  ProxyObjectType	136	None	replace
383	[BUG]  [BUGGY]  Predicate  <?>  propertyNode  =  validator.getPropertyNode();  [CE]  cannot  find  symbol  [FE]                                        AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  Predicate  <?>  propertyNode  =  validator.getPropertyNode();  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	Predicate  <?>  propertyNode  =  validator.getPropertyNode();	  Predicate    <?>    propertyNode    =    this.slotType.getPropertyNode();    	non-compiled	[CE]  cannot  find  symbol	136	None	replace
384	[BUG]  [BUGGY]  Predicate  <?>  propertyNode  =  this.slotType.getPropertyNode(this.value);  [CE]  cannot  find  symbol  value  [FE]                                          AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  Predicate  <?>  propertyNode  =  this.slotType.getPropertyNode(this.value);  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	Predicate  <?>  propertyNode  =  this.slotType.getPropertyNode(this.value);	  Predicate    <?>    propertyNode    =    this.slotType.getPropertyNode();    	non-compiled	[CE]  cannot  find  symbol  value	136	None	replace
385	[BUG]  [BUGGY]  Predicate  <?>  propertyNode  =  this.name.getPropertyNode();  [CE]  cannot  find  symbol  name  [FE]                                            AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  Predicate  <?>  propertyNode  =  this.name.getPropertyNode();  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	Predicate  <?>  propertyNode  =  this.name.getPropertyNode();	  Predicate    <?>    propertyNode    =    this.slotType.getPropertyNode();    	non-compiled	[CE]  cannot  find  symbol  name	136	None	replace
386	[BUG]  [BUGGY]  if(validator!=  null)  {  if(this.isResolved())  {  Predicate  <  JSType>  referencedType  =  validator.getReferencedType();  if(referencedType  ==  null)  {  return  referencedType.setValidator(value);  }  }  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(validator!=  null)  {  if(this.isResolved())  {  Predicate  <  JSType>  referencedType  =  validator.getReferencedType();  if(referencedType  ==  null)  {  return  referencedType.setValidator(value);  }  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(validator!=  null)  {  if(this.isResolved())  {  Predicate  <  JSType>  referencedType  =  validator.getReferencedType();  if(referencedType  ==  null)  {  return  referencedType.setValidator(value);  }  }	  if(this.isResolved())    {    Predicate    <    JSType>    referencedType    =    validator.getReferencedType();    if(referencedType    ==    null)    {    return    referencedType.setValidator(value);    }    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
387	[BUG]  [BUGGY]  if(this.forType!=  null  ||  this.forType  ==  null)  {  return  false;  }  [CE]  cannot  find  symbol  forType  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.forType!=  null  ||  this.forType  ==  null)  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.forType!=  null  ||  this.forType  ==  null)  {  return  false;  }	  if(this.forType!=    null)    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol  forType	10	None	replace
388	[BUG]  [BUGGY]  if(!this.validator)  {  return  false;  }  [CE]  bad  operand  type  Predicate<JSType>  for  unary  operator  '!'  [FE]                      AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(!this.validator)  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(!this.validator)  {  return  false;  }	  if(!this.isValidator)    {    return    false;    }    	non-compiled	[CE]  bad  operand  type  Predicate<JSType>  for  unary  operator  '!'	116	None	replace
389	[BUG]  [BUGGY]  if(this.isValidator)  {  return  false;  }  [CE]  cannot  find  symbol  isValidator  [FE]                        AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.isValidator)  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.isValidator)  {  return  false;  }	  if(!this.isValidator)    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol  isValidator	116	None	replace
390	[BUG]  [BUGGY]  if(!this.value.isValidator)  {  return  false;  }  [CE]  cannot  find  symbol  value  [FE]                          AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(!this.value.isValidator)  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(!this.value.isValidator)  {  return  false;  }	  if(!this.isValidator)    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol  value	116	None	replace
391	[BUG]  [BUGGY]  if(!this.referencedType.isValidator)  {  return  false;  }  [CE]  referencedType  has  private  access  in  ProxyObjectType  [FE]                            AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(!this.referencedType.isValidator)  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(!this.referencedType.isValidator)  {  return  false;  }	  if(!this.isValidator)    {    return    false;    }    	non-compiled	[CE]  referencedType  has  private  access  in  ProxyObjectType	116	None	replace
392	[BUG]  [BUGGY]  Predicate  <  JSType>  propertyNode  =  this.referencedTypes.get(reference);  if(propertyNode  ==  null)  {  return  false;  }  [CE]  cannot  find  symbol  referencedTypes  [FE]                            AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  Predicate  <  JSType>  propertyNode  =  this.referencedTypes.get(reference);  if(propertyNode  ==  null)  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	Predicate  <  JSType>  propertyNode  =  this.referencedTypes.get(reference);  if(propertyNode  ==  null)  {  return  false;  }	  if(this.isResolved())    {    Predicate    <    JSType>    propertyNode    =    this.referencedTypes.get(reference);    if(propertyNode!=    null)    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol  referencedTypes	109	None	replace
393	[BUG]  [BUGGY]  if(this.referencedTypes!=  null)  {  Predicate  <  JSType>  propertyNode  =  this.referencedTypes.get(reference);  if(propertyNode!=  null)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.referencedTypes!=  null)  {  Predicate  <  JSType>  propertyNode  =  this.referencedTypes.get(reference);  if(propertyNode!=  null)  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.referencedTypes!=  null)  {  Predicate  <  JSType>  propertyNode  =  this.referencedTypes.get(reference);  if(propertyNode!=  null)  {  return  false;  }	  if(this.isResolved())    {    Predicate    <    JSType>    propertyNode    =    this.referencedTypes.get(reference);    if(propertyNode!=    null)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	109	None	replace
394	[BUG]  [BUGGY]  if(this.referencedTypes!=  null)  {  Predicate  <  JSType>  propertyNode  =  this.referencedTypes.get(reference);  if(propertyNode  ==  null)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                                AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.referencedTypes!=  null)  {  Predicate  <  JSType>  propertyNode  =  this.referencedTypes.get(reference);  if(propertyNode  ==  null)  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.referencedTypes!=  null)  {  Predicate  <  JSType>  propertyNode  =  this.referencedTypes.get(reference);  if(propertyNode  ==  null)  {  return  false;  }	  if(this.isResolved())    {    Predicate    <    JSType>    propertyNode    =    this.referencedTypes.get(reference);    if(propertyNode!=    null)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	109	None	replace
395	[BUG]  [BUGGY]  Predicate  <  JSType>  propertyNode  =  this.referencedTypes.get(0);  if(propertyNode!=  null)  {  return  false;  }  [CE]  cannot  find  symbol  referencedTypes  [FE]                                  AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  Predicate  <  JSType>  propertyNode  =  this.referencedTypes.get(0);  if(propertyNode!=  null)  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	Predicate  <  JSType>  propertyNode  =  this.referencedTypes.get(0);  if(propertyNode!=  null)  {  return  false;  }	  if(this.isResolved())    {    Predicate    <    JSType>    propertyNode    =    this.referencedTypes.get(reference);    if(propertyNode!=    null)    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol  referencedTypes	109	None	replace
396	[BUG]  [BUGGY]  Predicate  <  JSType>  validator  =  this.referencedType.getValidator();  if(validator!=  null)  {  return  false;  }  [CE]  variable  validator  is  already  defined  in  method  setValidator(Predicate<JSType>)  [FE]                                      AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  Predicate  <  JSType>  validator  =  this.referencedType.getValidator();  if(validator!=  null)  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	Predicate  <  JSType>  validator  =  this.referencedType.getValidator();  if(validator!=  null)  {  return  false;  }	  if(this.isResolved())    {    Predicate    <    JSType>    validator    =    this.referencedType.getValidator();    if(validator!=    null)    {    return    false;    }    	non-compiled	[CE]  variable  validator  is  already  defined  in  method  setValidator(Predicate<JSType>)	70	None	replace
397	[BUG]  [BUGGY]  if(this.referencedType!=  null)  {  Predicate  <  JSType>  validator  =  this.referencedType.getValidator();  if(validator!=  null)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                                        AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.referencedType!=  null)  {  Predicate  <  JSType>  validator  =  this.referencedType.getValidator();  if(validator!=  null)  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.referencedType!=  null)  {  Predicate  <  JSType>  validator  =  this.referencedType.getValidator();  if(validator!=  null)  {  return  false;  }	  if(this.isResolved())    {    Predicate    <    JSType>    validator    =    this.referencedType.getValidator();    if(validator!=    null)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
398	[BUG]  [BUGGY]  Predicate  <  JSType>  validator  =  this.referencedType.getValidator();  if(validator  ==  null)  {  return  false;  }  [CE]  variable  validator  is  already  defined  in  method  setValidator(Predicate<JSType>)  [FE]                                          AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  Predicate  <  JSType>  validator  =  this.referencedType.getValidator();  if(validator  ==  null)  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	Predicate  <  JSType>  validator  =  this.referencedType.getValidator();  if(validator  ==  null)  {  return  false;  }	  if(this.isResolved())    {    Predicate    <    JSType>    validator    =    this.referencedType.getValidator();    if(validator!=    null)    {    return    false;    }    	non-compiled	[CE]  variable  validator  is  already  defined  in  method  setValidator(Predicate<JSType>)	70	None	replace
399	[BUG]  [BUGGY]  if(this.referencedType  ==  null)  {  Predicate  <  JSType>  validator  =  this.referencedType.getValidator();  if(validator!=  null)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                                            AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.referencedType  ==  null)  {  Predicate  <  JSType>  validator  =  this.referencedType.getValidator();  if(validator!=  null)  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.referencedType  ==  null)  {  Predicate  <  JSType>  validator  =  this.referencedType.getValidator();  if(validator!=  null)  {  return  false;  }	  if(this.isResolved())    {    Predicate    <    JSType>    validator    =    this.referencedType.getValidator();    if(validator!=    null)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
400	[BUG]  [BUGGY]  if(this.referencedType!=  null)  {  Predicate  <  JSType>  validator  =  this.referencedType.getValidator();  if(validator  ==  null)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                                              AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.referencedType!=  null)  {  Predicate  <  JSType>  validator  =  this.referencedType.getValidator();  if(validator  ==  null)  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.referencedType!=  null)  {  Predicate  <  JSType>  validator  =  this.referencedType.getValidator();  if(validator  ==  null)  {  return  false;  }	  if(this.isResolved())    {    Predicate    <    JSType>    validator    =    this.referencedType.getValidator();    if(validator!=    null)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
401	[BUG]  [BUGGY]  if(!this.forAnnotations)  {  forAnnotations  ignoreForwardReferencedTypes  =  this.ignoreForwardReferencedTypes;  if(isForwardDeclared)  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(!this.forAnnotations)  {  forAnnotations  ignoreForwardReferencedTypes  =  this.ignoreForwardReferencedTypes;  if(isForwardDeclared)  {  return  true;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(!this.forAnnotations)  {  forAnnotations  ignoreForwardReferencedTypes  =  this.ignoreForwardReferencedTypes;  if(isForwardDeclared)  {  return  true;  }	  return    false;    if(!this.forAnnotations)    {    forAnnotations    ignoreForwardReferencedTypes    =    this.ignoreForwardReferencedTypes;    if(isForwardDeclared)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
402	[BUG]  [BUGGY]  if(this.isResolved())  {  return  false;  }  else  if(!this.forAnnotations)  {  forAnnotations  ignoreForwardReferencedTypes  =  this.ignoreForwardReferencedTypes;  if(isForwardDeclared)  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.isResolved())  {  return  false;  }  else  if(!this.forAnnotations)  {  forAnnotations  ignoreForwardReferencedTypes  =  this.ignoreForwardReferencedTypes;  if(isForwardDeclared)  {  return  true;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.isResolved())  {  return  false;  }  else  if(!this.forAnnotations)  {  forAnnotations  ignoreForwardReferencedTypes  =  this.ignoreForwardReferencedTypes;  if(isForwardDeclared)  {  return  true;  }	  return    false;    if(!this.forAnnotations)    {    forAnnotations    ignoreForwardReferencedTypes    =    this.ignoreForwardReferencedTypes;    if(isForwardDeclared)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
403	[BUG]  [BUGGY]  if(!this.forAnnotations)  {  forAnnotations  ignoreForwardReferencedTypes  =  validator;  if(isForwardDeclared)  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(!this.forAnnotations)  {  forAnnotations  ignoreForwardReferencedTypes  =  validator;  if(isForwardDeclared)  {  return  true;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(!this.forAnnotations)  {  forAnnotations  ignoreForwardReferencedTypes  =  validator;  if(isForwardDeclared)  {  return  true;  }	  return    false;    if(!this.forAnnotations)    {    forAnnotations    ignoreForwardReferencedTypes    =    this.ignoreForwardReferencedTypes;    if(isForwardDeclared)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
404	[BUG]  [BUGGY]  if(!this.forAnnotations)  {  forAnnotations  ignoreForwardReferencedTypes  =  this.ignoreForwardReferencedTypes;  if(isForwardDeclared)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(!this.forAnnotations)  {  forAnnotations  ignoreForwardReferencedTypes  =  this.ignoreForwardReferencedTypes;  if(isForwardDeclared)  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(!this.forAnnotations)  {  forAnnotations  ignoreForwardReferencedTypes  =  this.ignoreForwardReferencedTypes;  if(isForwardDeclared)  {  return  false;  }	  return    false;    if(!this.forAnnotations)    {    forAnnotations    ignoreForwardReferencedTypes    =    this.ignoreForwardReferencedTypes;    if(isForwardDeclared)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
405	[BUG]  [BUGGY]  if(this.isResolved())  {  return  false;  }  else  if(!this.forAnnotations)  {  forAnnotations  ignoreForwardReferencedTypes  =  this.ignoreForwardReferencedTypes;  if(isForwardDeclared)  {  return  true  [CE]  ';'  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.isResolved())  {  return  false;  }  else  if(!this.forAnnotations)  {  forAnnotations  ignoreForwardReferencedTypes  =  this.ignoreForwardReferencedTypes;  if(isForwardDeclared)  {  return  true  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.isResolved())  {  return  false;  }  else  if(!this.forAnnotations)  {  forAnnotations  ignoreForwardReferencedTypes  =  this.ignoreForwardReferencedTypes;  if(isForwardDeclared)  {  return  true	  return    false;    if(!this.forAnnotations)    {    forAnnotations    ignoreForwardReferencedTypes    =    this.ignoreForwardReferencedTypes;    if(isForwardDeclared)    {    return    true;    }    	non-compiled	[CE]  ';'  expected	89	None	replace
406	[BUG]  [BUGGY]  if(!this.forAnnotations)  {  forAnnotations  ignoreForwardReferencedTypes  =  validator.ignoreForwardReferencedTypes;  if(isForwardDeclared)  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                                AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(!this.forAnnotations)  {  forAnnotations  ignoreForwardReferencedTypes  =  validator.ignoreForwardReferencedTypes;  if(isForwardDeclared)  {  return  true;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(!this.forAnnotations)  {  forAnnotations  ignoreForwardReferencedTypes  =  validator.ignoreForwardReferencedTypes;  if(isForwardDeclared)  {  return  true;  }	  return    false;    if(!this.forAnnotations)    {    forAnnotations    ignoreForwardReferencedTypes    =    this.ignoreForwardReferencedTypes;    if(isForwardDeclared)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
407	[BUG]  [BUGGY]  if(!this.forAnnotations)  {  forAnnotations  ignoreForwardReferencedTypes  =  null;  if(isForwardDeclared)  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                                  AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(!this.forAnnotations)  {  forAnnotations  ignoreForwardReferencedTypes  =  null;  if(isForwardDeclared)  {  return  true;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(!this.forAnnotations)  {  forAnnotations  ignoreForwardReferencedTypes  =  null;  if(isForwardDeclared)  {  return  true;  }	  return    false;    if(!this.forAnnotations)    {    forAnnotations    ignoreForwardReferencedTypes    =    this.ignoreForwardReferencedTypes;    if(isForwardDeclared)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
408	[BUG]  [BUGGY]  if(this.isResolved())  {  return  super.setValidator(validator);  }  else  {  Predicate  <  JSType>  propertyNode  =  this.isResolved();  return  super.setValidator(valueNode);  }  [CE]  incompatible  types  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.isResolved())  {  return  super.setValidator(validator);  }  else  {  Predicate  <  JSType>  propertyNode  =  this.isResolved();  return  super.setValidator(valueNode);  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.isResolved())  {  return  super.setValidator(validator);  }  else  {  Predicate  <  JSType>  propertyNode  =  this.isResolved();  return  super.setValidator(valueNode);  }	  return    super.setValidator(validator);    if(this.isResolved())    {    return    super.setValidator(validator);    }    else    {    Predicate    <    JSType>    propertyNode    =    this.isResolved();    return    super.setValidator(valueNode);    }    	non-compiled	[CE]  incompatible  types	128	None	replace
409	[BUG]  [BUGGY]  if(this.isResolved())  {  return  super.setValidator(validator);  }  else  {  Predicate  <  JSType>  propertyNode  =  this.isResolved();  return  super.setValidator(value  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.isResolved())  {  return  super.setValidator(validator);  }  else  {  Predicate  <  JSType>  propertyNode  =  this.isResolved();  return  super.setValidator(value  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.isResolved())  {  return  super.setValidator(validator);  }  else  {  Predicate  <  JSType>  propertyNode  =  this.isResolved();  return  super.setValidator(value	  return    super.setValidator(validator);    if(this.isResolved())    {    return    super.setValidator(validator);    }    else    {    Predicate    <    JSType>    propertyNode    =    this.isResolved();    return    super.setValidator(valueNode);    }    	non-compiled	[CE]  ')'  expected	128	None	replace
410	[BUG]  [BUGGY]  if(this.isResolved())  {  return  super.setValidator(validator);  }  else  {  Predicate  <  JSType>  propertyNode  =  this.isResolved();  return  super.setValidator(  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.isResolved())  {  return  super.setValidator(validator);  }  else  {  Predicate  <  JSType>  propertyNode  =  this.isResolved();  return  super.setValidator(  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.isResolved())  {  return  super.setValidator(validator);  }  else  {  Predicate  <  JSType>  propertyNode  =  this.isResolved();  return  super.setValidator(	  return    super.setValidator(validator);    if(this.isResolved())    {    return    super.setValidator(validator);    }    else    {    Predicate    <    JSType>    propertyNode    =    this.isResolved();    return    super.setValidator(valueNode);    }    	non-compiled	[CE]  illegal  start  of  expression	128	None	replace
411	[BUG]  [BUGGY]  if(this.value!=  null)  {  return  true;  }  [CE]  cannot  find  symbol  value  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.value!=  null)  {  return  true;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.value!=  null)  {  return  true;  }	  if(this.slotType!=    null)    {    return    true;    }    	non-compiled	[CE]  cannot  find  symbol  value	148	None	replace
412	[BUG]  [BUGGY]  if(this.value  ==  null)  {  return  true;  }  [CE]  cannot  find  symbol  value  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.value  ==  null)  {  return  true;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.value  ==  null)  {  return  true;  }	  if(this.slotType!=    null)    {    return    true;    }    	non-compiled	[CE]  cannot  find  symbol  value	148	None	replace
413	[BUG]  [BUGGY]  if(this.referencedType!=  null)  {  return  true;  }  [CE]  referencedType  has  private  access  in  ProxyObjectType  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.referencedType!=  null)  {  return  true;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.referencedType!=  null)  {  return  true;  }	  if(this.slotType!=    null)    {    return    true;    }    	non-compiled	[CE]  referencedType  has  private  access  in  ProxyObjectType	148	None	replace
414	[BUG]  [BUGGY]  if(this.forAnnotations  ==  null)return  true;  [CE]  cannot  find  symbol  forAnnotations  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.forAnnotations  ==  null)return  true;  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.forAnnotations  ==  null)return  true;	  if(this.forAnnotations    ==    null)return    false;    }    	non-compiled	[CE]  cannot  find  symbol  forAnnotations	152	None	replace
415	[BUG]  [BUGGY]  this.validator  =  super.setValidator(validator);  [CE]  incompatible  types  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  this.validator  =  super.setValidator(validator);  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	this.validator  =  super.setValidator(validator);	  if(this.validator!=    null)    {    return    super.setValidator(validator);    }    	non-compiled	[CE]  incompatible  types	39	None	replace
416	[BUG]  [BUGGY]  if(this.validator  ==  null)  {  return  super.setValidator(validator);  }  [CE]  missing  return  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.validator  ==  null)  {  return  super.setValidator(validator);  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.validator  ==  null)  {  return  super.setValidator(validator);  }	  if(this.validator!=    null)    {    return    super.setValidator(validator);    }    	non-compiled	[CE]  missing  return  statement	39	None	replace
417	[BUG]  [BUGGY]  if(validator!=  null)  {  return  super.setValidator(validator);  }  [CE]  missing  return  statement  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(validator!=  null)  {  return  super.setValidator(validator);  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(validator!=  null)  {  return  super.setValidator(validator);  }	  if(this.validator!=    null)    {    return    super.setValidator(validator);    }    	non-compiled	[CE]  missing  return  statement	39	None	replace
418	[BUG]  [BUGGY]  Predicate  <?>  validator  =  this.validator;  [CE]  variable  validator  is  already  defined  in  method  setValidator(Predicate<JSType>)  [FE]                      AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  Predicate  <?>  validator  =  this.validator;  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	Predicate  <?>  validator  =  this.validator;	  if(this.validator!=    null)    {    return    super.setValidator(validator);    }    	non-compiled	[CE]  variable  validator  is  already  defined  in  method  setValidator(Predicate<JSType>)	39	None	replace
419	[BUG]  [BUGGY]  vice.setValidator(validator);  [CE]  cannot  find  symbol  vice  [FE]                        AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  vice.setValidator(validator);  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	vice.setValidator(validator);	  if(this.validator!=    null)    {    return    super.setValidator(validator);    }    	non-compiled	[CE]  cannot  find  symbol  vice	39	None	replace
420	[BUG]  [BUGGY]  Predicate  <?>  propertyNode  =  getPropertyNode(reference).resolve();  [CE]  cannot  find  symbol  [FE]                                      AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  Predicate  <?>  propertyNode  =  getPropertyNode(reference).resolve();  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	Predicate  <?>  propertyNode  =  getPropertyNode(reference).resolve();	  Predicate    <?>    propertyNode    =    getPropertyNode(propertyName).resolve();    	non-compiled	[CE]  cannot  find  symbol	138	None	replace
421	[BUG]  [BUGGY]  Predicate  <?>  propertyNode  =  getPropertyNode(name).resolve();  [CE]  cannot  find  symbol  name  [FE]                                        AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  Predicate  <?>  propertyNode  =  getPropertyNode(name).resolve();  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	Predicate  <?>  propertyNode  =  getPropertyNode(name).resolve();	  Predicate    <?>    propertyNode    =    getPropertyNode(propertyName).resolve();    	non-compiled	[CE]  cannot  find  symbol  name	138	None	replace
422	[BUG]  [BUGGY]  Predicate  <?>  propertyNode  =  getPropertyNode(this.propertyName).resolve();  [CE]  cannot  find  symbol  propertyName  [FE]                                          AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  Predicate  <?>  propertyNode  =  getPropertyNode(this.propertyName).resolve();  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	Predicate  <?>  propertyNode  =  getPropertyNode(this.propertyName).resolve();	  Predicate    <?>    propertyNode    =    getPropertyNode(propertyName).resolve();    	non-compiled	[CE]  cannot  find  symbol  propertyName	138	None	replace
423	[BUG]  [BUGGY]  Predicate  <?>  propertyNode  =  getPropertyNode(this.sourceName).resolve();  [CE]  cannot  find  symbol  [FE]                                            AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  Predicate  <?>  propertyNode  =  getPropertyNode(this.sourceName).resolve();  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	Predicate  <?>  propertyNode  =  getPropertyNode(this.sourceName).resolve();	  Predicate    <?>    propertyNode    =    getPropertyNode(propertyName).resolve();    	non-compiled	[CE]  cannot  find  symbol	138	None	replace
424	[BUG]  [BUGGY]  Predicate  <?>  propertyNode  =  getPropertyNode(sourceName).resolve();  [CE]  cannot  find  symbol  [FE]                                              AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  Predicate  <?>  propertyNode  =  getPropertyNode(sourceName).resolve();  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	Predicate  <?>  propertyNode  =  getPropertyNode(sourceName).resolve();	  Predicate    <?>    propertyNode    =    getPropertyNode(propertyName).resolve();    	non-compiled	[CE]  cannot  find  symbol	138	None	replace
425	[BUG]  [BUGGY]  Predicate  <?>  propertyNode  =  getPropertyNode(this.name).resolve();  [CE]  cannot  find  symbol  name  [FE]                                                AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  Predicate  <?>  propertyNode  =  getPropertyNode(this.name).resolve();  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	Predicate  <?>  propertyNode  =  getPropertyNode(this.name).resolve();	  Predicate    <?>    propertyNode    =    getPropertyNode(propertyName).resolve();    	non-compiled	[CE]  cannot  find  symbol  name	138	None	replace
426	[BUG]  [BUGGY]  if(this.forAnnotations!=  null  &&  this.ignoreForwardReferencedTypes)  {  return  false;  }  [CE]  cannot  find  symbol  forAnnotations  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.forAnnotations!=  null  &&  this.ignoreForwardReferencedTypes)  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.forAnnotations!=  null  &&  this.ignoreForwardReferencedTypes)  {  return  false;  }	  if(this.forAnnotations!=    null    ||    this.ignoreForwardReferencedTypes)    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol  forAnnotations	151	None	replace
427	[BUG]  [BUGGY]  if(this.forAnnotations  ==  null  ||  this.ignoreForwardReferencedTypes)  {  return  false;  }  [CE]  cannot  find  symbol  forAnnotations  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.forAnnotations  ==  null  ||  this.ignoreForwardReferencedTypes)  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.forAnnotations  ==  null  ||  this.ignoreForwardReferencedTypes)  {  return  false;  }	  if(this.forAnnotations!=    null    ||    this.ignoreForwardReferencedTypes)    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol  forAnnotations	151	None	replace
428	[BUG]  [BUGGY]  if(this.forAnnotations  ==  null  &&  this.ignoreForwardReferencedTypes)  {  return  false;  }  [CE]  cannot  find  symbol  forAnnotations  [FE]                      AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.forAnnotations  ==  null  &&  this.ignoreForwardReferencedTypes)  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.forAnnotations  ==  null  &&  this.ignoreForwardReferencedTypes)  {  return  false;  }	  if(this.forAnnotations!=    null    ||    this.ignoreForwardReferencedTypes)    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol  forAnnotations	151	None	replace
429	[BUG]  [BUGGY]  if(this.ignoreForwardReferencedTypes!=  null  ||  this.ignoreForwardReferencedTypes)  {  return  false;  }  [CE]  cannot  find  symbol  ignoreForwardReferencedTypes  [FE]                        AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.ignoreForwardReferencedTypes!=  null  ||  this.ignoreForwardReferencedTypes)  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.ignoreForwardReferencedTypes!=  null  ||  this.ignoreForwardReferencedTypes)  {  return  false;  }	  if(this.forAnnotations!=    null    ||    this.ignoreForwardReferencedTypes)    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol  ignoreForwardReferencedTypes	151	None	replace
430	[BUG]  [BUGGY]  if(this.forwardReferencedTypes!=  null  ||  this.ignoreForwardReferencedTypes)  {  return  false;  }  [CE]  cannot  find  symbol  forwardReferencedTypes  [FE]                          AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.forwardReferencedTypes!=  null  ||  this.ignoreForwardReferencedTypes)  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.forwardReferencedTypes!=  null  ||  this.ignoreForwardReferencedTypes)  {  return  false;  }	  if(this.forAnnotations!=    null    ||    this.ignoreForwardReferencedTypes)    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol  forwardReferencedTypes	151	None	replace
431	[BUG]  [BUGGY]  if(this.forAnnotations!=  null  ||  this.ignoreForwardReferencedTypes)return  false;  }  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.forAnnotations!=  null  ||  this.ignoreForwardReferencedTypes)return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.forAnnotations!=  null  ||  this.ignoreForwardReferencedTypes)return  false;  }	  if(this.forAnnotations!=    null    ||    this.ignoreForwardReferencedTypes)    {    return    false;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	151	None	replace
432	[BUG]  [BUGGY]  if(this.isResolved())  {  if(validator!=  null)  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.isResolved())  {  if(validator!=  null)  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.isResolved())  {  if(validator!=  null)  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;  }	  if(this.validator!=    null)    {    return    super.setValidator(validator);    }    else    {    this.validator    =    validator;    }    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
433	[BUG]  [BUGGY]  if(validator!=  null)  {  if(this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(validator!=  null)  {  if(this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(validator!=  null)  {  if(this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;  }	  if(this.validator!=    null)    {    return    super.setValidator(validator);    }    else    {    this.validator    =    validator;    }    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
434	[BUG]  [BUGGY]  if(this.isResolved())  {  if(validator  ==  null)  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;  }  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.isResolved())  {  if(validator  ==  null)  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.isResolved())  {  if(validator  ==  null)  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;  }	  if(this.validator!=    null)    {    return    super.setValidator(validator);    }    else    {    this.validator    =    validator;    }    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
435	[BUG]  [BUGGY]  if(this.isResolved())  {  if(validator!=  null)  {  return  super.setValidator(validator);  }  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.isResolved())  {  if(validator!=  null)  {  return  super.setValidator(validator);  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.isResolved())  {  if(validator!=  null)  {  return  super.setValidator(validator);  }	  if(this.validator!=    null)    {    return    super.setValidator(validator);    }    else    {    this.validator    =    validator;    }    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
436	[BUG]  [BUGGY]  if(validator!=  null)  {  if(this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;  }  }  [CE]  missing  return  statement  [FE]                            AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(validator!=  null)  {  if(this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;  }  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(validator!=  null)  {  if(this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;  }  }	  if(this.validator!=    null)    {    return    super.setValidator(validator);    }    else    {    this.validator    =    validator;    }    	non-compiled	[CE]  missing  return  statement	41	None	replace
437	[BUG]  [BUGGY]  if(this.value!=  null  ||  this.value.equals(validator))  {  return  false;  }  [CE]  cannot  find  symbol  value  [FE]                        AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.value!=  null  ||  this.value.equals(validator))  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.value!=  null  ||  this.value.equals(validator))  {  return  false;  }	  if(this.value!=    null)    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol  value	12	None	replace
438	[BUG]  [BUGGY]  if(this.value!=  null  ||  this.value.length()  ==  0)  {  return  false;  }  [CE]  cannot  find  symbol  value  [FE]                          AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.value!=  null  ||  this.value.length()  ==  0)  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.value!=  null  ||  this.value.length()  ==  0)  {  return  false;  }	  if(this.value!=    null)    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol  value	12	None	replace
439	[BUG]  [BUGGY]  return(this.isResolved()  &&  validator!=  null);  return(this.isResolved()  &&  validator!=  null);  [CE]  unreachable  statement  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  return(this.isResolved()  &&  validator!=  null);  return(this.isResolved()  &&  validator!=  null);  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	return(this.isResolved()    &&    validator!=    null);    return(this.isResolved()  &&  validator!=  null);	  timeout    	non-compiled	[CE]  unreachable  statement	56	None	add
440	[BUG]  [BUGGY]  return(this.isResolved()  &&  validator!=  null);  (this.isResolved()  &&  validator!=  null);  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  return(this.isResolved()  &&  validator!=  null);  (this.isResolved()  &&  validator!=  null);  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	return(this.isResolved()    &&    validator!=    null);    (this.isResolved()  &&  validator!=  null);	  timeout    	non-compiled	[CE]  not  a  statement	56	None	add
441	[BUG]  [BUGGY]  return(this.isResolved()  &&  validator!=  null);  if(this.isResolved()  &&  validator!=  null);  [CE]  unreachable  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  return(this.isResolved()  &&  validator!=  null);  if(this.isResolved()  &&  validator!=  null);  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	return(this.isResolved()    &&    validator!=    null);    if(this.isResolved()  &&  validator!=  null);	  timeout    	non-compiled	[CE]  unreachable  statement	56	None	add
442	[BUG]  [BUGGY]  return(this.isResolved()  &&  validator!=  null);  this.isResolved()  &&  validator!=  null);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  return(this.isResolved()  &&  validator!=  null);  this.isResolved()  &&  validator!=  null);  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	return(this.isResolved()    &&    validator!=    null);    this.isResolved()  &&  validator!=  null);	  timeout    	non-compiled	[CE]  not  a  statement	56	None	add
443	[BUG]  [BUGGY]  return(this.isResolved()  &&  validator!=  null);  if(this.isResolved()  &&  validator!=  null)  {  return(this.isResolved()  &&  validator!=  null);  }  [CE]  unreachable  statement  [FE]                      AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  return(this.isResolved()  &&  validator!=  null);  if(this.isResolved()  &&  validator!=  null)  {  return(this.isResolved()  &&  validator!=  null);  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	return(this.isResolved()    &&    validator!=    null);    if(this.isResolved()  &&  validator!=  null)  {  return(this.isResolved()  &&  validator!=  null);  }	  timeout    	non-compiled	[CE]  unreachable  statement	56	None	add
444	[BUG]  [BUGGY]  return(this.isResolved()  &&  validator!=  null);  if(this.isResolved()  &&  validator!=  null);  }  else  {  return(this.isResolved()  &&  validator!=  null);  }  [CE]  'else'  without  'if'  [FE]                        AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  return(this.isResolved()  &&  validator!=  null);  if(this.isResolved()  &&  validator!=  null);  }  else  {  return(this.isResolved()  &&  validator!=  null);  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	return(this.isResolved()    &&    validator!=    null);    if(this.isResolved()  &&  validator!=  null);  }  else  {  return(this.isResolved()  &&  validator!=  null);  }	  timeout    	non-compiled	[CE]  'else'  without  'if'	56	None	add
445	[BUG]  [BUGGY]  return(this.isResolved()  &&  validator!=  null);  if(this.isResolved()  &&  validator!=  null);  }  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  return(this.isResolved()  &&  validator!=  null);  if(this.isResolved()  &&  validator!=  null);  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	return(this.isResolved()    &&    validator!=    null);    if(this.isResolved()  &&  validator!=  null);  }	  timeout    	non-compiled	[CE]  class,  interface,  or  enum  expected	56	None	add
446	[BUG]  [BUGGY]  if(this.isReferencedType())  {  JSType  referencedType  =  getReferencedType(reference);  if(referencedType!=  null)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.isReferencedType())  {  JSType  referencedType  =  getReferencedType(reference);  if(referencedType!=  null)  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.isReferencedType())  {  JSType  referencedType  =  getReferencedType(reference);  if(referencedType!=  null)  {  return  false;  }	  return    false;    if(this.isResolved())    {    JSType    referencedType    =    getReferencedType(reference);    if(referencedType!=    null)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	88	None	replace
447	[BUG]  [BUGGY]  Predicate  <?>  referencedType  =  getReferencedType(reference);  if(referencedType!=  null)  {  return  false;  }  [CE]  method  getReferencedType  in  class  NamedType  cannot  be  applied  to  given  types;  [FE]                      AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  Predicate  <?>  referencedType  =  getReferencedType(reference);  if(referencedType!=  null)  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	Predicate  <?>  referencedType  =  getReferencedType(reference);  if(referencedType!=  null)  {  return  false;  }	  return    false;    if(this.isResolved())    {    JSType    referencedType    =    getReferencedType(reference);    if(referencedType!=    null)    {    return    false;    }    	non-compiled	[CE]  method  getReferencedType  in  class  NamedType  cannot  be  applied  to  given  types;	88	None	replace
448	[BUG]  [BUGGY]  if(this.isReferenced())  {  JSType  referencedType  =  getReferencedType(reference);  if(referencedType!=  null)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.isReferenced())  {  JSType  referencedType  =  getReferencedType(reference);  if(referencedType!=  null)  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.isReferenced())  {  JSType  referencedType  =  getReferencedType(reference);  if(referencedType!=  null)  {  return  false;  }	  return    false;    if(this.isResolved())    {    JSType    referencedType    =    getReferencedType(reference);    if(referencedType!=    null)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	88	None	replace
449	[BUG]  [BUGGY]  if(this.isReferencedType())  {  JSType  referencedType  =  getReferencedType(reference);  if(referencedType  ==  null)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.isReferencedType())  {  JSType  referencedType  =  getReferencedType(reference);  if(referencedType  ==  null)  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.isReferencedType())  {  JSType  referencedType  =  getReferencedType(reference);  if(referencedType  ==  null)  {  return  false;  }	  return    false;    if(this.isResolved())    {    JSType    referencedType    =    getReferencedType(reference);    if(referencedType!=    null)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	88	None	replace
450	[BUG]  [BUGGY]  if(this.isReferencedType())  {  JSType  referencedType  =  getReferencedType(reference);  if(referencedType!=  null)  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.isReferencedType())  {  JSType  referencedType  =  getReferencedType(reference);  if(referencedType!=  null)  {  return  true;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.isReferencedType())  {  JSType  referencedType  =  getReferencedType(reference);  if(referencedType!=  null)  {  return  true;  }	  return    false;    if(this.isResolved())    {    JSType    referencedType    =    getReferencedType(reference);    if(referencedType!=    null)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	88	None	replace
451	[BUG]  [BUGGY]  Predicate  <?>  referencedType  =  getReferencedType(reference);  if(referencedType  ==  null)  {  return  false;  }  [CE]  method  getReferencedType  in  class  NamedType  cannot  be  applied  to  given  types;  [FE]                              AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  Predicate  <?>  referencedType  =  getReferencedType(reference);  if(referencedType  ==  null)  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	Predicate  <?>  referencedType  =  getReferencedType(reference);  if(referencedType  ==  null)  {  return  false;  }	  return    false;    if(this.isResolved())    {    JSType    referencedType    =    getReferencedType(reference);    if(referencedType!=    null)    {    return    false;    }    	non-compiled	[CE]  method  getReferencedType  in  class  NamedType  cannot  be  applied  to  given  types;	88	None	replace
452	[BUG]  [BUGGY]  if(this.isReferenced())  {  JSType  referencedType  =  getReferencedType(reference);  if(referencedType  ==  null)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                                AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.isReferenced())  {  JSType  referencedType  =  getReferencedType(reference);  if(referencedType  ==  null)  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.isReferenced())  {  JSType  referencedType  =  getReferencedType(reference);  if(referencedType  ==  null)  {  return  false;  }	  return    false;    if(this.isResolved())    {    JSType    referencedType    =    getReferencedType(reference);    if(referencedType!=    null)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	88	None	replace
453	[BUG]  [BUGGY]  return(this.isValidator()  &&  validator  ==  null);  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  return(this.isValidator()  &&  validator  ==  null);  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	return(this.isValidator()  &&  validator  ==  null);	  return(this.isResolved()    &&    validator    ==    null);    timeout    	non-compiled	[CE]  cannot  find  symbol	62	None	replace
454	[BUG]  [BUGGY]  timeout  [FE]                      AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  return(!this.isResolved()  &&  validator  ==  null);  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	add	return(!this.isResolved()  &&  validator  ==  null);	  return(this.isResolved()    &&    validator    ==    null);    timeout    	compilable	timeout	62	1	replace
455	[BUG]  [BUGGY]  return(!this.isResolved()  &&  validator  ==  null);  timeout  [FE]                      AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  return(!this.isResolved()  &&  validator  ==  null);  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	return(!this.isResolved()  &&  validator  ==  null);	  return(this.isResolved()    &&    validator    ==    null);    timeout    	compilable	timeout	62	1	replace
456	[BUG]  [BUGGY]  return(validator.isResolved()  &&  this.isResolved());  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  return(validator.isResolved()  &&  this.isResolved());  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	return(validator.isResolved()  &&  this.isResolved());	  return(this.isResolved()    &&    validator    ==    null);    timeout    	non-compiled	[CE]  cannot  find  symbol	62	None	replace
457	[BUG]  [BUGGY]  if(this.isResolved()  &&  validator!=  null)  {  return  false;  }  [CE]  missing  return  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.isResolved()  &&  validator!=  null)  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.isResolved()  &&  validator!=  null)  {  return  false;  }	  return(this.isResolved()    &&    this.validator!=    null);    if(this.isResolved()    &&    this.validator!=    null);    	non-compiled	[CE]  missing  return  statement	26	None	replace
458	[BUG]  [BUGGY]  if(this.isResolved()  &&  validator!=  null)  {  return  true;  }  [CE]  missing  return  statement  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.isResolved()  &&  validator!=  null)  {  return  true;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.isResolved()  &&  validator!=  null)  {  return  true;  }	  return(this.isResolved()    &&    this.validator!=    null);    if(this.isResolved()    &&    this.validator!=    null);    	non-compiled	[CE]  missing  return  statement	26	None	replace
459	[BUG]  [BUGGY]  if(this.isResolved()  &&  this.validator!=  null)  {  return  false;  }  [CE]  missing  return  statement  [FE]                      AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.isResolved()  &&  this.validator!=  null)  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.isResolved()  &&  this.validator!=  null)  {  return  false;  }	  return(this.isResolved()    &&    this.validator!=    null);    if(this.isResolved()    &&    this.validator!=    null);    	non-compiled	[CE]  missing  return  statement	26	None	replace
460	[BUG]  [BUGGY]  if(this.isResolved()  &&  this.validator!=  null)  {  return  true;  }  [CE]  missing  return  statement  [FE]                        AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.isResolved()  &&  this.validator!=  null)  {  return  true;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.isResolved()  &&  this.validator!=  null)  {  return  true;  }	  return(this.isResolved()    &&    this.validator!=    null);    if(this.isResolved()    &&    this.validator!=    null);    	non-compiled	[CE]  missing  return  statement	26	None	replace
461	[BUG]  [BUGGY]  if(this.isResolved()  ||  this.validator!=  null)  {  return  false;  }  [CE]  missing  return  statement  [FE]                          AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.isResolved()  ||  this.validator!=  null)  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.isResolved()  ||  this.validator!=  null)  {  return  false;  }	  return(this.isResolved()    &&    this.validator!=    null);    if(this.isResolved()    &&    this.validator!=    null);    	non-compiled	[CE]  missing  return  statement	26	None	replace
462	[BUG]  [BUGGY]  if(this.isResolved()  &&  validator  ==  null)  {  return  false;  }  [CE]  missing  return  statement  [FE]                            AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.isResolved()  &&  validator  ==  null)  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.isResolved()  &&  validator  ==  null)  {  return  false;  }	  return(this.isResolved()    &&    this.validator!=    null);    if(this.isResolved()    &&    this.validator!=    null);    	non-compiled	[CE]  missing  return  statement	26	None	replace
463	[BUG]  [BUGGY]  if(this.isResolved()  ||  this.validator!=  null)  {  return  true;  }  [CE]  missing  return  statement  [FE]                              AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.isResolved()  ||  this.validator!=  null)  {  return  true;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.isResolved()  ||  this.validator!=  null)  {  return  true;  }	  return(this.isResolved()    &&    this.validator!=    null);    if(this.isResolved()    &&    this.validator!=    null);    	non-compiled	[CE]  missing  return  statement	26	None	replace
464	[BUG]  [BUGGY]  Predicate  <  JSType>  propertyNode  =  this.referencedTypes.get(reference);  if(propertyNode!=  null)  {  return  propertyNode.setValidator(valueNode);  }  [CE]  cannot  find  symbol  referencedTypes  [FE]                          AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  Predicate  <  JSType>  propertyNode  =  this.referencedTypes.get(reference);  if(propertyNode!=  null)  {  return  propertyNode.setValidator(valueNode);  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	Predicate  <  JSType>  propertyNode  =  this.referencedTypes.get(reference);  if(propertyNode!=  null)  {  return  propertyNode.setValidator(valueNode);  }	  if(this.isResolved())    {    Predicate    <    JSType>    propertyNode    =    this.referencedTypes.get(reference);    if(propertyNode!=    null)    {    return    propertyNode.setValidator(valueNode);    }    	non-compiled	[CE]  cannot  find  symbol  referencedTypes	108	None	replace
465	[BUG]  [BUGGY]  if(this.referencedTypes!=  null)  {  Predicate  <  JSType>  propertyNode  =  this.referencedTypes.get(reference);  if(propertyNode!=  null)  {  return  propertyNode.setValidator(valueNode);  }  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.referencedTypes!=  null)  {  Predicate  <  JSType>  propertyNode  =  this.referencedTypes.get(reference);  if(propertyNode!=  null)  {  return  propertyNode.setValidator(valueNode);  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.referencedTypes!=  null)  {  Predicate  <  JSType>  propertyNode  =  this.referencedTypes.get(reference);  if(propertyNode!=  null)  {  return  propertyNode.setValidator(valueNode);  }	  if(this.isResolved())    {    Predicate    <    JSType>    propertyNode    =    this.referencedTypes.get(reference);    if(propertyNode!=    null)    {    return    propertyNode.setValidator(valueNode);    }    	non-compiled	[CE]  illegal  start  of  expression	108	None	replace
466	[BUG]  [BUGGY]  Predicate  <  JSType>  propertyNode  =  this.referencedTypes.get(reference);  if(propertyNode!=  null)  {  return  propertyNode.setValidator(validator);  }  [CE]  cannot  find  symbol  referencedTypes  [FE]                              AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  Predicate  <  JSType>  propertyNode  =  this.referencedTypes.get(reference);  if(propertyNode!=  null)  {  return  propertyNode.setValidator(validator);  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	Predicate  <  JSType>  propertyNode  =  this.referencedTypes.get(reference);  if(propertyNode!=  null)  {  return  propertyNode.setValidator(validator);  }	  if(this.isResolved())    {    Predicate    <    JSType>    propertyNode    =    this.referencedTypes.get(reference);    if(propertyNode!=    null)    {    return    propertyNode.setValidator(valueNode);    }    	non-compiled	[CE]  cannot  find  symbol  referencedTypes	108	None	replace
467	[BUG]  [BUGGY]  Predicate  <  JSType>  propertyNode  =  this.referencedTypes.get(reference);  if(propertyNode  ==  null)  {  return  propertyNode.setValidator(valueNode);  }  [CE]  cannot  find  symbol  referencedTypes  [FE]                                AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  Predicate  <  JSType>  propertyNode  =  this.referencedTypes.get(reference);  if(propertyNode  ==  null)  {  return  propertyNode.setValidator(valueNode);  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	Predicate  <  JSType>  propertyNode  =  this.referencedTypes.get(reference);  if(propertyNode  ==  null)  {  return  propertyNode.setValidator(valueNode);  }	  if(this.isResolved())    {    Predicate    <    JSType>    propertyNode    =    this.referencedTypes.get(reference);    if(propertyNode!=    null)    {    return    propertyNode.setValidator(valueNode);    }    	non-compiled	[CE]  cannot  find  symbol  referencedTypes	108	None	replace
468	[BUG]  [BUGGY]  Predicate  <  JSType>  propertyNode  =  this.referencedTypes.get(0);  if(propertyNode!=  null)  {  return  propertyNode.setValidator(valueNode);  }  [CE]  cannot  find  symbol  referencedTypes  [FE]                                  AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  Predicate  <  JSType>  propertyNode  =  this.referencedTypes.get(0);  if(propertyNode!=  null)  {  return  propertyNode.setValidator(valueNode);  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	Predicate  <  JSType>  propertyNode  =  this.referencedTypes.get(0);  if(propertyNode!=  null)  {  return  propertyNode.setValidator(valueNode);  }	  if(this.isResolved())    {    Predicate    <    JSType>    propertyNode    =    this.referencedTypes.get(reference);    if(propertyNode!=    null)    {    return    propertyNode.setValidator(valueNode);    }    	non-compiled	[CE]  cannot  find  symbol  referencedTypes	108	None	replace
469	[BUG]  [BUGGY]  if(this.slotType  ==  null)  {  return  false;  }  [CE]  cannot  find  symbol  slotType  [FE]                        AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.slotType  ==  null)  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.slotType  ==  null)  {  return  false;  }	  if(this.forwardReferencedTypes    ==    null)    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol  slotType	36	None	replace
470	[BUG]  [BUGGY]  Predicate  <?>  propertyNode  =  this.propertyContinuation.getProperty(name);  [CE]  cannot  find  symbol  name  [FE]                                AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  Predicate  <?>  propertyNode  =  this.propertyContinuation.getProperty(name);  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	Predicate  <?>  propertyNode  =  this.propertyContinuation.getProperty(name);	  Predicate    <?>    propertyNode    =    this.propertyContinuation.getProperty(propertyName);    	non-compiled	[CE]  cannot  find  symbol  name	135	None	replace
471	[BUG]  [BUGGY]  Predicate  <?>  propertyNode  =  this.propertyContinuation.getProperty(reference);  [CE]  cannot  find  symbol  propertyContinuation  [FE]                                  AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  Predicate  <?>  propertyNode  =  this.propertyContinuation.getProperty(reference);  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	Predicate  <?>  propertyNode  =  this.propertyContinuation.getProperty(reference);	  Predicate    <?>    propertyNode    =    this.propertyContinuation.getProperty(propertyName);    	non-compiled	[CE]  cannot  find  symbol  propertyContinuation	135	None	replace
472	[BUG]  [BUGGY]  Predicate  <?>  propertyNode  =  this.propertyContinuation.getProperty(sourceName);  [CE]  cannot  find  symbol  propertyContinuation  [FE]                                    AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  Predicate  <?>  propertyNode  =  this.propertyContinuation.getProperty(sourceName);  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	Predicate  <?>  propertyNode  =  this.propertyContinuation.getProperty(sourceName);	  Predicate    <?>    propertyNode    =    this.propertyContinuation.getProperty(propertyName);    	non-compiled	[CE]  cannot  find  symbol  propertyContinuation	135	None	replace
473	[BUG]  [BUGGY]  Predicate  <?>  propertyNode  =  this.propertyContinuation.getProperty(this.sourceName);  [CE]  cannot  find  symbol  propertyContinuation  [FE]                                      AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  Predicate  <?>  propertyNode  =  this.propertyContinuation.getProperty(this.sourceName);  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	Predicate  <?>  propertyNode  =  this.propertyContinuation.getProperty(this.sourceName);	  Predicate    <?>    propertyNode    =    this.propertyContinuation.getProperty(propertyName);    	non-compiled	[CE]  cannot  find  symbol  propertyContinuation	135	None	replace
474	[BUG]  [BUGGY]  Predicate  <?>  propertyNode  =  this.propertyContinuation.getPropertyName(reference);  [CE]  cannot  find  symbol  propertyContinuation  [FE]                                        AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  Predicate  <?>  propertyNode  =  this.propertyContinuation.getPropertyName(reference);  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	Predicate  <?>  propertyNode  =  this.propertyContinuation.getPropertyName(reference);	  Predicate    <?>    propertyNode    =    this.propertyContinuation.getProperty(propertyName);    	non-compiled	[CE]  cannot  find  symbol  propertyContinuation	135	None	replace
475	[BUG]  [BUGGY]  Predicate  <?>  propertyNode  =  this.propertyContinuation.getProperty(value);  [CE]  cannot  find  symbol  value  [FE]                                          AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  Predicate  <?>  propertyNode  =  this.propertyContinuation.getProperty(value);  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	Predicate  <?>  propertyNode  =  this.propertyContinuation.getProperty(value);	  Predicate    <?>    propertyNode    =    this.propertyContinuation.getProperty(propertyName);    	non-compiled	[CE]  cannot  find  symbol  value	135	None	replace
476	[BUG]  [BUGGY]  Predicate  <?>  propertyNode  =  this.propertyContinuation.getProperty(referenceName);  [CE]  cannot  find  symbol  referenceName  [FE]                                            AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  Predicate  <?>  propertyNode  =  this.propertyContinuation.getProperty(referenceName);  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	Predicate  <?>  propertyNode  =  this.propertyContinuation.getProperty(referenceName);	  Predicate    <?>    propertyNode    =    this.propertyContinuation.getProperty(propertyName);    	non-compiled	[CE]  cannot  find  symbol  referenceName	135	None	replace
477	[BUG]  [BUGGY]  if(this.isResolved())  {  return  false;  }  else  if(!this.forAnnotations)  {  forAnnotations  ignoreForwardReferencedTypes  =  this.ignoreForwardReferencedTypes;  if(isForwardDeclared)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.isResolved())  {  return  false;  }  else  if(!this.forAnnotations)  {  forAnnotations  ignoreForwardReferencedTypes  =  this.ignoreForwardReferencedTypes;  if(isForwardDeclared)  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.isResolved())  {  return  false;  }  else  if(!this.forAnnotations)  {  forAnnotations  ignoreForwardReferencedTypes  =  this.ignoreForwardReferencedTypes;  if(isForwardDeclared)  {  return  false;  }	  return    false;    if(!this.forAnnotations)    {    forAnnotations    ignoreForwardReferencedTypes    =    this.ignoreForwardReferencedTypes;    if(isForwardDeclared)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
478	[BUG]  [BUGGY]  if(!this.forAnnotations)  {  forAnnotations  ignoreForwardReferencedTypes  =  validator;  if(isForwardDeclared)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(!this.forAnnotations)  {  forAnnotations  ignoreForwardReferencedTypes  =  validator;  if(isForwardDeclared)  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(!this.forAnnotations)  {  forAnnotations  ignoreForwardReferencedTypes  =  validator;  if(isForwardDeclared)  {  return  false;  }	  return    false;    if(!this.forAnnotations)    {    forAnnotations    ignoreForwardReferencedTypes    =    this.ignoreForwardReferencedTypes;    if(isForwardDeclared)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
479	[BUG]  [BUGGY]  if(!this.forAnnotations)  {  forAnnotations  ignoreForwardReferencedTypes  =  validator.ignoreForwardReferencedTypes;  if(isForwardDeclared)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(!this.forAnnotations)  {  forAnnotations  ignoreForwardReferencedTypes  =  validator.ignoreForwardReferencedTypes;  if(isForwardDeclared)  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(!this.forAnnotations)  {  forAnnotations  ignoreForwardReferencedTypes  =  validator.ignoreForwardReferencedTypes;  if(isForwardDeclared)  {  return  false;  }	  return    false;    if(!this.forAnnotations)    {    forAnnotations    ignoreForwardReferencedTypes    =    this.ignoreForwardReferencedTypes;    if(isForwardDeclared)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
480	[BUG]  [BUGGY]  if(this.isResolved())  {  return  false;  }  else  if(!this.forAnnotations)  {  forAnnotations  ignoreForwardReferencedTypes  =  this.ignoreForwardReferencedTypes;  if(isForwardDeclared)  {  return  false  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.isResolved())  {  return  false;  }  else  if(!this.forAnnotations)  {  forAnnotations  ignoreForwardReferencedTypes  =  this.ignoreForwardReferencedTypes;  if(isForwardDeclared)  {  return  false  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.isResolved())  {  return  false;  }  else  if(!this.forAnnotations)  {  forAnnotations  ignoreForwardReferencedTypes  =  this.ignoreForwardReferencedTypes;  if(isForwardDeclared)  {  return  false	  return    false;    if(!this.forAnnotations)    {    forAnnotations    ignoreForwardReferencedTypes    =    this.ignoreForwardReferencedTypes;    if(isForwardDeclared)    {    return    false;    }    	non-compiled	[CE]  ';'  expected	86	None	replace
481	[BUG]  [BUGGY]  if(!this.forAnnotations)  {  forAnnotations  ignoreForwardReferencedTypes  =  null;  if(isForwardDeclared)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(!this.forAnnotations)  {  forAnnotations  ignoreForwardReferencedTypes  =  null;  if(isForwardDeclared)  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(!this.forAnnotations)  {  forAnnotations  ignoreForwardReferencedTypes  =  null;  if(isForwardDeclared)  {  return  false;  }	  return    false;    if(!this.forAnnotations)    {    forAnnotations    ignoreForwardReferencedTypes    =    this.ignoreForwardReferencedTypes;    if(isForwardDeclared)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
482	[BUG]  [BUGGY]  return(this.isResolved()  ||  this.validator!=  null);  this.isResolved()  ||  this.validator!=  null);  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  return(this.isResolved()  ||  this.validator!=  null);  this.isResolved()  ||  this.validator!=  null);  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	return(this.isResolved()    ||    this.validator!=    null);    this.isResolved()  ||  this.validator!=  null);	  timeout    	non-compiled	[CE]  not  a  statement	54	None	add
483	[BUG]  [BUGGY]  return(this.isResolved()  ||  this.validator!=  null);  (this.isResolved()  ||  this.validator!=  null);  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  return(this.isResolved()  ||  this.validator!=  null);  (this.isResolved()  ||  this.validator!=  null);  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	return(this.isResolved()    ||    this.validator!=    null);    (this.isResolved()  ||  this.validator!=  null);	  timeout    	non-compiled	[CE]  not  a  statement	54	None	add
484	[BUG]  [BUGGY]  return(this.isResolved()  ||  this.validator!=  null);  return(this.isResolved()  ||  this.validator!=  null);  [CE]  unreachable  statement  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  return(this.isResolved()  ||  this.validator!=  null);  return(this.isResolved()  ||  this.validator!=  null);  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	return(this.isResolved()    ||    this.validator!=    null);    return(this.isResolved()  ||  this.validator!=  null);	  timeout    	non-compiled	[CE]  unreachable  statement	54	None	add
485	[BUG]  [BUGGY]  return(this.isResolved()  ||  this.validator!=  null);  if(this.isResolved()  ||  this.validator!=  null);  [CE]  unreachable  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  return(this.isResolved()  ||  this.validator!=  null);  if(this.isResolved()  ||  this.validator!=  null);  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	return(this.isResolved()    ||    this.validator!=    null);    if(this.isResolved()  ||  this.validator!=  null);	  timeout    	non-compiled	[CE]  unreachable  statement	54	None	add
486	[BUG]  [BUGGY]  return(this.isResolved()  ||  this.validator!=  null);  if(this.isResolved()  ||  this.validator!=  null)  {  return(this.isResolved()  ||  this.validator!=  null);  }  [CE]  unreachable  statement  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  return(this.isResolved()  ||  this.validator!=  null);  if(this.isResolved()  ||  this.validator!=  null)  {  return(this.isResolved()  ||  this.validator!=  null);  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	return(this.isResolved()    ||    this.validator!=    null);    if(this.isResolved()  ||  this.validator!=  null)  {  return(this.isResolved()  ||  this.validator!=  null);  }	  timeout    	non-compiled	[CE]  unreachable  statement	54	None	add
487	[BUG]  [BUGGY]  return(this.isResolved()  ||  this.validator!=  null);  if(this.isResolved()  ||  this.validator!=  null);  }  else  {  return(this.isResolved()  ||  this.validator!=  null);  }  [CE]  'else'  without  'if'  [FE]                      AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  return(this.isResolved()  ||  this.validator!=  null);  if(this.isResolved()  ||  this.validator!=  null);  }  else  {  return(this.isResolved()  ||  this.validator!=  null);  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	return(this.isResolved()    ||    this.validator!=    null);    if(this.isResolved()  ||  this.validator!=  null);  }  else  {  return(this.isResolved()  ||  this.validator!=  null);  }	  timeout    	non-compiled	[CE]  'else'  without  'if'	54	None	add
488	[BUG]  [BUGGY]  return(this.isResolved()  ||  this.validator!=  null);  if(this.isResolved()  ||  this.validator!=  null)  {  return(this.isResolved()  ||  this.validator  ==  null);  }  [CE]  unreachable  statement  [FE]                        AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  return(this.isResolved()  ||  this.validator!=  null);  if(this.isResolved()  ||  this.validator!=  null)  {  return(this.isResolved()  ||  this.validator  ==  null);  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	return(this.isResolved()    ||    this.validator!=    null);    if(this.isResolved()  ||  this.validator!=  null)  {  return(this.isResolved()  ||  this.validator  ==  null);  }	  timeout    	non-compiled	[CE]  unreachable  statement	54	None	add
489	[BUG]  [BUGGY]  if(this.value!=  null  ||  this.value!=  null)  {  return  false;  }  [CE]  cannot  find  symbol  value  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.value!=  null  ||  this.value!=  null)  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.value!=  null  ||  this.value!=  null)  {  return  false;  }	  if(this.slotType!=    null    ||    this.slotType!=    null)    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol  value	147	None	replace
490	[BUG]  [BUGGY]  if(this.slotType!=  null  ||  this.slotType!=  null)return  false;  }  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.slotType!=  null  ||  this.slotType!=  null)return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.slotType!=  null  ||  this.slotType!=  null)return  false;  }	  if(this.slotType!=    null    ||    this.slotType!=    null)    {    return    false;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	147	None	replace
491	[BUG]  [BUGGY]  if(this.slotType!=  null  ||  this.slotType  ==  null)  {  return  false;  }  [CE]  cannot  find  symbol  slotType  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.slotType!=  null  ||  this.slotType  ==  null)  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.slotType!=  null  ||  this.slotType  ==  null)  {  return  false;  }	  if(this.slotType!=    null    ||    this.slotType!=    null)    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol  slotType	147	None	replace
492	[BUG]  [BUGGY]  if(this.value!=  null  ||  this.slotType!=  null)  {  return  false;  }  [CE]  cannot  find  symbol  value  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.value!=  null  ||  this.slotType!=  null)  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.value!=  null  ||  this.slotType!=  null)  {  return  false;  }	  if(this.slotType!=    null    ||    this.slotType!=    null)    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol  value	147	None	replace
493	[BUG]  [BUGGY]  if(this.slotType!=  null  ||  this.value!=  null)  {  return  false;  }  [CE]  cannot  find  symbol  slotType  [FE]                      AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.slotType!=  null  ||  this.value!=  null)  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.slotType!=  null  ||  this.value!=  null)  {  return  false;  }	  if(this.slotType!=    null    ||    this.slotType!=    null)    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol  slotType	147	None	replace
494	[BUG]  [BUGGY]  if(this.forwardReferencedTypes!=  null)  {  return  true;  }  [CE]  cannot  find  symbol  forwardReferencedTypes  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.forwardReferencedTypes!=  null)  {  return  true;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.forwardReferencedTypes!=  null)  {  return  true;  }	  if(this.forAnnotations!=    null)    {    return    true;    }    	non-compiled	[CE]  cannot  find  symbol  forwardReferencedTypes	72	None	replace
495	[BUG]  [BUGGY]  if(this.forAnnotations  ==  null)  {  return  true;  }  [CE]  cannot  find  symbol  forAnnotations  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.forAnnotations  ==  null)  {  return  true;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.forAnnotations  ==  null)  {  return  true;  }	  if(this.forAnnotations!=    null)    {    return    true;    }    	non-compiled	[CE]  cannot  find  symbol  forAnnotations	72	None	replace
496	[BUG]  [BUGGY]  if(!this.validator)  {  return  true;  }  [CE]  bad  operand  type  Predicate<JSType>  for  unary  operator  '!'  [FE]                      AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(!this.validator)  {  return  true;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(!this.validator)  {  return  true;  }	  if(!this.isValidator)    {    return    true;    }    	non-compiled	[CE]  bad  operand  type  Predicate<JSType>  for  unary  operator  '!'	117	None	replace
497	[BUG]  [BUGGY]  if(this.isValidator)  {  return  true;  }  [CE]  cannot  find  symbol  isValidator  [FE]                        AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.isValidator)  {  return  true;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.isValidator)  {  return  true;  }	  if(!this.isValidator)    {    return    true;    }    	non-compiled	[CE]  cannot  find  symbol  isValidator	117	None	replace
498	[BUG]  [BUGGY]  if(!this.value.isValidator)  {  return  true;  }  [CE]  cannot  find  symbol  value  [FE]                          AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(!this.value.isValidator)  {  return  true;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(!this.value.isValidator)  {  return  true;  }	  if(!this.isValidator)    {    return    true;    }    	non-compiled	[CE]  cannot  find  symbol  value	117	None	replace
499	[BUG]  [BUGGY]  if(!this.referencedType.isValidator)  {  return  true;  }  [CE]  referencedType  has  private  access  in  ProxyObjectType  [FE]                            AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(!this.referencedType.isValidator)  {  return  true;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(!this.referencedType.isValidator)  {  return  true;  }	  if(!this.isValidator)    {    return    true;    }    	non-compiled	[CE]  referencedType  has  private  access  in  ProxyObjectType	117	None	replace
500	[BUG]  [BUGGY]  this.forwardDeclared  =  validator.isForwardDeclared();  [CE]  cannot  find  symbol  forwardDeclared  [FE]                        AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  this.forwardDeclared  =  validator.isForwardDeclared();  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	this.forwardDeclared  =  validator.isForwardDeclared();	  this.isForwardDeclared();    	non-compiled	[CE]  cannot  find  symbol  forwardDeclared	22	None	replace
501	[BUG]  [BUGGY]  this.referencedTypes.isForwardDeclared();  [CE]  cannot  find  symbol  referencedTypes  [FE]                          AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  this.referencedTypes.isForwardDeclared();  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	this.referencedTypes.isForwardDeclared();	  this.isForwardDeclared();    	non-compiled	[CE]  cannot  find  symbol  referencedTypes	22	None	replace
502	[BUG]  [BUGGY]  this.resolveForwardDeclared();  [CE]  cannot  find  symbol  [FE]                            AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  this.resolveForwardDeclared();  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	this.resolveForwardDeclared();	  this.isForwardDeclared();    	non-compiled	[CE]  cannot  find  symbol	22	None	replace
503	[BUG]  [BUGGY]  this.resolvedTypes.isForwardDeclared();  [CE]  cannot  find  symbol  resolvedTypes  [FE]                              AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  this.resolvedTypes.isForwardDeclared();  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	this.resolvedTypes.isForwardDeclared();	  this.isForwardDeclared();    	non-compiled	[CE]  cannot  find  symbol  resolvedTypes	22	None	replace
504	[BUG]  [BUGGY]  this.forAnnotations.setForwardDeclared(validator);  [CE]  cannot  find  symbol  forAnnotations  [FE]                                AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  this.forAnnotations.setForwardDeclared(validator);  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	this.forAnnotations.setForwardDeclared(validator);	  this.isForwardDeclared();    	non-compiled	[CE]  cannot  find  symbol  forAnnotations	22	None	replace
505	[BUG]  [BUGGY]  this.ignoreForwardReferencedTypes.isForwardDeclared();  [CE]  cannot  find  symbol  ignoreForwardReferencedTypes  [FE]                                  AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  this.ignoreForwardReferencedTypes.isForwardDeclared();  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	this.ignoreForwardReferencedTypes.isForwardDeclared();	  this.isForwardDeclared();    	non-compiled	[CE]  cannot  find  symbol  ignoreForwardReferencedTypes	22	None	replace
506	[BUG]  [BUGGY]  Predicate  <?>  propertyNode  =  this.propertyContinuations.get(name);  [CE]  cannot  find  symbol  name  [FE]                              AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  Predicate  <?>  propertyNode  =  this.propertyContinuations.get(name);  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	Predicate  <?>  propertyNode  =  this.propertyContinuations.get(name);	  Predicate    <?>    propertyNode    =    this.propertyContinuations.get(propertyName);    	non-compiled	[CE]  cannot  find  symbol  name	134	None	replace
507	[BUG]  [BUGGY]  Predicate  <?>  propertyNode  =  this.propertyContinuations.get(reference);  [CE]  method  get  in  interface  List<E>  cannot  be  applied  to  given  types;  [FE]                                AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  Predicate  <?>  propertyNode  =  this.propertyContinuations.get(reference);  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	Predicate  <?>  propertyNode  =  this.propertyContinuations.get(reference);	  Predicate    <?>    propertyNode    =    this.propertyContinuations.get(propertyName);    	non-compiled	[CE]  method  get  in  interface  List<E>  cannot  be  applied  to  given  types;	134	None	replace
508	[BUG]  [BUGGY]  Predicate  <?>  propertyNode  =  this.propertyContinuations.get(this.sourceName);  [CE]  method  get  in  interface  List<E>  cannot  be  applied  to  given  types;  [FE]                                  AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  Predicate  <?>  propertyNode  =  this.propertyContinuations.get(this.sourceName);  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	Predicate  <?>  propertyNode  =  this.propertyContinuations.get(this.sourceName);	  Predicate    <?>    propertyNode    =    this.propertyContinuations.get(propertyName);    	non-compiled	[CE]  method  get  in  interface  List<E>  cannot  be  applied  to  given  types;	134	None	replace
509	[BUG]  [BUGGY]  Predicate  <?>  propertyNode  =  this.propertyContinuations.get(validator);  [CE]  method  get  in  interface  List<E>  cannot  be  applied  to  given  types;  [FE]                                    AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  Predicate  <?>  propertyNode  =  this.propertyContinuations.get(validator);  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	Predicate  <?>  propertyNode  =  this.propertyContinuations.get(validator);	  Predicate    <?>    propertyNode    =    this.propertyContinuations.get(propertyName);    	non-compiled	[CE]  method  get  in  interface  List<E>  cannot  be  applied  to  given  types;	134	None	replace
510	[BUG]  [BUGGY]  Predicate  <?>  propertyNode  =  this.propertyContinuations.get(value);  [CE]  cannot  find  symbol  value  [FE]                                      AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  Predicate  <?>  propertyNode  =  this.propertyContinuations.get(value);  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	Predicate  <?>  propertyNode  =  this.propertyContinuations.get(value);	  Predicate    <?>    propertyNode    =    this.propertyContinuations.get(propertyName);    	non-compiled	[CE]  cannot  find  symbol  value	134	None	replace
511	[BUG]  [BUGGY]  Predicate  <?>  propertyNode  =  this.propertyContinuations.get(sourceName);  [CE]  method  get  in  interface  List<E>  cannot  be  applied  to  given  types;  [FE]                                        AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  Predicate  <?>  propertyNode  =  this.propertyContinuations.get(sourceName);  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	Predicate  <?>  propertyNode  =  this.propertyContinuations.get(sourceName);	  Predicate    <?>    propertyNode    =    this.propertyContinuations.get(propertyName);    	non-compiled	[CE]  method  get  in  interface  List<E>  cannot  be  applied  to  given  types;	134	None	replace
512	[BUG]  [BUGGY]  if(this.referencedType  ==  null)  {  return  false;  }  [CE]  referencedType  has  private  access  in  ProxyObjectType  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.referencedType  ==  null)  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.referencedType  ==  null)  {  return  false;  }	  if(this.referencedType!=    null)    {    return    false;    }    	non-compiled	[CE]  referencedType  has  private  access  in  ProxyObjectType	33	None	replace
513	[BUG]  [BUGGY]  if(this.referencedType  ==  null  ||  this.referencedType!=  null)  {  return  false;  }  [CE]  referencedType  has  private  access  in  ProxyObjectType  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.referencedType  ==  null  ||  this.referencedType!=  null)  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.referencedType  ==  null  ||  this.referencedType!=  null)  {  return  false;  }	  if(this.referencedType!=    null)    {    return    false;    }    	non-compiled	[CE]  referencedType  has  private  access  in  ProxyObjectType	33	None	replace
514	[BUG]  [BUGGY]  if(this.referencedType!=  null  ||  this.referencedType.isReferenced())  {  return  false;  }  [CE]  referencedType  has  private  access  in  ProxyObjectType  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.referencedType!=  null  ||  this.referencedType.isReferenced())  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.referencedType!=  null  ||  this.referencedType.isReferenced())  {  return  false;  }	  if(this.referencedType!=    null)    {    return    false;    }    	non-compiled	[CE]  referencedType  has  private  access  in  ProxyObjectType	33	None	replace
515	[BUG]  [BUGGY]  if(this.referencedType!=  null  ||  this.referencedType  ==  null)  {  return  false;  }  [CE]  referencedType  has  private  access  in  ProxyObjectType  [FE]                      AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.referencedType!=  null  ||  this.referencedType  ==  null)  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.referencedType!=  null  ||  this.referencedType  ==  null)  {  return  false;  }	  if(this.referencedType!=    null)    {    return    false;    }    	non-compiled	[CE]  referencedType  has  private  access  in  ProxyObjectType	33	None	replace
516	[BUG]  [BUGGY]  if(this.referencedType!=  null  ||  this.referencedType.isUnknownType())  {  return  false;  }  [CE]  referencedType  has  private  access  in  ProxyObjectType  [FE]                        AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.referencedType!=  null  ||  this.referencedType.isUnknownType())  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.referencedType!=  null  ||  this.referencedType.isUnknownType())  {  return  false;  }	  if(this.referencedType!=    null)    {    return    false;    }    	non-compiled	[CE]  referencedType  has  private  access  in  ProxyObjectType	33	None	replace
517	[BUG]  [BUGGY]  this.isReferencedTypes())  {  return  false;  }  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  this.isReferencedTypes())  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	this.isReferencedTypes())  {  return  false;  }	  this.isForwardDeclared())    {    return    false;    }    	non-compiled	[CE]  ';'  expected	35	None	replace
518	[BUG]  [BUGGY]  this.isResolved())  {  return  false;  }  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  this.isResolved())  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	this.isResolved())  {  return  false;  }	  this.isForwardDeclared())    {    return    false;    }    	non-compiled	[CE]  ';'  expected	35	None	replace
519	[BUG]  [BUGGY]  this.isReferencedType())  {  return  false;  }  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  this.isReferencedType())  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	this.isReferencedType())  {  return  false;  }	  this.isForwardDeclared())    {    return    false;    }    	non-compiled	[CE]  ';'  expected	35	None	replace
520	[BUG]  [BUGGY]  this.ignoreForwardReferencedTypes)  {  return  false;  }  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  this.ignoreForwardReferencedTypes)  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	this.ignoreForwardReferencedTypes)  {  return  false;  }	  this.isForwardDeclared())    {    return    false;    }    	non-compiled	[CE]  not  a  statement	35	None	replace
521	[BUG]  [BUGGY]  this.isInferred())  {  return  false;  }  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  this.isInferred())  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	this.isInferred())  {  return  false;  }	  this.isForwardDeclared())    {    return    false;    }    	non-compiled	[CE]  ';'  expected	35	None	replace
522	[BUG]  [BUGGY]  this.isForwardDeclared()  ||  this.ignoreForwardReferencedTypes)  {  return  false;  }  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  this.isForwardDeclared()  ||  this.ignoreForwardReferencedTypes)  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	this.isForwardDeclared()  ||  this.ignoreForwardReferencedTypes)  {  return  false;  }	  this.isForwardDeclared())    {    return    false;    }    	non-compiled	[CE]  not  a  statement	35	None	replace
523	[BUG]  [BUGGY]  if(this.forAnnotations!=  validator)  {  return  true;  }  [CE]  cannot  find  symbol  forAnnotations  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.forAnnotations!=  validator)  {  return  true;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.forAnnotations!=  validator)  {  return  true;  }	  if(this.forAnnotations!=    validator)    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol  forAnnotations	45	None	replace
524	[BUG]  [BUGGY]  if(this.forwardReferencedTypes!=  validator)  {  return  false;  }  [CE]  cannot  find  symbol  forwardReferencedTypes  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.forwardReferencedTypes!=  validator)  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.forwardReferencedTypes!=  validator)  {  return  false;  }	  if(this.forAnnotations!=    validator)    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol  forwardReferencedTypes	45	None	replace
525	[BUG]  [BUGGY]  if(validator!=  this.forAnnotations)  {  return  false;  }  [CE]  cannot  find  symbol  forAnnotations  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(validator!=  this.forAnnotations)  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(validator!=  this.forAnnotations)  {  return  false;  }	  if(this.forAnnotations!=    validator)    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol  forAnnotations	45	None	replace
526	[BUG]  [BUGGY]  if(this.forType!=  validator)  {  return  false;  }  [CE]  cannot  find  symbol  forType  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.forType!=  validator)  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.forType!=  validator)  {  return  false;  }	  if(this.forAnnotations!=    validator)    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol  forType	45	None	replace
527	[BUG]  [BUGGY]  if(this.forAnnotations  ==  validator)  {  return  true;  }  [CE]  cannot  find  symbol  forAnnotations  [FE]                      AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.forAnnotations  ==  validator)  {  return  true;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.forAnnotations  ==  validator)  {  return  true;  }	  if(this.forAnnotations!=    validator)    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol  forAnnotations	45	None	replace
528	[BUG]  [BUGGY]  if(this.validator!=  null)  {  return  this.isResolved();  }  [CE]  missing  return  statement  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.validator!=  null)  {  return  this.isResolved();  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.validator!=  null)  {  return  this.isResolved();  }	  return(this.isResolved()    &&    this.validator!=    null);    if(this.isResolved()    &&    this.validator!=    null)    {    return(this.isResolved()    &&    this.validator!=    null);    }    	non-compiled	[CE]  missing  return  statement	27	None	replace
529	[BUG]  [BUGGY]  this.validator  =  validator.setValidator(this.validator);  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  this.validator  =  validator.setValidator(this.validator);  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	this.validator  =  validator.setValidator(this.validator);	  return(this.isResolved()    &&    this.validator!=    null);    if(this.isResolved()    &&    this.validator!=    null)    {    return(this.isResolved()    &&    this.validator!=    null);    }    	non-compiled	[CE]  cannot  find  symbol	27	None	replace
530	[BUG]  [BUGGY]  if(validator  ==  null)  {  return  true;  }  [CE]  missing  return  statement  [FE]                        AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(validator  ==  null)  {  return  true;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(validator  ==  null)  {  return  true;  }	  if(validator    ==    null)    {    return    false;    }    	non-compiled	[CE]  missing  return  statement	92	None	replace
531	[BUG]  [BUGGY]  if(validator!=  null)  {  return  true;  }  [CE]  missing  return  statement  [FE]                          AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(validator!=  null)  {  return  true;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(validator!=  null)  {  return  true;  }	  if(validator    ==    null)    {    return    false;    }    	non-compiled	[CE]  missing  return  statement	92	None	replace
532	[BUG]  [BUGGY]  return(this.isResolved()  &&  validator  ==  null);  return(this.isResolved()  &&  validator  ==  null);  [CE]  unreachable  statement  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  return(this.isResolved()  &&  validator  ==  null);  return(this.isResolved()  &&  validator  ==  null);  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	return(this.isResolved()    &&    validator    ==    null);    return(this.isResolved()  &&  validator  ==  null);	  timeout    	non-compiled	[CE]  unreachable  statement	61	None	add
533	[BUG]  [BUGGY]  return(this.isResolved()  &&  validator  ==  null);  (this.isResolved()  &&  validator  ==  null);  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  return(this.isResolved()  &&  validator  ==  null);  (this.isResolved()  &&  validator  ==  null);  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	return(this.isResolved()    &&    validator    ==    null);    (this.isResolved()  &&  validator  ==  null);	  timeout    	non-compiled	[CE]  not  a  statement	61	None	add
534	[BUG]  [BUGGY]  return(this.isResolved()  &&  validator  ==  null);  if(this.isResolved()  &&  validator  ==  null);  [CE]  unreachable  statement  [FE]                        AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  return(this.isResolved()  &&  validator  ==  null);  if(this.isResolved()  &&  validator  ==  null);  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	return(this.isResolved()    &&    validator    ==    null);    if(this.isResolved()  &&  validator  ==  null);	  timeout    	non-compiled	[CE]  unreachable  statement	61	None	add
535	[BUG]  [BUGGY]  return(this.isResolved()  &&  validator  ==  null);  this.isResolved()  &&  validator  ==  null);  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  return(this.isResolved()  &&  validator  ==  null);  this.isResolved()  &&  validator  ==  null);  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	return(this.isResolved()    &&    validator    ==    null);    this.isResolved()  &&  validator  ==  null);	  timeout    	non-compiled	[CE]  not  a  statement	61	None	add
536	[BUG]  [BUGGY]  return(this.isResolved()  &&  validator  ==  null);  return(this.isResolved()  &&  validator!=  null);  [CE]  unreachable  statement  [FE]                            AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  return(this.isResolved()  &&  validator  ==  null);  return(this.isResolved()  &&  validator!=  null);  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	return(this.isResolved()    &&    validator    ==    null);    return(this.isResolved()  &&  validator!=  null);	  timeout    	non-compiled	[CE]  unreachable  statement	61	None	add
537	[BUG]  [BUGGY]  return(this.isResolved()  &&  validator  ==  null);  if(this.isResolved()  &&  validator!=  null);  [CE]  unreachable  statement  [FE]                              AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  return(this.isResolved()  &&  validator  ==  null);  if(this.isResolved()  &&  validator!=  null);  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	return(this.isResolved()    &&    validator    ==    null);    if(this.isResolved()  &&  validator!=  null);	  timeout    	non-compiled	[CE]  unreachable  statement	61	None	add
538	[BUG]  [BUGGY]  return(this.isResolved()  &&  validator  ==  null);  if(this.isResolved()  &&  validator  ==  null);  }  [CE]  class,  interface,  or  enum  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  return(this.isResolved()  &&  validator  ==  null);  if(this.isResolved()  &&  validator  ==  null);  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	return(this.isResolved()    &&    validator    ==    null);    if(this.isResolved()  &&  validator  ==  null);  }	  timeout    	non-compiled	[CE]  class,  interface,  or  enum  expected	61	None	add
539	[BUG]  [BUGGY]  this.propertyContinuations  =  Collections.emptyList();  [CE]  cannot  find  symbol  Collections  [FE]                          AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  this.propertyContinuations  =  Collections.emptyList();  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	this.propertyContinuations  =  Collections.emptyList();	  if(this.propertyContinuations    ==    null)    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol  Collections	37	None	replace
540	[BUG]  [BUGGY]  this.propertyContinuations  =  new  ArrayList  <  JSType>();  [CE]  cannot  find  symbol  [FE]                            AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  this.propertyContinuations  =  new  ArrayList  <  JSType>();  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	this.propertyContinuations  =  new  ArrayList  <  JSType>();	  if(this.propertyContinuations    ==    null)    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol	37	None	replace
541	[BUG]  [BUGGY]  return  super.setValidator(validator,  this.forAnnotations,  this.ignoreForwardReferencedTypes);  [CE]  cannot  find  symbol  forAnnotations  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  return  super.setValidator(validator,  this.forAnnotations,  this.ignoreForwardReferencedTypes);  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	return  super.setValidator(validator,  this.forAnnotations,  this.ignoreForwardReferencedTypes);	  return    super.setValidator(validator,    this.forAnnotations);    	non-compiled	[CE]  cannot  find  symbol  forAnnotations	40	None	replace
542	[BUG]  [BUGGY]  return  super.setValidator(validator,  this.forAnnotations,  isForwardDeclared);  [CE]  cannot  find  symbol  forAnnotations  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  return  super.setValidator(validator,  this.forAnnotations,  isForwardDeclared);  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	return  super.setValidator(validator,  this.forAnnotations,  isForwardDeclared);	  return    super.setValidator(validator,    this.forAnnotations);    	non-compiled	[CE]  cannot  find  symbol  forAnnotations	40	None	replace
543	[BUG]  [BUGGY]  return  super.setValidator(validator,  this.forAnnotations,  charno);  [CE]  cannot  find  symbol  forAnnotations  [FE]                      AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  return  super.setValidator(validator,  this.forAnnotations,  charno);  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	return  super.setValidator(validator,  this.forAnnotations,  charno);	  return    super.setValidator(validator,    this.forAnnotations);    	non-compiled	[CE]  cannot  find  symbol  forAnnotations	40	None	replace
544	[BUG]  [BUGGY]  return  super.setValidator(validator,  this.propertyContinuations);  [CE]  method  setValidator  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                        AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  return  super.setValidator(validator,  this.propertyContinuations);  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	return  super.setValidator(validator,  this.propertyContinuations);	  return    super.setValidator(validator,    this.forAnnotations);    	non-compiled	[CE]  method  setValidator  in  class  JSType  cannot  be  applied  to  given  types;	40	None	replace
545	[BUG]  [BUGGY]  return  super.setValidator(validator,  this.forAnnotations,  true);  [CE]  cannot  find  symbol  forAnnotations  [FE]                          AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  return  super.setValidator(validator,  this.forAnnotations,  true);  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	return  super.setValidator(validator,  this.forAnnotations,  true);	  return    super.setValidator(validator,    this.forAnnotations);    	non-compiled	[CE]  cannot  find  symbol  forAnnotations	40	None	replace
546	[BUG]  [BUGGY]  return  super.setValidator(validator,  this.forAnnotations,  false);  [CE]  cannot  find  symbol  forAnnotations  [FE]                            AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  return  super.setValidator(validator,  this.forAnnotations,  false);  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	return  super.setValidator(validator,  this.forAnnotations,  false);	  return    super.setValidator(validator,    this.forAnnotations);    	non-compiled	[CE]  cannot  find  symbol  forAnnotations	40	None	replace
547	[BUG]  [BUGGY]  if(!this.isUnknownType()  ||  validator!=  null)  {  return  false;  }  [CE]  missing  return  statement  [FE]                        AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(!this.isUnknownType()  ||  validator!=  null)  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(!this.isUnknownType()  ||  validator!=  null)  {  return  false;  }	  if(!this.isUnknownType())    {    return    true;    }    	non-compiled	[CE]  missing  return  statement	118	None	replace
548	[BUG]  [BUGGY]  if(!this.isUnknownType()  ||  validator  ==  null)  {  return  false;  }  [CE]  missing  return  statement  [FE]                          AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(!this.isUnknownType()  ||  validator  ==  null)  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(!this.isUnknownType()  ||  validator  ==  null)  {  return  false;  }	  if(!this.isUnknownType())    {    return    true;    }    	non-compiled	[CE]  missing  return  statement	118	None	replace
549	[BUG]  [BUGGY]  while(!this.isUnknownType())  {  return  false;  }  [CE]  missing  return  statement  [FE]                            AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  while(!this.isUnknownType())  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	while(!this.isUnknownType())  {  return  false;  }	  if(!this.isUnknownType())    {    return    true;    }    	non-compiled	[CE]  missing  return  statement	118	None	replace
550	[BUG]  [BUGGY]  return(this.isValidator()  ||  this.validator!=  null);  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  return(this.isValidator()  ||  this.validator!=  null);  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	return(this.isValidator()  ||  this.validator!=  null);	  return(this.isResolved()    ||    this.validator!=    null);    timeout    	non-compiled	[CE]  cannot  find  symbol	55	None	replace
551	[BUG]  [BUGGY]  timeout  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  return(this.isResolved())&&  this.validator!=  null;  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	add	return(this.isResolved())&&  this.validator!=  null;	  return(this.isResolved()    ||    this.validator!=    null);    timeout    	compilable	timeout	55	1	replace
552	[BUG]  [BUGGY]  return(this.isResolved())&&  this.validator!=  null;  timeout  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  return(this.isResolved())&&  this.validator!=  null;  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	return(this.isResolved())&&  this.validator!=  null;	  return(this.isResolved()    ||    this.validator!=    null);    timeout    	compilable	timeout	55	1	replace
553	[BUG]  [BUGGY]  if(this.forAnnotations  ==  forAnnotations)  {  forAnnotations  ignoreForwardReferencedTypes  =  this.ignoreForwardReferencedTypes;  if(ignoreForwardReferencedTypes  ==  null)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.forAnnotations  ==  forAnnotations)  {  forAnnotations  ignoreForwardReferencedTypes  =  this.ignoreForwardReferencedTypes;  if(ignoreForwardReferencedTypes  ==  null)  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.forAnnotations  ==  forAnnotations)  {  forAnnotations  ignoreForwardReferencedTypes  =  this.ignoreForwardReferencedTypes;  if(ignoreForwardReferencedTypes  ==  null)  {  return  false;  }	  return    false;    if(this.forAnnotations!=    forAnnotations)    {    forAnnotations    ignoreForwardReferencedTypes    =    this.ignoreForwardReferencedTypes;    if(ignoreForwardReferencedTypes    ==    null)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
554	[BUG]  [BUGGY]  if(this.forAnnotations!=  forAnnotations)  {  forAnnotations  ignoreForwardReferencedTypes  =  null;  if(ignoreForwardReferencedTypes  ==  null)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.forAnnotations!=  forAnnotations)  {  forAnnotations  ignoreForwardReferencedTypes  =  null;  if(ignoreForwardReferencedTypes  ==  null)  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.forAnnotations!=  forAnnotations)  {  forAnnotations  ignoreForwardReferencedTypes  =  null;  if(ignoreForwardReferencedTypes  ==  null)  {  return  false;  }	  return    false;    if(this.forAnnotations!=    forAnnotations)    {    forAnnotations    ignoreForwardReferencedTypes    =    this.ignoreForwardReferencedTypes;    if(ignoreForwardReferencedTypes    ==    null)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
555	[BUG]  [BUGGY]  if(this.forAnnotations!=  forAnnotations)  {  forAnnotations  ignoreForwardReferencedTypes  =  validator.getForwardReferencedTypes();  if(ignoreForwardReferencedTypes  ==  null)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.forAnnotations!=  forAnnotations)  {  forAnnotations  ignoreForwardReferencedTypes  =  validator.getForwardReferencedTypes();  if(ignoreForwardReferencedTypes  ==  null)  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.forAnnotations!=  forAnnotations)  {  forAnnotations  ignoreForwardReferencedTypes  =  validator.getForwardReferencedTypes();  if(ignoreForwardReferencedTypes  ==  null)  {  return  false;  }	  return    false;    if(this.forAnnotations!=    forAnnotations)    {    forAnnotations    ignoreForwardReferencedTypes    =    this.ignoreForwardReferencedTypes;    if(ignoreForwardReferencedTypes    ==    null)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
556	[BUG]  [BUGGY]  return(validator.isValidator()  &&  this.isValidator!=  null);  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  return(validator.isValidator()  &&  this.isValidator!=  null);  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	return(validator.isValidator()  &&  this.isValidator!=  null);	  return(this.isValidator()    &&    validator!=    null);    	non-compiled	[CE]  cannot  find  symbol	130	None	replace
557	[BUG]  [BUGGY]  return(this.isValidator()  ||  validator!=  null);  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  return(this.isValidator()  ||  validator!=  null);  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	return(this.isValidator()  ||  validator!=  null);	  return(this.isValidator()    &&    validator!=    null);    	non-compiled	[CE]  cannot  find  symbol	130	None	replace
558	[BUG]  [BUGGY]  return(this.validator.isValidator()  &&  validator!=  null);  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  return(this.validator.isValidator()  &&  validator!=  null);  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	return(this.validator.isValidator()  &&  validator!=  null);	  return(this.isValidator()    &&    validator!=    null);    	non-compiled	[CE]  cannot  find  symbol	130	None	replace
559	[BUG]  [BUGGY]  return(!this.isValidator()  &&  validator!=  null);  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  return(!this.isValidator()  &&  validator!=  null);  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	return(!this.isValidator()  &&  validator!=  null);	  return(this.isValidator()    &&    validator!=    null);    	non-compiled	[CE]  cannot  find  symbol	130	None	replace
560	[BUG]  [BUGGY]  return(Validator.isValidator()  &&  validator!=  null);  [CE]  cannot  find  symbol  Validator  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  return(Validator.isValidator()  &&  validator!=  null);  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	return(Validator.isValidator()  &&  validator!=  null);	  return(this.isValidator()    &&    validator!=    null);    	non-compiled	[CE]  cannot  find  symbol  Validator	130	None	replace
561	[BUG]  [BUGGY]  this.resolved  =  true;  [CE]  resolved  has  private  access  in  JSType  [FE]                        AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  this.resolved  =  true;  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	this.resolved  =  true;	  if(this.isResolved())    {    return    super.setValidator(validator);    }    else    {    this.resolved    =    true;    }    	non-compiled	[CE]  resolved  has  private  access  in  JSType	43	None	replace
562	[BUG]  [BUGGY]  Predicate  <?>  property  =  validator.getProperty( "property ");  [CE]  cannot  find  symbol  [FE]                          AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  Predicate  <?>  property  =  validator.getProperty( "property ");  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	Predicate  <?>  property  =  validator.getProperty( "property ");	  if(this.isResolved())    {    return    super.setValidator(validator);    }    else    {    this.resolved    =    true;    }    	non-compiled	[CE]  cannot  find  symbol	43	None	replace
563	[BUG]  [BUGGY]  Predicate  <  JSType>  property  =  validator.getProperty( "property ");  [CE]  cannot  find  symbol  [FE]                            AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  Predicate  <  JSType>  property  =  validator.getProperty( "property ");  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	Predicate  <  JSType>  property  =  validator.getProperty( "property ");	  if(this.isResolved())    {    return    super.setValidator(validator);    }    else    {    this.resolved    =    true;    }    	non-compiled	[CE]  cannot  find  symbol	43	None	replace
564	[BUG]  [BUGGY]  if(this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.resolved  =  false;  }  [CE]  resolved  has  private  access  in  JSType  [FE]                              AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.resolved  =  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.resolved  =  false;  }	  if(this.isResolved())    {    return    super.setValidator(validator);    }    else    {    this.resolved    =    true;    }    	non-compiled	[CE]  resolved  has  private  access  in  JSType	43	None	replace
565	[BUG]  [BUGGY]  if(this.referencedTypes!=  null)  {  if(this.isResolved())  {  return  false;  }  else  {  Predicate  <  JSType>  propertyNode  =  this.referencedTypes.get(reference);  if(propertyNode!=  null)  {  return  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.referencedTypes!=  null)  {  if(this.isResolved())  {  return  false;  }  else  {  Predicate  <  JSType>  propertyNode  =  this.referencedTypes.get(reference);  if(propertyNode!=  null)  {  return  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.referencedTypes!=  null)  {  if(this.isResolved())  {  return  false;  }  else  {  Predicate  <  JSType>  propertyNode  =  this.referencedTypes.get(reference);  if(propertyNode!=  null)  {  return	  if(this.isResolved())    {    return    false;    }    else    {    Predicate    <    JSType>    propertyNode    =    this.referencedTypes.get(reference);    if(propertyNode!=    null)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	99	None	replace
566	[BUG]  [BUGGY]  if(this.referencedTypes!=  null)  {  if(this.isResolved())  {  return  false;  }  else  {  Predicate  <  JSType>  propertyNode  =  this.referencedTypes.get(reference);  if(propertyNode!=  null)  {  return  true  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.referencedTypes!=  null)  {  if(this.isResolved())  {  return  false;  }  else  {  Predicate  <  JSType>  propertyNode  =  this.referencedTypes.get(reference);  if(propertyNode!=  null)  {  return  true  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.referencedTypes!=  null)  {  if(this.isResolved())  {  return  false;  }  else  {  Predicate  <  JSType>  propertyNode  =  this.referencedTypes.get(reference);  if(propertyNode!=  null)  {  return  true	  if(this.isResolved())    {    return    false;    }    else    {    Predicate    <    JSType>    propertyNode    =    this.referencedTypes.get(reference);    if(propertyNode!=    null)    {    return    true;    }    	non-compiled	[CE]  ';'  expected	99	None	replace
567	[BUG]  [BUGGY]  if(this.referencedTypes!=  null  ||  this.isResolved())  {  return  false;  }  else  {  Predicate  <  JSType>  propertyNode  =  this.referencedTypes.get(reference);  if(propertyNode!=  null)  {  return  true  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.referencedTypes!=  null  ||  this.isResolved())  {  return  false;  }  else  {  Predicate  <  JSType>  propertyNode  =  this.referencedTypes.get(reference);  if(propertyNode!=  null)  {  return  true  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.referencedTypes!=  null  ||  this.isResolved())  {  return  false;  }  else  {  Predicate  <  JSType>  propertyNode  =  this.referencedTypes.get(reference);  if(propertyNode!=  null)  {  return  true	  if(this.isResolved())    {    return    false;    }    else    {    Predicate    <    JSType>    propertyNode    =    this.referencedTypes.get(reference);    if(propertyNode!=    null)    {    return    true;    }    	non-compiled	[CE]  ';'  expected	99	None	replace
568	[BUG]  [BUGGY]  this.setReferencedType(validator);  [CE]  method  setReferencedType  in  class  ProxyObjectType  cannot  be  applied  to  given  types;  [FE]                      AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  this.setReferencedType(validator);  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	this.setReferencedType(validator);	  this.isResolved();    	non-compiled	[CE]  method  setReferencedType  in  class  ProxyObjectType  cannot  be  applied  to  given  types;	14	None	replace
569	[BUG]  [BUGGY]  this.ignoreForwardReferencedTypes  =  true;  [CE]  cannot  find  symbol  ignoreForwardReferencedTypes  [FE]                        AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  this.ignoreForwardReferencedTypes  =  true;  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	this.ignoreForwardReferencedTypes  =  true;	  this.isResolved();    	non-compiled	[CE]  cannot  find  symbol  ignoreForwardReferencedTypes	14	None	replace
570	[BUG]  [BUGGY]  this.isResolvedType();  [CE]  cannot  find  symbol  [FE]                          AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  this.isResolvedType();  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	this.isResolvedType();	  this.isResolved();    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
571	[BUG]  [BUGGY]  if(this.value  ==  null  ||  this.value.equals(validator))  {  return  false;  }  [CE]  cannot  find  symbol  value  [FE]            AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.value  ==  null  ||  this.value.equals(validator))  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.value  ==  null  ||  this.value.equals(validator))  {  return  false;  }	  if(this.value    ==    null)    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol  value	31	None	replace
572	[BUG]  [BUGGY]  if(this.value  ==  null  ||  this.value.length()!=  0)  {  return  false;  }  [CE]  cannot  find  symbol  value  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.value  ==  null  ||  this.value.length()!=  0)  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.value  ==  null  ||  this.value.length()!=  0)  {  return  false;  }	  if(this.value    ==    null)    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol  value	31	None	replace
573	[BUG]  [BUGGY]  if(this.isValidator()  ||  this.isResolved())  {  return  true;  }  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.isValidator()  ||  this.isResolved())  {  return  true;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.isValidator()  ||  this.isResolved())  {  return  true;  }	  if(this.isValidator())    {    return    true;    }    	non-compiled	[CE]  cannot  find  symbol	75	None	replace
574	[BUG]  [BUGGY]  if(isValidator())  {  return  true;  }  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(isValidator())  {  return  true;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(isValidator())  {  return  true;  }	  if(this.isValidator())    {    return    true;    }    	non-compiled	[CE]  cannot  find  symbol	75	None	replace
575	[BUG]  [BUGGY]  if(this.isValidator()  ||  validator.isValidator())  {  return  true;  }  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.isValidator()  ||  validator.isValidator())  {  return  true;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.isValidator()  ||  validator.isValidator())  {  return  true;  }	  if(this.isValidator())    {    return    true;    }    	non-compiled	[CE]  cannot  find  symbol	75	None	replace
576	[BUG]  [BUGGY]  if(this.isValidator()  ||  this.isReferencedType())  {  return  true;  }  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.isValidator()  ||  this.isReferencedType())  {  return  true;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.isValidator()  ||  this.isReferencedType())  {  return  true;  }	  if(this.isValidator())    {    return    true;    }    	non-compiled	[CE]  cannot  find  symbol	75	None	replace
577	[BUG]  [BUGGY]  if(this.value!=  null)  {  return  super.setValidator(validator);  }  [CE]  cannot  find  symbol  value  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.value!=  null)  {  return  super.setValidator(validator);  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.value!=  null)  {  return  super.setValidator(validator);  }	  if(this.slotType!=    null)    {    return    super.setValidator(validator);    }    	non-compiled	[CE]  cannot  find  symbol  value	122	None	replace
578	[BUG]  [BUGGY]  if(this.slotType  ==  null)  {  return  super.setValidator(validator);  }  [CE]  cannot  find  symbol  slotType  [FE]                      AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.slotType  ==  null)  {  return  super.setValidator(validator);  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.slotType  ==  null)  {  return  super.setValidator(validator);  }	  if(this.slotType!=    null)    {    return    super.setValidator(validator);    }    	non-compiled	[CE]  cannot  find  symbol  slotType	122	None	replace
579	[BUG]  [BUGGY]  Predicate  <?>  propertyNode  =  getPropertyNode(reference);  return  propertyNode!=  null  &&  propertyNode.getType()  ==  Token.FUNCTION;  [CE]  incompatible  types  [FE]                            AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  Predicate  <?>  propertyNode  =  getPropertyNode(reference);  return  propertyNode!=  null  &&  propertyNode.getType()  ==  Token.FUNCTION;  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	Predicate  <?>  propertyNode  =  getPropertyNode(reference);  return  propertyNode!=  null  &&  propertyNode.getType()  ==  Token.FUNCTION;	  Predicate    <?>    propertyNode    =    getPropertyNode(propertyName);    return    propertyNode!=    null    &&    propertyNode.getType()    ==    Token.FUNCTION;    	non-compiled	[CE]  incompatible  types	133	None	replace
580	[BUG]  [BUGGY]  Predicate  <?>  propertyNode  =  getPropertyNode(name);  return  propertyNode!=  null  &&  propertyNode.getType()  ==  Token.FUNCTION;  [CE]  cannot  find  symbol  name  [FE]                              AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  Predicate  <?>  propertyNode  =  getPropertyNode(name);  return  propertyNode!=  null  &&  propertyNode.getType()  ==  Token.FUNCTION;  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	Predicate  <?>  propertyNode  =  getPropertyNode(name);  return  propertyNode!=  null  &&  propertyNode.getType()  ==  Token.FUNCTION;	  Predicate    <?>    propertyNode    =    getPropertyNode(propertyName);    return    propertyNode!=    null    &&    propertyNode.getType()    ==    Token.FUNCTION;    	non-compiled	[CE]  cannot  find  symbol  name	133	None	replace
581	[BUG]  [BUGGY]  Predicate  <?>  propertyNode  =  getPropertyNode(this.sourceName);  return  propertyNode!=  null  &&  propertyNode.getType()  ==  Token.FUNCTION;  [CE]  incompatible  types  [FE]                                AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  Predicate  <?>  propertyNode  =  getPropertyNode(this.sourceName);  return  propertyNode!=  null  &&  propertyNode.getType()  ==  Token.FUNCTION;  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	Predicate  <?>  propertyNode  =  getPropertyNode(this.sourceName);  return  propertyNode!=  null  &&  propertyNode.getType()  ==  Token.FUNCTION;	  Predicate    <?>    propertyNode    =    getPropertyNode(propertyName);    return    propertyNode!=    null    &&    propertyNode.getType()    ==    Token.FUNCTION;    	non-compiled	[CE]  incompatible  types	133	None	replace
582	[BUG]  [BUGGY]  Predicate  <?>  propertyNode  =  getPropertyNode(referencedType);  return  propertyNode!=  null  &&  propertyNode.getType()  ==  Token.FUNCTION;  [CE]  referencedType  has  private  access  in  ProxyObjectType  [FE]                                  AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  Predicate  <?>  propertyNode  =  getPropertyNode(referencedType);  return  propertyNode!=  null  &&  propertyNode.getType()  ==  Token.FUNCTION;  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	Predicate  <?>  propertyNode  =  getPropertyNode(referencedType);  return  propertyNode!=  null  &&  propertyNode.getType()  ==  Token.FUNCTION;	  Predicate    <?>    propertyNode    =    getPropertyNode(propertyName);    return    propertyNode!=    null    &&    propertyNode.getType()    ==    Token.FUNCTION;    	non-compiled	[CE]  referencedType  has  private  access  in  ProxyObjectType	133	None	replace
583	[BUG]  [BUGGY]  Predicate  <?>  propertyNode  =  getPropertyNode(sourceName);  return  propertyNode!=  null  &&  propertyNode.getType()  ==  Token.FUNCTION;  [CE]  incompatible  types  [FE]                                    AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  Predicate  <?>  propertyNode  =  getPropertyNode(sourceName);  return  propertyNode!=  null  &&  propertyNode.getType()  ==  Token.FUNCTION;  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	Predicate  <?>  propertyNode  =  getPropertyNode(sourceName);  return  propertyNode!=  null  &&  propertyNode.getType()  ==  Token.FUNCTION;	  Predicate    <?>    propertyNode    =    getPropertyNode(propertyName);    return    propertyNode!=    null    &&    propertyNode.getType()    ==    Token.FUNCTION;    	non-compiled	[CE]  incompatible  types	133	None	replace
584	[BUG]  [BUGGY]  Predicate  <?>  propertyNode  =  getPropertyNode(this.propertyName);  return  propertyNode!=  null  &&  propertyNode.getType()  ==  Token.FUNCTION;  [CE]  cannot  find  symbol  propertyName  [FE]                                      AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  Predicate  <?>  propertyNode  =  getPropertyNode(this.propertyName);  return  propertyNode!=  null  &&  propertyNode.getType()  ==  Token.FUNCTION;  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	Predicate  <?>  propertyNode  =  getPropertyNode(this.propertyName);  return  propertyNode!=  null  &&  propertyNode.getType()  ==  Token.FUNCTION;	  Predicate    <?>    propertyNode    =    getPropertyNode(propertyName);    return    propertyNode!=    null    &&    propertyNode.getType()    ==    Token.FUNCTION;    	non-compiled	[CE]  cannot  find  symbol  propertyName	133	None	replace
585	[BUG]  [BUGGY]  return(this.validator.isValidator()  &&  this.validator!=  null);  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  return(this.validator.isValidator()  &&  this.validator!=  null);  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	return(this.validator.isValidator()  &&  this.validator!=  null);	  return(this.isValidator()    &&    this.validator!=    null);    	non-compiled	[CE]  cannot  find  symbol	105	None	replace
586	[BUG]  [BUGGY]  return(this.validator()  &&  this.isValidator!=  null);  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  return(this.validator()  &&  this.isValidator!=  null);  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	return(this.validator()  &&  this.isValidator!=  null);	  return(this.isValidator()    &&    this.validator!=    null);    	non-compiled	[CE]  cannot  find  symbol	105	None	replace
587	[BUG]  [BUGGY]  return(this.isValidator()  &&  this.validator  ==  null);  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  return(this.isValidator()  &&  this.validator  ==  null);  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	return(this.isValidator()  &&  this.validator  ==  null);	  return(this.isValidator()    &&    this.validator!=    null);    	non-compiled	[CE]  cannot  find  symbol	105	None	replace
588	[BUG]  [BUGGY]  Predicate  <  JSType>  property  =  this.referencedType.getPropertyName();  if(property!=  null)  {  return  super.setValidator(property);  }  [CE]  referencedType  has  private  access  in  ProxyObjectType  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  Predicate  <  JSType>  property  =  this.referencedType.getPropertyName();  if(property!=  null)  {  return  super.setValidator(property);  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	Predicate  <  JSType>  property  =  this.referencedType.getPropertyName();  if(property!=  null)  {  return  super.setValidator(property);  }	  return    super.setValidator(validator);    if(this.isResolved())    {    Predicate    <    JSType>    property    =    this.referencedType.getProperty(propertyName);    if(property!=    null)    {    return    super.setValidator(property);    }    	non-compiled	[CE]  referencedType  has  private  access  in  ProxyObjectType	48	None	replace
589	[BUG]  [BUGGY]  if(isValidator())  {  return  false;  }  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(isValidator())  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(isValidator())  {  return  false;  }	  if(this.isValidator())    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol	82	None	replace
590	[BUG]  [BUGGY]  if(this.isValidator()  ||  this.isResolved())  {  return  false;  }  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.isValidator()  ||  this.isResolved())  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.isValidator()  ||  this.isResolved())  {  return  false;  }	  if(this.isValidator())    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol	82	None	replace
591	[BUG]  [BUGGY]  if(this.isValidator()  ||  this.isReferencedType())  {  return  false;  }  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.isValidator()  ||  this.isReferencedType())  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.isValidator()  ||  this.isReferencedType())  {  return  false;  }	  if(this.isValidator())    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol	82	None	replace
592	[BUG]  [BUGGY]  if(this.isValidator()  ||  validator.isValidator())  {  return  false;  }  [CE]  cannot  find  symbol  [FE]                          AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.isValidator()  ||  validator.isValidator())  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.isValidator()  ||  validator.isValidator())  {  return  false;  }	  if(this.isValidator())    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol	82	None	replace
593	[BUG]  [BUGGY]  if(validator.isValidator())  {  return  false;  }  [CE]  cannot  find  symbol  [FE]                            AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(validator.isValidator())  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(validator.isValidator())  {  return  false;  }	  if(this.isValidator())    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol	82	None	replace
594	[BUG]  [BUGGY]  Predicate  <  JSType>  validator  =  this.validator;  if(validator!=  null)  {  return  super.setValidator(validator);  }  [CE]  variable  validator  is  already  defined  in  method  setValidator(Predicate<JSType>)  [FE]                        AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  Predicate  <  JSType>  validator  =  this.validator;  if(validator!=  null)  {  return  super.setValidator(validator);  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	Predicate  <  JSType>  validator  =  this.validator;  if(validator!=  null)  {  return  super.setValidator(validator);  }	  return    super.setValidator(validator);    if(this.isResolved())    {    Predicate    <    JSType>    validator    =    this.validator;    if(validator!=    null)    {    return    super.setValidator(validator);    }    	non-compiled	[CE]  variable  validator  is  already  defined  in  method  setValidator(Predicate<JSType>)	52	None	replace
595	[BUG]  [BUGGY]  if(this.isResolved())  {  Predicate  <  JSType>  validator  =  this.validator;  if(validator!=  null)  {  return  super.setValidator(validator);  }  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.isResolved())  {  Predicate  <  JSType>  validator  =  this.validator;  if(validator!=  null)  {  return  super.setValidator(validator);  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.isResolved())  {  Predicate  <  JSType>  validator  =  this.validator;  if(validator!=  null)  {  return  super.setValidator(validator);  }	  return    super.setValidator(validator);    if(this.isResolved())    {    Predicate    <    JSType>    validator    =    this.validator;    if(validator!=    null)    {    return    super.setValidator(validator);    }    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
596	[BUG]  [BUGGY]  if(this.isResolved())  {  Predicate  <  JSType>  validator  =  super.setValidator(validator);  if(validator!=  null)  {  return  super.setValidator(validator);  }  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.isResolved())  {  Predicate  <  JSType>  validator  =  super.setValidator(validator);  if(validator!=  null)  {  return  super.setValidator(validator);  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.isResolved())  {  Predicate  <  JSType>  validator  =  super.setValidator(validator);  if(validator!=  null)  {  return  super.setValidator(validator);  }	  return    super.setValidator(validator);    if(this.isResolved())    {    Predicate    <    JSType>    validator    =    this.validator;    if(validator!=    null)    {    return    super.setValidator(validator);    }    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
597	[BUG]  [BUGGY]  Predicate  <  JSType>  validator  =  this.validator;  if(validator  ==  null)  {  return  super.setValidator(validator);  }  [CE]  variable  validator  is  already  defined  in  method  setValidator(Predicate<JSType>)  [FE]                              AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  Predicate  <  JSType>  validator  =  this.validator;  if(validator  ==  null)  {  return  super.setValidator(validator);  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	Predicate  <  JSType>  validator  =  this.validator;  if(validator  ==  null)  {  return  super.setValidator(validator);  }	  return    super.setValidator(validator);    if(this.isResolved())    {    Predicate    <    JSType>    validator    =    this.validator;    if(validator!=    null)    {    return    super.setValidator(validator);    }    	non-compiled	[CE]  variable  validator  is  already  defined  in  method  setValidator(Predicate<JSType>)	52	None	replace
598	[BUG]  [BUGGY]  if(this.isResolved())  {  Predicate  <  JSType>  validator  =  super.validator;  if(validator!=  null)  {  return  super.setValidator(validator);  }  [CE]  illegal  start  of  expression  [FE]                                AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.isResolved())  {  Predicate  <  JSType>  validator  =  super.validator;  if(validator!=  null)  {  return  super.setValidator(validator);  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.isResolved())  {  Predicate  <  JSType>  validator  =  super.validator;  if(validator!=  null)  {  return  super.setValidator(validator);  }	  return    super.setValidator(validator);    if(this.isResolved())    {    Predicate    <    JSType>    validator    =    this.validator;    if(validator!=    null)    {    return    super.setValidator(validator);    }    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
599	[BUG]  [BUGGY]  if(this.isResolved())  {  Predicate  <  JSType>  validator  =  this.validator;  if(validator  ==  null)  {  return  super.setValidator(validator);  }  [CE]  illegal  start  of  expression  [FE]                                  AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.isResolved())  {  Predicate  <  JSType>  validator  =  this.validator;  if(validator  ==  null)  {  return  super.setValidator(validator);  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.isResolved())  {  Predicate  <  JSType>  validator  =  this.validator;  if(validator  ==  null)  {  return  super.setValidator(validator);  }	  return    super.setValidator(validator);    if(this.isResolved())    {    Predicate    <    JSType>    validator    =    this.validator;    if(validator!=    null)    {    return    super.setValidator(validator);    }    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
600	[BUG]  [BUGGY]  Predicate  <?>  referencedType  =  validator.getReferencedType();  if(referencedType!=  null)  {  return  false;  }  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  Predicate  <?>  referencedType  =  validator.getReferencedType();  if(referencedType!=  null)  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	Predicate  <?>  referencedType  =  validator.getReferencedType();  if(referencedType!=  null)  {  return  false;  }	  return    false;    if(this.isResolved())    {    JSType    referencedType    =    validator.getReferencedType();    if(referencedType!=    null)    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
601	[BUG]  [BUGGY]  if(this.isReferencedType())  {  JSType  referencedType  =  validator.getReferencedType();  if(referencedType!=  null)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.isReferencedType())  {  JSType  referencedType  =  validator.getReferencedType();  if(referencedType!=  null)  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.isReferencedType())  {  JSType  referencedType  =  validator.getReferencedType();  if(referencedType!=  null)  {  return  false;  }	  return    false;    if(this.isResolved())    {    JSType    referencedType    =    validator.getReferencedType();    if(referencedType!=    null)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
602	[BUG]  [BUGGY]  Predicate  <  JSType>  referencedType  =  validator.getReferencedType();  if(referencedType!=  null)  {  return  false;  }  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  Predicate  <  JSType>  referencedType  =  validator.getReferencedType();  if(referencedType!=  null)  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	Predicate  <  JSType>  referencedType  =  validator.getReferencedType();  if(referencedType!=  null)  {  return  false;  }	  return    false;    if(this.isResolved())    {    JSType    referencedType    =    validator.getReferencedType();    if(referencedType!=    null)    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
603	[BUG]  [BUGGY]  referencedType  =  validator.getReferencedType();  if(referencedType!=  null)  {  return  false;  }  [CE]  referencedType  has  private  access  in  ProxyObjectType  [FE]                      AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  referencedType  =  validator.getReferencedType();  if(referencedType!=  null)  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	referencedType  =  validator.getReferencedType();  if(referencedType!=  null)  {  return  false;  }	  return    false;    if(this.isResolved())    {    JSType    referencedType    =    validator.getReferencedType();    if(referencedType!=    null)    {    return    false;    }    	non-compiled	[CE]  referencedType  has  private  access  in  ProxyObjectType	3	None	replace
604	[BUG]  [BUGGY]  if(this.isReferencedType())  {  JSType  referencedType  =  validator.getReferencedType();  if(referencedType  ==  null)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.isReferencedType())  {  JSType  referencedType  =  validator.getReferencedType();  if(referencedType  ==  null)  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.isReferencedType())  {  JSType  referencedType  =  validator.getReferencedType();  if(referencedType  ==  null)  {  return  false;  }	  return    false;    if(this.isResolved())    {    JSType    referencedType    =    validator.getReferencedType();    if(referencedType!=    null)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
605	[BUG]  [BUGGY]  Predicate  <?>  referencedType  =  validator.getReferencedType();  if(referencedType  ==  null)  {  return  false;  }  [CE]  cannot  find  symbol  [FE]                          AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  Predicate  <?>  referencedType  =  validator.getReferencedType();  if(referencedType  ==  null)  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	Predicate  <?>  referencedType  =  validator.getReferencedType();  if(referencedType  ==  null)  {  return  false;  }	  return    false;    if(this.isResolved())    {    JSType    referencedType    =    validator.getReferencedType();    if(referencedType!=    null)    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
606	[BUG]  [BUGGY]  Predicate  <  JSType>  referencedType  =  validator.getReferencedType();  if(referencedType  ==  null)  {  return  false;  }  [CE]  cannot  find  symbol  [FE]                            AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  Predicate  <  JSType>  referencedType  =  validator.getReferencedType();  if(referencedType  ==  null)  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	Predicate  <  JSType>  referencedType  =  validator.getReferencedType();  if(referencedType  ==  null)  {  return  false;  }	  return    false;    if(this.isResolved())    {    JSType    referencedType    =    validator.getReferencedType();    if(referencedType!=    null)    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
607	[BUG]  [BUGGY]  if(this.isResolved())  {  return(this.isResolved()  ||  validator!=  null);  }  [CE]  missing  return  statement  [FE]                      AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.isResolved())  {  return(this.isResolved()  ||  validator!=  null);  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.isResolved())  {  return(this.isResolved()  ||  validator!=  null);  }	  if(this.isResolved())    {    return(this.isResolved()    &&    validator!=    null);    }    	non-compiled	[CE]  missing  return  statement	63	None	replace
608	[BUG]  [BUGGY]  this.isResolved()  &&  validator  ==  null;  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  this.isResolved()  &&  validator  ==  null;  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	this.isResolved()  &&  validator  ==  null;	  if(this.isResolved())    {    return(this.isResolved()    &&    validator!=    null);    }    	non-compiled	[CE]  not  a  statement	63	None	replace
609	[BUG]  [BUGGY]  Return(this.isResolved()  &&  validator!=  null);  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  Return(this.isResolved()  &&  validator!=  null);  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	Return(this.isResolved()  &&  validator!=  null);	  return(this.isResolved()    &&    this.validator!=    null);    Return(this.isResolved()    &&    this.validator!=    null);    	non-compiled	[CE]  cannot  find  symbol	71	None	replace
610	[BUG]  [BUGGY]  Return(this.isResolved()  &&  this.validator!=  null);  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  Return(this.isResolved()  &&  this.validator!=  null);  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	Return(this.isResolved()  &&  this.validator!=  null);	  return(this.isResolved()    &&    this.validator!=    null);    Return(this.isResolved()    &&    this.validator!=    null);    	non-compiled	[CE]  cannot  find  symbol	71	None	replace
611	[BUG]  [BUGGY]  return(this.validator.isResolved()  &&  this.validator!=  null);  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  return(this.validator.isResolved()  &&  this.validator!=  null);  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	return(this.validator.isResolved()  &&  this.validator!=  null);	  return(this.isResolved()    &&    this.validator!=    null);    Return(this.isResolved()    &&    this.validator!=    null);    	non-compiled	[CE]  cannot  find  symbol	71	None	replace
612	[BUG]  [BUGGY]  if(this.forwardTypes!=  null)  {  return  false;  }  [CE]  cannot  find  symbol  forwardTypes  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.forwardTypes!=  null)  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.forwardTypes!=  null)  {  return  false;  }	  if(this.forwardReferencedTypes!=    null)    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol  forwardTypes	9	None	replace
613	[BUG]  [BUGGY]  if(this.referencedTypes!=  null)  {  return  false;  }  [CE]  cannot  find  symbol  referencedTypes  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.referencedTypes!=  null)  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.referencedTypes!=  null)  {  return  false;  }	  if(this.forwardReferencedTypes!=    null)    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol  referencedTypes	9	None	replace
614	[BUG]  [BUGGY]  timeout  [FE]                      AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.isResolved())  {  return(this.isResolved()  &&  this.validator!=  null);  }  else  {  return(this.isResolved()  &&  this.validator!=  null);  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	add	if(this.isResolved())  {  return(this.isResolved()  &&  this.validator!=  null);  }  else  {  return(this.isResolved()  &&  this.validator!=  null);  }	  return(this.isResolved()    &&    this.validator!=    null);    if(this.isResolved()    &&    this.validator!=    null);    }    else    {    return(this.isResolved()    &&    this.validator!=    null);    }    	compilable	timeout	28	1	replace
615	[BUG]  [BUGGY]  if(this.isResolved())  {  return(this.isResolved()  &&  this.validator!=  null);  }  else  {  return(this.isResolved()  &&  this.validator!=  null);  }  timeout  [FE]                      AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.isResolved())  {  return(this.isResolved()  &&  this.validator!=  null);  }  else  {  return(this.isResolved()  &&  this.validator!=  null);  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.isResolved())  {  return(this.isResolved()  &&  this.validator!=  null);  }  else  {  return(this.isResolved()  &&  this.validator!=  null);  }	  return(this.isResolved()    &&    this.validator!=    null);    if(this.isResolved()    &&    this.validator!=    null);    }    else    {    return(this.isResolved()    &&    this.validator!=    null);    }    	compilable	timeout	28	1	replace
616	[BUG]  [BUGGY]  if(validator  ==  null)  {  return(this.isResolved()  &&  this.validator!=  null);  }  [CE]  missing  return  statement  [FE]                        AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(validator  ==  null)  {  return(this.isResolved()  &&  this.validator!=  null);  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(validator  ==  null)  {  return(this.isResolved()  &&  this.validator!=  null);  }	  return(this.isResolved()    &&    this.validator!=    null);    if(this.isResolved()    &&    this.validator!=    null);    }    else    {    return(this.isResolved()    &&    this.validator!=    null);    }    	non-compiled	[CE]  missing  return  statement	28	None	replace
617	[BUG]  [BUGGY]  timeout  [FE]                          AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(validator  ==  null)  {  return(this.isResolved()  &&  this.validator!=  null);  }  else  {  return(this.isResolved()  &&  this.validator!=  null);  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	add	if(validator  ==  null)  {  return(this.isResolved()  &&  this.validator!=  null);  }  else  {  return(this.isResolved()  &&  this.validator!=  null);  }	  return(this.isResolved()    &&    this.validator!=    null);    if(this.isResolved()    &&    this.validator!=    null);    }    else    {    return(this.isResolved()    &&    this.validator!=    null);    }    	compilable	timeout	28	1	replace
618	[BUG]  [BUGGY]  if(validator  ==  null)  {  return(this.isResolved()  &&  this.validator!=  null);  }  else  {  return(this.isResolved()  &&  this.validator!=  null);  }  timeout  [FE]                          AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(validator  ==  null)  {  return(this.isResolved()  &&  this.validator!=  null);  }  else  {  return(this.isResolved()  &&  this.validator!=  null);  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(validator  ==  null)  {  return(this.isResolved()  &&  this.validator!=  null);  }  else  {  return(this.isResolved()  &&  this.validator!=  null);  }	  return(this.isResolved()    &&    this.validator!=    null);    if(this.isResolved()    &&    this.validator!=    null);    }    else    {    return(this.isResolved()    &&    this.validator!=    null);    }    	compilable	timeout	28	1	replace
619	[BUG]  [BUGGY]  if(!this.isForwardDeclared()  ||  isForwardDeclared)  {  return  false;  }  [CE]  cannot  find  symbol  [FE]                          AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(!this.isForwardDeclared()  ||  isForwardDeclared)  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(!this.isForwardDeclared()  ||  isForwardDeclared)  {  return  false;  }	  if(!this.isForwardDeclared())    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol	16	None	replace
620	[BUG]  [BUGGY]  if(!this.isForwardDeclared()  ||  this.isResolved())  {  return  false;  }  [CE]  cannot  find  symbol  [FE]                            AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(!this.isForwardDeclared()  ||  this.isResolved())  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(!this.isForwardDeclared()  ||  this.isResolved())  {  return  false;  }	  if(!this.isForwardDeclared())    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol	16	None	replace
621	[BUG]  [BUGGY]  if(!this.isForwardDeclared())return  false;  }  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(!this.isForwardDeclared())return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(!this.isForwardDeclared())return  false;  }	  if(!this.isForwardDeclared())    {    return    false;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	16	None	replace
622	[BUG]  [BUGGY]  if(!this.isForwardDeclared()  ||  validator.isInferred())  {  return  false;  }  [CE]  cannot  find  symbol  [FE]                                AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(!this.isForwardDeclared()  ||  validator.isInferred())  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(!this.isForwardDeclared()  ||  validator.isInferred())  {  return  false;  }	  if(!this.isForwardDeclared())    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol	16	None	replace
623	[BUG]  [BUGGY]  if(!this.isForwardDeclared()  ||  validator.isResolved())  {  return  false;  }  [CE]  cannot  find  symbol  [FE]                                  AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(!this.isForwardDeclared()  ||  validator.isResolved())  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(!this.isForwardDeclared()  ||  validator.isResolved())  {  return  false;  }	  if(!this.isForwardDeclared())    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol	16	None	replace
624	[BUG]  [BUGGY]  this.forAnnotations  =  propertyNode.getFirstChild();  if(this.isResolved())  {  return  true;  }  [CE]  cannot  find  symbol  forAnnotations  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  this.forAnnotations  =  propertyNode.getFirstChild();  if(this.isResolved())  {  return  true;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	this.forAnnotations  =  propertyNode.getFirstChild();  if(this.isResolved())  {  return  true;  }	  return    false;    if(validator!=    null)    {    forAnnotations    <    propertyNode    =    propertyNode.getFirstChild();    if(this.isResolved())    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol  forAnnotations	141	None	replace
625	[BUG]  [BUGGY]  Predicate  <?>  propertyNode  =  validator.getProperty(propertyName);  [CE]  cannot  find  symbol  propertyName  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  Predicate  <?>  propertyNode  =  validator.getProperty(propertyName);  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	Predicate  <?>  propertyNode  =  validator.getProperty(propertyName);	  return    false;    if(validator!=    null)    {    forAnnotations    <    propertyNode    =    propertyNode.getFirstChild();    if(this.isResolved())    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol  propertyName	141	None	replace
626	[BUG]  [BUGGY]  return(this.isResolved()  ||  validator!=  null);  return(this.isResolved()  ||  validator!=  null);  [CE]  unreachable  statement  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  return(this.isResolved()  ||  validator!=  null);  return(this.isResolved()  ||  validator!=  null);  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	return(this.isResolved()    ||    validator!=    null);    return(this.isResolved()  ||  validator!=  null);	  timeout    	non-compiled	[CE]  unreachable  statement	106	None	add
627	[BUG]  [BUGGY]  return(this.isResolved()  ||  validator!=  null);  this.isResolved()  ||  validator!=  null);  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  return(this.isResolved()  ||  validator!=  null);  this.isResolved()  ||  validator!=  null);  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	return(this.isResolved()    ||    validator!=    null);    this.isResolved()  ||  validator!=  null);	  timeout    	non-compiled	[CE]  not  a  statement	106	None	add
628	[BUG]  [BUGGY]  return(this.isResolved()  ||  validator!=  null);  (this.isResolved()  ||  validator!=  null);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  return(this.isResolved()  ||  validator!=  null);  (this.isResolved()  ||  validator!=  null);  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	return(this.isResolved()    ||    validator!=    null);    (this.isResolved()  ||  validator!=  null);	  timeout    	non-compiled	[CE]  not  a  statement	106	None	add
629	[BUG]  [BUGGY]  return(this.isResolved()  ||  validator!=  null);  if(this.isResolved()  ||  validator!=  null);  [CE]  unreachable  statement  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  return(this.isResolved()  ||  validator!=  null);  if(this.isResolved()  ||  validator!=  null);  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	return(this.isResolved()    ||    validator!=    null);    if(this.isResolved()  ||  validator!=  null);	  timeout    	non-compiled	[CE]  unreachable  statement	106	None	add
630	[BUG]  [BUGGY]  return(this.isResolved()  ||  validator!=  null);  if(this.isResolved()  ||  validator!=  null)  {  return(this.isResolved()  ||  validator!=  null);  }  [CE]  unreachable  statement  [FE]                      AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  return(this.isResolved()  ||  validator!=  null);  if(this.isResolved()  ||  validator!=  null)  {  return(this.isResolved()  ||  validator!=  null);  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	return(this.isResolved()    ||    validator!=    null);    if(this.isResolved()  ||  validator!=  null)  {  return(this.isResolved()  ||  validator!=  null);  }	  timeout    	non-compiled	[CE]  unreachable  statement	106	None	add
631	[BUG]  [BUGGY]  return(this.isResolved()  ||  validator!=  null);  if(this.isResolved()  ||  validator!=  null);  }  else  {  return(this.isResolved()  ||  validator!=  null);  }  [CE]  'else'  without  'if'  [FE]                        AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  return(this.isResolved()  ||  validator!=  null);  if(this.isResolved()  ||  validator!=  null);  }  else  {  return(this.isResolved()  ||  validator!=  null);  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	return(this.isResolved()    ||    validator!=    null);    if(this.isResolved()  ||  validator!=  null);  }  else  {  return(this.isResolved()  ||  validator!=  null);  }	  timeout    	non-compiled	[CE]  'else'  without  'if'	106	None	add
632	[BUG]  [BUGGY]  return(this.isResolved()  ||  validator!=  null);  JSType  referencedType  =  validator.getReferencedType();  return(this.isResolved()  ||  validator!=  null);  [CE]  cannot  find  symbol  [FE]                          AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  return(this.isResolved()  ||  validator!=  null);  JSType  referencedType  =  validator.getReferencedType();  return(this.isResolved()  ||  validator!=  null);  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	return(this.isResolved()    ||    validator!=    null);    JSType  referencedType  =  validator.getReferencedType();  return(this.isResolved()  ||  validator!=  null);	  timeout    	non-compiled	[CE]  cannot  find  symbol	106	None	add
633	[BUG]  [BUGGY]  if(this.forAnnotations!=  forAnnotations)  {  forAnnotations  ignoreForwardReferencedTypes  =  getAnnotations();  if(ignoreForwardReferencedTypes  ==  null)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.forAnnotations!=  forAnnotations)  {  forAnnotations  ignoreForwardReferencedTypes  =  getAnnotations();  if(ignoreForwardReferencedTypes  ==  null)  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.forAnnotations!=  forAnnotations)  {  forAnnotations  ignoreForwardReferencedTypes  =  getAnnotations();  if(ignoreForwardReferencedTypes  ==  null)  {  return  false;  }	  return    false;    if(this.forAnnotations!=    forAnnotations)    {    forAnnotations    ignoreForwardReferencedTypes    =    getAnnotations();    if(ignoreForwardReferencedTypes    ==    null)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
634	[BUG]  [BUGGY]  if(this.forAnnotations!=  validator)  {  forAnnotations  ignoreForwardReferencedTypes  =  getAnnotations();  if(ignoreForwardReferencedTypes  ==  null)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.forAnnotations!=  validator)  {  forAnnotations  ignoreForwardReferencedTypes  =  getAnnotations();  if(ignoreForwardReferencedTypes  ==  null)  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.forAnnotations!=  validator)  {  forAnnotations  ignoreForwardReferencedTypes  =  getAnnotations();  if(ignoreForwardReferencedTypes  ==  null)  {  return  false;  }	  return    false;    if(this.forAnnotations!=    forAnnotations)    {    forAnnotations    ignoreForwardReferencedTypes    =    getAnnotations();    if(ignoreForwardReferencedTypes    ==    null)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
635	[BUG]  [BUGGY]  if(this.forAnnotations!=  validator)  {  if(this.forAnnotations!=  forAnnotations)  {  forAnnotations  ignoreForwardReferencedTypes  =  getAnnotations();  if(ignoreForwardReferencedTypes  ==  null)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.forAnnotations!=  validator)  {  if(this.forAnnotations!=  forAnnotations)  {  forAnnotations  ignoreForwardReferencedTypes  =  getAnnotations();  if(ignoreForwardReferencedTypes  ==  null)  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.forAnnotations!=  validator)  {  if(this.forAnnotations!=  forAnnotations)  {  forAnnotations  ignoreForwardReferencedTypes  =  getAnnotations();  if(ignoreForwardReferencedTypes  ==  null)  {  return  false;  }	  return    false;    if(this.forAnnotations!=    forAnnotations)    {    forAnnotations    ignoreForwardReferencedTypes    =    getAnnotations();    if(ignoreForwardReferencedTypes    ==    null)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
636	[BUG]  [BUGGY]  if(this.forAnnotations!=  validator)  {  if(this.forAnnotations!=  forAnnotations)  {  forAnnotations  ignoreForwardReferencedTypes  =  getAnnotations();  if(ignoreForwardReferencedTypes  ==  null)  {  return  false  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.forAnnotations!=  validator)  {  if(this.forAnnotations!=  forAnnotations)  {  forAnnotations  ignoreForwardReferencedTypes  =  getAnnotations();  if(ignoreForwardReferencedTypes  ==  null)  {  return  false  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.forAnnotations!=  validator)  {  if(this.forAnnotations!=  forAnnotations)  {  forAnnotations  ignoreForwardReferencedTypes  =  getAnnotations();  if(ignoreForwardReferencedTypes  ==  null)  {  return  false	  return    false;    if(this.forAnnotations!=    forAnnotations)    {    forAnnotations    ignoreForwardReferencedTypes    =    getAnnotations();    if(ignoreForwardReferencedTypes    ==    null)    {    return    false;    }    	non-compiled	[CE]  ';'  expected	4	None	replace
637	[BUG]  [BUGGY]  if(this.forAnnotations!=  validator)  {  if(this.forAnnotations!=  forAnnotations)  {  forAnnotations  ignoreForwardReferencedTypes  =  getAnnotations();  if(ignoreForwardReferencedTypes  ==  null)  {  return  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.forAnnotations!=  validator)  {  if(this.forAnnotations!=  forAnnotations)  {  forAnnotations  ignoreForwardReferencedTypes  =  getAnnotations();  if(ignoreForwardReferencedTypes  ==  null)  {  return  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.forAnnotations!=  validator)  {  if(this.forAnnotations!=  forAnnotations)  {  forAnnotations  ignoreForwardReferencedTypes  =  getAnnotations();  if(ignoreForwardReferencedTypes  ==  null)  {  return	  return    false;    if(this.forAnnotations!=    forAnnotations)    {    forAnnotations    ignoreForwardReferencedTypes    =    getAnnotations();    if(ignoreForwardReferencedTypes    ==    null)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
638	[BUG]  [BUGGY]  if(this.forAnnotations!=  validator)  {  if(this.forAnnotations!=  forAnnotations)  {  forAnnotations  ignoreForwardReferencedTypes  =  getAnnotations();  if(ignoreForwardReferencedTypes  ==  null)  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.forAnnotations!=  validator)  {  if(this.forAnnotations!=  forAnnotations)  {  forAnnotations  ignoreForwardReferencedTypes  =  getAnnotations();  if(ignoreForwardReferencedTypes  ==  null)  {  return  true;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.forAnnotations!=  validator)  {  if(this.forAnnotations!=  forAnnotations)  {  forAnnotations  ignoreForwardReferencedTypes  =  getAnnotations();  if(ignoreForwardReferencedTypes  ==  null)  {  return  true;  }	  return    false;    if(this.forAnnotations!=    forAnnotations)    {    forAnnotations    ignoreForwardReferencedTypes    =    getAnnotations();    if(ignoreForwardReferencedTypes    ==    null)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
639	[BUG]  [BUGGY]  if(this.forAnnotations!=  validator)  {  if(this.forAnnotations!=  forAnnotations)  {  forAnnotations  ignoreForwardReferencedTypes  =  getAnnotations();  if(ignoreForwardReferencedTypes  ==  nu  [CE]  ')'  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.forAnnotations!=  validator)  {  if(this.forAnnotations!=  forAnnotations)  {  forAnnotations  ignoreForwardReferencedTypes  =  getAnnotations();  if(ignoreForwardReferencedTypes  ==  nu  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.forAnnotations!=  validator)  {  if(this.forAnnotations!=  forAnnotations)  {  forAnnotations  ignoreForwardReferencedTypes  =  getAnnotations();  if(ignoreForwardReferencedTypes  ==  nu	  return    false;    if(this.forAnnotations!=    forAnnotations)    {    forAnnotations    ignoreForwardReferencedTypes    =    getAnnotations();    if(ignoreForwardReferencedTypes    ==    null)    {    return    false;    }    	non-compiled	[CE]  ')'  expected	4	None	replace
640	[BUG]  [BUGGY]  (this.isResolved()  &&  this.validator!=  null);  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  (this.isResolved()  &&  this.validator!=  null);  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	(this.isResolved()  &&  this.validator!=  null);	  return(this.isResolved()    &&    this.validator!=    null);    (this.isResolved()    &&    this.validator!=    null);    	non-compiled	[CE]  not  a  statement	25	None	replace
641	[BUG]  [BUGGY]  (this.isResolved()  &&  validator!=  null);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  (this.isResolved()  &&  validator!=  null);  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	(this.isResolved()  &&  validator!=  null);	  return(this.isResolved()    &&    this.validator!=    null);    (this.isResolved()    &&    this.validator!=    null);    	non-compiled	[CE]  not  a  statement	25	None	replace
642	[BUG]  [BUGGY]  if(this.isResolved())  {  return(this.isResolved()  &&  this.validator!=  null);  (this.isResolved()  &&  this.validator!=  null);  }  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.isResolved())  {  return(this.isResolved()  &&  this.validator!=  null);  (this.isResolved()  &&  this.validator!=  null);  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.isResolved())  {  return(this.isResolved()  &&  this.validator!=  null);  (this.isResolved()  &&  this.validator!=  null);  }	  return(this.isResolved()    &&    this.validator!=    null);    (this.isResolved()    &&    this.validator!=    null);    	non-compiled	[CE]  not  a  statement	25	None	replace
643	[BUG]  [BUGGY]  if(this.isResolved())  {  return(this.isResolved()  &&  this.validator!=  null);  }  else  if(this.isResolved())  {  return  super.setValidator(validator);  }  [CE]  missing  return  statement  [FE]                      AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.isResolved())  {  return(this.isResolved()  &&  this.validator!=  null);  }  else  if(this.isResolved())  {  return  super.setValidator(validator);  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.isResolved())  {  return(this.isResolved()  &&  this.validator!=  null);  }  else  if(this.isResolved())  {  return  super.setValidator(validator);  }	  return(this.isResolved()    &&    this.validator!=    null);    (this.isResolved()    &&    this.validator!=    null);    	non-compiled	[CE]  missing  return  statement	25	None	replace
644	[BUG]  [BUGGY]  if(!this.isResolved())  {  return  false;  if(isForwardDeclared)  {  forAnnotations  {  propertyNode  =  propertyNode.getFirstChild();  if(propertyNode!=  null)  {  return  false;  }  }  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(!this.isResolved())  {  return  false;  if(isForwardDeclared)  {  forAnnotations  {  propertyNode  =  propertyNode.getFirstChild();  if(propertyNode!=  null)  {  return  false;  }  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(!this.isResolved())  {  return  false;  if(isForwardDeclared)  {  forAnnotations  {  propertyNode  =  propertyNode.getFirstChild();  if(propertyNode!=  null)  {  return  false;  }  }	  return    false;    if(isForwardDeclared)    {    forAnnotations    {    propertyNode    =    propertyNode.getFirstChild();    if(propertyNode!=    null)    {    return    false;    }    	non-compiled	[CE]  not  a  statement	142	None	replace
645	[BUG]  [BUGGY]  if(this.isResolved())  {  return  false;  forAnnotations  {  propertyNode  =  propertyNode.getFirstChild();  if(propertyNode!=  null)  {  return  false;  }  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.isResolved())  {  return  false;  forAnnotations  {  propertyNode  =  propertyNode.getFirstChild();  if(propertyNode!=  null)  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.isResolved())  {  return  false;  forAnnotations  {  propertyNode  =  propertyNode.getFirstChild();  if(propertyNode!=  null)  {  return  false;  }	  return    false;    if(isForwardDeclared)    {    forAnnotations    {    propertyNode    =    propertyNode.getFirstChild();    if(propertyNode!=    null)    {    return    false;    }    	non-compiled	[CE]  not  a  statement	142	None	replace
646	[BUG]  [BUGGY]  if(this.ignoreForwardReferencedTypes)  {  return  false;  forAnnotations  {  propertyNode  =  propertyNode.getFirstChild();  if(propertyNode!=  null)  {  return  false;  }  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.ignoreForwardReferencedTypes)  {  return  false;  forAnnotations  {  propertyNode  =  propertyNode.getFirstChild();  if(propertyNode!=  null)  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.ignoreForwardReferencedTypes)  {  return  false;  forAnnotations  {  propertyNode  =  propertyNode.getFirstChild();  if(propertyNode!=  null)  {  return  false;  }	  return    false;    if(isForwardDeclared)    {    forAnnotations    {    propertyNode    =    propertyNode.getFirstChild();    if(propertyNode!=    null)    {    return    false;    }    	non-compiled	[CE]  not  a  statement	142	None	replace
647	[BUG]  [BUGGY]  if(this.ignoreForwardReferencedTypes)  {  return  false;  forAnnotations  =  propertyNode.getFirstChild();  if(propertyNode!=  null)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.ignoreForwardReferencedTypes)  {  return  false;  forAnnotations  =  propertyNode.getFirstChild();  if(propertyNode!=  null)  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.ignoreForwardReferencedTypes)  {  return  false;  forAnnotations  =  propertyNode.getFirstChild();  if(propertyNode!=  null)  {  return  false;  }	  return    false;    if(isForwardDeclared)    {    forAnnotations    {    propertyNode    =    propertyNode.getFirstChild();    if(propertyNode!=    null)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	142	None	replace
648	[BUG]  [BUGGY]  if(!this.isResolved())  {  return  false;  if(isForwardDeclared)  {  forAnnotations  {  propertyNode  =  propertyNode.getFirstChild();  if(propertyNode!=  null)  {  return  false;  }  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(!this.isResolved())  {  return  false;  if(isForwardDeclared)  {  forAnnotations  {  propertyNode  =  propertyNode.getFirstChild();  if(propertyNode!=  null)  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(!this.isResolved())  {  return  false;  if(isForwardDeclared)  {  forAnnotations  {  propertyNode  =  propertyNode.getFirstChild();  if(propertyNode!=  null)  {  return  false;  }	  return    false;    if(isForwardDeclared)    {    forAnnotations    {    propertyNode    =    propertyNode.getFirstChild();    if(propertyNode!=    null)    {    return    false;    }    	non-compiled	[CE]  not  a  statement	142	None	replace
649	[BUG]  [BUGGY]  if(this.isResolved())  {  return  false;  forAnnotations  =  propertyNode.getFirstChild();  if(propertyNode!=  null)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.isResolved())  {  return  false;  forAnnotations  =  propertyNode.getFirstChild();  if(propertyNode!=  null)  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.isResolved())  {  return  false;  forAnnotations  =  propertyNode.getFirstChild();  if(propertyNode!=  null)  {  return  false;  }	  return    false;    if(isForwardDeclared)    {    forAnnotations    {    propertyNode    =    propertyNode.getFirstChild();    if(propertyNode!=    null)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	142	None	replace
650	[BUG]  [BUGGY]  if(this.ignoreForwardReferencedTypes)  {  return  false;  forAnnotations  {  propertyNode  =  propertyNode.getFirstChild();  if(propertyNode!=  null)  {  return  false;  }  }  [CE]  not  a  statement  [FE]                              AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.ignoreForwardReferencedTypes)  {  return  false;  forAnnotations  {  propertyNode  =  propertyNode.getFirstChild();  if(propertyNode!=  null)  {  return  false;  }  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.ignoreForwardReferencedTypes)  {  return  false;  forAnnotations  {  propertyNode  =  propertyNode.getFirstChild();  if(propertyNode!=  null)  {  return  false;  }  }	  return    false;    if(isForwardDeclared)    {    forAnnotations    {    propertyNode    =    propertyNode.getFirstChild();    if(propertyNode!=    null)    {    return    false;    }    	non-compiled	[CE]  not  a  statement	142	None	replace
651	[BUG]  [BUGGY]  Predicate  <  JSType>  referencedType  =  getReferencedType(reference);  if(referencedType!=  null)  {  return  true;  }  [CE]  method  getReferencedType  in  class  NamedType  cannot  be  applied  to  given  types;  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  Predicate  <  JSType>  referencedType  =  getReferencedType(reference);  if(referencedType!=  null)  {  return  true;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	Predicate  <  JSType>  referencedType  =  getReferencedType(reference);  if(referencedType!=  null)  {  return  true;  }	  if(this.isResolved())    {    return    false;    }    else    {    Predicate    <    JSType>    referencedType    =    getReferencedType(reference);    if(referencedType!=    null)    {    return    true;    }    	non-compiled	[CE]  method  getReferencedType  in  class  NamedType  cannot  be  applied  to  given  types;	101	None	replace
652	[BUG]  [BUGGY]  Predicate  <  JSType>  referencedType  =  getReferencedType(reference);  if(referencedType!=  null)  {  return  false;  }  [CE]  method  getReferencedType  in  class  NamedType  cannot  be  applied  to  given  types;  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  Predicate  <  JSType>  referencedType  =  getReferencedType(reference);  if(referencedType!=  null)  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	Predicate  <  JSType>  referencedType  =  getReferencedType(reference);  if(referencedType!=  null)  {  return  false;  }	  if(this.isResolved())    {    return    false;    }    else    {    Predicate    <    JSType>    referencedType    =    getReferencedType(reference);    if(referencedType!=    null)    {    return    true;    }    	non-compiled	[CE]  method  getReferencedType  in  class  NamedType  cannot  be  applied  to  given  types;	101	None	replace
653	[BUG]  [BUGGY]  if(referencedType!=  null)  {  if(this.isResolved())  {  return  false;  }  else  {  Predicate  <  JSType>  referencedType  =  getReferencedType(reference);  if(referencedType!=  null)  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(referencedType!=  null)  {  if(this.isResolved())  {  return  false;  }  else  {  Predicate  <  JSType>  referencedType  =  getReferencedType(reference);  if(referencedType!=  null)  {  return  true;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(referencedType!=  null)  {  if(this.isResolved())  {  return  false;  }  else  {  Predicate  <  JSType>  referencedType  =  getReferencedType(reference);  if(referencedType!=  null)  {  return  true;  }	  if(this.isResolved())    {    return    false;    }    else    {    Predicate    <    JSType>    referencedType    =    getReferencedType(reference);    if(referencedType!=    null)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	101	None	replace
654	[BUG]  [BUGGY]  if(this.isResolvedType())  {  return  false;  }  else  {  Predicate  <  JSType>  referencedType  =  getReferencedType(reference);  if(referencedType!=  null)  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.isResolvedType())  {  return  false;  }  else  {  Predicate  <  JSType>  referencedType  =  getReferencedType(reference);  if(referencedType!=  null)  {  return  true;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.isResolvedType())  {  return  false;  }  else  {  Predicate  <  JSType>  referencedType  =  getReferencedType(reference);  if(referencedType!=  null)  {  return  true;  }	  if(this.isResolved())    {    return    false;    }    else    {    Predicate    <    JSType>    referencedType    =    getReferencedType(reference);    if(referencedType!=    null)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	101	None	replace
655	[BUG]  [BUGGY]  if(referencedType  ==  null)  {  if(this.isResolved())  {  return  false;  }  else  {  Predicate  <  JSType>  referencedType  =  getReferencedType(reference);  if(referencedType!=  null)  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(referencedType  ==  null)  {  if(this.isResolved())  {  return  false;  }  else  {  Predicate  <  JSType>  referencedType  =  getReferencedType(reference);  if(referencedType!=  null)  {  return  true;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(referencedType  ==  null)  {  if(this.isResolved())  {  return  false;  }  else  {  Predicate  <  JSType>  referencedType  =  getReferencedType(reference);  if(referencedType!=  null)  {  return  true;  }	  if(this.isResolved())    {    return    false;    }    else    {    Predicate    <    JSType>    referencedType    =    getReferencedType(reference);    if(referencedType!=    null)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	101	None	replace
656	[BUG]  [BUGGY]  Predicate  <  JSType>  referencedType  =  getReferencedType(reference);  if(referencedType  ==  null)  {  return  true;  }  [CE]  method  getReferencedType  in  class  NamedType  cannot  be  applied  to  given  types;  [FE]                            AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  Predicate  <  JSType>  referencedType  =  getReferencedType(reference);  if(referencedType  ==  null)  {  return  true;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	Predicate  <  JSType>  referencedType  =  getReferencedType(reference);  if(referencedType  ==  null)  {  return  true;  }	  if(this.isResolved())    {    return    false;    }    else    {    Predicate    <    JSType>    referencedType    =    getReferencedType(reference);    if(referencedType!=    null)    {    return    true;    }    	non-compiled	[CE]  method  getReferencedType  in  class  NamedType  cannot  be  applied  to  given  types;	101	None	replace
657	[BUG]  [BUGGY]  if(this.type!=  null)  {  return  false;  }  [CE]  cannot  find  symbol  type  [FE]            AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.type!=  null)  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.type!=  null)  {  return  false;  }	  if(value!=    null)    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol  type	91	None	replace
658	[BUG]  [BUGGY]  Predicate  <?>  property  =  this.referencedType.getProperty(propertyName);  if(property!=  null)  {  return  super.setValidator(property);  }  [CE]  cannot  find  symbol  propertyName  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  Predicate  <?>  property  =  this.referencedType.getProperty(propertyName);  if(property!=  null)  {  return  super.setValidator(property);  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	Predicate  <?>  property  =  this.referencedType.getProperty(propertyName);  if(property!=  null)  {  return  super.setValidator(property);  }	  return    super.setValidator(validator);    if(this.isResolved())    {    Predicate    <?>    property    =    this.referencedType.getProperty(propertyName);    if(property!=    null)    {    return    super.setValidator(property);    }    	non-compiled	[CE]  cannot  find  symbol  propertyName	80	None	replace
659	[BUG]  [BUGGY]  PropertyContinuation  <?>  property  =  this.referencedType.getProperty(propertyName);  if(property!=  null)  {  return  super.setValidator(property);  }  [CE]  type  PropertyContinuation  does  not  take  parameters  [FE]                      AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  PropertyContinuation  <?>  property  =  this.referencedType.getProperty(propertyName);  if(property!=  null)  {  return  super.setValidator(property);  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	PropertyContinuation  <?>  property  =  this.referencedType.getProperty(propertyName);  if(property!=  null)  {  return  super.setValidator(property);  }	  return    super.setValidator(validator);    if(this.isResolved())    {    Predicate    <?>    property    =    this.referencedType.getProperty(propertyName);    if(property!=    null)    {    return    super.setValidator(property);    }    	non-compiled	[CE]  type  PropertyContinuation  does  not  take  parameters	80	None	replace
660	[BUG]  [BUGGY]  Predicate  <?>  property  =  this.referencedType.getProperty(propertyName);  if(property  ==  null)  {  return  super.setValidator(property);  }  [CE]  cannot  find  symbol  propertyName  [FE]                        AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  Predicate  <?>  property  =  this.referencedType.getProperty(propertyName);  if(property  ==  null)  {  return  super.setValidator(property);  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	Predicate  <?>  property  =  this.referencedType.getProperty(propertyName);  if(property  ==  null)  {  return  super.setValidator(property);  }	  return    super.setValidator(validator);    if(this.isResolved())    {    Predicate    <?>    property    =    this.referencedType.getProperty(propertyName);    if(property!=    null)    {    return    super.setValidator(property);    }    	non-compiled	[CE]  cannot  find  symbol  propertyName	80	None	replace
661	[BUG]  [BUGGY]  if(this.referencedType!=  null)  {  Predicate  <?>  property  =  this.referencedType.getProperty(propertyName);  if(property!=  null)  {  return  super.setValidator(property);  }  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.referencedType!=  null)  {  Predicate  <?>  property  =  this.referencedType.getProperty(propertyName);  if(property!=  null)  {  return  super.setValidator(property);  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.referencedType!=  null)  {  Predicate  <?>  property  =  this.referencedType.getProperty(propertyName);  if(property!=  null)  {  return  super.setValidator(property);  }	  return    super.setValidator(validator);    if(this.isResolved())    {    Predicate    <?>    property    =    this.referencedType.getProperty(propertyName);    if(property!=    null)    {    return    super.setValidator(property);    }    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
662	[BUG]  [BUGGY]  if(this.validator!=  validator)  {  return  super.setValidator(validator);  }  [CE]  missing  return  statement  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.validator!=  validator)  {  return  super.setValidator(validator);  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.validator!=  validator)  {  return  super.setValidator(validator);  }	  return    super.setValidator(this.validator);    timeout    	non-compiled	[CE]  missing  return  statement	95	None	replace
663	[BUG]  [BUGGY]  if(!this.validator.isResolved())return  false;  }  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(!this.validator.isResolved())return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(!this.validator.isResolved())return  false;  }	  if(!this.validator.isResolved())    {    return    false;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	115	None	replace
664	[BUG]  [BUGGY]  if(!this.validator.isResolved()  ||  isForwardDeclared(validator))  {  return  false;  }  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(!this.validator.isResolved()  ||  isForwardDeclared(validator))  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(!this.validator.isResolved()  ||  isForwardDeclared(validator))  {  return  false;  }	  if(!this.validator.isResolved())    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol	115	None	replace
665	[BUG]  [BUGGY]  if(this.validator.isResolved())  {  return  false;  }  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.validator.isResolved())  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.validator.isResolved())  {  return  false;  }	  if(!this.validator.isResolved())    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol	115	None	replace
666	[BUG]  [BUGGY]  if(!this.validator.isResolved()  ||  this.validator.isResolved())  {  return  false;  }  [CE]  cannot  find  symbol  [FE]                          AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(!this.validator.isResolved()  ||  this.validator.isResolved())  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(!this.validator.isResolved()  ||  this.validator.isResolved())  {  return  false;  }	  if(!this.validator.isResolved())    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol	115	None	replace
667	[BUG]  [BUGGY]  if(!this.validator.isResolved()  ||  validator.isForwardDeclared())  {  return  false;  }  [CE]  cannot  find  symbol  [FE]                            AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(!this.validator.isResolved()  ||  validator.isForwardDeclared())  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(!this.validator.isResolved()  ||  validator.isForwardDeclared())  {  return  false;  }	  if(!this.validator.isResolved())    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol	115	None	replace
668	[BUG]  [BUGGY]  if(!validator.isResolved())  {  return  false;  }  [CE]  cannot  find  symbol  [FE]                              AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(!validator.isResolved())  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(!validator.isResolved())  {  return  false;  }	  if(!this.validator.isResolved())    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol	115	None	replace
669	[BUG]  [BUGGY]  if(this.value.equals(validator))  {  return  false;  }  [CE]  cannot  find  symbol  value  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.value.equals(validator))  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.value.equals(validator))  {  return  false;  }	  if(this.slotType.equals(validator))    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol  value	46	None	replace
670	[BUG]  [BUGGY]  if(validator.equals(this.slotType))  {  return  false;  }  [CE]  cannot  find  symbol  slotType  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(validator.equals(this.slotType))  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(validator.equals(this.slotType))  {  return  false;  }	  if(this.slotType.equals(validator))    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol  slotType	46	None	replace
671	[BUG]  [BUGGY]  if(this.validator.equals(validator))  {  return  false;  }  [CE]  missing  return  statement  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.validator.equals(validator))  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.validator.equals(validator))  {  return  false;  }	  if(this.slotType.equals(validator))    {    return    false;    }    	non-compiled	[CE]  missing  return  statement	46	None	replace
672	[BUG]  [BUGGY]  if(this.slotType.equals(validator)||  this.slotType.equals(validator))  {  return  false;  }  [CE]  cannot  find  symbol  slotType  [FE]                      AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.slotType.equals(validator)||  this.slotType.equals(validator))  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.slotType.equals(validator)||  this.slotType.equals(validator))  {  return  false;  }	  if(this.slotType.equals(validator))    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol  slotType	46	None	replace
673	[BUG]  [BUGGY]  if(!this.slotType.equals(validator))  {  return  false;  }  [CE]  cannot  find  symbol  slotType  [FE]                        AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(!this.slotType.equals(validator))  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(!this.slotType.equals(validator))  {  return  false;  }	  if(this.slotType.equals(validator))    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol  slotType	46	None	replace
674	[BUG]  [BUGGY]  if(this.forAnnotations!=  null)  {  return  super.setValidator(validator);  if(this.isResolved())  {  return  super.setValidator(validator);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.forAnnotations!=  null)  {  return  super.setValidator(validator);  if(this.isResolved())  {  return  super.setValidator(validator);  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.forAnnotations!=  null)  {  return  super.setValidator(validator);  if(this.isResolved())  {  return  super.setValidator(validator);  }	  return    super.setValidator(validator);    if(this.isResolved())    {    return    super.setValidator(validator);    }    else    {    for(int    i    =    0;    i    <    propertyContinuations.size();    ++i)    {    PropertyContinuation    <    NamedType>    propertyContinuations    =    propertyContinuations.get(i);    if    	non-compiled	[CE]  illegal  start  of  expression	129	None	replace
675	[BUG]  [BUGGY]  if(this.ignoreForwardReferencedTypes)  {  return  super.setValidator(validator);  if(this.isResolved())  {  return  super.setValidator(validator);  }  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.ignoreForwardReferencedTypes)  {  return  super.setValidator(validator);  if(this.isResolved())  {  return  super.setValidator(validator);  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.ignoreForwardReferencedTypes)  {  return  super.setValidator(validator);  if(this.isResolved())  {  return  super.setValidator(validator);  }	  return    super.setValidator(validator);    if(this.isResolved())    {    return    super.setValidator(validator);    }    else    {    for(int    i    =    0;    i    <    propertyContinuations.size();    ++i)    {    PropertyContinuation    <    NamedType>    propertyContinuations    =    propertyContinuations.get(i);    if    	non-compiled	[CE]  illegal  start  of  expression	129	None	replace
676	[BUG]  [BUGGY]  if(!this.forAnnotations)  {  return  super.setValidator(validator);  if(this.isResolved())  {  return  super.setValidator(validator);  }  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(!this.forAnnotations)  {  return  super.setValidator(validator);  if(this.isResolved())  {  return  super.setValidator(validator);  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(!this.forAnnotations)  {  return  super.setValidator(validator);  if(this.isResolved())  {  return  super.setValidator(validator);  }	  return    super.setValidator(validator);    if(this.isResolved())    {    return    super.setValidator(validator);    }    else    {    for(int    i    =    0;    i    <    propertyContinuations.size();    ++i)    {    PropertyContinuation    <    NamedType>    propertyContinuations    =    propertyContinuations.get(i);    if    	non-compiled	[CE]  illegal  start  of  expression	129	None	replace
677	[BUG]  [BUGGY]  if(this.forAnnotations  ==  null)  {  return  super.setValidator(validator);  if(this.isResolved())  {  return  super.setValidator(validator);  }  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.forAnnotations  ==  null)  {  return  super.setValidator(validator);  if(this.isResolved())  {  return  super.setValidator(validator);  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.forAnnotations  ==  null)  {  return  super.setValidator(validator);  if(this.isResolved())  {  return  super.setValidator(validator);  }	  return    super.setValidator(validator);    if(this.isResolved())    {    return    super.setValidator(validator);    }    else    {    for(int    i    =    0;    i    <    propertyContinuations.size();    ++i)    {    PropertyContinuation    <    NamedType>    propertyContinuations    =    propertyContinuations.get(i);    if    	non-compiled	[CE]  illegal  start  of  expression	129	None	replace
678	[BUG]  [BUGGY]  if(this.ignoreForwardReferencedTypes)  {  return  super.setValidator(validator);  }  [CE]  cannot  find  symbol  ignoreForwardReferencedTypes  [FE]                              AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.ignoreForwardReferencedTypes)  {  return  super.setValidator(validator);  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.ignoreForwardReferencedTypes)  {  return  super.setValidator(validator);  }	  return    super.setValidator(validator);    if(this.isResolved())    {    return    super.setValidator(validator);    }    else    {    for(int    i    =    0;    i    <    propertyContinuations.size();    ++i)    {    PropertyContinuation    <    NamedType>    propertyContinuations    =    propertyContinuations.get(i);    if    	non-compiled	[CE]  cannot  find  symbol  ignoreForwardReferencedTypes	129	None	replace
679	[BUG]  [BUGGY]  if(!this.forAnnotations)  {  return  super.setValidator(validator);  if(isResolved())  {  return  super.setValidator(validator);  }  [CE]  illegal  start  of  expression  [FE]                                AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(!this.forAnnotations)  {  return  super.setValidator(validator);  if(isResolved())  {  return  super.setValidator(validator);  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(!this.forAnnotations)  {  return  super.setValidator(validator);  if(isResolved())  {  return  super.setValidator(validator);  }	  return    super.setValidator(validator);    if(this.isResolved())    {    return    super.setValidator(validator);    }    else    {    for(int    i    =    0;    i    <    propertyContinuations.size();    ++i)    {    PropertyContinuation    <    NamedType>    propertyContinuations    =    propertyContinuations.get(i);    if    	non-compiled	[CE]  illegal  start  of  expression	129	None	replace
680	[BUG]  [BUGGY]  Predicate  <?>  property  =  this.getProperty(name);  [CE]  cannot  find  symbol  name  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  Predicate  <?>  property  =  this.getProperty(name);  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	Predicate  <?>  property  =  this.getProperty(name);	  Predicate    <?>    property    =    this.getProperty(propertyName);    	non-compiled	[CE]  cannot  find  symbol  name	104	None	replace
681	[BUG]  [BUGGY]  Predicate  <?>  property  =  this.getProperty(reference);  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  Predicate  <?>  property  =  this.getProperty(reference);  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	Predicate  <?>  property  =  this.getProperty(reference);	  Predicate    <?>    property    =    this.getProperty(propertyName);    	non-compiled	[CE]  cannot  find  symbol	104	None	replace
682	[BUG]  [BUGGY]  Predicate  <?>  property  =  this.propertyNode.getProperty(propertyName);  [CE]  cannot  find  symbol  propertyName  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  Predicate  <?>  property  =  this.propertyNode.getProperty(propertyName);  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	Predicate  <?>  property  =  this.propertyNode.getProperty(propertyName);	  Predicate    <?>    property    =    this.getProperty(propertyName);    	non-compiled	[CE]  cannot  find  symbol  propertyName	104	None	replace
683	[BUG]  [BUGGY]  Predicate  <?>  property  =  this.getProperty(propertyNode);  [CE]  cannot  find  symbol  propertyNode  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  Predicate  <?>  property  =  this.getProperty(propertyNode);  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	Predicate  <?>  property  =  this.getProperty(propertyNode);	  Predicate    <?>    property    =    this.getProperty(propertyName);    	non-compiled	[CE]  cannot  find  symbol  propertyNode	104	None	replace
684	[BUG]  [BUGGY]  Predicate  <?>  property  =  this.getProperty(sourceName);  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  Predicate  <?>  property  =  this.getProperty(sourceName);  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	Predicate  <?>  property  =  this.getProperty(sourceName);	  Predicate    <?>    property    =    this.getProperty(propertyName);    	non-compiled	[CE]  cannot  find  symbol	104	None	replace
685	[BUG]  [BUGGY]  Predicate  <?>  property  =  this.propertyNode.getProperty(name);  [CE]  cannot  find  symbol  name  [FE]                        AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  Predicate  <?>  property  =  this.propertyNode.getProperty(name);  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	Predicate  <?>  property  =  this.propertyNode.getProperty(name);	  Predicate    <?>    property    =    this.getProperty(propertyName);    	non-compiled	[CE]  cannot  find  symbol  name	104	None	replace
686	[BUG]  [BUGGY]  Predicate  <?>  property  =  this.getPropertyNode(propertyName);  [CE]  cannot  find  symbol  propertyName  [FE]                          AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  Predicate  <?>  property  =  this.getPropertyNode(propertyName);  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	Predicate  <?>  property  =  this.getPropertyNode(propertyName);	  Predicate    <?>    property    =    this.getProperty(propertyName);    	non-compiled	[CE]  cannot  find  symbol  propertyName	104	None	replace
687	[BUG]  [BUGGY]  parent.setValidator(validator);  return  super.setValidator(validator);  [CE]  cannot  find  symbol  parent  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  parent.setValidator(validator);  return  super.setValidator(validator);  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	parent.setValidator(validator);  return  super.setValidator(validator);	  return    super.setValidator(validator);    return    super.setValidator(validator);    	non-compiled	[CE]  cannot  find  symbol  parent	47	None	replace
688	[BUG]  [BUGGY]  Predicate  <  JSType>  propertyNode  =  this.getPropertyNode(referenced);  if(propertyNode!=  null)  {  return  false;  }  [CE]  cannot  find  symbol  referenced  [FE]                                  AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  Predicate  <  JSType>  propertyNode  =  this.getPropertyNode(referenced);  if(propertyNode!=  null)  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	Predicate  <  JSType>  propertyNode  =  this.getPropertyNode(referenced);  if(propertyNode!=  null)  {  return  false;  }	  if(this.isResolved())    {    Predicate    <    JSType>    propertyNode    =    this.getPropertyNode(referenced);    if(propertyNode!=    null)    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol  referenced	112	None	replace
689	[BUG]  [BUGGY]  Predicate  <  JSType>  propertyNode  =  this.getPropertyNode(referenced);  if(propertyNode  ==  null)  {  return  false;  }  [CE]  cannot  find  symbol  referenced  [FE]                                    AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  Predicate  <  JSType>  propertyNode  =  this.getPropertyNode(referenced);  if(propertyNode  ==  null)  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	Predicate  <  JSType>  propertyNode  =  this.getPropertyNode(referenced);  if(propertyNode  ==  null)  {  return  false;  }	  if(this.isResolved())    {    Predicate    <    JSType>    propertyNode    =    this.getPropertyNode(referenced);    if(propertyNode!=    null)    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol  referenced	112	None	replace
690	[BUG]  [BUGGY]  Predicate  <  JSType>  propertyNode  =  this.getPropertyNode(validator);  if(propertyNode!=  null)  {  return  false;  }  [CE]  method  getPropertyNode  in  class  ObjectType  cannot  be  applied  to  given  types;  [FE]                                      AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  Predicate  <  JSType>  propertyNode  =  this.getPropertyNode(validator);  if(propertyNode!=  null)  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	Predicate  <  JSType>  propertyNode  =  this.getPropertyNode(validator);  if(propertyNode!=  null)  {  return  false;  }	  if(this.isResolved())    {    Predicate    <    JSType>    propertyNode    =    this.getPropertyNode(referenced);    if(propertyNode!=    null)    {    return    false;    }    	non-compiled	[CE]  method  getPropertyNode  in  class  ObjectType  cannot  be  applied  to  given  types;	112	None	replace
691	[BUG]  [BUGGY]  Predicate  <  JSType>  propertyNode  =  this.getPropertyNode(referenced,  validator);  if(propertyNode!=  null)  {  return  false;  }  [CE]  cannot  find  symbol  referenced  [FE]                                        AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  Predicate  <  JSType>  propertyNode  =  this.getPropertyNode(referenced,  validator);  if(propertyNode!=  null)  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	Predicate  <  JSType>  propertyNode  =  this.getPropertyNode(referenced,  validator);  if(propertyNode!=  null)  {  return  false;  }	  if(this.isResolved())    {    Predicate    <    JSType>    propertyNode    =    this.getPropertyNode(referenced);    if(propertyNode!=    null)    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol  referenced	112	None	replace
692	[BUG]  [BUGGY]  if(this.isResolved())  {  Predicate  <  JSType>  propertyNode  =  this.getPropertyNode(referenced);  if(propertyNode  ==  null)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                                          AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.isResolved())  {  Predicate  <  JSType>  propertyNode  =  this.getPropertyNode(referenced);  if(propertyNode  ==  null)  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.isResolved())  {  Predicate  <  JSType>  propertyNode  =  this.getPropertyNode(referenced);  if(propertyNode  ==  null)  {  return  false;  }	  if(this.isResolved())    {    Predicate    <    JSType>    propertyNode    =    this.getPropertyNode(referenced);    if(propertyNode!=    null)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	112	None	replace
693	[BUG]  [BUGGY]  if(this.isResolved())  {  return  super.setValidator(validator);  }  else  {  for(JSType  referencedType  :  this.referencedTypes)  {  return  super.setValidator(referencedType);  }  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.isResolved())  {  return  super.setValidator(validator);  }  else  {  for(JSType  referencedType  :  this.referencedTypes)  {  return  super.setValidator(referencedType);  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.isResolved())  {  return  super.setValidator(validator);  }  else  {  for(JSType  referencedType  :  this.referencedTypes)  {  return  super.setValidator(referencedType);  }	  return    super.setValidator(validator);    if(this.isResolved())    {    for(JSType    referencedType    :    this.referencedTypes)    {    return    super.setValidator(referencedType);    }    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
694	[BUG]  [BUGGY]  if(this.isResolved())  {  return  super.setValidator(referencedType);  }  else  {  for(JSType  referencedType  :  this.referencedTypes)  {  return  super.setValidator(referencedType);  }  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.isResolved())  {  return  super.setValidator(referencedType);  }  else  {  for(JSType  referencedType  :  this.referencedTypes)  {  return  super.setValidator(referencedType);  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.isResolved())  {  return  super.setValidator(referencedType);  }  else  {  for(JSType  referencedType  :  this.referencedTypes)  {  return  super.setValidator(referencedType);  }	  return    super.setValidator(validator);    if(this.isResolved())    {    for(JSType    referencedType    :    this.referencedTypes)    {    return    super.setValidator(referencedType);    }    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
695	[BUG]  [BUGGY]  if(this.isResolved())  {  return  super.setValidator(validator);  }  else  {  for(JSType  referencedType  :  referencedTypes)  {  return  super.setValidator(referencedType);  }  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.isResolved())  {  return  super.setValidator(validator);  }  else  {  for(JSType  referencedType  :  referencedTypes)  {  return  super.setValidator(referencedType);  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.isResolved())  {  return  super.setValidator(validator);  }  else  {  for(JSType  referencedType  :  referencedTypes)  {  return  super.setValidator(referencedType);  }	  return    super.setValidator(validator);    if(this.isResolved())    {    for(JSType    referencedType    :    this.referencedTypes)    {    return    super.setValidator(referencedType);    }    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
696	[BUG]  [BUGGY]  if(this.isResolved())  {  return  super.setValidator(validator);  }  else  {  for(JSType  referencedType  :  this.referencedTypes)  {  return  super.set  [CE]  ';'  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.isResolved())  {  return  super.setValidator(validator);  }  else  {  for(JSType  referencedType  :  this.referencedTypes)  {  return  super.set  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.isResolved())  {  return  super.setValidator(validator);  }  else  {  for(JSType  referencedType  :  this.referencedTypes)  {  return  super.set	  return    super.setValidator(validator);    if(this.isResolved())    {    for(JSType    referencedType    :    this.referencedTypes)    {    return    super.setValidator(referencedType);    }    	non-compiled	[CE]  ';'  expected	53	None	replace
697	[BUG]  [BUGGY]  Predicate  <?>  validator  =  this.referencedTypes.get(referencedType);  [CE]  variable  validator  is  already  defined  in  method  setValidator(Predicate<JSType>)  [FE]                                  AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  Predicate  <?>  validator  =  this.referencedTypes.get(referencedType);  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	Predicate  <?>  validator  =  this.referencedTypes.get(referencedType);	  return    super.setValidator(validator);    if(this.isResolved())    {    for(JSType    referencedType    :    this.referencedTypes)    {    return    super.setValidator(referencedType);    }    	non-compiled	[CE]  variable  validator  is  already  defined  in  method  setValidator(Predicate<JSType>)	53	None	replace
698	[BUG]  [BUGGY]  Predicate  <  JSType>  validator  =  this.referencedTypes.get(referencedType);  [CE]  variable  validator  is  already  defined  in  method  setValidator(Predicate<JSType>)  [FE]                                    AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  Predicate  <  JSType>  validator  =  this.referencedTypes.get(referencedType);  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	Predicate  <  JSType>  validator  =  this.referencedTypes.get(referencedType);	  return    super.setValidator(validator);    if(this.isResolved())    {    for(JSType    referencedType    :    this.referencedTypes)    {    return    super.setValidator(referencedType);    }    	non-compiled	[CE]  variable  validator  is  already  defined  in  method  setValidator(Predicate<JSType>)	53	None	replace
699	[BUG]  [BUGGY]  if(!this.isInferred())  {  return  true;  }  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(!this.isInferred())  {  return  true;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(!this.isInferred())  {  return  true;  }	  if(this.isInferred())    {    return    true;    }    	non-compiled	[CE]  cannot  find  symbol	20	None	replace
700	[BUG]  [BUGGY]  if(this.isInferred()  ||  this.isResolved())  {  return  true;  }  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.isInferred()  ||  this.isResolved())  {  return  true;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.isInferred()  ||  this.isResolved())  {  return  true;  }	  if(this.isInferred())    {    return    true;    }    	non-compiled	[CE]  cannot  find  symbol	20	None	replace
701	[BUG]  [BUGGY]  if(this.isInferred()  ||  this.referencedTypes.contains(validator))  {  return  true;  }  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.isInferred()  ||  this.referencedTypes.contains(validator))  {  return  true;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.isInferred()  ||  this.referencedTypes.contains(validator))  {  return  true;  }	  if(this.isInferred())    {    return    true;    }    	non-compiled	[CE]  cannot  find  symbol	20	None	replace
702	[BUG]  [BUGGY]  if(isInferred())  {  return  true;  }  [CE]  cannot  find  symbol  [FE]                          AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(isInferred())  {  return  true;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(isInferred())  {  return  true;  }	  if(this.isInferred())    {    return    true;    }    	non-compiled	[CE]  cannot  find  symbol	20	None	replace
703	[BUG]  [BUGGY]  if(this.isInferred()  ||  this.isForwardDeclared())  {  return  true;  }  [CE]  cannot  find  symbol  [FE]                            AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.isInferred()  ||  this.isForwardDeclared())  {  return  true;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.isInferred()  ||  this.isForwardDeclared())  {  return  true;  }	  if(this.isInferred())    {    return    true;    }    	non-compiled	[CE]  cannot  find  symbol	20	None	replace
704	[BUG]  [BUGGY]  if(this.forAnnotations!=  forAnnotations)  {  forAnnotations  ignoreForwardReferencedTypes  =  this.ignoreForwardReferencedTypes;  if(ignoreForwardReferencedTypes!=  null)  {  return  false;  }  }  [CE]  cannot  find  symbol  forAnnotations  [FE]                      AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.forAnnotations!=  forAnnotations)  {  forAnnotations  ignoreForwardReferencedTypes  =  this.ignoreForwardReferencedTypes;  if(ignoreForwardReferencedTypes!=  null)  {  return  false;  }  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.forAnnotations!=  forAnnotations)  {  forAnnotations  ignoreForwardReferencedTypes  =  this.ignoreForwardReferencedTypes;  if(ignoreForwardReferencedTypes!=  null)  {  return  false;  }  }	  return    false;    if(this.forAnnotations!=    forAnnotations)    {    forAnnotations    ignoreForwardReferencedTypes    =    this.ignoreForwardReferencedTypes;    if(ignoreForwardReferencedTypes    >=    null)    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol  forAnnotations	6	None	replace
705	[BUG]  [BUGGY]  if(this.forAnnotations!=  forAnnotations)  {  forAnnotations  ignoreForwardReferencedTypes  =  this.ignoreForwardReferencedTypes;  if(ignoreForwardReferencedTypes!=  null)  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.forAnnotations!=  forAnnotations)  {  forAnnotations  ignoreForwardReferencedTypes  =  this.ignoreForwardReferencedTypes;  if(ignoreForwardReferencedTypes!=  null)  {  return  true;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.forAnnotations!=  forAnnotations)  {  forAnnotations  ignoreForwardReferencedTypes  =  this.ignoreForwardReferencedTypes;  if(ignoreForwardReferencedTypes!=  null)  {  return  true;  }	  return    false;    if(this.forAnnotations!=    forAnnotations)    {    forAnnotations    ignoreForwardReferencedTypes    =    this.ignoreForwardReferencedTypes;    if(ignoreForwardReferencedTypes    >=    null)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
706	[BUG]  [BUGGY]  if(this.forAnnotations!=  forAnnotations)  {  forAnnotations  ignoreForwardReferencedTypes  =  this.ignoreForwardReferencedTypes;  if(ignoreForwardReferencedTypes!=  null)  {  return  false  [CE]  ';'  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.forAnnotations!=  forAnnotations)  {  forAnnotations  ignoreForwardReferencedTypes  =  this.ignoreForwardReferencedTypes;  if(ignoreForwardReferencedTypes!=  null)  {  return  false  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.forAnnotations!=  forAnnotations)  {  forAnnotations  ignoreForwardReferencedTypes  =  this.ignoreForwardReferencedTypes;  if(ignoreForwardReferencedTypes!=  null)  {  return  false	  return    false;    if(this.forAnnotations!=    forAnnotations)    {    forAnnotations    ignoreForwardReferencedTypes    =    this.ignoreForwardReferencedTypes;    if(ignoreForwardReferencedTypes    >=    null)    {    return    false;    }    	non-compiled	[CE]  ';'  expected	6	None	replace
707	[BUG]  [BUGGY]  if(this.forAnnotations!=  forAnnotations)  {  forAnnotations  ignoredForwardReferencedTypes  =  this.ignoreForwardReferencedTypes;  if(ignoreForwardReferencedTypes!=  null)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.forAnnotations!=  forAnnotations)  {  forAnnotations  ignoredForwardReferencedTypes  =  this.ignoreForwardReferencedTypes;  if(ignoreForwardReferencedTypes!=  null)  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.forAnnotations!=  forAnnotations)  {  forAnnotations  ignoredForwardReferencedTypes  =  this.ignoreForwardReferencedTypes;  if(ignoreForwardReferencedTypes!=  null)  {  return  false;  }	  return    false;    if(this.forAnnotations!=    forAnnotations)    {    forAnnotations    ignoreForwardReferencedTypes    =    this.ignoreForwardReferencedTypes;    if(ignoreForwardReferencedTypes    >=    null)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
708	[BUG]  [BUGGY]  return(this.isResolved()  ||  validator!=  null);  if(this.isResolved()  ||  validator!=  null)  {  return  this.isResolved()  ||  validator!=  null;  }  [CE]  unreachable  statement  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  return(this.isResolved()  ||  validator!=  null);  if(this.isResolved()  ||  validator!=  null)  {  return  this.isResolved()  ||  validator!=  null;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	return(this.isResolved()    ||    validator!=    null);    if(this.isResolved()  ||  validator!=  null)  {  return  this.isResolved()  ||  validator!=  null;  }	  timeout    	non-compiled	[CE]  unreachable  statement	106	None	add
709	[BUG]  [BUGGY]  return(this.isResolved()  ||  validator!=  null);  this.isResolved()  ||  validator!=  null;  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  return(this.isResolved()  ||  validator!=  null);  this.isResolved()  ||  validator!=  null;  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	return(this.isResolved()    ||    validator!=    null);    this.isResolved()  ||  validator!=  null;	  timeout    	non-compiled	[CE]  not  a  statement	106	None	add
710	[BUG]  [BUGGY]  return(this.isResolved()  ||  validator!=  null);  if(this.isResolved()  ||  validator!=  null)  {  return  this.isResolved()  ||  validator!=  null);  }  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  return(this.isResolved()  ||  validator!=  null);  if(this.isResolved()  ||  validator!=  null)  {  return  this.isResolved()  ||  validator!=  null);  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	return(this.isResolved()    ||    validator!=    null);    if(this.isResolved()  ||  validator!=  null)  {  return  this.isResolved()  ||  validator!=  null);  }	  timeout    	non-compiled	[CE]  ';'  expected	106	None	add
711	[BUG]  [BUGGY]  if(!this.isResolved())  {  forAnnotations  ignoreForwardReferencedTypes  =  this.ignoreForwardReferencedTypes;  if(ignoreForwardReferencedTypes)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(!this.isResolved())  {  forAnnotations  ignoreForwardReferencedTypes  =  this.ignoreForwardReferencedTypes;  if(ignoreForwardReferencedTypes)  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(!this.isResolved())  {  forAnnotations  ignoreForwardReferencedTypes  =  this.ignoreForwardReferencedTypes;  if(ignoreForwardReferencedTypes)  {  return  false;  }	  return    false;    if(!this.forAnnotations)    {    forAnnotations    ignoreForwardReferencedTypes    =    this.ignoreForwardReferencedTypes;    if(ignoreForwardReferencedTypes)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
712	[BUG]  [BUGGY]  if(!this.forAnnotations)  {  forAnnotations  ignoreForwardReferencedTypes  =  this.ignoreForwardReferencedTypes;  if(ignoreForwardReferencedTypes)  {  return  false;  }  }  [CE]  cannot  find  symbol  forAnnotations  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(!this.forAnnotations)  {  forAnnotations  ignoreForwardReferencedTypes  =  this.ignoreForwardReferencedTypes;  if(ignoreForwardReferencedTypes)  {  return  false;  }  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(!this.forAnnotations)  {  forAnnotations  ignoreForwardReferencedTypes  =  this.ignoreForwardReferencedTypes;  if(ignoreForwardReferencedTypes)  {  return  false;  }  }	  return    false;    if(!this.forAnnotations)    {    forAnnotations    ignoreForwardReferencedTypes    =    this.ignoreForwardReferencedTypes;    if(ignoreForwardReferencedTypes)    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol  forAnnotations	84	None	replace
713	[BUG]  [BUGGY]  if(this.slotType!=  null)  {  return  false;  if(!this.forAnnotations)  {  forAnnotations  ignoreForwardReferencedTypes  =  this.ignoreForwardReferencedTypes;  if(ignoreForwardReferencedTypes)  {  return  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.slotType!=  null)  {  return  false;  if(!this.forAnnotations)  {  forAnnotations  ignoreForwardReferencedTypes  =  this.ignoreForwardReferencedTypes;  if(ignoreForwardReferencedTypes)  {  return  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.slotType!=  null)  {  return  false;  if(!this.forAnnotations)  {  forAnnotations  ignoreForwardReferencedTypes  =  this.ignoreForwardReferencedTypes;  if(ignoreForwardReferencedTypes)  {  return	  return    false;    if(!this.forAnnotations)    {    forAnnotations    ignoreForwardReferencedTypes    =    this.ignoreForwardReferencedTypes;    if(ignoreForwardReferencedTypes)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
714	[BUG]  [BUGGY]  if(this.slotType!=  null)  {  return  false;  if(!this.forAnnotations)  {  forAnnotations  ignoreForwardReferencedTypes  =  this.ignoreForwardReferencedTypes;  if(ignoreForwardReferencedTypes)  {  return  false  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.slotType!=  null)  {  return  false;  if(!this.forAnnotations)  {  forAnnotations  ignoreForwardReferencedTypes  =  this.ignoreForwardReferencedTypes;  if(ignoreForwardReferencedTypes)  {  return  false  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.slotType!=  null)  {  return  false;  if(!this.forAnnotations)  {  forAnnotations  ignoreForwardReferencedTypes  =  this.ignoreForwardReferencedTypes;  if(ignoreForwardReferencedTypes)  {  return  false	  return    false;    if(!this.forAnnotations)    {    forAnnotations    ignoreForwardReferencedTypes    =    this.ignoreForwardReferencedTypes;    if(ignoreForwardReferencedTypes)    {    return    false;    }    	non-compiled	[CE]  ';'  expected	84	None	replace
715	[BUG]  [BUGGY]  if(!this.isResolved())  {  forAnnotations  ignoreForwardReferencedTypes  =  this.ignoreForwardReferencedTypes;  if(ignoreForwardReferencedTypes)  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(!this.isResolved())  {  forAnnotations  ignoreForwardReferencedTypes  =  this.ignoreForwardReferencedTypes;  if(ignoreForwardReferencedTypes)  {  return  true;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(!this.isResolved())  {  forAnnotations  ignoreForwardReferencedTypes  =  this.ignoreForwardReferencedTypes;  if(ignoreForwardReferencedTypes)  {  return  true;  }	  return    false;    if(!this.forAnnotations)    {    forAnnotations    ignoreForwardReferencedTypes    =    this.ignoreForwardReferencedTypes;    if(ignoreForwardReferencedTypes)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
716	[BUG]  [BUGGY]  timeout  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  return(this.validator!=  null  &&  this.isResolved());  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	add	return(this.validator!=  null  &&  this.isResolved());	  return(this.isResolved()    &&    this.validator    ==    null);    timeout    	compilable	timeout	60	1	replace
717	[BUG]  [BUGGY]  return(this.validator!=  null  &&  this.isResolved());  timeout  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  return(this.validator!=  null  &&  this.isResolved());  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	return(this.validator!=  null  &&  this.isResolved());	  return(this.isResolved()    &&    this.validator    ==    null);    timeout    	compilable	timeout	60	1	replace
718	[BUG]  [BUGGY]  if(this.forAnnotations  ==  forAnnotations)  {  forAnnotations  ignoreForwardReferencedTypes  =  getAnnotations();  if(ignoreForwardReferencedTypes  ==  null)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.forAnnotations  ==  forAnnotations)  {  forAnnotations  ignoreForwardReferencedTypes  =  getAnnotations();  if(ignoreForwardReferencedTypes  ==  null)  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.forAnnotations  ==  forAnnotations)  {  forAnnotations  ignoreForwardReferencedTypes  =  getAnnotations();  if(ignoreForwardReferencedTypes  ==  null)  {  return  false;  }	  return    false;    if(this.forAnnotations!=    forAnnotations)    {    forAnnotations    ignoreForwardReferencedTypes    =    getAnnotations();    if(ignoreForwardReferencedTypes    ==    null)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
719	[BUG]  [BUGGY]  if(this.forAnnotations!=  forAnnotations)  {  forAnnotations  ignoreForwardReferencedTypes  =  getAnnotations();  if(ignoreForwardReferencedTypes  ==  null)  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.forAnnotations!=  forAnnotations)  {  forAnnotations  ignoreForwardReferencedTypes  =  getAnnotations();  if(ignoreForwardReferencedTypes  ==  null)  {  return  true;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.forAnnotations!=  forAnnotations)  {  forAnnotations  ignoreForwardReferencedTypes  =  getAnnotations();  if(ignoreForwardReferencedTypes  ==  null)  {  return  true;  }	  return    false;    if(this.forAnnotations!=    forAnnotations)    {    forAnnotations    ignoreForwardReferencedTypes    =    getAnnotations();    if(ignoreForwardReferencedTypes    ==    null)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
720	[BUG]  [BUGGY]  if(this.forAnnotations!=  forAnnotations)  {  forAnnotations  ignoreForwardReferencedTypes  =  getAnnotations();  if(ignoreForwardReferencedTypes  ==  null)  {  return  false  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.forAnnotations!=  forAnnotations)  {  forAnnotations  ignoreForwardReferencedTypes  =  getAnnotations();  if(ignoreForwardReferencedTypes  ==  null)  {  return  false  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.forAnnotations!=  forAnnotations)  {  forAnnotations  ignoreForwardReferencedTypes  =  getAnnotations();  if(ignoreForwardReferencedTypes  ==  null)  {  return  false	  return    false;    if(this.forAnnotations!=    forAnnotations)    {    forAnnotations    ignoreForwardReferencedTypes    =    getAnnotations();    if(ignoreForwardReferencedTypes    ==    null)    {    return    false;    }    	non-compiled	[CE]  ';'  expected	4	None	replace
721	[BUG]  [BUGGY]  if(this.forAnnotations!=  forAnnotations)  {  forAnnotations  ignoredForwardReferencedTypes  =  getAnnotations();  if(ignoreForwardReferencedTypes  ==  null)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.forAnnotations!=  forAnnotations)  {  forAnnotations  ignoredForwardReferencedTypes  =  getAnnotations();  if(ignoreForwardReferencedTypes  ==  null)  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.forAnnotations!=  forAnnotations)  {  forAnnotations  ignoredForwardReferencedTypes  =  getAnnotations();  if(ignoreForwardReferencedTypes  ==  null)  {  return  false;  }	  return    false;    if(this.forAnnotations!=    forAnnotations)    {    forAnnotations    ignoreForwardReferencedTypes    =    getAnnotations();    if(ignoreForwardReferencedTypes    ==    null)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
722	[BUG]  [BUGGY]  if(this.forAnnotations!=  forAnnotations)  {  forAnnotations  ignoreForwardReferencedTypes  =  getAnnotations();  if(ignoreForwardReferencedTypes  ==  null)  {  return  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.forAnnotations!=  forAnnotations)  {  forAnnotations  ignoreForwardReferencedTypes  =  getAnnotations();  if(ignoreForwardReferencedTypes  ==  null)  {  return  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.forAnnotations!=  forAnnotations)  {  forAnnotations  ignoreForwardReferencedTypes  =  getAnnotations();  if(ignoreForwardReferencedTypes  ==  null)  {  return	  return    false;    if(this.forAnnotations!=    forAnnotations)    {    forAnnotations    ignoreForwardReferencedTypes    =    getAnnotations();    if(ignoreForwardReferencedTypes    ==    null)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
723	[BUG]  [BUGGY]  if(!this.isResolved())  {  return  super.setValidator(validator);  }  [CE]  missing  return  statement  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(!this.isResolved())  {  return  super.setValidator(validator);  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(!this.isResolved())  {  return  super.setValidator(validator);  }	  return    super.setValidator(validator);    return    super.setValidator(validator);    	non-compiled	[CE]  missing  return  statement	47	None	replace
724	[BUG]  [BUGGY]  if(this.isResolved())  {  return  super.setValidator(validator);  }  else  {  Predicate  <  JSType>  property  =  this.referencedTypes.get(reference);  if(prop  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.isResolved())  {  return  super.setValidator(validator);  }  else  {  Predicate  <  JSType>  property  =  this.referencedTypes.get(reference);  if(prop  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.isResolved())  {  return  super.setValidator(validator);  }  else  {  Predicate  <  JSType>  property  =  this.referencedTypes.get(reference);  if(prop	  return    super.setValidator(validator);    return    super.setValidator(validator);    	non-compiled	[CE]  ')'  expected	47	None	replace
725	[BUG]  [BUGGY]  if(this.isResolved())  {  return  super.setValidator(validator);  }  else  {  Predicate  <  JSType>  property  =  this.referencedTypes.get(reference);  if(property!=  null)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.isResolved())  {  return  super.setValidator(validator);  }  else  {  Predicate  <  JSType>  property  =  this.referencedTypes.get(reference);  if(property!=  null)  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.isResolved())  {  return  super.setValidator(validator);  }  else  {  Predicate  <  JSType>  property  =  this.referencedTypes.get(reference);  if(property!=  null)  {  return  false;  }	  return    super.setValidator(validator);    return    super.setValidator(validator);    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
726	[BUG]  [BUGGY]  if(value!=  null)  {  return  false;  forAnnotations  <  propertyNode  =  propertyNode.getFirstChild();  if(this.isResolved())  {  return  false;  }  [CE]  >  expected  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(value!=  null)  {  return  false;  forAnnotations  <  propertyNode  =  propertyNode.getFirstChild();  if(this.isResolved())  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(value!=  null)  {  return  false;  forAnnotations  <  propertyNode  =  propertyNode.getFirstChild();  if(this.isResolved())  {  return  false;  }	  return    false;    if(validator!=    null)    {    forAnnotations    <    propertyNode    =    propertyNode.getFirstChild();    if(this.isResolved())    {    return    false;    }    	non-compiled	[CE]  >  expected	141	None	replace
727	[BUG]  [BUGGY]  if(propertyNode!=  null)  {  return  false;  forAnnotations  <  propertyNode  =  propertyNode.getFirstChild();  if(this.isResolved())  {  return  false;  }  [CE]  >  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(propertyNode!=  null)  {  return  false;  forAnnotations  <  propertyNode  =  propertyNode.getFirstChild();  if(this.isResolved())  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(propertyNode!=  null)  {  return  false;  forAnnotations  <  propertyNode  =  propertyNode.getFirstChild();  if(this.isResolved())  {  return  false;  }	  return    false;    if(validator!=    null)    {    forAnnotations    <    propertyNode    =    propertyNode.getFirstChild();    if(this.isResolved())    {    return    false;    }    	non-compiled	[CE]  >  expected	141	None	replace
728	[BUG]  [BUGGY]  if(this.isForwardDeclared())  {  return  false;  forAnnotations  <  propertyNode  =  propertyNode.getFirstChild();  if(this.isResolved())  {  return  false;  }  [CE]  >  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.isForwardDeclared())  {  return  false;  forAnnotations  <  propertyNode  =  propertyNode.getFirstChild();  if(this.isResolved())  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.isForwardDeclared())  {  return  false;  forAnnotations  <  propertyNode  =  propertyNode.getFirstChild();  if(this.isResolved())  {  return  false;  }	  return    false;    if(validator!=    null)    {    forAnnotations    <    propertyNode    =    propertyNode.getFirstChild();    if(this.isResolved())    {    return    false;    }    	non-compiled	[CE]  >  expected	141	None	replace
729	[BUG]  [BUGGY]  if(value!=  null)  {  return  false;  forAnnotations  <  propertyNode  =  propertyNode.getFirstChild();  if(this.isResolved())  {  return  true;  }  [CE]  >  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(value!=  null)  {  return  false;  forAnnotations  <  propertyNode  =  propertyNode.getFirstChild();  if(this.isResolved())  {  return  true;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(value!=  null)  {  return  false;  forAnnotations  <  propertyNode  =  propertyNode.getFirstChild();  if(this.isResolved())  {  return  true;  }	  return    false;    if(validator!=    null)    {    forAnnotations    <    propertyNode    =    propertyNode.getFirstChild();    if(this.isResolved())    {    return    false;    }    	non-compiled	[CE]  >  expected	141	None	replace
730	[BUG]  [BUGGY]  if(propertyNode!=  null)  {  return  false;  forAnnotations  <  propertyNode  =  propertyNode.getFirstChild();  if(this.isResolved())  {  return  true;  }  [CE]  >  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(propertyNode!=  null)  {  return  false;  forAnnotations  <  propertyNode  =  propertyNode.getFirstChild();  if(this.isResolved())  {  return  true;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(propertyNode!=  null)  {  return  false;  forAnnotations  <  propertyNode  =  propertyNode.getFirstChild();  if(this.isResolved())  {  return  true;  }	  return    false;    if(validator!=    null)    {    forAnnotations    <    propertyNode    =    propertyNode.getFirstChild();    if(this.isResolved())    {    return    false;    }    	non-compiled	[CE]  >  expected	141	None	replace
731	[BUG]  [BUGGY]  if(this.isForwardDeclared())  {  return  false;  forAnnotations  <  propertyNode  =  propertyNode.getFirstChild();  if(this.isResolved())  {  return  true;  }  [CE]  >  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.isForwardDeclared())  {  return  false;  forAnnotations  <  propertyNode  =  propertyNode.getFirstChild();  if(this.isResolved())  {  return  true;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.isForwardDeclared())  {  return  false;  forAnnotations  <  propertyNode  =  propertyNode.getFirstChild();  if(this.isResolved())  {  return  true;  }	  return    false;    if(validator!=    null)    {    forAnnotations    <    propertyNode    =    propertyNode.getFirstChild();    if(this.isResolved())    {    return    false;    }    	non-compiled	[CE]  >  expected	141	None	replace
732	[BUG]  [BUGGY]  if(value  ==  null)  {  return  false;  }  [CE]  cannot  find  symbol  value  [FE]                          AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(value  ==  null)  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(value  ==  null)  {  return  false;  }	  if(this.forType    ==    null)    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol  value	13	None	replace
733	[BUG]  [BUGGY]  if(this.validator!=  null)  {  return  super.setValidator(validator);  }  else  {  Predicate  <  JSType>  property  =  this.validator;  if(property.isResolved())  {  return  super.setValidator(validator);  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.validator!=  null)  {  return  super.setValidator(validator);  }  else  {  Predicate  <  JSType>  property  =  this.validator;  if(property.isResolved())  {  return  super.setValidator(validator);  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.validator!=  null)  {  return  super.setValidator(validator);  }  else  {  Predicate  <  JSType>  property  =  this.validator;  if(property.isResolved())  {  return  super.setValidator(validator);  }	  return    super.setValidator(this.validator);    timeout    	non-compiled	[CE]  illegal  start  of  expression	95	None	replace
734	[BUG]  [BUGGY]  if(this.validator!=  null)  {  return  super.setValidator(validator);  }  else  {  Predicate  <  JSType>  property  =  this.validator;  if(property.isResolved())  {  return  super.setValidator(value);  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.validator!=  null)  {  return  super.setValidator(validator);  }  else  {  Predicate  <  JSType>  property  =  this.validator;  if(property.isResolved())  {  return  super.setValidator(value);  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.validator!=  null)  {  return  super.setValidator(validator);  }  else  {  Predicate  <  JSType>  property  =  this.validator;  if(property.isResolved())  {  return  super.setValidator(value);  }	  return    super.setValidator(this.validator);    timeout    	non-compiled	[CE]  illegal  start  of  expression	95	None	replace
735	[BUG]  [BUGGY]  if(this.validator!=  null)  {  return  super.setValidator(validator);  }  else  {  Predicate  <  JSType>  property  =  this.validator.getProperty();  if(property.isResolved())  {  return  super.setVal  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.validator!=  null)  {  return  super.setValidator(validator);  }  else  {  Predicate  <  JSType>  property  =  this.validator.getProperty();  if(property.isResolved())  {  return  super.setVal  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.validator!=  null)  {  return  super.setValidator(validator);  }  else  {  Predicate  <  JSType>  property  =  this.validator.getProperty();  if(property.isResolved())  {  return  super.setVal	  return    super.setValidator(this.validator);    timeout    	non-compiled	[CE]  ';'  expected	95	None	replace
736	[BUG]  [BUGGY]  if(this.validator!=  null)  {  return  super.setValidator(validator);  }  else  {  Predicate  <  JSType>  property  =  this.validator;  if(property.isResolved())  {  return  super.setValidator  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.validator!=  null)  {  return  super.setValidator(validator);  }  else  {  Predicate  <  JSType>  property  =  this.validator;  if(property.isResolved())  {  return  super.setValidator  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.validator!=  null)  {  return  super.setValidator(validator);  }  else  {  Predicate  <  JSType>  property  =  this.validator;  if(property.isResolved())  {  return  super.setValidator	  return    super.setValidator(this.validator);    timeout    	non-compiled	[CE]  ';'  expected	95	None	replace
737	[BUG]  [BUGGY]  if(referencedType!=  null)  {  if(this.isResolved())  {  return  false;  }  else  {  Predicate  <  JSType>  referencedType  =  this.referencedTypes.get(reference);  if(referencedType!=  null)  {  return  true  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(referencedType!=  null)  {  if(this.isResolved())  {  return  false;  }  else  {  Predicate  <  JSType>  referencedType  =  this.referencedTypes.get(reference);  if(referencedType!=  null)  {  return  true  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(referencedType!=  null)  {  if(this.isResolved())  {  return  false;  }  else  {  Predicate  <  JSType>  referencedType  =  this.referencedTypes.get(reference);  if(referencedType!=  null)  {  return  true	  if(this.isResolved())    {    return    false;    }    else    {    Predicate    <    JSType>    referencedType    =    this.referencedTypes.get(reference);    if(referencedType!=    null)    {    return    true;    }    	non-compiled	[CE]  ';'  expected	100	None	replace
738	[BUG]  [BUGGY]  if(this.referencedTypes!=  null)  {  if(this.isResolved())  {  return  false;  }  else  {  Predicate  <  JSType>  referencedType  =  this.referencedTypes.get(reference);  if(referencedType!=  null)  {  return  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.referencedTypes!=  null)  {  if(this.isResolved())  {  return  false;  }  else  {  Predicate  <  JSType>  referencedType  =  this.referencedTypes.get(reference);  if(referencedType!=  null)  {  return  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.referencedTypes!=  null)  {  if(this.isResolved())  {  return  false;  }  else  {  Predicate  <  JSType>  referencedType  =  this.referencedTypes.get(reference);  if(referencedType!=  null)  {  return	  if(this.isResolved())    {    return    false;    }    else    {    Predicate    <    JSType>    referencedType    =    this.referencedTypes.get(reference);    if(referencedType!=    null)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	100	None	replace
739	[BUG]  [BUGGY]  if(this.referencedTypes!=  null)  {  if(this.isResolved())  {  return  false;  }  else  {  Predicate  <  JSType>  referencedType  =  this.referencedTypes.get(reference);  if(referencedType!=  null)  {  return  true  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.referencedTypes!=  null)  {  if(this.isResolved())  {  return  false;  }  else  {  Predicate  <  JSType>  referencedType  =  this.referencedTypes.get(reference);  if(referencedType!=  null)  {  return  true  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.referencedTypes!=  null)  {  if(this.isResolved())  {  return  false;  }  else  {  Predicate  <  JSType>  referencedType  =  this.referencedTypes.get(reference);  if(referencedType!=  null)  {  return  true	  if(this.isResolved())    {    return    false;    }    else    {    Predicate    <    JSType>    referencedType    =    this.referencedTypes.get(reference);    if(referencedType!=    null)    {    return    true;    }    	non-compiled	[CE]  ';'  expected	100	None	replace
740	[BUG]  [BUGGY]  if(referencedType!=  null)  {  if(this.isResolved())  {  return  false;  }  else  {  Predicate  <  JSType>  referencedType  =  this.referencedTypes.get(reference);  if(referencedType!=  null)  {  return  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(referencedType!=  null)  {  if(this.isResolved())  {  return  false;  }  else  {  Predicate  <  JSType>  referencedType  =  this.referencedTypes.get(reference);  if(referencedType!=  null)  {  return  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(referencedType!=  null)  {  if(this.isResolved())  {  return  false;  }  else  {  Predicate  <  JSType>  referencedType  =  this.referencedTypes.get(reference);  if(referencedType!=  null)  {  return	  if(this.isResolved())    {    return    false;    }    else    {    Predicate    <    JSType>    referencedType    =    this.referencedTypes.get(reference);    if(referencedType!=    null)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	100	None	replace
741	[BUG]  [BUGGY]  if(this.referencedTypes!=  null)  {  if(!this.isResolved())  {  return  false;  }  else  {  Predicate  <  JSType>  referencedType  =  this.referencedTypes.get(reference);  if(referencedType!=  null)  {  return  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.referencedTypes!=  null)  {  if(!this.isResolved())  {  return  false;  }  else  {  Predicate  <  JSType>  referencedType  =  this.referencedTypes.get(reference);  if(referencedType!=  null)  {  return  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.referencedTypes!=  null)  {  if(!this.isResolved())  {  return  false;  }  else  {  Predicate  <  JSType>  referencedType  =  this.referencedTypes.get(reference);  if(referencedType!=  null)  {  return	  if(this.isResolved())    {    return    false;    }    else    {    Predicate    <    JSType>    referencedType    =    this.referencedTypes.get(reference);    if(referencedType!=    null)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	100	None	replace
742	[BUG]  [BUGGY]  if(this.referencedTypes!=  null)  {  if(!this.isResolved())  {  return  false;  }  else  {  Predicate  <  JSType>  referencedType  =  this.referencedTypes.get(reference);  if(referencedType!=  null)  {  return  true  [CE]  ';'  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.referencedTypes!=  null)  {  if(!this.isResolved())  {  return  false;  }  else  {  Predicate  <  JSType>  referencedType  =  this.referencedTypes.get(reference);  if(referencedType!=  null)  {  return  true  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.referencedTypes!=  null)  {  if(!this.isResolved())  {  return  false;  }  else  {  Predicate  <  JSType>  referencedType  =  this.referencedTypes.get(reference);  if(referencedType!=  null)  {  return  true	  if(this.isResolved())    {    return    false;    }    else    {    Predicate    <    JSType>    referencedType    =    this.referencedTypes.get(reference);    if(referencedType!=    null)    {    return    true;    }    	non-compiled	[CE]  ';'  expected	100	None	replace
743	[BUG]  [BUGGY]  if(this.name.equals(validator))  {  return  false;  }  [CE]  cannot  find  symbol  name  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.name.equals(validator))  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.name.equals(validator))  {  return  false;  }	  if(this.slotType.equals(validator))    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol  name	46	None	replace
744	[BUG]  [BUGGY]  referencedType  =  getReferencedType(reference);  if(referencedType!=  null)  {  return  false;  }  [CE]  referencedType  has  private  access  in  ProxyObjectType  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  referencedType  =  getReferencedType(reference);  if(referencedType!=  null)  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	referencedType  =  getReferencedType(reference);  if(referencedType!=  null)  {  return  false;  }	  return    false;    if(this.isResolved())    {    JSType    referencedType    =    getReferencedType(reference);    if(referencedType!=    null)    {    return    false;    }    	non-compiled	[CE]  referencedType  has  private  access  in  ProxyObjectType	88	None	replace
745	[BUG]  [BUGGY]  if(referencedType!=  null)  {  return  false;  }  [CE]  referencedType  has  private  access  in  ProxyObjectType  [FE]                      AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(referencedType!=  null)  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(referencedType!=  null)  {  return  false;  }	  return    false;    if(this.isResolved())    {    JSType    referencedType    =    getReferencedType(reference);    if(referencedType!=    null)    {    return    false;    }    	non-compiled	[CE]  referencedType  has  private  access  in  ProxyObjectType	88	None	replace
746	[BUG]  [BUGGY]  if(referencedType!=  null)  {  return  false;  }  else  {  Predicate  <  JSType>  referencedType  =  getReferencedType(reference);  if(referencedType!=  null)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(referencedType!=  null)  {  return  false;  }  else  {  Predicate  <  JSType>  referencedType  =  getReferencedType(reference);  if(referencedType!=  null)  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(referencedType!=  null)  {  return  false;  }  else  {  Predicate  <  JSType>  referencedType  =  getReferencedType(reference);  if(referencedType!=  null)  {  return  false;  }	  return    false;    if(this.isResolved())    {    JSType    referencedType    =    getReferencedType(reference);    if(referencedType!=    null)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	88	None	replace
747	[BUG]  [BUGGY]  if(this.isForwardDeclared())  {  return  false;  }  else  {  Predicate  <  JSType>  referencedType  =  getReferencedType(reference);  if(referencedType!=  null)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.isForwardDeclared())  {  return  false;  }  else  {  Predicate  <  JSType>  referencedType  =  getReferencedType(reference);  if(referencedType!=  null)  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.isForwardDeclared())  {  return  false;  }  else  {  Predicate  <  JSType>  referencedType  =  getReferencedType(reference);  if(referencedType!=  null)  {  return  false;  }	  return    false;    if(this.isResolved())    {    JSType    referencedType    =    getReferencedType(reference);    if(referencedType!=    null)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	88	None	replace
748	[BUG]  [BUGGY]  if(validator.isReferenced())  {  return  false;  }  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(validator.isReferenced())  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(validator.isReferenced())  {  return  false;  }	  if(this.isReferenced())    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol	76	None	replace
749	[BUG]  [BUGGY]  if(value.isReferenced())  {  return  false;  }  [CE]  cannot  find  symbol  value  [FE]                      AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(value.isReferenced())  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(value.isReferenced())  {  return  false;  }	  if(this.isReferenced())    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol  value	76	None	replace
750	[BUG]  [BUGGY]  this.ignoreForwardDeclared();  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  this.ignoreForwardDeclared();  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	this.ignoreForwardDeclared();	  this.isForwardDeclared();    	non-compiled	[CE]  cannot  find  symbol	22	None	replace
751	[BUG]  [BUGGY]  this.ignoreForwardReferencedTypes.set(validator);  [CE]  cannot  find  symbol  ignoreForwardReferencedTypes  [FE]                          AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  this.ignoreForwardReferencedTypes.set(validator);  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	this.ignoreForwardReferencedTypes.set(validator);	  this.isForwardDeclared();    	non-compiled	[CE]  cannot  find  symbol  ignoreForwardReferencedTypes	22	None	replace
752	[BUG]  [BUGGY]  this.forwardDeclared  =  false;  [CE]  cannot  find  symbol  forwardDeclared  [FE]                            AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  this.forwardDeclared  =  false;  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	this.forwardDeclared  =  false;	  this.isForwardDeclared();    	non-compiled	[CE]  cannot  find  symbol  forwardDeclared	22	None	replace
753	[BUG]  [BUGGY]  Predicate  <?>  propertyNode  =  getPropertyNode(reference.propertyName);  [CE]  cannot  find  symbol  propertyName  [FE]                                    AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  Predicate  <?>  propertyNode  =  getPropertyNode(reference.propertyName);  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	Predicate  <?>  propertyNode  =  getPropertyNode(reference.propertyName);	  Predicate    <?>    propertyNode    =    getPropertyNode(propertyName);    	non-compiled	[CE]  cannot  find  symbol  propertyName	137	None	replace
754	[BUG]  [BUGGY]  Predicate  <?>  propertyNode  =  getPropertyNode(reference.sourceName);  [CE]  cannot  find  symbol  sourceName  [FE]                                      AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  Predicate  <?>  propertyNode  =  getPropertyNode(reference.sourceName);  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	Predicate  <?>  propertyNode  =  getPropertyNode(reference.sourceName);	  Predicate    <?>    propertyNode    =    getPropertyNode(propertyName);    	non-compiled	[CE]  cannot  find  symbol  sourceName	137	None	replace
755	[BUG]  [BUGGY]  if(validator!=  null)  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;  }  [CE]  missing  return  statement  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(validator!=  null)  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(validator!=  null)  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;  }	  if(this.validator!=    null)    {    return    super.setValidator(validator);    }    else    {    this.validator    =    validator;    }    	non-compiled	[CE]  missing  return  statement	41	None	replace
756	[BUG]  [BUGGY]  if(this.isResolved())  {  if(validator!=  null)  {  return  super.setValidator(validator);  }  else  {  this.validator  =  invalidator;  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.isResolved())  {  if(validator!=  null)  {  return  super.setValidator(validator);  }  else  {  this.validator  =  invalidator;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.isResolved())  {  if(validator!=  null)  {  return  super.setValidator(validator);  }  else  {  this.validator  =  invalidator;  }	  if(this.validator!=    null)    {    return    super.setValidator(validator);    }    else    {    this.validator    =    validator;    }    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
757	[BUG]  [BUGGY]  if(this.isResolved()  ||  validator!=  null)  {  return  false;  }  [CE]  missing  return  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.isResolved()  ||  validator!=  null)  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.isResolved()  ||  validator!=  null)  {  return  false;  }	  return(this.isResolved()    &&    this.validator!=    null);    if(this.isResolved()    &&    this.validator!=    null);    	non-compiled	[CE]  missing  return  statement	26	None	replace
758	[BUG]  [BUGGY]  if(this.referencedTypes  ==  null)  {  return  false;  }  [CE]  cannot  find  symbol  referencedTypes  [FE]                        AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.referencedTypes  ==  null)  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.referencedTypes  ==  null)  {  return  false;  }	  if(this.forwardReferencedTypes    ==    null)    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol  referencedTypes	36	None	replace
759	[BUG]  [BUGGY]  if(!this.ignoreForwardReferencedTypes)  {  forAnnotations  ignoreForwardReferencedTypes  =  this.ignoreForwardReferencedTypes;  if(isForwardDeclared)  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(!this.ignoreForwardReferencedTypes)  {  forAnnotations  ignoreForwardReferencedTypes  =  this.ignoreForwardReferencedTypes;  if(isForwardDeclared)  {  return  true;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(!this.ignoreForwardReferencedTypes)  {  forAnnotations  ignoreForwardReferencedTypes  =  this.ignoreForwardReferencedTypes;  if(isForwardDeclared)  {  return  true;  }	  return    false;    if(!this.forAnnotations)    {    forAnnotations    ignoreForwardReferencedTypes    =    this.ignoreForwardReferencedTypes;    if(isForwardDeclared)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
760	[BUG]  [BUGGY]  if(!this.resolved)  {  forAnnotations  ignoreForwardReferencedTypes  =  this.ignoreForwardReferencedTypes;  if(isForwardDeclared)  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(!this.resolved)  {  forAnnotations  ignoreForwardReferencedTypes  =  this.ignoreForwardReferencedTypes;  if(isForwardDeclared)  {  return  true;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(!this.resolved)  {  forAnnotations  ignoreForwardReferencedTypes  =  this.ignoreForwardReferencedTypes;  if(isForwardDeclared)  {  return  true;  }	  return    false;    if(!this.forAnnotations)    {    forAnnotations    ignoreForwardReferencedTypes    =    this.ignoreForwardReferencedTypes;    if(isForwardDeclared)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
761	[BUG]  [BUGGY]  if(this.ignoreForwardReferencedTypes!=  null)  {  return  false;  forAnnotations  ignoreForwardReferencedTypes  =  this.ignoreForwardReferencedTypes;  if(isForwardDeclared)  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.ignoreForwardReferencedTypes!=  null)  {  return  false;  forAnnotations  ignoreForwardReferencedTypes  =  this.ignoreForwardReferencedTypes;  if(isForwardDeclared)  {  return  true;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.ignoreForwardReferencedTypes!=  null)  {  return  false;  forAnnotations  ignoreForwardReferencedTypes  =  this.ignoreForwardReferencedTypes;  if(isForwardDeclared)  {  return  true;  }	  return    false;    if(!this.forAnnotations)    {    forAnnotations    ignoreForwardReferencedTypes    =    this.ignoreForwardReferencedTypes;    if(isForwardDeclared)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
762	[BUG]  [BUGGY]  if(!this.ignoreForwardReferencedTypes)  {  forAnnotations  ignoreForwardReferencedTypes  =  this.ignoreForwardReferencedTypes;  if(isForwardDeclared)  {  return  true  [CE]  ';'  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(!this.ignoreForwardReferencedTypes)  {  forAnnotations  ignoreForwardReferencedTypes  =  this.ignoreForwardReferencedTypes;  if(isForwardDeclared)  {  return  true  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(!this.ignoreForwardReferencedTypes)  {  forAnnotations  ignoreForwardReferencedTypes  =  this.ignoreForwardReferencedTypes;  if(isForwardDeclared)  {  return  true	  return    false;    if(!this.forAnnotations)    {    forAnnotations    ignoreForwardReferencedTypes    =    this.ignoreForwardReferencedTypes;    if(isForwardDeclared)    {    return    true;    }    	non-compiled	[CE]  ';'  expected	89	None	replace
763	[BUG]  [BUGGY]  if(!this.forAnnotations)  {  forAnnotations  ignoreForwardReferencedTypes  =  this.ignoreForwardReferencedTypes;  if(isForwardDeclared)  {  return  true  [CE]  ';'  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(!this.forAnnotations)  {  forAnnotations  ignoreForwardReferencedTypes  =  this.ignoreForwardReferencedTypes;  if(isForwardDeclared)  {  return  true  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(!this.forAnnotations)  {  forAnnotations  ignoreForwardReferencedTypes  =  this.ignoreForwardReferencedTypes;  if(isForwardDeclared)  {  return  true	  return    false;    if(!this.forAnnotations)    {    forAnnotations    ignoreForwardReferencedTypes    =    this.ignoreForwardReferencedTypes;    if(isForwardDeclared)    {    return    true;    }    	non-compiled	[CE]  ';'  expected	89	None	replace
764	[BUG]  [BUGGY]  if(validator!=  null)  {  forAnnotations  <  propertyNode  =  propertyNode.getFirstChild();  if(!this.isResolved())  {  return  true;  }  [CE]  >  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(validator!=  null)  {  forAnnotations  <  propertyNode  =  propertyNode.getFirstChild();  if(!this.isResolved())  {  return  true;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(validator!=  null)  {  forAnnotations  <  propertyNode  =  propertyNode.getFirstChild();  if(!this.isResolved())  {  return  true;  }	  return    false;    if(validator!=    null)    {    forAnnotations    <    propertyNode    =    propertyNode.getFirstChild();    if(!this.isResolved())    {    return    true;    }    	non-compiled	[CE]  >  expected	145	None	replace
765	[BUG]  [BUGGY]  if(value!=  null)  {  return  false;  forAnnotations  <  propertyNode  =  propertyNode.getFirstChild();  if(!this.isResolved())  {  return  true;  }  [CE]  >  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(value!=  null)  {  return  false;  forAnnotations  <  propertyNode  =  propertyNode.getFirstChild();  if(!this.isResolved())  {  return  true;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(value!=  null)  {  return  false;  forAnnotations  <  propertyNode  =  propertyNode.getFirstChild();  if(!this.isResolved())  {  return  true;  }	  return    false;    if(validator!=    null)    {    forAnnotations    <    propertyNode    =    propertyNode.getFirstChild();    if(!this.isResolved())    {    return    true;    }    	non-compiled	[CE]  >  expected	145	None	replace
766	[BUG]  [BUGGY]  if(propertyNode!=  null)  {  return  false;  forAnnotations  <  propertyNode  =  propertyNode.getFirstChild();  if(!this.isResolved())  {  return  true;  }  [CE]  >  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(propertyNode!=  null)  {  return  false;  forAnnotations  <  propertyNode  =  propertyNode.getFirstChild();  if(!this.isResolved())  {  return  true;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(propertyNode!=  null)  {  return  false;  forAnnotations  <  propertyNode  =  propertyNode.getFirstChild();  if(!this.isResolved())  {  return  true;  }	  return    false;    if(validator!=    null)    {    forAnnotations    <    propertyNode    =    propertyNode.getFirstChild();    if(!this.isResolved())    {    return    true;    }    	non-compiled	[CE]  >  expected	145	None	replace
767	[BUG]  [BUGGY]  if(validator!=  null)  {  forAnnotations  <  propertyNode  =  propertyNode.getFirstChild();  if(!this.isResolved())  {  return  false;  }  [CE]  >  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(validator!=  null)  {  forAnnotations  <  propertyNode  =  propertyNode.getFirstChild();  if(!this.isResolved())  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(validator!=  null)  {  forAnnotations  <  propertyNode  =  propertyNode.getFirstChild();  if(!this.isResolved())  {  return  false;  }	  return    false;    if(validator!=    null)    {    forAnnotations    <    propertyNode    =    propertyNode.getFirstChild();    if(!this.isResolved())    {    return    true;    }    	non-compiled	[CE]  >  expected	145	None	replace
768	[BUG]  [BUGGY]  if(validator!=  null)  {  forAnnotations  <  propertyNode  =  propertyNode.getLastChild();  if(!this.isResolved())  {  return  true;  }  [CE]  >  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(validator!=  null)  {  forAnnotations  <  propertyNode  =  propertyNode.getLastChild();  if(!this.isResolved())  {  return  true;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(validator!=  null)  {  forAnnotations  <  propertyNode  =  propertyNode.getLastChild();  if(!this.isResolved())  {  return  true;  }	  return    false;    if(validator!=    null)    {    forAnnotations    <    propertyNode    =    propertyNode.getFirstChild();    if(!this.isResolved())    {    return    true;    }    	non-compiled	[CE]  >  expected	145	None	replace
769	[BUG]  [BUGGY]  if(value!=  null)  {  return  false;  forAnnotations  <  propertyNode  =  propertyNode.getLastChild();  if(!this.isResolved())  {  return  true;  }  [CE]  >  expected  [FE]                                  AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(value!=  null)  {  return  false;  forAnnotations  <  propertyNode  =  propertyNode.getLastChild();  if(!this.isResolved())  {  return  true;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(value!=  null)  {  return  false;  forAnnotations  <  propertyNode  =  propertyNode.getLastChild();  if(!this.isResolved())  {  return  true;  }	  return    false;    if(validator!=    null)    {    forAnnotations    <    propertyNode    =    propertyNode.getFirstChild();    if(!this.isResolved())    {    return    true;    }    	non-compiled	[CE]  >  expected	145	None	replace
770	[BUG]  [BUGGY]  if(propertyNode!=  null)  {  return  false;  forAnnotations  <  propertyNode  =  propertyNode.getFirstChild();  if(!this.isResolved())  {  return  true  [CE]  >  expected  [FE]                                    AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(propertyNode!=  null)  {  return  false;  forAnnotations  <  propertyNode  =  propertyNode.getFirstChild();  if(!this.isResolved())  {  return  true  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(propertyNode!=  null)  {  return  false;  forAnnotations  <  propertyNode  =  propertyNode.getFirstChild();  if(!this.isResolved())  {  return  true	  return    false;    if(validator!=    null)    {    forAnnotations    <    propertyNode    =    propertyNode.getFirstChild();    if(!this.isResolved())    {    return    true;    }    	non-compiled	[CE]  >  expected	145	None	replace
771	[BUG]  [BUGGY]  if(this.ignoreForwardReferencedTypes)  {  return  false;  if(isForwardDeclared)  {  forAnnotations  {  propertyNode  =  propertyNode.getFirstChild();  if(propertyNode!=  null)  {  return  false;  }  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.ignoreForwardReferencedTypes)  {  return  false;  if(isForwardDeclared)  {  forAnnotations  {  propertyNode  =  propertyNode.getFirstChild();  if(propertyNode!=  null)  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.ignoreForwardReferencedTypes)  {  return  false;  if(isForwardDeclared)  {  forAnnotations  {  propertyNode  =  propertyNode.getFirstChild();  if(propertyNode!=  null)  {  return  false;  }	  return    false;    if(isForwardDeclared)    {    forAnnotations    {    propertyNode    =    propertyNode.getFirstChild();    if(propertyNode!=    null)    {    return    false;    }    	non-compiled	[CE]  not  a  statement	142	None	replace
772	[BUG]  [BUGGY]  if(this.ignoreForwardReferencedTypes)  {  return  false;  if(isForwardDeclared)  {  forAnnotations  {  propertyNode  =  propertyNode.getFirstChild();  if(propertyNode!=  null)  {  return  false;  }  }  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.ignoreForwardReferencedTypes)  {  return  false;  if(isForwardDeclared)  {  forAnnotations  {  propertyNode  =  propertyNode.getFirstChild();  if(propertyNode!=  null)  {  return  false;  }  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.ignoreForwardReferencedTypes)  {  return  false;  if(isForwardDeclared)  {  forAnnotations  {  propertyNode  =  propertyNode.getFirstChild();  if(propertyNode!=  null)  {  return  false;  }  }	  return    false;    if(isForwardDeclared)    {    forAnnotations    {    propertyNode    =    propertyNode.getFirstChild();    if(propertyNode!=    null)    {    return    false;    }    	non-compiled	[CE]  not  a  statement	142	None	replace
773	[BUG]  [BUGGY]  if(this.isResolved())  {  return  false;  forAnnotations  {  propertyNode  =  propertyNode.getFirstChild();  if(propertyNode!=  null)  {  return  false;  }  }  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.isResolved())  {  return  false;  forAnnotations  {  propertyNode  =  propertyNode.getFirstChild();  if(propertyNode!=  null)  {  return  false;  }  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.isResolved())  {  return  false;  forAnnotations  {  propertyNode  =  propertyNode.getFirstChild();  if(propertyNode!=  null)  {  return  false;  }  }	  return    false;    if(isForwardDeclared)    {    forAnnotations    {    propertyNode    =    propertyNode.getFirstChild();    if(propertyNode!=    null)    {    return    false;    }    	non-compiled	[CE]  not  a  statement	142	None	replace
774	[BUG]  [BUGGY]  if(this.isReferencedType())  {  JSType  referencedType  =  validator.getReferencedType();  if(referencedType!=  null)  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.isReferencedType())  {  JSType  referencedType  =  validator.getReferencedType();  if(referencedType!=  null)  {  return  true;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.isReferencedType())  {  JSType  referencedType  =  validator.getReferencedType();  if(referencedType!=  null)  {  return  true;  }	  return    false;    if(this.isResolved())    {    JSType    referencedType    =    validator.getReferencedType();    if(referencedType!=    null)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
775	[BUG]  [BUGGY]  if(this.forAnonymousTypes!=  validator)  {  return  false;  }  [CE]  cannot  find  symbol  forAnonymousTypes  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.forAnonymousTypes!=  validator)  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.forAnonymousTypes!=  validator)  {  return  false;  }	  if(this.forAnnotations!=    validator)    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol  forAnonymousTypes	45	None	replace
776	[BUG]  [BUGGY]  Predicate  <?>  propertyNode  =  getPropertyNode(value).resolve();  [CE]  cannot  find  symbol  value  [FE]                                      AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  Predicate  <?>  propertyNode  =  getPropertyNode(value).resolve();  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	Predicate  <?>  propertyNode  =  getPropertyNode(value).resolve();	  Predicate    <?>    propertyNode    =    getPropertyNode(propertyName).resolve();    	non-compiled	[CE]  cannot  find  symbol  value	138	None	replace
777	[BUG]  [BUGGY]  if(this.referencedTypes!=  null)  {  if(!this.isResolved())  {  return  false;  }  else  {  Predicate  <  JSType>  property  =  this.referencedTypes.get(reference);  if(property!=  null)  {  return  true  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.referencedTypes!=  null)  {  if(!this.isResolved())  {  return  false;  }  else  {  Predicate  <  JSType>  property  =  this.referencedTypes.get(reference);  if(property!=  null)  {  return  true  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.referencedTypes!=  null)  {  if(!this.isResolved())  {  return  false;  }  else  {  Predicate  <  JSType>  property  =  this.referencedTypes.get(reference);  if(property!=  null)  {  return  true	  if(this.isResolved())    {    return    false;    }    else    {    Predicate    <    JSType>    property    =    this.referencedTypes.get(reference);    if(property!=    null)    {    return    true;    }    	non-compiled	[CE]  ';'  expected	102	None	replace
778	[BUG]  [BUGGY]  if(this.referencedTypes!=  null)  {  if(this.isResolved())  {  return  false;  }  else  {  Predicate  <  JSType>  property  =  this.referencedTypes.get(reference);  if(property  ==  null)  {  return  true  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.referencedTypes!=  null)  {  if(this.isResolved())  {  return  false;  }  else  {  Predicate  <  JSType>  property  =  this.referencedTypes.get(reference);  if(property  ==  null)  {  return  true  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.referencedTypes!=  null)  {  if(this.isResolved())  {  return  false;  }  else  {  Predicate  <  JSType>  property  =  this.referencedTypes.get(reference);  if(property  ==  null)  {  return  true	  if(this.isResolved())    {    return    false;    }    else    {    Predicate    <    JSType>    property    =    this.referencedTypes.get(reference);    if(property!=    null)    {    return    true;    }    	non-compiled	[CE]  ';'  expected	102	None	replace
779	[BUG]  [BUGGY]  Predicate  <?>  property  =  this.referencedTypes.get(reference);  if(property!=  null)  {  return  true;  }  [CE]  cannot  find  symbol  referencedTypes  [FE]                        AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  Predicate  <?>  property  =  this.referencedTypes.get(reference);  if(property!=  null)  {  return  true;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	Predicate  <?>  property  =  this.referencedTypes.get(reference);  if(property!=  null)  {  return  true;  }	  if(this.isResolved())    {    return    false;    }    else    {    Predicate    <    JSType>    property    =    this.referencedTypes.get(reference);    if(property!=    null)    {    return    true;    }    	non-compiled	[CE]  cannot  find  symbol  referencedTypes	102	None	replace
780	[BUG]  [BUGGY]  if(this.validator!=  validator)  {  return  true;  }  [CE]  missing  return  statement  [FE]                      AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.validator!=  validator)  {  return  true;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.validator!=  validator)  {  return  true;  }	  if(!this.isValidator)    {    return    true;    }    	non-compiled	[CE]  missing  return  statement	117	None	replace
781	[BUG]  [BUGGY]  return  super.setValidator(this.validator);  if(this.isResolved())  {  return  super.setValidator(this.validator);  }  else  {  return  super.setValidator(this.validator);  }  [CE]  unreachable  statement  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  return  super.setValidator(this.validator);  if(this.isResolved())  {  return  super.setValidator(this.validator);  }  else  {  return  super.setValidator(this.validator);  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	return    super.setValidator(this.validator);    if(this.isResolved())  {  return  super.setValidator(this.validator);  }  else  {  return  super.setValidator(this.validator);  }	  timeout    	non-compiled	[CE]  unreachable  statement	94	None	add
782	[BUG]  [BUGGY]  return  super.setValidator(this.validator);  if(this.isResolved())  {  Predicate  <  JSType>  property  =  getProperty(reference);  if(property!=  null)  {  return  super.setValidator(validator);  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  return  super.setValidator(this.validator);  if(this.isResolved())  {  Predicate  <  JSType>  property  =  getProperty(reference);  if(property!=  null)  {  return  super.setValidator(validator);  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	return    super.setValidator(this.validator);    if(this.isResolved())  {  Predicate  <  JSType>  property  =  getProperty(reference);  if(property!=  null)  {  return  super.setValidator(validator);  }	  timeout    	non-compiled	[CE]  illegal  start  of  expression	94	None	add
783	[BUG]  [BUGGY]  return  super.setValidator(this.validator);  if(this.isResolved())  {  Predicate  <  JSType>  property  =  getProperty(reference);  if(property!=  null)  {  return  super.setValidator(value);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  return  super.setValidator(this.validator);  if(this.isResolved())  {  Predicate  <  JSType>  property  =  getProperty(reference);  if(property!=  null)  {  return  super.setValidator(value);  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	return    super.setValidator(this.validator);    if(this.isResolved())  {  Predicate  <  JSType>  property  =  getProperty(reference);  if(property!=  null)  {  return  super.setValidator(value);  }	  timeout    	non-compiled	[CE]  illegal  start  of  expression	94	None	add
784	[BUG]  [BUGGY]  return  super.setValidator(this.validator);  if(this.isResolved())  {  Predicate  <  JSType>  property  =  this.validator.getProperty();  if(property!=  null)  {  return  super.setValidator(property);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  return  super.setValidator(this.validator);  if(this.isResolved())  {  Predicate  <  JSType>  property  =  this.validator.getProperty();  if(property!=  null)  {  return  super.setValidator(property);  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	return    super.setValidator(this.validator);    if(this.isResolved())  {  Predicate  <  JSType>  property  =  this.validator.getProperty();  if(property!=  null)  {  return  super.setValidator(property);  }	  timeout    	non-compiled	[CE]  illegal  start  of  expression	94	None	add
785	[BUG]  [BUGGY]  return  super.setValidator(this.validator);  if(this.isResolved())  {  Predicate  <  JSType>  property  =  getProperty(reference);  if(property!=  null)  {  return  super.setValidator(property);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  return  super.setValidator(this.validator);  if(this.isResolved())  {  Predicate  <  JSType>  property  =  getProperty(reference);  if(property!=  null)  {  return  super.setValidator(property);  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	return    super.setValidator(this.validator);    if(this.isResolved())  {  Predicate  <  JSType>  property  =  getProperty(reference);  if(property!=  null)  {  return  super.setValidator(property);  }	  timeout    	non-compiled	[CE]  illegal  start  of  expression	94	None	add
786	[BUG]  [BUGGY]  return  super.setValidator(this.validator);  if(this.isResolved())  {  Predicate  <  JSType>  property  =  getProperty(reference);  if(property!=  null)  {  return  super.setValidator(prototype);  }  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  return  super.setValidator(this.validator);  if(this.isResolved())  {  Predicate  <  JSType>  property  =  getProperty(reference);  if(property!=  null)  {  return  super.setValidator(prototype);  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	return    super.setValidator(this.validator);    if(this.isResolved())  {  Predicate  <  JSType>  property  =  getProperty(reference);  if(property!=  null)  {  return  super.setValidator(prototype);  }	  timeout    	non-compiled	[CE]  illegal  start  of  expression	94	None	add
787	[BUG]  [BUGGY]  if(this.validator!=  null)  {  return(this.isResolved()  &&  this.validator!=  null);  }  [CE]  missing  return  statement  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.validator!=  null)  {  return(this.isResolved()  &&  this.validator!=  null);  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.validator!=  null)  {  return(this.isResolved()  &&  this.validator!=  null);  }	  if(this.isResolved())    {    return(this.isResolved()    &&    this.validator!=    null);    }    	non-compiled	[CE]  missing  return  statement	58	None	replace
788	[BUG]  [BUGGY]  if(this.validator!=  null)  {  return(this.isResolved()  &&  validator!=  null);  }  [CE]  missing  return  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.validator!=  null)  {  return(this.isResolved()  &&  validator!=  null);  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.validator!=  null)  {  return(this.isResolved()  &&  validator!=  null);  }	  if(this.isResolved())    {    return(this.isResolved()    &&    this.validator!=    null);    }    	non-compiled	[CE]  missing  return  statement	58	None	replace
789	[BUG]  [BUGGY]  Predicate  <  JSType>  referencedType  =  this.referencedType.getReferencedType();  [CE]  referencedType  has  private  access  in  ProxyObjectType  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  Predicate  <  JSType>  referencedType  =  this.referencedType.getReferencedType();  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	Predicate  <  JSType>  referencedType  =  this.referencedType.getReferencedType();	  if(this.isResolved())    {    return    super.setValidator(validator);    }    else    {    Predicate    <    JSType>    referencedType    =    this.referencedType.getReferencedType();    if(referencedType!=    null)    {    return    reference    	non-compiled	[CE]  referencedType  has  private  access  in  ProxyObjectType	96	None	replace
790	[BUG]  [BUGGY]  if(referencedType!=  null)  {  if(this.isResolved())  {  return  super.setValidator(validator);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(referencedType!=  null)  {  if(this.isResolved())  {  return  super.setValidator(validator);  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(referencedType!=  null)  {  if(this.isResolved())  {  return  super.setValidator(validator);  }	  if(this.isResolved())    {    return    super.setValidator(validator);    }    else    {    Predicate    <    JSType>    referencedType    =    this.referencedType.getReferencedType();    if(referencedType!=    null)    {    return    reference    	non-compiled	[CE]  illegal  start  of  expression	96	None	replace
791	[BUG]  [BUGGY]  if(referencedType  ==  null)  {  if(this.isResolved())  {  return  super.setValidator(validator);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(referencedType  ==  null)  {  if(this.isResolved())  {  return  super.setValidator(validator);  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(referencedType  ==  null)  {  if(this.isResolved())  {  return  super.setValidator(validator);  }	  if(this.isResolved())    {    return    super.setValidator(validator);    }    else    {    Predicate    <    JSType>    referencedType    =    this.referencedType.getReferencedType();    if(referencedType!=    null)    {    return    reference    	non-compiled	[CE]  illegal  start  of  expression	96	None	replace
792	[BUG]  [BUGGY]  if(this.referencedType!=  null)  {  if(isForwardDeclared())  {  return  super.setValidator(validator);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.referencedType!=  null)  {  if(isForwardDeclared())  {  return  super.setValidator(validator);  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.referencedType!=  null)  {  if(isForwardDeclared())  {  return  super.setValidator(validator);  }	  if(this.isResolved())    {    return    super.setValidator(validator);    }    else    {    Predicate    <    JSType>    referencedType    =    this.referencedType.getReferencedType();    if(referencedType!=    null)    {    return    reference    	non-compiled	[CE]  illegal  start  of  expression	96	None	replace
793	[BUG]  [BUGGY]  if(this.referencedType!=  null)  {  if(!this.isResolved())  {  return  super.setValidator(validator);  }  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.referencedType!=  null)  {  if(!this.isResolved())  {  return  super.setValidator(validator);  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.referencedType!=  null)  {  if(!this.isResolved())  {  return  super.setValidator(validator);  }	  if(this.isResolved())    {    return    super.setValidator(validator);    }    else    {    Predicate    <    JSType>    referencedType    =    this.referencedType.getReferencedType();    if(referencedType!=    null)    {    return    reference    	non-compiled	[CE]  illegal  start  of  expression	96	None	replace
794	[BUG]  [BUGGY]  return(validator.isValidator()  &&  this.validator!=  null);  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  return(validator.isValidator()  &&  this.validator!=  null);  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	return(validator.isValidator()  &&  this.validator!=  null);	  return(this.isValidator()    &&    validator!=    null);    	non-compiled	[CE]  cannot  find  symbol	130	None	replace
795	[BUG]  [BUGGY]  return(value.isValidator()  &&  validator!=  null);  [CE]  cannot  find  symbol  value  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  return(value.isValidator()  &&  validator!=  null);  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	return(value.isValidator()  &&  validator!=  null);	  return(this.isValidator()    &&    validator!=    null);    	non-compiled	[CE]  cannot  find  symbol  value	130	None	replace
796	[BUG]  [BUGGY]  if(this.type!=  null)  {  return  super.setValidator(validator);  }  [CE]  cannot  find  symbol  type  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.type!=  null)  {  return  super.setValidator(validator);  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.type!=  null)  {  return  super.setValidator(validator);  }	  if(this.slotType!=    null)    {    return    super.setValidator(validator);    }    	non-compiled	[CE]  cannot  find  symbol  type	122	None	replace
797	[BUG]  [BUGGY]  if(this.isForwardDeclared())  {  Predicate  <  JSType>  propertyNode  =  this.getPropertyNode(referenced);  if(propertyNode!=  null)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                                  AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.isForwardDeclared())  {  Predicate  <  JSType>  propertyNode  =  this.getPropertyNode(referenced);  if(propertyNode!=  null)  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.isForwardDeclared())  {  Predicate  <  JSType>  propertyNode  =  this.getPropertyNode(referenced);  if(propertyNode!=  null)  {  return  false;  }	  if(this.isResolved())    {    Predicate    <    JSType>    propertyNode    =    this.getPropertyNode(referenced);    if(propertyNode!=    null)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	112	None	replace
798	[BUG]  [BUGGY]  Predicate  <  JSType>  propertyNode  =  this.getPropertyNode(propertyNode);  if(propertyNode!=  null)  {  return  false;  }  [CE]  method  getPropertyNode  in  class  ObjectType  cannot  be  applied  to  given  types;  [FE]                                    AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  Predicate  <  JSType>  propertyNode  =  this.getPropertyNode(propertyNode);  if(propertyNode!=  null)  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	Predicate  <  JSType>  propertyNode  =  this.getPropertyNode(propertyNode);  if(propertyNode!=  null)  {  return  false;  }	  if(this.isResolved())    {    Predicate    <    JSType>    propertyNode    =    this.getPropertyNode(referenced);    if(propertyNode!=    null)    {    return    false;    }    	non-compiled	[CE]  method  getPropertyNode  in  class  ObjectType  cannot  be  applied  to  given  types;	112	None	replace
799	[BUG]  [BUGGY]  Predicate  <  JSType>  propertyNode  =  this.referencedTypes.get(reference);  [CE]  cannot  find  symbol  referencedTypes  [FE]                            AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  Predicate  <  JSType>  propertyNode  =  this.referencedTypes.get(reference);  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	Predicate  <  JSType>  propertyNode  =  this.referencedTypes.get(reference);	  if(this.isResolved())    {    Predicate    <    JSType>    propertyNode    =    this.referencedTypes.get(reference);    if(propertyNode!=    null)    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol  referencedTypes	109	None	replace
800	[BUG]  [BUGGY]  this.referencedTypes.put(reference,  propertyNode);  if(validator!=  null)  {  return  false;  }  [CE]  cannot  find  symbol  propertyNode  [FE]                              AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  this.referencedTypes.put(reference,  propertyNode);  if(validator!=  null)  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	this.referencedTypes.put(reference,  propertyNode);  if(validator!=  null)  {  return  false;  }	  if(this.isResolved())    {    Predicate    <    JSType>    propertyNode    =    this.referencedTypes.get(reference);    if(propertyNode!=    null)    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol  propertyNode	109	None	replace
801	[BUG]  [BUGGY]  Predicate  <?>  property  =  getProperty(propertyName);  [CE]  cannot  find  symbol  propertyName  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  Predicate  <?>  property  =  getProperty(propertyName);  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	Predicate  <?>  property  =  getProperty(propertyName);	  if(this.isResolved())    {    return    super.setValidator(validator);    }    else    {    for(int    i    =    0;    i    <    this.isResolved();    ++i)    {    return    super.setValidator(validator);    }    	non-compiled	[CE]  cannot  find  symbol  propertyName	119	None	replace
802	[BUG]  [BUGGY]  Predicate  <?>  property  =  validator.getProperty(propertyName);  [CE]  cannot  find  symbol  propertyName  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  Predicate  <?>  property  =  validator.getProperty(propertyName);  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	Predicate  <?>  property  =  validator.getProperty(propertyName);	  if(this.isResolved())    {    return    super.setValidator(validator);    }    else    {    for(int    i    =    0;    i    <    this.isResolved();    ++i)    {    return    super.setValidator(validator);    }    	non-compiled	[CE]  cannot  find  symbol  propertyName	119	None	replace
803	[BUG]  [BUGGY]  if(validator!=  null)  {  return  this.isResolved();  }  [CE]  missing  return  statement  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(validator!=  null)  {  return  this.isResolved();  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(validator!=  null)  {  return  this.isResolved();  }	  return(this.isResolved()    &&    this.validator!=    null);    if(this.isResolved()    &&    this.validator!=    null)    {    return(this.isResolved()    &&    this.validator!=    null);    }    	non-compiled	[CE]  missing  return  statement	27	None	replace
804	[BUG]  [BUGGY]  timeout  [FE]                      AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  return(this.validator!=  null);  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	add	return(this.validator!=  null);	  return(this.isResolved()    &&    this.validator!=    null);    if(this.isResolved()    &&    this.validator!=    null)    {    return(this.isResolved()    &&    this.validator!=    null);    }    	compilable	timeout	27	1	replace
805	[BUG]  [BUGGY]  return(this.validator!=  null);  timeout  [FE]                      AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  return(this.validator!=  null);  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	return(this.validator!=  null);	  return(this.isResolved()    &&    this.validator!=    null);    if(this.isResolved()    &&    this.validator!=    null)    {    return(this.isResolved()    &&    this.validator!=    null);    }    	compilable	timeout	27	1	replace
806	[BUG]  [BUGGY]  this.propertyContinuations  =  propertyContinuations.iterator().next();  [CE]  incompatible  types  [FE]                      AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  this.propertyContinuations  =  propertyContinuations.iterator().next();  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	this.propertyContinuations  =  propertyContinuations.iterator().next();	  if(this.propertyContinuations!=    null)    {    return    false;    }    	non-compiled	[CE]  incompatible  types	11	None	replace
807	[BUG]  [BUGGY]  if(this.referencedType!=  null)  {  return  super.setValidator(validator);  if(this.isResolved())  {  Predicate  <  JSType>  property  =  this.referencedType.getProperty(propertyName);  if(prop  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.referencedType!=  null)  {  return  super.setValidator(validator);  if(this.isResolved())  {  Predicate  <  JSType>  property  =  this.referencedType.getProperty(propertyName);  if(prop  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.referencedType!=  null)  {  return  super.setValidator(validator);  if(this.isResolved())  {  Predicate  <  JSType>  property  =  this.referencedType.getProperty(propertyName);  if(prop	  return    super.setValidator(validator);    if(this.isResolved())    {    Predicate    <    JSType>    property    =    this.referencedType.getProperty(propertyName);    if(property    ==    null)    {    return    super.setValidator(property);    }    	non-compiled	[CE]  ')'  expected	49	None	replace
808	[BUG]  [BUGGY]  if(validator!=  null)  {  return  super.setValidator(validator);  if(this.isResolved())  {  Predicate  <  JSType>  property  =  this.referencedType.getProperty(propertyName);  if(prop  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(validator!=  null)  {  return  super.setValidator(validator);  if(this.isResolved())  {  Predicate  <  JSType>  property  =  this.referencedType.getProperty(propertyName);  if(prop  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(validator!=  null)  {  return  super.setValidator(validator);  if(this.isResolved())  {  Predicate  <  JSType>  property  =  this.referencedType.getProperty(propertyName);  if(prop	  return    super.setValidator(validator);    if(this.isResolved())    {    Predicate    <    JSType>    property    =    this.referencedType.getProperty(propertyName);    if(property    ==    null)    {    return    super.setValidator(property);    }    	non-compiled	[CE]  ')'  expected	49	None	replace
809	[BUG]  [BUGGY]  if(validator!=  null)  {  return  super.setValidator(validator);  if(this.isResolved())  {  Predicate  <  JSType>  property  =  this.referencedType.getProperty(propertyName);  if(property  ==  null)  {  return  super  [CE]  '.'  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(validator!=  null)  {  return  super.setValidator(validator);  if(this.isResolved())  {  Predicate  <  JSType>  property  =  this.referencedType.getProperty(propertyName);  if(property  ==  null)  {  return  super  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(validator!=  null)  {  return  super.setValidator(validator);  if(this.isResolved())  {  Predicate  <  JSType>  property  =  this.referencedType.getProperty(propertyName);  if(property  ==  null)  {  return  super	  return    super.setValidator(validator);    if(this.isResolved())    {    Predicate    <    JSType>    property    =    this.referencedType.getProperty(propertyName);    if(property    ==    null)    {    return    super.setValidator(property);    }    	non-compiled	[CE]  '.'  expected	49	None	replace
810	[BUG]  [BUGGY]  if(validator!=  null)  {  return  super.setValidator(validator);  if(this.isResolved())  {  Predicate  <  JSType>  property  =  this.referencedType.getProperty(propertyName);  if(property  ==  nu  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(validator!=  null)  {  return  super.setValidator(validator);  if(this.isResolved())  {  Predicate  <  JSType>  property  =  this.referencedType.getProperty(propertyName);  if(property  ==  nu  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(validator!=  null)  {  return  super.setValidator(validator);  if(this.isResolved())  {  Predicate  <  JSType>  property  =  this.referencedType.getProperty(propertyName);  if(property  ==  nu	  return    super.setValidator(validator);    if(this.isResolved())    {    Predicate    <    JSType>    property    =    this.referencedType.getProperty(propertyName);    if(property    ==    null)    {    return    super.setValidator(property);    }    	non-compiled	[CE]  ')'  expected	49	None	replace
811	[BUG]  [BUGGY]  if(!this.isResolved())  {  return  false;  if(this.forAnnotations!=  forAnnotations)  {  forAnnotations  ignoreForwardReferencedTypes  =  this.ignoreForwardReferencedTypes;  if(ignoreForwardReferencedTypes  ==  nu  [CE]  ')'  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(!this.isResolved())  {  return  false;  if(this.forAnnotations!=  forAnnotations)  {  forAnnotations  ignoreForwardReferencedTypes  =  this.ignoreForwardReferencedTypes;  if(ignoreForwardReferencedTypes  ==  nu  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(!this.isResolved())  {  return  false;  if(this.forAnnotations!=  forAnnotations)  {  forAnnotations  ignoreForwardReferencedTypes  =  this.ignoreForwardReferencedTypes;  if(ignoreForwardReferencedTypes  ==  nu	  return    false;    if(this.forAnnotations!=    forAnnotations)    {    forAnnotations    ignoreForwardReferencedTypes    =    this.ignoreForwardReferencedTypes;    if(ignoreForwardReferencedTypes    ==    null)    {    return    true;    }    	non-compiled	[CE]  ')'  expected	8	None	replace
812	[BUG]  [BUGGY]  if(!this.isResolved())  {  return  false;  if(this.forAnnotations!=  forAnnotations)  {  forAnnotations  ignoreForwardReferencedTypes  =  this.ignoreForwardReferencedTypes;  if(ignoreForwardReferencedTypes  ==  null)  {  return  true  [CE]  ';'  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(!this.isResolved())  {  return  false;  if(this.forAnnotations!=  forAnnotations)  {  forAnnotations  ignoreForwardReferencedTypes  =  this.ignoreForwardReferencedTypes;  if(ignoreForwardReferencedTypes  ==  null)  {  return  true  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(!this.isResolved())  {  return  false;  if(this.forAnnotations!=  forAnnotations)  {  forAnnotations  ignoreForwardReferencedTypes  =  this.ignoreForwardReferencedTypes;  if(ignoreForwardReferencedTypes  ==  null)  {  return  true	  return    false;    if(this.forAnnotations!=    forAnnotations)    {    forAnnotations    ignoreForwardReferencedTypes    =    this.ignoreForwardReferencedTypes;    if(ignoreForwardReferencedTypes    ==    null)    {    return    true;    }    	non-compiled	[CE]  ';'  expected	8	None	replace
813	[BUG]  [BUGGY]  if(this.forAnnotations  ==  forAnnotations)  {  forAnnotations  ignoreForwardReferencedTypes  =  this.ignoreForwardReferencedTypes;  if(ignoreForwardReferencedTypes  ==  null)  {  return  true  [CE]  ';'  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.forAnnotations  ==  forAnnotations)  {  forAnnotations  ignoreForwardReferencedTypes  =  this.ignoreForwardReferencedTypes;  if(ignoreForwardReferencedTypes  ==  null)  {  return  true  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.forAnnotations  ==  forAnnotations)  {  forAnnotations  ignoreForwardReferencedTypes  =  this.ignoreForwardReferencedTypes;  if(ignoreForwardReferencedTypes  ==  null)  {  return  true	  return    false;    if(this.forAnnotations!=    forAnnotations)    {    forAnnotations    ignoreForwardReferencedTypes    =    this.ignoreForwardReferencedTypes;    if(ignoreForwardReferencedTypes    ==    null)    {    return    true;    }    	non-compiled	[CE]  ';'  expected	8	None	replace
814	[BUG]  [BUGGY]  if(this.forAnnotations!=  invalidateForwardReferencedTypes)  {  return  false;  }  [CE]  cannot  find  symbol  forAnnotations  [FE]            AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.forAnnotations!=  invalidateForwardReferencedTypes)  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.forAnnotations!=  invalidateForwardReferencedTypes)  {  return  false;  }	  if(this.forAnnotations!=    forAnnotations)    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol  forAnnotations	44	None	replace
815	[BUG]  [BUGGY]  if(this.forAnnotations!=  false)  {  return  false;  }  [CE]  cannot  find  symbol  forAnnotations  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.forAnnotations!=  false)  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.forAnnotations!=  false)  {  return  false;  }	  if(this.forAnnotations!=    forAnnotations)    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol  forAnnotations	44	None	replace
816	[BUG]  [BUGGY]  if(this.isForwardDeclared())  {  Predicate  <  JSType>  propertyNode  =  this.getPropertyNode(propertyName);  if(propertyNode!=  null)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                                    AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.isForwardDeclared())  {  Predicate  <  JSType>  propertyNode  =  this.getPropertyNode(propertyName);  if(propertyNode!=  null)  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.isForwardDeclared())  {  Predicate  <  JSType>  propertyNode  =  this.getPropertyNode(propertyName);  if(propertyNode!=  null)  {  return  false;  }	  if(this.isResolved())    {    Predicate    <    JSType>    propertyNode    =    this.getPropertyNode(propertyName);    if(propertyNode!=    null)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	113	None	replace
817	[BUG]  [BUGGY]  if(validator!=  null)  {  if(this.isResolved())  {  Predicate  <  JSType>  propertyNode  =  this.getPropertyNode(propertyName);  if(propertyNode!=  null)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                                      AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(validator!=  null)  {  if(this.isResolved())  {  Predicate  <  JSType>  propertyNode  =  this.getPropertyNode(propertyName);  if(propertyNode!=  null)  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(validator!=  null)  {  if(this.isResolved())  {  Predicate  <  JSType>  propertyNode  =  this.getPropertyNode(propertyName);  if(propertyNode!=  null)  {  return  false;  }	  if(this.isResolved())    {    Predicate    <    JSType>    propertyNode    =    this.getPropertyNode(propertyName);    if(propertyNode!=    null)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	113	None	replace
818	[BUG]  [BUGGY]  if(this.isReferenced())  {  Predicate  <  JSType>  propertyNode  =  this.getPropertyNode(propertyName);  if(propertyNode!=  null)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                                        AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.isReferenced())  {  Predicate  <  JSType>  propertyNode  =  this.getPropertyNode(propertyName);  if(propertyNode!=  null)  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.isReferenced())  {  Predicate  <  JSType>  propertyNode  =  this.getPropertyNode(propertyName);  if(propertyNode!=  null)  {  return  false;  }	  if(this.isResolved())    {    Predicate    <    JSType>    propertyNode    =    this.getPropertyNode(propertyName);    if(propertyNode!=    null)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	113	None	replace
819	[BUG]  [BUGGY]  Predicate  <  JSType>  propertyNode  =  this.getPropertyNode(propertyName);  [CE]  cannot  find  symbol  propertyName  [FE]                                          AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  Predicate  <  JSType>  propertyNode  =  this.getPropertyNode(propertyName);  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	Predicate  <  JSType>  propertyNode  =  this.getPropertyNode(propertyName);	  if(this.isResolved())    {    Predicate    <    JSType>    propertyNode    =    this.getPropertyNode(propertyName);    if(propertyNode!=    null)    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol  propertyName	113	None	replace
820	[BUG]  [BUGGY]  return(this.isResolved()  &&  validator  ==  null);  if(this.isResolved()  &&  validator  ==  null)  {  return(this.isResolved()  &&  validator  ==  null);  }  [CE]  unreachable  statement  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  return(this.isResolved()  &&  validator  ==  null);  if(this.isResolved()  &&  validator  ==  null)  {  return(this.isResolved()  &&  validator  ==  null);  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	return(this.isResolved()    &&    validator    ==    null);    if(this.isResolved()  &&  validator  ==  null)  {  return(this.isResolved()  &&  validator  ==  null);  }	  timeout    	non-compiled	[CE]  unreachable  statement	61	None	add
821	[BUG]  [BUGGY]  return(this.isResolved()  &&  validator  ==  null);  if(this.isResolved()  &&  validator  ==  null)  {  return(this.isResolved()  &&  validator!=  null);  }  [CE]  unreachable  statement  [FE]                      AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  return(this.isResolved()  &&  validator  ==  null);  if(this.isResolved()  &&  validator  ==  null)  {  return(this.isResolved()  &&  validator!=  null);  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	return(this.isResolved()    &&    validator    ==    null);    if(this.isResolved()  &&  validator  ==  null)  {  return(this.isResolved()  &&  validator!=  null);  }	  timeout    	non-compiled	[CE]  unreachable  statement	61	None	add
822	[BUG]  [BUGGY]  return(this.isResolved()  &&  validator  ==  null);  if(this.isResolved()  &&  validator  ==  null)  {  return  this.isResolved()  &&  validator  ==  null);  }  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  return(this.isResolved()  &&  validator  ==  null);  if(this.isResolved()  &&  validator  ==  null)  {  return  this.isResolved()  &&  validator  ==  null);  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	return(this.isResolved()    &&    validator    ==    null);    if(this.isResolved()  &&  validator  ==  null)  {  return  this.isResolved()  &&  validator  ==  null);  }	  timeout    	non-compiled	[CE]  ';'  expected	61	None	add
823	[BUG]  [BUGGY]  return(this.isResolved()  &&  validator  ==  null);  if(this.isResolved()  &&  validator!=  null)  {  return(this.isResolved()  &&  validator  ==  null);  }  [CE]  unreachable  statement  [FE]                          AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  return(this.isResolved()  &&  validator  ==  null);  if(this.isResolved()  &&  validator!=  null)  {  return(this.isResolved()  &&  validator  ==  null);  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	return(this.isResolved()    &&    validator    ==    null);    if(this.isResolved()  &&  validator!=  null)  {  return(this.isResolved()  &&  validator  ==  null);  }	  timeout    	non-compiled	[CE]  unreachable  statement	61	None	add
824	[BUG]  [BUGGY]  if(this.forAnnotations!=  forAnnotations)  {  forAnnotations  ignoreForwardReferencedTypes  =  this.ignoreForwardReferencedTypes;  if(ignoreForwardReferencedTypes!=  null)  {  return  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.forAnnotations!=  forAnnotations)  {  forAnnotations  ignoreForwardReferencedTypes  =  this.ignoreForwardReferencedTypes;  if(ignoreForwardReferencedTypes!=  null)  {  return  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.forAnnotations!=  forAnnotations)  {  forAnnotations  ignoreForwardReferencedTypes  =  this.ignoreForwardReferencedTypes;  if(ignoreForwardReferencedTypes!=  null)  {  return	  return    false;    if(this.forAnnotations!=    forAnnotations)    {    forAnnotations    ignoreForwardReferencedTypes    =    this.ignoreForwardReferencedTypes;    if(ignoreForwardReferencedTypes!=    null)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
825	[BUG]  [BUGGY]  if(this.isResolved())  {  return  false;  forAnnotations  {  propertyNode  =  propertyNode.getFirstChild();  if(propertyNode!=  propertyNode)  {  return  false;  }  }  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.isResolved())  {  return  false;  forAnnotations  {  propertyNode  =  propertyNode.getFirstChild();  if(propertyNode!=  propertyNode)  {  return  false;  }  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.isResolved())  {  return  false;  forAnnotations  {  propertyNode  =  propertyNode.getFirstChild();  if(propertyNode!=  propertyNode)  {  return  false;  }  }	  return    false;    if(isForwardDeclared)    {    forAnnotations    {    propertyNode    =    propertyNode.getFirstChild();    if(propertyNode!=    propertyNode)    {    return    false;    }    	non-compiled	[CE]  not  a  statement	144	None	replace
826	[BUG]  [BUGGY]  if(!this.isResolved())  {  return  false;  forAnnotations  {  propertyNode  =  propertyNode.getFirstChild();  if(propertyNode!=  propertyNode)  {  return  false;  }  }  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(!this.isResolved())  {  return  false;  forAnnotations  {  propertyNode  =  propertyNode.getFirstChild();  if(propertyNode!=  propertyNode)  {  return  false;  }  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(!this.isResolved())  {  return  false;  forAnnotations  {  propertyNode  =  propertyNode.getFirstChild();  if(propertyNode!=  propertyNode)  {  return  false;  }  }	  return    false;    if(isForwardDeclared)    {    forAnnotations    {    propertyNode    =    propertyNode.getFirstChild();    if(propertyNode!=    propertyNode)    {    return    false;    }    	non-compiled	[CE]  not  a  statement	144	None	replace
827	[BUG]  [BUGGY]  if(this.isForwardDeclared())  {  Predicate  <  JSType>  referencedType  =  validator.getReferencedType();  if(referencedType  ==  null)  {  return  referencedType.setValidator(value);  }  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.isForwardDeclared())  {  Predicate  <  JSType>  referencedType  =  validator.getReferencedType();  if(referencedType  ==  null)  {  return  referencedType.setValidator(value);  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.isForwardDeclared())  {  Predicate  <  JSType>  referencedType  =  validator.getReferencedType();  if(referencedType  ==  null)  {  return  referencedType.setValidator(value);  }	  if(this.isResolved())    {    Predicate    <    JSType>    referencedType    =    validator.getReferencedType();    if(referencedType    ==    null)    {    return    referencedType.setValidator(value);    }    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
828	[BUG]  [BUGGY]  if(this.isReferenced())  {  Predicate  <  JSType>  referencedType  =  validator.getReferencedType();  if(referencedType  ==  null)  {  return  referencedType.setValidator(value);  }  [CE]  illegal  start  of  expression  [FE]                                AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.isReferenced())  {  Predicate  <  JSType>  referencedType  =  validator.getReferencedType();  if(referencedType  ==  null)  {  return  referencedType.setValidator(value);  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.isReferenced())  {  Predicate  <  JSType>  referencedType  =  validator.getReferencedType();  if(referencedType  ==  null)  {  return  referencedType.setValidator(value);  }	  if(this.isResolved())    {    Predicate    <    JSType>    referencedType    =    validator.getReferencedType();    if(referencedType    ==    null)    {    return    referencedType.setValidator(value);    }    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
829	[BUG]  [BUGGY]  if(this.isForwardDeclared())  {  Predicate  <  JSType>  referencedType  =  validator.getReferencedType();  if(referencedType!=  null)  {  return  referencedType.setValidator(value);  }  [CE]  illegal  start  of  expression  [FE]                                  AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.isForwardDeclared())  {  Predicate  <  JSType>  referencedType  =  validator.getReferencedType();  if(referencedType!=  null)  {  return  referencedType.setValidator(value);  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.isForwardDeclared())  {  Predicate  <  JSType>  referencedType  =  validator.getReferencedType();  if(referencedType!=  null)  {  return  referencedType.setValidator(value);  }	  if(this.isResolved())    {    Predicate    <    JSType>    referencedType    =    validator.getReferencedType();    if(referencedType    ==    null)    {    return    referencedType.setValidator(value);    }    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
830	[BUG]  [BUGGY]  if(this.isReferenced())  {  Predicate  <  JSType>  referencedType  =  validator.getReferencedType();  if(referencedType!=  null)  {  return  referencedType.setValidator(value);  }  [CE]  illegal  start  of  expression  [FE]                                    AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.isReferenced())  {  Predicate  <  JSType>  referencedType  =  validator.getReferencedType();  if(referencedType!=  null)  {  return  referencedType.setValidator(value);  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.isReferenced())  {  Predicate  <  JSType>  referencedType  =  validator.getReferencedType();  if(referencedType!=  null)  {  return  referencedType.setValidator(value);  }	  if(this.isResolved())    {    Predicate    <    JSType>    referencedType    =    validator.getReferencedType();    if(referencedType    ==    null)    {    return    referencedType.setValidator(value);    }    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
831	[BUG]  [BUGGY]  if(this.forTypes!=  null)  {  return  false;  }  [CE]  cannot  find  symbol  forTypes  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.forTypes!=  null)  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.forTypes!=  null)  {  return  false;  }	  if(this.forAnonymousTypes!=    null)    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol  forTypes	73	None	replace
832	[BUG]  [BUGGY]  if(this.name!=  null)  {  return  false;  }  [CE]  cannot  find  symbol  name  [FE]                        AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.name!=  null)  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.name!=  null)  {  return  false;  }	  if(this.value!=    null)    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol  name	12	None	replace
833	[BUG]  [BUGGY]  if(this.isResolved())  {  return  false;  }  else  {  Predicate  <  JSType>  referencedType  =  getReferencedType(referenced);  if(referencedType!=  null)  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.isResolved())  {  return  false;  }  else  {  Predicate  <  JSType>  referencedType  =  getReferencedType(referenced);  if(referencedType!=  null)  {  return  true;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.isResolved())  {  return  false;  }  else  {  Predicate  <  JSType>  referencedType  =  getReferencedType(referenced);  if(referencedType!=  null)  {  return  true;  }	  return    false;    return    false;    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
834	[BUG]  [BUGGY]  if(this.slotType!=  null)return  true;  [CE]  cannot  find  symbol  slotType  [FE]            AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.slotType!=  null)return  true;  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.slotType!=  null)return  true;	  if(this.slotType!=    null)return    false;    }    	non-compiled	[CE]  cannot  find  symbol  slotType	146	None	replace
835	[BUG]  [BUGGY]  if(this.slotType!=  null)return  false;  [CE]  cannot  find  symbol  slotType  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.slotType!=  null)return  false;  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.slotType!=  null)return  false;	  if(this.slotType!=    null)return    false;    }    	non-compiled	[CE]  cannot  find  symbol  slotType	146	None	replace
836	[BUG]  [BUGGY]  if(this.slotType  ==  null)return  false;  [CE]  cannot  find  symbol  slotType  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.slotType  ==  null)return  false;  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.slotType  ==  null)return  false;	  if(this.slotType!=    null)return    false;    }    	non-compiled	[CE]  cannot  find  symbol  slotType	146	None	replace
837	[BUG]  [BUGGY]  if(this.validator!=  null)return  false;  [CE]  missing  return  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.validator!=  null)return  false;  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.validator!=  null)return  false;	  if(this.slotType!=    null)return    false;    }    	non-compiled	[CE]  missing  return  statement	146	None	replace
838	[BUG]  [BUGGY]  if(this.referencedType!=  null  ||  this.referencedType!=  null)  {  return  false;  }  [CE]  referencedType  has  private  access  in  ProxyObjectType  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.referencedType!=  null  ||  this.referencedType!=  null)  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.referencedType!=  null  ||  this.referencedType!=  null)  {  return  false;  }	  if(this.referencedType!=    null)    {    return    false;    }    	non-compiled	[CE]  referencedType  has  private  access  in  ProxyObjectType	33	None	replace
839	[BUG]  [BUGGY]  if(referencedType  ==  null)  {  return  false;  }  [CE]  referencedType  has  private  access  in  ProxyObjectType  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(referencedType  ==  null)  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(referencedType  ==  null)  {  return  false;  }	  if(this.referencedType!=    null)    {    return    false;    }    	non-compiled	[CE]  referencedType  has  private  access  in  ProxyObjectType	33	None	replace
840	[BUG]  [BUGGY]  return(validator.isResolved()  &&  this.isForwardDeclared  ==  null);  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  return(validator.isResolved()  &&  this.isForwardDeclared  ==  null);  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	return(validator.isResolved()  &&  this.isForwardDeclared  ==  null);	  return(this.isResolved()    &&    validator    ==    null);    timeout    	non-compiled	[CE]  cannot  find  symbol	62	None	replace
841	[BUG]  [BUGGY]  timeout  [FE]                      AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  return(validator  ==  null  &&  this.isResolved());  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	add	return(validator  ==  null  &&  this.isResolved());	  return(this.isResolved()    &&    validator    ==    null);    timeout    	compilable	timeout	62	1	replace
842	[BUG]  [BUGGY]  return(validator  ==  null  &&  this.isResolved());  timeout  [FE]                      AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  return(validator  ==  null  &&  this.isResolved());  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	return(validator  ==  null  &&  this.isResolved());	  return(this.isResolved()    &&    validator    ==    null);    timeout    	compilable	timeout	62	1	replace
843	[BUG]  [BUGGY]  if(!forAnnotations)  {  return  super.setValidator(validator);  if(this.isResolved())  {  return  super.setValidator(validator);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(!forAnnotations)  {  return  super.setValidator(validator);  if(this.isResolved())  {  return  super.setValidator(validator);  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(!forAnnotations)  {  return  super.setValidator(validator);  if(this.isResolved())  {  return  super.setValidator(validator);  }	  return    super.setValidator(validator);    if(this.isResolved())    {    return    super.setValidator(validator);    }    else    {    for(int    i    =    0;    i    <    propertyContinuations.size();    ++i)    {    PropertyContinuation    <    NamedType>    propertyContinuations    =    propertyContinuations.get(i);    if    	non-compiled	[CE]  illegal  start  of  expression	129	None	replace
844	[BUG]  [BUGGY]  if(this.isResolved())  {  return  super.setValidator(validator);  if(this.isResolved())  {  return  super.setValidator(validator);  }  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.isResolved())  {  return  super.setValidator(validator);  if(this.isResolved())  {  return  super.setValidator(validator);  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.isResolved())  {  return  super.setValidator(validator);  if(this.isResolved())  {  return  super.setValidator(validator);  }	  return    super.setValidator(validator);    if(this.isResolved())    {    return    super.setValidator(validator);    }    else    {    for(int    i    =    0;    i    <    propertyContinuations.size();    ++i)    {    PropertyContinuation    <    NamedType>    propertyContinuations    =    propertyContinuations.get(i);    if    	non-compiled	[CE]  illegal  start  of  expression	129	None	replace
845	[BUG]  [BUGGY]  if(this.isResolved())  {  return  super.setValidator(validator);  }  else  {  for(int  i  =  0;  i  <  propertyContinuations.size();  ++i)  {  PropertyContinuation  <  NamedType>  propertyContinuations  =  propertyContinu  [CE]  ';'  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.isResolved())  {  return  super.setValidator(validator);  }  else  {  for(int  i  =  0;  i  <  propertyContinuations.size();  ++i)  {  PropertyContinuation  <  NamedType>  propertyContinuations  =  propertyContinu  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.isResolved())  {  return  super.setValidator(validator);  }  else  {  for(int  i  =  0;  i  <  propertyContinuations.size();  ++i)  {  PropertyContinuation  <  NamedType>  propertyContinuations  =  propertyContinu	  return    super.setValidator(validator);    if(this.isResolved())    {    return    super.setValidator(validator);    }    else    {    for(int    i    =    0;    i    <    propertyContinuations.size();    ++i)    {    PropertyContinuation    <    NamedType>    propertyContinuations    =    propertyContinuations.get(i);    if    	non-compiled	[CE]  ';'  expected	129	None	replace
846	[BUG]  [BUGGY]  if(isForwardDeclared)  {  return  super.setValidator(validator);  if(this.isResolved())  {  return  super.setValidator(validator);  }  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(isForwardDeclared)  {  return  super.setValidator(validator);  if(this.isResolved())  {  return  super.setValidator(validator);  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(isForwardDeclared)  {  return  super.setValidator(validator);  if(this.isResolved())  {  return  super.setValidator(validator);  }	  return    super.setValidator(validator);    if(this.isResolved())    {    return    super.setValidator(validator);    }    else    {    for(int    i    =    0;    i    <    propertyContinuations.size();    ++i)    {    PropertyContinuation    <    NamedType>    propertyContinuations    =    propertyContinuations.get(i);    if    	non-compiled	[CE]  illegal  start  of  expression	129	None	replace
847	[BUG]  [BUGGY]  return(this.isResolved()  &&  this.validator  ==  null);  if(this.isResolved()  &&  this.validator  ==  null)  {  return(this.isResolved()  &&  this.validator  ==  null);  }  [CE]  unreachable  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  return(this.isResolved()  &&  this.validator  ==  null);  if(this.isResolved()  &&  this.validator  ==  null)  {  return(this.isResolved()  &&  this.validator  ==  null);  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	return(this.isResolved()    &&    this.validator    ==    null);    if(this.isResolved()  &&  this.validator  ==  null)  {  return(this.isResolved()  &&  this.validator  ==  null);  }	  timeout    	non-compiled	[CE]  unreachable  statement	59	None	add
848	[BUG]  [BUGGY]  return(this.isResolved()  &&  this.validator  ==  null);  if(this.isResolved()  &&  this.validator  ==  null)  {  return(this.isResolved()  &&  this.validator!=  null);  }  [CE]  unreachable  statement  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  return(this.isResolved()  &&  this.validator  ==  null);  if(this.isResolved()  &&  this.validator  ==  null)  {  return(this.isResolved()  &&  this.validator!=  null);  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	return(this.isResolved()    &&    this.validator    ==    null);    if(this.isResolved()  &&  this.validator  ==  null)  {  return(this.isResolved()  &&  this.validator!=  null);  }	  timeout    	non-compiled	[CE]  unreachable  statement	59	None	add
849	[BUG]  [BUGGY]  return(this.isResolved()  &&  this.validator  ==  null);  if(this.isResolved()  &&  this.validator!=  null)  {  return(this.isResolved()  &&  this.validator  ==  null);  }  [CE]  unreachable  statement  [FE]                      AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  return(this.isResolved()  &&  this.validator  ==  null);  if(this.isResolved()  &&  this.validator!=  null)  {  return(this.isResolved()  &&  this.validator  ==  null);  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	return(this.isResolved()    &&    this.validator    ==    null);    if(this.isResolved()  &&  this.validator!=  null)  {  return(this.isResolved()  &&  this.validator  ==  null);  }	  timeout    	non-compiled	[CE]  unreachable  statement	59	None	add
850	[BUG]  [BUGGY]  Predicate  <  JSType>  referencedType  =  validator.getReferencedType();  [CE]  cannot  find  symbol  [FE]                          AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  Predicate  <  JSType>  referencedType  =  validator.getReferencedType();  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	Predicate  <  JSType>  referencedType  =  validator.getReferencedType();	  if(this.isResolved())    {    Predicate    <    JSType>    referencedType    =    validator.getReferencedType();    if(referencedType!=    null)    {    return    referencedType.setValidator(value);    }    	non-compiled	[CE]  cannot  find  symbol	64	None	replace
851	[BUG]  [BUGGY]  Predicate  <  JSType>  referencedType  =  validator.getReferencedType();  if(referencedType  >=  null)  {  return  referencedType.setValidator(value);  }  [CE]  cannot  find  symbol  [FE]                            AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  Predicate  <  JSType>  referencedType  =  validator.getReferencedType();  if(referencedType  >=  null)  {  return  referencedType.setValidator(value);  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	Predicate  <  JSType>  referencedType  =  validator.getReferencedType();  if(referencedType  >=  null)  {  return  referencedType.setValidator(value);  }	  if(this.isResolved())    {    Predicate    <    JSType>    referencedType    =    validator.getReferencedType();    if(referencedType!=    null)    {    return    referencedType.setValidator(value);    }    	non-compiled	[CE]  cannot  find  symbol	64	None	replace
852	[BUG]  [BUGGY]  if(this.isForwardDeclared())  {  return  false;  }  else  {  Predicate  <  JSType>  referencedType  =  getReferencedType(reference);  if(referencedType!=  null)  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.isForwardDeclared())  {  return  false;  }  else  {  Predicate  <  JSType>  referencedType  =  getReferencedType(reference);  if(referencedType!=  null)  {  return  true;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.isForwardDeclared())  {  return  false;  }  else  {  Predicate  <  JSType>  referencedType  =  getReferencedType(reference);  if(referencedType!=  null)  {  return  true;  }	  if(this.isResolved())    {    return    false;    }    else    {    Predicate    <    JSType>    referencedType    =    getReferencedType(reference);    if(referencedType!=    null)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	101	None	replace
853	[BUG]  [BUGGY]  if(referencedType!=  null)  {  if(this.isResolved())  {  return  false;  }  else  {  Predicate  <  JSType>  referencedType  =  getReferencedType(reference);  if(referencedType!=  null)  {  return  true  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(referencedType!=  null)  {  if(this.isResolved())  {  return  false;  }  else  {  Predicate  <  JSType>  referencedType  =  getReferencedType(reference);  if(referencedType!=  null)  {  return  true  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(referencedType!=  null)  {  if(this.isResolved())  {  return  false;  }  else  {  Predicate  <  JSType>  referencedType  =  getReferencedType(reference);  if(referencedType!=  null)  {  return  true	  if(this.isResolved())    {    return    false;    }    else    {    Predicate    <    JSType>    referencedType    =    getReferencedType(reference);    if(referencedType!=    null)    {    return    true;    }    	non-compiled	[CE]  ';'  expected	101	None	replace
854	[BUG]  [BUGGY]  if(referencedType  ==  null)  {  if(this.isResolved())  {  return  false;  }  else  {  Predicate  <  JSType>  referencedType  =  getReferencedType(reference);  if(referencedType!=  null)  {  return  true  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(referencedType  ==  null)  {  if(this.isResolved())  {  return  false;  }  else  {  Predicate  <  JSType>  referencedType  =  getReferencedType(reference);  if(referencedType!=  null)  {  return  true  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(referencedType  ==  null)  {  if(this.isResolved())  {  return  false;  }  else  {  Predicate  <  JSType>  referencedType  =  getReferencedType(reference);  if(referencedType!=  null)  {  return  true	  if(this.isResolved())    {    return    false;    }    else    {    Predicate    <    JSType>    referencedType    =    getReferencedType(reference);    if(referencedType!=    null)    {    return    true;    }    	non-compiled	[CE]  ';'  expected	101	None	replace
855	[BUG]  [BUGGY]  if(referencedType!=  null)  {  if(this.isResolved())  {  return  false;  }  else  {  Predicate  <  JSType>  referencedType  =  getReferencedType(reference);  if(referencedType!=  null)  {  return  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(referencedType!=  null)  {  if(this.isResolved())  {  return  false;  }  else  {  Predicate  <  JSType>  referencedType  =  getReferencedType(reference);  if(referencedType!=  null)  {  return  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(referencedType!=  null)  {  if(this.isResolved())  {  return  false;  }  else  {  Predicate  <  JSType>  referencedType  =  getReferencedType(reference);  if(referencedType!=  null)  {  return	  if(this.isResolved())    {    return    false;    }    else    {    Predicate    <    JSType>    referencedType    =    getReferencedType(reference);    if(referencedType!=    null)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	101	None	replace
856	[BUG]  [BUGGY]  if(this.forwardDeclared)  {  return  false;  }  [CE]  cannot  find  symbol  forwardDeclared  [FE]            AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.forwardDeclared)  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.forwardDeclared)  {  return  false;  }	  if(isForwardDeclared)    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol  forwardDeclared	153	None	replace
857	[BUG]  [BUGGY]  if(resolved)  {  return  false;  }  [CE]  resolved  has  private  access  in  JSType  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(resolved)  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(resolved)  {  return  false;  }	  if(isForwardDeclared)    {    return    false;    }    	non-compiled	[CE]  resolved  has  private  access  in  JSType	153	None	replace
858	[BUG]  [BUGGY]  if(this.isValidator()  ||  this.isForwardDeclared())  {  return  false;  }  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.isValidator()  ||  this.isForwardDeclared())  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.isValidator()  ||  this.isForwardDeclared())  {  return  false;  }	  if(this.isValidator())    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol	82	None	replace
859	[BUG]  [BUGGY]  if(value.isValidator())  {  return  false;  }  [CE]  cannot  find  symbol  value  [FE]                      AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(value.isValidator())  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(value.isValidator())  {  return  false;  }	  if(this.isValidator())    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol  value	82	None	replace
860	[BUG]  [BUGGY]  if(validator!=  null)  {  return(this.isResolved()  &&  this.validator!=  null);  }  [CE]  missing  return  statement  [FE]                      AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(validator!=  null)  {  return(this.isResolved()  &&  this.validator!=  null);  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(validator!=  null)  {  return(this.isResolved()  &&  this.validator!=  null);  }	  return(this.isResolved()    &&    this.validator!=    null);    if(this.isResolved()    &&    this.validator!=    null);    }    else    {    return(this.isResolved()    &&    this.validator!=    null);    }    	non-compiled	[CE]  missing  return  statement	28	None	replace
861	[BUG]  [BUGGY]  timeout  [FE]                        AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(validator!=  null)  {  return(this.isResolved()  &&  this.validator!=  null);  }  else  {  return  super.setValidator(validator);  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	add	if(validator!=  null)  {  return(this.isResolved()  &&  this.validator!=  null);  }  else  {  return  super.setValidator(validator);  }	  return(this.isResolved()    &&    this.validator!=    null);    if(this.isResolved()    &&    this.validator!=    null);    }    else    {    return(this.isResolved()    &&    this.validator!=    null);    }    	compilable	timeout	28	1	replace
862	[BUG]  [BUGGY]  if(validator!=  null)  {  return(this.isResolved()  &&  this.validator!=  null);  }  else  {  return  super.setValidator(validator);  }  timeout  [FE]                        AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(validator!=  null)  {  return(this.isResolved()  &&  this.validator!=  null);  }  else  {  return  super.setValidator(validator);  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(validator!=  null)  {  return(this.isResolved()  &&  this.validator!=  null);  }  else  {  return  super.setValidator(validator);  }	  return(this.isResolved()    &&    this.validator!=    null);    if(this.isResolved()    &&    this.validator!=    null);    }    else    {    return(this.isResolved()    &&    this.validator!=    null);    }    	compilable	timeout	28	1	replace
863	[BUG]  [BUGGY]  timeout  [FE]                          AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(validator!=  null)  {  return(this.isResolved()  &&  this.validator!=  null);  }  else  {  return(this.isResolved()  &&  this.validator!=  null);  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	add	if(validator!=  null)  {  return(this.isResolved()  &&  this.validator!=  null);  }  else  {  return(this.isResolved()  &&  this.validator!=  null);  }	  return(this.isResolved()    &&    this.validator!=    null);    if(this.isResolved()    &&    this.validator!=    null);    }    else    {    return(this.isResolved()    &&    this.validator!=    null);    }    	compilable	timeout	28	1	replace
864	[BUG]  [BUGGY]  if(validator!=  null)  {  return(this.isResolved()  &&  this.validator!=  null);  }  else  {  return(this.isResolved()  &&  this.validator!=  null);  }  timeout  [FE]                          AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(validator!=  null)  {  return(this.isResolved()  &&  this.validator!=  null);  }  else  {  return(this.isResolved()  &&  this.validator!=  null);  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(validator!=  null)  {  return(this.isResolved()  &&  this.validator!=  null);  }  else  {  return(this.isResolved()  &&  this.validator!=  null);  }	  return(this.isResolved()    &&    this.validator!=    null);    if(this.isResolved()    &&    this.validator!=    null);    }    else    {    return(this.isResolved()    &&    this.validator!=    null);    }    	compilable	timeout	28	1	replace
865	[BUG]  [BUGGY]  if(validator  ==  null)  {  return  this.isResolved();  }  [CE]  missing  return  statement  [FE]                            AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(validator  ==  null)  {  return  this.isResolved();  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(validator  ==  null)  {  return  this.isResolved();  }	  return(this.isResolved()    &&    this.validator!=    null);    if(this.isResolved()    &&    this.validator!=    null);    }    else    {    return(this.isResolved()    &&    this.validator!=    null);    }    	non-compiled	[CE]  missing  return  statement	28	None	replace
866	[BUG]  [BUGGY]  if(this.isUnknownType()  ||  this.isReferenced())  {  return  true;  }  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.isUnknownType()  ||  this.isReferenced())  {  return  true;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.isUnknownType()  ||  this.isReferenced())  {  return  true;  }	  if(this.isUnknownType())    {    return    true;    }    	non-compiled	[CE]  cannot  find  symbol	124	None	replace
867	[BUG]  [BUGGY]  if(this.isUnknownType()  ||  this.isUnknownType())  {  return  false;  }  [CE]  missing  return  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.isUnknownType()  ||  this.isUnknownType())  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.isUnknownType()  ||  this.isUnknownType())  {  return  false;  }	  if(this.isUnknownType())    {    return    true;    }    	non-compiled	[CE]  missing  return  statement	124	None	replace
868	[BUG]  [BUGGY]  if(validator!=  null)  {  return(this.isResolved()  &&  this.validator!=  null);  (this.isResolved()  &&  this.validator!=  null);  }  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(validator!=  null)  {  return(this.isResolved()  &&  this.validator!=  null);  (this.isResolved()  &&  this.validator!=  null);  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(validator!=  null)  {  return(this.isResolved()  &&  this.validator!=  null);  (this.isResolved()  &&  this.validator!=  null);  }	  return(this.isResolved()    &&    this.validator!=    null);    (this.isResolved()    &&    this.validator!=    null);    	non-compiled	[CE]  not  a  statement	25	None	replace
869	[BUG]  [BUGGY]  if(!this.isResolved())  {  return(this.isResolved()  &&  this.validator!=  null);  (this.isResolved()  &&  this.validator!=  null);  }  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(!this.isResolved())  {  return(this.isResolved()  &&  this.validator!=  null);  (this.isResolved()  &&  this.validator!=  null);  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(!this.isResolved())  {  return(this.isResolved()  &&  this.validator!=  null);  (this.isResolved()  &&  this.validator!=  null);  }	  return(this.isResolved()    &&    this.validator!=    null);    (this.isResolved()    &&    this.validator!=    null);    	non-compiled	[CE]  not  a  statement	25	None	replace
870	[BUG]  [BUGGY]  if(validator  ==  null)  {  return(this.isResolved()  &&  this.validator!=  null);  (this.isResolved()  &&  this.validator!=  null);  }  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(validator  ==  null)  {  return(this.isResolved()  &&  this.validator!=  null);  (this.isResolved()  &&  this.validator!=  null);  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(validator  ==  null)  {  return(this.isResolved()  &&  this.validator!=  null);  (this.isResolved()  &&  this.validator!=  null);  }	  return(this.isResolved()    &&    this.validator!=    null);    (this.isResolved()    &&    this.validator!=    null);    	non-compiled	[CE]  not  a  statement	25	None	replace
871	[BUG]  [BUGGY]  Predicate  <?>  propertyNode  =  referencedType.getPropertyNode();  [CE]  referencedType  has  private  access  in  ProxyObjectType  [FE]                                  AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  Predicate  <?>  propertyNode  =  referencedType.getPropertyNode();  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	Predicate  <?>  propertyNode  =  referencedType.getPropertyNode();	  Predicate    <?>    propertyNode    =    this.slotType.getPropertyNode();    	non-compiled	[CE]  referencedType  has  private  access  in  ProxyObjectType	136	None	replace
872	[BUG]  [BUGGY]  if(this.resolved)  {  return  super.setValidator(validator);  }  else  {  this.resolved  =  true;  }  [CE]  resolved  has  private  access  in  JSType  [FE]                        AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.resolved)  {  return  super.setValidator(validator);  }  else  {  this.resolved  =  true;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.resolved)  {  return  super.setValidator(validator);  }  else  {  this.resolved  =  true;  }	  if(this.isResolved())    {    return    super.setValidator(validator);    }    else    {    this.resolved    =    true;    }    	non-compiled	[CE]  resolved  has  private  access  in  JSType	43	None	replace
873	[BUG]  [BUGGY]  if(isForwardDeclared())  {  if(this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.resolved  =  true;  }  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(isForwardDeclared())  {  if(this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.resolved  =  true;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(isForwardDeclared())  {  if(this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.resolved  =  true;  }	  if(this.isResolved())    {    return    super.setValidator(validator);    }    else    {    this.resolved    =    true;    }    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
874	[BUG]  [BUGGY]  if(isForwardDeclared())  {  if(this.isResolved())  {  return  super.setValidator(validator;  }  else  {  this.resolved  =  true;  }  [CE]  ')'  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(isForwardDeclared())  {  if(this.isResolved())  {  return  super.setValidator(validator;  }  else  {  this.resolved  =  true;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(isForwardDeclared())  {  if(this.isResolved())  {  return  super.setValidator(validator;  }  else  {  this.resolved  =  true;  }	  if(this.isResolved())    {    return    super.setValidator(validator);    }    else    {    this.resolved    =    true;    }    	non-compiled	[CE]  ')'  expected	43	None	replace
875	[BUG]  [BUGGY]  if(isForwardDeclared())  {  if(this.isResolved())  {  return  super.setValidator(validator);  }  else  {  it.resolved  =  true;  }  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(isForwardDeclared())  {  if(this.isResolved())  {  return  super.setValidator(validator);  }  else  {  it.resolved  =  true;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(isForwardDeclared())  {  if(this.isResolved())  {  return  super.setValidator(validator);  }  else  {  it.resolved  =  true;  }	  if(this.isResolved())    {    return    super.setValidator(validator);    }    else    {    this.resolved    =    true;    }    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
876	[BUG]  [BUGGY]  if(this.validator!=  null)  {  return  super.setValidator(validator);  }  else  {  Predicate  <  JSType>  referencedType  =  getReferencedType(referencedType);  if(referencedType!=  null)  {  return  referencedType.setVal  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.validator!=  null)  {  return  super.setValidator(validator);  }  else  {  Predicate  <  JSType>  referencedType  =  getReferencedType(referencedType);  if(referencedType!=  null)  {  return  referencedType.setVal  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.validator!=  null)  {  return  super.setValidator(validator);  }  else  {  Predicate  <  JSType>  referencedType  =  getReferencedType(referencedType);  if(referencedType!=  null)  {  return  referencedType.setVal	  return    super.setValidator(validator);    if(this.isResolved())    {    return    super.setValidator(validator);    }    	non-compiled	[CE]  ';'  expected	50	None	replace
877	[BUG]  [BUGGY]  Predicate  <  JSType>  validator  =  this.referencedType.setValidator(validator);  [CE]  variable  validator  is  already  defined  in  method  setValidator(Predicate<JSType>)  [FE]                                    AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  Predicate  <  JSType>  validator  =  this.referencedType.setValidator(validator);  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	Predicate  <  JSType>  validator  =  this.referencedType.setValidator(validator);	  if(this.isResolved())    {    Predicate    <    JSType>    validator    =    this.referencedType.setValidator(validator);    if(validator!=    null)    {    return    false;    }    	non-compiled	[CE]  variable  validator  is  already  defined  in  method  setValidator(Predicate<JSType>)	69	None	replace
878	[BUG]  [BUGGY]  if(this.isReferenced())  {  JSType  referencedType  =  getReferencedType(referenced);  if(referencedType!=  null)  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.isReferenced())  {  JSType  referencedType  =  getReferencedType(referenced);  if(referencedType!=  null)  {  return  true;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.isReferenced())  {  JSType  referencedType  =  getReferencedType(referenced);  if(referencedType!=  null)  {  return  true;  }	  return    false;    if(this.isResolved())    {    JSType    referencedType    =    getReferencedType(referenced);    if(referencedType!=    null)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
879	[BUG]  [BUGGY]  if(this.isForwardDeclared())  {  return  false;  }  else  {  Predicate  <  JSType>  referencedType  =  getReferencedType(referenced);  if(referencedType!=  null)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.isForwardDeclared())  {  return  false;  }  else  {  Predicate  <  JSType>  referencedType  =  getReferencedType(referenced);  if(referencedType!=  null)  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.isForwardDeclared())  {  return  false;  }  else  {  Predicate  <  JSType>  referencedType  =  getReferencedType(referenced);  if(referencedType!=  null)  {  return  false;  }	  return    false;    if(this.isResolved())    {    JSType    referencedType    =    getReferencedType(referenced);    if(referencedType!=    null)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
880	[BUG]  [BUGGY]  if(referenced!=  null)  {  return  false;  }  else  {  Predicate  <  JSType>  referencedType  =  getReferencedType(referenced);  if(referencedType!=  null)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(referenced!=  null)  {  return  false;  }  else  {  Predicate  <  JSType>  referencedType  =  getReferencedType(referenced);  if(referencedType!=  null)  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(referenced!=  null)  {  return  false;  }  else  {  Predicate  <  JSType>  referencedType  =  getReferencedType(referenced);  if(referencedType!=  null)  {  return  false;  }	  return    false;    if(this.isResolved())    {    JSType    referencedType    =    getReferencedType(referenced);    if(referencedType!=    null)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
881	[BUG]  [BUGGY]  if(referencedType!=  null)  {  return  false;  }  else  {  Predicate  <  JSType>  referencedType  =  getReferencedType(referenced);  if(referencedType!=  null)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(referencedType!=  null)  {  return  false;  }  else  {  Predicate  <  JSType>  referencedType  =  getReferencedType(referenced);  if(referencedType!=  null)  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(referencedType!=  null)  {  return  false;  }  else  {  Predicate  <  JSType>  referencedType  =  getReferencedType(referenced);  if(referencedType!=  null)  {  return  false;  }	  return    false;    if(this.isResolved())    {    JSType    referencedType    =    getReferencedType(referenced);    if(referencedType!=    null)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
882	[BUG]  [BUGGY]  Predicate  <?>  propertyNode  =  getPropertyNode(reference.propertyName);  return  propertyNode!=  null  &&  propertyNode.getType()  ==  Token.FUNCTION;  [CE]  cannot  find  symbol  propertyName  [FE]                            AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  Predicate  <?>  propertyNode  =  getPropertyNode(reference.propertyName);  return  propertyNode!=  null  &&  propertyNode.getType()  ==  Token.FUNCTION;  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	Predicate  <?>  propertyNode  =  getPropertyNode(reference.propertyName);  return  propertyNode!=  null  &&  propertyNode.getType()  ==  Token.FUNCTION;	  Predicate    <?>    propertyNode    =    getPropertyNode(propertyName);    return    propertyNode!=    null    &&    propertyNode.getType()    ==    Token.FUNCTION;    	non-compiled	[CE]  cannot  find  symbol  propertyName	133	None	replace
883	[BUG]  [BUGGY]  Predicate  <?>  propertyNode  =  getPropertyNode(value);  return  propertyNode!=  null  &&  propertyNode.getType()  ==  Token.FUNCTION;  [CE]  cannot  find  symbol  value  [FE]                              AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  Predicate  <?>  propertyNode  =  getPropertyNode(value);  return  propertyNode!=  null  &&  propertyNode.getType()  ==  Token.FUNCTION;  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	Predicate  <?>  propertyNode  =  getPropertyNode(value);  return  propertyNode!=  null  &&  propertyNode.getType()  ==  Token.FUNCTION;	  Predicate    <?>    propertyNode    =    getPropertyNode(propertyName);    return    propertyNode!=    null    &&    propertyNode.getType()    ==    Token.FUNCTION;    	non-compiled	[CE]  cannot  find  symbol  value	133	None	replace
884	[BUG]  [BUGGY]  Predicate  <?>  propertyNode  =  getPropertyNode(property);  return  propertyNode!=  null  &&  propertyNode.getType()  ==  Token.FUNCTION;  [CE]  cannot  find  symbol  property  [FE]                                AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  Predicate  <?>  propertyNode  =  getPropertyNode(property);  return  propertyNode!=  null  &&  propertyNode.getType()  ==  Token.FUNCTION;  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	Predicate  <?>  propertyNode  =  getPropertyNode(property);  return  propertyNode!=  null  &&  propertyNode.getType()  ==  Token.FUNCTION;	  Predicate    <?>    propertyNode    =    getPropertyNode(propertyName);    return    propertyNode!=    null    &&    propertyNode.getType()    ==    Token.FUNCTION;    	non-compiled	[CE]  cannot  find  symbol  property	133	None	replace
885	[BUG]  [BUGGY]  return(this.isResolved()  &&  validator!=  null);  if(this.isResolved()  &&  validator!=  null)  {  return  this.isResolved()  &&  validator!=  null);  }  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  return(this.isResolved()  &&  validator!=  null);  if(this.isResolved()  &&  validator!=  null)  {  return  this.isResolved()  &&  validator!=  null);  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	return(this.isResolved()    &&    validator!=    null);    if(this.isResolved()  &&  validator!=  null)  {  return  this.isResolved()  &&  validator!=  null);  }	  timeout    	non-compiled	[CE]  ';'  expected	56	None	add
886	[BUG]  [BUGGY]  return(this.isResolved()  &&  validator!=  null);  if(this.isResolved()  &&  validator!=  null)  {  return  this.isResolved()  &&  validator!=  null;  }  [CE]  unreachable  statement  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  return(this.isResolved()  &&  validator!=  null);  if(this.isResolved()  &&  validator!=  null)  {  return  this.isResolved()  &&  validator!=  null;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	return(this.isResolved()    &&    validator!=    null);    if(this.isResolved()  &&  validator!=  null)  {  return  this.isResolved()  &&  validator!=  null;  }	  timeout    	non-compiled	[CE]  unreachable  statement	56	None	add
887	[BUG]  [BUGGY]  return(this.isResolved()  &&  validator!=  null);  if(this.isResolved()  &&  validator!=  null)  {  return(this.isResolved()  &&  validator  ==  null);  }  [CE]  unreachable  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  return(this.isResolved()  &&  validator!=  null);  if(this.isResolved()  &&  validator!=  null)  {  return(this.isResolved()  &&  validator  ==  null);  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	return(this.isResolved()    &&    validator!=    null);    if(this.isResolved()  &&  validator!=  null)  {  return(this.isResolved()  &&  validator  ==  null);  }	  timeout    	non-compiled	[CE]  unreachable  statement	56	None	add
888	[BUG]  [BUGGY]  if(this.referencedType!=  null)  {  return  super.setValidator(validator);  if(this.isResolved())  {  Predicate  <?>  property  =  this.referencedType.getProperty(propertyName);  if(prop  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.referencedType!=  null)  {  return  super.setValidator(validator);  if(this.isResolved())  {  Predicate  <?>  property  =  this.referencedType.getProperty(propertyName);  if(prop  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.referencedType!=  null)  {  return  super.setValidator(validator);  if(this.isResolved())  {  Predicate  <?>  property  =  this.referencedType.getProperty(propertyName);  if(prop	  return    super.setValidator(validator);    if(this.isResolved())    {    Predicate    <?>    property    =    this.referencedType.getProperty(propertyName);    if(property!=    null)    {    return    super.setValidator(value);    }    	non-compiled	[CE]  ')'  expected	81	None	replace
889	[BUG]  [BUGGY]  if(validator!=  null)  {  return  super.setValidator(validator);  if(this.isResolved())  {  Predicate  <?>  property  =  this.referencedType.getProperty(propertyName);  if(property!=  null)  {  return  super  [CE]  '.'  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(validator!=  null)  {  return  super.setValidator(validator);  if(this.isResolved())  {  Predicate  <?>  property  =  this.referencedType.getProperty(propertyName);  if(property!=  null)  {  return  super  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(validator!=  null)  {  return  super.setValidator(validator);  if(this.isResolved())  {  Predicate  <?>  property  =  this.referencedType.getProperty(propertyName);  if(property!=  null)  {  return  super	  return    super.setValidator(validator);    if(this.isResolved())    {    Predicate    <?>    property    =    this.referencedType.getProperty(propertyName);    if(property!=    null)    {    return    super.setValidator(value);    }    	non-compiled	[CE]  '.'  expected	81	None	replace
890	[BUG]  [BUGGY]  if(value!=  null)  {  return  super.setValidator(validator);  if(this.isResolved())  {  Predicate  <?>  property  =  this.referencedType.getProperty(propertyName);  if(property!=  null)  {  return  super  [CE]  '.'  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(value!=  null)  {  return  super.setValidator(validator);  if(this.isResolved())  {  Predicate  <?>  property  =  this.referencedType.getProperty(propertyName);  if(property!=  null)  {  return  super  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(value!=  null)  {  return  super.setValidator(validator);  if(this.isResolved())  {  Predicate  <?>  property  =  this.referencedType.getProperty(propertyName);  if(property!=  null)  {  return  super	  return    super.setValidator(validator);    if(this.isResolved())    {    Predicate    <?>    property    =    this.referencedType.getProperty(propertyName);    if(property!=    null)    {    return    super.setValidator(value);    }    	non-compiled	[CE]  '.'  expected	81	None	replace
891	[BUG]  [BUGGY]  if(validator!=  null)  {  return  super.setValidator(validator);  if(this.isResolved())  {  Predicate  <?>  property  =  this.referencedType.getProperty(propertyName);  if(property!=  nu  [CE]  ')'  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(validator!=  null)  {  return  super.setValidator(validator);  if(this.isResolved())  {  Predicate  <?>  property  =  this.referencedType.getProperty(propertyName);  if(property!=  nu  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(validator!=  null)  {  return  super.setValidator(validator);  if(this.isResolved())  {  Predicate  <?>  property  =  this.referencedType.getProperty(propertyName);  if(property!=  nu	  return    super.setValidator(validator);    if(this.isResolved())    {    Predicate    <?>    property    =    this.referencedType.getProperty(propertyName);    if(property!=    null)    {    return    super.setValidator(value);    }    	non-compiled	[CE]  ')'  expected	81	None	replace
892	[BUG]  [BUGGY]  if(this.validator!=  propertyNode)  {  return  super.setValidator(validator);  }  else  {  Predicate  <  JSType>  propertyNode  =  this.isResolved();  return  super.setValidator(valueNode);  }  [CE]  cannot  find  symbol  propertyNode  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.validator!=  propertyNode)  {  return  super.setValidator(validator);  }  else  {  Predicate  <  JSType>  propertyNode  =  this.isResolved();  return  super.setValidator(valueNode);  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.validator!=  propertyNode)  {  return  super.setValidator(validator);  }  else  {  Predicate  <  JSType>  propertyNode  =  this.isResolved();  return  super.setValidator(valueNode);  }	  return    super.setValidator(validator);    if(this.isResolved())    {    return    super.setValidator(validator);    }    else    {    Predicate    <    JSType>    propertyNode    =    this.isResolved();    return    super.setValidator(valueNode);    }    	non-compiled	[CE]  cannot  find  symbol  propertyNode	128	None	replace
893	[BUG]  [BUGGY]  if(propertyNode!=  null)  {  return  super.setValidator(validator);  }  else  {  Predicate  <  JSType>  propertyNode  =  this.isResolved();  return  super.setValidator(valueNode);  }  [CE]  cannot  find  symbol  propertyNode  [FE]                      AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(propertyNode!=  null)  {  return  super.setValidator(validator);  }  else  {  Predicate  <  JSType>  propertyNode  =  this.isResolved();  return  super.setValidator(valueNode);  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(propertyNode!=  null)  {  return  super.setValidator(validator);  }  else  {  Predicate  <  JSType>  propertyNode  =  this.isResolved();  return  super.setValidator(valueNode);  }	  return    super.setValidator(validator);    if(this.isResolved())    {    return    super.setValidator(validator);    }    else    {    Predicate    <    JSType>    propertyNode    =    this.isResolved();    return    super.setValidator(valueNode);    }    	non-compiled	[CE]  cannot  find  symbol  propertyNode	128	None	replace
894	[BUG]  [BUGGY]  if(this.validator!=  propertyNode)  {  return  super.setValidator(validator);  }  else  {  Predicate  <  JSType>  propertyNode  =  this.isResolved();  return  super.setValidator(propertyNode);  }  [CE]  cannot  find  symbol  propertyNode  [FE]                        AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.validator!=  propertyNode)  {  return  super.setValidator(validator);  }  else  {  Predicate  <  JSType>  propertyNode  =  this.isResolved();  return  super.setValidator(propertyNode);  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.validator!=  propertyNode)  {  return  super.setValidator(validator);  }  else  {  Predicate  <  JSType>  propertyNode  =  this.isResolved();  return  super.setValidator(propertyNode);  }	  return    super.setValidator(validator);    if(this.isResolved())    {    return    super.setValidator(validator);    }    else    {    Predicate    <    JSType>    propertyNode    =    this.isResolved();    return    super.setValidator(valueNode);    }    	non-compiled	[CE]  cannot  find  symbol  propertyNode	128	None	replace
895	[BUG]  [BUGGY]  if(!this.isResolved())  {  return  false;  if(isForwardDeclared)  {  forAnnotations  {  propertyNode  =  propertyNode.getFirstChild();  if(propertyNode!=  propertyNode)  {  return  true;  }  }  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(!this.isResolved())  {  return  false;  if(isForwardDeclared)  {  forAnnotations  {  propertyNode  =  propertyNode.getFirstChild();  if(propertyNode!=  propertyNode)  {  return  true;  }  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(!this.isResolved())  {  return  false;  if(isForwardDeclared)  {  forAnnotations  {  propertyNode  =  propertyNode.getFirstChild();  if(propertyNode!=  propertyNode)  {  return  true;  }  }	  return    false;    if(isForwardDeclared)    {    forAnnotations    {    propertyNode    =    propertyNode.getFirstChild();    if(propertyNode!=    propertyNode)    {    return    true;    }    	non-compiled	[CE]  not  a  statement	139	None	replace
896	[BUG]  [BUGGY]  if(!this.isResolved())  {  return  false;  if(isForwardDeclared)  {  forAnnotations  {  propertyNode  =  propertyNode.getFirstChild();  if(propertyNode!=  propertyNode)  {  return  true  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(!this.isResolved())  {  return  false;  if(isForwardDeclared)  {  forAnnotations  {  propertyNode  =  propertyNode.getFirstChild();  if(propertyNode!=  propertyNode)  {  return  true  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(!this.isResolved())  {  return  false;  if(isForwardDeclared)  {  forAnnotations  {  propertyNode  =  propertyNode.getFirstChild();  if(propertyNode!=  propertyNode)  {  return  true	  return    false;    if(isForwardDeclared)    {    forAnnotations    {    propertyNode    =    propertyNode.getFirstChild();    if(propertyNode!=    propertyNode)    {    return    true;    }    	non-compiled	[CE]  not  a  statement	139	None	replace
897	[BUG]  [BUGGY]  if(!this.isResolved())  {  return  false;  forAnnotations  {  propertyNode  =  propertyNode.getFirstChild();  if(propertyNode!=  propertyNode)  {  return  true;  }  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(!this.isResolved())  {  return  false;  forAnnotations  {  propertyNode  =  propertyNode.getFirstChild();  if(propertyNode!=  propertyNode)  {  return  true;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(!this.isResolved())  {  return  false;  forAnnotations  {  propertyNode  =  propertyNode.getFirstChild();  if(propertyNode!=  propertyNode)  {  return  true;  }	  return    false;    if(isForwardDeclared)    {    forAnnotations    {    propertyNode    =    propertyNode.getFirstChild();    if(propertyNode!=    propertyNode)    {    return    true;    }    	non-compiled	[CE]  not  a  statement	139	None	replace
898	[BUG]  [BUGGY]  if(validator!=  null  ||  this.slotType!=  null)  {  return  false;  }  [CE]  cannot  find  symbol  slotType  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(validator!=  null  ||  this.slotType!=  null)  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(validator!=  null  ||  this.slotType!=  null)  {  return  false;  }	  if(this.slotType!=    null    ||    this.slotType!=    null)    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol  slotType	147	None	replace
899	[BUG]  [BUGGY]  if(this.slotType!=  null  &&  this.slotType!=  null)  {  return  false;  }  [CE]  cannot  find  symbol  slotType  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.slotType!=  null  &&  this.slotType!=  null)  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.slotType!=  null  &&  this.slotType!=  null)  {  return  false;  }	  if(this.slotType!=    null    ||    this.slotType!=    null)    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol  slotType	147	None	replace
900	[BUG]  [BUGGY]  if(this.validator!=  null  ||  this.slotType!=  null)  {  return  false;  }  [CE]  cannot  find  symbol  slotType  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.validator!=  null  ||  this.slotType!=  null)  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.validator!=  null  ||  this.slotType!=  null)  {  return  false;  }	  if(this.slotType!=    null    ||    this.slotType!=    null)    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol  slotType	147	None	replace
901	[BUG]  [BUGGY]  if(this.forAnnotations!=  forAnnotations)  {  forAnnotations  ignoreForwardReferencedTypes  =  this.ignoreForwardReferencedTypes;  if(ignoreForwardReferencedTypes  ==  null)  {  return  false  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.forAnnotations!=  forAnnotations)  {  forAnnotations  ignoreForwardReferencedTypes  =  this.ignoreForwardReferencedTypes;  if(ignoreForwardReferencedTypes  ==  null)  {  return  false  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.forAnnotations!=  forAnnotations)  {  forAnnotations  ignoreForwardReferencedTypes  =  this.ignoreForwardReferencedTypes;  if(ignoreForwardReferencedTypes  ==  null)  {  return  false	  return    false;    if(this.forAnnotations!=    forAnnotations)    {    forAnnotations    ignoreForwardReferencedTypes    =    this.ignoreForwardReferencedTypes;    if(ignoreForwardReferencedTypes    ==    null)    {    return    false;    }    	non-compiled	[CE]  ';'  expected	2	None	replace
902	[BUG]  [BUGGY]  if(this.forAnnotations!=  forAnnotations)  {  forAnnotations  ignoreForwardReferencedTypes  =  this.ignoreForwardReferencedTypes;  if(ignoreForwardReferencedTypes  ==  null)  {  return  false;  }  }  [CE]  cannot  find  symbol  forAnnotations  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.forAnnotations!=  forAnnotations)  {  forAnnotations  ignoreForwardReferencedTypes  =  this.ignoreForwardReferencedTypes;  if(ignoreForwardReferencedTypes  ==  null)  {  return  false;  }  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.forAnnotations!=  forAnnotations)  {  forAnnotations  ignoreForwardReferencedTypes  =  this.ignoreForwardReferencedTypes;  if(ignoreForwardReferencedTypes  ==  null)  {  return  false;  }  }	  return    false;    if(this.forAnnotations!=    forAnnotations)    {    forAnnotations    ignoreForwardReferencedTypes    =    this.ignoreForwardReferencedTypes;    if(ignoreForwardReferencedTypes    ==    null)    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol  forAnnotations	2	None	replace
903	[BUG]  [BUGGY]  if(this.forAnnotations!=  forAnnotations)  {  forAnnotations  ignoredForwardReferencedTypes  =  this.ignoreForwardReferencedTypes;  if(ignoreForwardReferencedTypes  ==  null)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.forAnnotations!=  forAnnotations)  {  forAnnotations  ignoredForwardReferencedTypes  =  this.ignoreForwardReferencedTypes;  if(ignoreForwardReferencedTypes  ==  null)  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.forAnnotations!=  forAnnotations)  {  forAnnotations  ignoredForwardReferencedTypes  =  this.ignoreForwardReferencedTypes;  if(ignoreForwardReferencedTypes  ==  null)  {  return  false;  }	  return    false;    if(this.forAnnotations!=    forAnnotations)    {    forAnnotations    ignoreForwardReferencedTypes    =    this.ignoreForwardReferencedTypes;    if(ignoreForwardReferencedTypes    ==    null)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
904	[BUG]  [BUGGY]  if(this.slotType!=  null)  {  return  false;  if(this.forAnnotations!=  forAnnotations)  {  forAnnotations  ignoreForwardReferencedTypes  =  this.ignoreForwardReferencedTypes;  if(ignoreForwardReferencedTypes  ==  nu  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.slotType!=  null)  {  return  false;  if(this.forAnnotations!=  forAnnotations)  {  forAnnotations  ignoreForwardReferencedTypes  =  this.ignoreForwardReferencedTypes;  if(ignoreForwardReferencedTypes  ==  nu  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.slotType!=  null)  {  return  false;  if(this.forAnnotations!=  forAnnotations)  {  forAnnotations  ignoreForwardReferencedTypes  =  this.ignoreForwardReferencedTypes;  if(ignoreForwardReferencedTypes  ==  nu	  return    false;    if(this.forAnnotations!=    forAnnotations)    {    forAnnotations    ignoreForwardReferencedTypes    =    this.ignoreForwardReferencedTypes;    if(ignoreForwardReferencedTypes    ==    null)    {    return    false;    }    	non-compiled	[CE]  ')'  expected	2	None	replace
905	[BUG]  [BUGGY]  if(this.validator!=  null)  {  return  super.setValidator(validator);  }  else  {  for(int  i  =  0;  i  <  this.isResolved();  ++i)  {  return  super.setValidator(validator);  }  }  [CE]  bad  operand  types  for  binary  operator  '<'  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.validator!=  null)  {  return  super.setValidator(validator);  }  else  {  for(int  i  =  0;  i  <  this.isResolved();  ++i)  {  return  super.setValidator(validator);  }  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.validator!=  null)  {  return  super.setValidator(validator);  }  else  {  for(int  i  =  0;  i  <  this.isResolved();  ++i)  {  return  super.setValidator(validator);  }  }	  if(this.validator!=    null)    {    return    super.setValidator(validator);    }    else    {    for(int    i    =    0;    i    <    this.isResolved();    ++i)    {    return    super.setValidator(validator);    }    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '<'	121	None	replace
906	[BUG]  [BUGGY]  if(this.isResolved())  {  if(this.validator!=  null)  {  return  super.setValidator(validator);  }  else  {  for(int  i  =  0;  i  <  this.isResolved();  ++i)  {  return  super.  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.isResolved())  {  if(this.validator!=  null)  {  return  super.setValidator(validator);  }  else  {  for(int  i  =  0;  i  <  this.isResolved();  ++i)  {  return  super.  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.isResolved())  {  if(this.validator!=  null)  {  return  super.setValidator(validator);  }  else  {  for(int  i  =  0;  i  <  this.isResolved();  ++i)  {  return  super.	  if(this.validator!=    null)    {    return    super.setValidator(validator);    }    else    {    for(int    i    =    0;    i    <    this.isResolved();    ++i)    {    return    super.setValidator(validator);    }    	non-compiled	[CE]  <identifier>  expected	121	None	replace
907	[BUG]  [BUGGY]  if(this.isResolved())  {  if(this.validator!=  null)  {  return  super.setValidator(validator);  }  else  {  for(int  i  =  0;  i  <  this.isResolved();  ++i)  {  return  super  [CE]  '.'  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.isResolved())  {  if(this.validator!=  null)  {  return  super.setValidator(validator);  }  else  {  for(int  i  =  0;  i  <  this.isResolved();  ++i)  {  return  super  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.isResolved())  {  if(this.validator!=  null)  {  return  super.setValidator(validator);  }  else  {  for(int  i  =  0;  i  <  this.isResolved();  ++i)  {  return  super	  if(this.validator!=    null)    {    return    super.setValidator(validator);    }    else    {    for(int    i    =    0;    i    <    this.isResolved();    ++i)    {    return    super.setValidator(validator);    }    	non-compiled	[CE]  '.'  expected	121	None	replace
908	[BUG]  [BUGGY]  if(this.validator!=  null)  {  return  super.setValidator(validator);  }  else  {  for(int  i  =  0;  i  <  this.isResolved();  ++i)  {  return  super.setValidator  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.validator!=  null)  {  return  super.setValidator(validator);  }  else  {  for(int  i  =  0;  i  <  this.isResolved();  ++i)  {  return  super.setValidator  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.validator!=  null)  {  return  super.setValidator(validator);  }  else  {  for(int  i  =  0;  i  <  this.isResolved();  ++i)  {  return  super.setValidator	  if(this.validator!=    null)    {    return    super.setValidator(validator);    }    else    {    for(int    i    =    0;    i    <    this.isResolved();    ++i)    {    return    super.setValidator(validator);    }    	non-compiled	[CE]  ';'  expected	121	None	replace
909	[BUG]  [BUGGY]  Predicate  <?>  property  =  this.validator.getProperty(propertyName);  [CE]  cannot  find  symbol  propertyName  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  Predicate  <?>  property  =  this.validator.getProperty(propertyName);  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	Predicate  <?>  property  =  this.validator.getProperty(propertyName);	  if(this.validator!=    null)    {    return    super.setValidator(validator);    }    	non-compiled	[CE]  cannot  find  symbol  propertyName	39	None	replace
910	[BUG]  [BUGGY]  if(this.validator!=  null)  {  return  super.setValidator(validator);  }  else  {  for(int  i  =  0;  i  <  this.isResolved();  i++)  {  return  super.setValidator(validator);  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.validator!=  null)  {  return  super.setValidator(validator);  }  else  {  for(int  i  =  0;  i  <  this.isResolved();  i++)  {  return  super.setValidator(validator);  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.validator!=  null)  {  return  super.setValidator(validator);  }  else  {  for(int  i  =  0;  i  <  this.isResolved();  i++)  {  return  super.setValidator(validator);  }	  return    super.setValidator(validator);    if(this.isResolved())    {    return    super.setValidator(validator);    }    else    {    for(int    i    =    0;    i    <    this.isResolved();    i++)    {    return    super.setValidator(validator);    }    	non-compiled	[CE]  illegal  start  of  expression	126	None	replace
911	[BUG]  [BUGGY]  if(this.validator!=  null)  {  return  super.setValidator(validator);  }  else  {  for(int  i  =  0;  i  <  this.isResolved();  i++)  {  return  super.setVal  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.validator!=  null)  {  return  super.setValidator(validator);  }  else  {  for(int  i  =  0;  i  <  this.isResolved();  i++)  {  return  super.setVal  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.validator!=  null)  {  return  super.setValidator(validator);  }  else  {  for(int  i  =  0;  i  <  this.isResolved();  i++)  {  return  super.setVal	  return    super.setValidator(validator);    if(this.isResolved())    {    return    super.setValidator(validator);    }    else    {    for(int    i    =    0;    i    <    this.isResolved();    i++)    {    return    super.setValidator(validator);    }    	non-compiled	[CE]  ';'  expected	126	None	replace
912	[BUG]  [BUGGY]  if(this.validator!=  null)  {  return  super.setValidator(validator);  }  else  {  for(int  i  =  0;  i  <  this.isResolved();  i++)  {  return  super.setValidator(validator);  }  }  [CE]  bad  operand  types  for  binary  operator  '<'  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.validator!=  null)  {  return  super.setValidator(validator);  }  else  {  for(int  i  =  0;  i  <  this.isResolved();  i++)  {  return  super.setValidator(validator);  }  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.validator!=  null)  {  return  super.setValidator(validator);  }  else  {  for(int  i  =  0;  i  <  this.isResolved();  i++)  {  return  super.setValidator(validator);  }  }	  return    super.setValidator(validator);    if(this.isResolved())    {    return    super.setValidator(validator);    }    else    {    for(int    i    =    0;    i    <    this.isResolved();    i++)    {    return    super.setValidator(validator);    }    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '<'	126	None	replace
913	[BUG]  [BUGGY]  if(this.isUnknownType()  ||  this.isResolved())  {  return  false;  }  [CE]  missing  return  statement  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.isUnknownType()  ||  this.isResolved())  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.isUnknownType()  ||  this.isResolved())  {  return  false;  }	  if(this.isUnknownType())    {    return    false;    }    	non-compiled	[CE]  missing  return  statement	123	None	replace
914	[BUG]  [BUGGY]  if(this.isForwardDeclared())  {  return(this.isResolved()  &&  this.validator!=  null);  }  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.isForwardDeclared())  {  return(this.isResolved()  &&  this.validator!=  null);  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.isForwardDeclared())  {  return(this.isResolved()  &&  this.validator!=  null);  }	  return(this.isResolved()    &&    this.validator!=    null);    if(this.isResolved()    &&    this.validator!=    null);    }    	non-compiled	[CE]  cannot  find  symbol	131	None	replace
915	[BUG]  [BUGGY]  if(this.ignoreForwardReferencedTypes)  {  return  true;  }  [CE]  cannot  find  symbol  ignoreForwardReferencedTypes  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.ignoreForwardReferencedTypes)  {  return  true;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.ignoreForwardReferencedTypes)  {  return  true;  }	  if(this.isForwardDeclared())    {    return    true;    }    	non-compiled	[CE]  cannot  find  symbol  ignoreForwardReferencedTypes	19	None	replace
916	[BUG]  [BUGGY]  if(validator!=  null)  {  return  super.setValidator(validator);  if(this.isResolved())  {  Predicate  <  JSType>  property  =  this.referencedType.getProperty(propertyName);  if(property!=  null)  {  return  super  [CE]  '.'  expected  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(validator!=  null)  {  return  super.setValidator(validator);  if(this.isResolved())  {  Predicate  <  JSType>  property  =  this.referencedType.getProperty(propertyName);  if(property!=  null)  {  return  super  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(validator!=  null)  {  return  super.setValidator(validator);  if(this.isResolved())  {  Predicate  <  JSType>  property  =  this.referencedType.getProperty(propertyName);  if(property!=  null)  {  return  super	  return    super.setValidator(validator);    if(this.isResolved())    {    Predicate    <    JSType>    property    =    this.referencedType.getProperty(propertyName);    if(property!=    null)    {    return    super.setValidator(property);    }    	non-compiled	[CE]  '.'  expected	48	None	replace
917	[BUG]  [BUGGY]  if(validator!=  null)  {  return  super.setValidator(validator);  if(this.isResolved())  {  Predicate  <  JSType>  property  =  this.referencedType.getProperty(propertyName);  if(property!=  nu  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(validator!=  null)  {  return  super.setValidator(validator);  if(this.isResolved())  {  Predicate  <  JSType>  property  =  this.referencedType.getProperty(propertyName);  if(property!=  nu  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(validator!=  null)  {  return  super.setValidator(validator);  if(this.isResolved())  {  Predicate  <  JSType>  property  =  this.referencedType.getProperty(propertyName);  if(property!=  nu	  return    super.setValidator(validator);    if(this.isResolved())    {    Predicate    <    JSType>    property    =    this.referencedType.getProperty(propertyName);    if(property!=    null)    {    return    super.setValidator(property);    }    	non-compiled	[CE]  ')'  expected	48	None	replace
918	[BUG]  [BUGGY]  if(validator!=  null)  {  return  super.setValidator(validator);  if(this.isResolved())  {  Predicate  <  JSType>  property  =  this.referencedType.getProperty(propertyName);  if(proper  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(validator!=  null)  {  return  super.setValidator(validator);  if(this.isResolved())  {  Predicate  <  JSType>  property  =  this.referencedType.getProperty(propertyName);  if(proper  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(validator!=  null)  {  return  super.setValidator(validator);  if(this.isResolved())  {  Predicate  <  JSType>  property  =  this.referencedType.getProperty(propertyName);  if(proper	  return    super.setValidator(validator);    if(this.isResolved())    {    Predicate    <    JSType>    property    =    this.referencedType.getProperty(propertyName);    if(property!=    null)    {    return    super.setValidator(property);    }    	non-compiled	[CE]  ')'  expected	48	None	replace
919	[BUG]  [BUGGY]  if(!this.validator.isResolved()  ||  isForwardDeclared)  {  return  false;  }  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(!this.validator.isResolved()  ||  isForwardDeclared)  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(!this.validator.isResolved()  ||  isForwardDeclared)  {  return  false;  }	  if(!this.validator.isResolved())    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol	115	None	replace
920	[BUG]  [BUGGY]  if(!this.validator.isResolved()  ||  this.validator.isForwardDeclared())  {  return  false;  }  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(!this.validator.isResolved()  ||  this.validator.isForwardDeclared())  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(!this.validator.isResolved()  ||  this.validator.isForwardDeclared())  {  return  false;  }	  if(!this.validator.isResolved())    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol	115	None	replace
921	[BUG]  [BUGGY]  if(!this.validator.isResolved()  ||  this.validator.isInferred())  {  return  false;  }  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(!this.validator.isResolved()  ||  this.validator.isInferred())  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(!this.validator.isResolved()  ||  this.validator.isInferred())  {  return  false;  }	  if(!this.validator.isResolved())    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol	115	None	replace
922	[BUG]  [BUGGY]  if(!this.validator.isResolved()  ||  this.validator.isDeclared())  {  return  false;  }  [CE]  cannot  find  symbol  [FE]                          AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(!this.validator.isResolved()  ||  this.validator.isDeclared())  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(!this.validator.isResolved()  ||  this.validator.isDeclared())  {  return  false;  }	  if(!this.validator.isResolved())    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol	115	None	replace
923	[BUG]  [BUGGY]  if(validator!=  null)  {  return  super.setValidator(validator);  if(this.isResolved())  {  Predicate  <?>  property  =  this.referencedType.getProperty(propertyName);  if(property!=  null)  {  return  super.  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(validator!=  null)  {  return  super.setValidator(validator);  if(this.isResolved())  {  Predicate  <?>  property  =  this.referencedType.getProperty(propertyName);  if(property!=  null)  {  return  super.  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(validator!=  null)  {  return  super.setValidator(validator);  if(this.isResolved())  {  Predicate  <?>  property  =  this.referencedType.getProperty(propertyName);  if(property!=  null)  {  return  super.	  return    super.setValidator(validator);    if(this.isResolved())    {    Predicate    <?>    property    =    this.referencedType.getProperty(propertyName);    if(property!=    null)    {    return    super.setValidator(property);    }    	non-compiled	[CE]  <identifier>  expected	80	None	replace
924	[BUG]  [BUGGY]  if(validator!=  null)  {  return  super.setValidator(validator);  if(this.isResolved())  {  Predicate  <?>  property  =  this.referencedType.getProperty(propertyName);  if(property!=  null)  {  return  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(validator!=  null)  {  return  super.setValidator(validator);  if(this.isResolved())  {  Predicate  <?>  property  =  this.referencedType.getProperty(propertyName);  if(property!=  null)  {  return  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(validator!=  null)  {  return  super.setValidator(validator);  if(this.isResolved())  {  Predicate  <?>  property  =  this.referencedType.getProperty(propertyName);  if(property!=  null)  {  return	  return    super.setValidator(validator);    if(this.isResolved())    {    Predicate    <?>    property    =    this.referencedType.getProperty(propertyName);    if(property!=    null)    {    return    super.setValidator(property);    }    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
925	[BUG]  [BUGGY]  if(!this.isResolved())  {  return  false;  if(isForwardDeclared)  {  forAnnotations  {  propertyNode  =  propertyNode.getFirstChild();  if(propertyNode!=  null)  {  return  true;  }  }  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(!this.isResolved())  {  return  false;  if(isForwardDeclared)  {  forAnnotations  {  propertyNode  =  propertyNode.getFirstChild();  if(propertyNode!=  null)  {  return  true;  }  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(!this.isResolved())  {  return  false;  if(isForwardDeclared)  {  forAnnotations  {  propertyNode  =  propertyNode.getFirstChild();  if(propertyNode!=  null)  {  return  true;  }  }	  return    false;    if(isForwardDeclared)    {    forAnnotations    {    propertyNode    =    propertyNode.getFirstChild();    if(propertyNode!=    null)    {    return    true;    }    	non-compiled	[CE]  not  a  statement	140	None	replace
926	[BUG]  [BUGGY]  if(this.isResolved())  {  return  false;  if(isForwardDeclared)  {  forAnnotations  {  propertyNode  =  propertyNode.getFirstChild();  if(propertyNode!=  null)  {  return  true;  }  }  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.isResolved())  {  return  false;  if(isForwardDeclared)  {  forAnnotations  {  propertyNode  =  propertyNode.getFirstChild();  if(propertyNode!=  null)  {  return  true;  }  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.isResolved())  {  return  false;  if(isForwardDeclared)  {  forAnnotations  {  propertyNode  =  propertyNode.getFirstChild();  if(propertyNode!=  null)  {  return  true;  }  }	  return    false;    if(isForwardDeclared)    {    forAnnotations    {    propertyNode    =    propertyNode.getFirstChild();    if(propertyNode!=    null)    {    return    true;    }    	non-compiled	[CE]  not  a  statement	140	None	replace
927	[BUG]  [BUGGY]  if(this.ignoreForwardReferencedTypes)  {  return  false;  if(isForwardDeclared)  {  forAnnotations  {  propertyNode  =  propertyNode.getFirstChild();  if(propertyNode!=  null)  {  return  true  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.ignoreForwardReferencedTypes)  {  return  false;  if(isForwardDeclared)  {  forAnnotations  {  propertyNode  =  propertyNode.getFirstChild();  if(propertyNode!=  null)  {  return  true  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.ignoreForwardReferencedTypes)  {  return  false;  if(isForwardDeclared)  {  forAnnotations  {  propertyNode  =  propertyNode.getFirstChild();  if(propertyNode!=  null)  {  return  true	  return    false;    if(isForwardDeclared)    {    forAnnotations    {    propertyNode    =    propertyNode.getFirstChild();    if(propertyNode!=    null)    {    return    true;    }    	non-compiled	[CE]  not  a  statement	140	None	replace
928	[BUG]  [BUGGY]  if(!this.isResolved())  {  return  false;  if(isForwardDeclared)  {  forAnnotations  {  propertyNode  =  propertyNode.getFirstChild();  if(propertyNode!=  null)  {  return  true;  }  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(!this.isResolved())  {  return  false;  if(isForwardDeclared)  {  forAnnotations  {  propertyNode  =  propertyNode.getFirstChild();  if(propertyNode!=  null)  {  return  true;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(!this.isResolved())  {  return  false;  if(isForwardDeclared)  {  forAnnotations  {  propertyNode  =  propertyNode.getFirstChild();  if(propertyNode!=  null)  {  return  true;  }	  return    false;    if(isForwardDeclared)    {    forAnnotations    {    propertyNode    =    propertyNode.getFirstChild();    if(propertyNode!=    null)    {    return    true;    }    	non-compiled	[CE]  not  a  statement	140	None	replace
929	[BUG]  [BUGGY]  if(this.ignoreForwardReferencedTypes)  {  return  false;  if(isForwardDeclared)  {  forAnnotations  {  propertyNode  =  propertyNode.getFirstChild();  if(propertyNode!=  null)  {  return  true;  }  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.ignoreForwardReferencedTypes)  {  return  false;  if(isForwardDeclared)  {  forAnnotations  {  propertyNode  =  propertyNode.getFirstChild();  if(propertyNode!=  null)  {  return  true;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.ignoreForwardReferencedTypes)  {  return  false;  if(isForwardDeclared)  {  forAnnotations  {  propertyNode  =  propertyNode.getFirstChild();  if(propertyNode!=  null)  {  return  true;  }	  return    false;    if(isForwardDeclared)    {    forAnnotations    {    propertyNode    =    propertyNode.getFirstChild();    if(propertyNode!=    null)    {    return    true;    }    	non-compiled	[CE]  not  a  statement	140	None	replace
930	[BUG]  [BUGGY]  if(this.isResolved())  {  return  false;  if(isForwardDeclared)  {  forAnnotations  {  propertyNode  =  propertyNode.getFirstChild();  if(propertyNode!=  null)  {  return  true  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.isResolved())  {  return  false;  if(isForwardDeclared)  {  forAnnotations  {  propertyNode  =  propertyNode.getFirstChild();  if(propertyNode!=  null)  {  return  true  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.isResolved())  {  return  false;  if(isForwardDeclared)  {  forAnnotations  {  propertyNode  =  propertyNode.getFirstChild();  if(propertyNode!=  null)  {  return  true	  return    false;    if(isForwardDeclared)    {    forAnnotations    {    propertyNode    =    propertyNode.getFirstChild();    if(propertyNode!=    null)    {    return    true;    }    	non-compiled	[CE]  not  a  statement	140	None	replace
931	[BUG]  [BUGGY]  if(this.forAnnotations!=  forAnnotations)  {  forAnnotations  ignoredForwardReferencedTypes  =  this.ignoreForwardReferencedTypes;  if(ignoreForwardReferencedTypes  ==  false)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.forAnnotations!=  forAnnotations)  {  forAnnotations  ignoredForwardReferencedTypes  =  this.ignoreForwardReferencedTypes;  if(ignoreForwardReferencedTypes  ==  false)  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.forAnnotations!=  forAnnotations)  {  forAnnotations  ignoredForwardReferencedTypes  =  this.ignoreForwardReferencedTypes;  if(ignoreForwardReferencedTypes  ==  false)  {  return  false;  }	  return    false;    if(this.forAnnotations!=    forAnnotations)    {    forAnnotations    ignoreForwardReferencedTypes    =    this.ignoreForwardReferencedTypes;    if(ignoreForwardReferencedTypes    ==    false)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
932	[BUG]  [BUGGY]  if(this.forAnnotations!=  forAnnotations)  {  forAnnotations  ignoreForwardReferencedTypes  =  this.ignoreForwardReferencedTypes;  if(ignoreForwardReferencedTypes  ==  false)  {  return  false  [CE]  ';'  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.forAnnotations!=  forAnnotations)  {  forAnnotations  ignoreForwardReferencedTypes  =  this.ignoreForwardReferencedTypes;  if(ignoreForwardReferencedTypes  ==  false)  {  return  false  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.forAnnotations!=  forAnnotations)  {  forAnnotations  ignoreForwardReferencedTypes  =  this.ignoreForwardReferencedTypes;  if(ignoreForwardReferencedTypes  ==  false)  {  return  false	  return    false;    if(this.forAnnotations!=    forAnnotations)    {    forAnnotations    ignoreForwardReferencedTypes    =    this.ignoreForwardReferencedTypes;    if(ignoreForwardReferencedTypes    ==    false)    {    return    false;    }    	non-compiled	[CE]  ';'  expected	7	None	replace
933	[BUG]  [BUGGY]  if(this.forAnnotations!=  forAnnotations)  {  forAnnotations  ignoreForwardReferencedTypes  =  this.ignoreForwardReferencedTypes;  if(ignoreForwardReferencedTypes  ==  false)  {  return  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.forAnnotations!=  forAnnotations)  {  forAnnotations  ignoreForwardReferencedTypes  =  this.ignoreForwardReferencedTypes;  if(ignoreForwardReferencedTypes  ==  false)  {  return  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.forAnnotations!=  forAnnotations)  {  forAnnotations  ignoreForwardReferencedTypes  =  this.ignoreForwardReferencedTypes;  if(ignoreForwardReferencedTypes  ==  false)  {  return	  return    false;    if(this.forAnnotations!=    forAnnotations)    {    forAnnotations    ignoreForwardReferencedTypes    =    this.ignoreForwardReferencedTypes;    if(ignoreForwardReferencedTypes    ==    false)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
934	[BUG]  [BUGGY]  return(this.validator!=  null);  Return(this.isResolved()  &&  this.validator!=  null);  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  return(this.validator!=  null);  Return(this.isResolved()  &&  this.validator!=  null);  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	return(this.validator!=  null);  Return(this.isResolved()  &&  this.validator!=  null);	  return(this.isResolved()    &&    this.validator!=    null);    Return(this.isResolved()    &&    this.validator!=    null);    	non-compiled	[CE]  cannot  find  symbol	71	None	replace
935	[BUG]  [BUGGY]  return(this.isResolved()  &&  validator!=  null);  Return(this.isResolved()  &&  this.validator!=  null);  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  return(this.isResolved()  &&  validator!=  null);  Return(this.isResolved()  &&  this.validator!=  null);  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	return(this.isResolved()  &&  validator!=  null);  Return(this.isResolved()  &&  this.validator!=  null);	  return(this.isResolved()    &&    this.validator!=    null);    Return(this.isResolved()    &&    this.validator!=    null);    	non-compiled	[CE]  cannot  find  symbol	71	None	replace
936	[BUG]  [BUGGY]  timeout  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.isResolved())  {  return(this.validator!=  null);  }  else  {  return  this.isResolved()  &&  this.validator!=  null;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	add	if(this.isResolved())  {  return(this.validator!=  null);  }  else  {  return  this.isResolved()  &&  this.validator!=  null;  }	  return(this.isResolved()    &&    this.validator!=    null);    Return(this.isResolved()    &&    this.validator!=    null);    	compilable	timeout	71	1	replace
937	[BUG]  [BUGGY]  if(this.isResolved())  {  return(this.validator!=  null);  }  else  {  return  this.isResolved()  &&  this.validator!=  null;  }  timeout  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.isResolved())  {  return(this.validator!=  null);  }  else  {  return  this.isResolved()  &&  this.validator!=  null;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.isResolved())  {  return(this.validator!=  null);  }  else  {  return  this.isResolved()  &&  this.validator!=  null;  }	  return(this.isResolved()    &&    this.validator!=    null);    Return(this.isResolved()    &&    this.validator!=    null);    	compilable	timeout	71	1	replace
938	[BUG]  [BUGGY]  timeout  [FE]            AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  return(this.validator  instanceof  JSType  &&  this.validator!=  null);  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	add	return(this.validator  instanceof  JSType  &&  this.validator!=  null);	  return(this.isValidator()    &&    this.validator!=    null);    	compilable	timeout	105	1	replace
939	[BUG]  [BUGGY]  return(this.validator  instanceof  JSType  &&  this.validator!=  null);  timeout  [FE]            AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  return(this.validator  instanceof  JSType  &&  this.validator!=  null);  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	return(this.validator  instanceof  JSType  &&  this.validator!=  null);	  return(this.isValidator()    &&    this.validator!=    null);    	compilable	timeout	105	1	replace
940	[BUG]  [BUGGY]  return(this.validator!=  null  &&  this.isValidator());  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  return(this.validator!=  null  &&  this.isValidator());  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	return(this.validator!=  null  &&  this.isValidator());	  return(this.isValidator()    &&    this.validator!=    null);    	non-compiled	[CE]  cannot  find  symbol	105	None	replace
941	[BUG]  [BUGGY]  if(this.validator  ==  null)  {  return  super.setValidator(validator);  }  else  {  for(int  i  =  0;  i  <  this.isResolved();  ++i)  {  return  super.setValidator(validator);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.validator  ==  null)  {  return  super.setValidator(validator);  }  else  {  for(int  i  =  0;  i  <  this.isResolved();  ++i)  {  return  super.setValidator(validator);  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.validator  ==  null)  {  return  super.setValidator(validator);  }  else  {  for(int  i  =  0;  i  <  this.isResolved();  ++i)  {  return  super.setValidator(validator);  }	  return    super.setValidator(validator);    if(this.isResolved())    {    return    super.setValidator(validator);    }    else    {    for(int    i    =    0;    i    <    this.isResolved();    ++i)    {    return    super.setValidator(validator);    }    	non-compiled	[CE]  illegal  start  of  expression	127	None	replace
942	[BUG]  [BUGGY]  if(this.isReferenced())  {  return  true;  }  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.isReferenced())  {  return  true;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.isReferenced())  {  return  true;  }	  if(this.isInferred())    {    return    true;    }    	non-compiled	[CE]  cannot  find  symbol	20	None	replace
943	[BUG]  [BUGGY]  if(validator!=  null)  {  return  false;  if(!this.forAnnotations)  {  forAnnotations  ignoreForwardReferencedTypes  =  this.ignoreForwardReferencedTypes;  if(ignoreForwardReferencedTypes)  {  return  true  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(validator!=  null)  {  return  false;  if(!this.forAnnotations)  {  forAnnotations  ignoreForwardReferencedTypes  =  this.ignoreForwardReferencedTypes;  if(ignoreForwardReferencedTypes)  {  return  true  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(validator!=  null)  {  return  false;  if(!this.forAnnotations)  {  forAnnotations  ignoreForwardReferencedTypes  =  this.ignoreForwardReferencedTypes;  if(ignoreForwardReferencedTypes)  {  return  true	  return    false;    if(!this.forAnnotations)    {    forAnnotations    ignoreForwardReferencedTypes    =    this.ignoreForwardReferencedTypes;    if(ignoreForwardReferencedTypes)    {    return    true;    }    	non-compiled	[CE]  ';'  expected	85	None	replace
944	[BUG]  [BUGGY]  if(this.isResolved())  {  return  false;  forAnnotations  ignoreForwardReferencedTypes  =  this.ignoreForwardReferencedTypes;  if(ignoreForwardReferencedTypes)  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.isResolved())  {  return  false;  forAnnotations  ignoreForwardReferencedTypes  =  this.ignoreForwardReferencedTypes;  if(ignoreForwardReferencedTypes)  {  return  true;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.isResolved())  {  return  false;  forAnnotations  ignoreForwardReferencedTypes  =  this.ignoreForwardReferencedTypes;  if(ignoreForwardReferencedTypes)  {  return  true;  }	  return    false;    if(!this.forAnnotations)    {    forAnnotations    ignoreForwardReferencedTypes    =    this.ignoreForwardReferencedTypes;    if(ignoreForwardReferencedTypes)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
945	[BUG]  [BUGGY]  if(!this.isResolved())  {  return  false;  forAnnotations  ignoreForwardReferencedTypes  =  this.ignoreForwardReferencedTypes;  if(ignoreForwardReferencedTypes)  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(!this.isResolved())  {  return  false;  forAnnotations  ignoreForwardReferencedTypes  =  this.ignoreForwardReferencedTypes;  if(ignoreForwardReferencedTypes)  {  return  true;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(!this.isResolved())  {  return  false;  forAnnotations  ignoreForwardReferencedTypes  =  this.ignoreForwardReferencedTypes;  if(ignoreForwardReferencedTypes)  {  return  true;  }	  return    false;    if(!this.forAnnotations)    {    forAnnotations    ignoreForwardReferencedTypes    =    this.ignoreForwardReferencedTypes;    if(ignoreForwardReferencedTypes)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
946	[BUG]  [BUGGY]  if(validator!=  null)  {  return  false;  if(!this.forAnnotations)  {  forAnnotations  ignoreForwardReferencedTypes  =  this.ignoreForwardReferencedTypes;  if(ignoreForwardReferencedTypes)  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(validator!=  null)  {  return  false;  if(!this.forAnnotations)  {  forAnnotations  ignoreForwardReferencedTypes  =  this.ignoreForwardReferencedTypes;  if(ignoreForwardReferencedTypes)  {  return  true;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(validator!=  null)  {  return  false;  if(!this.forAnnotations)  {  forAnnotations  ignoreForwardReferencedTypes  =  this.ignoreForwardReferencedTypes;  if(ignoreForwardReferencedTypes)  {  return  true;  }	  return    false;    if(!this.forAnnotations)    {    forAnnotations    ignoreForwardReferencedTypes    =    this.ignoreForwardReferencedTypes;    if(ignoreForwardReferencedTypes)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
947	[BUG]  [BUGGY]  if(!this.forAnnotations)  {  forAnnotations  ignoreForwardReferencedTypes  =  this.ignoreForwardReferencedTypes;  if(ignoreForwardReferencedTypes)  {  return  true  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(!this.forAnnotations)  {  forAnnotations  ignoreForwardReferencedTypes  =  this.ignoreForwardReferencedTypes;  if(ignoreForwardReferencedTypes)  {  return  true  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(!this.forAnnotations)  {  forAnnotations  ignoreForwardReferencedTypes  =  this.ignoreForwardReferencedTypes;  if(ignoreForwardReferencedTypes)  {  return  true	  return    false;    if(!this.forAnnotations)    {    forAnnotations    ignoreForwardReferencedTypes    =    this.ignoreForwardReferencedTypes;    if(ignoreForwardReferencedTypes)    {    return    true;    }    	non-compiled	[CE]  ';'  expected	85	None	replace
948	[BUG]  [BUGGY]  if(this.referencedType!=  null)  {  Predicate  <  JSType>  validator  =  this.referencedType.getValidator();  if(validator!=  null)  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                                      AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.referencedType!=  null)  {  Predicate  <  JSType>  validator  =  this.referencedType.getValidator();  if(validator!=  null)  {  return  true;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.referencedType!=  null)  {  Predicate  <  JSType>  validator  =  this.referencedType.getValidator();  if(validator!=  null)  {  return  true;  }	  if(this.isResolved())    {    Predicate    <    JSType>    validator    =    this.referencedType.getValidator();    if(validator!=    null)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
949	[BUG]  [BUGGY]  return(this.isResolved()  ||  this.validator!=  null);  if(this.isResolved()  ||  this.validator!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  unreachable  statement  [FE]            AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  return(this.isResolved()  ||  this.validator!=  null);  if(this.isResolved()  ||  this.validator!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	return(this.isResolved()    ||    this.validator!=    null);    if(this.isResolved()  ||  this.validator!=  null)  {  throw  new  IllegalArgumentException( " ");  }	  timeout    	non-compiled	[CE]  unreachable  statement	54	None	add
950	[BUG]  [BUGGY]  return(this.isResolved()  ||  this.validator!=  null);  if(this.isResolved()  ||  this.validator!=  null)  {  return  false;  }  [CE]  unreachable  statement  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  return(this.isResolved()  ||  this.validator!=  null);  if(this.isResolved()  ||  this.validator!=  null)  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	return(this.isResolved()    ||    this.validator!=    null);    if(this.isResolved()  ||  this.validator!=  null)  {  return  false;  }	  timeout    	non-compiled	[CE]  unreachable  statement	54	None	add
951	[BUG]  [BUGGY]  if(validator  ==  null  ||  this.isResolved())  {  return  false;  }  [CE]  missing  return  statement  [FE]                        AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(validator  ==  null  ||  this.isResolved())  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(validator  ==  null  ||  this.isResolved())  {  return  false;  }	  if(validator    ==    null)    {    return    false;    }    	non-compiled	[CE]  missing  return  statement	92	None	replace
952	[BUG]  [BUGGY]  if(this.validator!=  null)  {  return  super.setValidator(validator);  }  else  {  Predicate  <  JSType>  propertyNode  =  this.isResolved();  return  super.setValidator(propertyNode);  }  [CE]  incompatible  types  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.validator!=  null)  {  return  super.setValidator(validator);  }  else  {  Predicate  <  JSType>  propertyNode  =  this.isResolved();  return  super.setValidator(propertyNode);  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.validator!=  null)  {  return  super.setValidator(validator);  }  else  {  Predicate  <  JSType>  propertyNode  =  this.isResolved();  return  super.setValidator(propertyNode);  }	  return    super.setValidator(validator);    if(this.isResolved())    {    return    super.setValidator(validator);    }    else    {    Predicate    <    JSType>    propertyNode    =    this.isResolved();    return    super.setValidator(propertyNode);    }    	non-compiled	[CE]  incompatible  types	125	None	replace
953	[BUG]  [BUGGY]  if(this.isResolved())  {  return  super.setValidator(validator);  }  else  {  Predicate  <  JSType>  propertyNode  =  this.isResolved();  return  super.setValidator  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.isResolved())  {  return  super.setValidator(validator);  }  else  {  Predicate  <  JSType>  propertyNode  =  this.isResolved();  return  super.setValidator  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.isResolved())  {  return  super.setValidator(validator);  }  else  {  Predicate  <  JSType>  propertyNode  =  this.isResolved();  return  super.setValidator	  return    super.setValidator(validator);    if(this.isResolved())    {    return    super.setValidator(validator);    }    else    {    Predicate    <    JSType>    propertyNode    =    this.isResolved();    return    super.setValidator(propertyNode);    }    	non-compiled	[CE]  ';'  expected	125	None	replace
954	[BUG]  [BUGGY]  if(this.isForwardDeclared())  {  Predicate  <  JSType>  referencedType  =  validator.getReferencedType();  if(referencedType!=  null)  {  return  referencedType.setValidator(referencedType);  }  [CE]  illegal  start  of  expression  [FE]                                  AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.isForwardDeclared())  {  Predicate  <  JSType>  referencedType  =  validator.getReferencedType();  if(referencedType!=  null)  {  return  referencedType.setValidator(referencedType);  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.isForwardDeclared())  {  Predicate  <  JSType>  referencedType  =  validator.getReferencedType();  if(referencedType!=  null)  {  return  referencedType.setValidator(referencedType);  }	  if(this.isResolved())    {    Predicate    <    JSType>    referencedType    =    validator.getReferencedType();    if(referencedType!=    null)    {    return    referencedType.setValidator(referencedType);    }    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
955	[BUG]  [BUGGY]  if(this.isReferenced())  {  Predicate  <  JSType>  referencedType  =  validator.getReferencedType();  if(referencedType!=  null)  {  return  referencedType.setValidator(referencedType);  }  [CE]  illegal  start  of  expression  [FE]                                    AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.isReferenced())  {  Predicate  <  JSType>  referencedType  =  validator.getReferencedType();  if(referencedType!=  null)  {  return  referencedType.setValidator(referencedType);  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.isReferenced())  {  Predicate  <  JSType>  referencedType  =  validator.getReferencedType();  if(referencedType!=  null)  {  return  referencedType.setValidator(referencedType);  }	  if(this.isResolved())    {    Predicate    <    JSType>    referencedType    =    validator.getReferencedType();    if(referencedType!=    null)    {    return    referencedType.setValidator(referencedType);    }    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
956	[BUG]  [BUGGY]  if(this.isForwardDeclared())  {  Predicate  <  JSType>  referencedType  =  validator.getReferencedType();  if(referencedType  ==  null)  {  return  referencedType.setValidator(validator);  }  [CE]  illegal  start  of  expression  [FE]                                AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.isForwardDeclared())  {  Predicate  <  JSType>  referencedType  =  validator.getReferencedType();  if(referencedType  ==  null)  {  return  referencedType.setValidator(validator);  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.isForwardDeclared())  {  Predicate  <  JSType>  referencedType  =  validator.getReferencedType();  if(referencedType  ==  null)  {  return  referencedType.setValidator(validator);  }	  if(this.isResolved())    {    Predicate    <    JSType>    referencedType    =    validator.getReferencedType();    if(referencedType    ==    null)    {    return    referencedType.setValidator(validator);    }    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
957	[BUG]  [BUGGY]  if(this.isReferenced())  {  Predicate  <  JSType>  referencedType  =  validator.getReferencedType();  if(referencedType  ==  null)  {  return  referencedType.setValidator(validator);  }  [CE]  illegal  start  of  expression  [FE]                                  AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.isReferenced())  {  Predicate  <  JSType>  referencedType  =  validator.getReferencedType();  if(referencedType  ==  null)  {  return  referencedType.setValidator(validator);  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.isReferenced())  {  Predicate  <  JSType>  referencedType  =  validator.getReferencedType();  if(referencedType  ==  null)  {  return  referencedType.setValidator(validator);  }	  if(this.isResolved())    {    Predicate    <    JSType>    referencedType    =    validator.getReferencedType();    if(referencedType    ==    null)    {    return    referencedType.setValidator(validator);    }    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
958	[BUG]  [BUGGY]  if(this.isForwardDeclared())  {  Predicate  <  JSType>  referencedType  =  validator.getReferencedType();  if(referencedType!=  null)  {  return  referencedType.setValidator(validator);  }  [CE]  illegal  start  of  expression  [FE]                                    AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.isForwardDeclared())  {  Predicate  <  JSType>  referencedType  =  validator.getReferencedType();  if(referencedType!=  null)  {  return  referencedType.setValidator(validator);  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.isForwardDeclared())  {  Predicate  <  JSType>  referencedType  =  validator.getReferencedType();  if(referencedType!=  null)  {  return  referencedType.setValidator(validator);  }	  if(this.isResolved())    {    Predicate    <    JSType>    referencedType    =    validator.getReferencedType();    if(referencedType    ==    null)    {    return    referencedType.setValidator(validator);    }    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
959	[BUG]  [BUGGY]  if(referencedType!=  null)  {  if(this.isResolved())  {  Predicate  <  JSType>  referencedType  =  validator.getReferencedType();  if(referencedType  ==  null)  {  return  referencedType.setValidator  [CE]  ';'  expected  [FE]                                      AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(referencedType!=  null)  {  if(this.isResolved())  {  Predicate  <  JSType>  referencedType  =  validator.getReferencedType();  if(referencedType  ==  null)  {  return  referencedType.setValidator  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(referencedType!=  null)  {  if(this.isResolved())  {  Predicate  <  JSType>  referencedType  =  validator.getReferencedType();  if(referencedType  ==  null)  {  return  referencedType.setValidator	  if(this.isResolved())    {    Predicate    <    JSType>    referencedType    =    validator.getReferencedType();    if(referencedType    ==    null)    {    return    referencedType.setValidator(validator);    }    	non-compiled	[CE]  ';'  expected	67	None	replace
960	[BUG]  [BUGGY]  if(this.forAnonymous!=  null)  {  return  true;  }  [CE]  cannot  find  symbol  forAnonymous  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.forAnonymous!=  null)  {  return  true;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.forAnonymous!=  null)  {  return  true;  }	  if(this.forAnnotations!=    null)    {    return    true;    }    	non-compiled	[CE]  cannot  find  symbol  forAnonymous	72	None	replace
961	[BUG]  [BUGGY]  if(this.forElements!=  null)  {  return  true;  }  [CE]  cannot  find  symbol  forElements  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.forElements!=  null)  {  return  true;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.forElements!=  null)  {  return  true;  }	  if(this.forAnnotations!=    null)    {    return    true;    }    	non-compiled	[CE]  cannot  find  symbol  forElements	72	None	replace
962	[BUG]  [BUGGY]  this.ignoreForwardReferencedTypes  =  false;  [CE]  cannot  find  symbol  ignoreForwardReferencedTypes  [FE]                      AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  this.ignoreForwardReferencedTypes  =  false;  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	this.ignoreForwardReferencedTypes  =  false;	  this.isResolved();    	non-compiled	[CE]  cannot  find  symbol  ignoreForwardReferencedTypes	14	None	replace
963	[BUG]  [BUGGY]  if(!this.value)  {  return  false;  }  [CE]  cannot  find  symbol  value  [FE]                      AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(!this.value)  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(!this.value)  {  return  false;  }	  if(!this.isValidator)    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol  value	116	None	replace
964	[BUG]  [BUGGY]  if(!this.ignoreForwardReferencedTypes.isForwardDeclared())  {  return  true;  }  [CE]  cannot  find  symbol  ignoreForwardReferencedTypes  [FE]                      AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(!this.ignoreForwardReferencedTypes.isForwardDeclared())  {  return  true;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(!this.ignoreForwardReferencedTypes.isForwardDeclared())  {  return  true;  }	  if(!this.isForwardDeclared())    {    return    true;    }    	non-compiled	[CE]  cannot  find  symbol  ignoreForwardReferencedTypes	103	None	replace
965	[BUG]  [BUGGY]  if(!this.validator.isForwardDeclared())  {  return  true;  }  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(!this.validator.isForwardDeclared())  {  return  true;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(!this.validator.isForwardDeclared())  {  return  true;  }	  if(!this.isForwardDeclared())    {    return    true;    }    	non-compiled	[CE]  cannot  find  symbol	103	None	replace
966	[BUG]  [BUGGY]  if(validator!=  null)  {  Predicate  <  JSType>  propertyNode  =  this.getPropertyNode(propertyName);  if(propertyNode!=  null)  {  return  propertyNode.setValidator(valueNode);  }  [CE]  illegal  start  of  expression  [FE]                                AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(validator!=  null)  {  Predicate  <  JSType>  propertyNode  =  this.getPropertyNode(propertyName);  if(propertyNode!=  null)  {  return  propertyNode.setValidator(valueNode);  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(validator!=  null)  {  Predicate  <  JSType>  propertyNode  =  this.getPropertyNode(propertyName);  if(propertyNode!=  null)  {  return  propertyNode.setValidator(valueNode);  }	  if(this.isResolved())    {    Predicate    <    JSType>    propertyNode    =    this.getPropertyNode(propertyName);    if(propertyNode!=    null)    {    return    propertyNode.setValidator(valueNode);    }    	non-compiled	[CE]  illegal  start  of  expression	111	None	replace
967	[BUG]  [BUGGY]  if(validator!=  null)  {  if(this.isResolved())  {  Predicate  <  JSType>  propertyNode  =  this.getPropertyNode(propertyName);  if(propertyNode!=  null)  {  return  propertyNode.setVal  [CE]  ';'  expected  [FE]                                  AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(validator!=  null)  {  if(this.isResolved())  {  Predicate  <  JSType>  propertyNode  =  this.getPropertyNode(propertyName);  if(propertyNode!=  null)  {  return  propertyNode.setVal  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(validator!=  null)  {  if(this.isResolved())  {  Predicate  <  JSType>  propertyNode  =  this.getPropertyNode(propertyName);  if(propertyNode!=  null)  {  return  propertyNode.setVal	  if(this.isResolved())    {    Predicate    <    JSType>    propertyNode    =    this.getPropertyNode(propertyName);    if(propertyNode!=    null)    {    return    propertyNode.setValidator(valueNode);    }    	non-compiled	[CE]  ';'  expected	111	None	replace
968	[BUG]  [BUGGY]  if(validator!=  null)  {  if(this.isResolved())  {  Predicate  <  JSType>  propertyNode  =  this.getPropertyNode(propertyName);  if(propertyNode!=  null)  {  return  propertyNode.setVali  [CE]  ';'  expected  [FE]                                    AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(validator!=  null)  {  if(this.isResolved())  {  Predicate  <  JSType>  propertyNode  =  this.getPropertyNode(propertyName);  if(propertyNode!=  null)  {  return  propertyNode.setVali  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(validator!=  null)  {  if(this.isResolved())  {  Predicate  <  JSType>  propertyNode  =  this.getPropertyNode(propertyName);  if(propertyNode!=  null)  {  return  propertyNode.setVali	  if(this.isResolved())    {    Predicate    <    JSType>    propertyNode    =    this.getPropertyNode(propertyName);    if(propertyNode!=    null)    {    return    propertyNode.setValidator(valueNode);    }    	non-compiled	[CE]  ';'  expected	111	None	replace
969	[BUG]  [BUGGY]  if(this.referencedType!=  null)  {  String  propertyName  =  this.referencedType.getPropertyName();  if(propertyName!=  null)  {  return  super.setValidator(validator);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.referencedType!=  null)  {  String  propertyName  =  this.referencedType.getPropertyName();  if(propertyName!=  null)  {  return  super.setValidator(validator);  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.referencedType!=  null)  {  String  propertyName  =  this.referencedType.getPropertyName();  if(propertyName!=  null)  {  return  super.setValidator(validator);  }	  return    super.setValidator(validator);    if(this.isResolved())    {    Predicate    <    JSType>    property    =    this.referencedType.getProperty(propertyName);    if(property!=    null)    {    return    super.setValidator(validator);    }    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
970	[BUG]  [BUGGY]  if(this.referencedType!=  null)  {  return  super.setValidator(validator);  }  else  {  Predicate  <  JSType>  property  =  this.referencedType.getProperty(propertyName);  if(property!=  null)  {  return  super  [CE]  '.'  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.referencedType!=  null)  {  return  super.setValidator(validator);  }  else  {  Predicate  <  JSType>  property  =  this.referencedType.getProperty(propertyName);  if(property!=  null)  {  return  super  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.referencedType!=  null)  {  return  super.setValidator(validator);  }  else  {  Predicate  <  JSType>  property  =  this.referencedType.getProperty(propertyName);  if(property!=  null)  {  return  super	  return    super.setValidator(validator);    if(this.isResolved())    {    Predicate    <    JSType>    property    =    this.referencedType.getProperty(propertyName);    if(property!=    null)    {    return    super.setValidator(validator);    }    	non-compiled	[CE]  '.'  expected	51	None	replace
971	[BUG]  [BUGGY]  Predicate  <  JSType>  property  =  this.referencedType.getReferencedType(propertyName);  if(property!=  null)  {  return  super.setValidator(validator);  }  [CE]  cannot  find  symbol  propertyName  [FE]                          AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  Predicate  <  JSType>  property  =  this.referencedType.getReferencedType(propertyName);  if(property!=  null)  {  return  super.setValidator(validator);  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	Predicate  <  JSType>  property  =  this.referencedType.getReferencedType(propertyName);  if(property!=  null)  {  return  super.setValidator(validator);  }	  return    super.setValidator(validator);    if(this.isResolved())    {    Predicate    <    JSType>    property    =    this.referencedType.getProperty(propertyName);    if(property!=    null)    {    return    super.setValidator(validator);    }    	non-compiled	[CE]  cannot  find  symbol  propertyName	51	None	replace
972	[BUG]  [BUGGY]  if(this.referencedTypes!=  null)  {  if(!this.isResolved())  {  return  false;  }  else  {  Predicate  <  JSType>  propertyNode  =  this.referencedTypes.get(reference);  if(propertyNode!=  property  [CE]  ')'  expected  [FE]            AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.referencedTypes!=  null)  {  if(!this.isResolved())  {  return  false;  }  else  {  Predicate  <  JSType>  propertyNode  =  this.referencedTypes.get(reference);  if(propertyNode!=  property  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.referencedTypes!=  null)  {  if(!this.isResolved())  {  return  false;  }  else  {  Predicate  <  JSType>  propertyNode  =  this.referencedTypes.get(reference);  if(propertyNode!=  property	  if(this.isResolved())    {    return    false;    }    else    {    Predicate    <    JSType>    propertyNode    =    this.referencedTypes.get(reference);    if(propertyNode!=    propertyNode)    {    return    true;    }    	non-compiled	[CE]  ')'  expected	98	None	replace
973	[BUG]  [BUGGY]  if(this.referencedTypes!=  null)  {  if(this.isResolved())  {  return  false;  }  else  {  Predicate  <  JSType>  propertyNode  =  this.referencedTypes.get(reference);  if(propertyNode!=  propertyNode)  {  return  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.referencedTypes!=  null)  {  if(this.isResolved())  {  return  false;  }  else  {  Predicate  <  JSType>  propertyNode  =  this.referencedTypes.get(reference);  if(propertyNode!=  propertyNode)  {  return  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.referencedTypes!=  null)  {  if(this.isResolved())  {  return  false;  }  else  {  Predicate  <  JSType>  propertyNode  =  this.referencedTypes.get(reference);  if(propertyNode!=  propertyNode)  {  return	  if(this.isResolved())    {    return    false;    }    else    {    Predicate    <    JSType>    propertyNode    =    this.referencedTypes.get(reference);    if(propertyNode!=    propertyNode)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	98	None	replace
974	[BUG]  [BUGGY]  Predicate  <?>  propertyNode  =  this.propertyContinuation.getProperty(REFERENCE_PROP);  [CE]  cannot  find  symbol  REFERENCE_PROP  [FE]                                AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  Predicate  <?>  propertyNode  =  this.propertyContinuation.getProperty(REFERENCE_PROP);  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	Predicate  <?>  propertyNode  =  this.propertyContinuation.getProperty(REFERENCE_PROP);	  Predicate    <?>    propertyNode    =    this.propertyContinuation.getProperty(propertyName);    	non-compiled	[CE]  cannot  find  symbol  REFERENCE_PROP	135	None	replace
975	[BUG]  [BUGGY]  if(this.referencedTypes!=  null)  {  if(validator!=  null)  {  return  super.setValidator(validator);  }  else  {  Predicate  <  JSType>  property  =  this.referencedTypes.get(reference);  if(prop  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.referencedTypes!=  null)  {  if(validator!=  null)  {  return  super.setValidator(validator);  }  else  {  Predicate  <  JSType>  property  =  this.referencedTypes.get(reference);  if(prop  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.referencedTypes!=  null)  {  if(validator!=  null)  {  return  super.setValidator(validator);  }  else  {  Predicate  <  JSType>  property  =  this.referencedTypes.get(reference);  if(prop	  if(this.validator!=    null)    {    return    super.setValidator(validator);    }    else    {    Predicate    <    JSType>    property    =    this.referencedTypes.get(reference);    if(property.isResolved())    {    return    true;    }    	non-compiled	[CE]  ')'  expected	97	None	replace
976	[BUG]  [BUGGY]  if(this.referencedTypes!=  null)  {  if(validator!=  null)  {  return  super.setValidator(validator);  }  else  {  Predicate  <  JSType>  property  =  this.referencedTypes.get(reference);  if  [CE]  '('  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.referencedTypes!=  null)  {  if(validator!=  null)  {  return  super.setValidator(validator);  }  else  {  Predicate  <  JSType>  property  =  this.referencedTypes.get(reference);  if  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.referencedTypes!=  null)  {  if(validator!=  null)  {  return  super.setValidator(validator);  }  else  {  Predicate  <  JSType>  property  =  this.referencedTypes.get(reference);  if	  if(this.validator!=    null)    {    return    super.setValidator(validator);    }    else    {    Predicate    <    JSType>    property    =    this.referencedTypes.get(reference);    if(property.isResolved())    {    return    true;    }    	non-compiled	[CE]  '('  expected	97	None	replace
977	[BUG]  [BUGGY]  if(this.referencedTypes  ==  null)  {  if(this.validator!=  null)  {  return  super.setValidator(validator);  }  else  {  Predicate  <  JSType>  property  =  this.referencedTypes.get(reference);  if  [CE]  '('  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.referencedTypes  ==  null)  {  if(this.validator!=  null)  {  return  super.setValidator(validator);  }  else  {  Predicate  <  JSType>  property  =  this.referencedTypes.get(reference);  if  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.referencedTypes  ==  null)  {  if(this.validator!=  null)  {  return  super.setValidator(validator);  }  else  {  Predicate  <  JSType>  property  =  this.referencedTypes.get(reference);  if	  if(this.validator!=    null)    {    return    super.setValidator(validator);    }    else    {    Predicate    <    JSType>    property    =    this.referencedTypes.get(reference);    if(property.isResolved())    {    return    true;    }    	non-compiled	[CE]  '('  expected	97	None	replace
978	[BUG]  [BUGGY]  if(this.referencedTypes!=  null)  {  if(validator!=  null)  {  return  super.setValidator(validator);  }  else  {  Predicate  <  JSType>  property  =  this.referencedTypes.get(reference);  if(property  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.referencedTypes!=  null)  {  if(validator!=  null)  {  return  super.setValidator(validator);  }  else  {  Predicate  <  JSType>  property  =  this.referencedTypes.get(reference);  if(property  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.referencedTypes!=  null)  {  if(validator!=  null)  {  return  super.setValidator(validator);  }  else  {  Predicate  <  JSType>  property  =  this.referencedTypes.get(reference);  if(property	  if(this.validator!=    null)    {    return    super.setValidator(validator);    }    else    {    Predicate    <    JSType>    property    =    this.referencedTypes.get(reference);    if(property.isResolved())    {    return    true;    }    	non-compiled	[CE]  ')'  expected	97	None	replace
979	[BUG]  [BUGGY]  if(this.referencedTypes!=  null)  {  if(!this.isResolved())  {  return  false;  }  else  {  Predicate  <  JSType>  propertyNode  =  this.referencedTypes.get(reference);  if(propertyNode!=  null)  {  return  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.referencedTypes!=  null)  {  if(!this.isResolved())  {  return  false;  }  else  {  Predicate  <  JSType>  propertyNode  =  this.referencedTypes.get(reference);  if(propertyNode!=  null)  {  return  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.referencedTypes!=  null)  {  if(!this.isResolved())  {  return  false;  }  else  {  Predicate  <  JSType>  propertyNode  =  this.referencedTypes.get(reference);  if(propertyNode!=  null)  {  return	  if(this.isResolved())    {    return    false;    }    else    {    Predicate    <    JSType>    propertyNode    =    this.referencedTypes.get(reference);    if(propertyNode!=    null)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	99	None	replace
980	[BUG]  [BUGGY]  if(this.referencedTypes!=  null)  {  if(this.isResolved())  {  return  false;  }  else  {  Predicate  <  JSType>  propertyNode  =  this.referencedTypes.get(reference);  if(propertyNode!=  null  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.referencedTypes!=  null)  {  if(this.isResolved())  {  return  false;  }  else  {  Predicate  <  JSType>  propertyNode  =  this.referencedTypes.get(reference);  if(propertyNode!=  null  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.referencedTypes!=  null)  {  if(this.isResolved())  {  return  false;  }  else  {  Predicate  <  JSType>  propertyNode  =  this.referencedTypes.get(reference);  if(propertyNode!=  null	  if(this.isResolved())    {    return    false;    }    else    {    Predicate    <    JSType>    propertyNode    =    this.referencedTypes.get(reference);    if(propertyNode!=    null)    {    return    true;    }    	non-compiled	[CE]  ')'  expected	99	None	replace
981	[BUG]  [BUGGY]  if(this.referencedTypes!=  null)  {  if(this.isResolved())  {  return  false;  }  else  {  Predicate  <  JSType>  propertyNode  =  this.referencedTypes.get(reference);  if(propertyNode!=  nu  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.referencedTypes!=  null)  {  if(this.isResolved())  {  return  false;  }  else  {  Predicate  <  JSType>  propertyNode  =  this.referencedTypes.get(reference);  if(propertyNode!=  nu  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.referencedTypes!=  null)  {  if(this.isResolved())  {  return  false;  }  else  {  Predicate  <  JSType>  propertyNode  =  this.referencedTypes.get(reference);  if(propertyNode!=  nu	  if(this.isResolved())    {    return    false;    }    else    {    Predicate    <    JSType>    propertyNode    =    this.referencedTypes.get(reference);    if(propertyNode!=    null)    {    return    true;    }    	non-compiled	[CE]  ')'  expected	99	None	replace
982	[BUG]  [BUGGY]  if(this.forAnnotations!=  null)return  false;  [CE]  cannot  find  symbol  forAnnotations  [FE]                        AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.forAnnotations!=  null)return  false;  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.forAnnotations!=  null)return  false;	  if(this.forAnnotations!=    null)return    false;    }    	non-compiled	[CE]  cannot  find  symbol  forAnnotations	149	None	replace
983	[BUG]  [BUGGY]  if(this.forAnnotations  ==  null)return  false;  [CE]  cannot  find  symbol  forAnnotations  [FE]                          AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.forAnnotations  ==  null)return  false;  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.forAnnotations  ==  null)return  false;	  if(this.forAnnotations!=    null)return    false;    }    	non-compiled	[CE]  cannot  find  symbol  forAnnotations	149	None	replace
984	[BUG]  [BUGGY]  this.propertyContinuations  =  propertyContinuations;  [CE]  missing  return  statement  [FE]                          AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  this.propertyContinuations  =  propertyContinuations;  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	this.propertyContinuations  =  propertyContinuations;	  if(this.propertyContinuations    ==    null)    {    return    false;    }    	non-compiled	[CE]  missing  return  statement	37	None	replace
985	[BUG]  [BUGGY]  timeout  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.validator!=  null)  {  return  super.setValidator(validator);  }  else  {  return  super.setValidator(validator);  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	add	if(this.validator!=  null)  {  return  super.setValidator(validator);  }  else  {  return  super.setValidator(validator);  }	  return    super.setValidator(validator);    if(this.isResolved())    {    return    super.setValidator(validator);    }    else    {    return    super.setValidator(validator);    }    	compilable	timeout	79	1	replace
986	[BUG]  [BUGGY]  if(this.validator!=  null)  {  return  super.setValidator(validator);  }  else  {  return  super.setValidator(validator);  }  timeout  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.validator!=  null)  {  return  super.setValidator(validator);  }  else  {  return  super.setValidator(validator);  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.validator!=  null)  {  return  super.setValidator(validator);  }  else  {  return  super.setValidator(validator);  }	  return    super.setValidator(validator);    if(this.isResolved())    {    return    super.setValidator(validator);    }    else    {    return    super.setValidator(validator);    }    	compilable	timeout	79	1	replace
987	[BUG]  [BUGGY]  if(this.isInferred())  {  return  super.setValidator(validator);  }  else  {  return  super.setValidator(validator);  }  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.isInferred())  {  return  super.setValidator(validator);  }  else  {  return  super.setValidator(validator);  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.isInferred())  {  return  super.setValidator(validator);  }  else  {  return  super.setValidator(validator);  }	  return    super.setValidator(validator);    if(this.isResolved())    {    return    super.setValidator(validator);    }    else    {    return    super.setValidator(validator);    }    	non-compiled	[CE]  cannot  find  symbol	79	None	replace
988	[BUG]  [BUGGY]  timeout  [FE]                      AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.validator!=  validator)  {  return  super.setValidator(validator);  }  else  {  return  super.setValidator(validator);  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	add	if(this.validator!=  validator)  {  return  super.setValidator(validator);  }  else  {  return  super.setValidator(validator);  }	  return    super.setValidator(validator);    if(this.isResolved())    {    return    super.setValidator(validator);    }    else    {    return    super.setValidator(validator);    }    	compilable	timeout	79	1	replace
989	[BUG]  [BUGGY]  if(this.validator!=  validator)  {  return  super.setValidator(validator);  }  else  {  return  super.setValidator(validator);  }  timeout  [FE]                      AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.validator!=  validator)  {  return  super.setValidator(validator);  }  else  {  return  super.setValidator(validator);  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.validator!=  validator)  {  return  super.setValidator(validator);  }  else  {  return  super.setValidator(validator);  }	  return    super.setValidator(validator);    if(this.isResolved())    {    return    super.setValidator(validator);    }    else    {    return    super.setValidator(validator);    }    	compilable	timeout	79	1	replace
990	[BUG]  [BUGGY]  if(this.validator!=  null)  {  return  super.setValidator(validator);  if(this.isResolved())  {  return  super.setValidator(validator);  }  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.validator!=  null)  {  return  super.setValidator(validator);  if(this.isResolved())  {  return  super.setValidator(validator);  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.validator!=  null)  {  return  super.setValidator(validator);  if(this.isResolved())  {  return  super.setValidator(validator);  }	  return    super.setValidator(validator);    if(this.isResolved())    {    return    super.setValidator(validator);    }    else    {    return    super.setValidator(validator);    }    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
991	[BUG]  [BUGGY]  return  super.setValidator(validator,  this.forwardReferencedTypes);  [CE]  cannot  find  symbol  forwardReferencedTypes  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  return  super.setValidator(validator,  this.forwardReferencedTypes);  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	return  super.setValidator(validator,  this.forwardReferencedTypes);	  return    super.setValidator(validator,    this.forAnnotations);    	non-compiled	[CE]  cannot  find  symbol  forwardReferencedTypes	40	None	replace
992	[BUG]  [BUGGY]  return  super.setValidator(validator,  this.value);  [CE]  cannot  find  symbol  value  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  return  super.setValidator(validator,  this.value);  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	return  super.setValidator(validator,  this.value);	  return    super.setValidator(validator,    this.forAnnotations);    	non-compiled	[CE]  cannot  find  symbol  value	40	None	replace
993	[BUG]  [BUGGY]  if(this.isResolved())  {  Predicate  <?>  property  =  this.referencedType.getProperty(propertyName);  if(property!=  null)  {  return  super.setValidator(validator);  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.isResolved())  {  Predicate  <?>  property  =  this.referencedType.getProperty(propertyName);  if(property!=  null)  {  return  super.setValidator(validator);  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.isResolved())  {  Predicate  <?>  property  =  this.referencedType.getProperty(propertyName);  if(property!=  null)  {  return  super.setValidator(validator);  }	  return    super.setValidator(validator);    if(this.isResolved())    {    Predicate    <?>    property    =    this.referencedType.getProperty(propertyName);    if(property!=    null)    {    return    super.setValidator(validator);    }    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
994	[BUG]  [BUGGY]  if(isForwardDeclared)  {  return  super.setValidator(validator);  if(this.isResolved())  {  Predicate  <?>  property  =  this.referencedType.getProperty(propertyName);  if(property!=  null)  {  return  super  [CE]  '.'  expected  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(isForwardDeclared)  {  return  super.setValidator(validator);  if(this.isResolved())  {  Predicate  <?>  property  =  this.referencedType.getProperty(propertyName);  if(property!=  null)  {  return  super  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(isForwardDeclared)  {  return  super.setValidator(validator);  if(this.isResolved())  {  Predicate  <?>  property  =  this.referencedType.getProperty(propertyName);  if(property!=  null)  {  return  super	  return    super.setValidator(validator);    if(this.isResolved())    {    Predicate    <?>    property    =    this.referencedType.getProperty(propertyName);    if(property!=    null)    {    return    super.setValidator(validator);    }    	non-compiled	[CE]  '.'  expected	77	None	replace
995	[BUG]  [BUGGY]  if(isForwardDeclared)  {  return  super.setValidator(validator);  if(this.isResolved())  {  Predicate  <?>  property  =  this.referencedType.getProperty(propertyName);  if(prop  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(isForwardDeclared)  {  return  super.setValidator(validator);  if(this.isResolved())  {  Predicate  <?>  property  =  this.referencedType.getProperty(propertyName);  if(prop  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(isForwardDeclared)  {  return  super.setValidator(validator);  if(this.isResolved())  {  Predicate  <?>  property  =  this.referencedType.getProperty(propertyName);  if(prop	  return    super.setValidator(validator);    if(this.isResolved())    {    Predicate    <?>    property    =    this.referencedType.getProperty(propertyName);    if(property!=    null)    {    return    super.setValidator(validator);    }    	non-compiled	[CE]  ')'  expected	77	None	replace
996	[BUG]  [BUGGY]  if(this.isForwardDeclared())  {  Predicate  <  JSType>  propertyNode  =  this.referencedTypes.get(reference);  if(propertyNode!=  null)  {  return  propertyNode.setValidator(valueNode);  }  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.isForwardDeclared())  {  Predicate  <  JSType>  propertyNode  =  this.referencedTypes.get(reference);  if(propertyNode!=  null)  {  return  propertyNode.setValidator(valueNode);  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.isForwardDeclared())  {  Predicate  <  JSType>  propertyNode  =  this.referencedTypes.get(reference);  if(propertyNode!=  null)  {  return  propertyNode.setValidator(valueNode);  }	  if(this.isResolved())    {    Predicate    <    JSType>    propertyNode    =    this.referencedTypes.get(reference);    if(propertyNode!=    null)    {    return    propertyNode.setValidator(valueNode);    }    	non-compiled	[CE]  illegal  start  of  expression	108	None	replace
997	[BUG]  [BUGGY]  if(this.referencedTypes!=  null)  {  Predicate  <  JSType>  propertyNode  =  this.referencedTypes.get(reference);  if(propertyNode!=  null)  {  return  propertyNode.setValidator(validator);  }  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.referencedTypes!=  null)  {  Predicate  <  JSType>  propertyNode  =  this.referencedTypes.get(reference);  if(propertyNode!=  null)  {  return  propertyNode.setValidator(validator);  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.referencedTypes!=  null)  {  Predicate  <  JSType>  propertyNode  =  this.referencedTypes.get(reference);  if(propertyNode!=  null)  {  return  propertyNode.setValidator(validator);  }	  if(this.isResolved())    {    Predicate    <    JSType>    propertyNode    =    this.referencedTypes.get(reference);    if(propertyNode!=    null)    {    return    propertyNode.setValidator(valueNode);    }    	non-compiled	[CE]  illegal  start  of  expression	108	None	replace
998	[BUG]  [BUGGY]  if(referenced!=  null)  {  return  false;  }  [CE]  cannot  find  symbol  referenced  [FE]                        AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(referenced!=  null)  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(referenced!=  null)  {  return  false;  }	  return    false;    if(this.isResolved())    {    JSType    referencedType    =    getReferencedType(referenced);    if(referencedType    ==    null)    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol  referenced	90	None	replace
999	[BUG]  [BUGGY]  if(this.forAnonymousTypes!=  null  ||  this.ignoreForwardReferencedTypes)  {  return  false;  }  [CE]  cannot  find  symbol  forAnonymousTypes  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.forAnonymousTypes!=  null  ||  this.ignoreForwardReferencedTypes)  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.forAnonymousTypes!=  null  ||  this.ignoreForwardReferencedTypes)  {  return  false;  }	  if(this.forAnnotations!=    null    ||    this.ignoreForwardReferencedTypes)    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol  forAnonymousTypes	151	None	replace
1000	[BUG]  [BUGGY]  if(this.isForwardDeclared())  {  return  super.setValidator(validator);  }  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.isForwardDeclared())  {  return  super.setValidator(validator);  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.isForwardDeclared())  {  return  super.setValidator(validator);  }	  if(this.isResolved())    {    return    super.setValidator(validator);    }    	non-compiled	[CE]  cannot  find  symbol	38	None	replace
1001	[BUG]  [BUGGY]  Predicate  <?>  property  =  this.isResolved()?  super.setValidator(validator);  [CE]  :  expected  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  Predicate  <?>  property  =  this.isResolved()?  super.setValidator(validator);  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	Predicate  <?>  property  =  this.isResolved()?  super.setValidator(validator);	  if(this.isResolved())    {    return    super.setValidator(validator);    }    	non-compiled	[CE]  :  expected	38	None	replace
1002	[BUG]  [BUGGY]  this.isForwardDeclared()  &&  super.setValidator(validator);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  this.isForwardDeclared()  &&  super.setValidator(validator);  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	this.isForwardDeclared()  &&  super.setValidator(validator);	  if(this.isResolved())    {    return    super.setValidator(validator);    }    	non-compiled	[CE]  not  a  statement	38	None	replace
1003	[BUG]  [BUGGY]  if(this.isValidator())  {  return(this.isValidator()  &&  validator!=  null);  }  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.isValidator())  {  return(this.isValidator()  &&  validator!=  null);  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.isValidator())  {  return(this.isValidator()  &&  validator!=  null);  }	  if(this.isResolved())    {    return(this.isResolved()    &&    validator!=    null);    }    	non-compiled	[CE]  cannot  find  symbol	63	None	replace
1004	[BUG]  [BUGGY]  if(this.isValidator())  {  return(this.isResolved()  &&  validator!=  null);  }  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.isValidator())  {  return(this.isResolved()  &&  validator!=  null);  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.isValidator())  {  return(this.isResolved()  &&  validator!=  null);  }	  if(this.isResolved())    {    return(this.isResolved()    &&    validator!=    null);    }    	non-compiled	[CE]  cannot  find  symbol	63	None	replace
1005	[BUG]  [BUGGY]  if(this.isResolved())  {  Predicate  <  JSType>  validator  =  this.validator;  if(validator!=  null)  {  return  super.setValidator  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.isResolved())  {  Predicate  <  JSType>  validator  =  this.validator;  if(validator!=  null)  {  return  super.setValidator  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.isResolved())  {  Predicate  <  JSType>  validator  =  this.validator;  if(validator!=  null)  {  return  super.setValidator	  return    super.setValidator(validator);    if(this.isResolved())    {    Predicate    <    JSType>    validator    =    this.validator;    if(validator!=    null)    {    return    super.setValidator(validator);    }    	non-compiled	[CE]  ';'  expected	52	None	replace
1006	[BUG]  [BUGGY]  if(!this.ignoreForwardReferencedTypes)  {  forAnnotations  ignoreForwardReferencedTypes  =  this.ignoreForwardReferencedTypes;  if(isForwardDeclared)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(!this.ignoreForwardReferencedTypes)  {  forAnnotations  ignoreForwardReferencedTypes  =  this.ignoreForwardReferencedTypes;  if(isForwardDeclared)  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(!this.ignoreForwardReferencedTypes)  {  forAnnotations  ignoreForwardReferencedTypes  =  this.ignoreForwardReferencedTypes;  if(isForwardDeclared)  {  return  false;  }	  return    false;    if(!this.forAnnotations)    {    forAnnotations    ignoreForwardReferencedTypes    =    this.ignoreForwardReferencedTypes;    if(isForwardDeclared)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
1007	[BUG]  [BUGGY]  if(!this.forAnnotations)  {  forAnnotations  ignoreForwardReferencedTypes  =  this.ignoreForwardReferencedTypes;  if(isForwardDeclared)  {  return  false;  }  }  [CE]  cannot  find  symbol  forAnnotations  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(!this.forAnnotations)  {  forAnnotations  ignoreForwardReferencedTypes  =  this.ignoreForwardReferencedTypes;  if(isForwardDeclared)  {  return  false;  }  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(!this.forAnnotations)  {  forAnnotations  ignoreForwardReferencedTypes  =  this.ignoreForwardReferencedTypes;  if(isForwardDeclared)  {  return  false;  }  }	  return    false;    if(!this.forAnnotations)    {    forAnnotations    ignoreForwardReferencedTypes    =    this.ignoreForwardReferencedTypes;    if(isForwardDeclared)    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol  forAnnotations	86	None	replace
1008	[BUG]  [BUGGY]  if(!this.ignoreForwardReferencedTypes.isForwardDeclared())  {  return  false;  }  [CE]  cannot  find  symbol  ignoreForwardReferencedTypes  [FE]                          AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(!this.ignoreForwardReferencedTypes.isForwardDeclared())  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(!this.ignoreForwardReferencedTypes.isForwardDeclared())  {  return  false;  }	  if(!this.isForwardDeclared())    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol  ignoreForwardReferencedTypes	16	None	replace
1009	[BUG]  [BUGGY]  if(!this.isForwardDeclared()  ||  this.ignoreForwardReferencedTypes)  {  return  false;  }  [CE]  cannot  find  symbol  [FE]                            AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(!this.isForwardDeclared()  ||  this.ignoreForwardReferencedTypes)  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(!this.isForwardDeclared()  ||  this.ignoreForwardReferencedTypes)  {  return  false;  }	  if(!this.isForwardDeclared())    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol	16	None	replace
1010	[BUG]  [BUGGY]  if(!this.validator.isForwardDeclared())  {  return  false;  }  [CE]  cannot  find  symbol  [FE]                              AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(!this.validator.isForwardDeclared())  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(!this.validator.isForwardDeclared())  {  return  false;  }	  if(!this.isForwardDeclared())    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol	16	None	replace
1011	[BUG]  [BUGGY]  if(!this.resolved.isForwardDeclared())  {  return  false;  }  [CE]  resolved  has  private  access  in  JSType  [FE]                                AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(!this.resolved.isForwardDeclared())  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(!this.resolved.isForwardDeclared())  {  return  false;  }	  if(!this.isForwardDeclared())    {    return    false;    }    	non-compiled	[CE]  resolved  has  private  access  in  JSType	16	None	replace
1012	[BUG]  [BUGGY]  if(validator!=  null)  {  return  super.setValidator(validator);  if(this.isResolved())  {  Predicate  <  JSType>  property  =  this.getProperty(propertyName);  if(property!=  null)  {  return  super  [CE]  '.'  expected  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(validator!=  null)  {  return  super.setValidator(validator);  if(this.isResolved())  {  Predicate  <  JSType>  property  =  this.getProperty(propertyName);  if(property!=  null)  {  return  super  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(validator!=  null)  {  return  super.setValidator(validator);  if(this.isResolved())  {  Predicate  <  JSType>  property  =  this.getProperty(propertyName);  if(property!=  null)  {  return  super	  return    super.setValidator(validator);    if(this.isResolved())    {    Predicate    <    JSType>    property    =    this.getProperty(propertyName);    if(property!=    null)    {    return    super.setValidator(property);    }    	non-compiled	[CE]  '.'  expected	78	None	replace
1013	[BUG]  [BUGGY]  if(validator!=  null)  {  return  super.setValidator(validator);  if(this.isResolved())  {  Predicate  <  JSType>  property  =  this.getProperty(propertyName);  if(property!=  null)  {  return  super.  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(validator!=  null)  {  return  super.setValidator(validator);  if(this.isResolved())  {  Predicate  <  JSType>  property  =  this.getProperty(propertyName);  if(property!=  null)  {  return  super.  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(validator!=  null)  {  return  super.setValidator(validator);  if(this.isResolved())  {  Predicate  <  JSType>  property  =  this.getProperty(propertyName);  if(property!=  null)  {  return  super.	  return    super.setValidator(validator);    if(this.isResolved())    {    Predicate    <    JSType>    property    =    this.getProperty(propertyName);    if(property!=    null)    {    return    super.setValidator(property);    }    	non-compiled	[CE]  <identifier>  expected	78	None	replace
1014	[BUG]  [BUGGY]  if(validator!=  null)  {  return  super.setValidator(validator);  if(this.isResolved())  {  Predicate  <  JSType>  property  =  this.getProperty(propertyName);  if(property!=  null)  {  return  super.set  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(validator!=  null)  {  return  super.setValidator(validator);  if(this.isResolved())  {  Predicate  <  JSType>  property  =  this.getProperty(propertyName);  if(property!=  null)  {  return  super.set  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(validator!=  null)  {  return  super.setValidator(validator);  if(this.isResolved())  {  Predicate  <  JSType>  property  =  this.getProperty(propertyName);  if(property!=  null)  {  return  super.set	  return    super.setValidator(validator);    if(this.isResolved())    {    Predicate    <    JSType>    property    =    this.getProperty(propertyName);    if(property!=    null)    {    return    super.setValidator(property);    }    	non-compiled	[CE]  ';'  expected	78	None	replace
1015	[BUG]  [BUGGY]  if(validator!=  null)  {  return  super.setValidator(validator);  if(this.isResolved())  {  Predicate  <  JSType>  property  =  this.getProperty(propertyName);  if(property!=  null)  {  return  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(validator!=  null)  {  return  super.setValidator(validator);  if(this.isResolved())  {  Predicate  <  JSType>  property  =  this.getProperty(propertyName);  if(property!=  null)  {  return  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(validator!=  null)  {  return  super.setValidator(validator);  if(this.isResolved())  {  Predicate  <  JSType>  property  =  this.getProperty(propertyName);  if(property!=  null)  {  return	  return    super.setValidator(validator);    if(this.isResolved())    {    Predicate    <    JSType>    property    =    this.getProperty(propertyName);    if(property!=    null)    {    return    super.setValidator(property);    }    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
1016	[BUG]  [BUGGY]  if(this.validator!=  null)  {  return  super.setValidator(validator);  if(this.isResolved())  {  Predicate  <  JSType>  property  =  this.getProperty(propertyName);  if(property!=  null)  {  return  super  [CE]  '.'  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.validator!=  null)  {  return  super.setValidator(validator);  if(this.isResolved())  {  Predicate  <  JSType>  property  =  this.getProperty(propertyName);  if(property!=  null)  {  return  super  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.validator!=  null)  {  return  super.setValidator(validator);  if(this.isResolved())  {  Predicate  <  JSType>  property  =  this.getProperty(propertyName);  if(property!=  null)  {  return  super	  return    super.setValidator(validator);    if(this.isResolved())    {    Predicate    <    JSType>    property    =    this.getProperty(propertyName);    if(property!=    null)    {    return    super.setValidator(property);    }    	non-compiled	[CE]  '.'  expected	78	None	replace
1017	[BUG]  [BUGGY]  if(!this.slotType.isValidator())  {  return  false;  }  [CE]  cannot  find  symbol  slotType  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(!this.slotType.isValidator())  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(!this.slotType.isValidator())  {  return  false;  }	  if(!this.isValidator())    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol  slotType	30	None	replace
1018	[BUG]  [BUGGY]  if(!this.value.isValidator())  {  return  false;  }  [CE]  cannot  find  symbol  value  [FE]                      AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(!this.value.isValidator())  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(!this.value.isValidator())  {  return  false;  }	  if(!this.isValidator())    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol  value	30	None	replace
1019	[BUG]  [BUGGY]  if(validator.isInferred())  {  return  false;  }  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(validator.isInferred())  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(validator.isInferred())  {  return  false;  }	  if(this.isInferred())    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol	21	None	replace
1020	[BUG]  [BUGGY]  if(validator!=  null)  {  forAnnotations  <  propertyNode  =  propertyNode.getLastChild();  if(!this.isResolved())  {  return  false;  }  [CE]  >  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(validator!=  null)  {  forAnnotations  <  propertyNode  =  propertyNode.getLastChild();  if(!this.isResolved())  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(validator!=  null)  {  forAnnotations  <  propertyNode  =  propertyNode.getLastChild();  if(!this.isResolved())  {  return  false;  }	  return    false;    if(validator!=    null)    {    forAnnotations    <    propertyNode    =    propertyNode.getFirstChild();    if(!this.isResolved())    {    return    false;    }    	non-compiled	[CE]  >  expected	143	None	replace
1021	[BUG]  [BUGGY]  if(this.isForwardDeclared())  {  return  false;  forAnnotations  <  propertyNode  =  propertyNode.getFirstChild();  if(!this.isResolved())  {  return  false;  }  [CE]  >  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.isForwardDeclared())  {  return  false;  forAnnotations  <  propertyNode  =  propertyNode.getFirstChild();  if(!this.isResolved())  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.isForwardDeclared())  {  return  false;  forAnnotations  <  propertyNode  =  propertyNode.getFirstChild();  if(!this.isResolved())  {  return  false;  }	  return    false;    if(validator!=    null)    {    forAnnotations    <    propertyNode    =    propertyNode.getFirstChild();    if(!this.isResolved())    {    return    false;    }    	non-compiled	[CE]  >  expected	143	None	replace
1022	[BUG]  [BUGGY]  if(this.isForwardDeclared())  {  return  false;  forAnnotations  <  propertyNode  =  propertyNode.getFirstChild();  if(!this.isResolved())  {  return  true;  }  [CE]  >  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.isForwardDeclared())  {  return  false;  forAnnotations  <  propertyNode  =  propertyNode.getFirstChild();  if(!this.isResolved())  {  return  true;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.isForwardDeclared())  {  return  false;  forAnnotations  <  propertyNode  =  propertyNode.getFirstChild();  if(!this.isResolved())  {  return  true;  }	  return    false;    if(validator!=    null)    {    forAnnotations    <    propertyNode    =    propertyNode.getFirstChild();    if(!this.isResolved())    {    return    false;    }    	non-compiled	[CE]  >  expected	143	None	replace
1023	[BUG]  [BUGGY]  Predicate  <?>  property  =  this.getPropertyNode(reference);  [CE]  incompatible  types  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  Predicate  <?>  property  =  this.getPropertyNode(reference);  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	Predicate  <?>  property  =  this.getPropertyNode(reference);	  Predicate    <?>    property    =    this.getProperty(propertyName);    	non-compiled	[CE]  incompatible  types	104	None	replace
1024	[BUG]  [BUGGY]  if(!this.isValidator()  ||  validator.isForwardDeclared())  {  return  true;  }  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(!this.isValidator()  ||  validator.isForwardDeclared())  {  return  true;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(!this.isValidator()  ||  validator.isForwardDeclared())  {  return  true;  }	  if(!this.isValidator())    {    return    true;    }    	non-compiled	[CE]  cannot  find  symbol	15	None	replace
1025	[BUG]  [BUGGY]  if(this.isResolved())  {  return(this.validator!=  null);  this.isResolved()  &&  this.validator!=  null;  }  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.isResolved())  {  return(this.validator!=  null);  this.isResolved()  &&  this.validator!=  null;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.isResolved())  {  return(this.validator!=  null);  this.isResolved()  &&  this.validator!=  null;  }	  return(this.isResolved()    &&    this.validator!=    null);    this.isResolved()    &&    this.validator!=    null);    	non-compiled	[CE]  not  a  statement	24	None	replace
1026	[BUG]  [BUGGY]  if(this.isResolved())  {  return(this.validator!=  null);  this.isResolved()  &&  validator!=  null;  }  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.isResolved())  {  return(this.validator!=  null);  this.isResolved()  &&  validator!=  null;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.isResolved())  {  return(this.validator!=  null);  this.isResolved()  &&  validator!=  null;  }	  return(this.isResolved()    &&    this.validator!=    null);    this.isResolved()    &&    this.validator!=    null);    	non-compiled	[CE]  not  a  statement	24	None	replace
1027	[BUG]  [BUGGY]  return(this.isResolved()  &&  validator!=  null);  this.isResolved()  &&  this.validator!=  null);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  return(this.isResolved()  &&  validator!=  null);  this.isResolved()  &&  this.validator!=  null);  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	return(this.isResolved()  &&  validator!=  null);  this.isResolved()  &&  this.validator!=  null);	  return(this.isResolved()    &&    this.validator!=    null);    this.isResolved()    &&    this.validator!=    null);    	non-compiled	[CE]  not  a  statement	24	None	replace
1028	[BUG]  [BUGGY]  if(this.isResolved())  {  return(this.isResolved()  &&  this.validator!=  null);  this.isResolved()  &&  this.validator!=  null;  }  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.isResolved())  {  return(this.isResolved()  &&  this.validator!=  null);  this.isResolved()  &&  this.validator!=  null;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.isResolved())  {  return(this.isResolved()  &&  this.validator!=  null);  this.isResolved()  &&  this.validator!=  null;  }	  return(this.isResolved()    &&    this.validator!=    null);    this.isResolved()    &&    this.validator!=    null);    	non-compiled	[CE]  not  a  statement	24	None	replace
1029	[BUG]  [BUGGY]  if(isForwardDeclared()  ||  this.ignoreForwardReferencedTypes)  {  return  false;  }  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(isForwardDeclared()  ||  this.ignoreForwardReferencedTypes)  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(isForwardDeclared()  ||  this.ignoreForwardReferencedTypes)  {  return  false;  }	  if(isForwardDeclared())    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol	83	None	replace
1030	[BUG]  [BUGGY]  if(isForwardDeclared()  ||  isReferencedTypesVisible())  {  return  false;  }  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(isForwardDeclared()  ||  isReferencedTypesVisible())  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(isForwardDeclared()  ||  isReferencedTypesVisible())  {  return  false;  }	  if(isForwardDeclared())    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol	83	None	replace
1031	[BUG]  [BUGGY]  if(!this.forAnnotations)  {  return  super.setValidator(validator);  if(this.isResolved())  {  for(JSType  referencedType  :  this.referencedTypes)  {  return  super.setValidator(referencedType);  }  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(!this.forAnnotations)  {  return  super.setValidator(validator);  if(this.isResolved())  {  for(JSType  referencedType  :  this.referencedTypes)  {  return  super.setValidator(referencedType);  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(!this.forAnnotations)  {  return  super.setValidator(validator);  if(this.isResolved())  {  for(JSType  referencedType  :  this.referencedTypes)  {  return  super.setValidator(referencedType);  }	  return    super.setValidator(validator);    if(this.isResolved())    {    for(JSType    referencedType    :    this.referencedTypes)    {    return    super.setValidator(referencedType);    }    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
1032	[BUG]  [BUGGY]  if(!this.forAnnotations)  {  return  super.setValidator(validator);  if(this.isResolved())  {  for(JSType  referencedType  :  this.referencedTypes)  {  return  super.setValidator(referencedType);  }  }  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(!this.forAnnotations)  {  return  super.setValidator(validator);  if(this.isResolved())  {  for(JSType  referencedType  :  this.referencedTypes)  {  return  super.setValidator(referencedType);  }  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(!this.forAnnotations)  {  return  super.setValidator(validator);  if(this.isResolved())  {  for(JSType  referencedType  :  this.referencedTypes)  {  return  super.setValidator(referencedType);  }  }	  return    super.setValidator(validator);    if(this.isResolved())    {    for(JSType    referencedType    :    this.referencedTypes)    {    return    super.setValidator(referencedType);    }    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
1033	[BUG]  [BUGGY]  if(this.isResolved())  {  for(JSType  referencedType  :  this.referencedTypes)  {  return  super.setValidator(referencedType);  }  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.isResolved())  {  for(JSType  referencedType  :  this.referencedTypes)  {  return  super.setValidator(referencedType);  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.isResolved())  {  for(JSType  referencedType  :  this.referencedTypes)  {  return  super.setValidator(referencedType);  }	  return    super.setValidator(validator);    if(this.isResolved())    {    for(JSType    referencedType    :    this.referencedTypes)    {    return    super.setValidator(referencedType);    }    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
1034	[BUG]  [BUGGY]  if(!this.forAnnotations)  {  return  super.setValidator(validator);  if(this.isResolved())  {  for(JSType  referencedType  :  this.referencedTypes)  {  return  super.set  [CE]  ';'  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(!this.forAnnotations)  {  return  super.setValidator(validator);  if(this.isResolved())  {  for(JSType  referencedType  :  this.referencedTypes)  {  return  super.set  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(!this.forAnnotations)  {  return  super.setValidator(validator);  if(this.isResolved())  {  for(JSType  referencedType  :  this.referencedTypes)  {  return  super.set	  return    super.setValidator(validator);    if(this.isResolved())    {    for(JSType    referencedType    :    this.referencedTypes)    {    return    super.setValidator(referencedType);    }    	non-compiled	[CE]  ';'  expected	53	None	replace
1035	[BUG]  [BUGGY]  if(!this.forAnnotations)  {  return  super.setValidator(validator);  if(this.isResolved())  {  for(JSType  referencedType  :  this.referencedTypes)  {  return  super.setVal  [CE]  ';'  expected  [FE]                                  AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(!this.forAnnotations)  {  return  super.setValidator(validator);  if(this.isResolved())  {  for(JSType  referencedType  :  this.referencedTypes)  {  return  super.setVal  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(!this.forAnnotations)  {  return  super.setValidator(validator);  if(this.isResolved())  {  for(JSType  referencedType  :  this.referencedTypes)  {  return  super.setVal	  return    super.setValidator(validator);    if(this.isResolved())    {    for(JSType    referencedType    :    this.referencedTypes)    {    return    super.setValidator(referencedType);    }    	non-compiled	[CE]  ';'  expected	53	None	replace
1036	[BUG]  [BUGGY]  if(this.referencedType!=  referencedType)  {  return  super.setValidator(validator);  }  else  {  for(JSType  referencedType  :  this.referencedTypes)  {  return  super.setValidator(referencedType);  }  [CE]  illegal  start  of  expression  [FE]                                    AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.referencedType!=  referencedType)  {  return  super.setValidator(validator);  }  else  {  for(JSType  referencedType  :  this.referencedTypes)  {  return  super.setValidator(referencedType);  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.referencedType!=  referencedType)  {  return  super.setValidator(validator);  }  else  {  for(JSType  referencedType  :  this.referencedTypes)  {  return  super.setValidator(referencedType);  }	  return    super.setValidator(validator);    if(this.isResolved())    {    for(JSType    referencedType    :    this.referencedTypes)    {    return    super.setValidator(referencedType);    }    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
1037	[BUG]  [BUGGY]  if(!this.forAnnotations)  {  return  super.setValidator(validator);  if(isResolved())  {  for(JSType  referencedType  :  this.referencedTypes)  {  return  super.setValidator(referencedType);  }  [CE]  illegal  start  of  expression  [FE]                                      AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(!this.forAnnotations)  {  return  super.setValidator(validator);  if(isResolved())  {  for(JSType  referencedType  :  this.referencedTypes)  {  return  super.setValidator(referencedType);  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(!this.forAnnotations)  {  return  super.setValidator(validator);  if(isResolved())  {  for(JSType  referencedType  :  this.referencedTypes)  {  return  super.setValidator(referencedType);  }	  return    super.setValidator(validator);    if(this.isResolved())    {    for(JSType    referencedType    :    this.referencedTypes)    {    return    super.setValidator(referencedType);    }    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
1038	[BUG]  [BUGGY]  if(this.isReferenced())  {  Predicate  <  JSType>  referencedType  =  validator.getReferencedType();  if(referencedType!=  null)  {  return  referencedType.setValidator(validator);  }  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.isReferenced())  {  Predicate  <  JSType>  referencedType  =  validator.getReferencedType();  if(referencedType!=  null)  {  return  referencedType.setValidator(validator);  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.isReferenced())  {  Predicate  <  JSType>  referencedType  =  validator.getReferencedType();  if(referencedType!=  null)  {  return  referencedType.setValidator(validator);  }	  if(this.isResolved())    {    Predicate    <    JSType>    referencedType    =    validator.getReferencedType();    if(referencedType!=    null)    {    return    referencedType.setValidator(validator);    }    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
1039	[BUG]  [BUGGY]  if(referencedType!=  null)  {  Predicate  <  JSType>  referencedType  =  validator.getReferencedType();  if(referencedType!=  null)  {  return  referencedType.setValidator(validator);  }  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(referencedType!=  null)  {  Predicate  <  JSType>  referencedType  =  validator.getReferencedType();  if(referencedType!=  null)  {  return  referencedType.setValidator(validator);  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(referencedType!=  null)  {  Predicate  <  JSType>  referencedType  =  validator.getReferencedType();  if(referencedType!=  null)  {  return  referencedType.setValidator(validator);  }	  if(this.isResolved())    {    Predicate    <    JSType>    referencedType    =    validator.getReferencedType();    if(referencedType!=    null)    {    return    referencedType.setValidator(validator);    }    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
1040	[BUG]  [BUGGY]  if(referencedType!=  null)  {  if(this.isResolved())  {  Predicate  <  JSType>  referencedType  =  validator.getReferencedType();  if(referencedType!=  null)  {  return  referencedType.setValidator  [CE]  ';'  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(referencedType!=  null)  {  if(this.isResolved())  {  Predicate  <  JSType>  referencedType  =  validator.getReferencedType();  if(referencedType!=  null)  {  return  referencedType.setValidator  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(referencedType!=  null)  {  if(this.isResolved())  {  Predicate  <  JSType>  referencedType  =  validator.getReferencedType();  if(referencedType!=  null)  {  return  referencedType.setValidator	  if(this.isResolved())    {    Predicate    <    JSType>    referencedType    =    validator.getReferencedType();    if(referencedType!=    null)    {    return    referencedType.setValidator(validator);    }    	non-compiled	[CE]  ';'  expected	65	None	replace
1041	[BUG]  [BUGGY]  if(referencedType!=  null)  {  if(this.isResolved())  {  Predicate  <  JSType>  referencedType  =  validator.getReferencedType();  if(referencedType!=  null)  {  return  referencedType.setValidator(validator);  }  [CE]  illegal  start  of  expression  [FE]                                  AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(referencedType!=  null)  {  if(this.isResolved())  {  Predicate  <  JSType>  referencedType  =  validator.getReferencedType();  if(referencedType!=  null)  {  return  referencedType.setValidator(validator);  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(referencedType!=  null)  {  if(this.isResolved())  {  Predicate  <  JSType>  referencedType  =  validator.getReferencedType();  if(referencedType!=  null)  {  return  referencedType.setValidator(validator);  }	  if(this.isResolved())    {    Predicate    <    JSType>    referencedType    =    validator.getReferencedType();    if(referencedType!=    null)    {    return    referencedType.setValidator(validator);    }    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
1042	[BUG]  [BUGGY]  if(this.isForwardDeclared())  {  Predicate  <  JSType>  propertyNode  =  this.propertyNode.getValue();  if(propertyNode!=  null)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                                      AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.isForwardDeclared())  {  Predicate  <  JSType>  propertyNode  =  this.propertyNode.getValue();  if(propertyNode!=  null)  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.isForwardDeclared())  {  Predicate  <  JSType>  propertyNode  =  this.propertyNode.getValue();  if(propertyNode!=  null)  {  return  false;  }	  if(this.isResolved())    {    Predicate    <    JSType>    propertyNode    =    this.propertyNode.getValue();    if(propertyNode!=    null)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	114	None	replace
1043	[BUG]  [BUGGY]  if(validator!=  null)  {  if(this.isResolved())  {  Predicate  <  JSType>  propertyNode  =  this.propertyNode.getValue();  if(propertyNode!=  null)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                                        AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(validator!=  null)  {  if(this.isResolved())  {  Predicate  <  JSType>  propertyNode  =  this.propertyNode.getValue();  if(propertyNode!=  null)  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(validator!=  null)  {  if(this.isResolved())  {  Predicate  <  JSType>  propertyNode  =  this.propertyNode.getValue();  if(propertyNode!=  null)  {  return  false;  }	  if(this.isResolved())    {    Predicate    <    JSType>    propertyNode    =    this.propertyNode.getValue();    if(propertyNode!=    null)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	114	None	replace
1044	[BUG]  [BUGGY]  if(this.isReferenced())  {  Predicate  <  JSType>  propertyNode  =  this.propertyNode.getValue();  if(propertyNode!=  null)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                                          AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.isReferenced())  {  Predicate  <  JSType>  propertyNode  =  this.propertyNode.getValue();  if(propertyNode!=  null)  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.isReferenced())  {  Predicate  <  JSType>  propertyNode  =  this.propertyNode.getValue();  if(propertyNode!=  null)  {  return  false;  }	  if(this.isResolved())    {    Predicate    <    JSType>    propertyNode    =    this.propertyNode.getValue();    if(propertyNode!=    null)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	114	None	replace
1045	[BUG]  [BUGGY]  if(!this.isValidation()  ||  this.validator!=  null)  {  return  true;  }  [CE]  cannot  find  symbol  [FE]                            AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(!this.isValidation()  ||  this.validator!=  null)  {  return  true;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(!this.isValidation()  ||  this.validator!=  null)  {  return  true;  }	  if(!this.isValidation())    {    return    true;    }    	non-compiled	[CE]  cannot  find  symbol	17	None	replace
1046	[BUG]  [BUGGY]  this.isForwardDeclared()  &&  this.ignoreForwardReferencedTypes)  {  return  true;  }  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  this.isForwardDeclared()  &&  this.ignoreForwardReferencedTypes)  {  return  true;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	this.isForwardDeclared()  &&  this.ignoreForwardReferencedTypes)  {  return  true;  }	  this.isForwardDeclared())    {    return    true;    }    	non-compiled	[CE]  not  a  statement	74	None	replace
1047	[BUG]  [BUGGY]  if(validator.isValidator())  {  return  true;  }  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(validator.isValidator())  {  return  true;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(validator.isValidator())  {  return  true;  }	  if(this.isValidator())    {    return    true;    }    	non-compiled	[CE]  cannot  find  symbol	75	None	replace
1048	[BUG]  [BUGGY]  if(this.isValidator()  ||  this.slotType.isValidator())  {  return  true;  }  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.isValidator()  ||  this.slotType.isValidator())  {  return  true;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.isValidator()  ||  this.slotType.isValidator())  {  return  true;  }	  if(this.isValidator())    {    return    true;    }    	non-compiled	[CE]  cannot  find  symbol	75	None	replace
1049	[BUG]  [BUGGY]  if(!this.isUnknownType()  ||  this.isResolved())  {  return  true;  }  [CE]  missing  return  statement  [FE]                        AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(!this.isUnknownType()  ||  this.isResolved())  {  return  true;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(!this.isUnknownType()  ||  this.isResolved())  {  return  true;  }	  if(!this.isUnknownType())    {    return    true;    }    	non-compiled	[CE]  missing  return  statement	118	None	replace
1050	[BUG]  [BUGGY]  if(!this.isUnknownType()  ||  this.validator!=  null)  {  return  false;  }  [CE]  missing  return  statement  [FE]                          AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(!this.isUnknownType()  ||  this.validator!=  null)  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(!this.isUnknownType()  ||  this.validator!=  null)  {  return  false;  }	  if(!this.isUnknownType())    {    return    true;    }    	non-compiled	[CE]  missing  return  statement	118	None	replace
1051	[BUG]  [BUGGY]  if(!this.isUnknownType()  ||  this.isReferenced())  {  return  true;  }  [CE]  cannot  find  symbol  [FE]                            AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(!this.isUnknownType()  ||  this.isReferenced())  {  return  true;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(!this.isUnknownType()  ||  this.isReferenced())  {  return  true;  }	  if(!this.isUnknownType())    {    return    true;    }    	non-compiled	[CE]  cannot  find  symbol	118	None	replace
1052	[BUG]  [BUGGY]  if(this.isForwardDeclared()  ||  this.ignoreForwardReferencedTypes)  {  return  false;  }  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.isForwardDeclared()  ||  this.ignoreForwardReferencedTypes)  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.isForwardDeclared()  ||  this.ignoreForwardReferencedTypes)  {  return  false;  }	  if(this.isForwardDeclared())    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
1053	[BUG]  [BUGGY]  if(this.ignoreForwardReferencedTypes.isForwardDeclared())  {  return  false;  }  [CE]  cannot  find  symbol  ignoreForwardReferencedTypes  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.ignoreForwardReferencedTypes.isForwardDeclared())  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.ignoreForwardReferencedTypes.isForwardDeclared())  {  return  false;  }	  if(this.isForwardDeclared())    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol  ignoreForwardReferencedTypes	18	None	replace
1054	[BUG]  [BUGGY]  if(this.slotType  ==  null)  {  return  true;  }  [CE]  cannot  find  symbol  slotType  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.slotType  ==  null)  {  return  true;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.slotType  ==  null)  {  return  true;  }	  if(this.slotType!=    null)    {    return    true;    }    	non-compiled	[CE]  cannot  find  symbol  slotType	148	None	replace
1055	[BUG]  [BUGGY]  return(this.isResolved()  &&  validator!=  null);  if(this.isResolved()  &&  validator!=  null);  }  else  {  return  this.isResolved()  &&  validator!=  null);  }  [CE]  'else'  without  'if'  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  return(this.isResolved()  &&  validator!=  null);  if(this.isResolved()  &&  validator!=  null);  }  else  {  return  this.isResolved()  &&  validator!=  null);  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	return(this.isResolved()    &&    validator!=    null);    if(this.isResolved()  &&  validator!=  null);  }  else  {  return  this.isResolved()  &&  validator!=  null);  }	  timeout    	non-compiled	[CE]  'else'  without  'if'	56	None	add
1056	[BUG]  [BUGGY]  return(this.isResolved()  &&  validator!=  null);  if(this.isResolved()  &&  validator!=  null);  }  while(this.isResolved()  &&  validator!=  null);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  return(this.isResolved()  &&  validator!=  null);  if(this.isResolved()  &&  validator!=  null);  }  while(this.isResolved()  &&  validator!=  null);  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	return(this.isResolved()    &&    validator!=    null);    if(this.isResolved()  &&  validator!=  null);  }  while(this.isResolved()  &&  validator!=  null);	  timeout    	non-compiled	[CE]  class,  interface,  or  enum  expected	56	None	add
1057	[BUG]  [BUGGY]  if(this.referencedType!=  null)  {  String  propertyName  =  this.referencedType.getPropertyName();  if(property!=  null)  {  return  super.setValidator(validator);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.referencedType!=  null)  {  String  propertyName  =  this.referencedType.getPropertyName();  if(property!=  null)  {  return  super.setValidator(validator);  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.referencedType!=  null)  {  String  propertyName  =  this.referencedType.getPropertyName();  if(property!=  null)  {  return  super.setValidator(validator);  }	  return    super.setValidator(validator);    if(this.isResolved())    {    Predicate    <    JSType>    property    =    this.referencedType.getProperty(propertyName);    if(property!=    null)    {    return    super.setValidator(validator);    }    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
1058	[BUG]  [BUGGY]  if(this.referencedType!=  null)  {  String  propertyName  =  this.referencedType.getPropertyName(propertyName);  if(property!=  null)  {  return  super.setValidator(validator);  }  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.referencedType!=  null)  {  String  propertyName  =  this.referencedType.getPropertyName(propertyName);  if(property!=  null)  {  return  super.setValidator(validator);  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.referencedType!=  null)  {  String  propertyName  =  this.referencedType.getPropertyName(propertyName);  if(property!=  null)  {  return  super.setValidator(validator);  }	  return    super.setValidator(validator);    if(this.isResolved())    {    Predicate    <    JSType>    property    =    this.referencedType.getProperty(propertyName);    if(property!=    null)    {    return    super.setValidator(validator);    }    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
1059	[BUG]  [BUGGY]  this.isForwardDeclared()  &&  isForwardReferencedTypes)  {  return  false;  }  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  this.isForwardDeclared()  &&  isForwardReferencedTypes)  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	this.isForwardDeclared()  &&  isForwardReferencedTypes)  {  return  false;  }	  this.isForwardDeclared())    {    return    false;    }    	non-compiled	[CE]  not  a  statement	35	None	replace
1060	[BUG]  [BUGGY]  this.isForwardDeclared()  &&  validator.isUnknownType())  {  return  false;  }  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  this.isForwardDeclared()  &&  validator.isUnknownType())  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	this.isForwardDeclared()  &&  validator.isUnknownType())  {  return  false;  }	  this.isForwardDeclared())    {    return    false;    }    	non-compiled	[CE]  not  a  statement	35	None	replace
1061	[BUG]  [BUGGY]  if(this.isForwardDeclared())  {  Predicate  <  JSType>  propertyNode  =  this.referencedTypes.get(reference);  if(propertyNode!=  null)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.isForwardDeclared())  {  Predicate  <  JSType>  propertyNode  =  this.referencedTypes.get(reference);  if(propertyNode!=  null)  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.isForwardDeclared())  {  Predicate  <  JSType>  propertyNode  =  this.referencedTypes.get(reference);  if(propertyNode!=  null)  {  return  false;  }	  if(this.isResolved())    {    Predicate    <    JSType>    propertyNode    =    this.referencedTypes.get(reference);    if(propertyNode!=    null)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	109	None	replace
1062	[BUG]  [BUGGY]  this.referencedTypes.put(reference,  propertyNode);  if(propertyNode!=  null)  {  return  false;  }  [CE]  cannot  find  symbol  propertyNode  [FE]                              AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  this.referencedTypes.put(reference,  propertyNode);  if(propertyNode!=  null)  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	this.referencedTypes.put(reference,  propertyNode);  if(propertyNode!=  null)  {  return  false;  }	  if(this.isResolved())    {    Predicate    <    JSType>    propertyNode    =    this.referencedTypes.get(reference);    if(propertyNode!=    null)    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol  propertyNode	109	None	replace
1063	[BUG]  [BUGGY]  if(!this.forAnnotations)  {  forAnnotations  ignoreForwardReferencedTypes  =  this.ignoreForwardReferencedTypes;  if(ignoreForwardReferencedTypes)  {  return  true;  }  }  [CE]  cannot  find  symbol  forAnnotations  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(!this.forAnnotations)  {  forAnnotations  ignoreForwardReferencedTypes  =  this.ignoreForwardReferencedTypes;  if(ignoreForwardReferencedTypes)  {  return  true;  }  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(!this.forAnnotations)  {  forAnnotations  ignoreForwardReferencedTypes  =  this.ignoreForwardReferencedTypes;  if(ignoreForwardReferencedTypes)  {  return  true;  }  }	  return    false;    if(!this.forAnnotations)    {    forAnnotations    ignoreForwardReferencedTypes    =    this.ignoreForwardReferencedTypes;    if(ignoreForwardReferencedTypes)    {    return    true;    }    	non-compiled	[CE]  cannot  find  symbol  forAnnotations	85	None	replace
1064	[BUG]  [BUGGY]  if(!this.forAnnotations)  {  forAnnotations  ignoredForwardReferencedTypes  =  this.ignoreForwardReferencedTypes;  if(ignoreForwardReferencedTypes)  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(!this.forAnnotations)  {  forAnnotations  ignoredForwardReferencedTypes  =  this.ignoreForwardReferencedTypes;  if(ignoreForwardReferencedTypes)  {  return  true;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(!this.forAnnotations)  {  forAnnotations  ignoredForwardReferencedTypes  =  this.ignoreForwardReferencedTypes;  if(ignoreForwardReferencedTypes)  {  return  true;  }	  return    false;    if(!this.forAnnotations)    {    forAnnotations    ignoreForwardReferencedTypes    =    this.ignoreForwardReferencedTypes;    if(ignoreForwardReferencedTypes)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
1065	[BUG]  [BUGGY]  if(this.propertyContinuations  ==  null  ||  this.propertyContinuations.contains(propertyName))  {  return  false;  }  [CE]  cannot  find  symbol  propertyName  [FE]                          AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.propertyContinuations  ==  null  ||  this.propertyContinuations.contains(propertyName))  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.propertyContinuations  ==  null  ||  this.propertyContinuations.contains(propertyName))  {  return  false;  }	  if(this.propertyContinuations    ==    null)    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol  propertyName	37	None	replace
1066	[BUG]  [BUGGY]  if(this.propertyContinuations  ==  null  ||  this.propertyContinuations.size()  <=  propertyContinuations.size())  {  return  false;  }  [CE]  missing  return  statement  [FE]                            AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.propertyContinuations  ==  null  ||  this.propertyContinuations.size()  <=  propertyContinuations.size())  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.propertyContinuations  ==  null  ||  this.propertyContinuations.size()  <=  propertyContinuations.size())  {  return  false;  }	  if(this.propertyContinuations    ==    null)    {    return    false;    }    	non-compiled	[CE]  missing  return  statement	37	None	replace
1067	[BUG]  [BUGGY]  if(this.propertyContinuations  ==  null  ||  this.propertyContinuations.contains(validator))  {  return  false;  }  [CE]  missing  return  statement  [FE]                              AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.propertyContinuations  ==  null  ||  this.propertyContinuations.contains(validator))  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.propertyContinuations  ==  null  ||  this.propertyContinuations.contains(validator))  {  return  false;  }	  if(this.propertyContinuations    ==    null)    {    return    false;    }    	non-compiled	[CE]  missing  return  statement	37	None	replace
1068	[BUG]  [BUGGY]  if(this.propertyContinuations  ==  null  ||  this.propertyContinuations!=  null)  {  return  false;  }  [CE]  missing  return  statement  [FE]                                AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.propertyContinuations  ==  null  ||  this.propertyContinuations!=  null)  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.propertyContinuations  ==  null  ||  this.propertyContinuations!=  null)  {  return  false;  }	  if(this.propertyContinuations    ==    null)    {    return    false;    }    	non-compiled	[CE]  missing  return  statement	37	None	replace
1069	[BUG]  [BUGGY]  if(this.propertyContinuations  ==  null  ||  this.propertyContinuations.isEmpty())  {  return  false;  }  [CE]  missing  return  statement  [FE]                                  AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.propertyContinuations  ==  null  ||  this.propertyContinuations.isEmpty())  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.propertyContinuations  ==  null  ||  this.propertyContinuations.isEmpty())  {  return  false;  }	  if(this.propertyContinuations    ==    null)    {    return    false;    }    	non-compiled	[CE]  missing  return  statement	37	None	replace
1070	[BUG]  [BUGGY]  if(this.value!=  null)return  false;  }  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.value!=  null)return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.value!=  null)return  false;  }	  if(this.value!=    null)    {    return    false;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	12	None	replace
1071	[BUG]  [BUGGY]  if(this.propertyName!=  null)  {  return  false;  }  [CE]  cannot  find  symbol  propertyName  [FE]                          AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.propertyName!=  null)  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.propertyName!=  null)  {  return  false;  }	  if(this.value!=    null)    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol  propertyName	12	None	replace
1072	[BUG]  [BUGGY]  if(this.isUnknownType())  {  return  super.setValidator(validator);  if(this.isResolved())  {  return  super.setValidator(validator);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.isUnknownType())  {  return  super.setValidator(validator);  if(this.isResolved())  {  return  super.setValidator(validator);  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.isUnknownType())  {  return  super.setValidator(validator);  if(this.isResolved())  {  return  super.setValidator(validator);  }	  return    super.setValidator(validator);    if(this.isResolved())    {    return    super.setValidator(validator);    }    else    {    for(int    i    =    0;    i    <    propertyContinuations.size();    ++i)    {    PropertyContinuation    <    NamedType>    propertyContinuations    =    propertyContinuations.get(i);    if    	non-compiled	[CE]  illegal  start  of  expression	129	None	replace
1073	[BUG]  [BUGGY]  if(this.isUnknownType())  {  return  super.setValidator(validator);  }  [CE]  missing  return  statement  [FE]                        AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.isUnknownType())  {  return  super.setValidator(validator);  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.isUnknownType())  {  return  super.setValidator(validator);  }	  return    super.setValidator(validator);    if(this.isResolved())    {    return    super.setValidator(validator);    }    else    {    for(int    i    =    0;    i    <    propertyContinuations.size();    ++i)    {    PropertyContinuation    <    NamedType>    propertyContinuations    =    propertyContinuations.get(i);    if    	non-compiled	[CE]  missing  return  statement	129	None	replace
1074	[BUG]  [BUGGY]  if(this.isUnknownType())  {  return  super.setValidator(validator);  }  else  {  for(int  i  =  0;  i  <  propertyContinuations.size();  ++i)  {  PropertyContinuation  <  NamedType>  propertyContinuations  =  propertyContinuations.get(i);  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.isUnknownType())  {  return  super.setValidator(validator);  }  else  {  for(int  i  =  0;  i  <  propertyContinuations.size();  ++i)  {  PropertyContinuation  <  NamedType>  propertyContinuations  =  propertyContinuations.get(i);  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.isUnknownType())  {  return  super.setValidator(validator);  }  else  {  for(int  i  =  0;  i  <  propertyContinuations.size();  ++i)  {  PropertyContinuation  <  NamedType>  propertyContinuations  =  propertyContinuations.get(i);	  return    super.setValidator(validator);    if(this.isResolved())    {    return    super.setValidator(validator);    }    else    {    for(int    i    =    0;    i    <    propertyContinuations.size();    ++i)    {    PropertyContinuation    <    NamedType>    propertyContinuations    =    propertyContinuations.get(i);    if    	non-compiled	[CE]  illegal  start  of  expression	129	None	replace
1075	[BUG]  [BUGGY]  if(propertyContinuations!=  null)  {  return  super.setValidator(validator);  if(this.isResolved())  {  return  super.setValidator(validator);  }  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(propertyContinuations!=  null)  {  return  super.setValidator(validator);  if(this.isResolved())  {  return  super.setValidator(validator);  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(propertyContinuations!=  null)  {  return  super.setValidator(validator);  if(this.isResolved())  {  return  super.setValidator(validator);  }	  return    super.setValidator(validator);    if(this.isResolved())    {    return    super.setValidator(validator);    }    else    {    for(int    i    =    0;    i    <    propertyContinuations.size();    ++i)    {    PropertyContinuation    <    NamedType>    propertyContinuations    =    propertyContinuations.get(i);    if    	non-compiled	[CE]  illegal  start  of  expression	129	None	replace
1076	[BUG]  [BUGGY]  if(referencedType!=  null)  {  Predicate  <  JSType>  referencedType  =  validator.getReferencedType();  if(referencedType!=  null)  {  return  referencedType.setValidator(value);  }  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(referencedType!=  null)  {  Predicate  <  JSType>  referencedType  =  validator.getReferencedType();  if(referencedType!=  null)  {  return  referencedType.setValidator(value);  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(referencedType!=  null)  {  Predicate  <  JSType>  referencedType  =  validator.getReferencedType();  if(referencedType!=  null)  {  return  referencedType.setValidator(value);  }	  if(this.isResolved())    {    Predicate    <    JSType>    referencedType    =    validator.getReferencedType();    if(referencedType!=    null)    {    return    referencedType.setValidator(value);    }    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
1077	[BUG]  [BUGGY]  Predicate  <  JSType>  referencedType  =  validator.referencedType();  if(referencedType!=  null)  {  return  referencedType.setValidator(value);  }  [CE]  cannot  find  symbol  [FE]                            AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  Predicate  <  JSType>  referencedType  =  validator.referencedType();  if(referencedType!=  null)  {  return  referencedType.setValidator(value);  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	Predicate  <  JSType>  referencedType  =  validator.referencedType();  if(referencedType!=  null)  {  return  referencedType.setValidator(value);  }	  if(this.isResolved())    {    Predicate    <    JSType>    referencedType    =    validator.getReferencedType();    if(referencedType!=    null)    {    return    referencedType.setValidator(value);    }    	non-compiled	[CE]  cannot  find  symbol	64	None	replace
1078	[BUG]  [BUGGY]  if(this.isInferred()  ||  this.isReferenced())  {  return  true;  }  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.isInferred()  ||  this.isReferenced())  {  return  true;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.isInferred()  ||  this.isReferenced())  {  return  true;  }	  if(this.isInferred())    {    return    true;    }    	non-compiled	[CE]  cannot  find  symbol	20	None	replace
1079	[BUG]  [BUGGY]  if(!this.forAnnotations)  {  forAnnotations  ignoreForwardReferencedTypes  =  new  JSType[this.ignoreForwardReferencedTypes];  if(isForwardDeclared)  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(!this.forAnnotations)  {  forAnnotations  ignoreForwardReferencedTypes  =  new  JSType[this.ignoreForwardReferencedTypes];  if(isForwardDeclared)  {  return  true;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(!this.forAnnotations)  {  forAnnotations  ignoreForwardReferencedTypes  =  new  JSType[this.ignoreForwardReferencedTypes];  if(isForwardDeclared)  {  return  true;  }	  return    false;    if(!this.forAnnotations)    {    forAnnotations    ignoreForwardReferencedTypes    =    this.ignoreForwardReferencedTypes;    if(isForwardDeclared)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
1080	[BUG]  [BUGGY]  if(!this.forAnnotations)  {  forAnnotations  ignoreForwardReferencedTypes  =  this.ignoreForwardReferencedTypes;  if(isForwardDeclared)  {  return  true;  }  }  [CE]  cannot  find  symbol  forAnnotations  [FE]                        AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(!this.forAnnotations)  {  forAnnotations  ignoreForwardReferencedTypes  =  this.ignoreForwardReferencedTypes;  if(isForwardDeclared)  {  return  true;  }  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(!this.forAnnotations)  {  forAnnotations  ignoreForwardReferencedTypes  =  this.ignoreForwardReferencedTypes;  if(isForwardDeclared)  {  return  true;  }  }	  return    false;    if(!this.forAnnotations)    {    forAnnotations    ignoreForwardReferencedTypes    =    this.ignoreForwardReferencedTypes;    if(isForwardDeclared)    {    return    true;    }    	non-compiled	[CE]  cannot  find  symbol  forAnnotations	89	None	replace
1081	[BUG]  [BUGGY]  if(!this.forAnnotations)  {  forAnnotations  ignoreForwardReferencedTypes  =  this.ignoreInferredTypes;  if(isForwardDeclared)  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(!this.forAnnotations)  {  forAnnotations  ignoreForwardReferencedTypes  =  this.ignoreInferredTypes;  if(isForwardDeclared)  {  return  true;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(!this.forAnnotations)  {  forAnnotations  ignoreForwardReferencedTypes  =  this.ignoreInferredTypes;  if(isForwardDeclared)  {  return  true;  }	  return    false;    if(!this.forAnnotations)    {    forAnnotations    ignoreForwardReferencedTypes    =    this.ignoreForwardReferencedTypes;    if(isForwardDeclared)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
1082	[BUG]  [BUGGY]  if(!this.forAnnotations)  {  forAnnotations  ignoreForwardReferencedTypes;  if(isForwardDeclared)  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(!this.forAnnotations)  {  forAnnotations  ignoreForwardReferencedTypes;  if(isForwardDeclared)  {  return  true;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(!this.forAnnotations)  {  forAnnotations  ignoreForwardReferencedTypes;  if(isForwardDeclared)  {  return  true;  }	  return    false;    if(!this.forAnnotations)    {    forAnnotations    ignoreForwardReferencedTypes    =    this.ignoreForwardReferencedTypes;    if(isForwardDeclared)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
1083	[BUG]  [BUGGY]  if(this.isForwardDeclared())return  false;  }  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.isForwardDeclared())return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.isForwardDeclared())return  false;  }	  if(this.isForwardDeclared())    {    return    false;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	18	None	replace
1084	[BUG]  [BUGGY]  if(this.isForwardDeclared()  ||  this.isUnknownType())  {  return  false;  }  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.isForwardDeclared()  ||  this.isUnknownType())  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.isForwardDeclared()  ||  this.isUnknownType())  {  return  false;  }	  if(this.isForwardDeclared())    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
1085	[BUG]  [BUGGY]  if(propertyNode  ==  null)  {  return  super.setValidator(validator);  }  else  {  Predicate  <  JSType>  propertyNode  =  this.isResolved();  return  super.setValidator(valueNode);  }  [CE]  cannot  find  symbol  propertyNode  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(propertyNode  ==  null)  {  return  super.setValidator(validator);  }  else  {  Predicate  <  JSType>  propertyNode  =  this.isResolved();  return  super.setValidator(valueNode);  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(propertyNode  ==  null)  {  return  super.setValidator(validator);  }  else  {  Predicate  <  JSType>  propertyNode  =  this.isResolved();  return  super.setValidator(valueNode);  }	  return    super.setValidator(validator);    if(this.isResolved())    {    return    super.setValidator(validator);    }    else    {    Predicate    <    JSType>    propertyNode    =    this.isResolved();    return    super.setValidator(valueNode);    }    	non-compiled	[CE]  cannot  find  symbol  propertyNode	128	None	replace
1086	[BUG]  [BUGGY]  if(propertyNode.getType()  ==  Token.NAME)  {  return  super.setValidator(validator);  }  else  {  Predicate  <  JSType>  propertyNode  =  this.isResolved();  return  super.setValidator(valueNode);  }  [CE]  cannot  find  symbol  propertyNode  [FE]                      AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(propertyNode.getType()  ==  Token.NAME)  {  return  super.setValidator(validator);  }  else  {  Predicate  <  JSType>  propertyNode  =  this.isResolved();  return  super.setValidator(valueNode);  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(propertyNode.getType()  ==  Token.NAME)  {  return  super.setValidator(validator);  }  else  {  Predicate  <  JSType>  propertyNode  =  this.isResolved();  return  super.setValidator(valueNode);  }	  return    super.setValidator(validator);    if(this.isResolved())    {    return    super.setValidator(validator);    }    else    {    Predicate    <    JSType>    propertyNode    =    this.isResolved();    return    super.setValidator(valueNode);    }    	non-compiled	[CE]  cannot  find  symbol  propertyNode	128	None	replace
1087	[BUG]  [BUGGY]  if(propertyNode.getType()  ==  Token.FUNCTION)  {  return  super.setValidator(validator);  }  else  {  Predicate  <  JSType>  propertyNode  =  this.isResolved();  return  super.setValidator(valueNode);  }  [CE]  cannot  find  symbol  propertyNode  [FE]                        AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(propertyNode.getType()  ==  Token.FUNCTION)  {  return  super.setValidator(validator);  }  else  {  Predicate  <  JSType>  propertyNode  =  this.isResolved();  return  super.setValidator(valueNode);  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(propertyNode.getType()  ==  Token.FUNCTION)  {  return  super.setValidator(validator);  }  else  {  Predicate  <  JSType>  propertyNode  =  this.isResolved();  return  super.setValidator(valueNode);  }	  return    super.setValidator(validator);    if(this.isResolved())    {    return    super.setValidator(validator);    }    else    {    Predicate    <    JSType>    propertyNode    =    this.isResolved();    return    super.setValidator(valueNode);    }    	non-compiled	[CE]  cannot  find  symbol  propertyNode	128	None	replace
1088	[BUG]  [BUGGY]  if(propertyNode.isEmpty())  {  return  super.setValidator(validator);  }  else  {  Predicate  <  JSType>  propertyNode  =  this.isResolved();  return  super.setValidator(valueNode);  }  [CE]  cannot  find  symbol  propertyNode  [FE]                          AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(propertyNode.isEmpty())  {  return  super.setValidator(validator);  }  else  {  Predicate  <  JSType>  propertyNode  =  this.isResolved();  return  super.setValidator(valueNode);  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(propertyNode.isEmpty())  {  return  super.setValidator(validator);  }  else  {  Predicate  <  JSType>  propertyNode  =  this.isResolved();  return  super.setValidator(valueNode);  }	  return    super.setValidator(validator);    if(this.isResolved())    {    return    super.setValidator(validator);    }    else    {    Predicate    <    JSType>    propertyNode    =    this.isResolved();    return    super.setValidator(valueNode);    }    	non-compiled	[CE]  cannot  find  symbol  propertyNode	128	None	replace
1089	[BUG]  [BUGGY]  if(this.ignoredForwardReferencedTypes  ==  null)  {  return  false;  }  [CE]  cannot  find  symbol  ignoredForwardReferencedTypes  [FE]                        AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.ignoredForwardReferencedTypes  ==  null)  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.ignoredForwardReferencedTypes  ==  null)  {  return  false;  }	  if(this.forwardReferencedTypes    ==    null)    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol  ignoredForwardReferencedTypes	36	None	replace
1090	[BUG]  [BUGGY]  if(this.notReferencedTypes  ==  null)  {  return  false;  }  [CE]  cannot  find  symbol  notReferencedTypes  [FE]                          AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.notReferencedTypes  ==  null)  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.notReferencedTypes  ==  null)  {  return  false;  }	  if(this.forwardReferencedTypes    ==    null)    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol  notReferencedTypes	36	None	replace
1091	[BUG]  [BUGGY]  if(this.isForwardDeclared())  {  return  false;  }  else  {  Predicate  <  JSType>  property  =  this.referencedTypes.get(reference);  if(property!=  null)  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.isForwardDeclared())  {  return  false;  }  else  {  Predicate  <  JSType>  property  =  this.referencedTypes.get(reference);  if(property!=  null)  {  return  true;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.isForwardDeclared())  {  return  false;  }  else  {  Predicate  <  JSType>  property  =  this.referencedTypes.get(reference);  if(property!=  null)  {  return  true;  }	  if(this.isResolved())    {    return    false;    }    else    {    Predicate    <    JSType>    property    =    this.referencedTypes.get(reference);    if(property!=    null)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	102	None	replace
1092	[BUG]  [BUGGY]  if(this.referencedTypes!=  null)  {  if(this.isResolved())  {  return  false;  }  else  {  Predicate  <  JSType>  property  =  this.referencedTypes.get(reference);  if(property  ==  null)  {  return  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.referencedTypes!=  null)  {  if(this.isResolved())  {  return  false;  }  else  {  Predicate  <  JSType>  property  =  this.referencedTypes.get(reference);  if(property  ==  null)  {  return  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.referencedTypes!=  null)  {  if(this.isResolved())  {  return  false;  }  else  {  Predicate  <  JSType>  property  =  this.referencedTypes.get(reference);  if(property  ==  null)  {  return	  if(this.isResolved())    {    return    false;    }    else    {    Predicate    <    JSType>    property    =    this.referencedTypes.get(reference);    if(property!=    null)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	102	None	replace
1093	[BUG]  [BUGGY]  if(referencedType!=  null)  {  if(this.isResolved())  {  return  false;  }  else  {  Predicate  <  JSType>  referencedType  =  getReferencedType(reference);  if(referencedType!=  null)  {  return  true;  }  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(referencedType!=  null)  {  if(this.isResolved())  {  return  false;  }  else  {  Predicate  <  JSType>  referencedType  =  getReferencedType(reference);  if(referencedType!=  null)  {  return  true;  }  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(referencedType!=  null)  {  if(this.isResolved())  {  return  false;  }  else  {  Predicate  <  JSType>  referencedType  =  getReferencedType(reference);  if(referencedType!=  null)  {  return  true;  }  }	  if(this.isResolved())    {    return    false;    }    else    {    Predicate    <    JSType>    referencedType    =    getReferencedType(reference);    if(referencedType!=    null)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	101	None	replace
1094	[BUG]  [BUGGY]  if(referencedType  ==  null)  {  if(this.isResolved())  {  return  false;  }  else  {  Predicate  <  JSType>  referencedType  =  getReferencedType(reference);  if(referencedType!=  null)  {  return  true;  }  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(referencedType  ==  null)  {  if(this.isResolved())  {  return  false;  }  else  {  Predicate  <  JSType>  referencedType  =  getReferencedType(reference);  if(referencedType!=  null)  {  return  true;  }  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(referencedType  ==  null)  {  if(this.isResolved())  {  return  false;  }  else  {  Predicate  <  JSType>  referencedType  =  getReferencedType(reference);  if(referencedType!=  null)  {  return  true;  }  }	  if(this.isResolved())    {    return    false;    }    else    {    Predicate    <    JSType>    referencedType    =    getReferencedType(reference);    if(referencedType!=    null)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	101	None	replace
1095	[BUG]  [BUGGY]  if(this.isReferenced())return  false;  }  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.isReferenced())return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.isReferenced())return  false;  }	  if(this.isReferenced())    {    return    false;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	76	None	replace
1096	[BUG]  [BUGGY]  if(this.value  ==  null)return  false;  }  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.value  ==  null)return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.value  ==  null)return  false;  }	  if(this.value    ==    null)    {    return    false;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	31	None	replace
1097	[BUG]  [BUGGY]  if(this.validator!=  null)  {  return  super.setValidator(validator);  }  else  {  for(int  i  =  0;  i  <  this.isResolved();  ++i)  {  return  super.setVal  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.validator!=  null)  {  return  super.setValidator(validator);  }  else  {  for(int  i  =  0;  i  <  this.isResolved();  ++i)  {  return  super.setVal  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.validator!=  null)  {  return  super.setValidator(validator);  }  else  {  for(int  i  =  0;  i  <  this.isResolved();  ++i)  {  return  super.setVal	  if(this.validator!=    null)    {    return    super.setValidator(validator);    }    else    {    for(int    i    =    0;    i    <    this.isResolved();    ++i)    {    return    super.setValidator(validator);    }    	non-compiled	[CE]  ';'  expected	121	None	replace
1098	[BUG]  [BUGGY]  if(this.validator!=  null)  {  return  super.setValidator(validator,  this.isResolved());  }  else  {  for(int  i  =  0;  i  <  this.isResolved();  ++i)  {  return  super.setValidator  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.validator!=  null)  {  return  super.setValidator(validator,  this.isResolved());  }  else  {  for(int  i  =  0;  i  <  this.isResolved();  ++i)  {  return  super.setValidator  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.validator!=  null)  {  return  super.setValidator(validator,  this.isResolved());  }  else  {  for(int  i  =  0;  i  <  this.isResolved();  ++i)  {  return  super.setValidator	  if(this.validator!=    null)    {    return    super.setValidator(validator);    }    else    {    for(int    i    =    0;    i    <    this.isResolved();    ++i)    {    return    super.setValidator(validator);    }    	non-compiled	[CE]  ';'  expected	121	None	replace
1099	[BUG]  [BUGGY]  if(this.validator!=  null)  {  return  super.setValidator(validator);  }  else  {  for(int  i  =  0;  i  <  this.isResolved();  ++i)  {  return  super.setValidator(validator  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.validator!=  null)  {  return  super.setValidator(validator);  }  else  {  for(int  i  =  0;  i  <  this.isResolved();  ++i)  {  return  super.setValidator(validator  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.validator!=  null)  {  return  super.setValidator(validator);  }  else  {  for(int  i  =  0;  i  <  this.isResolved();  ++i)  {  return  super.setValidator(validator	  if(this.validator!=    null)    {    return    super.setValidator(validator);    }    else    {    for(int    i    =    0;    i    <    this.isResolved();    ++i)    {    return    super.setValidator(validator);    }    	non-compiled	[CE]  ')'  expected	121	None	replace
1100	[BUG]  [BUGGY]  if(this.isForwardDeclared())  {  Predicate  <  JSType>  propertyNode  =  this.getPropertyNode(propertyName);  if(propertyNode!=  null)  {  return  propertyNode.setValidator(valueNode);  }  [CE]  illegal  start  of  expression  [FE]                                AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.isForwardDeclared())  {  Predicate  <  JSType>  propertyNode  =  this.getPropertyNode(propertyName);  if(propertyNode!=  null)  {  return  propertyNode.setValidator(valueNode);  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.isForwardDeclared())  {  Predicate  <  JSType>  propertyNode  =  this.getPropertyNode(propertyName);  if(propertyNode!=  null)  {  return  propertyNode.setValidator(valueNode);  }	  if(this.isResolved())    {    Predicate    <    JSType>    propertyNode    =    this.getPropertyNode(propertyName);    if(propertyNode!=    null)    {    return    propertyNode.setValidator(valueNode);    }    	non-compiled	[CE]  illegal  start  of  expression	111	None	replace
1101	[BUG]  [BUGGY]  if(valueNode!=  null)  {  Predicate  <  JSType>  propertyNode  =  this.getPropertyNode(propertyName);  if(propertyNode!=  null)  {  return  propertyNode.setValidator(valueNode);  }  [CE]  illegal  start  of  expression  [FE]                                  AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(valueNode!=  null)  {  Predicate  <  JSType>  propertyNode  =  this.getPropertyNode(propertyName);  if(propertyNode!=  null)  {  return  propertyNode.setValidator(valueNode);  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(valueNode!=  null)  {  Predicate  <  JSType>  propertyNode  =  this.getPropertyNode(propertyName);  if(propertyNode!=  null)  {  return  propertyNode.setValidator(valueNode);  }	  if(this.isResolved())    {    Predicate    <    JSType>    propertyNode    =    this.getPropertyNode(propertyName);    if(propertyNode!=    null)    {    return    propertyNode.setValidator(valueNode);    }    	non-compiled	[CE]  illegal  start  of  expression	111	None	replace
1102	[BUG]  [BUGGY]  return(this.validator!=  null  &&  validator.isValidator());  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  return(this.validator!=  null  &&  validator.isValidator());  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	return(this.validator!=  null  &&  validator.isValidator());	  return(this.isValidator()    &&    validator!=    null);    	non-compiled	[CE]  cannot  find  symbol	130	None	replace
1103	[BUG]  [BUGGY]  return(this.validator  ==  null  &&  validator.isValidator());  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  return(this.validator  ==  null  &&  validator.isValidator());  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	return(this.validator  ==  null  &&  validator.isValidator());	  return(this.isValidator()    &&    validator!=    null);    	non-compiled	[CE]  cannot  find  symbol	130	None	replace
1104	[BUG]  [BUGGY]  if(referencedType!=  null)  {  Predicate  <  JSType>  referencedType  =  validator.getReferencedType();  if(referencedType  ==  null)  {  return  referencedType.setValidator(validator);  }  [CE]  illegal  start  of  expression  [FE]                                AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(referencedType!=  null)  {  Predicate  <  JSType>  referencedType  =  validator.getReferencedType();  if(referencedType  ==  null)  {  return  referencedType.setValidator(validator);  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(referencedType!=  null)  {  Predicate  <  JSType>  referencedType  =  validator.getReferencedType();  if(referencedType  ==  null)  {  return  referencedType.setValidator(validator);  }	  if(this.isResolved())    {    Predicate    <    JSType>    referencedType    =    validator.getReferencedType();    if(referencedType    ==    null)    {    return    referencedType.setValidator(validator);    }    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
1105	[BUG]  [BUGGY]  if(this.forAnnotations!=  validator)return  false;  }  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.forAnnotations!=  validator)return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.forAnnotations!=  validator)return  false;  }	  if(this.forAnnotations!=    forAnnotations)    {    return    false;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	44	None	replace
1106	[BUG]  [BUGGY]  if(this.referencedType!=  null)  {  return  super.setValidator(validator);  }  else  {  Predicate  <  JSType>  property  =  this.referencedType.getProperty(propertyName);  if(property  ==  null)  {  return  super  [CE]  '.'  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.referencedType!=  null)  {  return  super.setValidator(validator);  }  else  {  Predicate  <  JSType>  property  =  this.referencedType.getProperty(propertyName);  if(property  ==  null)  {  return  super  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.referencedType!=  null)  {  return  super.setValidator(validator);  }  else  {  Predicate  <  JSType>  property  =  this.referencedType.getProperty(propertyName);  if(property  ==  null)  {  return  super	  return    super.setValidator(validator);    if(this.isResolved())    {    Predicate    <    JSType>    property    =    this.referencedType.getProperty(propertyName);    if(property    ==    null)    {    return    super.setValidator(property);    }    	non-compiled	[CE]  '.'  expected	49	None	replace
1107	[BUG]  [BUGGY]  if(this.referencedType  ==  null)  {  return  super.setValidator(validator);  }  [CE]  referencedType  has  private  access  in  ProxyObjectType  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.referencedType  ==  null)  {  return  super.setValidator(validator);  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.referencedType  ==  null)  {  return  super.setValidator(validator);  }	  return    super.setValidator(validator);    if(this.isResolved())    {    Predicate    <    JSType>    property    =    this.referencedType.getProperty(propertyName);    if(property    ==    null)    {    return    super.setValidator(property);    }    	non-compiled	[CE]  referencedType  has  private  access  in  ProxyObjectType	49	None	replace
1108	[BUG]  [BUGGY]  if(this.referencedType!=  null)  {  return  super.setValidator(validator);  }  else  {  Predicate  <  JSType>  property  =  this.referencedType.getProperty(propertyName);  if(property  ==  null)  {  return  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.referencedType!=  null)  {  return  super.setValidator(validator);  }  else  {  Predicate  <  JSType>  property  =  this.referencedType.getProperty(propertyName);  if(property  ==  null)  {  return  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.referencedType!=  null)  {  return  super.setValidator(validator);  }  else  {  Predicate  <  JSType>  property  =  this.referencedType.getProperty(propertyName);  if(property  ==  null)  {  return	  return    super.setValidator(validator);    if(this.isResolved())    {    Predicate    <    JSType>    property    =    this.referencedType.getProperty(propertyName);    if(property    ==    null)    {    return    super.setValidator(property);    }    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
1109	[BUG]  [BUGGY]  return(this.isResolved()  &&  validator  ==  null);  Return(this.isResolved()  &&  validator  ==  null);  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  return(this.isResolved()  &&  validator  ==  null);  Return(this.isResolved()  &&  validator  ==  null);  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	return(this.isResolved()    &&    validator    ==    null);    Return(this.isResolved()  &&  validator  ==  null);	  timeout    	non-compiled	[CE]  cannot  find  symbol	61	None	add
1110	[BUG]  [BUGGY]  if(this.isUnknownType())  {  return  super.setValidator(validator);  }  else  {  for(int  i  =  0;  i  <  this.isResolved();  ++i)  {  return  super.setValidator(validator);  }  }  [CE]  bad  operand  types  for  binary  operator  '<'  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.isUnknownType())  {  return  super.setValidator(validator);  }  else  {  for(int  i  =  0;  i  <  this.isResolved();  ++i)  {  return  super.setValidator(validator);  }  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.isUnknownType())  {  return  super.setValidator(validator);  }  else  {  for(int  i  =  0;  i  <  this.isResolved();  ++i)  {  return  super.setValidator(validator);  }  }	  return    super.setValidator(validator);    if(this.isResolved())    {    return    super.setValidator(validator);    }    else    {    for(int    i    =    0;    i    <    this.isResolved();    ++i)    {    return    super.setValidator(validator);    }    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '<'	127	None	replace
1111	[BUG]  [BUGGY]  if(this.isUnknownType())  {  return  super.setValidator(validator);  }  else  {  for(int  i  =  0;  i  <  this.isResolved();  ++i)  {  return  super.setValidator(validator);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.isUnknownType())  {  return  super.setValidator(validator);  }  else  {  for(int  i  =  0;  i  <  this.isResolved();  ++i)  {  return  super.setValidator(validator);  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.isUnknownType())  {  return  super.setValidator(validator);  }  else  {  for(int  i  =  0;  i  <  this.isResolved();  ++i)  {  return  super.setValidator(validator);  }	  return    super.setValidator(validator);    if(this.isResolved())    {    return    super.setValidator(validator);    }    else    {    for(int    i    =    0;    i    <    this.isResolved();    ++i)    {    return    super.setValidator(validator);    }    	non-compiled	[CE]  illegal  start  of  expression	127	None	replace
1112	[BUG]  [BUGGY]  if(this.isInstanceType())  {  return  super.setValidator(validator);  }  else  {  for(int  i  =  0;  i  <  this.isResolved();  ++i)  {  return  super.setValidator(validator);  }  }  [CE]  bad  operand  types  for  binary  operator  '<'  [FE]                      AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.isInstanceType())  {  return  super.setValidator(validator);  }  else  {  for(int  i  =  0;  i  <  this.isResolved();  ++i)  {  return  super.setValidator(validator);  }  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.isInstanceType())  {  return  super.setValidator(validator);  }  else  {  for(int  i  =  0;  i  <  this.isResolved();  ++i)  {  return  super.setValidator(validator);  }  }	  return    super.setValidator(validator);    if(this.isResolved())    {    return    super.setValidator(validator);    }    else    {    for(int    i    =    0;    i    <    this.isResolved();    ++i)    {    return    super.setValidator(validator);    }    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '<'	127	None	replace
1113	[BUG]  [BUGGY]  if(this.isSlotType())  {  return  false;  }  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.isSlotType())  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.isSlotType())  {  return  false;  }	  return    false;    if(this.isResolved())    {    JSType    referencedType    =    validator.getReferencedType();    if(referencedType!=    null)    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
1114	[BUG]  [BUGGY]  if(this.slotType!=  referencedType)  {  return  false;  }  [CE]  cannot  find  symbol  slotType  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.slotType!=  referencedType)  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.slotType!=  referencedType)  {  return  false;  }	  return    false;    if(this.isResolved())    {    JSType    referencedType    =    validator.getReferencedType();    if(referencedType!=    null)    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol  slotType	3	None	replace
1115	[BUG]  [BUGGY]  if(this.referencedType!=  null)  {  return  super.setValidator(validator);  }  else  {  Predicate  <?>  property  =  this.referencedType.getProperty(propertyName);  if(property!=  null)  {  return  super  [CE]  '.'  expected  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.referencedType!=  null)  {  return  super.setValidator(validator);  }  else  {  Predicate  <?>  property  =  this.referencedType.getProperty(propertyName);  if(property!=  null)  {  return  super  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.referencedType!=  null)  {  return  super.setValidator(validator);  }  else  {  Predicate  <?>  property  =  this.referencedType.getProperty(propertyName);  if(property!=  null)  {  return  super	  return    super.setValidator(validator);    if(this.isResolved())    {    Predicate    <?>    property    =    this.referencedType.getProperty(propertyName);    if(property!=    null)    {    return    super.setValidator(validator);    }    	non-compiled	[CE]  '.'  expected	77	None	replace
1116	[BUG]  [BUGGY]  Predicate  <?>  property  =  this.referencedType.getPropertyName(propertyName);  if(property!=  null)  {  return  super.setValidator(validator);  }  [CE]  cannot  find  symbol  propertyName  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  Predicate  <?>  property  =  this.referencedType.getPropertyName(propertyName);  if(property!=  null)  {  return  super.setValidator(validator);  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	Predicate  <?>  property  =  this.referencedType.getPropertyName(propertyName);  if(property!=  null)  {  return  super.setValidator(validator);  }	  return    super.setValidator(validator);    if(this.isResolved())    {    Predicate    <?>    property    =    this.referencedType.getProperty(propertyName);    if(property!=    null)    {    return    super.setValidator(validator);    }    	non-compiled	[CE]  cannot  find  symbol  propertyName	77	None	replace
1117	[BUG]  [BUGGY]  return(this.validator  ==  null  &&  this.isValidator());  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  return(this.validator  ==  null  &&  this.isValidator());  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	return(this.validator  ==  null  &&  this.isValidator());	  return(this.isValidator()    &&    this.validator!=    null);    	non-compiled	[CE]  cannot  find  symbol	105	None	replace
1118	[BUG]  [BUGGY]  return(this.validator.isValidator()  ||  this.validator!=  null);  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  return(this.validator.isValidator()  ||  this.validator!=  null);  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	return(this.validator.isValidator()  ||  this.validator!=  null);	  return(this.isValidator()    &&    this.validator!=    null);    	non-compiled	[CE]  cannot  find  symbol	105	None	replace
1119	[BUG]  [BUGGY]  if(this.validator!=  null)  {  return(this.isResolved()  ||  this.validator!=  null);  }  [CE]  missing  return  statement  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.validator!=  null)  {  return(this.isResolved()  ||  this.validator!=  null);  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.validator!=  null)  {  return(this.isResolved()  ||  this.validator!=  null);  }	  return(this.isResolved()    &&    this.validator!=    null);    if(this.isResolved()    &&    this.validator!=    null)    {    return(this.isResolved()    &&    this.validator!=    null);    }    	non-compiled	[CE]  missing  return  statement	27	None	replace
1120	[BUG]  [BUGGY]  if(referencedType!=  null)  {  Predicate  <  JSType>  referencedType  =  validator.getReferencedType();  if(referencedType!=  null)  {  return  referencedType.setValidator(referencedType);  }  [CE]  illegal  start  of  expression  [FE]                                  AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(referencedType!=  null)  {  Predicate  <  JSType>  referencedType  =  validator.getReferencedType();  if(referencedType!=  null)  {  return  referencedType.setValidator(referencedType);  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(referencedType!=  null)  {  Predicate  <  JSType>  referencedType  =  validator.getReferencedType();  if(referencedType!=  null)  {  return  referencedType.setValidator(referencedType);  }	  if(this.isResolved())    {    Predicate    <    JSType>    referencedType    =    validator.getReferencedType();    if(referencedType!=    null)    {    return    referencedType.setValidator(referencedType);    }    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
1121	[BUG]  [BUGGY]  if(validator!=  null)  {  Predicate  <  JSType>  referencedType  =  validator.getReferencedType();  if(referencedType!=  null)  {  return  referencedType.setValidator(referencedType);  }  [CE]  illegal  start  of  expression  [FE]                                    AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(validator!=  null)  {  Predicate  <  JSType>  referencedType  =  validator.getReferencedType();  if(referencedType!=  null)  {  return  referencedType.setValidator(referencedType);  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(validator!=  null)  {  Predicate  <  JSType>  referencedType  =  validator.getReferencedType();  if(referencedType!=  null)  {  return  referencedType.setValidator(referencedType);  }	  if(this.isResolved())    {    Predicate    <    JSType>    referencedType    =    validator.getReferencedType();    if(referencedType!=    null)    {    return    referencedType.setValidator(referencedType);    }    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
1122	[BUG]  [BUGGY]  if(validator  ==  null  ||  isForwardDeclared)  {  return  false;  }  [CE]  cannot  find  symbol  isForwardDeclared  [FE]                        AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(validator  ==  null  ||  isForwardDeclared)  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(validator  ==  null  ||  isForwardDeclared)  {  return  false;  }	  if(validator    ==    null)    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol  isForwardDeclared	92	None	replace
1123	[BUG]  [BUGGY]  if(validator  ==  null  ||  isForwardDeclared())  {  return  false;  }  [CE]  cannot  find  symbol  [FE]                          AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(validator  ==  null  ||  isForwardDeclared())  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(validator  ==  null  ||  isForwardDeclared())  {  return  false;  }	  if(validator    ==    null)    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol	92	None	replace
1124	[BUG]  [BUGGY]  if(validator  ==  null  ||  validator.isUnknownType())  {  return  false;  }  [CE]  cannot  find  symbol  [FE]                            AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(validator  ==  null  ||  validator.isUnknownType())  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(validator  ==  null  ||  validator.isUnknownType())  {  return  false;  }	  if(validator    ==    null)    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol	92	None	replace
1125	[BUG]  [BUGGY]  if(validator  ==  null  ||  this.slotType!=  null)  {  return  false;  }  [CE]  cannot  find  symbol  slotType  [FE]                              AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(validator  ==  null  ||  this.slotType!=  null)  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(validator  ==  null  ||  this.slotType!=  null)  {  return  false;  }	  if(validator    ==    null)    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol  slotType	92	None	replace
1126	[BUG]  [BUGGY]  if(validator  ==  null  ||  this.validator!=  null)  {  return  false;  }  [CE]  missing  return  statement  [FE]                                AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(validator  ==  null  ||  this.validator!=  null)  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(validator  ==  null  ||  this.validator!=  null)  {  return  false;  }	  if(validator    ==    null)    {    return    false;    }    	non-compiled	[CE]  missing  return  statement	92	None	replace
1127	[BUG]  [BUGGY]  if(this.isForwardDeclared())  {  return  false;  }  else  {  Predicate  <  JSType>  referencedType  =  this.referencedTypes.get(reference);  if(referencedType!=  null)  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.isForwardDeclared())  {  return  false;  }  else  {  Predicate  <  JSType>  referencedType  =  this.referencedTypes.get(reference);  if(referencedType!=  null)  {  return  true;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.isForwardDeclared())  {  return  false;  }  else  {  Predicate  <  JSType>  referencedType  =  this.referencedTypes.get(reference);  if(referencedType!=  null)  {  return  true;  }	  if(this.isResolved())    {    return    false;    }    else    {    Predicate    <    JSType>    referencedType    =    this.referencedTypes.get(reference);    if(referencedType!=    null)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	100	None	replace
1128	[BUG]  [BUGGY]  if(referencedType!=  null)  {  if(this.isResolved())  {  return  false;  }  else  {  Predicate  <  JSType>  referencedType  =  this.referencedTypes.get(reference);  if(referencedType!=  null)  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(referencedType!=  null)  {  if(this.isResolved())  {  return  false;  }  else  {  Predicate  <  JSType>  referencedType  =  this.referencedTypes.get(reference);  if(referencedType!=  null)  {  return  true;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(referencedType!=  null)  {  if(this.isResolved())  {  return  false;  }  else  {  Predicate  <  JSType>  referencedType  =  this.referencedTypes.get(reference);  if(referencedType!=  null)  {  return  true;  }	  if(this.isResolved())    {    return    false;    }    else    {    Predicate    <    JSType>    referencedType    =    this.referencedTypes.get(reference);    if(referencedType!=    null)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	100	None	replace
1129	[BUG]  [BUGGY]  if(referencedType  ==  null)  {  if(this.isResolved())  {  return  false;  }  else  {  Predicate  <  JSType>  referencedType  =  this.referencedTypes.get(reference);  if(referencedType!=  null)  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(referencedType  ==  null)  {  if(this.isResolved())  {  return  false;  }  else  {  Predicate  <  JSType>  referencedType  =  this.referencedTypes.get(reference);  if(referencedType!=  null)  {  return  true;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(referencedType  ==  null)  {  if(this.isResolved())  {  return  false;  }  else  {  Predicate  <  JSType>  referencedType  =  this.referencedTypes.get(reference);  if(referencedType!=  null)  {  return  true;  }	  if(this.isResolved())    {    return    false;    }    else    {    Predicate    <    JSType>    referencedType    =    this.referencedTypes.get(reference);    if(referencedType!=    null)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	100	None	replace
1130	[BUG]  [BUGGY]  if(this.referencedType!=  referencedType)  {  return  false;  }  else  {  Predicate  <  JSType>  referencedType  =  this.referencedTypes.get(reference);  if(referencedType!=  null)  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.referencedType!=  referencedType)  {  return  false;  }  else  {  Predicate  <  JSType>  referencedType  =  this.referencedTypes.get(reference);  if(referencedType!=  null)  {  return  true;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.referencedType!=  referencedType)  {  return  false;  }  else  {  Predicate  <  JSType>  referencedType  =  this.referencedTypes.get(reference);  if(referencedType!=  null)  {  return  true;  }	  if(this.isResolved())    {    return    false;    }    else    {    Predicate    <    JSType>    referencedType    =    this.referencedTypes.get(reference);    if(referencedType!=    null)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	100	None	replace
1131	[BUG]  [BUGGY]  if(referencedType  ==  null)  {  if(this.isResolved())  {  return  false;  }  else  {  Predicate  <  JSType>  referencedType  =  this.referencedTypes.get(reference);  if(referencedType!=  null)  {  return  true  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(referencedType  ==  null)  {  if(this.isResolved())  {  return  false;  }  else  {  Predicate  <  JSType>  referencedType  =  this.referencedTypes.get(reference);  if(referencedType!=  null)  {  return  true  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(referencedType  ==  null)  {  if(this.isResolved())  {  return  false;  }  else  {  Predicate  <  JSType>  referencedType  =  this.referencedTypes.get(reference);  if(referencedType!=  null)  {  return  true	  if(this.isResolved())    {    return    false;    }    else    {    Predicate    <    JSType>    referencedType    =    this.referencedTypes.get(reference);    if(referencedType!=    null)    {    return    true;    }    	non-compiled	[CE]  ';'  expected	100	None	replace
1132	[BUG]  [BUGGY]  Predicate  <?>  property  =  this.slotType.getProperty(propertyName);  [CE]  cannot  find  symbol  propertyName  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  Predicate  <?>  property  =  this.slotType.getProperty(propertyName);  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	Predicate  <?>  property  =  this.slotType.getProperty(propertyName);	  return    super.setValidator(validator);    if(this.isResolved())    {    return    super.setValidator(validator);    }    	non-compiled	[CE]  cannot  find  symbol  propertyName	50	None	replace
1133	[BUG]  [BUGGY]  Predicate  <?>  propertyNode  =  this.getPropertyNode(propertyName);  [CE]  cannot  find  symbol  propertyName  [FE]                      AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  Predicate  <?>  propertyNode  =  this.getPropertyNode(propertyName);  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	Predicate  <?>  propertyNode  =  this.getPropertyNode(propertyName);	  return    super.setValidator(validator);    if(this.isResolved())    {    return    super.setValidator(validator);    }    	non-compiled	[CE]  cannot  find  symbol  propertyName	50	None	replace
1134	[BUG]  [BUGGY]  if(this.isUnknownType())  {  return  super.setValidator(referencedType);  }  else  {  for(JSType  referencedType  :  this.referencedTypes)  {  return  super.setValidator(referencedType);  }  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.isUnknownType())  {  return  super.setValidator(referencedType);  }  else  {  for(JSType  referencedType  :  this.referencedTypes)  {  return  super.setValidator(referencedType);  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.isUnknownType())  {  return  super.setValidator(referencedType);  }  else  {  for(JSType  referencedType  :  this.referencedTypes)  {  return  super.setValidator(referencedType);  }	  return    super.setValidator(validator);    if(this.isResolved())    {    for(JSType    referencedType    :    this.referencedTypes)    {    return    super.setValidator(referencedType);    }    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
1135	[BUG]  [BUGGY]  if(this.isUnknownType())  {  return  super.setValidator(validator);  }  else  {  for(JSType  referencedType  :  this.referencedTypes)  {  return  super.setValidator(referencedType);  }  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.isUnknownType())  {  return  super.setValidator(validator);  }  else  {  for(JSType  referencedType  :  this.referencedTypes)  {  return  super.setValidator(referencedType);  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.isUnknownType())  {  return  super.setValidator(validator);  }  else  {  for(JSType  referencedType  :  this.referencedTypes)  {  return  super.setValidator(referencedType);  }	  return    super.setValidator(validator);    if(this.isResolved())    {    for(JSType    referencedType    :    this.referencedTypes)    {    return    super.setValidator(referencedType);    }    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
1136	[BUG]  [BUGGY]  if(this.isUnknownType())  {  return  super.setValidator(referencedType);  }  [CE]  referencedType  has  private  access  in  ProxyObjectType  [FE]                              AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.isUnknownType())  {  return  super.setValidator(referencedType);  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.isUnknownType())  {  return  super.setValidator(referencedType);  }	  return    super.setValidator(validator);    if(this.isResolved())    {    for(JSType    referencedType    :    this.referencedTypes)    {    return    super.setValidator(referencedType);    }    	non-compiled	[CE]  referencedType  has  private  access  in  ProxyObjectType	53	None	replace
1137	[BUG]  [BUGGY]  if(referencedType.isUnknownType())  {  return  super.setValidator(validator);  }  else  {  for(JSType  referencedType  :  this.referencedTypes)  {  return  super.setValidator(referencedType);  }  [CE]  illegal  start  of  expression  [FE]                                AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(referencedType.isUnknownType())  {  return  super.setValidator(validator);  }  else  {  for(JSType  referencedType  :  this.referencedTypes)  {  return  super.setValidator(referencedType);  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(referencedType.isUnknownType())  {  return  super.setValidator(validator);  }  else  {  for(JSType  referencedType  :  this.referencedTypes)  {  return  super.setValidator(referencedType);  }	  return    super.setValidator(validator);    if(this.isResolved())    {    for(JSType    referencedType    :    this.referencedTypes)    {    return    super.setValidator(referencedType);    }    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
1138	[BUG]  [BUGGY]  if(this.isResolved())  {  JSType  referencedType  =  this.referencedTypes.get(referencedType);  if(referencedType!=  null)  {  return  super.setValidator(referencedType);  }  [CE]  illegal  start  of  expression  [FE]                                  AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.isResolved())  {  JSType  referencedType  =  this.referencedTypes.get(referencedType);  if(referencedType!=  null)  {  return  super.setValidator(referencedType);  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.isResolved())  {  JSType  referencedType  =  this.referencedTypes.get(referencedType);  if(referencedType!=  null)  {  return  super.setValidator(referencedType);  }	  return    super.setValidator(validator);    if(this.isResolved())    {    for(JSType    referencedType    :    this.referencedTypes)    {    return    super.setValidator(referencedType);    }    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
1139	[BUG]  [BUGGY]  if(referenced.isUnknownType())  {  return  false;  }  [CE]  cannot  find  symbol  referenced  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(referenced.isUnknownType())  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(referenced.isUnknownType())  {  return  false;  }	  return    false;    if(this.isResolved())    {    JSType    referencedType    =    getReferencedType(referenced);    if(referencedType!=    null)    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol  referenced	87	None	replace
1140	[BUG]  [BUGGY]  if(this.validator!=  null)  {  return(this.isResolved()  &&  this.validator!=  null);  (this.isResolved()  &&  this.validator!=  null);  }  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.validator!=  null)  {  return(this.isResolved()  &&  this.validator!=  null);  (this.isResolved()  &&  this.validator!=  null);  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.validator!=  null)  {  return(this.isResolved()  &&  this.validator!=  null);  (this.isResolved()  &&  this.validator!=  null);  }	  return(this.isResolved()    &&    this.validator!=    null);    (this.isResolved()    &&    this.validator!=    null);    	non-compiled	[CE]  not  a  statement	25	None	replace
1141	[BUG]  [BUGGY]  if(this.forAnnotations!=  forAnnotations)  {  forAnnotations  ignoredForwardReferencedTypes  =  this.ignoreForwardReferencedTypes;  if(ignoreForwardReferencedTypes  ==  null)  {  return  false;  }  }  [CE]  cannot  find  symbol  forAnnotations  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.forAnnotations!=  forAnnotations)  {  forAnnotations  ignoredForwardReferencedTypes  =  this.ignoreForwardReferencedTypes;  if(ignoreForwardReferencedTypes  ==  null)  {  return  false;  }  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.forAnnotations!=  forAnnotations)  {  forAnnotations  ignoredForwardReferencedTypes  =  this.ignoreForwardReferencedTypes;  if(ignoreForwardReferencedTypes  ==  null)  {  return  false;  }  }	  return    false;    if(this.forAnnotations!=    forAnnotations)    {    forAnnotations    ignoreForwardReferencedTypes    =    this.ignoreForwardReferencedTypes;    if(ignoreForwardReferencedTypes    ==    null)    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol  forAnnotations	2	None	replace
1142	[BUG]  [BUGGY]  if(this.slotType!=  slotType)  {  return  false;  }  else  if(this.forAnnotations!=  forAnnotations)  {  forAnnotations  ignoreForwardReferencedTypes  =  this.ignoreForwardReferencedTypes;  if(ignor  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.slotType!=  slotType)  {  return  false;  }  else  if(this.forAnnotations!=  forAnnotations)  {  forAnnotations  ignoreForwardReferencedTypes  =  this.ignoreForwardReferencedTypes;  if(ignor  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.slotType!=  slotType)  {  return  false;  }  else  if(this.forAnnotations!=  forAnnotations)  {  forAnnotations  ignoreForwardReferencedTypes  =  this.ignoreForwardReferencedTypes;  if(ignor	  return    false;    if(this.forAnnotations!=    forAnnotations)    {    forAnnotations    ignoreForwardReferencedTypes    =    this.ignoreForwardReferencedTypes;    if(ignoreForwardReferencedTypes    ==    null)    {    return    false;    }    	non-compiled	[CE]  ')'  expected	2	None	replace
1143	[BUG]  [BUGGY]  if(validator!=  null)  {  forAnnotations  <  propertyNode  =  propertyNode.getFirstChild();  if(this.isResolved())  {  return  false;  }  [CE]  >  expected  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(validator!=  null)  {  forAnnotations  <  propertyNode  =  propertyNode.getFirstChild();  if(this.isResolved())  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(validator!=  null)  {  forAnnotations  <  propertyNode  =  propertyNode.getFirstChild();  if(this.isResolved())  {  return  false;  }	  return    false;    if(validator!=    null)    {    forAnnotations    <    propertyNode    =    propertyNode.getFirstChild();    if(this.isResolved())    {    return    false;    }    	non-compiled	[CE]  >  expected	141	None	replace
1144	[BUG]  [BUGGY]  if(validator!=  null)  {  forAnnotations  <  propertyNode  =  propertyNode.getFirstChild();  if(this.isResolved())  {  return  true;  }  [CE]  >  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(validator!=  null)  {  forAnnotations  <  propertyNode  =  propertyNode.getFirstChild();  if(this.isResolved())  {  return  true;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(validator!=  null)  {  forAnnotations  <  propertyNode  =  propertyNode.getFirstChild();  if(this.isResolved())  {  return  true;  }	  return    false;    if(validator!=    null)    {    forAnnotations    <    propertyNode    =    propertyNode.getFirstChild();    if(this.isResolved())    {    return    false;    }    	non-compiled	[CE]  >  expected	141	None	replace
1145	[BUG]  [BUGGY]  if(validator!=  null)  {  forAnnotations  <  propertyNode  =  propertyNode.getLastChild();  if(this.isResolved())  {  return  false;  }  [CE]  >  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(validator!=  null)  {  forAnnotations  <  propertyNode  =  propertyNode.getLastChild();  if(this.isResolved())  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(validator!=  null)  {  forAnnotations  <  propertyNode  =  propertyNode.getLastChild();  if(this.isResolved())  {  return  false;  }	  return    false;    if(validator!=    null)    {    forAnnotations    <    propertyNode    =    propertyNode.getFirstChild();    if(this.isResolved())    {    return    false;    }    	non-compiled	[CE]  >  expected	141	None	replace
1146	[BUG]  [BUGGY]  if(propertyNode!=  null)  {  return  false;  }  [CE]  cannot  find  symbol  propertyNode  [FE]                      AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(propertyNode!=  null)  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(propertyNode!=  null)  {  return  false;  }	  return    false;    if(validator!=    null)    {    forAnnotations    <    propertyNode    =    propertyNode.getFirstChild();    if(this.isResolved())    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol  propertyNode	141	None	replace
1147	[BUG]  [BUGGY]  Predicate  <?>  propertyNode  =  getPropertyNode(reference.propertyName).resolve();  [CE]  cannot  find  symbol  propertyName  [FE]                                      AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  Predicate  <?>  propertyNode  =  getPropertyNode(reference.propertyName).resolve();  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	Predicate  <?>  propertyNode  =  getPropertyNode(reference.propertyName).resolve();	  Predicate    <?>    propertyNode    =    getPropertyNode(propertyName).resolve();    	non-compiled	[CE]  cannot  find  symbol  propertyName	138	None	replace
1148	[BUG]  [BUGGY]  Predicate  <?>  propertyNode  =  getPropertyNode(reference.name).resolve();  [CE]  cannot  find  symbol  name  [FE]                                        AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  Predicate  <?>  propertyNode  =  getPropertyNode(reference.name).resolve();  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	Predicate  <?>  propertyNode  =  getPropertyNode(reference.name).resolve();	  Predicate    <?>    propertyNode    =    getPropertyNode(propertyName).resolve();    	non-compiled	[CE]  cannot  find  symbol  name	138	None	replace
1149	[BUG]  [BUGGY]  if(this.propertyContinuations!=  null  ||  this.propertyContinuations.contains(propertyName))  {  return  false;  }  [CE]  cannot  find  symbol  propertyName  [FE]                      AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.propertyContinuations!=  null  ||  this.propertyContinuations.contains(propertyName))  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.propertyContinuations!=  null  ||  this.propertyContinuations.contains(propertyName))  {  return  false;  }	  if(this.propertyContinuations!=    null)    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol  propertyName	11	None	replace
1150	[BUG]  [BUGGY]  if(this.propertyContinuations!=  null  ||  this.propertyContinuations.size()  <=  propertyContinuations.size())  {  return  false;  }  [CE]  missing  return  statement  [FE]                        AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.propertyContinuations!=  null  ||  this.propertyContinuations.size()  <=  propertyContinuations.size())  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.propertyContinuations!=  null  ||  this.propertyContinuations.size()  <=  propertyContinuations.size())  {  return  false;  }	  if(this.propertyContinuations!=    null)    {    return    false;    }    	non-compiled	[CE]  missing  return  statement	11	None	replace
1151	[BUG]  [BUGGY]  if(this.propertyContinuations  ==  null)return  false;  }  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.propertyContinuations  ==  null)return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.propertyContinuations  ==  null)return  false;  }	  if(this.propertyContinuations!=    null)    {    return    false;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	11	None	replace
1152	[BUG]  [BUGGY]  if(!this.isValidator())return  true;  }  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(!this.isValidator())return  true;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(!this.isValidator())return  true;  }	  if(!this.isValidator())    {    return    true;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	15	None	replace
1153	[BUG]  [BUGGY]  if(!this.slotType.isValidator())  {  return  true;  }  [CE]  cannot  find  symbol  slotType  [FE]                          AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(!this.slotType.isValidator())  {  return  true;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(!this.slotType.isValidator())  {  return  true;  }	  if(!this.isValidator())    {    return    true;    }    	non-compiled	[CE]  cannot  find  symbol  slotType	15	None	replace
1154	[BUG]  [BUGGY]  if(!this.isValidator()  ||  validator.isUnknownType())  {  return  true;  }  [CE]  cannot  find  symbol  [FE]                            AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(!this.isValidator()  ||  validator.isUnknownType())  {  return  true;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(!this.isValidator()  ||  validator.isUnknownType())  {  return  true;  }	  if(!this.isValidator())    {    return    true;    }    	non-compiled	[CE]  cannot  find  symbol	15	None	replace
1155	[BUG]  [BUGGY]  if(!this.isUnknownType()  ||  validator.isUnknownType())  {  return  true;  }  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(!this.isUnknownType()  ||  validator.isUnknownType())  {  return  true;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(!this.isUnknownType()  ||  validator.isUnknownType())  {  return  true;  }	  if(!this.isUnknownType())    {    return    true;    }    	non-compiled	[CE]  cannot  find  symbol	118	None	replace
1156	[BUG]  [BUGGY]  if(!this.isUnknownType()  ||  validator!=  null)  {  return  true;  }  [CE]  missing  return  statement  [FE]                          AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(!this.isUnknownType()  ||  validator!=  null)  {  return  true;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(!this.isUnknownType()  ||  validator!=  null)  {  return  true;  }	  if(!this.isUnknownType())    {    return    true;    }    	non-compiled	[CE]  missing  return  statement	118	None	replace
1157	[BUG]  [BUGGY]  if(this.isResolved()  ||  this.validator!=  null)return  true;  [CE]  missing  return  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.isResolved()  ||  this.validator!=  null)return  true;  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.isResolved()  ||  this.validator!=  null)return  true;	  return(this.isResolved()    &&    this.validator!=    null);    if(this.isResolved()    &&    this.validator!=    null);    	non-compiled	[CE]  missing  return  statement	26	None	replace
1158	[BUG]  [BUGGY]  if(this.isResolved()  ||  this.validator!=  null)return  false;  [CE]  missing  return  statement  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.isResolved()  ||  this.validator!=  null)return  false;  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.isResolved()  ||  this.validator!=  null)return  false;	  return(this.isResolved()    &&    this.validator!=    null);    if(this.isResolved()    &&    this.validator!=    null);    	non-compiled	[CE]  missing  return  statement	26	None	replace
1159	[BUG]  [BUGGY]  if(this.isResolved())  {  Predicate  <  JSType>  property  =  this.getProperty(propertyName);  if(property!=  null)  {  return  super.setValidator(property);  }  }  [CE]  cannot  find  symbol  propertyName  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.isResolved())  {  Predicate  <  JSType>  property  =  this.getProperty(propertyName);  if(property!=  null)  {  return  super.setValidator(property);  }  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.isResolved())  {  Predicate  <  JSType>  property  =  this.getProperty(propertyName);  if(property!=  null)  {  return  super.setValidator(property);  }  }	  return    super.setValidator(validator);    if(this.isResolved())    {    Predicate    <    JSType>    property    =    this.getProperty(propertyName);    if(property!=    null)    {    return    super.setValidator(property);    }    	non-compiled	[CE]  cannot  find  symbol  propertyName	78	None	replace
1160	[BUG]  [BUGGY]  if(this.isResolved())  {  Predicate  <  JSType>  property  =  this.getProperty(propertyName);  if(property!=  null)  {  return  super.set  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.isResolved())  {  Predicate  <  JSType>  property  =  this.getProperty(propertyName);  if(property!=  null)  {  return  super.set  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.isResolved())  {  Predicate  <  JSType>  property  =  this.getProperty(propertyName);  if(property!=  null)  {  return  super.set	  return    super.setValidator(validator);    if(this.isResolved())    {    Predicate    <    JSType>    property    =    this.getProperty(propertyName);    if(property!=    null)    {    return    super.setValidator(property);    }    	non-compiled	[CE]  ';'  expected	78	None	replace
1161	[BUG]  [BUGGY]  if(this.isResolved())  {  Predicate  <  JSType>  property  =  this.getProperty(propertyName);  if(property!=  null)  {  return  super.setValidator(proper  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.isResolved())  {  Predicate  <  JSType>  property  =  this.getProperty(propertyName);  if(property!=  null)  {  return  super.setValidator(proper  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.isResolved())  {  Predicate  <  JSType>  property  =  this.getProperty(propertyName);  if(property!=  null)  {  return  super.setValidator(proper	  return    super.setValidator(validator);    if(this.isResolved())    {    Predicate    <    JSType>    property    =    this.getProperty(propertyName);    if(property!=    null)    {    return    super.setValidator(property);    }    	non-compiled	[CE]  ')'  expected	78	None	replace
1162	[BUG]  [BUGGY]  if(value.equals(validator))  {  return  false;  }  [CE]  cannot  find  symbol  value  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(value.equals(validator))  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(value.equals(validator))  {  return  false;  }	  if(this.slotType.equals(validator))    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol  value	46	None	replace
1163	[BUG]  [BUGGY]  if(!this.forAnnotations)  {  forAnnotations  ignoreForwardReferencedTypes  =  this.ignoreForwardReferencedTypes;  if(isForwardDeclared)return  false;  }  [CE]  cannot  find  symbol  forAnnotations  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(!this.forAnnotations)  {  forAnnotations  ignoreForwardReferencedTypes  =  this.ignoreForwardReferencedTypes;  if(isForwardDeclared)return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(!this.forAnnotations)  {  forAnnotations  ignoreForwardReferencedTypes  =  this.ignoreForwardReferencedTypes;  if(isForwardDeclared)return  false;  }	  return    false;    if(!this.forAnnotations)    {    forAnnotations    ignoreForwardReferencedTypes    =    this.ignoreForwardReferencedTypes;    if(isForwardDeclared)    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol  forAnnotations	86	None	replace
1164	[BUG]  [BUGGY]  if(!this.forAnnotations)  {  forAnnotations  ignoreForwardReferencedTypes  =  new  JSType[this.ignoreForwardReferencedTypes];  if(isForwardDeclared)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(!this.forAnnotations)  {  forAnnotations  ignoreForwardReferencedTypes  =  new  JSType[this.ignoreForwardReferencedTypes];  if(isForwardDeclared)  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(!this.forAnnotations)  {  forAnnotations  ignoreForwardReferencedTypes  =  new  JSType[this.ignoreForwardReferencedTypes];  if(isForwardDeclared)  {  return  false;  }	  return    false;    if(!this.forAnnotations)    {    forAnnotations    ignoreForwardReferencedTypes    =    this.ignoreForwardReferencedTypes;    if(isForwardDeclared)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
1165	[BUG]  [BUGGY]  if(this.isForwardDeclared())  {  Predicate  <  JSType>  propertyNode  =  this.referencedTypes.get(reference);  if(propertyNode!=  null)  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.isForwardDeclared())  {  Predicate  <  JSType>  propertyNode  =  this.referencedTypes.get(reference);  if(propertyNode!=  null)  {  return  true;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.isForwardDeclared())  {  Predicate  <  JSType>  propertyNode  =  this.referencedTypes.get(reference);  if(propertyNode!=  null)  {  return  true;  }	  if(this.isResolved())    {    Predicate    <    JSType>    propertyNode    =    this.referencedTypes.get(reference);    if(propertyNode!=    null)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	110	None	replace
1166	[BUG]  [BUGGY]  if(this.isInferred())return  false;  }  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.isInferred())return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.isInferred())return  false;  }	  if(this.isInferred())    {    return    false;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	21	None	replace
1167	[BUG]  [BUGGY]  if(value.isInferred())  {  return  false;  }  [CE]  cannot  find  symbol  value  [FE]                        AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(value.isInferred())  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(value.isInferred())  {  return  false;  }	  if(this.isInferred())    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol  value	21	None	replace
1168	[BUG]  [BUGGY]  if(isForwardDeclared)  {  forAnnotations  {  propertyNode  =  propertyNode.getFirstChild();  if(propertyNode!=  null)  {  return  true;  }  }  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(isForwardDeclared)  {  forAnnotations  {  propertyNode  =  propertyNode.getFirstChild();  if(propertyNode!=  null)  {  return  true;  }  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(isForwardDeclared)  {  forAnnotations  {  propertyNode  =  propertyNode.getFirstChild();  if(propertyNode!=  null)  {  return  true;  }  }	  return    false;    if(isForwardDeclared)    {    forAnnotations    {    propertyNode    =    propertyNode.getFirstChild();    if(propertyNode!=    null)    {    return    true;    }    	non-compiled	[CE]  not  a  statement	140	None	replace
1169	[BUG]  [BUGGY]  if(isForwardDeclared)  {  forAnnotations  {  propertyNode  =  propertyNode.getFirstChild();  if(propertyNode!=  null)  {  return  true;  }  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(isForwardDeclared)  {  forAnnotations  {  propertyNode  =  propertyNode.getFirstChild();  if(propertyNode!=  null)  {  return  true;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(isForwardDeclared)  {  forAnnotations  {  propertyNode  =  propertyNode.getFirstChild();  if(propertyNode!=  null)  {  return  true;  }	  return    false;    if(isForwardDeclared)    {    forAnnotations    {    propertyNode    =    propertyNode.getFirstChild();    if(propertyNode!=    null)    {    return    true;    }    	non-compiled	[CE]  not  a  statement	140	None	replace
1170	[BUG]  [BUGGY]  if(forAnnotations)  {  return  false;  forAnnotations  {  propertyNode  =  propertyNode.getFirstChild();  if(propertyNode!=  null)  {  return  true;  }  }  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(forAnnotations)  {  return  false;  forAnnotations  {  propertyNode  =  propertyNode.getFirstChild();  if(propertyNode!=  null)  {  return  true;  }  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(forAnnotations)  {  return  false;  forAnnotations  {  propertyNode  =  propertyNode.getFirstChild();  if(propertyNode!=  null)  {  return  true;  }  }	  return    false;    if(isForwardDeclared)    {    forAnnotations    {    propertyNode    =    propertyNode.getFirstChild();    if(propertyNode!=    null)    {    return    true;    }    	non-compiled	[CE]  not  a  statement	140	None	replace
1171	[BUG]  [BUGGY]  return(this.isInferred()  &&  validator!=  null);  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  return(this.isInferred()  &&  validator!=  null);  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	return(this.isInferred()  &&  validator!=  null);	  return(this.isResolved()    &&    validator!=    null);    timeout    	non-compiled	[CE]  cannot  find  symbol	57	None	replace
1172	[BUG]  [BUGGY]  if(this.isValidator())  {  return(this.isResolved()  &&  this.validator!=  null);  }  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.isValidator())  {  return(this.isResolved()  &&  this.validator!=  null);  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.isValidator())  {  return(this.isResolved()  &&  this.validator!=  null);  }	  return(this.isResolved()    &&    this.validator!=    null);    if(this.isResolved()    &&    this.validator!=    null);    }    	non-compiled	[CE]  cannot  find  symbol	131	None	replace
1173	[BUG]  [BUGGY]  if(this.isUnknownType())  {  return(this.isResolved()  &&  this.validator!=  null);  }  [CE]  missing  return  statement  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.isUnknownType())  {  return(this.isResolved()  &&  this.validator!=  null);  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.isUnknownType())  {  return(this.isResolved()  &&  this.validator!=  null);  }	  return(this.isResolved()    &&    this.validator!=    null);    if(this.isResolved()    &&    this.validator!=    null);    }    	non-compiled	[CE]  missing  return  statement	131	None	replace
1174	[BUG]  [BUGGY]  if(!this.forAnnotations)  {  forAnnotations  forwardReferencedTypes  =  this.ignoreForwardReferencedTypes;  if(forwardReferencedTypes)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(!this.forAnnotations)  {  forAnnotations  forwardReferencedTypes  =  this.ignoreForwardReferencedTypes;  if(forwardReferencedTypes)  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(!this.forAnnotations)  {  forAnnotations  forwardReferencedTypes  =  this.ignoreForwardReferencedTypes;  if(forwardReferencedTypes)  {  return  false;  }	  return    false;    if(!this.forAnnotations)    {    forAnnotations    ignoreForwardReferencedTypes    =    this.ignoreForwardReferencedTypes;    if(ignoreForwardReferencedTypes)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
1175	[BUG]  [BUGGY]  if(propertyNode!=  null)  {  return  false;  }  else  {  forAnnotations  <  propertyNode  =  propertyNode.getFirstChild();  if(!this.isResolved())  {  return  true;  }  [CE]  >  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(propertyNode!=  null)  {  return  false;  }  else  {  forAnnotations  <  propertyNode  =  propertyNode.getFirstChild();  if(!this.isResolved())  {  return  true;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(propertyNode!=  null)  {  return  false;  }  else  {  forAnnotations  <  propertyNode  =  propertyNode.getFirstChild();  if(!this.isResolved())  {  return  true;  }	  return    false;    if(validator!=    null)    {    forAnnotations    <    propertyNode    =    propertyNode.getFirstChild();    if(!this.isResolved())    {    return    true;    }    	non-compiled	[CE]  >  expected	145	None	replace
1176	[BUG]  [BUGGY]  if(this.validator!=  null)  {  return  false;  }  else  {  forAnnotations  <  propertyNode  =  propertyNode.getFirstChild();  if(!this.isResolved())  {  return  true;  }  [CE]  >  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.validator!=  null)  {  return  false;  }  else  {  forAnnotations  <  propertyNode  =  propertyNode.getFirstChild();  if(!this.isResolved())  {  return  true;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.validator!=  null)  {  return  false;  }  else  {  forAnnotations  <  propertyNode  =  propertyNode.getFirstChild();  if(!this.isResolved())  {  return  true;  }	  return    false;    if(validator!=    null)    {    forAnnotations    <    propertyNode    =    propertyNode.getFirstChild();    if(!this.isResolved())    {    return    true;    }    	non-compiled	[CE]  >  expected	145	None	replace
1177	[BUG]  [BUGGY]  if(this.forAnnotations  ==  null  ||  this.forAnnotations!=  null)return  false;  }  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.forAnnotations  ==  null  ||  this.forAnnotations!=  null)return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.forAnnotations  ==  null  ||  this.forAnnotations!=  null)return  false;  }	  if(this.forAnnotations    ==    null)return    false;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	152	None	replace
1178	[BUG]  [BUGGY]  if(this.forAnnotations  ==  null  ||  this.forAnnotations  ==  null)return  false;  }  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.forAnnotations  ==  null  ||  this.forAnnotations  ==  null)return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.forAnnotations  ==  null  ||  this.forAnnotations  ==  null)return  false;  }	  if(this.forAnnotations    ==    null)return    false;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	152	None	replace
1179	[BUG]  [BUGGY]  if(this.isUnknownType()  ||  this.isUnknownType())  {  return  true;  }  [CE]  missing  return  statement  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.isUnknownType()  ||  this.isUnknownType())  {  return  true;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.isUnknownType()  ||  this.isUnknownType())  {  return  true;  }	  if(this.isUnknownType())    {    return    true;    }    	non-compiled	[CE]  missing  return  statement	124	None	replace
1180	[BUG]  [BUGGY]  if(this.isUnknownType()  ||  this.isInstanceType())  {  return  true;  }  [CE]  missing  return  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.isUnknownType()  ||  this.isInstanceType())  {  return  true;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.isUnknownType()  ||  this.isInstanceType())  {  return  true;  }	  if(this.isUnknownType())    {    return    true;    }    	non-compiled	[CE]  missing  return  statement	124	None	replace
1181	[BUG]  [BUGGY]  timeout  [FE]            AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.validator!=  null)  {  return(this.isResolved()  &&  this.validator!=  null);  }  else  {  return  super.setValidator(validator);  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	add	if(this.validator!=  null)  {  return(this.isResolved()  &&  this.validator!=  null);  }  else  {  return  super.setValidator(validator);  }	  return(this.isResolved()    &&    this.validator!=    null);    return(this.isResolved()    &&    this.validator!=    null);    	compilable	timeout	23	1	replace
1182	[BUG]  [BUGGY]  if(this.validator!=  null)  {  return(this.isResolved()  &&  this.validator!=  null);  }  else  {  return  super.setValidator(validator);  }  timeout  [FE]            AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.validator!=  null)  {  return(this.isResolved()  &&  this.validator!=  null);  }  else  {  return  super.setValidator(validator);  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.validator!=  null)  {  return(this.isResolved()  &&  this.validator!=  null);  }  else  {  return  super.setValidator(validator);  }	  return(this.isResolved()    &&    this.validator!=    null);    return(this.isResolved()    &&    this.validator!=    null);    	compilable	timeout	23	1	replace
1183	[BUG]  [BUGGY]  timeout  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.validator!=  null)  {  return(this.isResolved()  &&  this.validator!=  null);  }  else  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	add	if(this.validator!=  null)  {  return(this.isResolved()  &&  this.validator!=  null);  }  else  {  return  false;  }	  return(this.isResolved()    &&    this.validator!=    null);    return(this.isResolved()    &&    this.validator!=    null);    	compilable	timeout	23	1	replace
1184	[BUG]  [BUGGY]  if(this.validator!=  null)  {  return(this.isResolved()  &&  this.validator!=  null);  }  else  {  return  false;  }  timeout  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.validator!=  null)  {  return(this.isResolved()  &&  this.validator!=  null);  }  else  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.validator!=  null)  {  return(this.isResolved()  &&  this.validator!=  null);  }  else  {  return  false;  }	  return(this.isResolved()    &&    this.validator!=    null);    return(this.isResolved()    &&    this.validator!=    null);    	compilable	timeout	23	1	replace
1185	[BUG]  [BUGGY]  return  super.setValidator(validator,  this.forAnnotations,  validator);  [CE]  cannot  find  symbol  forAnnotations  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  return  super.setValidator(validator,  this.forAnnotations,  validator);  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	return  super.setValidator(validator,  this.forAnnotations,  validator);	  return    super.setValidator(validator,    this.forAnnotations);    	non-compiled	[CE]  cannot  find  symbol  forAnnotations	40	None	replace
1186	[BUG]  [BUGGY]  return  super.setValidator(validator,  this.forAnnotations,  null);  [CE]  cannot  find  symbol  forAnnotations  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  return  super.setValidator(validator,  this.forAnnotations,  null);  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	return  super.setValidator(validator,  this.forAnnotations,  null);	  return    super.setValidator(validator,    this.forAnnotations);    	non-compiled	[CE]  cannot  find  symbol  forAnnotations	40	None	replace
1187	[BUG]  [BUGGY]  Predicate  <?>  propertyNode  =  this.getPropertyNode();  [CE]  method  getPropertyNode  in  class  ObjectType  cannot  be  applied  to  given  types;  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  Predicate  <?>  propertyNode  =  this.getPropertyNode();  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	Predicate  <?>  propertyNode  =  this.getPropertyNode();	  if(this.isResolved())    {    return    super.setValidator(validator);    }    else    {    for(int    i    =    0;    i    <    this.isResolved();    i++)    {    return    super.setValidator(validator);    }    	non-compiled	[CE]  method  getPropertyNode  in  class  ObjectType  cannot  be  applied  to  given  types;	120	None	replace
1188	[BUG]  [BUGGY]  Predicate  <?>  propertyNode  =  this.isPropertyNode();  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  Predicate  <?>  propertyNode  =  this.isPropertyNode();  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	Predicate  <?>  propertyNode  =  this.isPropertyNode();	  if(this.isResolved())    {    return    super.setValidator(validator);    }    else    {    for(int    i    =    0;    i    <    this.isResolved();    i++)    {    return    super.setValidator(validator);    }    	non-compiled	[CE]  cannot  find  symbol	120	None	replace
1189	[BUG]  [BUGGY]  Predicate  <?>  propertyNode  =  this.getProperty(propertyName);  [CE]  cannot  find  symbol  propertyName  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  Predicate  <?>  propertyNode  =  this.getProperty(propertyName);  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	Predicate  <?>  propertyNode  =  this.getProperty(propertyName);	  if(this.isResolved())    {    return    super.setValidator(validator);    }    else    {    for(int    i    =    0;    i    <    this.isResolved();    i++)    {    return    super.setValidator(validator);    }    	non-compiled	[CE]  cannot  find  symbol  propertyName	120	None	replace
1190	[BUG]  [BUGGY]  Predicate  <?>  propertyNode  =  this.getPropertyNode(property);  [CE]  cannot  find  symbol  property  [FE]                      AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  Predicate  <?>  propertyNode  =  this.getPropertyNode(property);  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	Predicate  <?>  propertyNode  =  this.getPropertyNode(property);	  if(this.isResolved())    {    return    super.setValidator(validator);    }    else    {    for(int    i    =    0;    i    <    this.isResolved();    i++)    {    return    super.setValidator(validator);    }    	non-compiled	[CE]  cannot  find  symbol  property	120	None	replace
1191	[BUG]  [BUGGY]  if(this.isUnknownType()  ||  this.isReferenced())  {  return  false;  }  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.isUnknownType()  ||  this.isReferenced())  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.isUnknownType()  ||  this.isReferenced())  {  return  false;  }	  if(this.isUnknownType())    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol	123	None	replace
1192	[BUG]  [BUGGY]  if(this.isUnknownType()  ||  this.isInstanceType())  {  return  false;  }  [CE]  missing  return  statement  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.isUnknownType()  ||  this.isInstanceType())  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.isUnknownType()  ||  this.isInstanceType())  {  return  false;  }	  if(this.isUnknownType())    {    return    false;    }    	non-compiled	[CE]  missing  return  statement	123	None	replace
1193	[BUG]  [BUGGY]  if(this.propertyNode!=  null)  {  Predicate  <  JSType>  propertyNode  =  this.propertyNode.getValue();  if(propertyNode!=  null)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                                      AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.propertyNode!=  null)  {  Predicate  <  JSType>  propertyNode  =  this.propertyNode.getValue();  if(propertyNode!=  null)  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.propertyNode!=  null)  {  Predicate  <  JSType>  propertyNode  =  this.propertyNode.getValue();  if(propertyNode!=  null)  {  return  false;  }	  if(this.isResolved())    {    Predicate    <    JSType>    propertyNode    =    this.propertyNode.getValue();    if(propertyNode!=    null)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	114	None	replace
1194	[BUG]  [BUGGY]  if(this.isResolved())  {  Predicate  <  JSType>  propertyNode  =  propertyNode.getValue();  if(propertyNode!=  null)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                                        AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.isResolved())  {  Predicate  <  JSType>  propertyNode  =  propertyNode.getValue();  if(propertyNode!=  null)  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.isResolved())  {  Predicate  <  JSType>  propertyNode  =  propertyNode.getValue();  if(propertyNode!=  null)  {  return  false;  }	  if(this.isResolved())    {    Predicate    <    JSType>    propertyNode    =    this.propertyNode.getValue();    if(propertyNode!=    null)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	114	None	replace
1195	[BUG]  [BUGGY]  Predicate  <?>  propertyNode  =  this.slotType.referencedType.getPropertyNode();  [CE]  cannot  find  symbol  slotType  [FE]                                  AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  Predicate  <?>  propertyNode  =  this.slotType.referencedType.getPropertyNode();  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	Predicate  <?>  propertyNode  =  this.slotType.referencedType.getPropertyNode();	  Predicate    <?>    propertyNode    =    this.slotType.getPropertyNode();    	non-compiled	[CE]  cannot  find  symbol  slotType	136	None	replace
1196	[BUG]  [BUGGY]  Predicate  <?>  propertyNode  =  this.slotType.getPropertyNode(this.propertyName);  [CE]  cannot  find  symbol  propertyName  [FE]                                    AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  Predicate  <?>  propertyNode  =  this.slotType.getPropertyNode(this.propertyName);  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	Predicate  <?>  propertyNode  =  this.slotType.getPropertyNode(this.propertyName);	  Predicate    <?>    propertyNode    =    this.slotType.getPropertyNode();    	non-compiled	[CE]  cannot  find  symbol  propertyName	136	None	replace
1197	[BUG]  [BUGGY]  if(this.slotType.isUnknownType())  {  return  false;  }  [CE]  cannot  find  symbol  slotType  [FE]            AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.slotType.isUnknownType())  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.slotType.isUnknownType())  {  return  false;  }	  return    false;    return    false;    	non-compiled	[CE]  cannot  find  symbol  slotType	1	None	replace
1198	[BUG]  [BUGGY]  if(inferred)  {  return  false;  }  [CE]  cannot  find  symbol  inferred  [FE]            AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(inferred)  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(inferred)  {  return  false;  }	  if(isForwardDeclared)    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol  inferred	153	None	replace
1199	[BUG]  [BUGGY]  this.referencedTypes.put(reference,  propertyNode);  if(propertyNode!=  null)  {  return  propertyNode.setValidator(valueNode);  }  [CE]  cannot  find  symbol  propertyNode  [FE]                          AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  this.referencedTypes.put(reference,  propertyNode);  if(propertyNode!=  null)  {  return  propertyNode.setValidator(valueNode);  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	this.referencedTypes.put(reference,  propertyNode);  if(propertyNode!=  null)  {  return  propertyNode.setValidator(valueNode);  }	  if(this.isResolved())    {    Predicate    <    JSType>    propertyNode    =    this.referencedTypes.get(reference);    if(propertyNode!=    null)    {    return    propertyNode.setValidator(valueNode);    }    	non-compiled	[CE]  cannot  find  symbol  propertyNode	108	None	replace
1200	[BUG]  [BUGGY]  if(this.isValidator()  ||  this.isForwardDeclared())  {  return  true;  }  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.isValidator()  ||  this.isForwardDeclared())  {  return  true;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.isValidator()  ||  this.isForwardDeclared())  {  return  true;  }	  if(this.isValidator())    {    return    true;    }    	non-compiled	[CE]  cannot  find  symbol	75	None	replace
1201	[BUG]  [BUGGY]  if(!this.isValidation())return  true;  }  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(!this.isValidation())return  true;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(!this.isValidation())return  true;  }	  if(!this.isValidation())    {    return    true;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	17	None	replace
1202	[BUG]  [BUGGY]  if(!this.isValidation())return  false;  }  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(!this.isValidation())return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(!this.isValidation())return  false;  }	  if(!this.isValidation())    {    return    true;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	17	None	replace
1203	[BUG]  [BUGGY]  if(!this.validation.isValidation())  {  return  true;  }  [CE]  cannot  find  symbol  validation  [FE]                                AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(!this.validation.isValidation())  {  return  true;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(!this.validation.isValidation())  {  return  true;  }	  if(!this.isValidation())    {    return    true;    }    	non-compiled	[CE]  cannot  find  symbol  validation	17	None	replace
1204	[BUG]  [BUGGY]  return(this.isResolved()  &&  this.validator  ==  null);  Return(this.isResolved()  &&  this.validator  ==  null);  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  return(this.isResolved()  &&  this.validator  ==  null);  Return(this.isResolved()  &&  this.validator  ==  null);  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	return(this.isResolved()    &&    this.validator    ==    null);    Return(this.isResolved()  &&  this.validator  ==  null);	  timeout    	non-compiled	[CE]  cannot  find  symbol	59	None	add
1205	[BUG]  [BUGGY]  return(this.isResolved()  &&  this.validator  ==  null);  if(this.isResolved()  &&  this.validator  ==  null);  }  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  return(this.isResolved()  &&  this.validator  ==  null);  if(this.isResolved()  &&  this.validator  ==  null);  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	return(this.isResolved()    &&    this.validator    ==    null);    if(this.isResolved()  &&  this.validator  ==  null);  }	  timeout    	non-compiled	[CE]  class,  interface,  or  enum  expected	59	None	add
1206	[BUG]  [BUGGY]  if(this.isUnknownType())  {  return  super.setValidator(validator);  }  else  {  for(int  i  =  0;  i  <  this.isResolved();  i++)  {  return  super.setValidator(validator);  }  }  [CE]  bad  operand  types  for  binary  operator  '<'  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.isUnknownType())  {  return  super.setValidator(validator);  }  else  {  for(int  i  =  0;  i  <  this.isResolved();  i++)  {  return  super.setValidator(validator);  }  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.isUnknownType())  {  return  super.setValidator(validator);  }  else  {  for(int  i  =  0;  i  <  this.isResolved();  i++)  {  return  super.setValidator(validator);  }  }	  return    super.setValidator(validator);    if(this.isResolved())    {    return    super.setValidator(validator);    }    else    {    for(int    i    =    0;    i    <    this.isResolved();    i++)    {    return    super.setValidator(validator);    }    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '<'	126	None	replace
1207	[BUG]  [BUGGY]  if(this.isInferred())  {  return  super.setValidator(validator);  }  else  {  for(int  i  =  0;  i  <  this.isResolved();  i++)  {  return  super.setValidator(validator);  }  }  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.isInferred())  {  return  super.setValidator(validator);  }  else  {  for(int  i  =  0;  i  <  this.isResolved();  i++)  {  return  super.setValidator(validator);  }  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.isInferred())  {  return  super.setValidator(validator);  }  else  {  for(int  i  =  0;  i  <  this.isResolved();  i++)  {  return  super.setValidator(validator);  }  }	  return    super.setValidator(validator);    if(this.isResolved())    {    return    super.setValidator(validator);    }    else    {    for(int    i    =    0;    i    <    this.isResolved();    i++)    {    return    super.setValidator(validator);    }    	non-compiled	[CE]  cannot  find  symbol	126	None	replace
1208	[BUG]  [BUGGY]  if(this.isUnknownType())  {  return  super.setValidator(validator);  }  else  {  for(int  i  =  0;  i  <  this.isResolved();  i++)  {  return  super.setValidator(validator);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.isUnknownType())  {  return  super.setValidator(validator);  }  else  {  for(int  i  =  0;  i  <  this.isResolved();  i++)  {  return  super.setValidator(validator);  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.isUnknownType())  {  return  super.setValidator(validator);  }  else  {  for(int  i  =  0;  i  <  this.isResolved();  i++)  {  return  super.setValidator(validator);  }	  return    super.setValidator(validator);    if(this.isResolved())    {    return    super.setValidator(validator);    }    else    {    for(int    i    =    0;    i    <    this.isResolved();    i++)    {    return    super.setValidator(validator);    }    	non-compiled	[CE]  illegal  start  of  expression	126	None	replace
1209	[BUG]  [BUGGY]  if(this.isInstanceType())  {  return  super.setValidator(validator);  }  else  {  for(int  i  =  0;  i  <  this.isResolved();  i++)  {  return  super.setValidator(validator);  }  }  [CE]  bad  operand  types  for  binary  operator  '<'  [FE]                      AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.isInstanceType())  {  return  super.setValidator(validator);  }  else  {  for(int  i  =  0;  i  <  this.isResolved();  i++)  {  return  super.setValidator(validator);  }  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.isInstanceType())  {  return  super.setValidator(validator);  }  else  {  for(int  i  =  0;  i  <  this.isResolved();  i++)  {  return  super.setValidator(validator);  }  }	  return    super.setValidator(validator);    if(this.isResolved())    {    return    super.setValidator(validator);    }    else    {    for(int    i    =    0;    i    <    this.isResolved();    i++)    {    return    super.setValidator(validator);    }    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '<'	126	None	replace
1210	[BUG]  [BUGGY]  if(this.isForwardDeclared())return  true;  }  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.isForwardDeclared())return  true;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.isForwardDeclared())return  true;  }	  if(this.isForwardDeclared())    {    return    true;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	19	None	replace
1211	[BUG]  [BUGGY]  if(this.isForwardDeclared()  ||  this.isUnknownType())  {  return  true;  }  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.isForwardDeclared()  ||  this.isUnknownType())  {  return  true;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.isForwardDeclared()  ||  this.isUnknownType())  {  return  true;  }	  if(this.isForwardDeclared())    {    return    true;    }    	non-compiled	[CE]  cannot  find  symbol	19	None	replace
1212	[BUG]  [BUGGY]  Predicate  <?>  property  =  getProperty(propertyName).restrictByNotNullOrUndefined();  [CE]  cannot  find  symbol  propertyName  [FE]                      AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  Predicate  <?>  property  =  getProperty(propertyName).restrictByNotNullOrUndefined();  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	Predicate  <?>  property  =  getProperty(propertyName).restrictByNotNullOrUndefined();	  if(this.isResolved())    {    return    super.setValidator(validator);    }    else    {    this.validator    =    validator;    }    	non-compiled	[CE]  cannot  find  symbol  propertyName	42	None	replace
1213	[BUG]  [BUGGY]  if(isForwardDeclared()  ||  isUnknownType())  {  return  false;  }  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(isForwardDeclared()  ||  isUnknownType())  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(isForwardDeclared()  ||  isUnknownType())  {  return  false;  }	  if(isForwardDeclared())    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol	83	None	replace
1214	[BUG]  [BUGGY]  if(isForwardDeclared()  ||  isVarDeclaration())  {  return  false;  }  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(isForwardDeclared()  ||  isVarDeclaration())  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(isForwardDeclared()  ||  isVarDeclaration())  {  return  false;  }	  if(isForwardDeclared())    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol	83	None	replace
1215	[BUG]  [BUGGY]  if(isForwardDeclared()  ||  isInferred)  {  return  false;  }  [CE]  cannot  find  symbol  [FE]                          AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(isForwardDeclared()  ||  isInferred)  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(isForwardDeclared()  ||  isInferred)  {  return  false;  }	  if(isForwardDeclared())    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol	83	None	replace
1216	[BUG]  [BUGGY]  if(isForwardDeclared()  ||  isVoidReferencedTypes())  {  return  false;  }  [CE]  cannot  find  symbol  [FE]                            AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(isForwardDeclared()  ||  isVoidReferencedTypes())  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(isForwardDeclared()  ||  isVoidReferencedTypes())  {  return  false;  }	  if(isForwardDeclared())    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol	83	None	replace
1217	[BUG]  [BUGGY]  if(this.isInferred())  {  return  super.setValidator(validator);  }  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.isInferred())  {  return  super.setValidator(validator);  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.isInferred())  {  return  super.setValidator(validator);  }	  return    super.setValidator(validator);    if(this.isResolved())    {    Predicate    <    JSType>    validator    =    this.validator;    if(validator!=    null)    {    return    super.setValidator(validator);    }    	non-compiled	[CE]  cannot  find  symbol	52	None	replace
1218	[BUG]  [BUGGY]  if(this.isUnknownType())  {  return  super.setValidator(validator);  }  else  {  Predicate  <  JSType>  validator  =  this.validator;  if(validator!=  null)  {  return  super.setValidator(validator);  }  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.isUnknownType())  {  return  super.setValidator(validator);  }  else  {  Predicate  <  JSType>  validator  =  this.validator;  if(validator!=  null)  {  return  super.setValidator(validator);  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.isUnknownType())  {  return  super.setValidator(validator);  }  else  {  Predicate  <  JSType>  validator  =  this.validator;  if(validator!=  null)  {  return  super.setValidator(validator);  }	  return    super.setValidator(validator);    if(this.isResolved())    {    Predicate    <    JSType>    validator    =    this.validator;    if(validator!=    null)    {    return    super.setValidator(validator);    }    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
1219	[BUG]  [BUGGY]  if(this.validator!=  null  ||  this.validator.isUnknownType())  {  return  false;  }  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.validator!=  null  ||  this.validator.isUnknownType())  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.validator!=  null  ||  this.validator.isUnknownType())  {  return  false;  }	  if(this.validator!=    null)    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol	32	None	replace
1220	[BUG]  [BUGGY]  if(this.validator!=  null  ||  this.validator.isInstanceType())  {  return  false;  }  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.validator!=  null  ||  this.validator.isInstanceType())  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.validator!=  null  ||  this.validator.isInstanceType())  {  return  false;  }	  if(this.validator!=    null)    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol	32	None	replace
1221	[BUG]  [BUGGY]  if(this.referencedType!=  null  ||  this.referencedType.equals(validator))  {  return  false;  }  [CE]  referencedType  has  private  access  in  ProxyObjectType  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.referencedType!=  null  ||  this.referencedType.equals(validator))  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.referencedType!=  null  ||  this.referencedType.equals(validator))  {  return  false;  }	  if(this.referencedType!=    null)    {    return    false;    }    	non-compiled	[CE]  referencedType  has  private  access  in  ProxyObjectType	33	None	replace
1222	[BUG]  [BUGGY]  if(this.referencedType!=  null  &&  this.referencedType.isReferenced())  {  return  false;  }  [CE]  referencedType  has  private  access  in  ProxyObjectType  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.referencedType!=  null  &&  this.referencedType.isReferenced())  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.referencedType!=  null  &&  this.referencedType.isReferenced())  {  return  false;  }	  if(this.referencedType!=    null)    {    return    false;    }    	non-compiled	[CE]  referencedType  has  private  access  in  ProxyObjectType	33	None	replace
1223	[BUG]  [BUGGY]  if(this.isForwardDeclared())  {  return  false;  }  else  {  Predicate  <  JSType>  propertyNode  =  this.referencedTypes.get(reference);  if(propertyNode!=  propertyNode)  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.isForwardDeclared())  {  return  false;  }  else  {  Predicate  <  JSType>  propertyNode  =  this.referencedTypes.get(reference);  if(propertyNode!=  propertyNode)  {  return  true;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.isForwardDeclared())  {  return  false;  }  else  {  Predicate  <  JSType>  propertyNode  =  this.referencedTypes.get(reference);  if(propertyNode!=  propertyNode)  {  return  true;  }	  if(this.isResolved())    {    return    false;    }    else    {    Predicate    <    JSType>    propertyNode    =    this.referencedTypes.get(reference);    if(propertyNode!=    propertyNode)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	98	None	replace
1224	[BUG]  [BUGGY]  if(this.referencedTypes!=  null)  {  if(this.isResolved())  {  return  false;  }  else  {  Predicate  <  JSType>  propertyNode  =  this.referencedTypes.get(reference);  if(propertyNode!=  propertyNode)  {  return  true  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.referencedTypes!=  null)  {  if(this.isResolved())  {  return  false;  }  else  {  Predicate  <  JSType>  propertyNode  =  this.referencedTypes.get(reference);  if(propertyNode!=  propertyNode)  {  return  true  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.referencedTypes!=  null)  {  if(this.isResolved())  {  return  false;  }  else  {  Predicate  <  JSType>  propertyNode  =  this.referencedTypes.get(reference);  if(propertyNode!=  propertyNode)  {  return  true	  if(this.isResolved())    {    return    false;    }    else    {    Predicate    <    JSType>    propertyNode    =    this.referencedTypes.get(reference);    if(propertyNode!=    propertyNode)    {    return    true;    }    	non-compiled	[CE]  ';'  expected	98	None	replace
1225	[BUG]  [BUGGY]  if(this.referencedTypes!=  null)  {  if(this.isResolved())  {  return  false;  }  else  {  Predicate  <  JSType>  propertyNode  =  this.referencedTypes.get(reference);  if(propertyNode  ==  property  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.referencedTypes!=  null)  {  if(this.isResolved())  {  return  false;  }  else  {  Predicate  <  JSType>  propertyNode  =  this.referencedTypes.get(reference);  if(propertyNode  ==  property  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.referencedTypes!=  null)  {  if(this.isResolved())  {  return  false;  }  else  {  Predicate  <  JSType>  propertyNode  =  this.referencedTypes.get(reference);  if(propertyNode  ==  property	  if(this.isResolved())    {    return    false;    }    else    {    Predicate    <    JSType>    propertyNode    =    this.referencedTypes.get(reference);    if(propertyNode!=    propertyNode)    {    return    true;    }    	non-compiled	[CE]  ')'  expected	98	None	replace
1226	[BUG]  [BUGGY]  if(this.forType  ==  null  ||  this.slotType!=  null)  {  return  false;  }  [CE]  cannot  find  symbol  forType  [FE]                          AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.forType  ==  null  ||  this.slotType!=  null)  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.forType  ==  null  ||  this.slotType!=  null)  {  return  false;  }	  if(this.forType    ==    null)    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol  forType	13	None	replace
1227	[BUG]  [BUGGY]  if(this.forType  ==  validator)  {  return  false;  }  [CE]  cannot  find  symbol  forType  [FE]                            AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.forType  ==  validator)  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.forType  ==  validator)  {  return  false;  }	  if(this.forType    ==    null)    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol  forType	13	None	replace
1228	[BUG]  [BUGGY]  timeout  [FE]                      AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.validator!=  null)  {  return(this.isResolved()  &&  this.validator!=  null);  }  else  {  return(this.isResolved()  &&  this.validator!=  null);  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	add	if(this.validator!=  null)  {  return(this.isResolved()  &&  this.validator!=  null);  }  else  {  return(this.isResolved()  &&  this.validator!=  null);  }	  return(this.isResolved()    &&    this.validator!=    null);    if(this.isResolved()    &&    this.validator!=    null);    }    else    {    return(this.isResolved()    &&    this.validator!=    null);    }    	compilable	timeout	28	1	replace
1229	[BUG]  [BUGGY]  if(this.validator!=  null)  {  return(this.isResolved()  &&  this.validator!=  null);  }  else  {  return(this.isResolved()  &&  this.validator!=  null);  }  timeout  [FE]                      AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.validator!=  null)  {  return(this.isResolved()  &&  this.validator!=  null);  }  else  {  return(this.isResolved()  &&  this.validator!=  null);  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.validator!=  null)  {  return(this.isResolved()  &&  this.validator!=  null);  }  else  {  return(this.isResolved()  &&  this.validator!=  null);  }	  return(this.isResolved()    &&    this.validator!=    null);    if(this.isResolved()    &&    this.validator!=    null);    }    else    {    return(this.isResolved()    &&    this.validator!=    null);    }    	compilable	timeout	28	1	replace
1230	[BUG]  [BUGGY]  if(this.validator!=  null)  {  return(this.isResolved()  &&  this.validator!=  null);  }  else  {  return(this.isValidator()  &&  this.validator!=  null);  }  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.validator!=  null)  {  return(this.isResolved()  &&  this.validator!=  null);  }  else  {  return(this.isValidator()  &&  this.validator!=  null);  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.validator!=  null)  {  return(this.isResolved()  &&  this.validator!=  null);  }  else  {  return(this.isValidator()  &&  this.validator!=  null);  }	  return(this.isResolved()    &&    this.validator!=    null);    if(this.isResolved()    &&    this.validator!=    null);    }    else    {    return(this.isResolved()    &&    this.validator!=    null);    }    	non-compiled	[CE]  cannot  find  symbol	28	None	replace
1231	[BUG]  [BUGGY]  timeout  [FE]                          AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.validator!=  null)  {  return(this.isResolved()  &&  this.validator!=  null);  }  else  {  return(this.isResolved()  &&  this.validator  ==  null);  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	add	if(this.validator!=  null)  {  return(this.isResolved()  &&  this.validator!=  null);  }  else  {  return(this.isResolved()  &&  this.validator  ==  null);  }	  return(this.isResolved()    &&    this.validator!=    null);    if(this.isResolved()    &&    this.validator!=    null);    }    else    {    return(this.isResolved()    &&    this.validator!=    null);    }    	compilable	timeout	28	1	replace
1232	[BUG]  [BUGGY]  if(this.validator!=  null)  {  return(this.isResolved()  &&  this.validator!=  null);  }  else  {  return(this.isResolved()  &&  this.validator  ==  null);  }  timeout  [FE]                          AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.validator!=  null)  {  return(this.isResolved()  &&  this.validator!=  null);  }  else  {  return(this.isResolved()  &&  this.validator  ==  null);  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.validator!=  null)  {  return(this.isResolved()  &&  this.validator!=  null);  }  else  {  return(this.isResolved()  &&  this.validator  ==  null);  }	  return(this.isResolved()    &&    this.validator!=    null);    if(this.isResolved()    &&    this.validator!=    null);    }    else    {    return(this.isResolved()    &&    this.validator!=    null);    }    	compilable	timeout	28	1	replace
1233	[BUG]  [BUGGY]  if(this.forAnnotations!=  forAnnotations)  {  forAnnotations  ignoredForwardReferencedTypes  =  this.ignoreForwardReferencedTypes;  if(ignoreForwardReferencedTypes!=  null)  {  return  false;  }  }  [CE]  cannot  find  symbol  forAnnotations  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.forAnnotations!=  forAnnotations)  {  forAnnotations  ignoredForwardReferencedTypes  =  this.ignoreForwardReferencedTypes;  if(ignoreForwardReferencedTypes!=  null)  {  return  false;  }  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.forAnnotations!=  forAnnotations)  {  forAnnotations  ignoredForwardReferencedTypes  =  this.ignoreForwardReferencedTypes;  if(ignoreForwardReferencedTypes!=  null)  {  return  false;  }  }	  return    false;    if(this.forAnnotations!=    forAnnotations)    {    forAnnotations    ignoreForwardReferencedTypes    =    this.ignoreForwardReferencedTypes;    if(ignoreForwardReferencedTypes!=    null)    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol  forAnnotations	5	None	replace
1234	[BUG]  [BUGGY]  if(isForwardDeclared)  {  forAnnotations  {  propertyNode  =  propertyNode.getFirstChild();  if(propertyNode!=  null)  {  return  false;  }  }  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(isForwardDeclared)  {  forAnnotations  {  propertyNode  =  propertyNode.getFirstChild();  if(propertyNode!=  null)  {  return  false;  }  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(isForwardDeclared)  {  forAnnotations  {  propertyNode  =  propertyNode.getFirstChild();  if(propertyNode!=  null)  {  return  false;  }  }	  return    false;    if(isForwardDeclared)    {    forAnnotations    {    propertyNode    =    propertyNode.getFirstChild();    if(propertyNode!=    null)    {    return    false;    }    	non-compiled	[CE]  not  a  statement	142	None	replace
1235	[BUG]  [BUGGY]  if(isForwardDeclared)  {  forAnnotations  {  propertyNode  =  propertyNode.getFirstChild();  if(propertyNode!=  null)  {  return  false;  }  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(isForwardDeclared)  {  forAnnotations  {  propertyNode  =  propertyNode.getFirstChild();  if(propertyNode!=  null)  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(isForwardDeclared)  {  forAnnotations  {  propertyNode  =  propertyNode.getFirstChild();  if(propertyNode!=  null)  {  return  false;  }	  return    false;    if(isForwardDeclared)    {    forAnnotations    {    propertyNode    =    propertyNode.getFirstChild();    if(propertyNode!=    null)    {    return    false;    }    	non-compiled	[CE]  not  a  statement	142	None	replace
1236	[BUG]  [BUGGY]  if(this.validator!=  null)  {  return(this.isResolved()  &&  this.validator  ==  null);  }  [CE]  missing  return  statement  [FE]                        AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.validator!=  null)  {  return(this.isResolved()  &&  this.validator  ==  null);  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.validator!=  null)  {  return(this.isResolved()  &&  this.validator  ==  null);  }	  return(this.isResolved()    &&    this.validator!=    null);    if(this.isResolved()    &&    this.validator!=    null)    {    return(this.isResolved()    &&    this.validator    ==    null);    }    	non-compiled	[CE]  missing  return  statement	29	None	replace
1237	[BUG]  [BUGGY]  if(this.validator  ==  null)  {  return  this.isResolved();  }  [CE]  missing  return  statement  [FE]                          AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.validator  ==  null)  {  return  this.isResolved();  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.validator  ==  null)  {  return  this.isResolved();  }	  return(this.isResolved()    &&    this.validator!=    null);    if(this.isResolved()    &&    this.validator!=    null)    {    return(this.isResolved()    &&    this.validator    ==    null);    }    	non-compiled	[CE]  missing  return  statement	29	None	replace
1238	[BUG]  [BUGGY]  if(this.validator!=  null)  {  return(this.isResolved()  &&  validator  ==  null);  }  [CE]  missing  return  statement  [FE]                            AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.validator!=  null)  {  return(this.isResolved()  &&  validator  ==  null);  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.validator!=  null)  {  return(this.isResolved()  &&  validator  ==  null);  }	  return(this.isResolved()    &&    this.validator!=    null);    if(this.isResolved()    &&    this.validator!=    null)    {    return(this.isResolved()    &&    this.validator    ==    null);    }    	non-compiled	[CE]  missing  return  statement	29	None	replace
1239	[BUG]  [BUGGY]  if(!this.slotType.isValidator)  {  return  false;  }  [CE]  cannot  find  symbol  slotType  [FE]                      AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(!this.slotType.isValidator)  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(!this.slotType.isValidator)  {  return  false;  }	  if(!this.isValidator)    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol  slotType	116	None	replace
1240	[BUG]  [BUGGY]  if(!isValidator)  {  return  false;  }  [CE]  cannot  find  symbol  isValidator  [FE]                        AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(!isValidator)  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(!isValidator)  {  return  false;  }	  if(!this.isValidator)    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol  isValidator	116	None	replace
1241	[BUG]  [BUGGY]  if(this.forAnnotations!=  forAnnotations)  {  forAnnotations  ignoreForwardReferencedTypes  =  this.ignoreForwardReferencedTypes;  if(ignoreForwardReferencedTypes  ==  false)  {  return  false;  }  }  [CE]  cannot  find  symbol  forAnnotations  [FE]                        AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.forAnnotations!=  forAnnotations)  {  forAnnotations  ignoreForwardReferencedTypes  =  this.ignoreForwardReferencedTypes;  if(ignoreForwardReferencedTypes  ==  false)  {  return  false;  }  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.forAnnotations!=  forAnnotations)  {  forAnnotations  ignoreForwardReferencedTypes  =  this.ignoreForwardReferencedTypes;  if(ignoreForwardReferencedTypes  ==  false)  {  return  false;  }  }	  return    false;    if(this.forAnnotations!=    forAnnotations)    {    forAnnotations    ignoreForwardReferencedTypes    =    this.ignoreForwardReferencedTypes;    if(ignoreForwardReferencedTypes    ==    false)    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol  forAnnotations	7	None	replace
1242	[BUG]  [BUGGY]  if(this.slotType!=  slotType)  {  return  false;  }  else  if(this.forAnnotations!=  forAnnotations)  {  forAnnotations  ignoreForwardReferencedTypes  =  this.ignoreForwardReferencedTypes;  if(ignoreForwardReferencedTypes  ==  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.slotType!=  slotType)  {  return  false;  }  else  if(this.forAnnotations!=  forAnnotations)  {  forAnnotations  ignoreForwardReferencedTypes  =  this.ignoreForwardReferencedTypes;  if(ignoreForwardReferencedTypes  ==  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.slotType!=  slotType)  {  return  false;  }  else  if(this.forAnnotations!=  forAnnotations)  {  forAnnotations  ignoreForwardReferencedTypes  =  this.ignoreForwardReferencedTypes;  if(ignoreForwardReferencedTypes  ==	  return    false;    if(this.forAnnotations!=    forAnnotations)    {    forAnnotations    ignoreForwardReferencedTypes    =    this.ignoreForwardReferencedTypes;    if(ignoreForwardReferencedTypes    ==    false)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
1243	[BUG]  [BUGGY]  if(this.forAnnotations  ==  null  ||  this.ignoreForwardReferencedTypes)return  false;  }  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.forAnnotations  ==  null  ||  this.ignoreForwardReferencedTypes)return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.forAnnotations  ==  null  ||  this.ignoreForwardReferencedTypes)return  false;  }	  if(this.forAnnotations!=    null    ||    this.ignoreForwardReferencedTypes)    {    return    false;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	151	None	replace
1244	[BUG]  [BUGGY]  if(validator  ==  null)  {  Predicate  <  JSType>  propertyNode  =  this.getPropertyNode(propertyName);  if(propertyNode!=  null)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                                    AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(validator  ==  null)  {  Predicate  <  JSType>  propertyNode  =  this.getPropertyNode(propertyName);  if(propertyNode!=  null)  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(validator  ==  null)  {  Predicate  <  JSType>  propertyNode  =  this.getPropertyNode(propertyName);  if(propertyNode!=  null)  {  return  false;  }	  if(this.isResolved())    {    Predicate    <    JSType>    propertyNode    =    this.getPropertyNode(propertyName);    if(propertyNode!=    null)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	113	None	replace
1245	[BUG]  [BUGGY]  predicate  =  this.getPropertyNode(propertyName);  if(propertyNode!=  null)  {  return  false;  }  [CE]  cannot  find  symbol  predicate  [FE]                                      AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  predicate  =  this.getPropertyNode(propertyName);  if(propertyNode!=  null)  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	predicate  =  this.getPropertyNode(propertyName);  if(propertyNode!=  null)  {  return  false;  }	  if(this.isResolved())    {    Predicate    <    JSType>    propertyNode    =    this.getPropertyNode(propertyName);    if(propertyNode!=    null)    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol  predicate	113	None	replace
1246	[BUG]  [BUGGY]  if(this.isInferred())  {  return  super.setValidator(validator);  }  else  {  Predicate  <  JSType>  propertyNode  =  this.isResolved();  return  super.setValidator(propertyNode);  }  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.isInferred())  {  return  super.setValidator(validator);  }  else  {  Predicate  <  JSType>  propertyNode  =  this.isResolved();  return  super.setValidator(propertyNode);  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.isInferred())  {  return  super.setValidator(validator);  }  else  {  Predicate  <  JSType>  propertyNode  =  this.isResolved();  return  super.setValidator(propertyNode);  }	  return    super.setValidator(validator);    if(this.isResolved())    {    return    super.setValidator(validator);    }    else    {    Predicate    <    JSType>    propertyNode    =    this.isResolved();    return    super.setValidator(propertyNode);    }    	non-compiled	[CE]  cannot  find  symbol	125	None	replace
1247	[BUG]  [BUGGY]  if(propertyNode!=  null)  {  return  super.setValidator(validator);  }  else  {  Predicate  <  JSType>  propertyNode  =  this.isResolved();  return  super.setValidator(propertyNode);  }  [CE]  cannot  find  symbol  propertyNode  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(propertyNode!=  null)  {  return  super.setValidator(validator);  }  else  {  Predicate  <  JSType>  propertyNode  =  this.isResolved();  return  super.setValidator(propertyNode);  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(propertyNode!=  null)  {  return  super.setValidator(validator);  }  else  {  Predicate  <  JSType>  propertyNode  =  this.isResolved();  return  super.setValidator(propertyNode);  }	  return    super.setValidator(validator);    if(this.isResolved())    {    return    super.setValidator(validator);    }    else    {    Predicate    <    JSType>    propertyNode    =    this.isResolved();    return    super.setValidator(propertyNode);    }    	non-compiled	[CE]  cannot  find  symbol  propertyNode	125	None	replace
1248	[BUG]  [BUGGY]  if(propertyNode.isUnknownType())  {  return  super.setValidator(validator);  }  else  {  Predicate  <  JSType>  propertyNode  =  this.isResolved();  return  super.setValidator(propertyNode);  }  [CE]  cannot  find  symbol  propertyNode  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(propertyNode.isUnknownType())  {  return  super.setValidator(validator);  }  else  {  Predicate  <  JSType>  propertyNode  =  this.isResolved();  return  super.setValidator(propertyNode);  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(propertyNode.isUnknownType())  {  return  super.setValidator(validator);  }  else  {  Predicate  <  JSType>  propertyNode  =  this.isResolved();  return  super.setValidator(propertyNode);  }	  return    super.setValidator(validator);    if(this.isResolved())    {    return    super.setValidator(validator);    }    else    {    Predicate    <    JSType>    propertyNode    =    this.isResolved();    return    super.setValidator(propertyNode);    }    	non-compiled	[CE]  cannot  find  symbol  propertyNode	125	None	replace
1249	[BUG]  [BUGGY]  if(this.forAnnotations!=  forAnnotations)  {  forAnnotations  ignoreForwardReferencedTypes  =  getAnnotations();  if(ignoreForwardReferencedTypes  ==  null)  {  return  false;  }  }  [CE]  cannot  find  symbol  forAnnotations  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.forAnnotations!=  forAnnotations)  {  forAnnotations  ignoreForwardReferencedTypes  =  getAnnotations();  if(ignoreForwardReferencedTypes  ==  null)  {  return  false;  }  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.forAnnotations!=  forAnnotations)  {  forAnnotations  ignoreForwardReferencedTypes  =  getAnnotations();  if(ignoreForwardReferencedTypes  ==  null)  {  return  false;  }  }	  return    false;    if(this.forAnnotations!=    forAnnotations)    {    forAnnotations    ignoreForwardReferencedTypes    =    getAnnotations();    if(ignoreForwardReferencedTypes    ==    null)    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol  forAnnotations	4	None	replace
1250	[BUG]  [BUGGY]  if(this.forAnnotations!=  forAnnotations)  {  int  ignoreForwardReferencedTypes  =  getAnnotations();  if(ignoreForwardReferencedTypes  ==  null)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.forAnnotations!=  forAnnotations)  {  int  ignoreForwardReferencedTypes  =  getAnnotations();  if(ignoreForwardReferencedTypes  ==  null)  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.forAnnotations!=  forAnnotations)  {  int  ignoreForwardReferencedTypes  =  getAnnotations();  if(ignoreForwardReferencedTypes  ==  null)  {  return  false;  }	  return    false;    if(this.forAnnotations!=    forAnnotations)    {    forAnnotations    ignoreForwardReferencedTypes    =    getAnnotations();    if(ignoreForwardReferencedTypes    ==    null)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
1251	[BUG]  [BUGGY]  timeout  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.isUnknownType())  {  return  super.setValidator(validator);  }  else  {  return  super.setValidator(validator);  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	add	if(this.isUnknownType())  {  return  super.setValidator(validator);  }  else  {  return  super.setValidator(validator);  }	  return    super.setValidator(validator);    if(this.isResolved())    {    return    super.setValidator(validator);    }    else    {    return    super.setValidator(validator);    }    	compilable	timeout	79	1	replace
1252	[BUG]  [BUGGY]  if(this.isUnknownType())  {  return  super.setValidator(validator);  }  else  {  return  super.setValidator(validator);  }  timeout  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.isUnknownType())  {  return  super.setValidator(validator);  }  else  {  return  super.setValidator(validator);  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.isUnknownType())  {  return  super.setValidator(validator);  }  else  {  return  super.setValidator(validator);  }	  return    super.setValidator(validator);    if(this.isResolved())    {    return    super.setValidator(validator);    }    else    {    return    super.setValidator(validator);    }    	compilable	timeout	79	1	replace
1253	[BUG]  [BUGGY]  if(this.isNative())  {  return  super.setValidator(validator);  }  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.isNative())  {  return  super.setValidator(validator);  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.isNative())  {  return  super.setValidator(validator);  }	  return    super.setValidator(validator);    if(this.isResolved())    {    return    super.setValidator(validator);    }    else    {    return    super.setValidator(validator);    }    	non-compiled	[CE]  cannot  find  symbol	79	None	replace
1254	[BUG]  [BUGGY]  if(super.setValidator!=  null)  {  return  false;  }  [CE]  cannot  find  symbol  setValidator  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(super.setValidator!=  null)  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(super.setValidator!=  null)  {  return  false;  }	  if(this.validator!=    null)    {    return    super.setValidator(validator);    }    	non-compiled	[CE]  cannot  find  symbol  setValidator	39	None	replace
1255	[BUG]  [BUGGY]  if(super.setValidator!=  null)  {  return  super.setValidator(validator);  }  [CE]  cannot  find  symbol  setValidator  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(super.setValidator!=  null)  {  return  super.setValidator(validator);  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(super.setValidator!=  null)  {  return  super.setValidator(validator);  }	  if(this.validator!=    null)    {    return    super.setValidator(validator);    }    	non-compiled	[CE]  cannot  find  symbol  setValidator	39	None	replace
1256	[BUG]  [BUGGY]  if(super.setValidator!=  validator)  {  return  super.setValidator(validator);  }  [CE]  cannot  find  symbol  setValidator  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(super.setValidator!=  validator)  {  return  super.setValidator(validator);  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(super.setValidator!=  validator)  {  return  super.setValidator(validator);  }	  if(this.validator!=    null)    {    return    super.setValidator(validator);    }    	non-compiled	[CE]  cannot  find  symbol  setValidator	39	None	replace
1257	[BUG]  [BUGGY]  return(this.isResolved()  ||  this.validator!=  null);  if(this.isResolved()  ||  this.validator!=  null);  else  return(this.isResolved()  ||  this.validator!=  null);  }  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  return(this.isResolved()  ||  this.validator!=  null);  if(this.isResolved()  ||  this.validator!=  null);  else  return(this.isResolved()  ||  this.validator!=  null);  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	return(this.isResolved()    ||    this.validator!=    null);    if(this.isResolved()  ||  this.validator!=  null);  else  return(this.isResolved()  ||  this.validator!=  null);  }	  timeout    	non-compiled	[CE]  class,  interface,  or  enum  expected	54	None	add
1258	[BUG]  [BUGGY]  if(this.forAnonymousTypes!=  null)return  false;  }  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.forAnonymousTypes!=  null)return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.forAnonymousTypes!=  null)return  false;  }	  if(this.forAnonymousTypes    ==    null)    {    return    false;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	93	None	replace
1259	[BUG]  [BUGGY]  if(this.forTypes  ==  null)  {  return  false;  }  [CE]  cannot  find  symbol  forTypes  [FE]                            AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.forTypes  ==  null)  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.forTypes  ==  null)  {  return  false;  }	  if(this.forAnonymousTypes    ==    null)    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol  forTypes	93	None	replace
1260	[BUG]  [BUGGY]  Predicate  <?>  property  =  propertyNode.getProperty(propertyName);  [CE]  cannot  find  symbol  propertyName  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  Predicate  <?>  property  =  propertyNode.getProperty(propertyName);  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	Predicate  <?>  property  =  propertyNode.getProperty(propertyName);	  Predicate    <?>    property    =    this.getProperty(propertyName);    	non-compiled	[CE]  cannot  find  symbol  propertyName	104	None	replace
1261	[BUG]  [BUGGY]  Predicate  <?>  property  =  propertyNode.getProperty(name);  [CE]  cannot  find  symbol  name  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  Predicate  <?>  property  =  propertyNode.getProperty(name);  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	Predicate  <?>  property  =  propertyNode.getProperty(name);	  Predicate    <?>    property    =    this.getProperty(propertyName);    	non-compiled	[CE]  cannot  find  symbol  name	104	None	replace
1262	[BUG]  [BUGGY]  Predicate  <?>  property  =  propertyNode.getProperty(this.propertyName);  [CE]  cannot  find  symbol  propertyName  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  Predicate  <?>  property  =  propertyNode.getProperty(this.propertyName);  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	Predicate  <?>  property  =  propertyNode.getProperty(this.propertyName);	  Predicate    <?>    property    =    this.getProperty(propertyName);    	non-compiled	[CE]  cannot  find  symbol  propertyName	104	None	replace
1263	[BUG]  [BUGGY]  Predicate  <?>  property  =  propertyNode.getProperty(reference);  [CE]  cannot  find  symbol  propertyNode  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  Predicate  <?>  property  =  propertyNode.getProperty(reference);  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	Predicate  <?>  property  =  propertyNode.getProperty(reference);	  Predicate    <?>    property    =    this.getProperty(propertyName);    	non-compiled	[CE]  cannot  find  symbol  propertyNode	104	None	replace
1264	[BUG]  [BUGGY]  return(this.isResolved()  ||  validator!=  null);  if(this.isResolved()  ||  validator!=  null);  else  return(this.isResolved()  ||  validator!=  null);  }  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  return(this.isResolved()  ||  validator!=  null);  if(this.isResolved()  ||  validator!=  null);  else  return(this.isResolved()  ||  validator!=  null);  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	return(this.isResolved()    ||    validator!=    null);    if(this.isResolved()  ||  validator!=  null);  else  return(this.isResolved()  ||  validator!=  null);  }	  timeout    	non-compiled	[CE]  class,  interface,  or  enum  expected	106	None	add
1265	[BUG]  [BUGGY]  return(this.isResolved()  ||  validator!=  null);  if(this.isResolved()  ||  validator!=  null);  else  {  return(this.isResolved()  ||  validator!=  null);  }  [CE]  unreachable  statement  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  return(this.isResolved()  ||  validator!=  null);  if(this.isResolved()  ||  validator!=  null);  else  {  return(this.isResolved()  ||  validator!=  null);  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	return(this.isResolved()    ||    validator!=    null);    if(this.isResolved()  ||  validator!=  null);  else  {  return(this.isResolved()  ||  validator!=  null);  }	  timeout    	non-compiled	[CE]  unreachable  statement	106	None	add
1266	[BUG]  [BUGGY]  if(!this.forAnnotations)  {  return  super.setValidator(validator);  if(this.isResolved())  {  Predicate  <?>  property  =  this.referencedType.getProperty(propertyName);  if(property!=  nu  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(!this.forAnnotations)  {  return  super.setValidator(validator);  if(this.isResolved())  {  Predicate  <?>  property  =  this.referencedType.getProperty(propertyName);  if(property!=  nu  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(!this.forAnnotations)  {  return  super.setValidator(validator);  if(this.isResolved())  {  Predicate  <?>  property  =  this.referencedType.getProperty(propertyName);  if(property!=  nu	  return    super.setValidator(validator);    if(this.isResolved())    {    Predicate    <?>    property    =    this.referencedType.getProperty(propertyName);    if(property!=    null)    {    return    super.setValidator(property);    }    	non-compiled	[CE]  ')'  expected	80	None	replace
1267	[BUG]  [BUGGY]  if(!this.forAnnotations)  {  return  super.setValidator(validator);  if(this.isResolved())  {  Predicate  <?>  property  =  this.referencedType.getProperty(propertyName);  if(proper  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(!this.forAnnotations)  {  return  super.setValidator(validator);  if(this.isResolved())  {  Predicate  <?>  property  =  this.referencedType.getProperty(propertyName);  if(proper  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(!this.forAnnotations)  {  return  super.setValidator(validator);  if(this.isResolved())  {  Predicate  <?>  property  =  this.referencedType.getProperty(propertyName);  if(proper	  return    super.setValidator(validator);    if(this.isResolved())    {    Predicate    <?>    property    =    this.referencedType.getProperty(propertyName);    if(property!=    null)    {    return    super.setValidator(property);    }    	non-compiled	[CE]  ')'  expected	80	None	replace
1268	[BUG]  [BUGGY]  if(referencedType!=  null)  {  Predicate  <  JSType>  referencedType  =  validator.getReferencedType();  if(referencedType  ==  null)  {  return  referencedType.setValidator(value);  }  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(referencedType!=  null)  {  Predicate  <  JSType>  referencedType  =  validator.getReferencedType();  if(referencedType  ==  null)  {  return  referencedType.setValidator(value);  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(referencedType!=  null)  {  Predicate  <  JSType>  referencedType  =  validator.getReferencedType();  if(referencedType  ==  null)  {  return  referencedType.setValidator(value);  }	  if(this.isResolved())    {    Predicate    <    JSType>    referencedType    =    validator.getReferencedType();    if(referencedType    ==    null)    {    return    referencedType.setValidator(value);    }    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
1269	[BUG]  [BUGGY]  if(value!=  null)  {  Predicate  <  JSType>  referencedType  =  validator.getReferencedType();  if(referencedType  ==  null)  {  return  referencedType.setValidator(value);  }  [CE]  illegal  start  of  expression  [FE]                                AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(value!=  null)  {  Predicate  <  JSType>  referencedType  =  validator.getReferencedType();  if(referencedType  ==  null)  {  return  referencedType.setValidator(value);  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(value!=  null)  {  Predicate  <  JSType>  referencedType  =  validator.getReferencedType();  if(referencedType  ==  null)  {  return  referencedType.setValidator(value);  }	  if(this.isResolved())    {    Predicate    <    JSType>    referencedType    =    validator.getReferencedType();    if(referencedType    ==    null)    {    return    referencedType.setValidator(value);    }    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
1270	[BUG]  [BUGGY]  if(this.referencedType!=  null)  {  return  super.setValidator(validator);  }  else  {  Predicate  <  JSType>  property  =  this.referencedType.getProperty(propertyName);  if(property!=  null)  {  return  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.referencedType!=  null)  {  return  super.setValidator(validator);  }  else  {  Predicate  <  JSType>  property  =  this.referencedType.getProperty(propertyName);  if(property!=  null)  {  return  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.referencedType!=  null)  {  return  super.setValidator(validator);  }  else  {  Predicate  <  JSType>  property  =  this.referencedType.getProperty(propertyName);  if(property!=  null)  {  return	  return    super.setValidator(validator);    if(this.isResolved())    {    Predicate    <    JSType>    property    =    this.referencedType.getProperty(propertyName);    if(property!=    null)    {    return    super.setValidator(property);    }    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
1271	[BUG]  [BUGGY]  Predicate  <  JSType>  referencedType  =  this.referencedType.getReferencedType();  if(referencedType!=  null)  {  return  reference  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  Predicate  <  JSType>  referencedType  =  this.referencedType.getReferencedType();  if(referencedType!=  null)  {  return  reference  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	Predicate  <  JSType>  referencedType  =  this.referencedType.getReferencedType();  if(referencedType!=  null)  {  return  reference	  if(this.isResolved())    {    return    super.setValidator(validator);    }    else    {    Predicate    <    JSType>    referencedType    =    this.referencedType.getReferencedType();    if(referencedType!=    null)    {    return    reference    	non-compiled	[CE]  ';'  expected	96	None	replace
1272	[BUG]  [BUGGY]  if(this.slotType!=  null  ||  this.slotType.equals(value))  return  false;  }  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.slotType!=  null  ||  this.slotType.equals(value))  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.slotType!=  null  ||  this.slotType.equals(value))  return  false;  }	  if(this.slotType!=    null)return    false;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	146	None	replace
1273	[BUG]  [BUGGY]  if(this.slotType!=  null  ||  this.slotType.length  ==  0)return  false;  }  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.slotType!=  null  ||  this.slotType.length  ==  0)return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.slotType!=  null  ||  this.slotType.length  ==  0)return  false;  }	  if(this.slotType!=    null)return    false;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	146	None	replace
1274	[BUG]  [BUGGY]  if(propertyNode!=  null)  {  return  false;  forAnnotations  <  propertyNode  =  propertyNode.getFirstChild();  if(!this.isResolved())  {  return  false;  }  [CE]  >  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(propertyNode!=  null)  {  return  false;  forAnnotations  <  propertyNode  =  propertyNode.getFirstChild();  if(!this.isResolved())  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(propertyNode!=  null)  {  return  false;  forAnnotations  <  propertyNode  =  propertyNode.getFirstChild();  if(!this.isResolved())  {  return  false;  }	  return    false;    if(validator!=    null)    {    forAnnotations    <    propertyNode    =    propertyNode.getFirstChild();    if(!this.isResolved())    {    return    false;    }    	non-compiled	[CE]  >  expected	143	None	replace
1275	[BUG]  [BUGGY]  if(propertyNode!=  null)  {  return  true;  forAnnotations  <  propertyNode  =  propertyNode.getFirstChild();  if(!this.isResolved())  {  return  false;  }  [CE]  >  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(propertyNode!=  null)  {  return  true;  forAnnotations  <  propertyNode  =  propertyNode.getFirstChild();  if(!this.isResolved())  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(propertyNode!=  null)  {  return  true;  forAnnotations  <  propertyNode  =  propertyNode.getFirstChild();  if(!this.isResolved())  {  return  false;  }	  return    false;    if(validator!=    null)    {    forAnnotations    <    propertyNode    =    propertyNode.getFirstChild();    if(!this.isResolved())    {    return    false;    }    	non-compiled	[CE]  >  expected	143	None	replace
1276	[BUG]  [BUGGY]  Predicate  <?>  propertyNode  =  this.isForwardDeclared()?  super.setValidator(validator);  [CE]  :  expected  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  Predicate  <?>  propertyNode  =  this.isForwardDeclared()?  super.setValidator(validator);  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	Predicate  <?>  propertyNode  =  this.isForwardDeclared()?  super.setValidator(validator);	  if(this.isResolved())    {    return    super.setValidator(validator);    }    	non-compiled	[CE]  :  expected	38	None	replace
1277	[BUG]  [BUGGY]  Predicate  <?>  propertyNode  =  this.isForwardDeclared()?  super.setValidator(validator):  null;  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  Predicate  <?>  propertyNode  =  this.isForwardDeclared()?  super.setValidator(validator):  null;  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	Predicate  <?>  propertyNode  =  this.isForwardDeclared()?  super.setValidator(validator):  null;	  if(this.isResolved())    {    return    super.setValidator(validator);    }    	non-compiled	[CE]  cannot  find  symbol	38	None	replace
1278	[BUG]  [BUGGY]  Predicate  <?>  property  =  this.getProperty(propertyName).restrictByNotNullOrUndefined();  [CE]  cannot  find  symbol  propertyName  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  Predicate  <?>  property  =  this.getProperty(propertyName).restrictByNotNullOrUndefined();  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	Predicate  <?>  property  =  this.getProperty(propertyName).restrictByNotNullOrUndefined();	  if(this.isResolved())    {    return    super.setValidator(validator);    }    	non-compiled	[CE]  cannot  find  symbol  propertyName	38	None	replace
1279	[BUG]  [BUGGY]  if(validator!=  null  ||  this.validator.isUnknownType())  {  return  false;  }  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(validator!=  null  ||  this.validator.isUnknownType())  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(validator!=  null  ||  this.validator.isUnknownType())  {  return  false;  }	  if(validator!=    null)    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol	34	None	replace
1280	[BUG]  [BUGGY]  if(validator  ==  null)return  false;  }  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(validator  ==  null)return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(validator  ==  null)return  false;  }	  if(validator!=    null)    {    return    false;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	34	None	replace
1281	[BUG]  [BUGGY]  if(validator!=  null  ||  this.validator.equals(validator))  {  return  false;  }  [CE]  missing  return  statement  [FE]                      AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(validator!=  null  ||  this.validator.equals(validator))  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(validator!=  null  ||  this.validator.equals(validator))  {  return  false;  }	  if(validator!=    null)    {    return    false;    }    	non-compiled	[CE]  missing  return  statement	34	None	replace
1282	[BUG]  [BUGGY]  if(validator!=  null  ||  this.validator.isInstanceType())  {  return  false;  }  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(validator!=  null  ||  this.validator.isInstanceType())  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(validator!=  null  ||  this.validator.isInstanceType())  {  return  false;  }	  if(validator!=    null)    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol	34	None	replace
1283	[BUG]  [BUGGY]  this.ignoreForwardDeclared  =  validator.isForwardDeclared();  [CE]  cannot  find  symbol  ignoreForwardDeclared  [FE]                        AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  this.ignoreForwardDeclared  =  validator.isForwardDeclared();  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	this.ignoreForwardDeclared  =  validator.isForwardDeclared();	  this.isForwardDeclared();    	non-compiled	[CE]  cannot  find  symbol  ignoreForwardDeclared	22	None	replace
1284	[BUG]  [BUGGY]  this.referencedTypes.setForwardDeclared(validator);  [CE]  cannot  find  symbol  referencedTypes  [FE]                          AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  this.referencedTypes.setForwardDeclared(validator);  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	this.referencedTypes.setForwardDeclared(validator);	  this.isForwardDeclared();    	non-compiled	[CE]  cannot  find  symbol  referencedTypes	22	None	replace
1285	[BUG]  [BUGGY]  this.slotType.isForwardDeclared();  [CE]  cannot  find  symbol  slotType  [FE]                            AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  this.slotType.isForwardDeclared();  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	this.slotType.isForwardDeclared();	  this.isForwardDeclared();    	non-compiled	[CE]  cannot  find  symbol  slotType	22	None	replace
1286	[BUG]  [BUGGY]  if(this.notReferencedTypes!=  null)  {  return  false;  }  [CE]  cannot  find  symbol  notReferencedTypes  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.notReferencedTypes!=  null)  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.notReferencedTypes!=  null)  {  return  false;  }	  if(this.forwardReferencedTypes!=    null)    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol  notReferencedTypes	9	None	replace
1287	[BUG]  [BUGGY]  if(this.validator  ==  null  ||  this.validator.isUnknownType())  {  return  false;  }  [CE]  cannot  find  symbol  [FE]                          AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.validator  ==  null  ||  this.validator.isUnknownType())  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.validator  ==  null  ||  this.validator.isUnknownType())  {  return  false;  }	  if(this.validator    ==    null)    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol	150	None	replace
1288	[BUG]  [BUGGY]  if(this.validator  ==  null  ||  this.validator!=  null)  {  return  false;  }  [CE]  missing  return  statement  [FE]                            AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.validator  ==  null  ||  this.validator!=  null)  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.validator  ==  null  ||  this.validator!=  null)  {  return  false;  }	  if(this.validator    ==    null)    {    return    false;    }    	non-compiled	[CE]  missing  return  statement	150	None	replace
1289	[BUG]  [BUGGY]  if(this.validator  ==  null  ||  this.validator.isInstanceType())  {  return  false;  }  [CE]  cannot  find  symbol  [FE]                              AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.validator  ==  null  ||  this.validator.isInstanceType())  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.validator  ==  null  ||  this.validator.isInstanceType())  {  return  false;  }	  if(this.validator    ==    null)    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol	150	None	replace
1290	[BUG]  [BUGGY]  if(this.isResolved())  {  return(this.validator!=  null);  }  else  {  this.isResolved()  &&  validator!=  null;  }  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.isResolved())  {  return(this.validator!=  null);  }  else  {  this.isResolved()  &&  validator!=  null;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.isResolved())  {  return(this.validator!=  null);  }  else  {  this.isResolved()  &&  validator!=  null;  }	  return(this.isResolved()    &&    this.validator!=    null);    this.isResolved()    &&    this.validator!=    null);    	non-compiled	[CE]  not  a  statement	24	None	replace
1291	[BUG]  [BUGGY]  if(this.isResolved()  ||  this.validator!=  null)  {  return(this.isResolved()  &&  this.validator!=  null);  }  [CE]  missing  return  statement  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.isResolved()  ||  this.validator!=  null)  {  return(this.isResolved()  &&  this.validator!=  null);  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.isResolved()  ||  this.validator!=  null)  {  return(this.isResolved()  &&  this.validator!=  null);  }	  return(this.isResolved()    &&    this.validator!=    null);    this.isResolved()    &&    this.validator!=    null);    	non-compiled	[CE]  missing  return  statement	24	None	replace
1292	[BUG]  [BUGGY]  if(this.isResolved())  {  return(this.validator!=  null);  }  [CE]  missing  return  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.isResolved())  {  return(this.validator!=  null);  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.isResolved())  {  return(this.validator!=  null);  }	  return(this.isResolved()    &&    this.validator!=    null);    this.isResolved()    &&    this.validator!=    null);    	non-compiled	[CE]  missing  return  statement	24	None	replace
1293	[BUG]  [BUGGY]  if(this.forType!=  null  ||  this.forType!=  null)  {  return  false;  }  [CE]  cannot  find  symbol  forType  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.forType!=  null  ||  this.forType!=  null)  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.forType!=  null  ||  this.forType!=  null)  {  return  false;  }	  if(this.forType!=    null)    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol  forType	10	None	replace
1294	[BUG]  [BUGGY]  if(this.forType!=  null  ||  this.slotType!=  null)  {  return  false;  }  [CE]  cannot  find  symbol  forType  [FE]                      AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.forType!=  null  ||  this.slotType!=  null)  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.forType!=  null  ||  this.slotType!=  null)  {  return  false;  }	  if(this.forType!=    null)    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol  forType	10	None	replace
1295	[BUG]  [BUGGY]  if(this.forAnnotations!=  validator)return  true;  }  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.forAnnotations!=  validator)return  true;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.forAnnotations!=  validator)return  true;  }	  if(this.forAnnotations!=    validator)    {    return    false;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	45	None	replace
1296	[BUG]  [BUGGY]  if(this.forAnnotations!=  forAnnotations)  {  forAnnotations  ignoreForwardReferencedTypes  =  this.ignoreForwardReferencedTypes;  if(ignoreForwardReferencedTypes  ==  null)  {  return  true;  }  }  [CE]  cannot  find  symbol  forAnnotations  [FE]                          AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.forAnnotations!=  forAnnotations)  {  forAnnotations  ignoreForwardReferencedTypes  =  this.ignoreForwardReferencedTypes;  if(ignoreForwardReferencedTypes  ==  null)  {  return  true;  }  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.forAnnotations!=  forAnnotations)  {  forAnnotations  ignoreForwardReferencedTypes  =  this.ignoreForwardReferencedTypes;  if(ignoreForwardReferencedTypes  ==  null)  {  return  true;  }  }	  return    false;    if(this.forAnnotations!=    forAnnotations)    {    forAnnotations    ignoreForwardReferencedTypes    =    this.ignoreForwardReferencedTypes;    if(ignoreForwardReferencedTypes    ==    null)    {    return    true;    }    	non-compiled	[CE]  cannot  find  symbol  forAnnotations	8	None	replace
1297	[BUG]  [BUGGY]  if(this.forAnnotations!=  forAnnotations)  {  forAnnotations  ignoredForwardReferencedTypes  =  this.ignoreForwardReferencedTypes;  if(ignoreForwardReferencedTypes  ==  null)  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.forAnnotations!=  forAnnotations)  {  forAnnotations  ignoredForwardReferencedTypes  =  this.ignoreForwardReferencedTypes;  if(ignoreForwardReferencedTypes  ==  null)  {  return  true;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.forAnnotations!=  forAnnotations)  {  forAnnotations  ignoredForwardReferencedTypes  =  this.ignoreForwardReferencedTypes;  if(ignoreForwardReferencedTypes  ==  null)  {  return  true;  }	  return    false;    if(this.forAnnotations!=    forAnnotations)    {    forAnnotations    ignoreForwardReferencedTypes    =    this.ignoreForwardReferencedTypes;    if(ignoreForwardReferencedTypes    ==    null)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
1298	[BUG]  [BUGGY]  if(this.isResolved())  {  return  false;  forAnnotations  =  this.ignoreForwardReferencedTypes;  if(ignoreForwardReferencedTypes  ==  null)  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.isResolved())  {  return  false;  forAnnotations  =  this.ignoreForwardReferencedTypes;  if(ignoreForwardReferencedTypes  ==  null)  {  return  true;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.isResolved())  {  return  false;  forAnnotations  =  this.ignoreForwardReferencedTypes;  if(ignoreForwardReferencedTypes  ==  null)  {  return  true;  }	  return    false;    if(this.forAnnotations!=    forAnnotations)    {    forAnnotations    ignoreForwardReferencedTypes    =    this.ignoreForwardReferencedTypes;    if(ignoreForwardReferencedTypes    ==    null)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
1299	[BUG]  [BUGGY]  if(isForwardDeclared())  {  Predicate  <  JSType>  validator  =  this.referencedType.getValidator();  if(validator!=  null)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                                      AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(isForwardDeclared())  {  Predicate  <  JSType>  validator  =  this.referencedType.getValidator();  if(validator!=  null)  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(isForwardDeclared())  {  Predicate  <  JSType>  validator  =  this.referencedType.getValidator();  if(validator!=  null)  {  return  false;  }	  if(this.isResolved())    {    Predicate    <    JSType>    validator    =    this.referencedType.getValidator();    if(validator!=    null)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
1300	[BUG]  [BUGGY]  if(isForwardDeclared)  {  Predicate  <  JSType>  validator  =  this.referencedType.getValidator();  if(validator!=  null)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                                        AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(isForwardDeclared)  {  Predicate  <  JSType>  validator  =  this.referencedType.getValidator();  if(validator!=  null)  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(isForwardDeclared)  {  Predicate  <  JSType>  validator  =  this.referencedType.getValidator();  if(validator!=  null)  {  return  false;  }	  if(this.isResolved())    {    Predicate    <    JSType>    validator    =    this.referencedType.getValidator();    if(validator!=    null)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
1301	[BUG]  [BUGGY]  if(this.referencedType  ==  null)  {  Predicate  <  JSType>  validator  =  this.referencedType.setValidator(validator);  if(validator!=  null)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                                    AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.referencedType  ==  null)  {  Predicate  <  JSType>  validator  =  this.referencedType.setValidator(validator);  if(validator!=  null)  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.referencedType  ==  null)  {  Predicate  <  JSType>  validator  =  this.referencedType.setValidator(validator);  if(validator!=  null)  {  return  false;  }	  if(this.isResolved())    {    Predicate    <    JSType>    validator    =    this.referencedType.setValidator(validator);    if(validator!=    null)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
1302	[BUG]  [BUGGY]  predicate  =  this.referencedType.setValidator(validator);  if(validator!=  null)  {  return  false;  }  [CE]  cannot  find  symbol  predicate  [FE]                                      AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  predicate  =  this.referencedType.setValidator(validator);  if(validator!=  null)  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	predicate  =  this.referencedType.setValidator(validator);  if(validator!=  null)  {  return  false;  }	  if(this.isResolved())    {    Predicate    <    JSType>    validator    =    this.referencedType.setValidator(validator);    if(validator!=    null)    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol  predicate	69	None	replace
1303	[BUG]  [BUGGY]  return  super.setValidator(this.validator);  if(this.isResolved())  {  return  super.setValidator(this.validator);  }  else  {  for(int  i  =  0;  i  <  this.isResolved();  ++i)  {  return  super.setValidator(this.validator);  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  return  super.setValidator(this.validator);  if(this.isResolved())  {  return  super.setValidator(this.validator);  }  else  {  for(int  i  =  0;  i  <  this.isResolved();  ++i)  {  return  super.setValidator(this.validator);  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	return    super.setValidator(this.validator);    if(this.isResolved())  {  return  super.setValidator(this.validator);  }  else  {  for(int  i  =  0;  i  <  this.isResolved();  ++i)  {  return  super.setValidator(this.validator);  }	  timeout    	non-compiled	[CE]  illegal  start  of  expression	94	None	add
1304	[BUG]  [BUGGY]  return  super.setValidator(this.validator);  if(this.isResolved())  {  return  super.setValidator(this.validator);  }  else  {  for(int  i  =  0;  i  <  propertyContinuations.size();  ++i)  {  Node  propertyNode  =  propertyNode.getFirstChild();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  return  super.setValidator(this.validator);  if(this.isResolved())  {  return  super.setValidator(this.validator);  }  else  {  for(int  i  =  0;  i  <  propertyContinuations.size();  ++i)  {  Node  propertyNode  =  propertyNode.getFirstChild();  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	return    super.setValidator(this.validator);    if(this.isResolved())  {  return  super.setValidator(this.validator);  }  else  {  for(int  i  =  0;  i  <  propertyContinuations.size();  ++i)  {  Node  propertyNode  =  propertyNode.getFirstChild();	  timeout    	non-compiled	[CE]  illegal  start  of  expression	94	None	add
1305	[BUG]  [BUGGY]  return  super.setValidator(this.validator);  if(this.isResolved())  {  return  super.setValidator(this.validator);  }  else  {  for(int  i  =  0;  i  <  propertyContinuations.size();  ++i)  {  this.propertyContinuations.add(propertyContinu  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  return  super.setValidator(this.validator);  if(this.isResolved())  {  return  super.setValidator(this.validator);  }  else  {  for(int  i  =  0;  i  <  propertyContinuations.size();  ++i)  {  this.propertyContinuations.add(propertyContinu  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	return    super.setValidator(this.validator);    if(this.isResolved())  {  return  super.setValidator(this.validator);  }  else  {  for(int  i  =  0;  i  <  propertyContinuations.size();  ++i)  {  this.propertyContinuations.add(propertyContinu	  timeout    	non-compiled	[CE]  ')'  expected	94	None	add
1306	[BUG]  [BUGGY]  return  super.setValidator(this.validator);  if(this.isResolved())  {  return  super.setValidator(this.validator);  }  else  {  for(int  i  =  0;  i  <  propertyContinuations.size();  ++i)  {  Predicate  <  JSType>  propertyNode  =  propertyNode.get  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  return  super.setValidator(this.validator);  if(this.isResolved())  {  return  super.setValidator(this.validator);  }  else  {  for(int  i  =  0;  i  <  propertyContinuations.size();  ++i)  {  Predicate  <  JSType>  propertyNode  =  propertyNode.get  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	return    super.setValidator(this.validator);    if(this.isResolved())  {  return  super.setValidator(this.validator);  }  else  {  for(int  i  =  0;  i  <  propertyContinuations.size();  ++i)  {  Predicate  <  JSType>  propertyNode  =  propertyNode.get	  timeout    	non-compiled	[CE]  ';'  expected	94	None	add
1307	[BUG]  [BUGGY]  return  super.setValidator(this.validator);  if(this.isResolved())  {  return  super.setValidator(this.validator);  }  else  {  for(int  i  =  0;  i  <  propertyContinuations.size();  ++i)  {  PropertyContinuation  <  NamedType>  propertyContinuations  =  propertyContinuations.get(i);  if  [CE]  '('  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  return  super.setValidator(this.validator);  if(this.isResolved())  {  return  super.setValidator(this.validator);  }  else  {  for(int  i  =  0;  i  <  propertyContinuations.size();  ++i)  {  PropertyContinuation  <  NamedType>  propertyContinuations  =  propertyContinuations.get(i);  if  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	return    super.setValidator(this.validator);    if(this.isResolved())  {  return  super.setValidator(this.validator);  }  else  {  for(int  i  =  0;  i  <  propertyContinuations.size();  ++i)  {  PropertyContinuation  <  NamedType>  propertyContinuations  =  propertyContinuations.get(i);  if	  timeout    	non-compiled	[CE]  '('  expected	94	None	add
1308	[BUG]  [BUGGY]  if(this.slotType!=  null  ||  this.value!=  null)return  false;  }  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.slotType!=  null  ||  this.value!=  null)return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.slotType!=  null  ||  this.value!=  null)return  false;  }	  if(this.slotType!=    null    ||    this.slotType!=    null)    {    return    false;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	147	None	replace
1309	[BUG]  [BUGGY]  Predicate  <?>  propertyNode  =  propertyNode.getPropertyName();  [CE]  cannot  find  symbol  [FE]                                AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  Predicate  <?>  propertyNode  =  propertyNode.getPropertyName();  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	Predicate  <?>  propertyNode  =  propertyNode.getPropertyName();	  Predicate    <?>    propertyNode    =    this.propertyContinuation.getProperty(propertyName);    	non-compiled	[CE]  cannot  find  symbol	135	None	replace
1310	[BUG]  [BUGGY]  Predicate  <?>  propertyNode  =  propertyContinuation.getProperty(name);  [CE]  cannot  find  symbol  name  [FE]                                  AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  Predicate  <?>  propertyNode  =  propertyContinuation.getProperty(name);  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	Predicate  <?>  propertyNode  =  propertyContinuation.getProperty(name);	  Predicate    <?>    propertyNode    =    this.propertyContinuation.getProperty(propertyName);    	non-compiled	[CE]  cannot  find  symbol  name	135	None	replace
1311	[BUG]  [BUGGY]  predicate  =  this.getPropertyNode(referenced);  if(propertyNode!=  null)  {  return  false;  }  [CE]  cannot  find  symbol  predicate  [FE]                                  AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  predicate  =  this.getPropertyNode(referenced);  if(propertyNode!=  null)  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	predicate  =  this.getPropertyNode(referenced);  if(propertyNode!=  null)  {  return  false;  }	  if(this.isResolved())    {    Predicate    <    JSType>    propertyNode    =    this.getPropertyNode(referenced);    if(propertyNode!=    null)    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol  predicate	112	None	replace
1312	[BUG]  [BUGGY]  if(isForwardDeclared)  {  forAnnotations  {  propertyNode  =  propertyNode.getFirstChild();  if(propertyNode!=  propertyNode)  {  return  false;  }  }  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(isForwardDeclared)  {  forAnnotations  {  propertyNode  =  propertyNode.getFirstChild();  if(propertyNode!=  propertyNode)  {  return  false;  }  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(isForwardDeclared)  {  forAnnotations  {  propertyNode  =  propertyNode.getFirstChild();  if(propertyNode!=  propertyNode)  {  return  false;  }  }	  return    false;    if(isForwardDeclared)    {    forAnnotations    {    propertyNode    =    propertyNode.getFirstChild();    if(propertyNode!=    propertyNode)    {    return    false;    }    	non-compiled	[CE]  not  a  statement	144	None	replace
1313	[BUG]  [BUGGY]  if(isForwardDeclared)  {  forAnnotations  {  propertyNode  =  propertyNode.getFirstChild();  if(propertyNode!=  propertyNode)  {  return  false;  }  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(isForwardDeclared)  {  forAnnotations  {  propertyNode  =  propertyNode.getFirstChild();  if(propertyNode!=  propertyNode)  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(isForwardDeclared)  {  forAnnotations  {  propertyNode  =  propertyNode.getFirstChild();  if(propertyNode!=  propertyNode)  {  return  false;  }	  return    false;    if(isForwardDeclared)    {    forAnnotations    {    propertyNode    =    propertyNode.getFirstChild();    if(propertyNode!=    propertyNode)    {    return    false;    }    	non-compiled	[CE]  not  a  statement	144	None	replace
1314	[BUG]  [BUGGY]  if(isForwardDeclared)  {  forAnnotations  {  propertyNode  =  propertyNode.getFirstChild();  if(propertyNode!=  propertyNode)  {  return  true;  }  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(isForwardDeclared)  {  forAnnotations  {  propertyNode  =  propertyNode.getFirstChild();  if(propertyNode!=  propertyNode)  {  return  true;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(isForwardDeclared)  {  forAnnotations  {  propertyNode  =  propertyNode.getFirstChild();  if(propertyNode!=  propertyNode)  {  return  true;  }	  return    false;    if(isForwardDeclared)    {    forAnnotations    {    propertyNode    =    propertyNode.getFirstChild();    if(propertyNode!=    propertyNode)    {    return    false;    }    	non-compiled	[CE]  not  a  statement	144	None	replace
1315	[BUG]  [BUGGY]  if(this.ignoreForwardReferencedTypes)  {  return  false;  forAnnotations  {  propertyNode  =  propertyNode.getFirstChild();  if(propertyNode!=  propertyNode)  {  return  false;  }  }  [CE]  not  a  statement  [FE]                            AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.ignoreForwardReferencedTypes)  {  return  false;  forAnnotations  {  propertyNode  =  propertyNode.getFirstChild();  if(propertyNode!=  propertyNode)  {  return  false;  }  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.ignoreForwardReferencedTypes)  {  return  false;  forAnnotations  {  propertyNode  =  propertyNode.getFirstChild();  if(propertyNode!=  propertyNode)  {  return  false;  }  }	  return    false;    if(isForwardDeclared)    {    forAnnotations    {    propertyNode    =    propertyNode.getFirstChild();    if(propertyNode!=    propertyNode)    {    return    false;    }    	non-compiled	[CE]  not  a  statement	144	None	replace
1316	[BUG]  [BUGGY]  if(isForwardDeclared)  {  forAnnotations  {  propertyNode  =  propertyNode.getFirstChild();  if(propertyNode!=  propertyNode)  {  return  true;  }  }  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(isForwardDeclared)  {  forAnnotations  {  propertyNode  =  propertyNode.getFirstChild();  if(propertyNode!=  propertyNode)  {  return  true;  }  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(isForwardDeclared)  {  forAnnotations  {  propertyNode  =  propertyNode.getFirstChild();  if(propertyNode!=  propertyNode)  {  return  true;  }  }	  return    false;    if(isForwardDeclared)    {    forAnnotations    {    propertyNode    =    propertyNode.getFirstChild();    if(propertyNode!=    propertyNode)    {    return    true;    }    	non-compiled	[CE]  not  a  statement	139	None	replace
1317	[BUG]  [BUGGY]  if(!this.isResolved())  {  return  false;  forAnnotations  {  propertyNode  =  propertyNode.getFirstChild();  if(propertyNode!=  propertyNode)  {  return  true;  }  }  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(!this.isResolved())  {  return  false;  forAnnotations  {  propertyNode  =  propertyNode.getFirstChild();  if(propertyNode!=  propertyNode)  {  return  true;  }  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(!this.isResolved())  {  return  false;  forAnnotations  {  propertyNode  =  propertyNode.getFirstChild();  if(propertyNode!=  propertyNode)  {  return  true;  }  }	  return    false;    if(isForwardDeclared)    {    forAnnotations    {    propertyNode    =    propertyNode.getFirstChild();    if(propertyNode!=    propertyNode)    {    return    true;    }    	non-compiled	[CE]  not  a  statement	139	None	replace
1318	[BUG]  [BUGGY]  if(this.isValidator())return  false;  }  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.isValidator())return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.isValidator())return  false;  }	  if(this.isValidator())    {    return    false;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	82	None	replace
1319	[BUG]  [BUGGY]  this.isForwardDeclared()  &&  isForwardReferencedTypes(validator))  {  return  false;  }  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  this.isForwardDeclared()  &&  isForwardReferencedTypes(validator))  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	this.isForwardDeclared()  &&  isForwardReferencedTypes(validator))  {  return  false;  }	  this.isForwardDeclared())    {    return    true;    }    	non-compiled	[CE]  not  a  statement	74	None	replace
1320	[BUG]  [BUGGY]  this.isForwardDeclared()  &&  isForwardDeclared;  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  this.isForwardDeclared()  &&  isForwardDeclared;  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	this.isForwardDeclared()  &&  isForwardDeclared;	  this.isForwardDeclared())    {    return    true;    }    	non-compiled	[CE]  not  a  statement	74	None	replace
1321	[BUG]  [BUGGY]  Predicate  <?>  propertyNode  =  propertyContinuations.get(name);  [CE]  cannot  find  symbol  name  [FE]                              AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  Predicate  <?>  propertyNode  =  propertyContinuations.get(name);  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	Predicate  <?>  propertyNode  =  propertyContinuations.get(name);	  Predicate    <?>    propertyNode    =    this.propertyContinuations.get(propertyName);    	non-compiled	[CE]  cannot  find  symbol  name	134	None	replace
1322	[BUG]  [BUGGY]  Predicate  <?>  propertyNode  =  propertyContinuations.get(this.propertyName);  [CE]  cannot  find  symbol  propertyName  [FE]                                AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  Predicate  <?>  propertyNode  =  propertyContinuations.get(this.propertyName);  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	Predicate  <?>  propertyNode  =  propertyContinuations.get(this.propertyName);	  Predicate    <?>    propertyNode    =    this.propertyContinuations.get(propertyName);    	non-compiled	[CE]  cannot  find  symbol  propertyName	134	None	replace
1323	[BUG]  [BUGGY]  Predicate  <?>  propertyNode  =  properties.get(propertyName);  [CE]  cannot  find  symbol  propertyName  [FE]                                  AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  Predicate  <?>  propertyNode  =  properties.get(propertyName);  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	Predicate  <?>  propertyNode  =  properties.get(propertyName);	  Predicate    <?>    propertyNode    =    this.propertyContinuations.get(propertyName);    	non-compiled	[CE]  cannot  find  symbol  propertyName	134	None	replace
1324	[BUG]  [BUGGY]  Predicate  <  JSType>  referencedType  =  validator.referencedType();  if(referencedType!=  null)  {  return  referencedType.setValidator(validator);  }  [CE]  cannot  find  symbol  [FE]                            AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  Predicate  <  JSType>  referencedType  =  validator.referencedType();  if(referencedType!=  null)  {  return  referencedType.setValidator(validator);  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	Predicate  <  JSType>  referencedType  =  validator.referencedType();  if(referencedType!=  null)  {  return  referencedType.setValidator(validator);  }	  if(this.isResolved())    {    Predicate    <    JSType>    referencedType    =    validator.getReferencedType();    if(referencedType!=    null)    {    return    referencedType.setValidator(validator);    }    	non-compiled	[CE]  cannot  find  symbol	65	None	replace
1325	[BUG]  [BUGGY]  if(!this.slotType.isForwardDeclared())  {  return  false;  }  [CE]  cannot  find  symbol  slotType  [FE]                          AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(!this.slotType.isForwardDeclared())  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(!this.slotType.isForwardDeclared())  {  return  false;  }	  if(!this.isForwardDeclared())    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol  slotType	16	None	replace
1326	[BUG]  [BUGGY]  if(!this.isForwardDeclared())return  true;  }  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(!this.isForwardDeclared())return  true;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(!this.isForwardDeclared())return  true;  }	  if(!this.isForwardDeclared())    {    return    false;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	16	None	replace
1327	[BUG]  [BUGGY]  if(this.isResolved())  {  this.validator  =  super.setValidator(validator);  }  else  {  this.validator  =  validator;  }  [CE]  incompatible  types  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.isResolved())  {  this.validator  =  super.setValidator(validator);  }  else  {  this.validator  =  validator;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.isResolved())  {  this.validator  =  super.setValidator(validator);  }  else  {  this.validator  =  validator;  }	  if(this.validator!=    null)    {    return    super.setValidator(validator);    }    else    {    this.validator    =    validator;    }    	non-compiled	[CE]  incompatible  types	41	None	replace
1328	[BUG]  [BUGGY]  if(this.referencedTypes!=  null)  {  return  super.setValidator(validator);  }  else  {  Predicate  <  JSType>  property  =  this.referencedTypes.get(reference);  if(property.isResolved())  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.referencedTypes!=  null)  {  return  super.setValidator(validator);  }  else  {  Predicate  <  JSType>  property  =  this.referencedTypes.get(reference);  if(property.isResolved())  {  return  true;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.referencedTypes!=  null)  {  return  super.setValidator(validator);  }  else  {  Predicate  <  JSType>  property  =  this.referencedTypes.get(reference);  if(property.isResolved())  {  return  true;  }	  if(this.validator!=    null)    {    return    super.setValidator(validator);    }    else    {    Predicate    <    JSType>    property    =    this.referencedTypes.get(reference);    if(property.isResolved())    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	97	None	replace
1329	[BUG]  [BUGGY]  if(this.referencedTypes!=  null)  {  return  super.setValidator(validator);  }  else  {  Predicate  <  JSType>  property  =  this.referencedTypes.get(reference);  if(property.isResolved())  {  return  true  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.referencedTypes!=  null)  {  return  super.setValidator(validator);  }  else  {  Predicate  <  JSType>  property  =  this.referencedTypes.get(reference);  if(property.isResolved())  {  return  true  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.referencedTypes!=  null)  {  return  super.setValidator(validator);  }  else  {  Predicate  <  JSType>  property  =  this.referencedTypes.get(reference);  if(property.isResolved())  {  return  true	  if(this.validator!=    null)    {    return    super.setValidator(validator);    }    else    {    Predicate    <    JSType>    property    =    this.referencedTypes.get(reference);    if(property.isResolved())    {    return    true;    }    	non-compiled	[CE]  ';'  expected	97	None	replace
1330	[BUG]  [BUGGY]  if(this.referencedTypes!=  null)  {  if(super.setValidator(validator);  }  else  {  Predicate  <  JSType>  property  =  this.referencedTypes.get(reference);  if(property.isResolved())  {  return  true  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.referencedTypes!=  null)  {  if(super.setValidator(validator);  }  else  {  Predicate  <  JSType>  property  =  this.referencedTypes.get(reference);  if(property.isResolved())  {  return  true  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.referencedTypes!=  null)  {  if(super.setValidator(validator);  }  else  {  Predicate  <  JSType>  property  =  this.referencedTypes.get(reference);  if(property.isResolved())  {  return  true	  if(this.validator!=    null)    {    return    super.setValidator(validator);    }    else    {    Predicate    <    JSType>    property    =    this.referencedTypes.get(reference);    if(property.isResolved())    {    return    true;    }    	non-compiled	[CE]  ')'  expected	97	None	replace
1331	[BUG]  [BUGGY]  if(!this.validator.isResolved()  ||  validator.isUnknownType())  {  return  false;  }  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(!this.validator.isResolved()  ||  validator.isUnknownType())  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(!this.validator.isResolved()  ||  validator.isUnknownType())  {  return  false;  }	  if(!this.validator.isResolved())    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol	115	None	replace
1332	[BUG]  [BUGGY]  if(!this.validator.isResolved()  ||  validator.isInstanceType())  {  return  false;  }  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(!this.validator.isResolved()  ||  validator.isInstanceType())  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(!this.validator.isResolved()  ||  validator.isInstanceType())  {  return  false;  }	  if(!this.validator.isResolved())    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol	115	None	replace
1333	[BUG]  [BUGGY]  if(this.isResolved()  ||  this.resolved  ==  false)  {  return  super.setValidator(validator);  }  else  {  this.resolved  =  true;  }  [CE]  resolved  has  private  access  in  JSType  [FE]                        AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.isResolved()  ||  this.resolved  ==  false)  {  return  super.setValidator(validator);  }  else  {  this.resolved  =  true;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.isResolved()  ||  this.resolved  ==  false)  {  return  super.setValidator(validator);  }  else  {  this.resolved  =  true;  }	  if(this.isResolved())    {    return    super.setValidator(validator);    }    else    {    this.resolved    =    true;    }    	non-compiled	[CE]  resolved  has  private  access  in  JSType	43	None	replace
1334	[BUG]  [BUGGY]  if(!this.value)  {  return  true;  }  [CE]  cannot  find  symbol  value  [FE]                      AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(!this.value)  {  return  true;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(!this.value)  {  return  true;  }	  if(!this.isValidator)    {    return    true;    }    	non-compiled	[CE]  cannot  find  symbol  value	117	None	replace
1335	[BUG]  [BUGGY]  if(!isValidator)  {  return  true;  }  [CE]  cannot  find  symbol  isValidator  [FE]                        AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(!isValidator)  {  return  true;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(!isValidator)  {  return  true;  }	  if(!this.isValidator)    {    return    true;    }    	non-compiled	[CE]  cannot  find  symbol  isValidator	117	None	replace
1336	[BUG]  [BUGGY]  if(!this.referenced)  {  return  true;  }  [CE]  cannot  find  symbol  referenced  [FE]                          AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(!this.referenced)  {  return  true;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(!this.referenced)  {  return  true;  }	  if(!this.isValidator)    {    return    true;    }    	non-compiled	[CE]  cannot  find  symbol  referenced	117	None	replace
1337	[BUG]  [BUGGY]  if(this.isForwardDeclared())  {  return  false;  }  else  {  Predicate  <  JSType>  propertyNode  =  this.referencedTypes.get(reference);  if(propertyNode!=  null)  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.isForwardDeclared())  {  return  false;  }  else  {  Predicate  <  JSType>  propertyNode  =  this.referencedTypes.get(reference);  if(propertyNode!=  null)  {  return  true;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.isForwardDeclared())  {  return  false;  }  else  {  Predicate  <  JSType>  propertyNode  =  this.referencedTypes.get(reference);  if(propertyNode!=  null)  {  return  true;  }	  if(this.isResolved())    {    return    false;    }    else    {    Predicate    <    JSType>    propertyNode    =    this.referencedTypes.get(reference);    if(propertyNode!=    null)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	99	None	replace
1338	[BUG]  [BUGGY]  if(this.referencedTypes  ==  null)  {  if(this.isResolved())  {  return  false;  }  else  {  Predicate  <  JSType>  propertyNode  =  this.referencedTypes.get(reference);  if(propertyNode!=  null)  {  return  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.referencedTypes  ==  null)  {  if(this.isResolved())  {  return  false;  }  else  {  Predicate  <  JSType>  propertyNode  =  this.referencedTypes.get(reference);  if(propertyNode!=  null)  {  return  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.referencedTypes  ==  null)  {  if(this.isResolved())  {  return  false;  }  else  {  Predicate  <  JSType>  propertyNode  =  this.referencedTypes.get(reference);  if(propertyNode!=  null)  {  return	  if(this.isResolved())    {    return    false;    }    else    {    Predicate    <    JSType>    propertyNode    =    this.referencedTypes.get(reference);    if(propertyNode!=    null)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	99	None	replace
1339	[BUG]  [BUGGY]  if(this.forAnonymousTypes!=  null  ||  this.forAnonymousTypes!=  null)  {  return  false;  }  [CE]  cannot  find  symbol  forAnonymousTypes  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.forAnonymousTypes!=  null  ||  this.forAnonymousTypes!=  null)  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.forAnonymousTypes!=  null  ||  this.forAnonymousTypes!=  null)  {  return  false;  }	  if(this.forAnonymousTypes!=    null)    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol  forAnonymousTypes	73	None	replace
1340	[BUG]  [BUGGY]  if(this.forAnonymousTypes!=  null  ||  this.forAnnotations!=  null)  {  return  false;  }  [CE]  cannot  find  symbol  forAnonymousTypes  [FE]                      AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  if(this.forAnonymousTypes!=  null  ||  this.forAnnotations!=  null)  {  return  false;  }  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.forAnonymousTypes!=  null  ||  this.forAnnotations!=  null)  {  return  false;  }	  if(this.forAnonymousTypes!=    null)    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol  forAnonymousTypes	73	None	replace
1341	[BUG]  [BUGGY]  return(validator.isResolved()  &&  this.isForwardDeclared);  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  return(validator.isResolved()  &&  this.isForwardDeclared);  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	return(validator.isResolved()  &&  this.isForwardDeclared);	  return(this.isResolved()    &&    validator    ==    null);    timeout    	non-compiled	[CE]  cannot  find  symbol	62	None	replace
1342	[BUG]  [BUGGY]  return(this.isValidator()  ||  validator  ==  null);  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]      public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;      [BUGGY]  return(this.isValidator()  ||  validator  ==  null);  [BUGGY]      }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	return(this.isValidator()  ||  validator  ==  null);	  return(this.isResolved()    &&    validator    ==    null);    timeout    	non-compiled	[CE]  cannot  find  symbol	62	None	replace
