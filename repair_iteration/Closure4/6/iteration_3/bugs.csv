bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  super.resolveInternal(t,  enclosing,  parentNode);  [CE]  cannot  find  symbol  parentNode  [FE]                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  enclosing,  parentNode);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  enclosing,  parentNode);	  super.resolveInternal(t,    enclosing,    properties);    	non-compiled	[CE]  cannot  find  symbol  parentNode	21	None	replace
2	[BUG]  [BUGGY]  Predicates.checkNotNull(registry,  resolved);  [CE]  cannot  find  symbol  Predicates  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  Predicates.checkNotNull(registry,  resolved);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	Predicates.checkNotNull(registry,  resolved);	          Predicates.checkNotNull(registry);    	non-compiled	[CE]  cannot  find  symbol  Predicates	100	None	replace
3	[BUG]  [BUGGY]  Predicates.checkState(registry.isLastGeneration());  [CE]  cannot  find  symbol  Predicates  [FE]                            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  Predicates.checkState(registry.isLastGeneration());  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	Predicates.checkState(registry.isLastGeneration());	          Predicates.checkNotNull(registry);    	non-compiled	[CE]  cannot  find  symbol  Predicates	100	None	replace
4	[BUG]  [BUGGY]  Predicates.checkArgument(registry.isLastGeneration());  [CE]  cannot  find  symbol  Predicates  [FE]                              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  Predicates.checkArgument(registry.isLastGeneration());  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	Predicates.checkArgument(registry.isLastGeneration());	          Predicates.checkNotNull(registry);    	non-compiled	[CE]  cannot  find  symbol  Predicates	100	None	replace
5	[BUG]  [BUGGY]  Predicates.checkState(registry!=  null);  [CE]  cannot  find  symbol  Predicates  [FE]                                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  Predicates.checkState(registry!=  null);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	Predicates.checkState(registry!=  null);	          Predicates.checkNotNull(registry);    	non-compiled	[CE]  cannot  find  symbol  Predicates	100	None	replace
6	[BUG]  [BUGGY]  super.resolveType(t,  enclosing,  props);  [CE]  cannot  find  symbol  props  [FE]                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveType(t,  enclosing,  props);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveType(t,  enclosing,  props);	  super.resolveType(t,    enclosing,    properties);    	non-compiled	[CE]  cannot  find  symbol  props	88	None	replace
7	[BUG]  [BUGGY]  super.resolveType(t,  enclosing,  propertyContinuations);  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveType(t,  enclosing,  propertyContinuations);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveType(t,  enclosing,  propertyContinuations);	  super.resolveType(t,    enclosing,    properties);    	non-compiled	[CE]  cannot  find  symbol	88	None	replace
8	[BUG]  [BUGGY]  Super.resolveInternal(t,  enclosing,  type);  [CE]  cannot  find  symbol  type  [FE]                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  Super.resolveInternal(t,  enclosing,  type);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	Super.resolveInternal(t,  enclosing,  type);	  super.resolveInternal(t,    enclosing,    propType);    	non-compiled	[CE]  cannot  find  symbol  type	11	None	replace
9	[BUG]  [BUGGY]  super.resolveInternal(t,  enclosing,  false,  resolved);  [CE]  no  suitable  method  found  for  resolveInternal(ErrorReporter,StaticScope<JSType>,boolean,boolean)  [FE]                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  enclosing,  false,  resolved);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  enclosing,  false,  resolved);	  super.resolveInternal(t,    enclosing,    false,    forAnnotations);    	non-compiled	[CE]  no  suitable  method  found  for  resolveInternal(ErrorReporter,StaticScope<JSType>,boolean,boolean)	3	None	replace
10	[BUG]  [BUGGY]  super.resolveInternal(t,  enclosing,  true,  forAnnotations);  [CE]  cannot  find  symbol  forAnnotations  [FE]                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  enclosing,  true,  forAnnotations);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  enclosing,  true,  forAnnotations);	  super.resolveInternal(t,    enclosing,    false,    forAnnotations);    	non-compiled	[CE]  cannot  find  symbol  forAnnotations	3	None	replace
11	[BUG]  [BUGGY]  super.resolveInternal(t,  enclosing,  false,  properties);  [CE]  cannot  find  symbol  properties  [FE]                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  enclosing,  false,  properties);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  enclosing,  false,  properties);	  super.resolveInternal(t,    enclosing,    false,    forAnnotations);    	non-compiled	[CE]  cannot  find  symbol  properties	3	None	replace
12	[BUG]  [BUGGY]  super.resolveInternal(t,  enclosing,  false,  propertyContinuations);  [CE]  no  suitable  method  found  for  resolveInternal(ErrorReporter,StaticScope<JSType>,boolean,List<PropertyContinuation>)  [FE]                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  enclosing,  false,  propertyContinuations);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  enclosing,  false,  propertyContinuations);	  super.resolveInternal(t,    enclosing,    false,    forAnnotations);    	non-compiled	[CE]  no  suitable  method  found  for  resolveInternal(ErrorReporter,StaticScope<JSType>,boolean,List<PropertyContinuation>)	3	None	replace
13	[BUG]  [BUGGY]  super.resolveInternal(t,  enclosing,  false,  types);  [CE]  cannot  find  symbol  types  [FE]                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  enclosing,  false,  types);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  enclosing,  false,  types);	  super.resolveInternal(t,    enclosing,    false,    forAnnotations);    	non-compiled	[CE]  cannot  find  symbol  types	3	None	replace
14	[BUG]  [BUGGY]  super.resolveInternal(t,  enclosing,  propertyType,  getPropertyType());  [CE]  cannot  find  symbol  propertyType  [FE]                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  enclosing,  propertyType,  getPropertyType());  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  enclosing,  propertyType,  getPropertyType());	  super.resolveInternal(t,    enclosing,    propertyNode,    getPropertyType());    	non-compiled	[CE]  cannot  find  symbol  propertyType	47	None	replace
15	[BUG]  [BUGGY]  super.resolveInternal(t,  enclosing,  registry,  getPropertyType());  [CE]  method  getPropertyType  in  class  ObjectType  cannot  be  applied  to  given  types;  [FE]                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  enclosing,  registry,  getPropertyType());  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  enclosing,  registry,  getPropertyType());	  super.resolveInternal(t,    enclosing,    propertyNode,    getPropertyType());    	non-compiled	[CE]  method  getPropertyType  in  class  ObjectType  cannot  be  applied  to  given  types;	47	None	replace
16	[BUG]  [BUGGY]  super.resolveInternal(t,  enclosing,  propertyName,  getPropertyType());  [CE]  cannot  find  symbol  propertyName  [FE]                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  enclosing,  propertyName,  getPropertyType());  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  enclosing,  propertyName,  getPropertyType());	  super.resolveInternal(t,    enclosing,    propertyNode,    getPropertyType());    	non-compiled	[CE]  cannot  find  symbol  propertyName	47	None	replace
17	[BUG]  [BUGGY]  super.resolveInternal(t,  enclosing,  getReferencedType(),  resolved);  [CE]  no  suitable  method  found  for  resolveInternal(ErrorReporter,StaticScope<JSType>,JSType,boolean)  [FE]                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  enclosing,  getReferencedType(),  resolved);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  enclosing,  getReferencedType(),  resolved);	  super.resolveInternal(t,    enclosing,    getReferencedType(),    type);    	non-compiled	[CE]  no  suitable  method  found  for  resolveInternal(ErrorReporter,StaticScope<JSType>,JSType,boolean)	57	None	replace
18	[BUG]  [BUGGY]  super.resolveInternal(t,  enclosing,  getReferencedType(),  handleTypeCycle);  [CE]  cannot  find  symbol  handleTypeCycle  [FE]                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  enclosing,  getReferencedType(),  handleTypeCycle);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  enclosing,  getReferencedType(),  handleTypeCycle);	  super.resolveInternal(t,    enclosing,    getReferencedType(),    type);    	non-compiled	[CE]  cannot  find  symbol  handleTypeCycle	57	None	replace
19	[BUG]  [BUGGY]  super.resolveInternal(t,  enclosing,  getReferencedType(),  forAnnotations);  [CE]  cannot  find  symbol  forAnnotations  [FE]                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  enclosing,  getReferencedType(),  forAnnotations);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  enclosing,  getReferencedType(),  forAnnotations);	  super.resolveInternal(t,    enclosing,    getReferencedType(),    type);    	non-compiled	[CE]  cannot  find  symbol  forAnnotations	57	None	replace
20	[BUG]  [BUGGY]  super.resolveInternal(t,  enclosing,  getReferencedType(),  this);  [CE]  no  suitable  method  found  for  resolveInternal(ErrorReporter,StaticScope<JSType>,JSType,NamedType)  [FE]                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  enclosing,  getReferencedType(),  this);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  enclosing,  getReferencedType(),  this);	  super.resolveInternal(t,    enclosing,    getReferencedType(),    type);    	non-compiled	[CE]  no  suitable  method  found  for  resolveInternal(ErrorReporter,StaticScope<JSType>,JSType,NamedType)	57	None	replace
21	[BUG]  [BUGGY]  super.resolveInternal(t,  enclosing,  getReferencedType(),  reference);  [CE]  no  suitable  method  found  for  resolveInternal(ErrorReporter,StaticScope<JSType>,JSType,String)  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  enclosing,  getReferencedType(),  reference);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  enclosing,  getReferencedType(),  reference);	  super.resolveInternal(t,    enclosing,    getReferencedType(),    type);    	non-compiled	[CE]  no  suitable  method  found  for  resolveInternal(ErrorReporter,StaticScope<JSType>,JSType,String)	57	None	replace
22	[BUG]  [BUGGY]  super.resolveInternal(t,  enclosing,  sourceName,  getPropertyName());  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  enclosing,  sourceName,  getPropertyName());  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  enclosing,  sourceName,  getPropertyName());	  super.resolveInternal(t,    enclosing,    type,    getPropertyName());    	non-compiled	[CE]  cannot  find  symbol	55	None	replace
23	[BUG]  [BUGGY]  super.resolveInternal(t,  enclosing,  DEFAULT_TYPE,  getPropertyName());  [CE]  cannot  find  symbol  DEFAULT_TYPE  [FE]                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  enclosing,  DEFAULT_TYPE,  getPropertyName());  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  enclosing,  DEFAULT_TYPE,  getPropertyName());	  super.resolveInternal(t,    enclosing,    type,    getPropertyName());    	non-compiled	[CE]  cannot  find  symbol  DEFAULT_TYPE	55	None	replace
24	[BUG]  [BUGGY]  super.resolveInternal(t,  enclosing,  PROPERTY,  getPropertyName());  [CE]  cannot  find  symbol  PROPERTY  [FE]                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  enclosing,  PROPERTY,  getPropertyName());  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  enclosing,  PROPERTY,  getPropertyName());	  super.resolveInternal(t,    enclosing,    type,    getPropertyName());    	non-compiled	[CE]  cannot  find  symbol  PROPERTY	55	None	replace
25	[BUG]  [BUGGY]  super.resolvePropertyInternal(t,  resolved);  [CE]  cannot  find  symbol  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolvePropertyInternal(t,  resolved);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolvePropertyInternal(t,  resolved);	  super.resolvePropertyInternal(t,    type);    	non-compiled	[CE]  cannot  find  symbol	44	None	replace
26	[BUG]  [BUGGY]  super.resolvePropertyInternal(t,  handleTypeCycle);  [CE]  cannot  find  symbol  handleTypeCycle  [FE]                            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolvePropertyInternal(t,  handleTypeCycle);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolvePropertyInternal(t,  handleTypeCycle);	  super.resolvePropertyInternal(t,    type);    	non-compiled	[CE]  cannot  find  symbol  handleTypeCycle	44	None	replace
27	[BUG]  [BUGGY]  super.resolvePropertyInternal(t,  ref);  [CE]  cannot  find  symbol  ref  [FE]                              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolvePropertyInternal(t,  ref);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolvePropertyInternal(t,  ref);	  super.resolvePropertyInternal(t,    type);    	non-compiled	[CE]  cannot  find  symbol  ref	44	None	replace
28	[BUG]  [BUGGY]  super.resolvePropertyInternal(t,  propType);  [CE]  cannot  find  symbol  propType  [FE]                                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolvePropertyInternal(t,  propType);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolvePropertyInternal(t,  propType);	  super.resolvePropertyInternal(t,    type);    	non-compiled	[CE]  cannot  find  symbol  propType	44	None	replace
29	[BUG]  [BUGGY]  super.resolveInternal(t,  enclosing,  getType(),  getReferencedType());  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  enclosing,  getType(),  getReferencedType());  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  enclosing,  getType(),  getReferencedType());	  super.resolveInternal(t,    enclosing,    getType(),    getPropertyType());    	non-compiled	[CE]  cannot  find  symbol	92	None	replace
30	[BUG]  [BUGGY]  super.resolveInternal(t,  enclosing,  getType(),  getPropertyType(),  type);  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  enclosing,  getType(),  getPropertyType(),  type);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  enclosing,  getType(),  getPropertyType(),  type);	  super.resolveInternal(t,    enclosing,    getType(),    getPropertyType());    	non-compiled	[CE]  cannot  find  symbol	92	None	replace
31	[BUG]  [BUGGY]  super.resolveInternal(t,  enclosing,  getReferencedType(),  getPropertyType());  [CE]  method  getPropertyType  in  class  ObjectType  cannot  be  applied  to  given  types;  [FE]                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  enclosing,  getReferencedType(),  getPropertyType());  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  enclosing,  getReferencedType(),  getPropertyType());	  super.resolveInternal(t,    enclosing,    getType(),    getPropertyType());    	non-compiled	[CE]  method  getPropertyType  in  class  ObjectType  cannot  be  applied  to  given  types;	92	None	replace
32	[BUG]  [BUGGY]  super.resolveInternal(t,  type,  getType(),  getPropertyType());  [CE]  cannot  find  symbol  type  [FE]                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  type,  getType(),  getPropertyType());  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  type,  getType(),  getPropertyType());	  super.resolveInternal(t,    enclosing,    getType(),    getPropertyType());    	non-compiled	[CE]  cannot  find  symbol  type	92	None	replace
33	[BUG]  [BUGGY]  super.resolveInternal(t,  enclosing,  getType(),  type,  getPropertyType());  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  enclosing,  getType(),  type,  getPropertyType());  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  enclosing,  getType(),  type,  getPropertyType());	  super.resolveInternal(t,    enclosing,    getType(),    getPropertyType());    	non-compiled	[CE]  cannot  find  symbol	92	None	replace
34	[BUG]  [BUGGY]  super.resolveInternal(t,  enclosing,  getType(),  getReferencedPropertyType());  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  enclosing,  getType(),  getReferencedPropertyType());  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  enclosing,  getType(),  getReferencedPropertyType());	  super.resolveInternal(t,    enclosing,    getType(),    getPropertyType());    	non-compiled	[CE]  cannot  find  symbol	92	None	replace
35	[BUG]  [BUGGY]  super.resolveInternal(t,  enclosing,  getPropertyType(),  getType());  [CE]  method  getPropertyType  in  class  ObjectType  cannot  be  applied  to  given  types;  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  enclosing,  getPropertyType(),  getType());  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  enclosing,  getPropertyType(),  getType());	  super.resolveInternal(t,    enclosing,    getType(),    getPropertyType());    	non-compiled	[CE]  method  getPropertyType  in  class  ObjectType  cannot  be  applied  to  given  types;	92	None	replace
36	[BUG]  [BUGGY]  super.resolveInternal(t,  enclosing,  propertyContinuations,  forAnnotations);  [CE]  cannot  find  symbol  forAnnotations  [FE]                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  enclosing,  propertyContinuations,  forAnnotations);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  enclosing,  propertyContinuations,  forAnnotations);	  super.resolveInternal(t,    enclosing,    propertyContinuations);    	non-compiled	[CE]  cannot  find  symbol  forAnnotations	20	None	replace
37	[BUG]  [BUGGY]  super.resolveInternal(t,  enclosing,  propertyContinuations,  type);  [CE]  cannot  find  symbol  type  [FE]                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  enclosing,  propertyContinuations,  type);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  enclosing,  propertyContinuations,  type);	  super.resolveInternal(t,    enclosing,    propertyContinuations);    	non-compiled	[CE]  cannot  find  symbol  type	20	None	replace
38	[BUG]  [BUGGY]  super.resolveInternal(t,  enclosing,  type,  propertyContinuations);  [CE]  cannot  find  symbol  type  [FE]                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  enclosing,  type,  propertyContinuations);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  enclosing,  type,  propertyContinuations);	  super.resolveInternal(t,    enclosing,    propertyContinuations);    	non-compiled	[CE]  cannot  find  symbol  type	20	None	replace
39	[BUG]  [BUGGY]  super.resolveInternal(t,  enclosing,  propertyContinuations,  registry);  [CE]  no  suitable  method  found  for  resolveInternal(ErrorReporter,StaticScope<JSType>,List<PropertyContinuation>,JSTypeRegistry)  [FE]                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  enclosing,  propertyContinuations,  registry);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  enclosing,  propertyContinuations,  registry);	  super.resolveInternal(t,    enclosing,    propertyContinuations);    	non-compiled	[CE]  no  suitable  method  found  for  resolveInternal(ErrorReporter,StaticScope<JSType>,List<PropertyContinuation>,JSTypeRegistry)	20	None	replace
40	[BUG]  [BUGGY]  super.resolveInternal(t,  propertyNode,  enclosing,  propertyContinuations);  [CE]  cannot  find  symbol  propertyNode  [FE]                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  propertyNode,  enclosing,  propertyContinuations);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  propertyNode,  enclosing,  propertyContinuations);	  super.resolveInternal(t,    enclosing,    propertyContinuations);    	non-compiled	[CE]  cannot  find  symbol  propertyNode	20	None	replace
41	[BUG]  [BUGGY]  super.resolveInternal(t,  enclosing,  propertyContinuations,  documentationNode);  [CE]  cannot  find  symbol  documentationNode  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  enclosing,  propertyContinuations,  documentationNode);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  enclosing,  propertyContinuations,  documentationNode);	  super.resolveInternal(t,    enclosing,    propertyContinuations);    	non-compiled	[CE]  cannot  find  symbol  documentationNode	20	None	replace
42	[BUG]  [BUGGY]  super.resolveInternal(t,  propertyContinuations,  enclosing);  [CE]  no  suitable  method  found  for  resolveInternal(ErrorReporter,List<PropertyContinuation>,StaticScope<JSType>)  [FE]                            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  propertyContinuations,  enclosing);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  propertyContinuations,  enclosing);	  super.resolveInternal(t,    enclosing,    propertyContinuations);    	non-compiled	[CE]  no  suitable  method  found  for  resolveInternal(ErrorReporter,List<PropertyContinuation>,StaticScope<JSType>)	20	None	replace
43	[BUG]  [BUGGY]  Predicate  validator  =  registry.getValue();  [CE]  cannot  find  symbol  [FE]                                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  Predicate  validator  =  registry.getValue();  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	Predicate  validator  =  registry.getValue();	  Predicate    validator    =    t.getValue();    	non-compiled	[CE]  cannot  find  symbol	97	None	replace
44	[BUG]  [BUGGY]  Predicate  validator  =  registry.getValue(t.getValue());  [CE]  cannot  find  symbol  [FE]                                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  Predicate  validator  =  registry.getValue(t.getValue());  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	Predicate  validator  =  registry.getValue(t.getValue());	  Predicate    validator    =    t.getValue();    	non-compiled	[CE]  cannot  find  symbol	97	None	replace
45	[BUG]  [BUGGY]  Predicate  validator  =  t,  registry.getValue();  [CE]  ';'  expected  [FE]                                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  Predicate  validator  =  t,  registry.getValue();  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	Predicate  validator  =  t,  registry.getValue();	  Predicate    validator    =    t.getValue();    	non-compiled	[CE]  ';'  expected	97	None	replace
46	[BUG]  [BUGGY]  Predicate  validator  =  propertyNode.getValue();  [CE]  cannot  find  symbol  propertyNode  [FE]                                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  Predicate  validator  =  propertyNode.getValue();  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	Predicate  validator  =  propertyNode.getValue();	  Predicate    validator    =    t.getValue();    	non-compiled	[CE]  cannot  find  symbol  propertyNode	97	None	replace
47	[BUG]  [BUGGY]  Predicate  validator  =  type.getValue();  [CE]  cannot  find  symbol  type  [FE]                                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  Predicate  validator  =  type.getValue();  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	Predicate  validator  =  type.getValue();	  Predicate    validator    =    t.getValue();    	non-compiled	[CE]  cannot  find  symbol  type	97	None	replace
48	[BUG]  [BUGGY]  Predicate  validator  =  status.getValue();  [CE]  cannot  find  symbol  status  [FE]                                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  Predicate  validator  =  status.getValue();  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	Predicate  validator  =  status.getValue();	  Predicate    validator    =    t.getValue();    	non-compiled	[CE]  cannot  find  symbol  status	97	None	replace
49	[BUG]  [BUGGY]  super.resolveInternal(t,  enclosing,  propertyNode,  true);  [CE]  cannot  find  symbol  propertyNode  [FE]            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  enclosing,  propertyNode,  true);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  enclosing,  propertyNode,  true);	  super.resolveInternal(t,    enclosing,    propertyNode,    false);    	non-compiled	[CE]  cannot  find  symbol  propertyNode	86	None	replace
50	[BUG]  [BUGGY]  super.resolveInternal(t,  enclosing,  propertyName,  false);  [CE]  cannot  find  symbol  propertyName  [FE]              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  enclosing,  propertyName,  false);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  enclosing,  propertyName,  false);	  super.resolveInternal(t,    enclosing,    propertyNode,    false);    	non-compiled	[CE]  cannot  find  symbol  propertyName	86	None	replace
51	[BUG]  [BUGGY]  super.resolveInternal(t,  enclosing,  propertyContinuations,  false);  [CE]  no  suitable  method  found  for  resolveInternal(ErrorReporter,StaticScope<JSType>,List<PropertyContinuation>,boolean)  [FE]                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  enclosing,  propertyContinuations,  false);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  enclosing,  propertyContinuations,  false);	  super.resolveInternal(t,    enclosing,    propertyNode,    false);    	non-compiled	[CE]  no  suitable  method  found  for  resolveInternal(ErrorReporter,StaticScope<JSType>,List<PropertyContinuation>,boolean)	86	None	replace
52	[BUG]  [BUGGY]  super.resolveInternal(t,  enclosing,  propertyType,  false);  [CE]  cannot  find  symbol  propertyType  [FE]                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  enclosing,  propertyType,  false);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  enclosing,  propertyType,  false);	  super.resolveInternal(t,    enclosing,    propertyNode,    false);    	non-compiled	[CE]  cannot  find  symbol  propertyType	86	None	replace
53	[BUG]  [BUGGY]  super.resolveInternal(t,  enclosing,  sourceName,  false);  [CE]  no  suitable  method  found  for  resolveInternal(ErrorReporter,StaticScope<JSType>,String,boolean)  [FE]                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  enclosing,  sourceName,  false);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  enclosing,  sourceName,  false);	  super.resolveInternal(t,    enclosing,    propertyNode,    false);    	non-compiled	[CE]  no  suitable  method  found  for  resolveInternal(ErrorReporter,StaticScope<JSType>,String,boolean)	86	None	replace
54	[BUG]  [BUGGY]  Predicates.checkNotNull(forAnnotations);  [CE]  cannot  find  symbol  forAnnotations  [FE]                                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  Predicates.checkNotNull(forAnnotations);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	Predicates.checkNotNull(forAnnotations);	  Predicates.checkNotNull(propertyContinuations);    	non-compiled	[CE]  cannot  find  symbol  forAnnotations	38	None	replace
55	[BUG]  [BUGGY]  Predicates.checkNotNull(resolved);  [CE]  cannot  find  symbol  Predicates  [FE]                                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  Predicates.checkNotNull(resolved);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	Predicates.checkNotNull(resolved);	  Predicates.checkNotNull(propertyContinuations);    	non-compiled	[CE]  cannot  find  symbol  Predicates	38	None	replace
56	[BUG]  [BUGGY]  Predicates.checkState(propertyContinuations!=  null);  [CE]  cannot  find  symbol  Predicates  [FE]                                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  Predicates.checkState(propertyContinuations!=  null);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	Predicates.checkState(propertyContinuations!=  null);	  Predicates.checkNotNull(propertyContinuations);    	non-compiled	[CE]  cannot  find  symbol  Predicates	38	None	replace
57	[BUG]  [BUGGY]  Predicates.checkNotNull(propertyContinuations,  resolved);  [CE]  cannot  find  symbol  Predicates  [FE]                                            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  Predicates.checkNotNull(propertyContinuations,  resolved);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	Predicates.checkNotNull(propertyContinuations,  resolved);	  Predicates.checkNotNull(propertyContinuations);    	non-compiled	[CE]  cannot  find  symbol  Predicates	38	None	replace
58	[BUG]  [BUGGY]  super.resolveInternal(t,  enclosing,  false,  propertyName);  [CE]  cannot  find  symbol  propertyName  [FE]              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  enclosing,  false,  propertyName);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  enclosing,  false,  propertyName);	  super.resolveInternal(t,    enclosing,    false,    propertyNode);    	non-compiled	[CE]  cannot  find  symbol  propertyName	87	None	replace
59	[BUG]  [BUGGY]  super.resolveInternal(t,  enclosing,  false,  handleTypeCycle);  [CE]  cannot  find  symbol  handleTypeCycle  [FE]                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  enclosing,  false,  handleTypeCycle);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  enclosing,  false,  handleTypeCycle);	  super.resolveInternal(t,    enclosing,    false,    propertyNode);    	non-compiled	[CE]  cannot  find  symbol  handleTypeCycle	87	None	replace
60	[BUG]  [BUGGY]  super.resolveInternal(t,  enclosing,  false,  true);  [CE]  no  suitable  method  found  for  resolveInternal(ErrorReporter,StaticScope<JSType>,boolean,boolean)  [FE]                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  enclosing,  false,  true);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  enclosing,  false,  true);	  super.resolveInternal(t,    enclosing,    false,    propertyNode);    	non-compiled	[CE]  no  suitable  method  found  for  resolveInternal(ErrorReporter,StaticScope<JSType>,boolean,boolean)	87	None	replace
61	[BUG]  [BUGGY]  super.resolveInternal(t,  enclosing,  type,  true);  [CE]  cannot  find  symbol  type  [FE]              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  enclosing,  type,  true);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  enclosing,  type,  true);	  super.resolveInternal(t,    enclosing,    true);    	non-compiled	[CE]  cannot  find  symbol  type	2	None	replace
62	[BUG]  [BUGGY]  super.resolveInternal(t,  type,  enclosing,  true);  [CE]  cannot  find  symbol  type  [FE]                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  type,  enclosing,  true);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  type,  enclosing,  true);	  super.resolveInternal(t,    enclosing,    true);    	non-compiled	[CE]  cannot  find  symbol  type	2	None	replace
63	[BUG]  [BUGGY]  super.resolveInternal(t,  enclosing,  true,  type);  [CE]  cannot  find  symbol  type  [FE]                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  enclosing,  true,  type);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  enclosing,  true,  type);	  super.resolveInternal(t,    enclosing,    true);    	non-compiled	[CE]  cannot  find  symbol  type	2	None	replace
64	[BUG]  [BUGGY]  super.resolveInternal(t,  enclosing,  null,  true);  [CE]  no  suitable  method  found  for  resolveInternal(ErrorReporter,StaticScope<JSType>,<null>,boolean)  [FE]                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  enclosing,  null,  true);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  enclosing,  null,  true);	  super.resolveInternal(t,    enclosing,    true);    	non-compiled	[CE]  no  suitable  method  found  for  resolveInternal(ErrorReporter,StaticScope<JSType>,<null>,boolean)	2	None	replace
65	[BUG]  [BUGGY]  super.resolveInternal(t,  enclosing,  true,  FOR_ANNOTATION);  [CE]  cannot  find  symbol  FOR_ANNOTATION  [FE]                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  enclosing,  true,  FOR_ANNOTATION);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  enclosing,  true,  FOR_ANNOTATION);	  super.resolveInternal(t,    enclosing,    true);    	non-compiled	[CE]  cannot  find  symbol  FOR_ANNOTATION	2	None	replace
66	[BUG]  [BUGGY]  super.resolveInternal(t,  enclosing,  detectPrototypeCycle);  [CE]  cannot  find  symbol  detectPrototypeCycle  [FE]              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  enclosing,  detectPrototypeCycle);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  enclosing,  detectPrototypeCycle);	  super.resolveInternal(t,    enclosing,    handleTypeCycle);    	non-compiled	[CE]  cannot  find  symbol  detectPrototypeCycle	8	None	replace
67	[BUG]  [BUGGY]  super.resolveInternal(t,  enclosing,  detectImplicitPrototypeCycle);  [CE]  cannot  find  symbol  detectImplicitPrototypeCycle  [FE]                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  enclosing,  detectImplicitPrototypeCycle);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  enclosing,  detectImplicitPrototypeCycle);	  super.resolveInternal(t,    enclosing,    handleTypeCycle);    	non-compiled	[CE]  cannot  find  symbol  detectImplicitPrototypeCycle	8	None	replace
68	[BUG]  [BUGGY]  super.resolveInternal(t,  enclosing,  registry.type);  [CE]  cannot  find  symbol  type  [FE]                            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  enclosing,  registry.type);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  enclosing,  registry.type);	  super.resolveInternal(t,    enclosing,    type,    registry);    	non-compiled	[CE]  cannot  find  symbol  type	18	None	replace
69	[BUG]  [BUGGY]  super.resolveInternal(t,  enclosing,  registry.isLastGeneration());  [CE]  no  suitable  method  found  for  resolveInternal(ErrorReporter,StaticScope<JSType>,boolean)  [FE]                              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  enclosing,  registry.isLastGeneration());  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  enclosing,  registry.isLastGeneration());	  super.resolveInternal(t,    enclosing,    type,    registry);    	non-compiled	[CE]  no  suitable  method  found  for  resolveInternal(ErrorReporter,StaticScope<JSType>,boolean)	18	None	replace
70	[BUG]  [BUGGY]  super.resolveInternal(t,  enclosing,  registry.getTypeDesc());  [CE]  cannot  find  symbol  [FE]                                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  enclosing,  registry.getTypeDesc());  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  enclosing,  registry.getTypeDesc());	  super.resolveInternal(t,    enclosing,    type,    registry);    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
71	[BUG]  [BUGGY]  super.resolveInternal(t,  enclosing,  registry.getNativeType(JSTypeNative.OBJECT_TYPE));  [CE]  no  suitable  method  found  for  resolveInternal(ErrorReporter,StaticScope<JSType>,JSType)  [FE]                                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  enclosing,  registry.getNativeType(JSTypeNative.OBJECT_TYPE));  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  enclosing,  registry.getNativeType(JSTypeNative.OBJECT_TYPE));	  super.resolveInternal(t,    enclosing,    type,    registry);    	non-compiled	[CE]  no  suitable  method  found  for  resolveInternal(ErrorReporter,StaticScope<JSType>,JSType)	18	None	replace
72	[BUG]  [BUGGY]  super.resolveInternal(t,  enclosing,  registry.getNativeType(JSTypeNative.UNKNOWN_TYPE));  [CE]  no  suitable  method  found  for  resolveInternal(ErrorReporter,StaticScope<JSType>,JSType)  [FE]                                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  enclosing,  registry.getNativeType(JSTypeNative.UNKNOWN_TYPE));  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  enclosing,  registry.getNativeType(JSTypeNative.UNKNOWN_TYPE));	  super.resolveInternal(t,    enclosing,    type,    registry);    	non-compiled	[CE]  no  suitable  method  found  for  resolveInternal(ErrorReporter,StaticScope<JSType>,JSType)	18	None	replace
73	[BUG]  [BUGGY]  timeout  [FE]                            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  Preconditions.checkArgument(resolved);  Preconditions.checkArgument(resolved);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	add	Preconditions.checkArgument(resolved);    Preconditions.checkArgument(resolved);	  timeout    	compilable	timeout	94	1	add
74	[BUG]  [BUGGY]  Preconditions.checkArgument(resolved);  Preconditions.checkArgument(resolved);  timeout  [FE]                            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  Preconditions.checkArgument(resolved);  Preconditions.checkArgument(resolved);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	Preconditions.checkArgument(resolved);    Preconditions.checkArgument(resolved);	  timeout    	compilable	timeout	94	1	add
75	[BUG]  [BUGGY]  Preconditions.checkArgument(resolved);  Preconditions.checkArgument(resolved);  enclosing  =  registry.isLastGeneration()?  getReferencedType()  :  this;  [CE]  incompatible  types  [FE]                              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  Preconditions.checkArgument(resolved);  Preconditions.checkArgument(resolved);  enclosing  =  registry.isLastGeneration()?  getReferencedType()  :  this;  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	Preconditions.checkArgument(resolved);    Preconditions.checkArgument(resolved);  enclosing  =  registry.isLastGeneration()?  getReferencedType()  :  this;	  timeout    	non-compiled	[CE]  incompatible  types	94	None	add
76	[BUG]  [BUGGY]  Preconditions.checkArgument(resolved);  Preconditions.checkArgument(resolved);  enclosing  =  registry.isLastGeneration()?  getReferencedType()  :  null;  [CE]  incompatible  types  [FE]                                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  Preconditions.checkArgument(resolved);  Preconditions.checkArgument(resolved);  enclosing  =  registry.isLastGeneration()?  getReferencedType()  :  null;  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	Preconditions.checkArgument(resolved);    Preconditions.checkArgument(resolved);  enclosing  =  registry.isLastGeneration()?  getReferencedType()  :  null;	  timeout    	non-compiled	[CE]  incompatible  types	94	None	add
77	[BUG]  [BUGGY]  Preconditions.checkArgument(resolved);  Preconditions.checkArgument(resolved);  preconditions.checkArgument(resolved);  [CE]  cannot  find  symbol  preconditions  [FE]                                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  Preconditions.checkArgument(resolved);  Preconditions.checkArgument(resolved);  preconditions.checkArgument(resolved);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	Preconditions.checkArgument(resolved);    Preconditions.checkArgument(resolved);  preconditions.checkArgument(resolved);	  timeout    	non-compiled	[CE]  cannot  find  symbol  preconditions	94	None	add
78	[BUG]  [BUGGY]  Preconditions.checkArgument(resolved);  Preconditions.checkArgument(resolved);  enclosing  =  registry.isLastGeneration()?  getReferencedType()  :  Collections.emptyList();  [CE]  cannot  find  symbol  Collections  [FE]                                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  Preconditions.checkArgument(resolved);  Preconditions.checkArgument(resolved);  enclosing  =  registry.isLastGeneration()?  getReferencedType()  :  Collections.emptyList();  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	Preconditions.checkArgument(resolved);    Preconditions.checkArgument(resolved);  enclosing  =  registry.isLastGeneration()?  getReferencedType()  :  Collections.emptyList();	  timeout    	non-compiled	[CE]  cannot  find  symbol  Collections	94	None	add
79	[BUG]  [BUGGY]  Preconditions.checkArgument(resolved);  Preconditions.checkArgument(resolved);  enclosing  =  registry.isLastGeneration()?  getReferencedType()  :  Collections.EMPTY_LIST;  [CE]  cannot  find  symbol  Collections  [FE]                                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  Preconditions.checkArgument(resolved);  Preconditions.checkArgument(resolved);  enclosing  =  registry.isLastGeneration()?  getReferencedType()  :  Collections.EMPTY_LIST;  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	Preconditions.checkArgument(resolved);    Preconditions.checkArgument(resolved);  enclosing  =  registry.isLastGeneration()?  getReferencedType()  :  Collections.EMPTY_LIST;	  timeout    	non-compiled	[CE]  cannot  find  symbol  Collections	94	None	add
80	[BUG]  [BUGGY]  Preconditions.checkArgument(resolved);  Preconditions.checkArgument(resolved);  enclosing  =  registry.isLastGeneration()?  getPropertyContinuations()  :  null;  [CE]  cannot  find  symbol  [FE]                                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  Preconditions.checkArgument(resolved);  Preconditions.checkArgument(resolved);  enclosing  =  registry.isLastGeneration()?  getPropertyContinuations()  :  null;  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	Preconditions.checkArgument(resolved);    Preconditions.checkArgument(resolved);  enclosing  =  registry.isLastGeneration()?  getPropertyContinuations()  :  null;	  timeout    	non-compiled	[CE]  cannot  find  symbol	94	None	add
81	[BUG]  [BUGGY]  Preconditions.checkArgument(resolved);  Preconditions.checkArgument(resolved);  enclosing  =  registry.isLastGeneration()?  getReferencedPropertyContinuations()  :  this;  [CE]  cannot  find  symbol  [FE]                                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  Preconditions.checkArgument(resolved);  Preconditions.checkArgument(resolved);  enclosing  =  registry.isLastGeneration()?  getReferencedPropertyContinuations()  :  this;  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	Preconditions.checkArgument(resolved);    Preconditions.checkArgument(resolved);  enclosing  =  registry.isLastGeneration()?  getReferencedPropertyContinuations()  :  this;	  timeout    	non-compiled	[CE]  cannot  find  symbol	94	None	add
82	[BUG]  [BUGGY]  Predicate  validator  =  registry.getValue(enclosing);  [CE]  cannot  find  symbol  [FE]                            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  Predicate  validator  =  registry.getValue(enclosing);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	Predicate  validator  =  registry.getValue(enclosing);	  Predicate    validator    =    enclosing.getValue();    	non-compiled	[CE]  cannot  find  symbol	33	None	replace
83	[BUG]  [BUGGY]  Predicate  validator  =  registry.getValue(enclosing).getValue();  [CE]  cannot  find  symbol  [FE]                              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  Predicate  validator  =  registry.getValue(enclosing).getValue();  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	Predicate  validator  =  registry.getValue(enclosing).getValue();	  Predicate    validator    =    enclosing.getValue();    	non-compiled	[CE]  cannot  find  symbol	33	None	replace
84	[BUG]  [BUGGY]  Predicate  validator  =  enclosing,  registry.getValue();  [CE]  ';'  expected  [FE]                                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  Predicate  validator  =  enclosing,  registry.getValue();  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	Predicate  validator  =  enclosing,  registry.getValue();	  Predicate    validator    =    enclosing.getValue();    	non-compiled	[CE]  ';'  expected	33	None	replace
85	[BUG]  [BUGGY]  Predicate  validator  =  enclosing.declaration.getValue();  [CE]  cannot  find  symbol  declaration  [FE]                                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  Predicate  validator  =  enclosing.declaration.getValue();  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	Predicate  validator  =  enclosing.declaration.getValue();	  Predicate    validator    =    enclosing.getValue();    	non-compiled	[CE]  cannot  find  symbol  declaration	33	None	replace
86	[BUG]  [BUGGY]  super.resolveInternal(t,  inclosing);  [CE]  cannot  find  symbol  inclosing  [FE]                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  inclosing);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  inclosing);	  super.resolveInternal(t,    inferred);    	non-compiled	[CE]  cannot  find  symbol  inclosing	82	None	replace
87	[BUG]  [BUGGY]  super.resolveInternal(t,  enclosing,  getPropertyTypeName(),  getReferencedType(),  type);  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  enclosing,  getPropertyTypeName(),  getReferencedType(),  type);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  enclosing,  getPropertyTypeName(),  getReferencedType(),  type);	  super.resolveInternal(t,    enclosing,    getPropertyTypeName(),    getReferencedType());    	non-compiled	[CE]  cannot  find  symbol	104	None	replace
88	[BUG]  [BUGGY]  super.resolveInternal(t,  enclosing,  getPropertyTypeName(),  type,  getReferencedType());  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  enclosing,  getPropertyTypeName(),  type,  getReferencedType());  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  enclosing,  getPropertyTypeName(),  type,  getReferencedType());	  super.resolveInternal(t,    enclosing,    getPropertyTypeName(),    getReferencedType());    	non-compiled	[CE]  cannot  find  symbol	104	None	replace
89	[BUG]  [BUGGY]  super.resolveInternal(t,  enclosing,  getPropertyTypeName(),  getReferencedType(),  propertyNode);  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  enclosing,  getPropertyTypeName(),  getReferencedType(),  propertyNode);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  enclosing,  getPropertyTypeName(),  getReferencedType(),  propertyNode);	  super.resolveInternal(t,    enclosing,    getPropertyTypeName(),    getReferencedType());    	non-compiled	[CE]  cannot  find  symbol	104	None	replace
90	[BUG]  [BUGGY]  super.resolveInternal(t,  enclosing,  getReferencedType(),  getPropertyTypeName());  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  enclosing,  getReferencedType(),  getPropertyTypeName());  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  enclosing,  getReferencedType(),  getPropertyTypeName());	  super.resolveInternal(t,    enclosing,    getPropertyTypeName(),    getReferencedType());    	non-compiled	[CE]  cannot  find  symbol	104	None	replace
91	[BUG]  [BUGGY]  super.resolveInternal(t,  enclosing,  getPropertyTypeName(),  handleTypeCycle(t,  getReferencedType());  [CE]  ')'  expected  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  enclosing,  getPropertyTypeName(),  handleTypeCycle(t,  getReferencedType());  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  enclosing,  getPropertyTypeName(),  handleTypeCycle(t,  getReferencedType());	  super.resolveInternal(t,    enclosing,    getPropertyTypeName(),    getReferencedType());    	non-compiled	[CE]  ')'  expected	104	None	replace
92	[BUG]  [BUGGY]  super.resolveInternal(t,  type,  getPropertyTypeName(),  getReferencedType());  [CE]  cannot  find  symbol  type  [FE]                            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  type,  getPropertyTypeName(),  getReferencedType());  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  type,  getPropertyTypeName(),  getReferencedType());	  super.resolveInternal(t,    enclosing,    getPropertyTypeName(),    getReferencedType());    	non-compiled	[CE]  cannot  find  symbol  type	104	None	replace
93	[BUG]  [BUGGY]  Predicates.checkNotNull(validator);  [CE]  cannot  find  symbol  Predicates  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  Predicates.checkNotNull(validator);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	Predicates.checkNotNull(validator);	  Predicates.checkNotNull(propertyNode);    	non-compiled	[CE]  cannot  find  symbol  Predicates	76	None	replace
94	[BUG]  [BUGGY]  Predicates.checkNotNull(registryNode);  [CE]  cannot  find  symbol  registryNode  [FE]                            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  Predicates.checkNotNull(registryNode);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	Predicates.checkNotNull(registryNode);	  Predicates.checkNotNull(propertyNode);    	non-compiled	[CE]  cannot  find  symbol  registryNode	76	None	replace
95	[BUG]  [BUGGY]  Predicates.checkNotNull(register);  [CE]  cannot  find  symbol  register  [FE]                              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  Predicates.checkNotNull(register);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	Predicates.checkNotNull(register);	  Predicates.checkNotNull(propertyNode);    	non-compiled	[CE]  cannot  find  symbol  register	76	None	replace
96	[BUG]  [BUGGY]  Predicates.checkNotNull(registered);  [CE]  cannot  find  symbol  registered  [FE]                                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  Predicates.checkNotNull(registered);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	Predicates.checkNotNull(registered);	  Predicates.checkNotNull(propertyNode);    	non-compiled	[CE]  cannot  find  symbol  registered	76	None	replace
97	[BUG]  [BUGGY]  super.resolveInternal(t,  sourceName,  enclosing);  [CE]  no  suitable  method  found  for  resolveInternal(ErrorReporter,String,StaticScope<JSType>)  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  sourceName,  enclosing);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  sourceName,  enclosing);	  super.resolveInternal(t,    sourceName);    	non-compiled	[CE]  no  suitable  method  found  for  resolveInternal(ErrorReporter,String,StaticScope<JSType>)	83	None	replace
98	[BUG]  [BUGGY]  super.resolveInternal(t,  propertyName,  sourceName);  [CE]  cannot  find  symbol  propertyName  [FE]                            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  propertyName,  sourceName);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  propertyName,  sourceName);	  super.resolveInternal(t,    sourceName);    	non-compiled	[CE]  cannot  find  symbol  propertyName	83	None	replace
99	[BUG]  [BUGGY]  super.resolveInternal(t,  reference,  sourceName);  [CE]  no  suitable  method  found  for  resolveInternal(ErrorReporter,String,String)  [FE]                              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  reference,  sourceName);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  reference,  sourceName);	  super.resolveInternal(t,    sourceName);    	non-compiled	[CE]  no  suitable  method  found  for  resolveInternal(ErrorReporter,String,String)	83	None	replace
100	[BUG]  [BUGGY]  super.resolveInternal(t,  sourceName,  type);  [CE]  cannot  find  symbol  type  [FE]                                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  sourceName,  type);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  sourceName,  type);	  super.resolveInternal(t,    sourceName);    	non-compiled	[CE]  cannot  find  symbol  type	83	None	replace
101	[BUG]  [BUGGY]  super.resolveInternal(t,  type,  sourceName);  [CE]  cannot  find  symbol  type  [FE]                                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  type,  sourceName);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  type,  sourceName);	  super.resolveInternal(t,    sourceName);    	non-compiled	[CE]  cannot  find  symbol  type	83	None	replace
102	[BUG]  [BUGGY]  super.resolveInternal(t,  enclosing,  registry,  propertyContinuations);  [CE]  no  suitable  method  found  for  resolveInternal(ErrorReporter,StaticScope<JSType>,JSTypeRegistry,List<PropertyContinuation>)  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  enclosing,  registry,  propertyContinuations);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  enclosing,  registry,  propertyContinuations);	  super.resolveInternal(t,    enclosing,    registry,    propertyNode);    	non-compiled	[CE]  no  suitable  method  found  for  resolveInternal(ErrorReporter,StaticScope<JSType>,JSTypeRegistry,List<PropertyContinuation>)	17	None	replace
103	[BUG]  [BUGGY]  super.resolveInternal(t,  enclosing,  registry,  propertyName);  [CE]  cannot  find  symbol  propertyName  [FE]                            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  enclosing,  registry,  propertyName);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  enclosing,  registry,  propertyName);	  super.resolveInternal(t,    enclosing,    registry,    propertyNode);    	non-compiled	[CE]  cannot  find  symbol  propertyName	17	None	replace
104	[BUG]  [BUGGY]  super.resolveInternal(t,  enclosing,  registry,  handleTypeCycle);  [CE]  cannot  find  symbol  handleTypeCycle  [FE]                              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  enclosing,  registry,  handleTypeCycle);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  enclosing,  registry,  handleTypeCycle);	  super.resolveInternal(t,    enclosing,    registry,    propertyNode);    	non-compiled	[CE]  cannot  find  symbol  handleTypeCycle	17	None	replace
105	[BUG]  [BUGGY]  super.resolveInternal(t,  enclosing,  registry,  properties);  [CE]  cannot  find  symbol  properties  [FE]                                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  enclosing,  registry,  properties);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  enclosing,  registry,  properties);	  super.resolveInternal(t,    enclosing,    registry,    propertyNode);    	non-compiled	[CE]  cannot  find  symbol  properties	17	None	replace
106	[BUG]  [BUGGY]  super.resolveInternal(t,  enclosing,  registry,  status);  [CE]  cannot  find  symbol  status  [FE]                                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  enclosing,  registry,  status);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  enclosing,  registry,  status);	  super.resolveInternal(t,    enclosing,    registry,    propertyNode);    	non-compiled	[CE]  cannot  find  symbol  status	17	None	replace
107	[BUG]  [BUGGY]  super.resolveInternal(registry,  t,  enclosing);  [CE]  no  suitable  method  found  for  resolveInternal(JSTypeRegistry,ErrorReporter,StaticScope<JSType>)  [FE]                              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(registry,  t,  enclosing);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(registry,  t,  enclosing);	  super.resolveInternal(registry,    enclosing,    t);    	non-compiled	[CE]  no  suitable  method  found  for  resolveInternal(JSTypeRegistry,ErrorReporter,StaticScope<JSType>)	19	None	replace
108	[BUG]  [BUGGY]  super.resolveInternal(t,  enclosing,  register);  [CE]  cannot  find  symbol  register  [FE]                                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  enclosing,  register);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  enclosing,  register);	  super.resolveInternal(registry,    enclosing,    t);    	non-compiled	[CE]  cannot  find  symbol  register	19	None	replace
109	[BUG]  [BUGGY]  Super.resolveInternal(t,  enclosing,  registry);  [CE]  cannot  find  symbol  Super  [FE]                                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  Super.resolveInternal(t,  enclosing,  registry);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	Super.resolveInternal(t,  enclosing,  registry);	  super.resolveInternal(registry,    enclosing,    t);    	non-compiled	[CE]  cannot  find  symbol  Super	19	None	replace
110	[BUG]  [BUGGY]  Predicate  validator  =  getValueForAnnotations(enclosing,  registry);  [CE]  cannot  find  symbol  [FE]                                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  Predicate  validator  =  getValueForAnnotations(enclosing,  registry);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	Predicate  validator  =  getValueForAnnotations(enclosing,  registry);	  Predicate    validator    =    getValueForAnnotations(enclosing);    	non-compiled	[CE]  cannot  find  symbol	37	None	replace
111	[BUG]  [BUGGY]  Predicate  validator  =  getValueForAnnotations(enclosing,  t);  [CE]  cannot  find  symbol  [FE]                                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  Predicate  validator  =  getValueForAnnotations(enclosing,  t);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	Predicate  validator  =  getValueForAnnotations(enclosing,  t);	  Predicate    validator    =    getValueForAnnotations(enclosing);    	non-compiled	[CE]  cannot  find  symbol	37	None	replace
112	[BUG]  [BUGGY]  Predicate  validator  =  getValueForAnnotations(enclosing,  type);  [CE]  cannot  find  symbol  type  [FE]                                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  Predicate  validator  =  getValueForAnnotations(enclosing,  type);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	Predicate  validator  =  getValueForAnnotations(enclosing,  type);	  Predicate    validator    =    getValueForAnnotations(enclosing);    	non-compiled	[CE]  cannot  find  symbol  type	37	None	replace
113	[BUG]  [BUGGY]  Predicate  validator  =  getValueForAnnotations(enclosing,  propertyNode);  [CE]  cannot  find  symbol  propertyNode  [FE]                                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  Predicate  validator  =  getValueForAnnotations(enclosing,  propertyNode);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	Predicate  validator  =  getValueForAnnotations(enclosing,  propertyNode);	  Predicate    validator    =    getValueForAnnotations(enclosing);    	non-compiled	[CE]  cannot  find  symbol  propertyNode	37	None	replace
114	[BUG]  [BUGGY]  Predicate  validator  =  getValueForAnnotations(enclosing,  serialVersionUID);  [CE]  cannot  find  symbol  [FE]                                            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  Predicate  validator  =  getValueForAnnotations(enclosing,  serialVersionUID);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	Predicate  validator  =  getValueForAnnotations(enclosing,  serialVersionUID);	  Predicate    validator    =    getValueForAnnotations(enclosing);    	non-compiled	[CE]  cannot  find  symbol	37	None	replace
115	[BUG]  [BUGGY]  Predicate  validator  =  getValueForAnnotations(enclosing,  true);  [CE]  cannot  find  symbol  [FE]                                              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  Predicate  validator  =  getValueForAnnotations(enclosing,  true);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	Predicate  validator  =  getValueForAnnotations(enclosing,  true);	  Predicate    validator    =    getValueForAnnotations(enclosing);    	non-compiled	[CE]  cannot  find  symbol	37	None	replace
116	[BUG]  [BUGGY]  super.resolvePropertyInternal(t,  enclosing,  parent);  [CE]  cannot  find  symbol  parent  [FE]                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolvePropertyInternal(t,  enclosing,  parent);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolvePropertyInternal(t,  enclosing,  parent);	  super.resolvePropertyInternal(t,    enclosing,    scope);    	non-compiled	[CE]  cannot  find  symbol  parent	72	None	replace
117	[BUG]  [BUGGY]  super.resolveInternal(t,  enclosing,  getPropertyName(),  propertyNode,  forAnnotations);  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  enclosing,  getPropertyName(),  propertyNode,  forAnnotations);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  enclosing,  getPropertyName(),  propertyNode,  forAnnotations);	  super.resolveInternal(t,    enclosing,    getPropertyName(),    propertyNode);    	non-compiled	[CE]  cannot  find  symbol	54	None	replace
118	[BUG]  [BUGGY]  super.resolveInternal(t,  propertyNode,  getPropertyName(),  enclosing);  [CE]  cannot  find  symbol  propertyNode  [FE]                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  propertyNode,  getPropertyName(),  enclosing);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  propertyNode,  getPropertyName(),  enclosing);	  super.resolveInternal(t,    enclosing,    getPropertyName(),    propertyNode);    	non-compiled	[CE]  cannot  find  symbol  propertyNode	54	None	replace
119	[BUG]  [BUGGY]  super.resolveInternal(t,  enclosing,  getPropertyName(),  propertyNode,  type);  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  enclosing,  getPropertyName(),  propertyNode,  type);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  enclosing,  getPropertyName(),  propertyNode,  type);	  super.resolveInternal(t,    enclosing,    getPropertyName(),    propertyNode);    	non-compiled	[CE]  cannot  find  symbol	54	None	replace
120	[BUG]  [BUGGY]  super.resolveInternal(t,  enclosing,  getPropertyName(),  handleTypeCycle(t,  propertyNode);  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  enclosing,  getPropertyName(),  handleTypeCycle(t,  propertyNode);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  enclosing,  getPropertyName(),  handleTypeCycle(t,  propertyNode);	  super.resolveInternal(t,    enclosing,    getPropertyName(),    propertyNode);    	non-compiled	[CE]  ')'  expected	54	None	replace
121	[BUG]  [BUGGY]  super.resolveInternal(t,  enclosing,  getPropertyName(),  type,  propertyNode);  [CE]  cannot  find  symbol  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  enclosing,  getPropertyName(),  type,  propertyNode);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  enclosing,  getPropertyName(),  type,  propertyNode);	  super.resolveInternal(t,    enclosing,    getPropertyName(),    propertyNode);    	non-compiled	[CE]  cannot  find  symbol	54	None	replace
122	[BUG]  [BUGGY]  super.resolveInternal(t,  enclosing,  getPropertyName(),  getReferencedType(),  type);  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  enclosing,  getPropertyName(),  getReferencedType(),  type);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  enclosing,  getPropertyName(),  getReferencedType(),  type);	  super.resolveInternal(t,    enclosing,    getPropertyName(),    getReferencedType());    	non-compiled	[CE]  cannot  find  symbol	78	None	replace
123	[BUG]  [BUGGY]  super.resolveInternal(t,  enclosing,  getPropertyName(),  type,  getReferencedType());  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  enclosing,  getPropertyName(),  type,  getReferencedType());  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  enclosing,  getPropertyName(),  type,  getReferencedType());	  super.resolveInternal(t,    enclosing,    getPropertyName(),    getReferencedType());    	non-compiled	[CE]  cannot  find  symbol	78	None	replace
124	[BUG]  [BUGGY]  super.resolveInternal(t,  enclosing,  getReferencedType(),  getPropertyName());  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  enclosing,  getReferencedType(),  getPropertyName());  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  enclosing,  getReferencedType(),  getPropertyName());	  super.resolveInternal(t,    enclosing,    getPropertyName(),    getReferencedType());    	non-compiled	[CE]  cannot  find  symbol	78	None	replace
125	[BUG]  [BUGGY]  super.resolveInternal(t,  enclosing,  getPropertyName(),  getReferencedType(),  propertyNode);  [CE]  cannot  find  symbol  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  enclosing,  getPropertyName(),  getReferencedType(),  propertyNode);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  enclosing,  getPropertyName(),  getReferencedType(),  propertyNode);	  super.resolveInternal(t,    enclosing,    getPropertyName(),    getReferencedType());    	non-compiled	[CE]  cannot  find  symbol	78	None	replace
126	[BUG]  [BUGGY]  super.resolveInternal(t,  enclosing,  getPropertyName(),  getReferencedType(),  forAnnotations);  [CE]  cannot  find  symbol  [FE]                            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  enclosing,  getPropertyName(),  getReferencedType(),  forAnnotations);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  enclosing,  getPropertyName(),  getReferencedType(),  forAnnotations);	  super.resolveInternal(t,    enclosing,    getPropertyName(),    getReferencedType());    	non-compiled	[CE]  cannot  find  symbol	78	None	replace
127	[BUG]  [BUGGY]  super.resolveInternal(t,  enclosing,  getPropertyName(),  getReferencedType(),  propertyName);  [CE]  cannot  find  symbol  [FE]                              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  enclosing,  getPropertyName(),  getReferencedType(),  propertyName);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  enclosing,  getPropertyName(),  getReferencedType(),  propertyName);	  super.resolveInternal(t,    enclosing,    getPropertyName(),    getReferencedType());    	non-compiled	[CE]  cannot  find  symbol	78	None	replace
128	[BUG]  [BUGGY]  super.resolveInternal(t,  enclosing,  getPropertyName(),  handleTypeCycle(t,  getReferencedType());  [CE]  ')'  expected  [FE]                                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  enclosing,  getPropertyName(),  handleTypeCycle(t,  getReferencedType());  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  enclosing,  getPropertyName(),  handleTypeCycle(t,  getReferencedType());	  super.resolveInternal(t,    enclosing,    getPropertyName(),    getReferencedType());    	non-compiled	[CE]  ')'  expected	78	None	replace
129	[BUG]  [BUGGY]  super.resolvePropertyInternal(t,  enclosing,  propertyContinuations);  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolvePropertyInternal(t,  enclosing,  propertyContinuations);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolvePropertyInternal(t,  enclosing,  propertyContinuations);	  super.resolvePropertyInternal(t,    enclosing,    forAnnotations);    	non-compiled	[CE]  cannot  find  symbol	42	None	replace
130	[BUG]  [BUGGY]  super.resolvePropertyInternal(t,  enclosing,  properties);  [CE]  cannot  find  symbol  properties  [FE]                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolvePropertyInternal(t,  enclosing,  properties);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolvePropertyInternal(t,  enclosing,  properties);	  super.resolvePropertyInternal(t,    enclosing,    forAnnotations);    	non-compiled	[CE]  cannot  find  symbol  properties	42	None	replace
131	[BUG]  [BUGGY]  super.resolvePropertyInternal(t,  enclosing,  propertyNodes);  [CE]  cannot  find  symbol  propertyNodes  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolvePropertyInternal(t,  enclosing,  propertyNodes);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolvePropertyInternal(t,  enclosing,  propertyNodes);	  super.resolvePropertyInternal(t,    enclosing,    forAnnotations);    	non-compiled	[CE]  cannot  find  symbol  propertyNodes	42	None	replace
132	[BUG]  [BUGGY]  super.resolvePropertyInternal(t,  enclosing,  types);  [CE]  cannot  find  symbol  types  [FE]                            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolvePropertyInternal(t,  enclosing,  types);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolvePropertyInternal(t,  enclosing,  types);	  super.resolvePropertyInternal(t,    enclosing,    forAnnotations);    	non-compiled	[CE]  cannot  find  symbol  types	42	None	replace
133	[BUG]  [BUGGY]  super.resolvePropertyInternal(t,  enclosing,  props);  [CE]  cannot  find  symbol  props  [FE]                              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolvePropertyInternal(t,  enclosing,  props);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolvePropertyInternal(t,  enclosing,  props);	  super.resolvePropertyInternal(t,    enclosing,    forAnnotations);    	non-compiled	[CE]  cannot  find  symbol  props	42	None	replace
134	[BUG]  [BUGGY]  super.resolveInternal(t,  enclosing,  getPropertyName(),  type,  forAnnotations);  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  enclosing,  getPropertyName(),  type,  forAnnotations);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  enclosing,  getPropertyName(),  type,  forAnnotations);	  super.resolveInternal(t,    enclosing,    getPropertyName(),    type);    	non-compiled	[CE]  cannot  find  symbol	51	None	replace
135	[BUG]  [BUGGY]  super.resolveInternal(t,  type,  getPropertyName(),  enclosing);  [CE]  cannot  find  symbol  type  [FE]              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  type,  getPropertyName(),  enclosing);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  type,  getPropertyName(),  enclosing);	  super.resolveInternal(t,    enclosing,    getPropertyName(),    type);    	non-compiled	[CE]  cannot  find  symbol  type	51	None	replace
136	[BUG]  [BUGGY]  super.resolveInternal(t,  enclosing,  getPropertyName(),  type,  registry);  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  enclosing,  getPropertyName(),  type,  registry);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  enclosing,  getPropertyName(),  type,  registry);	  super.resolveInternal(t,    enclosing,    getPropertyName(),    type);    	non-compiled	[CE]  cannot  find  symbol	51	None	replace
137	[BUG]  [BUGGY]  super.resolveInternal(t,  enclosing,  getPropertyName(),  propType,  type);  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  enclosing,  getPropertyName(),  propType,  type);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  enclosing,  getPropertyName(),  propType,  type);	  super.resolveInternal(t,    enclosing,    getPropertyName(),    type);    	non-compiled	[CE]  cannot  find  symbol	51	None	replace
138	[BUG]  [BUGGY]  super.resolveInternal(t,  enclosing,  reference);  [CE]  no  suitable  method  found  for  resolveInternal(ErrorReporter,StaticScope<JSType>,String)  [FE]              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  enclosing,  reference);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  enclosing,  reference);	  super.resolveInternal(t,    enclosing,    propertyName);    	non-compiled	[CE]  no  suitable  method  found  for  resolveInternal(ErrorReporter,StaticScope<JSType>,String)	13	None	replace
139	[BUG]  [BUGGY]  super.resolveInternal(t,  enclosing,  name);  [CE]  cannot  find  symbol  name  [FE]                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  enclosing,  name);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  enclosing,  name);	  super.resolveInternal(t,    enclosing,    propertyName);    	non-compiled	[CE]  cannot  find  symbol  name	13	None	replace
140	[BUG]  [BUGGY]  super.resolveInternal(t,  enclosing,  resourceName);  [CE]  cannot  find  symbol  resourceName  [FE]                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  enclosing,  resourceName);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  enclosing,  resourceName);	  super.resolveInternal(t,    enclosing,    propertyName);    	non-compiled	[CE]  cannot  find  symbol  resourceName	13	None	replace
141	[BUG]  [BUGGY]  super.resolveInternal(t,  enclosing,  documentationNode);  [CE]  cannot  find  symbol  documentationNode  [FE]                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  enclosing,  documentationNode);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  enclosing,  documentationNode);	  super.resolveInternal(t,    enclosing,    propertyName);    	non-compiled	[CE]  cannot  find  symbol  documentationNode	13	None	replace
142	[BUG]  [BUGGY]  super.resolveType(t,  enclosing,  handleTypeCycle);  [CE]  cannot  find  symbol  handleTypeCycle  [FE]                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveType(t,  enclosing,  handleTypeCycle);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveType(t,  enclosing,  handleTypeCycle);	  super.resolveType(t,    enclosing,    type);    	non-compiled	[CE]  cannot  find  symbol  handleTypeCycle	65	None	replace
143	[BUG]  [BUGGY]  super.resolveType(t,  enclosing,  def);  [CE]  cannot  find  symbol  def  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveType(t,  enclosing,  def);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveType(t,  enclosing,  def);	  super.resolveType(t,    enclosing,    type);    	non-compiled	[CE]  cannot  find  symbol  def	65	None	replace
144	[BUG]  [BUGGY]  super.resolvePropertyInternal(t,  registry,  enclosing);  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolvePropertyInternal(t,  registry,  enclosing);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolvePropertyInternal(t,  registry,  enclosing);	  super.resolvePropertyInternal(t,    enclosing,    registry);    	non-compiled	[CE]  cannot  find  symbol	40	None	replace
145	[BUG]  [BUGGY]  super.resolvePropertyInternal(t,  enclosing,  registry,  type);  [CE]  cannot  find  symbol  type  [FE]                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolvePropertyInternal(t,  enclosing,  registry,  type);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolvePropertyInternal(t,  enclosing,  registry,  type);	  super.resolvePropertyInternal(t,    enclosing,    registry);    	non-compiled	[CE]  cannot  find  symbol  type	40	None	replace
146	[BUG]  [BUGGY]  super.resolvePropertyInternal(t,  enclosing,  registry,  propertyNode);  [CE]  cannot  find  symbol  propertyNode  [FE]                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolvePropertyInternal(t,  enclosing,  registry,  propertyNode);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolvePropertyInternal(t,  enclosing,  registry,  propertyNode);	  super.resolvePropertyInternal(t,    enclosing,    registry);    	non-compiled	[CE]  cannot  find  symbol  propertyNode	40	None	replace
147	[BUG]  [BUGGY]  super.resolvePropertyInternal(t,  enclosing,  this.registry);  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolvePropertyInternal(t,  enclosing,  this.registry);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolvePropertyInternal(t,  enclosing,  this.registry);	  super.resolvePropertyInternal(t,    enclosing,    registry);    	non-compiled	[CE]  cannot  find  symbol	40	None	replace
148	[BUG]  [BUGGY]  super.resolvePropertyInternal(t,  enclosing,  registry,  status);  [CE]  cannot  find  symbol  status  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolvePropertyInternal(t,  enclosing,  registry,  status);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolvePropertyInternal(t,  enclosing,  registry,  status);	  super.resolvePropertyInternal(t,    enclosing,    registry);    	non-compiled	[CE]  cannot  find  symbol  status	40	None	replace
149	[BUG]  [BUGGY]  super.resolveType(t,  resolved);  [CE]  cannot  find  symbol  [FE]                              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveType(t,  resolved);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveType(t,  resolved);	  super.resolveType(t,    type);    	non-compiled	[CE]  cannot  find  symbol	68	None	replace
150	[BUG]  [BUGGY]  super.resolveType(t,  forAnnotations);  [CE]  cannot  find  symbol  forAnnotations  [FE]                                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveType(t,  forAnnotations);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveType(t,  forAnnotations);	  super.resolveType(t,    type);    	non-compiled	[CE]  cannot  find  symbol  forAnnotations	68	None	replace
151	[BUG]  [BUGGY]  super.resolveType(t,  handleTypeCycle);  [CE]  cannot  find  symbol  handleTypeCycle  [FE]                                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveType(t,  handleTypeCycle);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveType(t,  handleTypeCycle);	  super.resolveType(t,    type);    	non-compiled	[CE]  cannot  find  symbol  handleTypeCycle	68	None	replace
152	[BUG]  [BUGGY]  super.resolveType(t,  propertyNode);  [CE]  cannot  find  symbol  propertyNode  [FE]                                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveType(t,  propertyNode);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveType(t,  propertyNode);	  super.resolveType(t,    type);    	non-compiled	[CE]  cannot  find  symbol  propertyNode	68	None	replace
153	[BUG]  [BUGGY]  super.resolveType(t,  ref);  [CE]  cannot  find  symbol  ref  [FE]                                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveType(t,  ref);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveType(t,  ref);	  super.resolveType(t,    type);    	non-compiled	[CE]  cannot  find  symbol  ref	68	None	replace
154	[BUG]  [BUGGY]  Predicate  validator  =  getReferencedType().getValue();  [CE]  cannot  find  symbol  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  Predicate  validator  =  getReferencedType().getValue();  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	Predicate  validator  =  getReferencedType().getValue();	          Predicate    validator    =    getReferencedType();    	non-compiled	[CE]  cannot  find  symbol	56	None	replace
155	[BUG]  [BUGGY]  Predicate  validator  =  getValuedType();  [CE]  cannot  find  symbol  [FE]                            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  Predicate  validator  =  getValuedType();  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	Predicate  validator  =  getValuedType();	          Predicate    validator    =    getReferencedType();    	non-compiled	[CE]  cannot  find  symbol	56	None	replace
156	[BUG]  [BUGGY]  Predicate  validator  =  getReferencedType().validate();  [CE]  cannot  find  symbol  [FE]                              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  Predicate  validator  =  getReferencedType().validate();  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	Predicate  validator  =  getReferencedType().validate();	          Predicate    validator    =    getReferencedType();    	non-compiled	[CE]  cannot  find  symbol	56	None	replace
157	[BUG]  [BUGGY]  Predicate  validator  =  getReferencedType().validate(t);  [CE]  cannot  find  symbol  [FE]                                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  Predicate  validator  =  getReferencedType().validate(t);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	Predicate  validator  =  getReferencedType().validate(t);	          Predicate    validator    =    getReferencedType();    	non-compiled	[CE]  cannot  find  symbol	56	None	replace
158	[BUG]  [BUGGY]  Predicate  validator  =  getValueType();  [CE]  cannot  find  symbol  [FE]                                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  Predicate  validator  =  getValueType();  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	Predicate  validator  =  getValueType();	          Predicate    validator    =    getReferencedType();    	non-compiled	[CE]  cannot  find  symbol	56	None	replace
159	[BUG]  [BUGGY]  Predicate  validator  =  getReferencedType().evaluate(t);  [CE]  cannot  find  symbol  [FE]                                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  Predicate  validator  =  getReferencedType().evaluate(t);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	Predicate  validator  =  getReferencedType().evaluate(t);	          Predicate    validator    =    getReferencedType();    	non-compiled	[CE]  cannot  find  symbol	56	None	replace
160	[BUG]  [BUGGY]  Predicate  validator  =  getReferencedType().variables;  [CE]  cannot  find  symbol  [FE]                                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  Predicate  validator  =  getReferencedType().variables;  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	Predicate  validator  =  getReferencedType().variables;	          Predicate    validator    =    getReferencedType();    	non-compiled	[CE]  cannot  find  symbol  	56	None	replace
161	[BUG]  [BUGGY]  super.resolveInternal(t,  deferred);  [CE]  cannot  find  symbol  deferred  [FE]                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  deferred);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  deferred);	  super.resolveInternal(t,    forAnnotations);    	non-compiled	[CE]  cannot  find  symbol  deferred	25	None	replace
162	[BUG]  [BUGGY]  super.resolveInternal(t,  properties);  [CE]  cannot  find  symbol  properties  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  properties);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  properties);	  super.resolveInternal(t,    forAnnotations);    	non-compiled	[CE]  cannot  find  symbol  properties	25	None	replace
163	[BUG]  [BUGGY]  super.resolveType(t,  enclosing,  null);  [CE]  cannot  find  symbol  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveType(t,  enclosing,  null);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveType(t,  enclosing,  null);	  super.resolveType(t,    enclosing,    forAnnotations);    	non-compiled	[CE]  cannot  find  symbol	66	None	replace
164	[BUG]  [BUGGY]  super.resolveType(t,  enclosing,  types);  [CE]  cannot  find  symbol  types  [FE]                            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveType(t,  enclosing,  types);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveType(t,  enclosing,  types);	  super.resolveType(t,    enclosing,    forAnnotations);    	non-compiled	[CE]  cannot  find  symbol  types	66	None	replace
165	[BUG]  [BUGGY]  PropertyRegistry  registry  =  propertyNode.getPropertyRegistry(propertyName);  [CE]  cannot  find  symbol  [FE]                              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  PropertyRegistry  registry  =  propertyNode.getPropertyRegistry(propertyName);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	PropertyRegistry  registry  =  propertyNode.getPropertyRegistry(propertyName);	  PropertyRegistry    registry    =    enclosing.getPropertyRegistry(propertyName);    	non-compiled	[CE]  cannot  find  symbol	34	None	replace
166	[BUG]  [BUGGY]  PropertyRegistry  registry  =  props.getPropertyRegistry(propertyName);  [CE]  cannot  find  symbol  [FE]                                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  PropertyRegistry  registry  =  props.getPropertyRegistry(propertyName);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	PropertyRegistry  registry  =  props.getPropertyRegistry(propertyName);	  PropertyRegistry    registry    =    enclosing.getPropertyRegistry(propertyName);    	non-compiled	[CE]  cannot  find  symbol	34	None	replace
167	[BUG]  [BUGGY]  PropertyRegistry  registry  =  enclosing.getPropertyRegistry(propertyName,  reference);  [CE]  cannot  find  symbol  [FE]                                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  PropertyRegistry  registry  =  enclosing.getPropertyRegistry(propertyName,  reference);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	PropertyRegistry  registry  =  enclosing.getPropertyRegistry(propertyName,  reference);	  PropertyRegistry    registry    =    enclosing.getPropertyRegistry(propertyName);    	non-compiled	[CE]  cannot  find  symbol	34	None	replace
168	[BUG]  [BUGGY]  PropertyRegistry  registry  =  properties.getPropertyRegistry(propertyName);  [CE]  cannot  find  symbol  [FE]                                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  PropertyRegistry  registry  =  properties.getPropertyRegistry(propertyName);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	PropertyRegistry  registry  =  properties.getPropertyRegistry(propertyName);	  PropertyRegistry    registry    =    enclosing.getPropertyRegistry(propertyName);    	non-compiled	[CE]  cannot  find  symbol	34	None	replace
169	[BUG]  [BUGGY]  PropertyRegistry  registry  =  enclosing.getPropertyRegistry(propertyName,  sourceName);  [CE]  cannot  find  symbol  [FE]                                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  PropertyRegistry  registry  =  enclosing.getPropertyRegistry(propertyName,  sourceName);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	PropertyRegistry  registry  =  enclosing.getPropertyRegistry(propertyName,  sourceName);	  PropertyRegistry    registry    =    enclosing.getPropertyRegistry(propertyName);    	non-compiled	[CE]  cannot  find  symbol	34	None	replace
170	[BUG]  [BUGGY]  PropertyRegistry  registry  =  enclosing.getPropertyRegistry(propertyName,  propertyName);  [CE]  cannot  find  symbol  [FE]                                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  PropertyRegistry  registry  =  enclosing.getPropertyRegistry(propertyName,  propertyName);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	PropertyRegistry  registry  =  enclosing.getPropertyRegistry(propertyName,  propertyName);	  PropertyRegistry    registry    =    enclosing.getPropertyRegistry(propertyName);    	non-compiled	[CE]  cannot  find  symbol	34	None	replace
171	[BUG]  [BUGGY]  super.resolveInternal(t,  reference,  forAnnotations);  [CE]  cannot  find  symbol  forAnnotations  [FE]                                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  reference,  forAnnotations);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  reference,  forAnnotations);	  super.resolveInternal(t,    reference);    	non-compiled	[CE]  cannot  find  symbol  forAnnotations	29	None	replace
172	[BUG]  [BUGGY]  super.resolveInternal(t,  reference,  enclosing);  [CE]  no  suitable  method  found  for  resolveInternal(ErrorReporter,String,StaticScope<JSType>)  [FE]                                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  reference,  enclosing);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  reference,  enclosing);	  super.resolveInternal(t,    reference);    	non-compiled	[CE]  no  suitable  method  found  for  resolveInternal(ErrorReporter,String,StaticScope<JSType>)	29	None	replace
173	[BUG]  [BUGGY]  super.resolveInternal(t,  reference,  propertyNode);  [CE]  cannot  find  symbol  propertyNode  [FE]                                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  reference,  propertyNode);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  reference,  propertyNode);	  super.resolveInternal(t,    reference);    	non-compiled	[CE]  cannot  find  symbol  propertyNode	29	None	replace
174	[BUG]  [BUGGY]  super.resolveInternal(t,  reference,  propertyName);  [CE]  cannot  find  symbol  propertyName  [FE]                                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  reference,  propertyName);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  reference,  propertyName);	  super.resolveInternal(t,    reference);    	non-compiled	[CE]  cannot  find  symbol  propertyName	29	None	replace
175	[BUG]  [BUGGY]  super.resolveInternal(t,  propertyNode,  reference);  [CE]  cannot  find  symbol  propertyNode  [FE]                                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  propertyNode,  reference);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  propertyNode,  reference);	  super.resolveInternal(t,    reference);    	non-compiled	[CE]  cannot  find  symbol  propertyNode	29	None	replace
176	[BUG]  [BUGGY]  super.resolveInternal(t,  enclosing,  type,  this);  [CE]  cannot  find  symbol  type  [FE]                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  enclosing,  type,  this);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  enclosing,  type,  this);	  super.resolveInternal(t,    enclosing,    this);    	non-compiled	[CE]  cannot  find  symbol  type	10	None	replace
177	[BUG]  [BUGGY]  super.resolveInternal(t,  enclosing,  propertyNode,  this);  [CE]  cannot  find  symbol  propertyNode  [FE]                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  enclosing,  propertyNode,  this);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  enclosing,  propertyNode,  this);	  super.resolveInternal(t,    enclosing,    this);    	non-compiled	[CE]  cannot  find  symbol  propertyNode	10	None	replace
178	[BUG]  [BUGGY]  super.resolveInternal(t,  type,  enclosing,  this);  [CE]  cannot  find  symbol  type  [FE]                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  type,  enclosing,  this);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  type,  enclosing,  this);	  super.resolveInternal(t,    enclosing,    this);    	non-compiled	[CE]  cannot  find  symbol  type	10	None	replace
179	[BUG]  [BUGGY]  super.resolveInternal(t,  enclosing,  this,  propertyNode);  [CE]  cannot  find  symbol  propertyNode  [FE]                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  enclosing,  this,  propertyNode);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  enclosing,  this,  propertyNode);	  super.resolveInternal(t,    enclosing,    this);    	non-compiled	[CE]  cannot  find  symbol  propertyNode	10	None	replace
180	[BUG]  [BUGGY]  super.resolveInternal(t,  enclosing,  this,  forAnnotations);  [CE]  cannot  find  symbol  forAnnotations  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  enclosing,  this,  forAnnotations);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  enclosing,  this,  forAnnotations);	  super.resolveInternal(t,    enclosing,    this);    	non-compiled	[CE]  cannot  find  symbol  forAnnotations	10	None	replace
181	[BUG]  [BUGGY]  super.resolveInternal(t,  enclosing,  handleTypeCycle,  getReferencedType());  [CE]  cannot  find  symbol  handleTypeCycle  [FE]                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  enclosing,  handleTypeCycle,  getReferencedType());  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  enclosing,  handleTypeCycle,  getReferencedType());	  super.resolveInternal(t,    enclosing,    type,    getReferencedType());    	non-compiled	[CE]  cannot  find  symbol  handleTypeCycle	58	None	replace
182	[BUG]  [BUGGY]  super.resolveInternal(t,  enclosing,  resolved,  getReferencedType());  [CE]  no  suitable  method  found  for  resolveInternal(ErrorReporter,StaticScope<JSType>,boolean,JSType)  [FE]                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  enclosing,  resolved,  getReferencedType());  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  enclosing,  resolved,  getReferencedType());	  super.resolveInternal(t,    enclosing,    type,    getReferencedType());    	non-compiled	[CE]  no  suitable  method  found  for  resolveInternal(ErrorReporter,StaticScope<JSType>,boolean,JSType)	58	None	replace
183	[BUG]  [BUGGY]  super.resolveInternal(t,  resolved,  enclosing,  getPropertyType());  [CE]  method  getPropertyType  in  class  ObjectType  cannot  be  applied  to  given  types;  [FE]                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  resolved,  enclosing,  getPropertyType());  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  resolved,  enclosing,  getPropertyType());	  super.resolveInternal(t,    type,    enclosing,    getPropertyType());    	non-compiled	[CE]  method  getPropertyType  in  class  ObjectType  cannot  be  applied  to  given  types;	48	None	replace
184	[BUG]  [BUGGY]  super.resolveInternal(t,  resolved,  enclosing,  getReferencedType());  [CE]  no  suitable  method  found  for  resolveInternal(ErrorReporter,boolean,StaticScope<JSType>,JSType)  [FE]                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  resolved,  enclosing,  getReferencedType());  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  resolved,  enclosing,  getReferencedType());	  super.resolveInternal(t,    type,    enclosing,    getReferencedType());    	non-compiled	[CE]  no  suitable  method  found  for  resolveInternal(ErrorReporter,boolean,StaticScope<JSType>,JSType)	59	None	replace
185	[BUG]  [BUGGY]  super.resolveInternal(t,  reference,  enclosing,  getReferencedType());  [CE]  no  suitable  method  found  for  resolveInternal(ErrorReporter,String,StaticScope<JSType>,JSType)  [FE]                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  reference,  enclosing,  getReferencedType());  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  reference,  enclosing,  getReferencedType());	  super.resolveInternal(t,    type,    enclosing,    getReferencedType());    	non-compiled	[CE]  no  suitable  method  found  for  resolveInternal(ErrorReporter,String,StaticScope<JSType>,JSType)	59	None	replace
186	[BUG]  [BUGGY]  super.resolveInternal(t,  propertyNode,  enclosing,  getReferencedType());  [CE]  cannot  find  symbol  propertyNode  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  propertyNode,  enclosing,  getReferencedType());  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  propertyNode,  enclosing,  getReferencedType());	  super.resolveInternal(t,    type,    enclosing,    getReferencedType());    	non-compiled	[CE]  cannot  find  symbol  propertyNode	59	None	replace
187	[BUG]  [BUGGY]  super.resolveInternal(t,  type,  forAnnotations,  enclosing,  getReferencedType());  [CE]  cannot  find  symbol  type  [FE]                            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  type,  forAnnotations,  enclosing,  getReferencedType());  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  type,  forAnnotations,  enclosing,  getReferencedType());	  super.resolveInternal(t,    type,    enclosing,    getReferencedType());    	non-compiled	[CE]  cannot  find  symbol  type	59	None	replace
188	[BUG]  [BUGGY]  super.resolveInternal(t,  refType,  enclosing,  getReferencedType());  [CE]  cannot  find  symbol  refType  [FE]                              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  refType,  enclosing,  getReferencedType());  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  refType,  enclosing,  getReferencedType());	  super.resolveInternal(t,    type,    enclosing,    getReferencedType());    	non-compiled	[CE]  cannot  find  symbol  refType	59	None	replace
189	[BUG]  [BUGGY]  super.resolvePropertyInternal(t,  reference);  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolvePropertyInternal(t,  reference);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolvePropertyInternal(t,  reference);	  super.resolvePropertyInternal(t,    propertyNode);    	non-compiled	[CE]  cannot  find  symbol	43	None	replace
190	[BUG]  [BUGGY]  super.resolvePropertyInternal(t,  propertyName);  [CE]  cannot  find  symbol  propertyName  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolvePropertyInternal(t,  propertyName);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolvePropertyInternal(t,  propertyName);	  super.resolvePropertyInternal(t,    propertyNode);    	non-compiled	[CE]  cannot  find  symbol  propertyName	43	None	replace
191	[BUG]  [BUGGY]  super.resolvePropertyInternal(t,  sourceName);  [CE]  cannot  find  symbol  [FE]                            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolvePropertyInternal(t,  sourceName);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolvePropertyInternal(t,  sourceName);	  super.resolvePropertyInternal(t,    propertyNode);    	non-compiled	[CE]  cannot  find  symbol	43	None	replace
192	[BUG]  [BUGGY]  PropertyRegistry  registry  =  getPropertyRegistry(t);  [CE]  cannot  find  symbol  [FE]                                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  PropertyRegistry  registry  =  getPropertyRegistry(t);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	PropertyRegistry  registry  =  getPropertyRegistry(t);	  PropertyRegistry    registry    =    getPropertyRegistry();    	non-compiled	[CE]  cannot  find  symbol	35	None	replace
193	[BUG]  [BUGGY]  PropertyRegistry  registry  =  getPropertyRegistry(t.getModule());  [CE]  cannot  find  symbol  [FE]                                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  PropertyRegistry  registry  =  getPropertyRegistry(t.getModule());  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	PropertyRegistry  registry  =  getPropertyRegistry(t.getModule());	  PropertyRegistry    registry    =    getPropertyRegistry();    	non-compiled	[CE]  cannot  find  symbol	35	None	replace
194	[BUG]  [BUGGY]  PropertyRegistry  registry  =  getPropertyRegistry().getPropertyRegistry();  [CE]  cannot  find  symbol  [FE]                                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  PropertyRegistry  registry  =  getPropertyRegistry().getPropertyRegistry();  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	PropertyRegistry  registry  =  getPropertyRegistry().getPropertyRegistry();	  PropertyRegistry    registry    =    getPropertyRegistry();    	non-compiled	[CE]  cannot  find  symbol	35	None	replace
195	[BUG]  [BUGGY]  PropertyRegistry  registry  =  getPropertyRegistry().getDefaultPropertyRegistry();  [CE]  cannot  find  symbol  [FE]                                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  PropertyRegistry  registry  =  getPropertyRegistry().getDefaultPropertyRegistry();  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	PropertyRegistry  registry  =  getPropertyRegistry().getDefaultPropertyRegistry();	  PropertyRegistry    registry    =    getPropertyRegistry();    	non-compiled	[CE]  cannot  find  symbol	35	None	replace
196	[BUG]  [BUGGY]  PropertyRegistry  registry  =  getPropertyRegistry().getPropertyRegistry(propertyName);  [CE]  cannot  find  symbol  [FE]                                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  PropertyRegistry  registry  =  getPropertyRegistry().getPropertyRegistry(propertyName);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	PropertyRegistry  registry  =  getPropertyRegistry().getPropertyRegistry(propertyName);	  PropertyRegistry    registry    =    getPropertyRegistry();    	non-compiled	[CE]  cannot  find  symbol	35	None	replace
197	[BUG]  [BUGGY]  super.resolveInternal(t,  enclosing,  registry,  handleTypeCycle(t);  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  enclosing,  registry,  handleTypeCycle(t);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  enclosing,  registry,  handleTypeCycle(t);	  super.resolveInternal(t,    enclosing,    registry,    type);    	non-compiled	[CE]  ')'  expected	16	None	replace
198	[BUG]  [BUGGY]  super.resolveInternal(t,  enclosing,  registry,  DEFAULT_TYPE);  [CE]  cannot  find  symbol  DEFAULT_TYPE  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  enclosing,  registry,  DEFAULT_TYPE);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  enclosing,  registry,  DEFAULT_TYPE);	  super.resolveInternal(t,    enclosing,    registry,    type);    	non-compiled	[CE]  cannot  find  symbol  DEFAULT_TYPE	16	None	replace
199	[BUG]  [BUGGY]  super.resolveInternal(t,  enclosing,  registry,  deferred);  [CE]  cannot  find  symbol  deferred  [FE]                            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  enclosing,  registry,  deferred);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  enclosing,  registry,  deferred);	  super.resolveInternal(t,    enclosing,    registry,    type);    	non-compiled	[CE]  cannot  find  symbol  deferred	16	None	replace
200	[BUG]  [BUGGY]  super.resolveInternal(t,  enclosing,  false,  getReferencedType());  [CE]  no  suitable  method  found  for  resolveInternal(ErrorReporter,StaticScope<JSType>,boolean,JSType)  [FE]                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  enclosing,  false,  getReferencedType());  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  enclosing,  false,  getReferencedType());	  super.resolveInternal(t,    enclosing,    false,    type);    	non-compiled	[CE]  no  suitable  method  found  for  resolveInternal(ErrorReporter,StaticScope<JSType>,boolean,JSType)	7	None	replace
201	[BUG]  [BUGGY]  super.resolveInternal(t,  enclosing,  handleTypeCycle,  false);  [CE]  cannot  find  symbol  handleTypeCycle  [FE]            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  enclosing,  handleTypeCycle,  false);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  enclosing,  handleTypeCycle,  false);	  super.resolveInternal(t,    enclosing,    type,    false);    	non-compiled	[CE]  cannot  find  symbol  handleTypeCycle	1	None	replace
202	[BUG]  [BUGGY]  super.resolveInternal(t,  enclosing,  PROPERTY,  false);  [CE]  cannot  find  symbol  PROPERTY  [FE]              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  enclosing,  PROPERTY,  false);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  enclosing,  PROPERTY,  false);	  super.resolveInternal(t,    enclosing,    type,    false);    	non-compiled	[CE]  cannot  find  symbol  PROPERTY	1	None	replace
203	[BUG]  [BUGGY]  super.resolveInternal(t,  enclosing,  DEFAULT_TYPE,  false);  [CE]  cannot  find  symbol  DEFAULT_TYPE  [FE]                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  enclosing,  DEFAULT_TYPE,  false);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  enclosing,  DEFAULT_TYPE,  false);	  super.resolveInternal(t,    enclosing,    type,    false);    	non-compiled	[CE]  cannot  find  symbol  DEFAULT_TYPE	1	None	replace
204	[BUG]  [BUGGY]  super.resolveInternal(t,  enclosing,  registry,  getPropertyName());  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  enclosing,  registry,  getPropertyName());  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  enclosing,  registry,  getPropertyName());	  super.resolveInternal(t,    enclosing,    propertyNode,    getPropertyName());    	non-compiled	[CE]  cannot  find  symbol	74	None	replace
205	[BUG]  [BUGGY]  super.resolveInternal(t,  enclosing,  null,  getPropertyName());  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  enclosing,  null,  getPropertyName());  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  enclosing,  null,  getPropertyName());	  super.resolveInternal(t,    enclosing,    propertyNode,    getPropertyName());    	non-compiled	[CE]  cannot  find  symbol	74	None	replace
206	[BUG]  [BUGGY]  super.resolveInternal(t,  enclosing,  resolved);  [CE]  no  suitable  method  found  for  resolveInternal(ErrorReporter,StaticScope<JSType>,boolean)  [FE]                            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  enclosing,  resolved);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  enclosing,  resolved);	  super.resolveInternal(t,    resolved);    	non-compiled	[CE]  no  suitable  method  found  for  resolveInternal(ErrorReporter,StaticScope<JSType>,boolean)	27	None	replace
207	[BUG]  [BUGGY]  super.resolveInternal(t,  forAnnotations,  resolved);  [CE]  cannot  find  symbol  forAnnotations  [FE]                              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  forAnnotations,  resolved);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  forAnnotations,  resolved);	  super.resolveInternal(t,    resolved);    	non-compiled	[CE]  cannot  find  symbol  forAnnotations	27	None	replace
208	[BUG]  [BUGGY]  super.resolveInternal(t,  resolved,  forAnnotations);  [CE]  cannot  find  symbol  forAnnotations  [FE]                                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  resolved,  forAnnotations);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  resolved,  forAnnotations);	  super.resolveInternal(t,    resolved);    	non-compiled	[CE]  cannot  find  symbol  forAnnotations	27	None	replace
209	[BUG]  [BUGGY]  super.resolveInternal(t,  propertyNode,  resolved);  [CE]  cannot  find  symbol  propertyNode  [FE]                                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  propertyNode,  resolved);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  propertyNode,  resolved);	  super.resolveInternal(t,    resolved);    	non-compiled	[CE]  cannot  find  symbol  propertyNode	27	None	replace
210	[BUG]  [BUGGY]  super.resolveInternal(t,  type,  resolved);  [CE]  cannot  find  symbol  type  [FE]                                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  type,  resolved);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  type,  resolved);	  super.resolveInternal(t,    resolved);    	non-compiled	[CE]  cannot  find  symbol  type	27	None	replace
211	[BUG]  [BUGGY]  super.resolvePropertyInternal(t,  enclosing,  handleTypeCycle);  [CE]  cannot  find  symbol  handleTypeCycle  [FE]                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolvePropertyInternal(t,  enclosing,  handleTypeCycle);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolvePropertyInternal(t,  enclosing,  handleTypeCycle);	  super.resolvePropertyInternal(t,    enclosing,    type);    	non-compiled	[CE]  cannot  find  symbol  handleTypeCycle	39	None	replace
212	[BUG]  [BUGGY]  super.resolvePropertyInternal(t,  enclosing,  DEFAULT_TYPE);  [CE]  cannot  find  symbol  DEFAULT_TYPE  [FE]                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolvePropertyInternal(t,  enclosing,  DEFAULT_TYPE);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolvePropertyInternal(t,  enclosing,  DEFAULT_TYPE);	  super.resolvePropertyInternal(t,    enclosing,    type);    	non-compiled	[CE]  cannot  find  symbol  DEFAULT_TYPE	39	None	replace
213	[BUG]  [BUGGY]  super.resolvePropertyInternal(t,  enclosing,  propType);  [CE]  cannot  find  symbol  propType  [FE]                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolvePropertyInternal(t,  enclosing,  propType);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolvePropertyInternal(t,  enclosing,  propType);	  super.resolvePropertyInternal(t,    enclosing,    type);    	non-compiled	[CE]  cannot  find  symbol  propType	39	None	replace
214	[BUG]  [BUGGY]  super.resolveType(t,  enclosing,  getReferencedType(),  type);  [CE]  cannot  find  symbol  type  [FE]                            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveType(t,  enclosing,  getReferencedType(),  type);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveType(t,  enclosing,  getReferencedType(),  type);	  super.resolveType(t,    enclosing,    getReferencedType());    	non-compiled	[CE]  cannot  find  symbol  type	67	None	replace
215	[BUG]  [BUGGY]  super.resolveType(t,  enclosing,  getReferencedType(),  propertyNode);  [CE]  cannot  find  symbol  propertyNode  [FE]                              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveType(t,  enclosing,  getReferencedType(),  propertyNode);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveType(t,  enclosing,  getReferencedType(),  propertyNode);	  super.resolveType(t,    enclosing,    getReferencedType());    	non-compiled	[CE]  cannot  find  symbol  propertyNode	67	None	replace
216	[BUG]  [BUGGY]  super.resolveType(t,  type,  getReferencedType());  [CE]  cannot  find  symbol  type  [FE]                                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveType(t,  type,  getReferencedType());  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveType(t,  type,  getReferencedType());	  super.resolveType(t,    enclosing,    getReferencedType());    	non-compiled	[CE]  cannot  find  symbol  type	67	None	replace
217	[BUG]  [BUGGY]  super.resolveType(t,  enclosing,  getReferencedType(),  forAnnotations);  [CE]  cannot  find  symbol  forAnnotations  [FE]                                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveType(t,  enclosing,  getReferencedType(),  forAnnotations);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveType(t,  enclosing,  getReferencedType(),  forAnnotations);	  super.resolveType(t,    enclosing,    getReferencedType());    	non-compiled	[CE]  cannot  find  symbol  forAnnotations	67	None	replace
218	[BUG]  [BUGGY]  super.resolveType(t,  enclosing,  getPropertyType());  [CE]  method  getPropertyType  in  class  ObjectType  cannot  be  applied  to  given  types;  [FE]                                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveType(t,  enclosing,  getPropertyType());  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveType(t,  enclosing,  getPropertyType());	  super.resolveType(t,    enclosing,    getReferencedType());    	non-compiled	[CE]  method  getPropertyType  in  class  ObjectType  cannot  be  applied  to  given  types;	67	None	replace
219	[BUG]  [BUGGY]  super.resolveType(t,  enclosing,  getReferencedType(),  registry);  [CE]  cannot  find  symbol  [FE]                                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveType(t,  enclosing,  getReferencedType(),  registry);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveType(t,  enclosing,  getReferencedType(),  registry);	  super.resolveType(t,    enclosing,    getReferencedType());    	non-compiled	[CE]  cannot  find  symbol	67	None	replace
220	[BUG]  [BUGGY]  super.resolveType(t,  enclosing,  getReferencedType(),  this);  [CE]  cannot  find  symbol  [FE]                                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveType(t,  enclosing,  getReferencedType(),  this);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveType(t,  enclosing,  getReferencedType(),  this);	  super.resolveType(t,    enclosing,    getReferencedType());    	non-compiled	[CE]  cannot  find  symbol	67	None	replace
221	[BUG]  [BUGGY]  super.resolveInternal(t,  enclosing,  log);  [CE]  cannot  find  symbol  log  [FE]                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  enclosing,  log);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  enclosing,  log);	  super.resolveInternal(t,    enclosing,    inferred);    	non-compiled	[CE]  cannot  find  symbol  log	79	None	replace
222	[BUG]  [BUGGY]  super.resolveInternal(t,  enclosing,  parent);  [CE]  cannot  find  symbol  parent  [FE]            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  enclosing,  parent);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  enclosing,  parent);	  super.resolveInternal(t,    enclosing,    nameNode);    	non-compiled	[CE]  cannot  find  symbol  parent	84	None	replace
223	[BUG]  [BUGGY]  super.resolveInternal(t,  propertyNode,  getPropertyType(),  enclosing);  [CE]  cannot  find  symbol  propertyNode  [FE]                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  propertyNode,  getPropertyType(),  enclosing);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  propertyNode,  getPropertyType(),  enclosing);	  super.resolveInternal(t,    enclosing,    getPropertyType(),    propertyNode);    	non-compiled	[CE]  cannot  find  symbol  propertyNode	49	None	replace
224	[BUG]  [BUGGY]  super.resolveInternal(t,  enclosing,  getPropertyType(),  type,  propertyNode);  [CE]  method  getPropertyType  in  class  ObjectType  cannot  be  applied  to  given  types;  [FE]                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  enclosing,  getPropertyType(),  type,  propertyNode);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  enclosing,  getPropertyType(),  type,  propertyNode);	  super.resolveInternal(t,    enclosing,    getPropertyType(),    propertyNode);    	non-compiled	[CE]  method  getPropertyType  in  class  ObjectType  cannot  be  applied  to  given  types;	49	None	replace
225	[BUG]  [BUGGY]  super.resolveInternal(t,  enclosing,  getPropertyType(),  propertyNode,  forAnnotations);  [CE]  method  getPropertyType  in  class  ObjectType  cannot  be  applied  to  given  types;  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  enclosing,  getPropertyType(),  propertyNode,  forAnnotations);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  enclosing,  getPropertyType(),  propertyNode,  forAnnotations);	  super.resolveInternal(t,    enclosing,    getPropertyType(),    propertyNode);    	non-compiled	[CE]  method  getPropertyType  in  class  ObjectType  cannot  be  applied  to  given  types;	49	None	replace
226	[BUG]  [BUGGY]  super.resolveInternal(t,  enclosing,  getPropertyType(),  propertyNode,  type);  [CE]  method  getPropertyType  in  class  ObjectType  cannot  be  applied  to  given  types;  [FE]                            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  enclosing,  getPropertyType(),  propertyNode,  type);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  enclosing,  getPropertyType(),  propertyNode,  type);	  super.resolveInternal(t,    enclosing,    getPropertyType(),    propertyNode);    	non-compiled	[CE]  method  getPropertyType  in  class  ObjectType  cannot  be  applied  to  given  types;	49	None	replace
227	[BUG]  [BUGGY]  super.resolveInternal(t,  enclosing,  type,  getPropertyType(),  propertyNode);  [CE]  cannot  find  symbol  type  [FE]                              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  enclosing,  type,  getPropertyType(),  propertyNode);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  enclosing,  type,  getPropertyType(),  propertyNode);	  super.resolveInternal(t,    enclosing,    getPropertyType(),    propertyNode);    	non-compiled	[CE]  cannot  find  symbol  type	49	None	replace
228	[BUG]  [BUGGY]  super.resolveInternal(t,  enclosing,  getPropertyType(),  type,  forAnnotations);  [CE]  method  getPropertyType  in  class  ObjectType  cannot  be  applied  to  given  types;  [FE]              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  enclosing,  getPropertyType(),  type,  forAnnotations);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  enclosing,  getPropertyType(),  type,  forAnnotations);	  super.resolveInternal(t,    enclosing,    getPropertyType(),    type);    	non-compiled	[CE]  method  getPropertyType  in  class  ObjectType  cannot  be  applied  to  given  types;	45	None	replace
229	[BUG]  [BUGGY]  super.resolveInternal(t,  type,  getPropertyType(),  enclosing);  [CE]  cannot  find  symbol  type  [FE]                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  type,  getPropertyType(),  enclosing);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  type,  getPropertyType(),  enclosing);	  super.resolveInternal(t,    enclosing,    getPropertyType(),    type);    	non-compiled	[CE]  cannot  find  symbol  type	45	None	replace
230	[BUG]  [BUGGY]  super.resolveInternal(t,  enclosing,  getPropertyType(),  type,  registry);  [CE]  method  getPropertyType  in  class  ObjectType  cannot  be  applied  to  given  types;  [FE]                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  enclosing,  getPropertyType(),  type,  registry);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  enclosing,  getPropertyType(),  type,  registry);	  super.resolveInternal(t,    enclosing,    getPropertyType(),    type);    	non-compiled	[CE]  method  getPropertyType  in  class  ObjectType  cannot  be  applied  to  given  types;	45	None	replace
231	[BUG]  [BUGGY]  super.resolveInternal(t,  enclosing,  getPropertyType(),  type,  inferred);  [CE]  method  getPropertyType  in  class  ObjectType  cannot  be  applied  to  given  types;  [FE]                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  enclosing,  getPropertyType(),  type,  inferred);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  enclosing,  getPropertyType(),  type,  inferred);	  super.resolveInternal(t,    enclosing,    getPropertyType(),    type);    	non-compiled	[CE]  method  getPropertyType  in  class  ObjectType  cannot  be  applied  to  given  types;	45	None	replace
232	[BUG]  [BUGGY]  Predicates.resolveInternal(t,  enclosing);  [CE]  cannot  find  symbol  Predicates  [FE]                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  Predicates.resolveInternal(t,  enclosing);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	Predicates.resolveInternal(t,  enclosing);	  Super.resolveInternal(t,    enclosing);    	non-compiled	[CE]  cannot  find  symbol  Predicates	103	None	replace
233	[BUG]  [BUGGY]  PrototypeProperty.resolveInternal(t,  enclosing);  [CE]  cannot  find  symbol  PrototypeProperty  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  PrototypeProperty.resolveInternal(t,  enclosing);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	PrototypeProperty.resolveInternal(t,  enclosing);	  Super.resolveInternal(t,    enclosing);    	non-compiled	[CE]  cannot  find  symbol  PrototypeProperty	103	None	replace
234	[BUG]  [BUGGY]  Predicate.resolveInternal(t,  enclosing);  [CE]  cannot  find  symbol  [FE]                            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  Predicate.resolveInternal(t,  enclosing);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	Predicate.resolveInternal(t,  enclosing);	  Super.resolveInternal(t,    enclosing);    	non-compiled	[CE]  cannot  find  symbol	103	None	replace
235	[BUG]  [BUGGY]  GenericScope.resolveInternal(t,  enclosing);  [CE]  cannot  find  symbol  GenericScope  [FE]                              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  GenericScope.resolveInternal(t,  enclosing);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	GenericScope.resolveInternal(t,  enclosing);	  Super.resolveInternal(t,    enclosing);    	non-compiled	[CE]  cannot  find  symbol  GenericScope	103	None	replace
236	[BUG]  [BUGGY]  super.resolveInternal(t,  enclosing,  getPropertyName(),  reference);  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  enclosing,  getPropertyName(),  reference);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  enclosing,  getPropertyName(),  reference);	  super.resolveInternal(t,    enclosing,    getPropertyName(),    propertyName);    	non-compiled	[CE]  cannot  find  symbol	101	None	replace
237	[BUG]  [BUGGY]  super.resolveInternal(t,  enclosing,  getPropertyName(),  sourceName);  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  enclosing,  getPropertyName(),  sourceName);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  enclosing,  getPropertyName(),  sourceName);	  super.resolveInternal(t,    enclosing,    getPropertyName(),    propertyName);    	non-compiled	[CE]  cannot  find  symbol	101	None	replace
238	[BUG]  [BUGGY]  super.resolveInternal(t,  enclosing,  getReferencedType(),  propertyName);  [CE]  cannot  find  symbol  propertyName  [FE]                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  enclosing,  getReferencedType(),  propertyName);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  enclosing,  getReferencedType(),  propertyName);	  super.resolveInternal(t,    enclosing,    getPropertyName(),    propertyName);    	non-compiled	[CE]  cannot  find  symbol  propertyName	101	None	replace
239	[BUG]  [BUGGY]  super.resolveInternal(t,  enclosing,  getPropertyName(),  propertyName,  reference);  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  enclosing,  getPropertyName(),  propertyName,  reference);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  enclosing,  getPropertyName(),  propertyName,  reference);	  super.resolveInternal(t,    enclosing,    getPropertyName(),    propertyName);    	non-compiled	[CE]  cannot  find  symbol	101	None	replace
240	[BUG]  [BUGGY]  super.resolvePropertyInternal(t,  enclosing,  propertyName);  [CE]  cannot  find  symbol  propertyName  [FE]                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolvePropertyInternal(t,  enclosing,  propertyName);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolvePropertyInternal(t,  enclosing,  propertyName);	  super.resolvePropertyInternal(t,    enclosing,    propertyNode);    	non-compiled	[CE]  cannot  find  symbol  propertyName	41	None	replace
241	[BUG]  [BUGGY]  super.resolvePropertyInternal(t,  enclosing,  propertyType);  [CE]  cannot  find  symbol  propertyType  [FE]                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolvePropertyInternal(t,  enclosing,  propertyType);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolvePropertyInternal(t,  enclosing,  propertyType);	  super.resolvePropertyInternal(t,    enclosing,    propertyNode);    	non-compiled	[CE]  cannot  find  symbol  propertyType	41	None	replace
242	[BUG]  [BUGGY]  super.resolvePropertyInternal(t,  enclosing,  null);  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolvePropertyInternal(t,  enclosing,  null);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolvePropertyInternal(t,  enclosing,  null);	  super.resolvePropertyInternal(t,    enclosing,    propertyNode);    	non-compiled	[CE]  cannot  find  symbol	41	None	replace
243	[BUG]  [BUGGY]  super.resolvePropertyInternal(t,  enclosing,  sourceName);  [CE]  cannot  find  symbol  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolvePropertyInternal(t,  enclosing,  sourceName);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolvePropertyInternal(t,  enclosing,  sourceName);	  super.resolvePropertyInternal(t,    enclosing,    propertyNode);    	non-compiled	[CE]  cannot  find  symbol	41	None	replace
244	[BUG]  [BUGGY]  super.resolvePropertyInternal(t,  enclosing,  getReferencedType(),  type);  [CE]  cannot  find  symbol  type  [FE]                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolvePropertyInternal(t,  enclosing,  getReferencedType(),  type);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolvePropertyInternal(t,  enclosing,  getReferencedType(),  type);	  super.resolvePropertyInternal(t,    enclosing,    getReferencedType());    	non-compiled	[CE]  cannot  find  symbol  type	71	None	replace
245	[BUG]  [BUGGY]  super.resolvePropertyInternal(t,  type,  getReferencedType());  [CE]  cannot  find  symbol  type  [FE]                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolvePropertyInternal(t,  type,  getReferencedType());  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolvePropertyInternal(t,  type,  getReferencedType());	  super.resolvePropertyInternal(t,    enclosing,    getReferencedType());    	non-compiled	[CE]  cannot  find  symbol  type	71	None	replace
246	[BUG]  [BUGGY]  super.resolvePropertyInternal(t,  enclosing,  getReferencedType(),  propertyNode);  [CE]  cannot  find  symbol  propertyNode  [FE]                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolvePropertyInternal(t,  enclosing,  getReferencedType(),  propertyNode);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolvePropertyInternal(t,  enclosing,  getReferencedType(),  propertyNode);	  super.resolvePropertyInternal(t,    enclosing,    getReferencedType());    	non-compiled	[CE]  cannot  find  symbol  propertyNode	71	None	replace
247	[BUG]  [BUGGY]  super.resolvePropertyInternal(t,  propertyNode,  enclosing,  getReferencedType());  [CE]  cannot  find  symbol  propertyNode  [FE]                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolvePropertyInternal(t,  propertyNode,  enclosing,  getReferencedType());  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolvePropertyInternal(t,  propertyNode,  enclosing,  getReferencedType());	  super.resolvePropertyInternal(t,    enclosing,    getReferencedType());    	non-compiled	[CE]  cannot  find  symbol  propertyNode	71	None	replace
248	[BUG]  [BUGGY]  super.resolvePropertyInternal(t,  enclosing,  getReferencedType(),  forAnnotations);  [CE]  cannot  find  symbol  forAnnotations  [FE]                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolvePropertyInternal(t,  enclosing,  getReferencedType(),  forAnnotations);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolvePropertyInternal(t,  enclosing,  getReferencedType(),  forAnnotations);	  super.resolvePropertyInternal(t,    enclosing,    getReferencedType());    	non-compiled	[CE]  cannot  find  symbol  forAnnotations	71	None	replace
249	[BUG]  [BUGGY]  super.resolvePropertyInternal(t,  enclosing,  getReferencedType(),  registry);  [CE]  cannot  find  symbol  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolvePropertyInternal(t,  enclosing,  getReferencedType(),  registry);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolvePropertyInternal(t,  enclosing,  getReferencedType(),  registry);	  super.resolvePropertyInternal(t,    enclosing,    getReferencedType());    	non-compiled	[CE]  cannot  find  symbol	71	None	replace
250	[BUG]  [BUGGY]  super.resolvePropertyInternal(t,  enclosing,  type,  getReferencedType());  [CE]  cannot  find  symbol  type  [FE]                            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolvePropertyInternal(t,  enclosing,  type,  getReferencedType());  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolvePropertyInternal(t,  enclosing,  type,  getReferencedType());	  super.resolvePropertyInternal(t,    enclosing,    getReferencedType());    	non-compiled	[CE]  cannot  find  symbol  type	71	None	replace
251	[BUG]  [BUGGY]  super.resolveInternal(t,  enclosing,  handleTypeCycle,  getPropertyType());  [CE]  cannot  find  symbol  handleTypeCycle  [FE]                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  enclosing,  handleTypeCycle,  getPropertyType());  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  enclosing,  handleTypeCycle,  getPropertyType());	  super.resolveInternal(t,    enclosing,    type,    getPropertyType());    	non-compiled	[CE]  cannot  find  symbol  handleTypeCycle	46	None	replace
252	[BUG]  [BUGGY]  super.resolveInternal(t,  type,  enclosing,  getPropertyName());  [CE]  cannot  find  symbol  type  [FE]                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  type,  enclosing,  getPropertyName());  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  type,  enclosing,  getPropertyName());	  super.resolveInternal(t,    propertyNode,    enclosing,    getPropertyName());    	non-compiled	[CE]  cannot  find  symbol  type	53	None	replace
253	[BUG]  [BUGGY]  super.resolveInternal(t,  sourceName,  enclosing,  getPropertyName());  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  sourceName,  enclosing,  getPropertyName());  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  sourceName,  enclosing,  getPropertyName());	  super.resolveInternal(t,    propertyNode,    enclosing,    getPropertyName());    	non-compiled	[CE]  cannot  find  symbol	53	None	replace
254	[BUG]  [BUGGY]  super.resolveInternal(t,  forAnnotations,  enclosing,  getPropertyName());  [CE]  cannot  find  symbol  forAnnotations  [FE]                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  forAnnotations,  enclosing,  getPropertyName());  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  forAnnotations,  enclosing,  getPropertyName());	  super.resolveInternal(t,    propertyNode,    enclosing,    getPropertyName());    	non-compiled	[CE]  cannot  find  symbol  forAnnotations	53	None	replace
255	[BUG]  [BUGGY]  super.resolveInternal(t,  reference,  getPropertyName());  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  reference,  getPropertyName());  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  reference,  getPropertyName());	  super.resolveInternal(t,    propertyNode,    getPropertyName());    	non-compiled	[CE]  cannot  find  symbol	75	None	replace
256	[BUG]  [BUGGY]  super.resolveInternal(t,  type,  getPropertyName());  [CE]  cannot  find  symbol  type  [FE]                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  type,  getPropertyName());  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  type,  getPropertyName());	  super.resolveInternal(t,    propertyNode,    getPropertyName());    	non-compiled	[CE]  cannot  find  symbol  type	75	None	replace
257	[BUG]  [BUGGY]  super.resolveInternal(t,  sourceName,  getPropertyName());  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  sourceName,  getPropertyName());  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  sourceName,  getPropertyName());	  super.resolveInternal(t,    propertyNode,    getPropertyName());    	non-compiled	[CE]  cannot  find  symbol	75	None	replace
258	[BUG]  [BUGGY]  super.resolveInternal(t,  resolved,  getPropertyName());  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  resolved,  getPropertyName());  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  resolved,  getPropertyName());	  super.resolveInternal(t,    propertyNode,    getPropertyName());    	non-compiled	[CE]  cannot  find  symbol	75	None	replace
259	[BUG]  [BUGGY]  super.resolveInternal(t,  propertyNode,  getReferencedType());  [CE]  cannot  find  symbol  propertyNode  [FE]                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  propertyNode,  getReferencedType());  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  propertyNode,  getReferencedType());	  super.resolveInternal(t,    propertyNode,    getPropertyName());    	non-compiled	[CE]  cannot  find  symbol  propertyNode	75	None	replace
260	[BUG]  [BUGGY]  super.resolveInternal(t,  nameNode,  getPropertyName());  [CE]  cannot  find  symbol  nameNode  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  nameNode,  getPropertyName());  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  nameNode,  getPropertyName());	  super.resolveInternal(t,    propertyNode,    getPropertyName());    	non-compiled	[CE]  cannot  find  symbol  nameNode	75	None	replace
261	[BUG]  [BUGGY]  super.resolveInternal(t,  enclosing,  type,  sourceName);  [CE]  cannot  find  symbol  type  [FE]              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  enclosing,  type,  sourceName);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  enclosing,  type,  sourceName);	  super.resolveInternal(t,    enclosing,    sourceName);    	non-compiled	[CE]  cannot  find  symbol  type	85	None	replace
262	[BUG]  [BUGGY]  super.resolveInternal(t,  enclosing,  propertyName,  sourceName);  [CE]  cannot  find  symbol  propertyName  [FE]                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  enclosing,  propertyName,  sourceName);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  enclosing,  propertyName,  sourceName);	  super.resolveInternal(t,    enclosing,    sourceName);    	non-compiled	[CE]  cannot  find  symbol  propertyName	85	None	replace
263	[BUG]  [BUGGY]  super.resolveInternal(t,  enclosing,  sourceName,  type);  [CE]  cannot  find  symbol  type  [FE]                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  enclosing,  sourceName,  type);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  enclosing,  sourceName,  type);	  super.resolveInternal(t,    enclosing,    sourceName);    	non-compiled	[CE]  cannot  find  symbol  type	85	None	replace
264	[BUG]  [BUGGY]  super.resolveInternal(t,  type,  enclosing,  sourceName);  [CE]  cannot  find  symbol  type  [FE]                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  type,  enclosing,  sourceName);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  type,  enclosing,  sourceName);	  super.resolveInternal(t,    enclosing,    sourceName);    	non-compiled	[CE]  cannot  find  symbol  type	85	None	replace
265	[BUG]  [BUGGY]  Super.resolveInternal(t,  enclosing,  type,  sourceName);  [CE]  cannot  find  symbol  type  [FE]                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  Super.resolveInternal(t,  enclosing,  type,  sourceName);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	Super.resolveInternal(t,  enclosing,  type,  sourceName);	  super.resolveInternal(t,    enclosing,    sourceName);    	non-compiled	[CE]  cannot  find  symbol  type	85	None	replace
266	[BUG]  [BUGGY]  Super.resolveInternal(t,  enclosing,  propertyContinuations);  [CE]  cannot  find  symbol  Super  [FE]                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  Super.resolveInternal(t,  enclosing,  propertyContinuations);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	Super.resolveInternal(t,  enclosing,  propertyContinuations);	  Super.resolveInternal(t,    enclosing,    propertyNode);    	non-compiled	[CE]  cannot  find  symbol  Super	106	None	replace
267	[BUG]  [BUGGY]  Super.resolveInternal(t,  enclosing,  this);  [CE]  cannot  find  symbol  Super  [FE]                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  Super.resolveInternal(t,  enclosing,  this);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	Super.resolveInternal(t,  enclosing,  this);	  Super.resolveInternal(t,    enclosing,    propertyNode);    	non-compiled	[CE]  cannot  find  symbol  Super	106	None	replace
268	[BUG]  [BUGGY]  Super.resolveInternal(t,  enclosing,  propertyType);  [CE]  cannot  find  symbol  propertyType  [FE]                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  Super.resolveInternal(t,  enclosing,  propertyType);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	Super.resolveInternal(t,  enclosing,  propertyType);	  Super.resolveInternal(t,    enclosing,    propertyNode);    	non-compiled	[CE]  cannot  find  symbol  propertyType	106	None	replace
269	[BUG]  [BUGGY]  Super.resolveInternal(t,  enclosing,  propertyName);  [CE]  cannot  find  symbol  propertyName  [FE]                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  Super.resolveInternal(t,  enclosing,  propertyName);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	Super.resolveInternal(t,  enclosing,  propertyName);	  Super.resolveInternal(t,    enclosing,    propertyNode);    	non-compiled	[CE]  cannot  find  symbol  propertyName	106	None	replace
270	[BUG]  [BUGGY]  super.resolveInternal(t,  enclosing,  sourceName,  getReferencedType());  [CE]  no  suitable  method  found  for  resolveInternal(ErrorReporter,StaticScope<JSType>,String,JSType)  [FE]                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  enclosing,  sourceName,  getReferencedType());  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  enclosing,  sourceName,  getReferencedType());	  super.resolveInternal(t,    enclosing,    propertyNode,    getReferencedType());    	non-compiled	[CE]  no  suitable  method  found  for  resolveInternal(ErrorReporter,StaticScope<JSType>,String,JSType)	60	None	replace
271	[BUG]  [BUGGY]  super.resolveInternal(t,  enclosing,  propertyType,  getReferencedType());  [CE]  cannot  find  symbol  propertyType  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  enclosing,  propertyType,  getReferencedType());  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  enclosing,  propertyType,  getReferencedType());	  super.resolveInternal(t,    enclosing,    propertyNode,    getReferencedType());    	non-compiled	[CE]  cannot  find  symbol  propertyType	60	None	replace
272	[BUG]  [BUGGY]  super.resolveInternal(t,  enclosing,  registry,  forAnnotations);  [CE]  cannot  find  symbol  forAnnotations  [FE]                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  enclosing,  registry,  forAnnotations);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  enclosing,  registry,  forAnnotations);	  super.resolveInternal(t,    enclosing,    propertyNode,    registry);    	non-compiled	[CE]  cannot  find  symbol  forAnnotations	80	None	replace
273	[BUG]  [BUGGY]  super.resolveInternal(t,  enclosing,  registry,  null);  [CE]  no  suitable  method  found  for  resolveInternal(ErrorReporter,StaticScope<JSType>,JSTypeRegistry,<null>)  [FE]                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  enclosing,  registry,  null);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  enclosing,  registry,  null);	  super.resolveInternal(t,    enclosing,    propertyNode,    registry);    	non-compiled	[CE]  no  suitable  method  found  for  resolveInternal(ErrorReporter,StaticScope<JSType>,JSTypeRegistry,<null>)	80	None	replace
274	[BUG]  [BUGGY]  Preconditions.checkState(resolved!=  null);  [CE]  incomparable  types:  boolean  and  <null>  [FE]                            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  Preconditions.checkState(resolved!=  null);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	Preconditions.checkState(resolved!=  null);	  Preconditions.checkArgument(resolved);    timeout    	non-compiled	[CE]  incomparable  types:  boolean  and  <null>	95	None	replace
275	[BUG]  [BUGGY]  timeout  [FE]                              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  Preconditions.checkState(!resolved);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	add	Preconditions.checkState(!resolved);	  Preconditions.checkArgument(resolved);    timeout    	compilable	timeout	95	1	replace
276	[BUG]  [BUGGY]  Preconditions.checkState(!resolved);  timeout  [FE]                              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  Preconditions.checkState(!resolved);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	Preconditions.checkState(!resolved);	  Preconditions.checkArgument(resolved);    timeout    	compilable	timeout	95	1	replace
277	[BUG]  [BUGGY]  Preconditions.checkState(resolved  ==  null);  [CE]  incomparable  types:  boolean  and  <null>  [FE]                                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  Preconditions.checkState(resolved  ==  null);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	Preconditions.checkState(resolved  ==  null);	  Preconditions.checkArgument(resolved);    timeout    	non-compiled	[CE]  incomparable  types:  boolean  and  <null>	95	None	replace
278	[BUG]  [BUGGY]  Preconditions.checkArgument(resolved!=  null);  [CE]  incomparable  types:  boolean  and  <null>  [FE]                                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  Preconditions.checkArgument(resolved!=  null);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	Preconditions.checkArgument(resolved!=  null);	  Preconditions.checkArgument(resolved);    timeout    	non-compiled	[CE]  incomparable  types:  boolean  and  <null>	95	None	replace
279	[BUG]  [BUGGY]  timeout  [FE]                                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  Preconditions.checkArgument(!resolved);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	add	Preconditions.checkArgument(!resolved);	  Preconditions.checkArgument(resolved);    timeout    	compilable	timeout	95	1	replace
280	[BUG]  [BUGGY]  Preconditions.checkArgument(!resolved);  timeout  [FE]                                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  Preconditions.checkArgument(!resolved);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	Preconditions.checkArgument(!resolved);	  Preconditions.checkArgument(resolved);    timeout    	compilable	timeout	95	1	replace
281	[BUG]  [BUGGY]  Preconditions.checkArgument(resolved  ==  null);  [CE]  incomparable  types:  boolean  and  <null>  [FE]                                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  Preconditions.checkArgument(resolved  ==  null);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	Preconditions.checkArgument(resolved  ==  null);	  Preconditions.checkArgument(resolved);    timeout    	non-compiled	[CE]  incomparable  types:  boolean  and  <null>	95	None	replace
282	[BUG]  [BUGGY]  timeout  [FE]                                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  Preconditions.checkNotNull(registry);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	add	Preconditions.checkNotNull(registry);	  Preconditions.checkArgument(resolved);    timeout    	compilable	timeout	95	1	replace
283	[BUG]  [BUGGY]  Preconditions.checkNotNull(registry);  timeout  [FE]                                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  Preconditions.checkNotNull(registry);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	Preconditions.checkNotNull(registry);	  Preconditions.checkArgument(resolved);    timeout    	compilable	timeout	95	1	replace
284	[BUG]  [BUGGY]  super.resolveType(t,  registry,  enclosing);  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveType(t,  registry,  enclosing);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveType(t,  registry,  enclosing);	  super.resolveType(t,    enclosing,    registry);    	non-compiled	[CE]  cannot  find  symbol	63	None	replace
285	[BUG]  [BUGGY]  super.resolveType(t,  enclosing,  registry,  type);  [CE]  cannot  find  symbol  type  [FE]                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveType(t,  enclosing,  registry,  type);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveType(t,  enclosing,  registry,  type);	  super.resolveType(t,    enclosing,    registry);    	non-compiled	[CE]  cannot  find  symbol  type	63	None	replace
286	[BUG]  [BUGGY]  super.resolveType(t,  enclosing,  registry,  propertyNode);  [CE]  cannot  find  symbol  propertyNode  [FE]                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveType(t,  enclosing,  registry,  propertyNode);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveType(t,  enclosing,  registry,  propertyNode);	  super.resolveType(t,    enclosing,    registry);    	non-compiled	[CE]  cannot  find  symbol  propertyNode	63	None	replace
287	[BUG]  [BUGGY]  super.resolveType(t,  enclosing,  this.registry);  [CE]  cannot  find  symbol  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveType(t,  enclosing,  this.registry);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveType(t,  enclosing,  this.registry);	  super.resolveType(t,    enclosing,    registry);    	non-compiled	[CE]  cannot  find  symbol	63	None	replace
288	[BUG]  [BUGGY]  super.resolveType(t,  enclosing,  registry,  forAnnotations);  [CE]  cannot  find  symbol  forAnnotations  [FE]                            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveType(t,  enclosing,  registry,  forAnnotations);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveType(t,  enclosing,  registry,  forAnnotations);	  super.resolveType(t,    enclosing,    registry);    	non-compiled	[CE]  cannot  find  symbol  forAnnotations	63	None	replace
289	[BUG]  [BUGGY]  super.resolveInternal(t,  handleTypeCycle);  [CE]  cannot  find  symbol  handleTypeCycle  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  handleTypeCycle);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  handleTypeCycle);	  super.resolveInternal(t,    type);    	non-compiled	[CE]  cannot  find  symbol  handleTypeCycle	26	None	replace
290	[BUG]  [BUGGY]  super.resolveInternal(t,  resolve);  [CE]  cannot  find  symbol  resolve  [FE]                            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  resolve);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  resolve);	  super.resolveInternal(t,    type);    	non-compiled	[CE]  cannot  find  symbol  resolve	26	None	replace
291	[BUG]  [BUGGY]  PropertyRegistry  registry  =  propertyNode.getPropertyRegistry();  [CE]  cannot  find  symbol  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  PropertyRegistry  registry  =  propertyNode.getPropertyRegistry();  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	PropertyRegistry  registry  =  propertyNode.getPropertyRegistry();	  PropertyRegistry    registry    =    enclosing.getPropertyRegistry();    	non-compiled	[CE]  cannot  find  symbol	32	None	replace
292	[BUG]  [BUGGY]  PropertyRegistry  registry  =  this.enclosing.getPropertyRegistry();  [CE]  cannot  find  symbol  [FE]                            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  PropertyRegistry  registry  =  this.enclosing.getPropertyRegistry();  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	PropertyRegistry  registry  =  this.enclosing.getPropertyRegistry();	  PropertyRegistry    registry    =    enclosing.getPropertyRegistry();    	non-compiled	[CE]  cannot  find  symbol	32	None	replace
293	[BUG]  [BUGGY]  PropertyRegistry  registry  =  type.getPropertyRegistry();  [CE]  cannot  find  symbol  [FE]                              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  PropertyRegistry  registry  =  type.getPropertyRegistry();  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	PropertyRegistry  registry  =  type.getPropertyRegistry();	  PropertyRegistry    registry    =    enclosing.getPropertyRegistry();    	non-compiled	[CE]  cannot  find  symbol	32	None	replace
294	[BUG]  [BUGGY]  PropertyRegistry  registry  =  parent.getPropertyRegistry();  [CE]  cannot  find  symbol  [FE]                                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  PropertyRegistry  registry  =  parent.getPropertyRegistry();  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	PropertyRegistry  registry  =  parent.getPropertyRegistry();	  PropertyRegistry    registry    =    enclosing.getPropertyRegistry();    	non-compiled	[CE]  cannot  find  symbol	32	None	replace
295	[BUG]  [BUGGY]  PropertyRegistry  registry  =  props.getPropertyRegistry();  [CE]  cannot  find  symbol  [FE]                                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  PropertyRegistry  registry  =  props.getPropertyRegistry();  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	PropertyRegistry  registry  =  props.getPropertyRegistry();	  PropertyRegistry    registry    =    enclosing.getPropertyRegistry();    	non-compiled	[CE]  cannot  find  symbol	32	None	replace
296	[BUG]  [BUGGY]  super.resolveInternal(t,  enclosing,  getPropertyType(),  type,  getReferencedType());  [CE]  method  getPropertyType  in  class  ObjectType  cannot  be  applied  to  given  types;  [FE]                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  enclosing,  getPropertyType(),  type,  getReferencedType());  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  enclosing,  getPropertyType(),  type,  getReferencedType());	  super.resolveInternal(t,    enclosing,    getPropertyType(),    getReferencedType());    	non-compiled	[CE]  method  getPropertyType  in  class  ObjectType  cannot  be  applied  to  given  types;	77	None	replace
297	[BUG]  [BUGGY]  super.resolveInternal(t,  enclosing,  getPropertyType(),  getReferencedType(),  propertyNode);  [CE]  method  getPropertyType  in  class  ObjectType  cannot  be  applied  to  given  types;  [FE]                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  enclosing,  getPropertyType(),  getReferencedType(),  propertyNode);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  enclosing,  getPropertyType(),  getReferencedType(),  propertyNode);	  super.resolveInternal(t,    enclosing,    getPropertyType(),    getReferencedType());    	non-compiled	[CE]  method  getPropertyType  in  class  ObjectType  cannot  be  applied  to  given  types;	77	None	replace
298	[BUG]  [BUGGY]  super.resolveInternal(t,  enclosing,  getPropertyType(),  getReferencedType(),  type);  [CE]  method  getPropertyType  in  class  ObjectType  cannot  be  applied  to  given  types;  [FE]                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  enclosing,  getPropertyType(),  getReferencedType(),  type);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  enclosing,  getPropertyType(),  getReferencedType(),  type);	  super.resolveInternal(t,    enclosing,    getPropertyType(),    getReferencedType());    	non-compiled	[CE]  method  getPropertyType  in  class  ObjectType  cannot  be  applied  to  given  types;	77	None	replace
299	[BUG]  [BUGGY]  super.resolveInternal(t,  enclosing,  getPropertyType(),  handleTypeCycle(t,  getReferencedType());  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  enclosing,  getPropertyType(),  handleTypeCycle(t,  getReferencedType());  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  enclosing,  getPropertyType(),  handleTypeCycle(t,  getReferencedType());	  super.resolveInternal(t,    enclosing,    getPropertyType(),    getReferencedType());    	non-compiled	[CE]  ')'  expected	77	None	replace
300	[BUG]  [BUGGY]  super.resolveInternal(t,  type,  getPropertyType(),  getReferencedType());  [CE]  cannot  find  symbol  type  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  type,  getPropertyType(),  getReferencedType());  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  type,  getPropertyType(),  getReferencedType());	  super.resolveInternal(t,    enclosing,    getPropertyType(),    getReferencedType());    	non-compiled	[CE]  cannot  find  symbol  type	77	None	replace
301	[BUG]  [BUGGY]  super.resolveInternal(t,  enclosing,  type,  getPropertyType(),  getReferencedType());  [CE]  cannot  find  symbol  type  [FE]                            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  enclosing,  type,  getPropertyType(),  getReferencedType());  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  enclosing,  type,  getPropertyType(),  getReferencedType());	  super.resolveInternal(t,    enclosing,    getPropertyType(),    getReferencedType());    	non-compiled	[CE]  cannot  find  symbol  type	77	None	replace
302	[BUG]  [BUGGY]  super.resolveInternal(t,  enclosing,  getPropertyType(),  handleTypeCycle(t,  getReferencedType()));  [CE]  method  getPropertyType  in  class  ObjectType  cannot  be  applied  to  given  types;  [FE]                              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  enclosing,  getPropertyType(),  handleTypeCycle(t,  getReferencedType()));  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  enclosing,  getPropertyType(),  handleTypeCycle(t,  getReferencedType()));	  super.resolveInternal(t,    enclosing,    getPropertyType(),    getReferencedType());    	non-compiled	[CE]  method  getPropertyType  in  class  ObjectType  cannot  be  applied  to  given  types;	77	None	replace
303	[BUG]  [BUGGY]  super.resolveInternal(t,  delegate);  [CE]  cannot  find  symbol  delegate  [FE]                              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  delegate);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  delegate);	  super.resolveInternal(t,    ref);    	non-compiled	[CE]  cannot  find  symbol  delegate	28	None	replace
304	[BUG]  [BUGGY]  super.resolveInternal(t,  resolved,  enclosing,  false);  [CE]  no  suitable  method  found  for  resolveInternal(ErrorReporter,boolean,StaticScope<JSType>,boolean)  [FE]                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  resolved,  enclosing,  false);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  resolved,  enclosing,  false);	  super.resolveInternal(t,    type,    enclosing,    false);    	non-compiled	[CE]  no  suitable  method  found  for  resolveInternal(ErrorReporter,boolean,StaticScope<JSType>,boolean)	5	None	replace
305	[BUG]  [BUGGY]  super.resolveInternal(t,  propertyNode,  enclosing,  false);  [CE]  cannot  find  symbol  propertyNode  [FE]                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  propertyNode,  enclosing,  false);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  propertyNode,  enclosing,  false);	  super.resolveInternal(t,    type,    enclosing,    false);    	non-compiled	[CE]  cannot  find  symbol  propertyNode	5	None	replace
306	[BUG]  [BUGGY]  super.resolveInternal(t,  resolveType,  enclosing,  false);  [CE]  cannot  find  symbol  resolveType  [FE]                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  resolveType,  enclosing,  false);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  resolveType,  enclosing,  false);	  super.resolveInternal(t,    type,    enclosing,    false);    	non-compiled	[CE]  cannot  find  symbol  resolveType	5	None	replace
307	[BUG]  [BUGGY]  super.resolveInternal(t,  refType,  enclosing,  false);  [CE]  cannot  find  symbol  refType  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  refType,  enclosing,  false);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  refType,  enclosing,  false);	  super.resolveInternal(t,    type,    enclosing,    false);    	non-compiled	[CE]  cannot  find  symbol  refType	5	None	replace
308	[BUG]  [BUGGY]  timeout  [FE]                                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  null);  super.resolveInternal(t,  null);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	add	super.resolveInternal(t,    null);    super.resolveInternal(t,  null);	  timeout    	compilable	timeout	30	1	add
309	[BUG]  [BUGGY]  super.resolveInternal(t,  null);  super.resolveInternal(t,  null);  timeout  [FE]                                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  null);  super.resolveInternal(t,  null);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,    null);    super.resolveInternal(t,  null);	  timeout    	compilable	timeout	30	1	add
310	[BUG]  [BUGGY]  super.resolveInternal(t,  null);  Super.resolveInternal(t,  null);  [CE]  cannot  find  symbol  Super  [FE]                                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  null);  Super.resolveInternal(t,  null);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,    null);    Super.resolveInternal(t,  null);	  timeout    	non-compiled	[CE]  cannot  find  symbol  Super	30	None	add
311	[BUG]  [BUGGY]  super.resolveInternal(t,  null);  t  =  super.resolveInternal(t,  null);  [CE]  incompatible  types  [FE]                                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  null);  t  =  super.resolveInternal(t,  null);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,    null);    t  =  super.resolveInternal(t,  null);	  timeout    	non-compiled	[CE]  incompatible  types	30	None	add
312	[BUG]  [BUGGY]  timeout  [FE]                                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  null);  this.resolveInternal(t,  null);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	add	super.resolveInternal(t,    null);    this.resolveInternal(t,  null);	  timeout    	compilable	timeout	30	1	add
313	[BUG]  [BUGGY]  super.resolveInternal(t,  null);  this.resolveInternal(t,  null);  timeout  [FE]                                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  null);  this.resolveInternal(t,  null);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,    null);    this.resolveInternal(t,  null);	  timeout    	compilable	timeout	30	1	add
314	[BUG]  [BUGGY]  super.resolveInternal(t,  null);  t  =  registry.resolveInternal(t,  null);  [CE]  cannot  find  symbol  [FE]                                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  null);  t  =  registry.resolveInternal(t,  null);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,    null);    t  =  registry.resolveInternal(t,  null);	  timeout    	non-compiled	[CE]  cannot  find  symbol	30	None	add
315	[BUG]  [BUGGY]  super.resolveInternal(t,  null);  SUPER.resolveInternal(t,  null);  [CE]  cannot  find  symbol  SUPER  [FE]                                            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  null);  SUPER.resolveInternal(t,  null);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,    null);    SUPER.resolveInternal(t,  null);	  timeout    	non-compiled	[CE]  cannot  find  symbol  SUPER	30	None	add
316	[BUG]  [BUGGY]  super.resolveInternal(t,  enclosing,  PROPERTY);  [CE]  cannot  find  symbol  PROPERTY  [FE]                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  enclosing,  PROPERTY);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  enclosing,  PROPERTY);	  super.resolveInternal(t,    enclosing,    DEFAULT_TYPE);    	non-compiled	[CE]  cannot  find  symbol  PROPERTY	9	None	replace
317	[BUG]  [BUGGY]  super.resolveType(t,  enclosing,  this,  forAnnotations);  [CE]  cannot  find  symbol  forAnnotations  [FE]                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveType(t,  enclosing,  this,  forAnnotations);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveType(t,  enclosing,  this,  forAnnotations);	  super.resolveType(t,    enclosing,    this);    	non-compiled	[CE]  cannot  find  symbol  forAnnotations	90	None	replace
318	[BUG]  [BUGGY]  super.resolveType(t,  enclosing,  this,  propertyNode);  [CE]  cannot  find  symbol  propertyNode  [FE]                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveType(t,  enclosing,  this,  propertyNode);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveType(t,  enclosing,  this,  propertyNode);	  super.resolveType(t,    enclosing,    this);    	non-compiled	[CE]  cannot  find  symbol  propertyNode	90	None	replace
319	[BUG]  [BUGGY]  super.resolveType(t,  enclosing,  this,  registry);  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveType(t,  enclosing,  this,  registry);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveType(t,  enclosing,  this,  registry);	  super.resolveType(t,    enclosing,    this);    	non-compiled	[CE]  cannot  find  symbol	90	None	replace
320	[BUG]  [BUGGY]  super.resolveInternal(t,  enclosing,  reference,  getPropertyName());  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  enclosing,  reference,  getPropertyName());  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  enclosing,  reference,  getPropertyName());	  super.resolveInternal(t,    enclosing,    propertyName,    getPropertyName());    	non-compiled	[CE]  cannot  find  symbol	52	None	replace
321	[BUG]  [BUGGY]  super.resolveInternal(t,  enclosing,  resourceName,  getPropertyName());  [CE]  cannot  find  symbol  resourceName  [FE]                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  enclosing,  resourceName,  getPropertyName());  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  enclosing,  resourceName,  getPropertyName());	  super.resolveInternal(t,    enclosing,    propertyName,    getPropertyName());    	non-compiled	[CE]  cannot  find  symbol  resourceName	52	None	replace
322	[BUG]  [BUGGY]  super.resolveInternal(t,  enclosing,  name,  getPropertyName());  [CE]  cannot  find  symbol  name  [FE]                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  enclosing,  name,  getPropertyName());  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  enclosing,  name,  getPropertyName());	  super.resolveInternal(t,    enclosing,    propertyName,    getPropertyName());    	non-compiled	[CE]  cannot  find  symbol  name	52	None	replace
323	[BUG]  [BUGGY]  super.resolveInternal(t,  enclosing,  getSourceName(),  getPropertyName());  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  enclosing,  getSourceName(),  getPropertyName());  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  enclosing,  getSourceName(),  getPropertyName());	  super.resolveInternal(t,    enclosing,    propertyName,    getPropertyName());    	non-compiled	[CE]  cannot  find  symbol	52	None	replace
324	[BUG]  [BUGGY]  Super.resolveInternal(t,  enclosing,  sourceName,  getPropertyName());  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  Super.resolveInternal(t,  enclosing,  sourceName,  getPropertyName());  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	Super.resolveInternal(t,  enclosing,  sourceName,  getPropertyName());	  super.resolveInternal(t,    enclosing,    propertyName,    getPropertyName());    	non-compiled	[CE]  cannot  find  symbol	52	None	replace
325	[BUG]  [BUGGY]  PropertyRegistry  registry  =  getPropertyRegistry(t,  enclosing);  [CE]  cannot  find  symbol  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  PropertyRegistry  registry  =  getPropertyRegistry(t,  enclosing);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	PropertyRegistry  registry  =  getPropertyRegistry(t,  enclosing);	          PropertyRegistry    registry    =    getPropertyRegistry(enclosing);    	non-compiled	[CE]  cannot  find  symbol	89	None	replace
326	[BUG]  [BUGGY]  PropertyRegistry  registry  =  getPropertyRegistry(propertyNode);  [CE]  cannot  find  symbol  [FE]                            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  PropertyRegistry  registry  =  getPropertyRegistry(propertyNode);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	PropertyRegistry  registry  =  getPropertyRegistry(propertyNode);	          PropertyRegistry    registry    =    getPropertyRegistry(enclosing);    	non-compiled	[CE]  cannot  find  symbol	89	None	replace
327	[BUG]  [BUGGY]  PropertyRegistry  registry  =  getPropertyRegistry(enclosing,  t);  [CE]  cannot  find  symbol  [FE]                              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  PropertyRegistry  registry  =  getPropertyRegistry(enclosing,  t);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	PropertyRegistry  registry  =  getPropertyRegistry(enclosing,  t);	          PropertyRegistry    registry    =    getPropertyRegistry(enclosing);    	non-compiled	[CE]  cannot  find  symbol	89	None	replace
328	[BUG]  [BUGGY]  PropertyRegistry  registry  =  getPropertyRegistry(enclosing,  propertyNode);  [CE]  cannot  find  symbol  [FE]                                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  PropertyRegistry  registry  =  getPropertyRegistry(enclosing,  propertyNode);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	PropertyRegistry  registry  =  getPropertyRegistry(enclosing,  propertyNode);	          PropertyRegistry    registry    =    getPropertyRegistry(enclosing);    	non-compiled	[CE]  cannot  find  symbol	89	None	replace
329	[BUG]  [BUGGY]  PropertyRegistry  registry  =  getPropertyRegistry(type,  enclosing);  [CE]  cannot  find  symbol  [FE]                                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  PropertyRegistry  registry  =  getPropertyRegistry(type,  enclosing);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	PropertyRegistry  registry  =  getPropertyRegistry(type,  enclosing);	          PropertyRegistry    registry    =    getPropertyRegistry(enclosing);    	non-compiled	[CE]  cannot  find  symbol	89	None	replace
330	[BUG]  [BUGGY]  PropertyRegistry  registry  =  getPropertyRegistry(type);  [CE]  cannot  find  symbol  [FE]                                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  PropertyRegistry  registry  =  getPropertyRegistry(type);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	PropertyRegistry  registry  =  getPropertyRegistry(type);	          PropertyRegistry    registry    =    getPropertyRegistry(enclosing);    	non-compiled	[CE]  cannot  find  symbol	89	None	replace
331	[BUG]  [BUGGY]  super.resolvePropertyInternal(t,  enclosing,  this,  forAnnotations);  [CE]  cannot  find  symbol  forAnnotations  [FE]                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolvePropertyInternal(t,  enclosing,  this,  forAnnotations);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolvePropertyInternal(t,  enclosing,  this,  forAnnotations);	  super.resolvePropertyInternal(t,    enclosing,    this);    	non-compiled	[CE]  cannot  find  symbol  forAnnotations	98	None	replace
332	[BUG]  [BUGGY]  super.resolvePropertyInternal(t,  enclosing,  this,  registry);  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolvePropertyInternal(t,  enclosing,  this,  registry);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolvePropertyInternal(t,  enclosing,  this,  registry);	  super.resolvePropertyInternal(t,    enclosing,    this);    	non-compiled	[CE]  cannot  find  symbol	98	None	replace
333	[BUG]  [BUGGY]  super.resolvePropertyInternal(t,  enclosing,  this,  propertyNode);  [CE]  cannot  find  symbol  propertyNode  [FE]                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolvePropertyInternal(t,  enclosing,  this,  propertyNode);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolvePropertyInternal(t,  enclosing,  this,  propertyNode);	  super.resolvePropertyInternal(t,    enclosing,    this);    	non-compiled	[CE]  cannot  find  symbol  propertyNode	98	None	replace
334	[BUG]  [BUGGY]  PropertyRegistry  registry  =  getPropertyRegistry(propertyName,  enclosing);  [CE]  cannot  find  symbol  [FE]                              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  PropertyRegistry  registry  =  getPropertyRegistry(propertyName,  enclosing);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	PropertyRegistry  registry  =  getPropertyRegistry(propertyName,  enclosing);	  PropertyRegistry    registry    =    getPropertyRegistry(propertyName);    	non-compiled	[CE]  cannot  find  symbol	96	None	replace
335	[BUG]  [BUGGY]  PropertyRegistry  registry  =  getPropertyRegistry(propertyName,  reference);  [CE]  cannot  find  symbol  [FE]                                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  PropertyRegistry  registry  =  getPropertyRegistry(propertyName,  reference);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	PropertyRegistry  registry  =  getPropertyRegistry(propertyName,  reference);	  PropertyRegistry    registry    =    getPropertyRegistry(propertyName);    	non-compiled	[CE]  cannot  find  symbol	96	None	replace
336	[BUG]  [BUGGY]  PropertyRegistry  registry  =  getPropertyRegistry(propertyName,  resolved);  [CE]  cannot  find  symbol  [FE]                                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  PropertyRegistry  registry  =  getPropertyRegistry(propertyName,  resolved);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	PropertyRegistry  registry  =  getPropertyRegistry(propertyName,  resolved);	  PropertyRegistry    registry    =    getPropertyRegistry(propertyName);    	non-compiled	[CE]  cannot  find  symbol	96	None	replace
337	[BUG]  [BUGGY]  PropertyRegistry  registry  =  getPropertyRegistry(propertyName,  sourceName);  [CE]  cannot  find  symbol  [FE]                                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  PropertyRegistry  registry  =  getPropertyRegistry(propertyName,  sourceName);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	PropertyRegistry  registry  =  getPropertyRegistry(propertyName,  sourceName);	  PropertyRegistry    registry    =    getPropertyRegistry(propertyName);    	non-compiled	[CE]  cannot  find  symbol	96	None	replace
338	[BUG]  [BUGGY]  PropertyRegistry  registry  =  getPropertyRegistry(propertyName,  null);  [CE]  cannot  find  symbol  [FE]                                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  PropertyRegistry  registry  =  getPropertyRegistry(propertyName,  null);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	PropertyRegistry  registry  =  getPropertyRegistry(propertyName,  null);	  PropertyRegistry    registry    =    getPropertyRegistry(propertyName);    	non-compiled	[CE]  cannot  find  symbol	96	None	replace
339	[BUG]  [BUGGY]  PropertyRegistry  registry  =  getPropertyRegistry(propertyName,  true);  [CE]  cannot  find  symbol  [FE]                                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  PropertyRegistry  registry  =  getPropertyRegistry(propertyName,  true);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	PropertyRegistry  registry  =  getPropertyRegistry(propertyName,  true);	  PropertyRegistry    registry    =    getPropertyRegistry(propertyName);    	non-compiled	[CE]  cannot  find  symbol	96	None	replace
340	[BUG]  [BUGGY]  PropertyRegistry  registry  =  getPropertyRegistry(propertyName,  ref);  [CE]  cannot  find  symbol  [FE]                                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  PropertyRegistry  registry  =  getPropertyRegistry(propertyName,  ref);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	PropertyRegistry  registry  =  getPropertyRegistry(propertyName,  ref);	  PropertyRegistry    registry    =    getPropertyRegistry(propertyName);    	non-compiled	[CE]  cannot  find  symbol	96	None	replace
341	[BUG]  [BUGGY]  super.resolveInternal(t,  forAnnotations,  enclosing,  getPropertyType());  [CE]  cannot  find  symbol  forAnnotations  [FE]                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  forAnnotations,  enclosing,  getPropertyType());  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  forAnnotations,  enclosing,  getPropertyType());	  super.resolveInternal(t,    propertyNode,    enclosing,    getPropertyType());    	non-compiled	[CE]  cannot  find  symbol  forAnnotations	50	None	replace
342	[BUG]  [BUGGY]  super.resolveInternal(t,  enclosing,  getReferencedType(),  type,  false);  [CE]  cannot  find  symbol  type  [FE]            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  enclosing,  getReferencedType(),  type,  false);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  enclosing,  getReferencedType(),  type,  false);	  super.resolveInternal(t,    enclosing,    getReferencedType(),    false);    	non-compiled	[CE]  cannot  find  symbol  type	91	None	replace
343	[BUG]  [BUGGY]  super.resolveInternal(t,  enclosing,  getPropertyType(),  type,  false);  [CE]  method  getPropertyType  in  class  ObjectType  cannot  be  applied  to  given  types;  [FE]              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  enclosing,  getPropertyType(),  type,  false);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  enclosing,  getPropertyType(),  type,  false);	  super.resolveInternal(t,    enclosing,    getReferencedType(),    false);    	non-compiled	[CE]  method  getPropertyType  in  class  ObjectType  cannot  be  applied  to  given  types;	91	None	replace
344	[BUG]  [BUGGY]  super.resolveInternal(t,  type,  getReferencedType(),  false);  [CE]  cannot  find  symbol  type  [FE]                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  type,  getReferencedType(),  false);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  type,  getReferencedType(),  false);	  super.resolveInternal(t,    enclosing,    getReferencedType(),    false);    	non-compiled	[CE]  cannot  find  symbol  type	91	None	replace
345	[BUG]  [BUGGY]  Super.resolveInternal(t,  enclosing,  getReferencedType(),  type,  false);  [CE]  cannot  find  symbol  type  [FE]                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  Super.resolveInternal(t,  enclosing,  getReferencedType(),  type,  false);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	Super.resolveInternal(t,  enclosing,  getReferencedType(),  type,  false);	  super.resolveInternal(t,    enclosing,    getReferencedType(),    false);    	non-compiled	[CE]  cannot  find  symbol  type	91	None	replace
346	[BUG]  [BUGGY]  super.resolveInternal(t,  enclosing,  type,  getReferencedType(),  false);  [CE]  cannot  find  symbol  type  [FE]                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  enclosing,  type,  getReferencedType(),  false);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  enclosing,  type,  getReferencedType(),  false);	  super.resolveInternal(t,    enclosing,    getReferencedType(),    false);    	non-compiled	[CE]  cannot  find  symbol  type	91	None	replace
347	[BUG]  [BUGGY]  super.resolveInternal(t,  enclosing,  getReferencedType(),  null,  false);  [CE]  no  suitable  method  found  for  resolveInternal(ErrorReporter,StaticScope<JSType>,JSType,<null>,boolean)  [FE]                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  enclosing,  getReferencedType(),  null,  false);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  enclosing,  getReferencedType(),  null,  false);	  super.resolveInternal(t,    enclosing,    getReferencedType(),    false);    	non-compiled	[CE]  no  suitable  method  found  for  resolveInternal(ErrorReporter,StaticScope<JSType>,JSType,<null>,boolean)	91	None	replace
348	[BUG]  [BUGGY]  super.resolveInternal(t,  enclosing,  getType(),  type,  false);  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  enclosing,  getType(),  type,  false);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  enclosing,  getType(),  type,  false);	  super.resolveInternal(t,    enclosing,    getReferencedType(),    false);    	non-compiled	[CE]  cannot  find  symbol	91	None	replace
349	[BUG]  [BUGGY]  Predicates.checkNotNull(enclosing,  registry);  [CE]  cannot  find  symbol  Predicates  [FE]                                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  Predicates.checkNotNull(enclosing,  registry);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	Predicates.checkNotNull(enclosing,  registry);	  Predicates.checkNotNull(enclosing);    	non-compiled	[CE]  cannot  find  symbol  Predicates	36	None	replace
350	[BUG]  [BUGGY]  Predicates.checkState(enclosing!=  null);  [CE]  cannot  find  symbol  Predicates  [FE]                                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  Predicates.checkState(enclosing!=  null);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	Predicates.checkState(enclosing!=  null);	  Predicates.checkNotNull(enclosing);    	non-compiled	[CE]  cannot  find  symbol  Predicates	36	None	replace
351	[BUG]  [BUGGY]  Predicates.checkNotNull(enclosing,  validator);  [CE]  cannot  find  symbol  Predicates  [FE]                                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  Predicates.checkNotNull(enclosing,  validator);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	Predicates.checkNotNull(enclosing,  validator);	  Predicates.checkNotNull(enclosing);    	non-compiled	[CE]  cannot  find  symbol  Predicates	36	None	replace
352	[BUG]  [BUGGY]  Predicates.checkNotNull(enclosing,  t);  [CE]  cannot  find  symbol  Predicates  [FE]                                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  Predicates.checkNotNull(enclosing,  t);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	Predicates.checkNotNull(enclosing,  t);	  Predicates.checkNotNull(enclosing);    	non-compiled	[CE]  cannot  find  symbol  Predicates	36	None	replace
353	[BUG]  [BUGGY]  super.resolveType(t,  enclosing,  this.forAnnotations);  [CE]  cannot  find  symbol  forAnnotations  [FE]                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveType(t,  enclosing,  this.forAnnotations);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveType(t,  enclosing,  this.forAnnotations);	  super.resolveType(t,    enclosing,    propertyNode);    	non-compiled	[CE]  cannot  find  symbol  forAnnotations	64	None	replace
354	[BUG]  [BUGGY]  super.resolveType(t,  enclosing,  sourceName);  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveType(t,  enclosing,  sourceName);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveType(t,  enclosing,  sourceName);	  super.resolveType(t,    enclosing,    propertyNode);    	non-compiled	[CE]  cannot  find  symbol	64	None	replace
355	[BUG]  [BUGGY]  super.resolveType(t,  enclosing,  propertyName);  [CE]  cannot  find  symbol  propertyName  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveType(t,  enclosing,  propertyName);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveType(t,  enclosing,  propertyName);	  super.resolveType(t,    enclosing,    propertyNode);    	non-compiled	[CE]  cannot  find  symbol  propertyName	64	None	replace
356	[BUG]  [BUGGY]  super.resolveInternal(t,  enclosing,  getPropertyName(),  type,  null);  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  enclosing,  getPropertyName(),  type,  null);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  enclosing,  getPropertyName(),  type,  null);	  super.resolveInternal(t,    enclosing,    getPropertyName(),    null);    	non-compiled	[CE]  cannot  find  symbol	102	None	replace
357	[BUG]  [BUGGY]  super.resolveInternal(t,  enclosing,  getReferencedType(),  null);  [CE]  no  suitable  method  found  for  resolveInternal(ErrorReporter,StaticScope<JSType>,JSType,<null>)  [FE]                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  enclosing,  getReferencedType(),  null);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  enclosing,  getReferencedType(),  null);	  super.resolveInternal(t,    enclosing,    getPropertyName(),    null);    	non-compiled	[CE]  no  suitable  method  found  for  resolveInternal(ErrorReporter,StaticScope<JSType>,JSType,<null>)	102	None	replace
358	[BUG]  [BUGGY]  super.resolveInternal(t,  enclosing,  getPropertyName(),  this);  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  enclosing,  getPropertyName(),  this);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  enclosing,  getPropertyName(),  this);	  super.resolveInternal(t,    enclosing,    getPropertyName(),    null);    	non-compiled	[CE]  cannot  find  symbol	102	None	replace
359	[BUG]  [BUGGY]  super.resolveInternal(t,  enclosing,  getPropertyName(),  propertyNode,  null);  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  enclosing,  getPropertyName(),  propertyNode,  null);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  enclosing,  getPropertyName(),  propertyNode,  null);	  super.resolveInternal(t,    enclosing,    getPropertyName(),    null);    	non-compiled	[CE]  cannot  find  symbol	102	None	replace
360	[BUG]  [BUGGY]  super.resolveInternal(t,  enclosing,  getPropertyName(),  registry);  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  enclosing,  getPropertyName(),  registry);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  enclosing,  getPropertyName(),  registry);	  super.resolveInternal(t,    enclosing,    getPropertyName(),    null);    	non-compiled	[CE]  cannot  find  symbol	102	None	replace
361	[BUG]  [BUGGY]  super.resolveInternal(t,  enclosing,  getPropertyName(),  null,  type);  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  enclosing,  getPropertyName(),  null,  type);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  enclosing,  getPropertyName(),  null,  type);	  super.resolveInternal(t,    enclosing,    getPropertyName(),    null);    	non-compiled	[CE]  cannot  find  symbol	102	None	replace
362	[BUG]  [BUGGY]  super.resolveInternal(t,  registry,  enclosing,  type);  [CE]  cannot  find  symbol  type  [FE]                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  registry,  enclosing,  type);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  registry,  enclosing,  type);	  super.resolveInternal(t,    registry,    enclosing);    	non-compiled	[CE]  cannot  find  symbol  type	15	None	replace
363	[BUG]  [BUGGY]  super.resolveInternal(t,  registry,  type,  enclosing);  [CE]  cannot  find  symbol  type  [FE]                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  registry,  type,  enclosing);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  registry,  type,  enclosing);	  super.resolveInternal(t,    registry,    enclosing);    	non-compiled	[CE]  cannot  find  symbol  type	15	None	replace
364	[BUG]  [BUGGY]  super.resolveInternal(t,  registry,  enclosing,  forAnnotations);  [CE]  cannot  find  symbol  forAnnotations  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  registry,  enclosing,  forAnnotations);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  registry,  enclosing,  forAnnotations);	  super.resolveInternal(t,    registry,    enclosing);    	non-compiled	[CE]  cannot  find  symbol  forAnnotations	15	None	replace
365	[BUG]  [BUGGY]  super.resolveInternal(t,  registry,  enclosing,  propertyNode);  [CE]  cannot  find  symbol  propertyNode  [FE]                            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  registry,  enclosing,  propertyNode);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  registry,  enclosing,  propertyNode);	  super.resolveInternal(t,    registry,    enclosing);    	non-compiled	[CE]  cannot  find  symbol  propertyNode	15	None	replace
366	[BUG]  [BUGGY]  super.resolveInternal(t,  type,  enclosing);  [CE]  cannot  find  symbol  type  [FE]                              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  type,  enclosing);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  type,  enclosing);	  super.resolveInternal(t,    registry,    enclosing);    	non-compiled	[CE]  cannot  find  symbol  type	15	None	replace
367	[BUG]  [BUGGY]  PropertyRegistry  registry  =  this.propertyRegistry.getPropertyRegistry();  [CE]  cannot  find  symbol  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  PropertyRegistry  registry  =  this.propertyRegistry.getPropertyRegistry();  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	PropertyRegistry  registry  =  this.propertyRegistry.getPropertyRegistry();	  PropertyRegistry    registry    =    t.getPropertyRegistry();    	non-compiled	[CE]  cannot  find  symbol	93	None	replace
368	[BUG]  [BUGGY]  PropertyRegistry  registry  =  t.getPropertyRegistry(propertyName);  [CE]  cannot  find  symbol  [FE]                            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  PropertyRegistry  registry  =  t.getPropertyRegistry(propertyName);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	PropertyRegistry  registry  =  t.getPropertyRegistry(propertyName);	  PropertyRegistry    registry    =    t.getPropertyRegistry();    	non-compiled	[CE]  cannot  find  symbol	93	None	replace
369	[BUG]  [BUGGY]  PropertyRegistry  registry  =  this.t.getPropertyRegistry();  [CE]  cannot  find  symbol  [FE]                              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  PropertyRegistry  registry  =  this.t.getPropertyRegistry();  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	PropertyRegistry  registry  =  this.t.getPropertyRegistry();	  PropertyRegistry    registry    =    t.getPropertyRegistry();    	non-compiled	[CE]  cannot  find  symbol	93	None	replace
370	[BUG]  [BUGGY]  super.resolveInternal(t,  enclosing,  getPropertyNode(),  type,  getReferencedType());  [CE]  method  getPropertyNode  in  class  ObjectType  cannot  be  applied  to  given  types;  [FE]                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  enclosing,  getPropertyNode(),  type,  getReferencedType());  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  enclosing,  getPropertyNode(),  type,  getReferencedType());	  super.resolveInternal(t,    enclosing,    getPropertyNode(),    getReferencedType());    	non-compiled	[CE]  method  getPropertyNode  in  class  ObjectType  cannot  be  applied  to  given  types;	105	None	replace
371	[BUG]  [BUGGY]  super.resolveInternal(t,  enclosing,  getPropertyNode(),  propertyNode,  getReferencedType());  [CE]  method  getPropertyNode  in  class  ObjectType  cannot  be  applied  to  given  types;  [FE]                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  enclosing,  getPropertyNode(),  propertyNode,  getReferencedType());  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  enclosing,  getPropertyNode(),  propertyNode,  getReferencedType());	  super.resolveInternal(t,    enclosing,    getPropertyNode(),    getReferencedType());    	non-compiled	[CE]  method  getPropertyNode  in  class  ObjectType  cannot  be  applied  to  given  types;	105	None	replace
372	[BUG]  [BUGGY]  super.resolveInternal(t,  enclosing,  getPropertyNode(),  handleTypeCycle(t,  getReferencedType()));  [CE]  method  getPropertyNode  in  class  ObjectType  cannot  be  applied  to  given  types;  [FE]                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  enclosing,  getPropertyNode(),  handleTypeCycle(t,  getReferencedType()));  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  enclosing,  getPropertyNode(),  handleTypeCycle(t,  getReferencedType()));	  super.resolveInternal(t,    enclosing,    getPropertyNode(),    getReferencedType());    	non-compiled	[CE]  method  getPropertyNode  in  class  ObjectType  cannot  be  applied  to  given  types;	105	None	replace
373	[BUG]  [BUGGY]  super.resolveInternal(t,  enclosing,  type,  getPropertyNode(),  getReferencedType());  [CE]  cannot  find  symbol  type  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  enclosing,  type,  getPropertyNode(),  getReferencedType());  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  enclosing,  type,  getPropertyNode(),  getReferencedType());	  super.resolveInternal(t,    enclosing,    getPropertyNode(),    getReferencedType());    	non-compiled	[CE]  cannot  find  symbol  type	105	None	replace
374	[BUG]  [BUGGY]  super.resolveInternal(t,  enclosing,  getPropertyNode(),  getReferencedType(),  type);  [CE]  method  getPropertyNode  in  class  ObjectType  cannot  be  applied  to  given  types;  [FE]                            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  enclosing,  getPropertyNode(),  getReferencedType(),  type);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  enclosing,  getPropertyNode(),  getReferencedType(),  type);	  super.resolveInternal(t,    enclosing,    getPropertyNode(),    getReferencedType());    	non-compiled	[CE]  method  getPropertyNode  in  class  ObjectType  cannot  be  applied  to  given  types;	105	None	replace
375	[BUG]  [BUGGY]  super.resolveInternal(t,  enclosing,  getReferencedType(),  getPropertyNode());  [CE]  method  getPropertyNode  in  class  ObjectType  cannot  be  applied  to  given  types;  [FE]                              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  enclosing,  getReferencedType(),  getPropertyNode());  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  enclosing,  getReferencedType(),  getPropertyNode());	  super.resolveInternal(t,    enclosing,    getPropertyNode(),    getReferencedType());    	non-compiled	[CE]  method  getPropertyNode  in  class  ObjectType  cannot  be  applied  to  given  types;	105	None	replace
376	[BUG]  [BUGGY]  super.resolveInternal(t,  enclosing,  propertyNode,  getPropertyNode(),  getReferencedType());  [CE]  cannot  find  symbol  propertyNode  [FE]                                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  enclosing,  propertyNode,  getPropertyNode(),  getReferencedType());  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  enclosing,  propertyNode,  getPropertyNode(),  getReferencedType());	  super.resolveInternal(t,    enclosing,    getPropertyNode(),    getReferencedType());    	non-compiled	[CE]  cannot  find  symbol  propertyNode	105	None	replace
377	[BUG]  [BUGGY]  Super.resolveInternal(t,  enclosing,  propertyNode,  false);  [CE]  cannot  find  symbol  propertyNode  [FE]                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  Super.resolveInternal(t,  enclosing,  propertyNode,  false);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	Super.resolveInternal(t,  enclosing,  propertyNode,  false);	  Super.resolveInternal(t,    enclosing,    type,    false);    	non-compiled	[CE]  cannot  find  symbol  propertyNode	6	None	replace
378	[BUG]  [BUGGY]  Super.resolveInternal(t,  enclosing,  handleTypeCycle,  false);  [CE]  cannot  find  symbol  handleTypeCycle  [FE]                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  Super.resolveInternal(t,  enclosing,  handleTypeCycle,  false);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	Super.resolveInternal(t,  enclosing,  handleTypeCycle,  false);	  Super.resolveInternal(t,    enclosing,    type,    false);    	non-compiled	[CE]  cannot  find  symbol  handleTypeCycle	6	None	replace
379	[BUG]  [BUGGY]  Super.resolveInternal(t,  enclosing,  PROPERTY,  false);  [CE]  cannot  find  symbol  PROPERTY  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  Super.resolveInternal(t,  enclosing,  PROPERTY,  false);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	Super.resolveInternal(t,  enclosing,  PROPERTY,  false);	  Super.resolveInternal(t,    enclosing,    type,    false);    	non-compiled	[CE]  cannot  find  symbol  PROPERTY	6	None	replace
380	[BUG]  [BUGGY]  Super.resolveInternal(t,  enclosing,  type,  true);  [CE]  cannot  find  symbol  type  [FE]                            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  Super.resolveInternal(t,  enclosing,  type,  true);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	Super.resolveInternal(t,  enclosing,  type,  true);	  Super.resolveInternal(t,    enclosing,    type,    false);    	non-compiled	[CE]  cannot  find  symbol  type	6	None	replace
381	[BUG]  [BUGGY]  Super.resolveInternal(t,  enclosing,  prototype,  false);  [CE]  cannot  find  symbol  prototype  [FE]                              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  Super.resolveInternal(t,  enclosing,  prototype,  false);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	Super.resolveInternal(t,  enclosing,  prototype,  false);	  Super.resolveInternal(t,    enclosing,    type,    false);    	non-compiled	[CE]  cannot  find  symbol  prototype	6	None	replace
382	[BUG]  [BUGGY]  Super.resolveInternal(t,  enclosing,  true);  [CE]  cannot  find  symbol  Super  [FE]                                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  Super.resolveInternal(t,  enclosing,  true);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	Super.resolveInternal(t,  enclosing,  true);	  Super.resolveInternal(t,    enclosing,    type,    false);    	non-compiled	[CE]  cannot  find  symbol  Super	6	None	replace
383	[BUG]  [BUGGY]  Super.resolveInternal(t,  enclosing,  DEFAULT_TYPE,  false);  [CE]  cannot  find  symbol  DEFAULT_TYPE  [FE]                                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  Super.resolveInternal(t,  enclosing,  DEFAULT_TYPE,  false);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	Super.resolveInternal(t,  enclosing,  DEFAULT_TYPE,  false);	  Super.resolveInternal(t,    enclosing,    type,    false);    	non-compiled	[CE]  cannot  find  symbol  DEFAULT_TYPE	6	None	replace
384	[BUG]  [BUGGY]  super.resolveInternal(t,  null,  enclosing);  [CE]  no  suitable  method  found  for  resolveInternal(ErrorReporter,<null>,StaticScope<JSType>)  [FE]                                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  null,  enclosing);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  null,  enclosing);	  super.resolveInternal(t,    null);    timeout    	non-compiled	[CE]  no  suitable  method  found  for  resolveInternal(ErrorReporter,<null>,StaticScope<JSType>)	31	None	replace
385	[BUG]  [BUGGY]  super.resolveInternal(t,  null,  forAnnotations);  [CE]  cannot  find  symbol  forAnnotations  [FE]                                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  null,  forAnnotations);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  null,  forAnnotations);	  super.resolveInternal(t,    null);    timeout    	non-compiled	[CE]  cannot  find  symbol  forAnnotations	31	None	replace
386	[BUG]  [BUGGY]  timeout  [FE]                                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  this);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	add	super.resolveInternal(t,  this);	  super.resolveInternal(t,    null);    timeout    	compilable	timeout	31	1	replace
387	[BUG]  [BUGGY]  super.resolveInternal(t,  this);  timeout  [FE]                                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  this);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  this);	  super.resolveInternal(t,    null);    timeout    	compilable	timeout	31	1	replace
388	[BUG]  [BUGGY]  super.resolveInternal(t,  enclosing,  reference,  getReferencedType());  [CE]  no  suitable  method  found  for  resolveInternal(ErrorReporter,StaticScope<JSType>,String,JSType)  [FE]            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  enclosing,  reference,  getReferencedType());  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  enclosing,  reference,  getReferencedType());	  super.resolveInternal(t,    enclosing,    propertyName,    getReferencedType());    	non-compiled	[CE]  no  suitable  method  found  for  resolveInternal(ErrorReporter,StaticScope<JSType>,String,JSType)	73	None	replace
389	[BUG]  [BUGGY]  super.resolveInternal(t,  enclosing,  name,  getReferencedType());  [CE]  cannot  find  symbol  name  [FE]              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  enclosing,  name,  getReferencedType());  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  enclosing,  name,  getReferencedType());	  super.resolveInternal(t,    enclosing,    propertyName,    getReferencedType());    	non-compiled	[CE]  cannot  find  symbol  name	73	None	replace
390	[BUG]  [BUGGY]  super.resolveInternal(t,  enclosing,  resourceName,  getReferencedType());  [CE]  cannot  find  symbol  resourceName  [FE]                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  enclosing,  resourceName,  getReferencedType());  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  enclosing,  resourceName,  getReferencedType());	  super.resolveInternal(t,    enclosing,    propertyName,    getReferencedType());    	non-compiled	[CE]  cannot  find  symbol  resourceName	73	None	replace
391	[BUG]  [BUGGY]  Super.resolveInternal(t,  enclosing,  sourceName,  getReferencedType());  [CE]  cannot  find  symbol  Super  [FE]                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  Super.resolveInternal(t,  enclosing,  sourceName,  getReferencedType());  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	Super.resolveInternal(t,  enclosing,  sourceName,  getReferencedType());	  super.resolveInternal(t,    enclosing,    propertyName,    getReferencedType());    	non-compiled	[CE]  cannot  find  symbol  Super	73	None	replace
392	[BUG]  [BUGGY]  Super.resolveInternal(t,  enclosing,  getReferencedType(),  propertyNode);  [CE]  cannot  find  symbol  propertyNode  [FE]                            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  Super.resolveInternal(t,  enclosing,  getReferencedType(),  propertyNode);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	Super.resolveInternal(t,  enclosing,  getReferencedType(),  propertyNode);	  Super.resolveInternal(t,    enclosing,    getReferencedType(),    type);    	non-compiled	[CE]  cannot  find  symbol  propertyNode	62	None	replace
393	[BUG]  [BUGGY]  Super.resolveInternal(t,  enclosing,  getReferencedType(),  resolved);  [CE]  cannot  find  symbol  Super  [FE]                              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  Super.resolveInternal(t,  enclosing,  getReferencedType(),  resolved);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	Super.resolveInternal(t,  enclosing,  getReferencedType(),  resolved);	  Super.resolveInternal(t,    enclosing,    getReferencedType(),    type);    	non-compiled	[CE]  cannot  find  symbol  Super	62	None	replace
394	[BUG]  [BUGGY]  Super.resolveInternal(t,  enclosing,  getReferencedType(),  handleTypeCycle);  [CE]  cannot  find  symbol  handleTypeCycle  [FE]                                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  Super.resolveInternal(t,  enclosing,  getReferencedType(),  handleTypeCycle);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	Super.resolveInternal(t,  enclosing,  getReferencedType(),  handleTypeCycle);	  Super.resolveInternal(t,    enclosing,    getReferencedType(),    type);    	non-compiled	[CE]  cannot  find  symbol  handleTypeCycle	62	None	replace
395	[BUG]  [BUGGY]  Super.resolveInternal(t,  enclosing,  getReferencedType(),  this);  [CE]  cannot  find  symbol  Super  [FE]                                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  Super.resolveInternal(t,  enclosing,  getReferencedType(),  this);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	Super.resolveInternal(t,  enclosing,  getReferencedType(),  this);	  Super.resolveInternal(t,    enclosing,    getReferencedType(),    type);    	non-compiled	[CE]  cannot  find  symbol  Super	62	None	replace
396	[BUG]  [BUGGY]  Super.resolveInternal(t,  enclosing,  getReferencedType(),  reference);  [CE]  cannot  find  symbol  Super  [FE]                                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  Super.resolveInternal(t,  enclosing,  getReferencedType(),  reference);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	Super.resolveInternal(t,  enclosing,  getReferencedType(),  reference);	  Super.resolveInternal(t,    enclosing,    getReferencedType(),    type);    	non-compiled	[CE]  cannot  find  symbol  Super	62	None	replace
397	[BUG]  [BUGGY]  Super.resolveInternal(t,  enclosing,  getReferencedType(),  detectImplicitPrototypeCycle);  [CE]  cannot  find  symbol  detectImplicitPrototypeCycle  [FE]                                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  Super.resolveInternal(t,  enclosing,  getReferencedType(),  detectImplicitPrototypeCycle);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	Super.resolveInternal(t,  enclosing,  getReferencedType(),  detectImplicitPrototypeCycle);	  Super.resolveInternal(t,    enclosing,    getReferencedType(),    type);    	non-compiled	[CE]  cannot  find  symbol  detectImplicitPrototypeCycle	62	None	replace
398	[BUG]  [BUGGY]  super.resolveInternal(t,  enclosing,  propertyNode,  getPropertyNode());  [CE]  cannot  find  symbol  propertyNode  [FE]            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  enclosing,  propertyNode,  getPropertyNode());  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  enclosing,  propertyNode,  getPropertyNode());	  super.resolveInternal(t,    enclosing,    getPropertyNode());    	non-compiled	[CE]  cannot  find  symbol  propertyNode	99	None	replace
399	[BUG]  [BUGGY]  super.resolveInternal(t,  enclosing,  getPropertyNode(),  type);  [CE]  method  getPropertyNode  in  class  ObjectType  cannot  be  applied  to  given  types;  [FE]              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  enclosing,  getPropertyNode(),  type);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  enclosing,  getPropertyNode(),  type);	  super.resolveInternal(t,    enclosing,    getPropertyNode());    	non-compiled	[CE]  method  getPropertyNode  in  class  ObjectType  cannot  be  applied  to  given  types;	99	None	replace
400	[BUG]  [BUGGY]  super.resolveInternal(t,  propertyNode,  enclosing,  getPropertyNode());  [CE]  cannot  find  symbol  propertyNode  [FE]                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  propertyNode,  enclosing,  getPropertyNode());  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  propertyNode,  enclosing,  getPropertyNode());	  super.resolveInternal(t,    enclosing,    getPropertyNode());    	non-compiled	[CE]  cannot  find  symbol  propertyNode	99	None	replace
401	[BUG]  [BUGGY]  super.resolveInternal(t,  enclosing,  type,  getPropertyNode());  [CE]  cannot  find  symbol  type  [FE]                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  enclosing,  type,  getPropertyNode());  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  enclosing,  type,  getPropertyNode());	  super.resolveInternal(t,    enclosing,    getPropertyNode());    	non-compiled	[CE]  cannot  find  symbol  type	99	None	replace
402	[BUG]  [BUGGY]  super.resolveInternal(t,  type,  enclosing,  getPropertyNode());  [CE]  cannot  find  symbol  type  [FE]                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  type,  enclosing,  getPropertyNode());  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  type,  enclosing,  getPropertyNode());	  super.resolveInternal(t,    enclosing,    getPropertyNode());    	non-compiled	[CE]  cannot  find  symbol  type	99	None	replace
403	[BUG]  [BUGGY]  super.resolveInternal(t,  enclosing,  registry,  detectImplicitPrototypeCycle());  [CE]  no  suitable  method  found  for  resolveInternal(ErrorReporter,StaticScope<JSType>,JSTypeRegistry,boolean)  [FE]                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  enclosing,  registry,  detectImplicitPrototypeCycle());  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  enclosing,  registry,  detectImplicitPrototypeCycle());	  super.resolveInternal(t,    enclosing,    registry,    inferred);    	non-compiled	[CE]  no  suitable  method  found  for  resolveInternal(ErrorReporter,StaticScope<JSType>,JSTypeRegistry,boolean)	81	None	replace
404	[BUG]  [BUGGY]  super.resolveInternal(t,  enclosing,  registry,  handleTypeCycle(t));  [CE]  'void'  type  not  allowed  here  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  enclosing,  registry,  handleTypeCycle(t));  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  enclosing,  registry,  handleTypeCycle(t));	  super.resolveInternal(t,    enclosing,    registry,    inferred);    	non-compiled	[CE]  'void'  type  not  allowed  here	81	None	replace
405	[BUG]  [BUGGY]  super.resolveInternal(t,  enclosing,  registry,  detectImplicitPrototypeCycle);  [CE]  cannot  find  symbol  detectImplicitPrototypeCycle  [FE]                            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  enclosing,  registry,  detectImplicitPrototypeCycle);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  enclosing,  registry,  detectImplicitPrototypeCycle);	  super.resolveInternal(t,    enclosing,    registry,    inferred);    	non-compiled	[CE]  cannot  find  symbol  detectImplicitPrototypeCycle	81	None	replace
406	[BUG]  [BUGGY]  super.resolveInternal(t,  enclosing,  type,  null);  [CE]  cannot  find  symbol  type  [FE]            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  enclosing,  type,  null);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  enclosing,  type,  null);	  super.resolveInternal(t,    enclosing,    null);    	non-compiled	[CE]  cannot  find  symbol  type	12	None	replace
407	[BUG]  [BUGGY]  super.resolveInternal(t,  type,  enclosing,  null);  [CE]  cannot  find  symbol  type  [FE]              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  type,  enclosing,  null);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  type,  enclosing,  null);	  super.resolveInternal(t,    enclosing,    null);    	non-compiled	[CE]  cannot  find  symbol  type	12	None	replace
408	[BUG]  [BUGGY]  super.resolveInternal(t,  enclosing,  propertyNode,  null);  [CE]  cannot  find  symbol  propertyNode  [FE]                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  enclosing,  propertyNode,  null);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  enclosing,  propertyNode,  null);	  super.resolveInternal(t,    enclosing,    null);    	non-compiled	[CE]  cannot  find  symbol  propertyNode	12	None	replace
409	[BUG]  [BUGGY]  Super.resolveInternal(t,  enclosing,  type,  null);  [CE]  cannot  find  symbol  type  [FE]                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  Super.resolveInternal(t,  enclosing,  type,  null);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	Super.resolveInternal(t,  enclosing,  type,  null);	  super.resolveInternal(t,    enclosing,    null);    	non-compiled	[CE]  cannot  find  symbol  type	12	None	replace
410	[BUG]  [BUGGY]  super.resolveInternal(t,  enclosing,  null,  type);  [CE]  cannot  find  symbol  type  [FE]                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  enclosing,  null,  type);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  enclosing,  null,  type);	  super.resolveInternal(t,    enclosing,    null);    	non-compiled	[CE]  cannot  find  symbol  type	12	None	replace
411	[BUG]  [BUGGY]  super.resolveInternal(t,  enclosing,  type,  null,  false);  [CE]  cannot  find  symbol  type  [FE]                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  enclosing,  type,  null,  false);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  enclosing,  type,  null,  false);	  super.resolveInternal(t,    enclosing,    null,    false);    	non-compiled	[CE]  cannot  find  symbol  type	4	None	replace
412	[BUG]  [BUGGY]  super.resolveInternal(t,  enclosing,  propertyNode,  null,  false);  [CE]  cannot  find  symbol  propertyNode  [FE]                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  enclosing,  propertyNode,  null,  false);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  enclosing,  propertyNode,  null,  false);	  super.resolveInternal(t,    enclosing,    null,    false);    	non-compiled	[CE]  cannot  find  symbol  propertyNode	4	None	replace
413	[BUG]  [BUGGY]  super.resolveInternal(t,  enclosing,  registry,  null,  false);  [CE]  no  suitable  method  found  for  resolveInternal(ErrorReporter,StaticScope<JSType>,JSTypeRegistry,<null>,boolean)  [FE]                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  enclosing,  registry,  null,  false);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  enclosing,  registry,  null,  false);	  super.resolveInternal(t,    enclosing,    null,    false);    	non-compiled	[CE]  no  suitable  method  found  for  resolveInternal(ErrorReporter,StaticScope<JSType>,JSTypeRegistry,<null>,boolean)	4	None	replace
414	[BUG]  [BUGGY]  super.resolveInternal(t,  type,  enclosing,  null,  false);  [CE]  cannot  find  symbol  type  [FE]                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  type,  enclosing,  null,  false);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  type,  enclosing,  null,  false);	  super.resolveInternal(t,    enclosing,    null,    false);    	non-compiled	[CE]  cannot  find  symbol  type	4	None	replace
415	[BUG]  [BUGGY]  super.resolveInternal(t,  enclosing,  properties,  null,  false);  [CE]  cannot  find  symbol  properties  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  enclosing,  properties,  null,  false);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  enclosing,  properties,  null,  false);	  super.resolveInternal(t,    enclosing,    null,    false);    	non-compiled	[CE]  cannot  find  symbol  properties	4	None	replace
416	[BUG]  [BUGGY]  super.resolveInternal(t,  enclosing,  PROPERTY,  null,  false);  [CE]  cannot  find  symbol  PROPERTY  [FE]                            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  enclosing,  PROPERTY,  null,  false);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  enclosing,  PROPERTY,  null,  false);	  super.resolveInternal(t,    enclosing,    null,    false);    	non-compiled	[CE]  cannot  find  symbol  PROPERTY	4	None	replace
417	[BUG]  [BUGGY]  super.resolveInternal(t,  enclosing,  propertyNode,  getPropertyType(),  getReferencedType());  [CE]  cannot  find  symbol  propertyNode  [FE]                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  enclosing,  propertyNode,  getPropertyType(),  getReferencedType());  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  enclosing,  propertyNode,  getPropertyType(),  getReferencedType());	  super.resolveInternal(t,    enclosing,    getPropertyType(),    getReferencedType());    	non-compiled	[CE]  cannot  find  symbol  propertyNode	77	None	replace
418	[BUG]  [BUGGY]  super.resolveInternal(t,  enclosing,  propertyName,  getPropertyType(),  getReferencedType());  [CE]  cannot  find  symbol  propertyName  [FE]                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  enclosing,  propertyName,  getPropertyType(),  getReferencedType());  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  enclosing,  propertyName,  getPropertyType(),  getReferencedType());	  super.resolveInternal(t,    enclosing,    getPropertyType(),    getReferencedType());    	non-compiled	[CE]  cannot  find  symbol  propertyName	77	None	replace
419	[BUG]  [BUGGY]  PrototypeRegistry.resolveInternal(t,  enclosing);  [CE]  cannot  find  symbol  PrototypeRegistry  [FE]                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  PrototypeRegistry.resolveInternal(t,  enclosing);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	PrototypeRegistry.resolveInternal(t,  enclosing);	  Super.resolveInternal(t,    enclosing);    	non-compiled	[CE]  cannot  find  symbol  PrototypeRegistry	103	None	replace
420	[BUG]  [BUGGY]  Super.resolveInternal(t,  enclosing,  getReferencedType());  [CE]  cannot  find  symbol  Super  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  Super.resolveInternal(t,  enclosing,  getReferencedType());  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	Super.resolveInternal(t,  enclosing,  getReferencedType());	  Super.resolveInternal(t,    enclosing);    	non-compiled	[CE]  cannot  find  symbol  Super	103	None	replace
421	[BUG]  [BUGGY]  super.resolveInternal(t,  sourceName,  reference);  [CE]  no  suitable  method  found  for  resolveInternal(ErrorReporter,String,String)  [FE]                                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  sourceName,  reference);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  sourceName,  reference);	  super.resolveInternal(t,    reference);    	non-compiled	[CE]  no  suitable  method  found  for  resolveInternal(ErrorReporter,String,String)	29	None	replace
422	[BUG]  [BUGGY]  super.resolveInternal(t,  propertyName,  reference);  [CE]  cannot  find  symbol  propertyName  [FE]                                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  propertyName,  reference);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  propertyName,  reference);	  super.resolveInternal(t,    reference);    	non-compiled	[CE]  cannot  find  symbol  propertyName	29	None	replace
423	[BUG]  [BUGGY]  super.resolvePropertyInternal(t,  enclosing,  deferred);  [CE]  cannot  find  symbol  deferred  [FE]                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolvePropertyInternal(t,  enclosing,  deferred);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolvePropertyInternal(t,  enclosing,  deferred);	  super.resolvePropertyInternal(t,    enclosing,    type);    	non-compiled	[CE]  cannot  find  symbol  deferred	39	None	replace
424	[BUG]  [BUGGY]  super.resolvePropertyInternal(t,  enclosing,  def);  [CE]  cannot  find  symbol  def  [FE]                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolvePropertyInternal(t,  enclosing,  def);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolvePropertyInternal(t,  enclosing,  def);	  super.resolvePropertyInternal(t,    enclosing,    type);    	non-compiled	[CE]  cannot  find  symbol  def	39	None	replace
425	[BUG]  [BUGGY]  super.resolveInternal(t,  enclosing,  getReferencedType(),  inferred);  [CE]  cannot  find  symbol  inferred  [FE]                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  enclosing,  getReferencedType(),  inferred);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  enclosing,  getReferencedType(),  inferred);	  super.resolveInternal(t,    enclosing,    getReferencedType(),    type);    	non-compiled	[CE]  cannot  find  symbol  inferred	57	None	replace
426	[BUG]  [BUGGY]  super.resolveInternal(t,  enclosing,  getReferencedType(),  detectImplicitPrototypeCycle());  [CE]  no  suitable  method  found  for  resolveInternal(ErrorReporter,StaticScope<JSType>,JSType,boolean)  [FE]                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  enclosing,  getReferencedType(),  detectImplicitPrototypeCycle());  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  enclosing,  getReferencedType(),  detectImplicitPrototypeCycle());	  super.resolveInternal(t,    enclosing,    getReferencedType(),    type);    	non-compiled	[CE]  no  suitable  method  found  for  resolveInternal(ErrorReporter,StaticScope<JSType>,JSType,boolean)	57	None	replace
427	[BUG]  [BUGGY]  timeout  [FE]                            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  Preconditions.checkArgument(resolved);  Preconditions.checkArgument(resolved);Preconditions.checkArgument(resolved);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	add	Preconditions.checkArgument(resolved);    Preconditions.checkArgument(resolved);Preconditions.checkArgument(resolved);	  timeout    	compilable	timeout	94	1	add
428	[BUG]  [BUGGY]  Preconditions.checkArgument(resolved);  Preconditions.checkArgument(resolved);Preconditions.checkArgument(resolved);  timeout  [FE]                            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  Preconditions.checkArgument(resolved);  Preconditions.checkArgument(resolved);Preconditions.checkArgument(resolved);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	Preconditions.checkArgument(resolved);    Preconditions.checkArgument(resolved);Preconditions.checkArgument(resolved);	  timeout    	compilable	timeout	94	1	add
429	[BUG]  [BUGGY]  Preconditions.checkArgument(resolved);  Preconditions.checkArgument(resolved);  getReferencedType().setPropertyIndex(propertyName);  [CE]  cannot  find  symbol  propertyName  [FE]                              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  Preconditions.checkArgument(resolved);  Preconditions.checkArgument(resolved);  getReferencedType().setPropertyIndex(propertyName);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	Preconditions.checkArgument(resolved);    Preconditions.checkArgument(resolved);  getReferencedType().setPropertyIndex(propertyName);	  timeout    	non-compiled	[CE]  cannot  find  symbol  propertyName	94	None	add
430	[BUG]  [BUGGY]  Preconditions.checkArgument(resolved);  Preconditions.checkArgument(resolved);  setPropertyContinuations(propertyNode,  enclosing);  [CE]  cannot  find  symbol  propertyNode  [FE]                                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  Preconditions.checkArgument(resolved);  Preconditions.checkArgument(resolved);  setPropertyContinuations(propertyNode,  enclosing);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	Preconditions.checkArgument(resolved);    Preconditions.checkArgument(resolved);  setPropertyContinuations(propertyNode,  enclosing);	  timeout    	non-compiled	[CE]  cannot  find  symbol  propertyNode	94	None	add
431	[BUG]  [BUGGY]  Preconditions.checkArgument(resolved);  Preconditions.checkArgument(resolved);  getReferencedType().setPropertyIndex(propertyIndex);  [CE]  cannot  find  symbol  propertyIndex  [FE]                                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  Preconditions.checkArgument(resolved);  Preconditions.checkArgument(resolved);  getReferencedType().setPropertyIndex(propertyIndex);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	Preconditions.checkArgument(resolved);    Preconditions.checkArgument(resolved);  getReferencedType().setPropertyIndex(propertyIndex);	  timeout    	non-compiled	[CE]  cannot  find  symbol  propertyIndex	94	None	add
432	[BUG]  [BUGGY]  Preconditions.checkArgument(resolved);  Preconditions.checkArgument(resolved);  getReferencedType().setImplicitPrototypeCycle(null);  [CE]  cannot  find  symbol  [FE]                                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  Preconditions.checkArgument(resolved);  Preconditions.checkArgument(resolved);  getReferencedType().setImplicitPrototypeCycle(null);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	Preconditions.checkArgument(resolved);    Preconditions.checkArgument(resolved);  getReferencedType().setImplicitPrototypeCycle(null);	  timeout    	non-compiled	[CE]  cannot  find  symbol	94	None	add
433	[BUG]  [BUGGY]  Preconditions.checkArgument(resolved);  Preconditions.checkArgument(resolved);  getReferencedType().setAccessible(true);  [CE]  cannot  find  symbol  [FE]                                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  Preconditions.checkArgument(resolved);  Preconditions.checkArgument(resolved);  getReferencedType().setAccessible(true);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	Preconditions.checkArgument(resolved);    Preconditions.checkArgument(resolved);  getReferencedType().setAccessible(true);	  timeout    	non-compiled	[CE]  cannot  find  symbol	94	None	add
434	[BUG]  [BUGGY]  super.resolveInternal(t,  enclosing,  registration);  [CE]  cannot  find  symbol  registration  [FE]                              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  enclosing,  registration);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  enclosing,  registration);	  super.resolveInternal(registry,    enclosing,    t);    	non-compiled	[CE]  cannot  find  symbol  registration	19	None	replace
435	[BUG]  [BUGGY]  super.resolveInternal(t,  enclosing,  registry,  getReferencedType());  [CE]  no  suitable  method  found  for  resolveInternal(ErrorReporter,StaticScope<JSType>,JSTypeRegistry,JSType)  [FE]                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  enclosing,  registry,  getReferencedType());  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  enclosing,  registry,  getReferencedType());	  super.resolveInternal(t,    enclosing,    propertyNode,    getReferencedType());    	non-compiled	[CE]  no  suitable  method  found  for  resolveInternal(ErrorReporter,StaticScope<JSType>,JSTypeRegistry,JSType)	60	None	replace
436	[BUG]  [BUGGY]  super.resolveInternal(t,  enclosing,  null,  getReferencedType());  [CE]  no  suitable  method  found  for  resolveInternal(ErrorReporter,StaticScope<JSType>,<null>,JSType)  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  enclosing,  null,  getReferencedType());  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  enclosing,  null,  getReferencedType());	  super.resolveInternal(t,    enclosing,    propertyNode,    getReferencedType());    	non-compiled	[CE]  no  suitable  method  found  for  resolveInternal(ErrorReporter,StaticScope<JSType>,<null>,JSType)	60	None	replace
437	[BUG]  [BUGGY]  super.resolveType(t,  enclosing,  inferred);  [CE]  cannot  find  symbol  inferred  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveType(t,  enclosing,  inferred);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveType(t,  enclosing,  inferred);	  super.resolveType(t,    enclosing,    forAnnotations);    	non-compiled	[CE]  cannot  find  symbol  inferred	66	None	replace
438	[BUG]  [BUGGY]  super.resolveType(t,  enclosing,  this.propertyNode);  [CE]  cannot  find  symbol  propertyNode  [FE]                            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveType(t,  enclosing,  this.propertyNode);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveType(t,  enclosing,  this.propertyNode);	  super.resolveType(t,    enclosing,    forAnnotations);    	non-compiled	[CE]  cannot  find  symbol  propertyNode	66	None	replace
439	[BUG]  [BUGGY]  super.resolveType(t,  enclosing,  deferred);  [CE]  cannot  find  symbol  deferred  [FE]                              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveType(t,  enclosing,  deferred);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveType(t,  enclosing,  deferred);	  super.resolveType(t,    enclosing,    forAnnotations);    	non-compiled	[CE]  cannot  find  symbol  deferred	66	None	replace
440	[BUG]  [BUGGY]  super.resolveInternal(t,  resolveViaProperties);  [CE]  cannot  find  symbol  resolveViaProperties  [FE]                              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  resolveViaProperties);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  resolveViaProperties);	  super.resolveInternal(t,    ref);    	non-compiled	[CE]  cannot  find  symbol  resolveViaProperties	28	None	replace
441	[BUG]  [BUGGY]  super.resolveInternal(t,  enclosing,  getPropertyName(),  type,  inferred);  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  enclosing,  getPropertyName(),  type,  inferred);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  enclosing,  getPropertyName(),  type,  inferred);	  super.resolveInternal(t,    enclosing,    getPropertyName(),    type);    	non-compiled	[CE]  cannot  find  symbol	51	None	replace
442	[BUG]  [BUGGY]  super.resolveInternal(t,  enclosing,  propertyName,  getPropertyName(),  type);  [CE]  cannot  find  symbol  propertyName  [FE]              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  enclosing,  propertyName,  getPropertyName(),  type);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  enclosing,  propertyName,  getPropertyName(),  type);	  super.resolveInternal(t,    enclosing,    getPropertyName(),    type);    	non-compiled	[CE]  cannot  find  symbol  propertyName	51	None	replace
443	[BUG]  [BUGGY]  super.resolveInternal(t,  enclosing,  getPropertyName(),  type,  false);  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  enclosing,  getPropertyName(),  type,  false);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  enclosing,  getPropertyName(),  type,  false);	  super.resolveInternal(t,    enclosing,    getPropertyName(),    type);    	non-compiled	[CE]  cannot  find  symbol	51	None	replace
444	[BUG]  [BUGGY]  PropertyRegistry  registry  =  scope.getPropertyRegistry();  [CE]  cannot  find  symbol  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  PropertyRegistry  registry  =  scope.getPropertyRegistry();  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	PropertyRegistry  registry  =  scope.getPropertyRegistry();	  PropertyRegistry    registry    =    t.getPropertyRegistry();    	non-compiled	[CE]  cannot  find  symbol	93	None	replace
445	[BUG]  [BUGGY]  super.resolveInternal(t,  enclosing,  propertyName,  type);  [CE]  cannot  find  symbol  propertyName  [FE]              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  enclosing,  propertyName,  type);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  enclosing,  propertyName,  type);	  super.resolveInternal(t,    enclosing,    sourceName);    	non-compiled	[CE]  cannot  find  symbol  propertyName	85	None	replace
446	[BUG]  [BUGGY]  super.resolveInternal(t,  enclosing,  propertyName,  null);  [CE]  cannot  find  symbol  propertyName  [FE]                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  enclosing,  propertyName,  null);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  enclosing,  propertyName,  null);	  super.resolveInternal(t,    enclosing,    sourceName);    	non-compiled	[CE]  cannot  find  symbol  propertyName	85	None	replace
447	[BUG]  [BUGGY]  super.resolveInternal(t,  enclosing,  propertyName,  inferred);  [CE]  cannot  find  symbol  propertyName  [FE]                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  enclosing,  propertyName,  inferred);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  enclosing,  propertyName,  inferred);	  super.resolveInternal(t,    enclosing,    sourceName);    	non-compiled	[CE]  cannot  find  symbol  propertyName	85	None	replace
448	[BUG]  [BUGGY]  super.resolveInternal(t,  enclosing,  propertyName,  resolved);  [CE]  cannot  find  symbol  propertyName  [FE]                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  enclosing,  propertyName,  resolved);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  enclosing,  propertyName,  resolved);	  super.resolveInternal(t,    enclosing,    sourceName);    	non-compiled	[CE]  cannot  find  symbol  propertyName	85	None	replace
449	[BUG]  [BUGGY]  super.resolveInternal(t,  enclosing,  propertyName,  scope);  [CE]  cannot  find  symbol  propertyName  [FE]                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  enclosing,  propertyName,  scope);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  enclosing,  propertyName,  scope);	  super.resolveInternal(t,    enclosing,    sourceName);    	non-compiled	[CE]  cannot  find  symbol  propertyName	85	None	replace
450	[BUG]  [BUGGY]  super.resolveInternal(t,  enclosing,  false,  inferred);  [CE]  cannot  find  symbol  inferred  [FE]              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  enclosing,  false,  inferred);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  enclosing,  false,  inferred);	  super.resolveInternal(t,    enclosing,    false,    propertyNode);    	non-compiled	[CE]  cannot  find  symbol  inferred	87	None	replace
451	[BUG]  [BUGGY]  super.resolveInternal(t,  enclosing,  getReferencedType(),  registry);  [CE]  no  suitable  method  found  for  resolveInternal(ErrorReporter,StaticScope<JSType>,JSType,JSTypeRegistry)  [FE]                            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  enclosing,  getReferencedType(),  registry);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  enclosing,  getReferencedType(),  registry);	  super.resolveInternal(t,    enclosing,    type,    registry);    	non-compiled	[CE]  no  suitable  method  found  for  resolveInternal(ErrorReporter,StaticScope<JSType>,JSType,JSTypeRegistry)	18	None	replace
452	[BUG]  [BUGGY]  super.resolveInternal(t,  enclosing,  registry,  enclosing);  [CE]  no  suitable  method  found  for  resolveInternal(ErrorReporter,StaticScope<JSType>,JSTypeRegistry,StaticScope<JSType>)  [FE]                              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  enclosing,  registry,  enclosing);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  enclosing,  registry,  enclosing);	  super.resolveInternal(t,    enclosing,    type,    registry);    	non-compiled	[CE]  no  suitable  method  found  for  resolveInternal(ErrorReporter,StaticScope<JSType>,JSTypeRegistry,StaticScope<JSType>)	18	None	replace
453	[BUG]  [BUGGY]  super.resolveInternal(t,  enclosing,  PROPERTY,  registry);  [CE]  cannot  find  symbol  PROPERTY  [FE]                                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  enclosing,  PROPERTY,  registry);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  enclosing,  PROPERTY,  registry);	  super.resolveInternal(t,    enclosing,    type,    registry);    	non-compiled	[CE]  cannot  find  symbol  PROPERTY	18	None	replace
454	[BUG]  [BUGGY]  super.resolveInternal(t,  enclosing,  getReferencedType(),  true);  [CE]  no  suitable  method  found  for  resolveInternal(ErrorReporter,StaticScope<JSType>,JSType,boolean)  [FE]              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  enclosing,  getReferencedType(),  true);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  enclosing,  getReferencedType(),  true);	  super.resolveInternal(t,    enclosing,    true);    	non-compiled	[CE]  no  suitable  method  found  for  resolveInternal(ErrorReporter,StaticScope<JSType>,JSType,boolean)	2	None	replace
455	[BUG]  [BUGGY]  super.resolveInternal(t,  enclosing,  true,  propertyNode);  [CE]  cannot  find  symbol  propertyNode  [FE]                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  enclosing,  true,  propertyNode);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  enclosing,  true,  propertyNode);	  super.resolveInternal(t,    enclosing,    true);    	non-compiled	[CE]  cannot  find  symbol  propertyNode	2	None	replace
456	[BUG]  [BUGGY]  super.resolveInternal(t,  enclosing,  getPropertyName(),  getReferencedType(),  sourceName);  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  enclosing,  getPropertyName(),  getReferencedType(),  sourceName);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  enclosing,  getPropertyName(),  getReferencedType(),  sourceName);	  super.resolveInternal(t,    enclosing,    getPropertyName(),    getReferencedType());    	non-compiled	[CE]  cannot  find  symbol	78	None	replace
457	[BUG]  [BUGGY]  super.resolveInternal(t,  enclosing,  getPropertyName(),  getType());  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  enclosing,  getPropertyName(),  getType());  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  enclosing,  getPropertyName(),  getType());	  super.resolveInternal(t,    enclosing,    getPropertyName(),    getReferencedType());    	non-compiled	[CE]  cannot  find  symbol	78	None	replace
458	[BUG]  [BUGGY]  PropertyRegistry  registry  =  getPropertyRegistry(resolved);  [CE]  cannot  find  symbol  [FE]                                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  PropertyRegistry  registry  =  getPropertyRegistry(resolved);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	PropertyRegistry  registry  =  getPropertyRegistry(resolved);	  PropertyRegistry    registry    =    getPropertyRegistry();    	non-compiled	[CE]  cannot  find  symbol	35	None	replace
459	[BUG]  [BUGGY]  PropertyRegistry  registry  =  getPropertyRegistry(null);  [CE]  cannot  find  symbol  [FE]                                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  PropertyRegistry  registry  =  getPropertyRegistry(null);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	PropertyRegistry  registry  =  getPropertyRegistry(null);	  PropertyRegistry    registry    =    getPropertyRegistry();    	non-compiled	[CE]  cannot  find  symbol	35	None	replace
460	[BUG]  [BUGGY]  PropertyRegistry  registry  =  getPropertyRegistry().getNativeType(JSTypeNative.OBJECT_TYPE);  [CE]  cannot  find  symbol  [FE]                                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  PropertyRegistry  registry  =  getPropertyRegistry().getNativeType(JSTypeNative.OBJECT_TYPE);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	PropertyRegistry  registry  =  getPropertyRegistry().getNativeType(JSTypeNative.OBJECT_TYPE);	  PropertyRegistry    registry    =    getPropertyRegistry();    	non-compiled	[CE]  cannot  find  symbol	35	None	replace
461	[BUG]  [BUGGY]  super.resolveInternal(t,  enclosing,  PROPERTY,  getPropertyType());  [CE]  cannot  find  symbol  PROPERTY  [FE]                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  enclosing,  PROPERTY,  getPropertyType());  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  enclosing,  PROPERTY,  getPropertyType());	  super.resolveInternal(t,    enclosing,    type,    getPropertyType());    	non-compiled	[CE]  cannot  find  symbol  PROPERTY	46	None	replace
462	[BUG]  [BUGGY]  super.resolveInternal(t,  enclosing,  DETECTED_PROTOTYPE_CYCLE,  getPropertyType());  [CE]  cannot  find  symbol  DETECTED_PROTOTYPE_CYCLE  [FE]                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  enclosing,  DETECTED_PROTOTYPE_CYCLE,  getPropertyType());  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  enclosing,  DETECTED_PROTOTYPE_CYCLE,  getPropertyType());	  super.resolveInternal(t,    enclosing,    type,    getPropertyType());    	non-compiled	[CE]  cannot  find  symbol  DETECTED_PROTOTYPE_CYCLE	46	None	replace
463	[BUG]  [BUGGY]  PropertyRegistry  registry  =  getPropertyRegistry(propertyNode,  enclosing);  [CE]  cannot  find  symbol  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  PropertyRegistry  registry  =  getPropertyRegistry(propertyNode,  enclosing);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	PropertyRegistry  registry  =  getPropertyRegistry(propertyNode,  enclosing);	          PropertyRegistry    registry    =    getPropertyRegistry(enclosing);    	non-compiled	[CE]  cannot  find  symbol	89	None	replace
464	[BUG]  [BUGGY]  PropertyRegistry  registry  =  getPropertyRegistry(enclosing,  type);  [CE]  cannot  find  symbol  [FE]                            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  PropertyRegistry  registry  =  getPropertyRegistry(enclosing,  type);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	PropertyRegistry  registry  =  getPropertyRegistry(enclosing,  type);	          PropertyRegistry    registry    =    getPropertyRegistry(enclosing);    	non-compiled	[CE]  cannot  find  symbol	89	None	replace
465	[BUG]  [BUGGY]  super.resolveInternal(t,  enclosing,  propertyName,  getPropertyName(),  null);  [CE]  cannot  find  symbol  propertyName  [FE]              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  enclosing,  propertyName,  getPropertyName(),  null);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  enclosing,  propertyName,  getPropertyName(),  null);	  super.resolveInternal(t,    enclosing,    getPropertyName(),    null);    	non-compiled	[CE]  cannot  find  symbol  propertyName	102	None	replace
466	[BUG]  [BUGGY]  super.resolveInternal(t,  enclosing,  getPropertyName(),  properties,  null);  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  enclosing,  getPropertyName(),  properties,  null);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  enclosing,  getPropertyName(),  properties,  null);	  super.resolveInternal(t,    enclosing,    getPropertyName(),    null);    	non-compiled	[CE]  cannot  find  symbol	102	None	replace
467	[BUG]  [BUGGY]  super.resolvePropertyInternal(t,  name);  [CE]  cannot  find  symbol  name  [FE]                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolvePropertyInternal(t,  name);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolvePropertyInternal(t,  name);	  super.resolvePropertyInternal(t,    propertyNode);    	non-compiled	[CE]  cannot  find  symbol  name	43	None	replace
468	[BUG]  [BUGGY]  super.resolvePropertyInternal(t,  enclosing,  nameNode);  [CE]  cannot  find  symbol  nameNode  [FE]                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolvePropertyInternal(t,  enclosing,  nameNode);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolvePropertyInternal(t,  enclosing,  nameNode);	  super.resolvePropertyInternal(t,    enclosing,    propertyNode);    	non-compiled	[CE]  cannot  find  symbol  nameNode	41	None	replace
469	[BUG]  [BUGGY]  super.resolvePropertyInternal(t,  propertyNode,  this);  [CE]  cannot  find  symbol  propertyNode  [FE]                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolvePropertyInternal(t,  propertyNode,  this);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolvePropertyInternal(t,  propertyNode,  this);	  super.resolvePropertyInternal(t,    enclosing,    this);    	non-compiled	[CE]  cannot  find  symbol  propertyNode	98	None	replace
470	[BUG]  [BUGGY]  super.resolveInternal(t,  propertyName,  enclosing);  [CE]  cannot  find  symbol  propertyName  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  propertyName,  enclosing);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  propertyName,  enclosing);	  super.resolveInternal(t,    sourceName);    	non-compiled	[CE]  cannot  find  symbol  propertyName	83	None	replace
471	[BUG]  [BUGGY]  super.resolveType(t,  inferred);  [CE]  cannot  find  symbol  inferred  [FE]                              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveType(t,  inferred);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveType(t,  inferred);	  super.resolveType(t,    type);    	non-compiled	[CE]  cannot  find  symbol  inferred	68	None	replace
472	[BUG]  [BUGGY]  super.resolveType(t,  resolveViaProperties);  [CE]  cannot  find  symbol  resolveViaProperties  [FE]                                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveType(t,  resolveViaProperties);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveType(t,  resolveViaProperties);	  super.resolveType(t,    type);    	non-compiled	[CE]  cannot  find  symbol  resolveViaProperties	68	None	replace
473	[BUG]  [BUGGY]  super.resolveInternal(t,  getReferencedType());  [CE]  no  suitable  method  found  for  resolveInternal(ErrorReporter,JSType)  [FE]                                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  getReferencedType());  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  getReferencedType());	  super.resolveInternal(t,    null);    timeout    	non-compiled	[CE]  no  suitable  method  found  for  resolveInternal(ErrorReporter,JSType)	31	None	replace
474	[BUG]  [BUGGY]  super.resolveInternal(t,  new  PropertyContinuation());  [CE]  constructor  PropertyContinuation  in  class  PropertyContinuation  cannot  be  applied  to  given  types;  [FE]                                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  new  PropertyContinuation());  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  new  PropertyContinuation());	  super.resolveInternal(t,    null);    timeout    	non-compiled	[CE]  constructor  PropertyContinuation  in  class  PropertyContinuation  cannot  be  applied  to  given  types;	31	None	replace
475	[BUG]  [BUGGY]  Super.resolvePropertyInternal(t,  enclosing,  propertyNode);  [CE]  cannot  find  symbol  propertyNode  [FE]                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  Super.resolvePropertyInternal(t,  enclosing,  propertyNode);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	Super.resolvePropertyInternal(t,  enclosing,  propertyNode);	  super.resolvePropertyInternal(t,    enclosing,    forAnnotations);    	non-compiled	[CE]  cannot  find  symbol  propertyNode	42	None	replace
476	[BUG]  [BUGGY]  PropertyRegistry  registry  =  enclosing.getPropertyRegistry(propertyNode);  [CE]  cannot  find  symbol  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  PropertyRegistry  registry  =  enclosing.getPropertyRegistry(propertyNode);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	PropertyRegistry  registry  =  enclosing.getPropertyRegistry(propertyNode);	  PropertyRegistry    registry    =    enclosing.getPropertyRegistry();    	non-compiled	[CE]  cannot  find  symbol	32	None	replace
477	[BUG]  [BUGGY]  super.resolveType(t,  enclosing,  propertyNode,  getReferencedType());  [CE]  cannot  find  symbol  propertyNode  [FE]                            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveType(t,  enclosing,  propertyNode,  getReferencedType());  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveType(t,  enclosing,  propertyNode,  getReferencedType());	  super.resolveType(t,    enclosing,    getReferencedType());    	non-compiled	[CE]  cannot  find  symbol  propertyNode	67	None	replace
478	[BUG]  [BUGGY]  super.resolveType(t,  enclosing,  type,  getReferencedType());  [CE]  cannot  find  symbol  type  [FE]                              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveType(t,  enclosing,  type,  getReferencedType());  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveType(t,  enclosing,  type,  getReferencedType());	  super.resolveType(t,    enclosing,    getReferencedType());    	non-compiled	[CE]  cannot  find  symbol  type	67	None	replace
479	[BUG]  [BUGGY]  super.resolveInternal(t,  enclosing,  propertyNode,  getPropertyType(),  type);  [CE]  cannot  find  symbol  propertyNode  [FE]                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  enclosing,  propertyNode,  getPropertyType(),  type);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  enclosing,  propertyNode,  getPropertyType(),  type);	  super.resolveInternal(t,    enclosing,    getPropertyType(),    propertyNode);    	non-compiled	[CE]  cannot  find  symbol  propertyNode	49	None	replace
480	[BUG]  [BUGGY]  super.resolveInternal(t,  enclosing,  null,  false,  forAnnotations);  [CE]  cannot  find  symbol  forAnnotations  [FE]                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  enclosing,  null,  false,  forAnnotations);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  enclosing,  null,  false,  forAnnotations);	  super.resolveInternal(t,    enclosing,    null,    false);    	non-compiled	[CE]  cannot  find  symbol  forAnnotations	4	None	replace
481	[BUG]  [BUGGY]  Super.resolveInternal(t,  enclosing,  getReferencedType(),  detectImplicitPrototypeCycle());  [CE]  cannot  find  symbol  Super  [FE]                            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  Super.resolveInternal(t,  enclosing,  getReferencedType(),  detectImplicitPrototypeCycle());  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	Super.resolveInternal(t,  enclosing,  getReferencedType(),  detectImplicitPrototypeCycle());	  Super.resolveInternal(t,    enclosing,    getReferencedType(),    type);    	non-compiled	[CE]  cannot  find  symbol  Super	62	None	replace
482	[BUG]  [BUGGY]  Super.resolveInternal(t,  enclosing,  getReferencedType(),  inferred);  [CE]  cannot  find  symbol  inferred  [FE]                              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  Super.resolveInternal(t,  enclosing,  getReferencedType(),  inferred);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	Super.resolveInternal(t,  enclosing,  getReferencedType(),  inferred);	  Super.resolveInternal(t,    enclosing,    getReferencedType(),    type);    	non-compiled	[CE]  cannot  find  symbol  inferred	62	None	replace
483	[BUG]  [BUGGY]  super.resolveType(t,  enclosing,  DEFAULT_TYPE);  [CE]  cannot  find  symbol  DEFAULT_TYPE  [FE]                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveType(t,  enclosing,  DEFAULT_TYPE);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveType(t,  enclosing,  DEFAULT_TYPE);	  super.resolveType(t,    enclosing,    type);    	non-compiled	[CE]  cannot  find  symbol  DEFAULT_TYPE	65	None	replace
484	[BUG]  [BUGGY]  Predicate  validator  =  getValueForAnnotations(enclosing,  sourceName);  [CE]  cannot  find  symbol  [FE]                                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  Predicate  validator  =  getValueForAnnotations(enclosing,  sourceName);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	Predicate  validator  =  getValueForAnnotations(enclosing,  sourceName);	  Predicate    validator    =    getValueForAnnotations(enclosing);    	non-compiled	[CE]  cannot  find  symbol	37	None	replace
485	[BUG]  [BUGGY]  super.resolveInternal(t,  nameNode,  enclosing,  getPropertyType());  [CE]  cannot  find  symbol  nameNode  [FE]                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  nameNode,  enclosing,  getPropertyType());  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  nameNode,  enclosing,  getPropertyType());	  super.resolveInternal(t,    propertyNode,    enclosing,    getPropertyType());    	non-compiled	[CE]  cannot  find  symbol  nameNode	50	None	replace
486	[BUG]  [BUGGY]  Preconditions.checkNotNull(propertyNode);  [CE]  cannot  find  symbol  propertyNode  [FE]                            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  Preconditions.checkNotNull(propertyNode);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	Preconditions.checkNotNull(propertyNode);	  Preconditions.checkArgument(resolved);    timeout    	non-compiled	[CE]  cannot  find  symbol  propertyNode	95	None	replace
487	[BUG]  [BUGGY]  timeout  [FE]                              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  Preconditions.checkNotNull(resolved);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	add	Preconditions.checkNotNull(resolved);	  Preconditions.checkArgument(resolved);    timeout    	compilable	timeout	95	1	replace
488	[BUG]  [BUGGY]  Preconditions.checkNotNull(resolved);  timeout  [FE]                              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  Preconditions.checkNotNull(resolved);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	Preconditions.checkNotNull(resolved);	  Preconditions.checkArgument(resolved);    timeout    	compilable	timeout	95	1	replace
489	[BUG]  [BUGGY]  super.resolveInternal(t,  enclosing,  propertyName,  getPropertyName(),  reference);  [CE]  cannot  find  symbol  propertyName  [FE]            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  enclosing,  propertyName,  getPropertyName(),  reference);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  enclosing,  propertyName,  getPropertyName(),  reference);	  super.resolveInternal(t,    enclosing,    getPropertyName(),    propertyName);    	non-compiled	[CE]  cannot  find  symbol  propertyName	101	None	replace
490	[BUG]  [BUGGY]  super.resolveInternal(t,  enclosing,  getReferenceName(),  propertyName);  [CE]  cannot  find  symbol  propertyName  [FE]              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  enclosing,  getReferenceName(),  propertyName);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  enclosing,  getReferenceName(),  propertyName);	  super.resolveInternal(t,    enclosing,    getPropertyName(),    propertyName);    	non-compiled	[CE]  cannot  find  symbol  propertyName	101	None	replace
491	[BUG]  [BUGGY]  super.resolveInternal(t,  propertyNode,  registry,  enclosing);  [CE]  cannot  find  symbol  propertyNode  [FE]                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  propertyNode,  registry,  enclosing);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  propertyNode,  registry,  enclosing);	  super.resolveInternal(t,    registry,    enclosing);    	non-compiled	[CE]  cannot  find  symbol  propertyNode	15	None	replace
492	[BUG]  [BUGGY]  super.resolveInternal(t,  type,  registry,  enclosing);  [CE]  cannot  find  symbol  type  [FE]                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  type,  registry,  enclosing);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  type,  registry,  enclosing);	  super.resolveInternal(t,    registry,    enclosing);    	non-compiled	[CE]  cannot  find  symbol  type	15	None	replace
493	[BUG]  [BUGGY]  super.resolveInternal(t,  propertyNode,  enclosing);  [CE]  cannot  find  symbol  propertyNode  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  propertyNode,  enclosing);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  propertyNode,  enclosing);	  super.resolveInternal(t,    registry,    enclosing);    	non-compiled	[CE]  cannot  find  symbol  propertyNode	15	None	replace
494	[BUG]  [BUGGY]  super.resolveInternal(t,  null);  superviser.resolveInternal(t,  null);  [CE]  cannot  find  symbol  superviser  [FE]                                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  null);  superviser.resolveInternal(t,  null);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,    null);    superviser.resolveInternal(t,  null);	  timeout    	non-compiled	[CE]  cannot  find  symbol  superviser	30	None	add
495	[BUG]  [BUGGY]  super.resolveInternal(t,  enclosing,  properties,  null);  [CE]  cannot  find  symbol  properties  [FE]            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  enclosing,  properties,  null);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  enclosing,  properties,  null);	  super.resolveInternal(t,    enclosing,    null);    	non-compiled	[CE]  cannot  find  symbol  properties	12	None	replace
496	[BUG]  [BUGGY]  super.resolveInternal(t,  enclosing,  null,  propertyNode);  [CE]  cannot  find  symbol  propertyNode  [FE]              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  enclosing,  null,  propertyNode);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  enclosing,  null,  propertyNode);	  super.resolveInternal(t,    enclosing,    null);    	non-compiled	[CE]  cannot  find  symbol  propertyNode	12	None	replace
497	[BUG]  [BUGGY]  super.resolveInternal(t,  refNode,  getPropertyName());  [CE]  cannot  find  symbol  refNode  [FE]                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  refNode,  getPropertyName());  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  refNode,  getPropertyName());	  super.resolveInternal(t,    propertyNode,    getPropertyName());    	non-compiled	[CE]  cannot  find  symbol  refNode	75	None	replace
498	[BUG]  [BUGGY]  super.resolveInternal(t,  enclosing,  DETECTED_PROTOTYPE_CYCLE);  [CE]  cannot  find  symbol  DETECTED_PROTOTYPE_CYCLE  [FE]              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  enclosing,  DETECTED_PROTOTYPE_CYCLE);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  enclosing,  DETECTED_PROTOTYPE_CYCLE);	  super.resolveInternal(t,    enclosing,    handleTypeCycle);    	non-compiled	[CE]  cannot  find  symbol  DETECTED_PROTOTYPE_CYCLE	8	None	replace
499	[BUG]  [BUGGY]  super.resolveInternal(t,  defType,  enclosing,  false);  [CE]  cannot  find  symbol  defType  [FE]                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  defType,  enclosing,  false);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  defType,  enclosing,  false);	  super.resolveInternal(t,    type,    enclosing,    false);    	non-compiled	[CE]  cannot  find  symbol  defType	5	None	replace
500	[BUG]  [BUGGY]  Super.resolveInternal(t,  enclosing,  false);  [CE]  cannot  find  symbol  Super  [FE]                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  Super.resolveInternal(t,  enclosing,  false);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	Super.resolveInternal(t,  enclosing,  false);	  super.resolveInternal(t,    type,    enclosing,    false);    	non-compiled	[CE]  cannot  find  symbol  Super	5	None	replace
501	[BUG]  [BUGGY]  super.resolveInternal(t,  enclosing,  PROPERTY,  getReferencedType());  [CE]  cannot  find  symbol  PROPERTY  [FE]                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  enclosing,  PROPERTY,  getReferencedType());  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  enclosing,  PROPERTY,  getReferencedType());	  super.resolveInternal(t,    enclosing,    type,    getReferencedType());    	non-compiled	[CE]  cannot  find  symbol  PROPERTY	58	None	replace
502	[BUG]  [BUGGY]  super.resolveInternal(t,  enclosing,  sourceName,  getPropertyType());  [CE]  method  getPropertyType  in  class  ObjectType  cannot  be  applied  to  given  types;  [FE]                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  enclosing,  sourceName,  getPropertyType());  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  enclosing,  sourceName,  getPropertyType());	  super.resolveInternal(t,    enclosing,    propertyNode,    getPropertyType());    	non-compiled	[CE]  method  getPropertyType  in  class  ObjectType  cannot  be  applied  to  given  types;	47	None	replace
503	[BUG]  [BUGGY]  super.resolveInternal(t,  enclosing,  detectImplicitPrototypeCycle());  [CE]  no  suitable  method  found  for  resolveInternal(ErrorReporter,StaticScope<JSType>,boolean)  [FE]                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  enclosing,  detectImplicitPrototypeCycle());  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  enclosing,  detectImplicitPrototypeCycle());	  super.resolveInternal(t,    enclosing,    deferred);    	non-compiled	[CE]  no  suitable  method  found  for  resolveInternal(ErrorReporter,StaticScope<JSType>,boolean)	70	None	replace
504	[BUG]  [BUGGY]  Predicates.checkNotNull(value);  [CE]  cannot  find  symbol  value  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  Predicates.checkNotNull(value);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	Predicates.checkNotNull(value);	  Predicates.checkNotNull(propertyNode);    	non-compiled	[CE]  cannot  find  symbol  value	76	None	replace
505	[BUG]  [BUGGY]  Predicates.checkNotNull(valueNode);  [CE]  cannot  find  symbol  valueNode  [FE]                            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  Predicates.checkNotNull(valueNode);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	Predicates.checkNotNull(valueNode);	  Predicates.checkNotNull(propertyNode);    	non-compiled	[CE]  cannot  find  symbol  valueNode	76	None	replace
506	[BUG]  [BUGGY]  super.resolveInternal(t,  enclosing,  registry,  getPropertyNode());  [CE]  method  getPropertyNode  in  class  ObjectType  cannot  be  applied  to  given  types;  [FE]            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  enclosing,  registry,  getPropertyNode());  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  enclosing,  registry,  getPropertyNode());	  super.resolveInternal(t,    enclosing,    getPropertyNode());    	non-compiled	[CE]  method  getPropertyNode  in  class  ObjectType  cannot  be  applied  to  given  types;	99	None	replace
507	[BUG]  [BUGGY]  super.resolveType(t,  enclosing,  nameNode);  [CE]  cannot  find  symbol  nameNode  [FE]                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveType(t,  enclosing,  nameNode);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveType(t,  enclosing,  nameNode);	  super.resolveType(t,    enclosing,    propertyNode);    	non-compiled	[CE]  cannot  find  symbol  nameNode	64	None	replace
508	[BUG]  [BUGGY]  super.resolveType(t,  enclosing,  scope);  [CE]  cannot  find  symbol  scope  [FE]                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveType(t,  enclosing,  scope);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveType(t,  enclosing,  scope);	  super.resolveType(t,    enclosing,    propertyNode);    	non-compiled	[CE]  cannot  find  symbol  scope	64	None	replace
509	[BUG]  [BUGGY]  super.resolveInternal(t,  propertyNode,  getPropertyNode(),  getReferencedType());  [CE]  cannot  find  symbol  propertyNode  [FE]                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  propertyNode,  getPropertyNode(),  getReferencedType());  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  propertyNode,  getPropertyNode(),  getReferencedType());	  super.resolveInternal(t,    enclosing,    getPropertyNode(),    getReferencedType());    	non-compiled	[CE]  cannot  find  symbol  propertyNode	105	None	replace
510	[BUG]  [BUGGY]  Super.resolveInternal(t,  enclosing,  getReferencedType(),  false);  [CE]  cannot  find  symbol  Super  [FE]                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  Super.resolveInternal(t,  enclosing,  getReferencedType(),  false);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	Super.resolveInternal(t,  enclosing,  getReferencedType(),  false);	  Super.resolveInternal(t,    enclosing,    type,    false);    	non-compiled	[CE]  cannot  find  symbol  Super	6	None	replace
511	[BUG]  [BUGGY]  Super.resolveInternal(t,  enclosing,  registry,  false);  [CE]  cannot  find  symbol  Super  [FE]                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  Super.resolveInternal(t,  enclosing,  registry,  false);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	Super.resolveInternal(t,  enclosing,  registry,  false);	  Super.resolveInternal(t,    enclosing,    type,    false);    	non-compiled	[CE]  cannot  find  symbol  Super	6	None	replace
512	[BUG]  [BUGGY]  Super.resolveInternal(t,  enclosing,  propertyName,  false);  [CE]  cannot  find  symbol  propertyName  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  Super.resolveInternal(t,  enclosing,  propertyName,  false);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	Super.resolveInternal(t,  enclosing,  propertyName,  false);	  Super.resolveInternal(t,    enclosing,    type,    false);    	non-compiled	[CE]  cannot  find  symbol  propertyName	6	None	replace
513	[BUG]  [BUGGY]  Super.resolveInternal(t,  enclosing,  PropertyType.NONE,  false);  [CE]  cannot  find  symbol  PropertyType  [FE]                            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  Super.resolveInternal(t,  enclosing,  PropertyType.NONE,  false);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	Super.resolveInternal(t,  enclosing,  PropertyType.NONE,  false);	  Super.resolveInternal(t,    enclosing,    type,    false);    	non-compiled	[CE]  cannot  find  symbol  PropertyType	6	None	replace
514	[BUG]  [BUGGY]  super.resolveInternal(t,  enclosing,  getReferencedTypeName(),  getPropertyTypeName());  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  enclosing,  getReferencedTypeName(),  getPropertyTypeName());  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  enclosing,  getReferencedTypeName(),  getPropertyTypeName());	  super.resolveInternal(t,    enclosing,    getPropertyTypeName(),    getReferencedType());    	non-compiled	[CE]  cannot  find  symbol	104	None	replace
515	[BUG]  [BUGGY]  super.resolveInternal(t,  enclosing,  propertyName,  getPropertyTypeName(),  getReferencedType());  [CE]  cannot  find  symbol  propertyName  [FE]                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  enclosing,  propertyName,  getPropertyTypeName(),  getReferencedType());  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  enclosing,  propertyName,  getPropertyTypeName(),  getReferencedType());	  super.resolveInternal(t,    enclosing,    getPropertyTypeName(),    getReferencedType());    	non-compiled	[CE]  cannot  find  symbol  propertyName	104	None	replace
516	[BUG]  [BUGGY]  super.resolveInternal(t,  enclosing,  ref);  [CE]  cannot  find  symbol  ref  [FE]              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  enclosing,  ref);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  enclosing,  ref);	  super.resolveInternal(t,    enclosing,    propertyName);    	non-compiled	[CE]  cannot  find  symbol  ref	13	None	replace
517	[BUG]  [BUGGY]  super.resolveInternal(t,  nameNode,  enclosing,  getReferencedType());  [CE]  cannot  find  symbol  nameNode  [FE]                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  nameNode,  enclosing,  getReferencedType());  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  nameNode,  enclosing,  getReferencedType());	  super.resolveInternal(t,    type,    enclosing,    getReferencedType());    	non-compiled	[CE]  cannot  find  symbol  nameNode	59	None	replace
518	[BUG]  [BUGGY]  super.resolveInternal(t,  enclosing,  resolve);  [CE]  cannot  find  symbol  resolve  [FE]                            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  enclosing,  resolve);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  enclosing,  resolve);	  super.resolveInternal(t,    resolved);    	non-compiled	[CE]  cannot  find  symbol  resolve	27	None	replace
519	[BUG]  [BUGGY]  super.resolveInternal(t,  enclosing,  getPropertyName(),  getReferencedType(),  false);  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  enclosing,  getPropertyName(),  getReferencedType(),  false);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  enclosing,  getPropertyName(),  getReferencedType(),  false);	  super.resolveInternal(t,    enclosing,    getReferencedType(),    false);    	non-compiled	[CE]  cannot  find  symbol	91	None	replace
520	[BUG]  [BUGGY]  super.resolveInternal(t,  enclosing,  propertyNode,  getReferencedType(),  false);  [CE]  cannot  find  symbol  propertyNode  [FE]              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  enclosing,  propertyNode,  getReferencedType(),  false);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  enclosing,  propertyNode,  getReferencedType(),  false);	  super.resolveInternal(t,    enclosing,    getReferencedType(),    false);    	non-compiled	[CE]  cannot  find  symbol  propertyNode	91	None	replace
521	[BUG]  [BUGGY]  super.resolveInternal(t,  enclosing,  getPropertyTypeName(),  getReferencedType(),  false);  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  enclosing,  getPropertyTypeName(),  getReferencedType(),  false);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  enclosing,  getPropertyTypeName(),  getReferencedType(),  false);	  super.resolveInternal(t,    enclosing,    getReferencedType(),    false);    	non-compiled	[CE]  cannot  find  symbol	91	None	replace
522	[BUG]  [BUGGY]  super.resolveInternal(t,  enclosing,  nameNode,  getPropertyName());  [CE]  cannot  find  symbol  nameNode  [FE]              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  enclosing,  nameNode,  getPropertyName());  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  enclosing,  nameNode,  getPropertyName());	  super.resolveInternal(t,    enclosing,    propertyNode,    getPropertyName());    	non-compiled	[CE]  cannot  find  symbol  nameNode	74	None	replace
523	[BUG]  [BUGGY]  PropertyRegistry  registry  =  propNode.getPropertyRegistry(propertyName);  [CE]  cannot  find  symbol  [FE]                              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  PropertyRegistry  registry  =  propNode.getPropertyRegistry(propertyName);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	PropertyRegistry  registry  =  propNode.getPropertyRegistry(propertyName);	  PropertyRegistry    registry    =    enclosing.getPropertyRegistry(propertyName);    	non-compiled	[CE]  cannot  find  symbol	34	None	replace
524	[BUG]  [BUGGY]  super.resolvePropertyInternal(t,  enclosing,  propertyNode,  getReferencedType());  [CE]  cannot  find  symbol  propertyNode  [FE]                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolvePropertyInternal(t,  enclosing,  propertyNode,  getReferencedType());  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolvePropertyInternal(t,  enclosing,  propertyNode,  getReferencedType());	  super.resolvePropertyInternal(t,    enclosing,    getReferencedType());    	non-compiled	[CE]  cannot  find  symbol  propertyNode	71	None	replace
525	[BUG]  [BUGGY]  super.resolvePropertyInternal(t,  propertyNode,  getReferencedType());  [CE]  cannot  find  symbol  propertyNode  [FE]                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolvePropertyInternal(t,  propertyNode,  getReferencedType());  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolvePropertyInternal(t,  propertyNode,  getReferencedType());	  super.resolvePropertyInternal(t,    enclosing,    getReferencedType());    	non-compiled	[CE]  cannot  find  symbol  propertyNode	71	None	replace
526	[BUG]  [BUGGY]  Predicate  validator  =  getReferencedType().getImplicitPrototype();  [CE]  cannot  find  symbol  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  Predicate  validator  =  getReferencedType().getImplicitPrototype();  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	Predicate  validator  =  getReferencedType().getImplicitPrototype();	          Predicate    validator    =    getReferencedType();    	non-compiled	[CE]  cannot  find  symbol	56	None	replace
527	[BUG]  [BUGGY]  Predicate  validator  =  getReferencedType().validate(resolved);  [CE]  cannot  find  symbol  [FE]                            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  Predicate  validator  =  getReferencedType().validate(resolved);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	Predicate  validator  =  getReferencedType().validate(resolved);	          Predicate    validator    =    getReferencedType();    	non-compiled	[CE]  cannot  find  symbol	56	None	replace
528	[BUG]  [BUGGY]  Predicate  validator  =  getReferencedType().validate(registry);  [CE]  cannot  find  symbol  [FE]                              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  Predicate  validator  =  getReferencedType().validate(registry);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	Predicate  validator  =  getReferencedType().validate(registry);	          Predicate    validator    =    getReferencedType();    	non-compiled	[CE]  cannot  find  symbol	56	None	replace
529	[BUG]  [BUGGY]  Predicate  validator  =  getReferencedType().evaluate(resolved);  [CE]  cannot  find  symbol  [FE]                                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  Predicate  validator  =  getReferencedType().evaluate(resolved);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	Predicate  validator  =  getReferencedType().evaluate(resolved);	          Predicate    validator    =    getReferencedType();    	non-compiled	[CE]  cannot  find  symbol	56	None	replace
530	[BUG]  [BUGGY]  super.resolveInternal(t,  enclosing,  propertyNode,  propertyContinuations);  [CE]  cannot  find  symbol  propertyNode  [FE]                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  enclosing,  propertyNode,  propertyContinuations);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  enclosing,  propertyNode,  propertyContinuations);	  super.resolveInternal(t,    enclosing,    propertyContinuations);    	non-compiled	[CE]  cannot  find  symbol  propertyNode	20	None	replace
531	[BUG]  [BUGGY]  super.resolveInternal(t,  enclosing,  propertyContinuations,  reference);  [CE]  no  suitable  method  found  for  resolveInternal(ErrorReporter,StaticScope<JSType>,List<PropertyContinuation>,String)  [FE]                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  enclosing,  propertyContinuations,  reference);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  enclosing,  propertyContinuations,  reference);	  super.resolveInternal(t,    enclosing,    propertyContinuations);    	non-compiled	[CE]  no  suitable  method  found  for  resolveInternal(ErrorReporter,StaticScope<JSType>,List<PropertyContinuation>,String)	20	None	replace
532	[BUG]  [BUGGY]  super.resolveInternal(t,  enclosing,  propertyContinuations,  ref);  [CE]  cannot  find  symbol  ref  [FE]                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  enclosing,  propertyContinuations,  ref);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  enclosing,  propertyContinuations,  ref);	  super.resolveInternal(t,    enclosing,    propertyContinuations);    	non-compiled	[CE]  cannot  find  symbol  ref	20	None	replace
533	[BUG]  [BUGGY]  super.resolveInternal(t,  enclosing,  propertyContinuations,  sourceName);  [CE]  no  suitable  method  found  for  resolveInternal(ErrorReporter,StaticScope<JSType>,List<PropertyContinuation>,String)  [FE]                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  enclosing,  propertyContinuations,  sourceName);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  enclosing,  propertyContinuations,  sourceName);	  super.resolveInternal(t,    enclosing,    propertyContinuations);    	non-compiled	[CE]  no  suitable  method  found  for  resolveInternal(ErrorReporter,StaticScope<JSType>,List<PropertyContinuation>,String)	20	None	replace
534	[BUG]  [BUGGY]  super.resolveInternal(t,  enclosing,  baseType,  getReferencedType());  [CE]  cannot  find  symbol  baseType  [FE]            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  enclosing,  baseType,  getReferencedType());  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  enclosing,  baseType,  getReferencedType());	  super.resolveInternal(t,    enclosing,    propertyName,    getReferencedType());    	non-compiled	[CE]  cannot  find  symbol  baseType	73	None	replace
535	[BUG]  [BUGGY]  super.resolveInternal(t,  refType,  enclosing,  getPropertyType());  [CE]  cannot  find  symbol  refType  [FE]                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  refType,  enclosing,  getPropertyType());  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  refType,  enclosing,  getPropertyType());	  super.resolveInternal(t,    type,    enclosing,    getPropertyType());    	non-compiled	[CE]  cannot  find  symbol  refType	48	None	replace
536	[BUG]  [BUGGY]  Predicate  validator  =  enclosing.findValueForAnnotations(sourceName);  [CE]  cannot  find  symbol  [FE]                            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  Predicate  validator  =  enclosing.findValueForAnnotations(sourceName);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	Predicate  validator  =  enclosing.findValueForAnnotations(sourceName);	  Predicate    validator    =    enclosing.getValue();    	non-compiled	[CE]  cannot  find  symbol	33	None	replace
537	[BUG]  [BUGGY]  Predicate  validator  =  enclosing.findValueForAnnotations(sourceName,  t);  [CE]  cannot  find  symbol  [FE]                              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  Predicate  validator  =  enclosing.findValueForAnnotations(sourceName,  t);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	Predicate  validator  =  enclosing.findValueForAnnotations(sourceName,  t);	  Predicate    validator    =    enclosing.getValue();    	non-compiled	[CE]  cannot  find  symbol	33	None	replace
538	[BUG]  [BUGGY]  Predicate  validator  =  enclosing.findValueDeclaration(sourceName);  [CE]  cannot  find  symbol  [FE]                                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  Predicate  validator  =  enclosing.findValueDeclaration(sourceName);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	Predicate  validator  =  enclosing.findValueDeclaration(sourceName);	  Predicate    validator    =    enclosing.getValue();    	non-compiled	[CE]  cannot  find  symbol	33	None	replace
539	[BUG]  [BUGGY]  super.resolveInternal(t,  enclosing,  registry,  def);  [CE]  cannot  find  symbol  def  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  enclosing,  registry,  def);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  enclosing,  registry,  def);	  super.resolveInternal(t,    enclosing,    registry,    propertyNode);    	non-compiled	[CE]  cannot  find  symbol  def	17	None	replace
540	[BUG]  [BUGGY]  super.resolveInternal(t,  nameNode,  enclosing,  getPropertyName());  [CE]  cannot  find  symbol  nameNode  [FE]                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  nameNode,  enclosing,  getPropertyName());  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  nameNode,  enclosing,  getPropertyName());	  super.resolveInternal(t,    propertyNode,    enclosing,    getPropertyName());    	non-compiled	[CE]  cannot  find  symbol  nameNode	53	None	replace
541	[BUG]  [BUGGY]  PropertyRegistry  registry  =  getPropertyRegistry(propertyName,  inferred);  [CE]  cannot  find  symbol  [FE]                              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  PropertyRegistry  registry  =  getPropertyRegistry(propertyName,  inferred);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	PropertyRegistry  registry  =  getPropertyRegistry(propertyName,  inferred);	  PropertyRegistry    registry    =    getPropertyRegistry(propertyName);    	non-compiled	[CE]  cannot  find  symbol	96	None	replace
542	[BUG]  [BUGGY]  super.resolveInternal(t,  enclosing,  props,  false);  [CE]  cannot  find  symbol  props  [FE]            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  enclosing,  props,  false);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  enclosing,  props,  false);	  super.resolveInternal(t,    enclosing,    propertyNode,    false);    	non-compiled	[CE]  cannot  find  symbol  props	86	None	replace
543	[BUG]  [BUGGY]  super.resolveInternal(t,  enclosing,  this.type,  false);  [CE]  cannot  find  symbol  type  [FE]              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  enclosing,  this.type,  false);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  enclosing,  this.type,  false);	  super.resolveInternal(t,    enclosing,    propertyNode,    false);    	non-compiled	[CE]  cannot  find  symbol  type	86	None	replace
544	[BUG]  [BUGGY]  super.resolveInternal(t,  enclosing,  getPropertyName(),  nameNode);  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  enclosing,  getPropertyName(),  nameNode);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  enclosing,  getPropertyName(),  nameNode);	  super.resolveInternal(t,    enclosing,    getPropertyName(),    propertyNode);    	non-compiled	[CE]  cannot  find  symbol	54	None	replace
545	[BUG]  [BUGGY]  super.resolveInternal(t,  enclosing,  getPropertyName(),  propertyNode,  inferred);  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  enclosing,  getPropertyName(),  propertyNode,  inferred);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  enclosing,  getPropertyName(),  propertyNode,  inferred);	  super.resolveInternal(t,    enclosing,    getPropertyName(),    propertyNode);    	non-compiled	[CE]  cannot  find  symbol	54	None	replace
546	[BUG]  [BUGGY]  super.resolvePropertyInternal(t,  propertyNode,  enclosing);  [CE]  cannot  find  symbol  propertyNode  [FE]                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolvePropertyInternal(t,  propertyNode,  enclosing);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolvePropertyInternal(t,  propertyNode,  enclosing);	  super.resolvePropertyInternal(t,    enclosing,    registry);    	non-compiled	[CE]  cannot  find  symbol  propertyNode	40	None	replace
547	[BUG]  [BUGGY]  Super.resolveInternal(t,  enclosing,  nameNode);  [CE]  cannot  find  symbol  nameNode  [FE]                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  Super.resolveInternal(t,  enclosing,  nameNode);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	Super.resolveInternal(t,  enclosing,  nameNode);	  Super.resolveInternal(t,    enclosing,    propertyNode);    	non-compiled	[CE]  cannot  find  symbol  nameNode	106	None	replace
548	[BUG]  [BUGGY]  Super.resolveInternal(t,  enclosing,  sourceName);  [CE]  cannot  find  symbol  Super  [FE]                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  Super.resolveInternal(t,  enclosing,  sourceName);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	Super.resolveInternal(t,  enclosing,  sourceName);	  Super.resolveInternal(t,    enclosing,    propertyNode);    	non-compiled	[CE]  cannot  find  symbol  Super	106	None	replace
549	[BUG]  [BUGGY]  Predicates.checkNotNull(registry,  propertyContinuations);  [CE]  cannot  find  symbol  Predicates  [FE]                                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  Predicates.checkNotNull(registry,  propertyContinuations);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	Predicates.checkNotNull(registry,  propertyContinuations);	  Predicates.checkNotNull(propertyContinuations);    	non-compiled	[CE]  cannot  find  symbol  Predicates	38	None	replace
550	[BUG]  [BUGGY]  super.resolvePropertyInternal(t,  def);  [CE]  cannot  find  symbol  def  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolvePropertyInternal(t,  def);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolvePropertyInternal(t,  def);	  super.resolvePropertyInternal(t,    type);    	non-compiled	[CE]  cannot  find  symbol  def	44	None	replace
551	[BUG]  [BUGGY]  PrototypeProperties.resolveInternal(t,  enclosing);  [CE]  cannot  find  symbol  PrototypeProperties  [FE]                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  PrototypeProperties.resolveInternal(t,  enclosing);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	PrototypeProperties.resolveInternal(t,  enclosing);	  Super.resolveInternal(t,    enclosing);    	non-compiled	[CE]  cannot  find  symbol  PrototypeProperties	103	None	replace
552	[BUG]  [BUGGY]  super.resolveInternal(t,  enclosing,  propertyName,  getPropertyName(),  getReferencedType());  [CE]  cannot  find  symbol  propertyName  [FE]                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  enclosing,  propertyName,  getPropertyName(),  getReferencedType());  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  enclosing,  propertyName,  getPropertyName(),  getReferencedType());	  super.resolveInternal(t,    enclosing,    getPropertyName(),    getReferencedType());    	non-compiled	[CE]  cannot  find  symbol  propertyName	78	None	replace
553	[BUG]  [BUGGY]  super.resolveInternal(t,  enclosing,  owner);  [CE]  cannot  find  symbol  owner  [FE]              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  enclosing,  owner);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  enclosing,  owner);	  super.resolveInternal(t,    enclosing,    def);    	non-compiled	[CE]  cannot  find  symbol  owner	69	None	replace
554	[BUG]  [BUGGY]  Super.resolveInternal(t,  enclosing,  getPropertyType());  [CE]  method  getPropertyType  in  class  ObjectType  cannot  be  applied  to  given  types;  [FE]                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  Super.resolveInternal(t,  enclosing,  getPropertyType());  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	Super.resolveInternal(t,  enclosing,  getPropertyType());	  super.resolveInternal(t,    type,    enclosing,    getPropertyType());    	non-compiled	[CE]  method  getPropertyType  in  class  ObjectType  cannot  be  applied  to  given  types;	48	None	replace
555	[BUG]  [BUGGY]  Predicate  validator  =  enclosing.findValueForType(propertyName,  t.getModule());  [CE]  cannot  find  symbol  propertyName  [FE]                            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  Predicate  validator  =  enclosing.findValueForType(propertyName,  t.getModule());  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	Predicate  validator  =  enclosing.findValueForType(propertyName,  t.getModule());	  Predicate    validator    =    enclosing.getValue();    	non-compiled	[CE]  cannot  find  symbol  propertyName	33	None	replace
556	[BUG]  [BUGGY]  Predicate  validator  =  enclosing.declareValue(t,  enclosing.getValue());  [CE]  cannot  find  symbol  [FE]                              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  Predicate  validator  =  enclosing.declareValue(t,  enclosing.getValue());  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	Predicate  validator  =  enclosing.declareValue(t,  enclosing.getValue());	  Predicate    validator    =    enclosing.getValue();    	non-compiled	[CE]  cannot  find  symbol	33	None	replace
557	[BUG]  [BUGGY]  Predicate  validator  =  enclosing.generateValueForType(t,  enclosing.getValue());  [CE]  cannot  find  symbol  [FE]                                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  Predicate  validator  =  enclosing.generateValueForType(t,  enclosing.getValue());  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	Predicate  validator  =  enclosing.generateValueForType(t,  enclosing.getValue());	  Predicate    validator    =    enclosing.getValue();    	non-compiled	[CE]  cannot  find  symbol	33	None	replace
558	[BUG]  [BUGGY]  Predicate  validator  =  enclosing.generateValue();  [CE]  cannot  find  symbol  [FE]                                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  Predicate  validator  =  enclosing.generateValue();  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	Predicate  validator  =  enclosing.generateValue();	  Predicate    validator    =    enclosing.getValue();    	non-compiled	[CE]  cannot  find  symbol	33	None	replace
559	[BUG]  [BUGGY]  super.resolveInternal(t,  enclosing,  registry.getNativeType(JSTypeNative.NO_TYPE));  [CE]  no  suitable  method  found  for  resolveInternal(ErrorReporter,StaticScope<JSType>,JSType)  [FE]                            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  enclosing,  registry.getNativeType(JSTypeNative.NO_TYPE));  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  enclosing,  registry.getNativeType(JSTypeNative.NO_TYPE));	  super.resolveInternal(t,    enclosing,    type,    registry);    	non-compiled	[CE]  no  suitable  method  found  for  resolveInternal(ErrorReporter,StaticScope<JSType>,JSType)	18	None	replace
560	[BUG]  [BUGGY]  super.resolveInternal(t,  enclosing,  registry.type,  enclosing);  [CE]  cannot  find  symbol  type  [FE]                              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  enclosing,  registry.type,  enclosing);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  enclosing,  registry.type,  enclosing);	  super.resolveInternal(t,    enclosing,    type,    registry);    	non-compiled	[CE]  cannot  find  symbol  type	18	None	replace
561	[BUG]  [BUGGY]  Super.resolveInternal(t,  enclosing,  propertyNode,  this);  [CE]  cannot  find  symbol  propertyNode  [FE]                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  Super.resolveInternal(t,  enclosing,  propertyNode,  this);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	Super.resolveInternal(t,  enclosing,  propertyNode,  this);	  super.resolveInternal(t,    enclosing,    this);    	non-compiled	[CE]  cannot  find  symbol  propertyNode	10	None	replace
562	[BUG]  [BUGGY]  Super.resolveType(t,  enclosing,  propertyNode);  [CE]  cannot  find  symbol  propertyNode  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  Super.resolveType(t,  enclosing,  propertyNode);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	Super.resolveType(t,  enclosing,  propertyNode);	  super.resolveType(t,    enclosing,    forAnnotations);    	non-compiled	[CE]  cannot  find  symbol  propertyNode	66	None	replace
563	[BUG]  [BUGGY]  super.resolveType(t,  enclosing,  propertyNodes);  [CE]  cannot  find  symbol  propertyNodes  [FE]                            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveType(t,  enclosing,  propertyNodes);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveType(t,  enclosing,  propertyNodes);	  super.resolveType(t,    enclosing,    forAnnotations);    	non-compiled	[CE]  cannot  find  symbol  propertyNodes	66	None	replace
564	[BUG]  [BUGGY]  Predicates.checkArgument(resolved);  [CE]  cannot  find  symbol  Predicates  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  Predicates.checkArgument(resolved);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	Predicates.checkArgument(resolved);	          Predicates.checkNotNull(registry);    	non-compiled	[CE]  cannot  find  symbol  Predicates	100	None	replace
565	[BUG]  [BUGGY]  super.resolveInternal(t,  enclosing,  getReferencedType(),  scope);  [CE]  cannot  find  symbol  scope  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  enclosing,  getReferencedType(),  scope);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  enclosing,  getReferencedType(),  scope);	  super.resolveInternal(t,    enclosing,    getReferencedType(),    propertyNode);    	non-compiled	[CE]  cannot  find  symbol  scope	61	None	replace
566	[BUG]  [BUGGY]  super.resolveInternal(t,  enclosing,  getReferencedType(),  name);  [CE]  cannot  find  symbol  name  [FE]                            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  enclosing,  getReferencedType(),  name);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  enclosing,  getReferencedType(),  name);	  super.resolveInternal(t,    enclosing,    getReferencedType(),    propertyNode);    	non-compiled	[CE]  cannot  find  symbol  name	61	None	replace
567	[BUG]  [BUGGY]  super.resolveInternal(t,  enclosing,  getReferencedType(),  handleTypeCycle(t);  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  enclosing,  getReferencedType(),  handleTypeCycle(t);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  enclosing,  getReferencedType(),  handleTypeCycle(t);	  super.resolveInternal(t,    enclosing,    getReferencedType(),    type);    	non-compiled	[CE]  ')'  expected	57	None	replace
568	[BUG]  [BUGGY]  super.resolveInternal(t,  enclosing,  props,  getPropertyType());  [CE]  cannot  find  symbol  props  [FE]                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  enclosing,  props,  getPropertyType());  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  enclosing,  props,  getPropertyType());	  super.resolveInternal(t,    enclosing,    propertyNode,    getPropertyType());    	non-compiled	[CE]  cannot  find  symbol  props	47	None	replace
569	[BUG]  [BUGGY]  super.resolveInternal(t,  enclosing,  propertyNode,  getPropertyNode(),  getReferencedType(),  type);  [CE]  cannot  find  symbol  propertyNode  [FE]                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  enclosing,  propertyNode,  getPropertyNode(),  getReferencedType(),  type);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  enclosing,  propertyNode,  getPropertyNode(),  getReferencedType(),  type);	  super.resolveInternal(t,    enclosing,    getPropertyNode(),    getReferencedType());    	non-compiled	[CE]  cannot  find  symbol  propertyNode	105	None	replace
570	[BUG]  [BUGGY]  super.resolveInternal(t,  enclosing,  getPropertyNode(),  handleTypeCycle(t,  getReferencedType());  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  enclosing,  getPropertyNode(),  handleTypeCycle(t,  getReferencedType());  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  enclosing,  getPropertyNode(),  handleTypeCycle(t,  getReferencedType());	  super.resolveInternal(t,    enclosing,    getPropertyNode(),    getReferencedType());    	non-compiled	[CE]  ')'  expected	105	None	replace
571	[BUG]  [BUGGY]  super.resolveInternal(t,  enclosing,  getPropertyNode(),  getReferencedType(),  propertyNode);  [CE]  method  getPropertyNode  in  class  ObjectType  cannot  be  applied  to  given  types;  [FE]                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  enclosing,  getPropertyNode(),  getReferencedType(),  propertyNode);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  enclosing,  getPropertyNode(),  getReferencedType(),  propertyNode);	  super.resolveInternal(t,    enclosing,    getPropertyNode(),    getReferencedType());    	non-compiled	[CE]  method  getPropertyNode  in  class  ObjectType  cannot  be  applied  to  given  types;	105	None	replace
572	[BUG]  [BUGGY]  super.resolveType(t,  enclosing,  getPropertyName());  [CE]  cannot  find  symbol  [FE]                            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveType(t,  enclosing,  getPropertyName());  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveType(t,  enclosing,  getPropertyName());	  super.resolveType(t,    enclosing,    getReferencedType());    	non-compiled	[CE]  cannot  find  symbol	67	None	replace
573	[BUG]  [BUGGY]  super.resolveType(t,  enclosing,  getPropertyTypeName());  [CE]  cannot  find  symbol  [FE]                              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveType(t,  enclosing,  getPropertyTypeName());  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveType(t,  enclosing,  getPropertyTypeName());	  super.resolveType(t,    enclosing,    getReferencedType());    	non-compiled	[CE]  cannot  find  symbol	67	None	replace
574	[BUG]  [BUGGY]  super.resolveInternal(t,  enclosing,  propertyName,  reference,  getPropertyName());  [CE]  cannot  find  symbol  propertyName  [FE]              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  enclosing,  propertyName,  reference,  getPropertyName());  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  enclosing,  propertyName,  reference,  getPropertyName());	  super.resolveInternal(t,    enclosing,    propertyName,    getPropertyName());    	non-compiled	[CE]  cannot  find  symbol  propertyName	52	None	replace
575	[BUG]  [BUGGY]  super.resolveInternal(t,  enclosing,  registerType);  [CE]  cannot  find  symbol  registerType  [FE]                              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  enclosing,  registerType);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  enclosing,  registerType);	  super.resolveInternal(registry,    enclosing,    t);    	non-compiled	[CE]  cannot  find  symbol  registerType	19	None	replace
576	[BUG]  [BUGGY]  super.resolveInternal(t,  enclosing,  detectPrototypeCycle());  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  enclosing,  detectPrototypeCycle());  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  enclosing,  detectPrototypeCycle());	  super.resolveInternal(t,    enclosing,    deferred);    	non-compiled	[CE]  cannot  find  symbol	70	None	replace
577	[BUG]  [BUGGY]  PropertyRegistry  registry  =  propertyNodes.getPropertyRegistry(propertyName);  [CE]  cannot  find  symbol  [FE]                              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  PropertyRegistry  registry  =  propertyNodes.getPropertyRegistry(propertyName);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	PropertyRegistry  registry  =  propertyNodes.getPropertyRegistry(propertyName);	  PropertyRegistry    registry    =    enclosing.getPropertyRegistry(propertyName);    	non-compiled	[CE]  cannot  find  symbol	34	None	replace
578	[BUG]  [BUGGY]  super.resolvePropertyInternal(t,  delegate);  [CE]  cannot  find  symbol  delegate  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolvePropertyInternal(t,  delegate);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolvePropertyInternal(t,  delegate);	  super.resolvePropertyInternal(t,    type);    	non-compiled	[CE]  cannot  find  symbol  delegate	44	None	replace
579	[BUG]  [BUGGY]  Super.resolveInternal(t,  enclosing,  propertyNode,  null,  false);  [CE]  cannot  find  symbol  propertyNode  [FE]                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  Super.resolveInternal(t,  enclosing,  propertyNode,  null,  false);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	Super.resolveInternal(t,  enclosing,  propertyNode,  null,  false);	  super.resolveInternal(t,    enclosing,    null,    false);    	non-compiled	[CE]  cannot  find  symbol  propertyNode	4	None	replace
580	[BUG]  [BUGGY]  super.resolveInternal(t,  enclosing,  null,  type,  false);  [CE]  cannot  find  symbol  type  [FE]                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  enclosing,  null,  type,  false);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  enclosing,  null,  type,  false);	  super.resolveInternal(t,    enclosing,    null,    false);    	non-compiled	[CE]  cannot  find  symbol  type	4	None	replace
581	[BUG]  [BUGGY]  super.resolveInternal(t,  enclosing,  getPropertyName(),  null,  false);  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  enclosing,  getPropertyName(),  null,  false);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  enclosing,  getPropertyName(),  null,  false);	  super.resolveInternal(t,    enclosing,    null,    false);    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
582	[BUG]  [BUGGY]  Super.resolveInternal(t,  enclosing,  propertyName,  getPropertyName());  [CE]  cannot  find  symbol  propertyName  [FE]                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  Super.resolveInternal(t,  enclosing,  propertyName,  getPropertyName());  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	Super.resolveInternal(t,  enclosing,  propertyName,  getPropertyName());	  super.resolveInternal(t,    enclosing,    type,    getPropertyName());    	non-compiled	[CE]  cannot  find  symbol  propertyName	55	None	replace
583	[BUG]  [BUGGY]  super.resolveInternal(t,  enclosing,  DEFAULT_TYPE_NOT_IMPLEMENTED,  getPropertyName());  [CE]  cannot  find  symbol  DEFAULT_TYPE_NOT_IMPLEMENTED  [FE]                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  enclosing,  DEFAULT_TYPE_NOT_IMPLEMENTED,  getPropertyName());  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  enclosing,  DEFAULT_TYPE_NOT_IMPLEMENTED,  getPropertyName());	  super.resolveInternal(t,    enclosing,    type,    getPropertyName());    	non-compiled	[CE]  cannot  find  symbol  DEFAULT_TYPE_NOT_IMPLEMENTED	55	None	replace
584	[BUG]  [BUGGY]  super.resolvePropertyInternal(t,  enclosing,  getType());  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolvePropertyInternal(t,  enclosing,  getType());  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolvePropertyInternal(t,  enclosing,  getType());	  super.resolvePropertyInternal(t,    enclosing,    getReferencedType());    	non-compiled	[CE]  cannot  find  symbol	71	None	replace
585	[BUG]  [BUGGY]  super.resolveInternal(t,  enclosing,  false,  enclosing);  [CE]  no  suitable  method  found  for  resolveInternal(ErrorReporter,StaticScope<JSType>,boolean,StaticScope<JSType>)  [FE]              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  enclosing,  false,  enclosing);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  enclosing,  false,  enclosing);	  super.resolveInternal(t,    enclosing,    false,    propertyNode);    	non-compiled	[CE]  no  suitable  method  found  for  resolveInternal(ErrorReporter,StaticScope<JSType>,boolean,StaticScope<JSType>)	87	None	replace
586	[BUG]  [BUGGY]  super.resolveInternal(t,  enclosing,  false,  charno);  [CE]  no  suitable  method  found  for  resolveInternal(ErrorReporter,StaticScope<JSType>,boolean,int)  [FE]                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  enclosing,  false,  charno);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  enclosing,  false,  charno);	  super.resolveInternal(t,    enclosing,    false,    propertyNode);    	non-compiled	[CE]  no  suitable  method  found  for  resolveInternal(ErrorReporter,StaticScope<JSType>,boolean,int)	87	None	replace
587	[BUG]  [BUGGY]  super.resolveInternal(t,  enclosing,  getPropertyName(),  propertyName,  null);  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  enclosing,  getPropertyName(),  propertyName,  null);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  enclosing,  getPropertyName(),  propertyName,  null);	  super.resolveInternal(t,    enclosing,    getPropertyName(),    null);    	non-compiled	[CE]  cannot  find  symbol	102	None	replace
588	[BUG]  [BUGGY]  super.resolveType(t,  null);  [CE]  cannot  find  symbol  [FE]                              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveType(t,  null);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveType(t,  null);	  super.resolveType(t,    type);    	non-compiled	[CE]  cannot  find  symbol	68	None	replace
589	[BUG]  [BUGGY]  Predicate  validator  =  getReferencedType().validate(t,  enclosing);  [CE]  cannot  find  symbol  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  Predicate  validator  =  getReferencedType().validate(t,  enclosing);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	Predicate  validator  =  getReferencedType().validate(t,  enclosing);	          Predicate    validator    =    getReferencedType();    	non-compiled	[CE]  cannot  find  symbol	56	None	replace
590	[BUG]  [BUGGY]  Predicate  validator  =  getReferencedType().validateValues();  [CE]  cannot  find  symbol  [FE]                            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  Predicate  validator  =  getReferencedType().validateValues();  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	Predicate  validator  =  getReferencedType().validateValues();	          Predicate    validator    =    getReferencedType();    	non-compiled	[CE]  cannot  find  symbol	56	None	replace
591	[BUG]  [BUGGY]  super.resolveInternal(t,  enclosing,  propertyName,  getReferencedType(),  type);  [CE]  cannot  find  symbol  propertyName  [FE]            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  enclosing,  propertyName,  getReferencedType(),  type);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  enclosing,  propertyName,  getReferencedType(),  type);	  super.resolveInternal(t,    enclosing,    propertyName,    getReferencedType());    	non-compiled	[CE]  cannot  find  symbol  propertyName	73	None	replace
592	[BUG]  [BUGGY]  super.resolveInternal(t,  enclosing,  propertyName,  charno);  [CE]  cannot  find  symbol  propertyName  [FE]              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  enclosing,  propertyName,  charno);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  enclosing,  propertyName,  charno);	  super.resolveInternal(t,    enclosing,    sourceName);    	non-compiled	[CE]  cannot  find  symbol  propertyName	85	None	replace
593	[BUG]  [BUGGY]  Preconditions.checkArgument(resolved!=  t);  [CE]  incomparable  types:  boolean  and  ErrorReporter  [FE]                            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  Preconditions.checkArgument(resolved!=  t);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	Preconditions.checkArgument(resolved!=  t);	  Preconditions.checkArgument(resolved);    timeout    	non-compiled	[CE]  incomparable  types:  boolean  and  ErrorReporter	95	None	replace
594	[BUG]  [BUGGY]  super.resolveInternal(t,  null);  super.resolveInternal(t,  null);  this.setPropertyContinuations(propertyContinuations);  [CE]  cannot  find  symbol  [FE]                                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  null);  super.resolveInternal(t,  null);  this.setPropertyContinuations(propertyContinuations);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,    null);    super.resolveInternal(t,  null);  this.setPropertyContinuations(propertyContinuations);	  timeout    	non-compiled	[CE]  cannot  find  symbol	30	None	add
595	[BUG]  [BUGGY]  super.resolveInternal(t,  null);  super.resolveInternal(t,  null);  setPropertyContinuations(propertyContinuations);  [CE]  cannot  find  symbol  [FE]                                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  null);  super.resolveInternal(t,  null);  setPropertyContinuations(propertyContinuations);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,    null);    super.resolveInternal(t,  null);  setPropertyContinuations(propertyContinuations);	  timeout    	non-compiled	[CE]  cannot  find  symbol	30	None	add
596	[BUG]  [BUGGY]  super.resolveInternal(t,  null);  super.resolveInternal(t,  null);  t.setPropertyContinuations(propertyContinuations);  [CE]  cannot  find  symbol  [FE]                                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  null);  super.resolveInternal(t,  null);  t.setPropertyContinuations(propertyContinuations);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,    null);    super.resolveInternal(t,  null);  t.setPropertyContinuations(propertyContinuations);	  timeout    	non-compiled	[CE]  cannot  find  symbol	30	None	add
597	[BUG]  [BUGGY]  super.resolvePropertyInternal(t,  null);  [CE]  cannot  find  symbol  [FE]                                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolvePropertyInternal(t,  null);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolvePropertyInternal(t,  null);	  super.resolveInternal(t,    null);    timeout    	non-compiled	[CE]  cannot  find  symbol	31	None	replace
598	[BUG]  [BUGGY]  super.resolveInternal(t,  getPropertyType());  [CE]  method  getPropertyType  in  class  ObjectType  cannot  be  applied  to  given  types;  [FE]                                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  getPropertyType());  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  getPropertyType());	  super.resolveInternal(t,    null);    timeout    	non-compiled	[CE]  method  getPropertyType  in  class  ObjectType  cannot  be  applied  to  given  types;	31	None	replace
599	[BUG]  [BUGGY]  super.resolvePropertyInternal(t,  enclosing,  this,  type);  [CE]  cannot  find  symbol  type  [FE]                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolvePropertyInternal(t,  enclosing,  this,  type);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolvePropertyInternal(t,  enclosing,  this,  type);	  super.resolvePropertyInternal(t,    enclosing,    this);    	non-compiled	[CE]  cannot  find  symbol  type	98	None	replace
600	[BUG]  [BUGGY]  super.resolveInternal(t,  enclosing,  propertyContinuations,  propertyName);  [CE]  cannot  find  symbol  propertyName  [FE]                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  enclosing,  propertyContinuations,  propertyName);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  enclosing,  propertyContinuations,  propertyName);	  super.resolveInternal(t,    enclosing,    propertyContinuations);    	non-compiled	[CE]  cannot  find  symbol  propertyName	20	None	replace
601	[BUG]  [BUGGY]  super.resolveInternal(t,  enclosing,  registry,  props);  [CE]  cannot  find  symbol  props  [FE]                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  enclosing,  registry,  props);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  enclosing,  registry,  props);	  super.resolveInternal(t,    enclosing,    propertyNode,    registry);    	non-compiled	[CE]  cannot  find  symbol  props	80	None	replace
602	[BUG]  [BUGGY]  super.resolveInternal(t,  enclosing,  registry,  name);  [CE]  cannot  find  symbol  name  [FE]                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  enclosing,  registry,  name);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  enclosing,  registry,  name);	  super.resolveInternal(t,    enclosing,    propertyNode,    registry);    	non-compiled	[CE]  cannot  find  symbol  name	80	None	replace
603	[BUG]  [BUGGY]  super.resolveInternal(t,  enclosing,  this.propertyNode,  false);  [CE]  cannot  find  symbol  propertyNode  [FE]            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  enclosing,  this.propertyNode,  false);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  enclosing,  this.propertyNode,  false);	  super.resolveInternal(t,    enclosing,    propertyNode,    false);    	non-compiled	[CE]  cannot  find  symbol  propertyNode	86	None	replace
604	[BUG]  [BUGGY]  super.resolveInternal(t,  enclosing,  registry,  false);  [CE]  no  suitable  method  found  for  resolveInternal(ErrorReporter,StaticScope<JSType>,JSTypeRegistry,boolean)  [FE]              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  enclosing,  registry,  false);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  enclosing,  registry,  false);	  super.resolveInternal(t,    enclosing,    propertyNode,    false);    	non-compiled	[CE]  no  suitable  method  found  for  resolveInternal(ErrorReporter,StaticScope<JSType>,JSTypeRegistry,boolean)	86	None	replace
605	[BUG]  [BUGGY]  super.resolveType(registry,  t,  enclosing);  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveType(registry,  t,  enclosing);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveType(registry,  t,  enclosing);	  super.resolveType(t,    enclosing,    registry);    	non-compiled	[CE]  cannot  find  symbol	63	None	replace
606	[BUG]  [BUGGY]  super.resolveType(registry,  enclosing,  registry);  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveType(registry,  enclosing,  registry);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveType(registry,  enclosing,  registry);	  super.resolveType(t,    enclosing,    registry);    	non-compiled	[CE]  cannot  find  symbol	63	None	replace
607	[BUG]  [BUGGY]  super.resolveInternal(t,  enclosing,  registry.getReferencedType());  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  enclosing,  registry.getReferencedType());  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  enclosing,  registry.getReferencedType());	  super.resolveInternal(t,    type,    enclosing,    getReferencedType());    	non-compiled	[CE]  cannot  find  symbol	59	None	replace
608	[BUG]  [BUGGY]  super.resolveType(t,  enclosing,  getNativeType(JSTypeNative.UNKNOWN_TYPE));  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveType(t,  enclosing,  getNativeType(JSTypeNative.UNKNOWN_TYPE));  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveType(t,  enclosing,  getNativeType(JSTypeNative.UNKNOWN_TYPE));	  super.resolveType(t,    enclosing,    this);    	non-compiled	[CE]  cannot  find  symbol	90	None	replace
609	[BUG]  [BUGGY]  super.resolveType(t,  enclosing,  getNativeType(JSTypeNative.NO_TYPE));  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveType(t,  enclosing,  getNativeType(JSTypeNative.NO_TYPE));  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveType(t,  enclosing,  getNativeType(JSTypeNative.NO_TYPE));	  super.resolveType(t,    enclosing,    this);    	non-compiled	[CE]  cannot  find  symbol	90	None	replace
610	[BUG]  [BUGGY]  super.resolveInternal(t,  enclosing,  getPropertyNode(),  getReferencedType(),  false);  [CE]  method  getPropertyNode  in  class  ObjectType  cannot  be  applied  to  given  types;  [FE]            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  enclosing,  getPropertyNode(),  getReferencedType(),  false);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  enclosing,  getPropertyNode(),  getReferencedType(),  false);	  super.resolveInternal(t,    enclosing,    getReferencedType(),    false);    	non-compiled	[CE]  method  getPropertyNode  in  class  ObjectType  cannot  be  applied  to  given  types;	91	None	replace
611	[BUG]  [BUGGY]  super.resolveInternal(t,  enclosing,  getType());  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  enclosing,  getType());  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  enclosing,  getType());	  super.resolveInternal(t,    enclosing,    DEFAULT_TYPE);    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
612	[BUG]  [BUGGY]  super.resolveInternal(t,  enclosing,  false,  forAnnotations,  inferred);  [CE]  cannot  find  symbol  forAnnotations  [FE]                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  enclosing,  false,  forAnnotations,  inferred);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  enclosing,  false,  forAnnotations,  inferred);	  super.resolveInternal(t,    enclosing,    false,    forAnnotations);    	non-compiled	[CE]  cannot  find  symbol  forAnnotations	3	None	replace
613	[BUG]  [BUGGY]  super.resolveInternal(t,  enclosing,  registry,  problemReporter);  [CE]  cannot  find  symbol  problemReporter  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  enclosing,  registry,  problemReporter);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  enclosing,  registry,  problemReporter);	  super.resolveInternal(t,    enclosing,    registry,    propertyNode);    	non-compiled	[CE]  cannot  find  symbol  problemReporter	17	None	replace
614	[BUG]  [BUGGY]  Predicate  validator  =  registry.getValueForType(t.getValue());  [CE]  cannot  find  symbol  [FE]                                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  Predicate  validator  =  registry.getValueForType(t.getValue());  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	Predicate  validator  =  registry.getValueForType(t.getValue());	  Predicate    validator    =    t.getValue();    	non-compiled	[CE]  cannot  find  symbol	97	None	replace
615	[BUG]  [BUGGY]  Predicate  validator  =  registry.getValueForType(t);  [CE]  cannot  find  symbol  [FE]                                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  Predicate  validator  =  registry.getValueForType(t);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	Predicate  validator  =  registry.getValueForType(t);	  Predicate    validator    =    t.getValue();    	non-compiled	[CE]  cannot  find  symbol	97	None	replace
616	[BUG]  [BUGGY]  Predicate  validator  =  getValueForAnnotations(enclosing,  t.getModule());  [CE]  cannot  find  symbol  [FE]                                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  Predicate  validator  =  getValueForAnnotations(enclosing,  t.getModule());  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	Predicate  validator  =  getValueForAnnotations(enclosing,  t.getModule());	  Predicate    validator    =    getValueForAnnotations(enclosing);    	non-compiled	[CE]  cannot  find  symbol	37	None	replace
617	[BUG]  [BUGGY]  super.resolveInternal(t,  enclosing,  getPropertyType(),  type,  null);  [CE]  method  getPropertyType  in  class  ObjectType  cannot  be  applied  to  given  types;  [FE]              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  enclosing,  getPropertyType(),  type,  null);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  enclosing,  getPropertyType(),  type,  null);	  super.resolveInternal(t,    enclosing,    getPropertyType(),    type);    	non-compiled	[CE]  method  getPropertyType  in  class  ObjectType  cannot  be  applied  to  given  types;	45	None	replace
618	[BUG]  [BUGGY]  super.resolveInternal(t,  enclosing,  false,  t.type);  [CE]  cannot  find  symbol  type  [FE]                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  enclosing,  false,  t.type);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  enclosing,  false,  t.type);	  super.resolveInternal(t,    enclosing,    false,    type);    	non-compiled	[CE]  cannot  find  symbol  type	7	None	replace
619	[BUG]  [BUGGY]  super.resolveInternal(t,  enclosing,  propertyNode,  getType(),  getPropertyType());  [CE]  cannot  find  symbol  propertyNode  [FE]              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  enclosing,  propertyNode,  getType(),  getPropertyType());  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  enclosing,  propertyNode,  getType(),  getPropertyType());	  super.resolveInternal(t,    enclosing,    getType(),    getPropertyType());    	non-compiled	[CE]  cannot  find  symbol  propertyNode	92	None	replace
620	[BUG]  [BUGGY]  super.resolveInternal(t,  enclosing,  propertyNode,  type);  [CE]  cannot  find  symbol  propertyNode  [FE]                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  enclosing,  propertyNode,  type);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  enclosing,  propertyNode,  type);	  super.resolveInternal(t,    enclosing,    registry,    type);    	non-compiled	[CE]  cannot  find  symbol  propertyNode	16	None	replace
621	[BUG]  [BUGGY]  PropertyRegistry  registry  =  getPropertyRegistry(propertyName,  propertyNode);  [CE]  cannot  find  symbol  [FE]                              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  PropertyRegistry  registry  =  getPropertyRegistry(propertyName,  propertyNode);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	PropertyRegistry  registry  =  getPropertyRegistry(propertyName,  propertyNode);	  PropertyRegistry    registry    =    getPropertyRegistry(propertyName);    	non-compiled	[CE]  cannot  find  symbol	96	None	replace
622	[BUG]  [BUGGY]  PropertyRegistry  registry  =  getPropertyRegistry(propertyName,  references);  [CE]  cannot  find  symbol  [FE]                                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  PropertyRegistry  registry  =  getPropertyRegistry(propertyName,  references);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	PropertyRegistry  registry  =  getPropertyRegistry(propertyName,  references);	  PropertyRegistry    registry    =    getPropertyRegistry(propertyName);    	non-compiled	[CE]  cannot  find  symbol	96	None	replace
623	[BUG]  [BUGGY]  Predicates.checkState(resolved);  [CE]  cannot  find  symbol  Predicates  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  Predicates.checkState(resolved);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	Predicates.checkState(resolved);	  Predicates.checkNotNull(propertyNode);    	non-compiled	[CE]  cannot  find  symbol  Predicates	76	None	replace
624	[BUG]  [BUGGY]  super.resolveInternal(t,  enclosing,  DEFAULT_TYPE,  getReferencedType());  [CE]  cannot  find  symbol  DEFAULT_TYPE  [FE]                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  enclosing,  DEFAULT_TYPE,  getReferencedType());  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  enclosing,  DEFAULT_TYPE,  getReferencedType());	  super.resolveInternal(t,    enclosing,    type,    getReferencedType());    	non-compiled	[CE]  cannot  find  symbol  DEFAULT_TYPE	58	None	replace
625	[BUG]  [BUGGY]  PropertyRegistry  registry  =  propertyNodes.getPropertyRegistry();  [CE]  cannot  find  symbol  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  PropertyRegistry  registry  =  propertyNodes.getPropertyRegistry();  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	PropertyRegistry  registry  =  propertyNodes.getPropertyRegistry();	  PropertyRegistry    registry    =    t.getPropertyRegistry();    	non-compiled	[CE]  cannot  find  symbol	93	None	replace
626	[BUG]  [BUGGY]  super.resolveInternal(t,  enclosing,  charno);  [CE]  no  suitable  method  found  for  resolveInternal(ErrorReporter,StaticScope<JSType>,int)  [FE]                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  enclosing,  charno);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  enclosing,  charno);	  super.resolveInternal(t,    enclosing,    inferred);    	non-compiled	[CE]  no  suitable  method  found  for  resolveInternal(ErrorReporter,StaticScope<JSType>,int)	79	None	replace
627	[BUG]  [BUGGY]  PropertyRegistry  registry  =  enclosing.findPropertyRegistry(propertyName);  [CE]  cannot  find  symbol  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  PropertyRegistry  registry  =  enclosing.findPropertyRegistry(propertyName);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	PropertyRegistry  registry  =  enclosing.findPropertyRegistry(propertyName);	  PropertyRegistry    registry    =    enclosing.getPropertyRegistry();    	non-compiled	[CE]  cannot  find  symbol	32	None	replace
628	[BUG]  [BUGGY]  super.resolveInternal(t,  enclosing,  getPropertyType(),  types,  getReferencedType());  [CE]  method  getPropertyType  in  class  ObjectType  cannot  be  applied  to  given  types;  [FE]                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  enclosing,  getPropertyType(),  types,  getReferencedType());  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  enclosing,  getPropertyType(),  types,  getReferencedType());	  super.resolveInternal(t,    enclosing,    getPropertyType(),    getReferencedType());    	non-compiled	[CE]  method  getPropertyType  in  class  ObjectType  cannot  be  applied  to  given  types;	77	None	replace
629	[BUG]  [BUGGY]  Preconditions.checkArgument(resolved);  Preconditions.checkArgument(resolved);  setPropertyContinuations(propertyContinuations);  [CE]  cannot  find  symbol  [FE]                            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  Preconditions.checkArgument(resolved);  Preconditions.checkArgument(resolved);  setPropertyContinuations(propertyContinuations);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	Preconditions.checkArgument(resolved);    Preconditions.checkArgument(resolved);  setPropertyContinuations(propertyContinuations);	  timeout    	non-compiled	[CE]  cannot  find  symbol	94	None	add
630	[BUG]  [BUGGY]  Preconditions.checkArgument(resolved);  Preconditions.checkArgument(resolved);  this.validator  =  getReferencedType();  [CE]  incompatible  types  [FE]                              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  Preconditions.checkArgument(resolved);  Preconditions.checkArgument(resolved);  this.validator  =  getReferencedType();  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	Preconditions.checkArgument(resolved);    Preconditions.checkArgument(resolved);  this.validator  =  getReferencedType();	  timeout    	non-compiled	[CE]  incompatible  types	94	None	add
631	[BUG]  [BUGGY]  Preconditions.checkArgument(resolved);  Preconditions.checkArgument(resolved);  setPropertyContinuations(properties);  [CE]  cannot  find  symbol  properties  [FE]                                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  Preconditions.checkArgument(resolved);  Preconditions.checkArgument(resolved);  setPropertyContinuations(properties);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	Preconditions.checkArgument(resolved);    Preconditions.checkArgument(resolved);  setPropertyContinuations(properties);	  timeout    	non-compiled	[CE]  cannot  find  symbol  properties	94	None	add
632	[BUG]  [BUGGY]  Predicates.checkNotNull(registry,  enclosing);  [CE]  cannot  find  symbol  Predicates  [FE]                                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  Predicates.checkNotNull(registry,  enclosing);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	Predicates.checkNotNull(registry,  enclosing);	  Predicates.checkNotNull(enclosing);    	non-compiled	[CE]  cannot  find  symbol  Predicates	36	None	replace
633	[BUG]  [BUGGY]  Predicates.checkArgument(enclosing!=  null);  [CE]  cannot  find  symbol  Predicates  [FE]                                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  Predicates.checkArgument(enclosing!=  null);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	Predicates.checkArgument(enclosing!=  null);	  Predicates.checkNotNull(enclosing);    	non-compiled	[CE]  cannot  find  symbol  Predicates	36	None	replace
634	[BUG]  [BUGGY]  super.resolveInternal(t,  enclosing,  propertyNode,  getPropertyName(),  reference);  [CE]  cannot  find  symbol  propertyNode  [FE]            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  enclosing,  propertyNode,  getPropertyName(),  reference);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  enclosing,  propertyNode,  getPropertyName(),  reference);	  super.resolveInternal(t,    enclosing,    getPropertyName(),    propertyName);    	non-compiled	[CE]  cannot  find  symbol  propertyNode	101	None	replace
635	[BUG]  [BUGGY]  super.resolveInternal(t,  enclosing,  propertyName,  getPropertyName(),  sourceName);  [CE]  cannot  find  symbol  propertyName  [FE]              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  enclosing,  propertyName,  getPropertyName(),  sourceName);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  enclosing,  propertyName,  getPropertyName(),  sourceName);	  super.resolveInternal(t,    enclosing,    getPropertyName(),    propertyName);    	non-compiled	[CE]  cannot  find  symbol  propertyName	101	None	replace
636	[BUG]  [BUGGY]  super.resolveInternal(t,  enclosing,  propertyNode,  getPropertyName(),  type);  [CE]  cannot  find  symbol  propertyNode  [FE]                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  enclosing,  propertyNode,  getPropertyName(),  type);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  enclosing,  propertyNode,  getPropertyName(),  type);	  super.resolveInternal(t,    enclosing,    getPropertyName(),    propertyNode);    	non-compiled	[CE]  cannot  find  symbol  propertyNode	54	None	replace
637	[BUG]  [BUGGY]  super.resolveInternal(t,  enclosing,  propertyNode,  getPropertyName(),  sourceName);  [CE]  cannot  find  symbol  propertyNode  [FE]                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  enclosing,  propertyNode,  getPropertyName(),  sourceName);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  enclosing,  propertyNode,  getPropertyName(),  sourceName);	  super.resolveInternal(t,    enclosing,    getPropertyName(),    propertyNode);    	non-compiled	[CE]  cannot  find  symbol  propertyNode	54	None	replace
638	[BUG]  [BUGGY]  super.resolveInternal(t,  enclosing,  this.type);  [CE]  cannot  find  symbol  type  [FE]                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  enclosing,  this.type);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  enclosing,  this.type);	  super.resolveInternal(t,    enclosing,    propertyType);    	non-compiled	[CE]  cannot  find  symbol  type	14	None	replace
639	[BUG]  [BUGGY]  super.resolveInternal(t,  resolved,  enclosing);  [CE]  no  suitable  method  found  for  resolveInternal(ErrorReporter,boolean,StaticScope<JSType>)  [FE]                            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  resolved,  enclosing);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  resolved,  enclosing);	  super.resolveInternal(t,    resolved);    	non-compiled	[CE]  no  suitable  method  found  for  resolveInternal(ErrorReporter,boolean,StaticScope<JSType>)	27	None	replace
640	[BUG]  [BUGGY]  super.resolveInternal(t,  getPropertyName(),  resolved);  [CE]  cannot  find  symbol  [FE]                              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  getPropertyName(),  resolved);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  getPropertyName(),  resolved);	  super.resolveInternal(t,    resolved);    	non-compiled	[CE]  cannot  find  symbol	27	None	replace
641	[BUG]  [BUGGY]  super.resolveInternal(t,  enclosing,  getPropertyNode(propertyName));  [CE]  cannot  find  symbol  propertyName  [FE]            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  enclosing,  getPropertyNode(propertyName));  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  enclosing,  getPropertyNode(propertyName));	  super.resolveInternal(t,    enclosing,    getPropertyNode());    	non-compiled	[CE]  cannot  find  symbol  propertyName	99	None	replace
642	[BUG]  [BUGGY]  super.resolveInternal(t,  enclosing,  getPropertyNode(propertyNode));  [CE]  cannot  find  symbol  propertyNode  [FE]              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  enclosing,  getPropertyNode(propertyNode));  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  enclosing,  getPropertyNode(propertyNode));	  super.resolveInternal(t,    enclosing,    getPropertyNode());    	non-compiled	[CE]  cannot  find  symbol  propertyNode	99	None	replace
643	[BUG]  [BUGGY]  super.resolveInternal(t,  enclosing,  props,  getPropertyName());  [CE]  cannot  find  symbol  props  [FE]                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  enclosing,  props,  getPropertyName());  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  enclosing,  props,  getPropertyName());	  super.resolveInternal(t,    propertyNode,    enclosing,    getPropertyName());    	non-compiled	[CE]  cannot  find  symbol  props	53	None	replace
644	[BUG]  [BUGGY]  Super.resolveInternal(t,  enclosing,  getReferencedType(),  handleTypeCycle(t);  [CE]  ')'  expected  [FE]                            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  Super.resolveInternal(t,  enclosing,  getReferencedType(),  handleTypeCycle(t);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	Super.resolveInternal(t,  enclosing,  getReferencedType(),  handleTypeCycle(t);	  Super.resolveInternal(t,    enclosing,    getReferencedType(),    type);    	non-compiled	[CE]  ')'  expected	62	None	replace
645	[BUG]  [BUGGY]  super.resolveInternal(t,  enclosing,  propertyNode,  getPropertyTypeName(),  getReferencedType());  [CE]  cannot  find  symbol  propertyNode  [FE]                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  enclosing,  propertyNode,  getPropertyTypeName(),  getReferencedType());  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  enclosing,  propertyNode,  getPropertyTypeName(),  getReferencedType());	  super.resolveInternal(t,    enclosing,    getPropertyTypeName(),    getReferencedType());    	non-compiled	[CE]  cannot  find  symbol  propertyNode	104	None	replace
646	[BUG]  [BUGGY]  super.resolveInternal(t,  enclosing,  propertyNode,  inferred);  [CE]  cannot  find  symbol  propertyNode  [FE]                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  enclosing,  propertyNode,  inferred);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  enclosing,  propertyNode,  inferred);	  super.resolveInternal(t,    enclosing,    registry,    inferred);    	non-compiled	[CE]  cannot  find  symbol  propertyNode	81	None	replace
647	[BUG]  [BUGGY]  super.resolveInternal(t,  enclosing,  propertyNode,  forAnnotations);  [CE]  cannot  find  symbol  propertyNode  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  enclosing,  propertyNode,  forAnnotations);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  enclosing,  propertyNode,  forAnnotations);	  super.resolveInternal(t,    enclosing,    registry,    inferred);    	non-compiled	[CE]  cannot  find  symbol  propertyNode	81	None	replace
648	[BUG]  [BUGGY]  super.resolveInternal(t,  enclosing,  propertyNode,  resolved);  [CE]  cannot  find  symbol  propertyNode  [FE]                            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  super.resolveInternal(t,  enclosing,  propertyNode,  resolved);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  enclosing,  propertyNode,  resolved);	  super.resolveInternal(t,    enclosing,    registry,    inferred);    	non-compiled	[CE]  cannot  find  symbol  propertyNode	81	None	replace
649	[BUG]  [BUGGY]  PropertyRegistry  registry  =  getPropertyRegistry().getNativeType(JSTypeNative.UNKNOWN_TYPE);  [CE]  cannot  find  symbol  [FE]                                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  PropertyRegistry  registry  =  getPropertyRegistry().getNativeType(JSTypeNative.UNKNOWN_TYPE);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	PropertyRegistry  registry  =  getPropertyRegistry().getNativeType(JSTypeNative.UNKNOWN_TYPE);	  PropertyRegistry    registry    =    getPropertyRegistry();    	non-compiled	[CE]  cannot  find  symbol	35	None	replace
650	[BUG]  [BUGGY]  PropertyRegistry  registry  =  getPropertyRegistry().getNativeType(JSTypeNative.NO_TYPE);  [CE]  cannot  find  symbol  [FE]                                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  PropertyRegistry  registry  =  getPropertyRegistry().getNativeType(JSTypeNative.NO_TYPE);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	PropertyRegistry  registry  =  getPropertyRegistry().getNativeType(JSTypeNative.NO_TYPE);	  PropertyRegistry    registry    =    getPropertyRegistry();    	non-compiled	[CE]  cannot  find  symbol	35	None	replace
651	[BUG]  [BUGGY]  Super.resolveInternal(t,  enclosing,  propertyNode,  null);  [CE]  cannot  find  symbol  propertyNode  [FE]            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  Super.resolveInternal(t,  enclosing,  propertyNode,  null);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	Super.resolveInternal(t,  enclosing,  propertyNode,  null);	  super.resolveInternal(t,    enclosing,    null);    	non-compiled	[CE]  cannot  find  symbol  propertyNode	12	None	replace
652	[BUG]  [BUGGY]  Super.resolveInternal(t,  enclosing,  props);  [CE]  cannot  find  symbol  props  [FE]                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  Super.resolveInternal(t,  enclosing,  props);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	Super.resolveInternal(t,  enclosing,  props);	  Super.resolveInternal(t,    enclosing,    propertyNode);    	non-compiled	[CE]  cannot  find  symbol  props	106	None	replace
653	[BUG]  [BUGGY]  Super.resolveInternal(t,  enclosing,  declaration);  [CE]  cannot  find  symbol  declaration  [FE]                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {      [BUGGY]  Super.resolveInternal(t,  enclosing,  declaration);  [BUGGY]      finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	Super.resolveInternal(t,  enclosing,  declaration);	  Super.resolveInternal(t,    enclosing,    propertyNode);    	non-compiled	[CE]  cannot  find  symbol  declaration	106	None	replace
