bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  super.resolveInternal(t,  enclosing,  propertyNode);  [CE]  cannot  find  symbol  propertyNode  [FE]    AssertionFailedError  [CONTEXT]      boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  [BUGGY]  super.resolveInternal(t,  enclosing,  propertyNode);  [BUGGY]  finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  enclosing,  propertyNode);	super.resolveInternal(t,  enclosing);  	non-compiled	[CE]  cannot  find  symbol  propertyNode	11	None	replace
2	[BUG]  [BUGGY]  super.resolveInternal(t,  enclosing,  type);  [CE]  cannot  find  symbol  type  [FE]      AssertionFailedError  [CONTEXT]      boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  [BUGGY]  super.resolveInternal(t,  enclosing,  type);  [BUGGY]  finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  enclosing,  type);	super.resolveInternal(t,  enclosing);  	non-compiled	[CE]  cannot  find  symbol  type	11	None	replace
3	[BUG]  [BUGGY]  super.resolveInternal(t,  enclosing,  forAnnotations);  [CE]  cannot  find  symbol  forAnnotations  [FE]        AssertionFailedError  [CONTEXT]      boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  [BUGGY]  super.resolveInternal(t,  enclosing,  forAnnotations);  [BUGGY]  finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  enclosing,  forAnnotations);	super.resolveInternal(t,  enclosing);  	non-compiled	[CE]  cannot  find  symbol  forAnnotations	11	None	replace
4	[BUG]  [BUGGY]  super.resolveInternal(t,  enclosing,  getReferencedType());  [CE]  no  suitable  method  found  for  resolveInternal(ErrorReporter,StaticScope<JSType>,JSType)  [FE]          AssertionFailedError  [CONTEXT]      boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  [BUGGY]  super.resolveInternal(t,  enclosing,  getReferencedType());  [BUGGY]  finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  enclosing,  getReferencedType());	super.resolveInternal(t,  enclosing);  	non-compiled	[CE]  no  suitable  method  found  for  resolveInternal(ErrorReporter,StaticScope<JSType>,JSType)	11	None	replace
5	[BUG]  [BUGGY]  super.resolveType(t,  enclosing);  [CE]  cannot  find  symbol  [FE]            AssertionFailedError  [CONTEXT]      boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  [BUGGY]  super.resolveType(t,  enclosing);  [BUGGY]  finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveType(t,  enclosing);	super.resolveInternal(t,  enclosing);  	non-compiled	[CE]  cannot  find  symbol	11	None	replace
6	[BUG]  [BUGGY]  super.resolveInternal(t,  enclosing,  registry);  [CE]  no  suitable  method  found  for  resolveInternal(ErrorReporter,StaticScope<JSType>,JSTypeRegistry)  [FE]              AssertionFailedError  [CONTEXT]      boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  [BUGGY]  super.resolveInternal(t,  enclosing,  registry);  [BUGGY]  finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  enclosing,  registry);	super.resolveInternal(t,  enclosing);  	non-compiled	[CE]  no  suitable  method  found  for  resolveInternal(ErrorReporter,StaticScope<JSType>,JSTypeRegistry)	11	None	replace
7	[BUG]  [BUGGY]  super.resolveInternal(t,  propertyNode);  [CE]  cannot  find  symbol  propertyNode  [FE]                AssertionFailedError  [CONTEXT]      boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  [BUGGY]  super.resolveInternal(t,  propertyNode);  [BUGGY]  finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  propertyNode);	super.resolveInternal(t,  enclosing);  	non-compiled	[CE]  cannot  find  symbol  propertyNode	11	None	replace
8	[BUG]  [BUGGY]  timeout  [FE]                  AssertionFailedError  [CONTEXT]      boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  [BUGGY]    [BUGGY]  finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	add	  	super.resolveInternal(t,  enclosing);  	compilable	timeout	11	1	replace
9	[BUG]  [BUGGY]    timeout  [FE]                  AssertionFailedError  [CONTEXT]      boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  [BUGGY]    [BUGGY]  finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	  	super.resolveInternal(t,  enclosing);  	compilable	timeout	11	1	replace
10	[BUG]  [BUGGY]  super.resolveInternal(t,  enclosing,  false);  [CE]  no  suitable  method  found  for  resolveInternal(ErrorReporter,StaticScope<JSType>,boolean)  [FE]    AssertionFailedError  [CONTEXT]      boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  [BUGGY]  super.resolveInternal(t,  enclosing,  false);  [BUGGY]  finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  enclosing,  false);	super.resolveInternal(t,  enclosing);  	non-compiled	[CE]  no  suitable  method  found  for  resolveInternal(ErrorReporter,StaticScope<JSType>,boolean)	11	None	replace
11	[BUG]  [BUGGY]  super.resolveInternal(t,  enclosing,  getPropertyType());  [CE]  method  getPropertyType  in  class  ObjectType  cannot  be  applied  to  given  types;  [FE]      AssertionFailedError  [CONTEXT]      boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  [BUGGY]  super.resolveInternal(t,  enclosing,  getPropertyType());  [BUGGY]  finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  enclosing,  getPropertyType());	super.resolveInternal(t,  enclosing);  	non-compiled	[CE]  method  getPropertyType  in  class  ObjectType  cannot  be  applied  to  given  types;	11	None	replace
12	[BUG]  [BUGGY]  super.resolvePropertyInternal(t,  enclosing);  [CE]  cannot  find  symbol  [FE]        AssertionFailedError  [CONTEXT]      boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  [BUGGY]  super.resolvePropertyInternal(t,  enclosing);  [BUGGY]  finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolvePropertyInternal(t,  enclosing);	super.resolveInternal(t,  enclosing);  	non-compiled	[CE]  cannot  find  symbol	11	None	replace
13	[BUG]  [BUGGY]  super.resolveInternal(t,  enclosing,  getPropertyName());  [CE]  cannot  find  symbol  [FE]    AssertionFailedError  [CONTEXT]      boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  [BUGGY]  super.resolveInternal(t,  enclosing,  getPropertyName());  [BUGGY]  finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  enclosing,  getPropertyName());	super.resolveInternal(t,  enclosing);  	non-compiled	[CE]  cannot  find  symbol	11	None	replace
