bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	failing_test_number	action	patch
1	[BUG] [BUGGY] validator.apply(type); [FE] AssertionFailedError [CONTEXT] private void setReferencedAndResolvedType(JSType type, ErrorReporter t, StaticScope<JSType> enclosing) { if (validator != null) { [BUGGY] validator.apply(type); [BUGGY] } setReferencedType(type); checkEnumElementCycle(t); setResolvedTypeInternal(getReferencedType()); } [CLASS] NamedType PropertyContinuation [METHOD] setReferencedAndResolvedType [RETURN_TYPE] void  JSType type ErrorReporter t JSType> enclosing [VARIABLES] ErrorReporter t JSType slotType type value boolean forAnnotations inferred resolved Node propertyNode StaticScope enclosing List propertyContinuations String propertyName reference sourceName long serialVersionUID int charno i lineno Predicate validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.4472135954999579	305	305	3	replace	
2	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] private void setReferencedAndResolvedType(JSType type, ErrorReporter t, StaticScope<JSType> enclosing) { if (validator != null) { [BUGGY] [BUGGY] validator.apply(type); } setReferencedType(type); checkEnumElementCycle(t); setResolvedTypeInternal(getReferencedType()); } [CLASS] NamedType PropertyContinuation [METHOD] setReferencedAndResolvedType [RETURN_TYPE] void  JSType type ErrorReporter t JSType> enclosing [VARIABLES] ErrorReporter t JSType slotType type value boolean forAnnotations inferred resolved Node propertyNode StaticScope enclosing List propertyContinuations String propertyName reference sourceName long serialVersionUID int charno i lineno Predicate validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.4472135954999579	305	305	3	add	
3	[BUG] [BUGGY] if (this.isResolved()) { [FE] AssertionFailedError [CONTEXT] public boolean setValidator(Predicate<JSType> validator) {    [BUGGY] if (this.isResolved()) { [BUGGY] return super.setValidator(validator); } else { this.validator = validator; return true; } } [CLASS] NamedType PropertyContinuation [METHOD] setValidator [RETURN_TYPE] boolean  JSType> validator [VARIABLES] JSType referencedType slotType type value boolean forAnnotations ignoreForwardReferencedTypes inferred isForwardDeclared resolved Node propertyNode List propertyContinuations String name propertyName reference sourceName long serialVersionUID int charno i lineno Predicate validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	369	369	3	replace	
4	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] public boolean setValidator(Predicate<JSType> validator) {    [BUGGY] [BUGGY] if (this.isResolved()) { return super.setValidator(validator); } else { this.validator = validator; return true; } } [CLASS] NamedType PropertyContinuation [METHOD] setValidator [RETURN_TYPE] boolean  JSType> validator [VARIABLES] JSType referencedType slotType type value boolean forAnnotations ignoreForwardReferencedTypes inferred isForwardDeclared resolved Node propertyNode List propertyContinuations String name propertyName reference sourceName long serialVersionUID int charno i lineno Predicate validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	369	369	3	add	
5	[BUG] [BUGGY] this.validator = validator; [FE] AssertionFailedError [CONTEXT] public boolean setValidator(Predicate<JSType> validator) {    if (this.isResolved()) { return super.setValidator(validator); } else { [BUGGY] this.validator = validator; [BUGGY] return true; } } [CLASS] NamedType PropertyContinuation [METHOD] setValidator [RETURN_TYPE] boolean  JSType> validator [VARIABLES] JSType referencedType slotType type value boolean forAnnotations ignoreForwardReferencedTypes inferred isForwardDeclared resolved Node propertyNode List propertyContinuations String name propertyName reference sourceName long serialVersionUID int charno i lineno Predicate validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	372	372	3	replace	
6	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] public boolean setValidator(Predicate<JSType> validator) {    if (this.isResolved()) { return super.setValidator(validator); } else { [BUGGY] [BUGGY] this.validator = validator; return true; } } [CLASS] NamedType PropertyContinuation [METHOD] setValidator [RETURN_TYPE] boolean  JSType> validator [VARIABLES] JSType referencedType slotType type value boolean forAnnotations ignoreForwardReferencedTypes inferred isForwardDeclared resolved Node propertyNode List propertyContinuations String name propertyName reference sourceName long serialVersionUID int charno i lineno Predicate validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	372	372	3	add	
7	[BUG] [BUGGY] return true; [FE] AssertionFailedError [CONTEXT] public boolean setValidator(Predicate<JSType> validator) {    if (this.isResolved()) { return super.setValidator(validator); } else { this.validator = validator; [BUGGY] return true; [BUGGY] } } [CLASS] NamedType PropertyContinuation [METHOD] setValidator [RETURN_TYPE] boolean  JSType> validator [VARIABLES] JSType referencedType slotType type value boolean forAnnotations ignoreForwardReferencedTypes inferred isForwardDeclared resolved Node propertyNode List propertyContinuations String name propertyName reference sourceName long serialVersionUID int charno i lineno Predicate validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	
8	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] public boolean setValidator(Predicate<JSType> validator) {    if (this.isResolved()) { return super.setValidator(validator); } else { this.validator = validator; [BUGGY] [BUGGY] return true; } } [CLASS] NamedType PropertyContinuation [METHOD] setValidator [RETURN_TYPE] boolean  JSType> validator [VARIABLES] JSType referencedType slotType type value boolean forAnnotations ignoreForwardReferencedTypes inferred isForwardDeclared resolved Node propertyNode List propertyContinuations String name propertyName reference sourceName long serialVersionUID int charno i lineno Predicate validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	add	
9	[BUG] [BUGGY] return reference; [FE] AssertionFailedError [CONTEXT] public String getReferenceName() { [BUGGY] return reference; [BUGGY] } [CLASS] NamedType PropertyContinuation [METHOD] getReferenceName [RETURN_TYPE] String  [VARIABLES] JSType type boolean inferred Node propertyNode List propertyContinuations String propertyName reference sourceName long serialVersionUID int charno lineno Predicate validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3535533905932738	152	152	3	replace	
10	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] public String getReferenceName() { [BUGGY] [BUGGY] return reference; } [CLASS] NamedType PropertyContinuation [METHOD] getReferenceName [RETURN_TYPE] String  [VARIABLES] JSType type boolean inferred Node propertyNode List propertyContinuations String propertyName reference sourceName long serialVersionUID int charno lineno Predicate validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3535533905932738	152	152	3	add	
11	[BUG] [BUGGY] super.resolveInternal(t, enclosing); [FE] AssertionFailedError [CONTEXT]     boolean resolved = resolveViaRegistry(t, enclosing); if (detectImplicitPrototypeCycle()) { handleTypeCycle(t); } if (resolved) { [BUGGY] super.resolveInternal(t, enclosing); [BUGGY] finishPropertyContinuations(); return registry.isLastGeneration() ? getReferencedType() : this; } resolveViaProperties(t, enclosing); if (detectImplicitPrototypeCycle()) { handleTypeCycle(t); }  [CLASS] NamedType PropertyContinuation [METHOD] resolveInternal [RETURN_TYPE] JSType  ErrorReporter t JSType> enclosing [VARIABLES] ErrorReporter t JSType type boolean forAnnotations inferred resolved Node propertyNode StaticScope enclosing List propertyContinuations String propertyName reference sourceName long serialVersionUID int charno lineno Predicate validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	
12	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT]     boolean resolved = resolveViaRegistry(t, enclosing); if (detectImplicitPrototypeCycle()) { handleTypeCycle(t); } if (resolved) { [BUGGY] [BUGGY] super.resolveInternal(t, enclosing); finishPropertyContinuations(); return registry.isLastGeneration() ? getReferencedType() : this; } resolveViaProperties(t, enclosing); if (detectImplicitPrototypeCycle()) { handleTypeCycle(t); }  [CLASS] NamedType PropertyContinuation [METHOD] resolveInternal [RETURN_TYPE] JSType  ErrorReporter t JSType> enclosing [VARIABLES] ErrorReporter t JSType type boolean forAnnotations inferred resolved Node propertyNode StaticScope enclosing List propertyContinuations String propertyName reference sourceName long serialVersionUID int charno lineno Predicate validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	add	
13	[BUG] [BUGGY] finishPropertyContinuations(); [FE] AssertionFailedError [CONTEXT]    boolean resolved = resolveViaRegistry(t, enclosing); if (detectImplicitPrototypeCycle()) { handleTypeCycle(t); } if (resolved) { super.resolveInternal(t, enclosing); [BUGGY] finishPropertyContinuations(); [BUGGY] return registry.isLastGeneration() ? getReferencedType() : this; } resolveViaProperties(t, enclosing); if (detectImplicitPrototypeCycle()) { handleTypeCycle(t); } super.resolveInternal(t, enclosing); [CLASS] NamedType PropertyContinuation [METHOD] resolveInternal [RETURN_TYPE] JSType  ErrorReporter t JSType> enclosing [VARIABLES] ErrorReporter t JSType type boolean forAnnotations inferred resolved Node propertyNode StaticScope enclosing List propertyContinuations String propertyName reference sourceName long serialVersionUID int charno lineno Predicate validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	
14	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT]    boolean resolved = resolveViaRegistry(t, enclosing); if (detectImplicitPrototypeCycle()) { handleTypeCycle(t); } if (resolved) { super.resolveInternal(t, enclosing); [BUGGY] [BUGGY] finishPropertyContinuations(); return registry.isLastGeneration() ? getReferencedType() : this; } resolveViaProperties(t, enclosing); if (detectImplicitPrototypeCycle()) { handleTypeCycle(t); } super.resolveInternal(t, enclosing); [CLASS] NamedType PropertyContinuation [METHOD] resolveInternal [RETURN_TYPE] JSType  ErrorReporter t JSType> enclosing [VARIABLES] ErrorReporter t JSType type boolean forAnnotations inferred resolved Node propertyNode StaticScope enclosing List propertyContinuations String propertyName reference sourceName long serialVersionUID int charno lineno Predicate validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	add	
15	[BUG] [BUGGY] return registry.isLastGeneration() ? getReferencedType() : this; [FE] AssertionFailedError [CONTEXT]   boolean resolved = resolveViaRegistry(t, enclosing); if (detectImplicitPrototypeCycle()) { handleTypeCycle(t); } if (resolved) { super.resolveInternal(t, enclosing); finishPropertyContinuations(); [BUGGY] return registry.isLastGeneration() ?   getReferencedType() : this; [BUGGY] getReferencedType() : this; } resolveViaProperties(t, enclosing); if (detectImplicitPrototypeCycle()) { handleTypeCycle(t); } super.resolveInternal(t, enclosing); if (isResolved()) { [CLASS] NamedType PropertyContinuation [METHOD] resolveInternal [RETURN_TYPE] JSType  ErrorReporter t JSType> enclosing [VARIABLES] ErrorReporter t JSType type boolean forAnnotations inferred resolved Node propertyNode StaticScope enclosing List propertyContinuations String propertyName reference sourceName long serialVersionUID int charno lineno Predicate validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	197	198	3	replace	
16	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT]   boolean resolved = resolveViaRegistry(t, enclosing); if (detectImplicitPrototypeCycle()) { handleTypeCycle(t); } if (resolved) { super.resolveInternal(t, enclosing); finishPropertyContinuations(); [BUGGY] [BUGGY] return registry.isLastGeneration() ?   getReferencedType() : this; getReferencedType() : this; } resolveViaProperties(t, enclosing); if (detectImplicitPrototypeCycle()) { handleTypeCycle(t); } super.resolveInternal(t, enclosing); if (isResolved()) { [CLASS] NamedType PropertyContinuation [METHOD] resolveInternal [RETURN_TYPE] JSType  ErrorReporter t JSType> enclosing [VARIABLES] ErrorReporter t JSType type boolean forAnnotations inferred resolved Node propertyNode StaticScope enclosing List propertyContinuations String propertyName reference sourceName long serialVersionUID int charno lineno Predicate validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	197	198	3	add	
17	[BUG] [BUGGY] setReferencedAndResolvedType(type, t, enclosing); [FE] AssertionFailedError [CONTEXT] private boolean resolveViaRegistry( ErrorReporter t, StaticScope<JSType> enclosing) { JSType type = registry.getType(reference); if (type != null) { [BUGGY] setReferencedAndResolvedType(type, t, enclosing); [BUGGY] return true; } return false; } [CLASS] NamedType PropertyContinuation [METHOD] resolveViaRegistry [RETURN_TYPE] boolean  ErrorReporter t JSType> enclosing [VARIABLES] ErrorReporter t JSType type boolean forAnnotations inferred resolved Node propertyNode StaticScope enclosing List propertyContinuations String propertyName reference sourceName long serialVersionUID int charno lineno Predicate validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	222	222	3	replace	
18	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] private boolean resolveViaRegistry( ErrorReporter t, StaticScope<JSType> enclosing) { JSType type = registry.getType(reference); if (type != null) { [BUGGY] [BUGGY] setReferencedAndResolvedType(type, t, enclosing); return true; } return false; } [CLASS] NamedType PropertyContinuation [METHOD] resolveViaRegistry [RETURN_TYPE] boolean  ErrorReporter t JSType> enclosing [VARIABLES] ErrorReporter t JSType type boolean forAnnotations inferred resolved Node propertyNode StaticScope enclosing List propertyContinuations String propertyName reference sourceName long serialVersionUID int charno lineno Predicate validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	222	222	3	add	
19	[BUG] [BUGGY] return true; [FE] AssertionFailedError [CONTEXT] private boolean resolveViaRegistry( ErrorReporter t, StaticScope<JSType> enclosing) { JSType type = registry.getType(reference); if (type != null) { setReferencedAndResolvedType(type, t, enclosing); [BUGGY] return true; [BUGGY] } return false; } [CLASS] NamedType PropertyContinuation [METHOD] resolveViaRegistry [RETURN_TYPE] boolean  ErrorReporter t JSType> enclosing [VARIABLES] ErrorReporter t JSType type boolean forAnnotations inferred resolved Node propertyNode StaticScope enclosing List propertyContinuations String propertyName reference sourceName long serialVersionUID int charno lineno Predicate validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	
20	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] private boolean resolveViaRegistry( ErrorReporter t, StaticScope<JSType> enclosing) { JSType type = registry.getType(reference); if (type != null) { setReferencedAndResolvedType(type, t, enclosing); [BUGGY] [BUGGY] return true; } return false; } [CLASS] NamedType PropertyContinuation [METHOD] resolveViaRegistry [RETURN_TYPE] boolean  ErrorReporter t JSType> enclosing [VARIABLES] ErrorReporter t JSType type boolean forAnnotations inferred resolved Node propertyNode StaticScope enclosing List propertyContinuations String propertyName reference sourceName long serialVersionUID int charno lineno Predicate validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	add	
21	[BUG] [BUGGY] if (propertyContinuations != null) { [FE] AssertionFailedError [CONTEXT] private void finishPropertyContinuations() { ObjectType referencedObjType = getReferencedObjTypeInternal(); if (referencedObjType != null && !referencedObjType.isUnknownType()) { [BUGGY] if (propertyContinuations != null) { [BUGGY] for (PropertyContinuation c : propertyContinuations) { c.commit(this); } } } propertyContinuations = null; } [CLASS] NamedType PropertyContinuation [METHOD] finishPropertyContinuations [RETURN_TYPE] void  [VARIABLES] ObjectType referencedObjType JSType type boolean inferred PropertyContinuation c Node propertyNode List propertyContinuations String propertyName reference sourceName long serialVersionUID int charno lineno Predicate validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.2055566129482595	136	136	3	replace	
22	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] private void finishPropertyContinuations() { ObjectType referencedObjType = getReferencedObjTypeInternal(); if (referencedObjType != null && !referencedObjType.isUnknownType()) { [BUGGY] [BUGGY] if (propertyContinuations != null) { for (PropertyContinuation c : propertyContinuations) { c.commit(this); } } } propertyContinuations = null; } [CLASS] NamedType PropertyContinuation [METHOD] finishPropertyContinuations [RETURN_TYPE] void  [VARIABLES] ObjectType referencedObjType JSType type boolean inferred PropertyContinuation c Node propertyNode List propertyContinuations String propertyName reference sourceName long serialVersionUID int charno lineno Predicate validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.2055566129482595	136	136	3	add	
23	[BUG] [BUGGY] if (validator != null) { [FE] AssertionFailedError [CONTEXT] private void setReferencedAndResolvedType(JSType type, ErrorReporter t, StaticScope<JSType> enclosing) { [BUGGY] if (validator != null) { [BUGGY] validator.apply(type); } setReferencedType(type); checkEnumElementCycle(t); setResolvedTypeInternal(getReferencedType()); } [CLASS] NamedType PropertyContinuation [METHOD] setReferencedAndResolvedType [RETURN_TYPE] void  JSType type ErrorReporter t JSType> enclosing [VARIABLES] ErrorReporter t JSType slotType type value boolean forAnnotations inferred resolved Node propertyNode StaticScope enclosing List propertyContinuations String propertyName reference sourceName long serialVersionUID int charno i lineno Predicate validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.2055566129482595	304	304	3	replace	
24	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] private void setReferencedAndResolvedType(JSType type, ErrorReporter t, StaticScope<JSType> enclosing) { [BUGGY] [BUGGY] if (validator != null) { validator.apply(type); } setReferencedType(type); checkEnumElementCycle(t); setResolvedTypeInternal(getReferencedType()); } [CLASS] NamedType PropertyContinuation [METHOD] setReferencedAndResolvedType [RETURN_TYPE] void  JSType type ErrorReporter t JSType> enclosing [VARIABLES] ErrorReporter t JSType slotType type value boolean forAnnotations inferred resolved Node propertyNode StaticScope enclosing List propertyContinuations String propertyName reference sourceName long serialVersionUID int charno i lineno Predicate validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.2055566129482595	304	304	3	add	
25	[BUG] [BUGGY] setReferencedType(type); [FE] AssertionFailedError [CONTEXT] private void setReferencedAndResolvedType(JSType type, ErrorReporter t, StaticScope<JSType> enclosing) { if (validator != null) { validator.apply(type); } [BUGGY] setReferencedType(type); [BUGGY] checkEnumElementCycle(t); setResolvedTypeInternal(getReferencedType()); } [CLASS] NamedType PropertyContinuation [METHOD] setReferencedAndResolvedType [RETURN_TYPE] void  JSType type ErrorReporter t JSType> enclosing [VARIABLES] ErrorReporter t JSType slotType type value boolean forAnnotations inferred resolved Node propertyNode StaticScope enclosing List propertyContinuations String propertyName reference sourceName long serialVersionUID int charno i lineno Predicate validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.2055566129482595	307	307	3	replace	
26	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] private void setReferencedAndResolvedType(JSType type, ErrorReporter t, StaticScope<JSType> enclosing) { if (validator != null) { validator.apply(type); } [BUGGY] [BUGGY] setReferencedType(type); checkEnumElementCycle(t); setResolvedTypeInternal(getReferencedType()); } [CLASS] NamedType PropertyContinuation [METHOD] setReferencedAndResolvedType [RETURN_TYPE] void  JSType type ErrorReporter t JSType> enclosing [VARIABLES] ErrorReporter t JSType slotType type value boolean forAnnotations inferred resolved Node propertyNode StaticScope enclosing List propertyContinuations String propertyName reference sourceName long serialVersionUID int charno i lineno Predicate validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.2055566129482595	307	307	3	add	
27	[BUG] [BUGGY] checkEnumElementCycle(t); [FE] AssertionFailedError [CONTEXT] private void setReferencedAndResolvedType(JSType type, ErrorReporter t, StaticScope<JSType> enclosing) { if (validator != null) { validator.apply(type); } setReferencedType(type); [BUGGY] checkEnumElementCycle(t); [BUGGY] setResolvedTypeInternal(getReferencedType()); } [CLASS] NamedType PropertyContinuation [METHOD] setReferencedAndResolvedType [RETURN_TYPE] void  JSType type ErrorReporter t JSType> enclosing [VARIABLES] ErrorReporter t JSType slotType type value boolean forAnnotations inferred resolved Node propertyNode StaticScope enclosing List propertyContinuations String propertyName reference sourceName long serialVersionUID int charno i lineno Predicate validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.2055566129482595	308	308	3	replace	
28	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] private void setReferencedAndResolvedType(JSType type, ErrorReporter t, StaticScope<JSType> enclosing) { if (validator != null) { validator.apply(type); } setReferencedType(type); [BUGGY] [BUGGY] checkEnumElementCycle(t); setResolvedTypeInternal(getReferencedType()); } [CLASS] NamedType PropertyContinuation [METHOD] setReferencedAndResolvedType [RETURN_TYPE] void  JSType type ErrorReporter t JSType> enclosing [VARIABLES] ErrorReporter t JSType slotType type value boolean forAnnotations inferred resolved Node propertyNode StaticScope enclosing List propertyContinuations String propertyName reference sourceName long serialVersionUID int charno i lineno Predicate validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.2055566129482595	308	308	3	add	
29	[BUG] [BUGGY] setResolvedTypeInternal(getReferencedType()); [FE] AssertionFailedError [CONTEXT] private void setReferencedAndResolvedType(JSType type, ErrorReporter t, StaticScope<JSType> enclosing) { if (validator != null) { validator.apply(type); } setReferencedType(type); checkEnumElementCycle(t); [BUGGY] setResolvedTypeInternal(getReferencedType()); [BUGGY] } [CLASS] NamedType PropertyContinuation [METHOD] setReferencedAndResolvedType [RETURN_TYPE] void  JSType type ErrorReporter t JSType> enclosing [VARIABLES] ErrorReporter t JSType slotType type value boolean forAnnotations inferred resolved Node propertyNode StaticScope enclosing List propertyContinuations String propertyName reference sourceName long serialVersionUID int charno i lineno Predicate validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.2055566129482595	309	309	3	replace	
30	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] private void setReferencedAndResolvedType(JSType type, ErrorReporter t, StaticScope<JSType> enclosing) { if (validator != null) { validator.apply(type); } setReferencedType(type); checkEnumElementCycle(t); [BUGGY] [BUGGY] setResolvedTypeInternal(getReferencedType()); } [CLASS] NamedType PropertyContinuation [METHOD] setReferencedAndResolvedType [RETURN_TYPE] void  JSType type ErrorReporter t JSType> enclosing [VARIABLES] ErrorReporter t JSType slotType type value boolean forAnnotations inferred resolved Node propertyNode StaticScope enclosing List propertyContinuations String propertyName reference sourceName long serialVersionUID int charno i lineno Predicate validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.2055566129482595	309	309	3	add	
31	[BUG] [BUGGY] } [FE] AssertionFailedError [CONTEXT] private void setReferencedAndResolvedType(JSType type, ErrorReporter t, StaticScope<JSType> enclosing) { if (validator != null) { validator.apply(type); } setReferencedType(type); checkEnumElementCycle(t); setResolvedTypeInternal(getReferencedType()); [BUGGY] } [BUGGY]  [CLASS] NamedType PropertyContinuation [METHOD] setReferencedAndResolvedType [RETURN_TYPE] void  JSType type ErrorReporter t JSType> enclosing [VARIABLES] ErrorReporter t JSType slotType type value boolean forAnnotations inferred resolved Node propertyNode StaticScope enclosing List propertyContinuations String propertyName reference sourceName long serialVersionUID int charno i lineno Predicate validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.2055566129482595	310	310	3	replace	
32	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] private void setReferencedAndResolvedType(JSType type, ErrorReporter t, StaticScope<JSType> enclosing) { if (validator != null) { validator.apply(type); } setReferencedType(type); checkEnumElementCycle(t); setResolvedTypeInternal(getReferencedType()); [BUGGY] [BUGGY] } [CLASS] NamedType PropertyContinuation [METHOD] setReferencedAndResolvedType [RETURN_TYPE] void  JSType type ErrorReporter t JSType> enclosing [VARIABLES] ErrorReporter t JSType slotType type value boolean forAnnotations inferred resolved Node propertyNode StaticScope enclosing List propertyContinuations String propertyName reference sourceName long serialVersionUID int charno i lineno Predicate validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.2055566129482595	310	310	3	add	
33	[BUG] [BUGGY] JSType referencedType = getReferencedType(); [FE] AssertionFailedError [CONTEXT] private void checkEnumElementCycle(ErrorReporter t) { [BUGGY] JSType referencedType = getReferencedType(); [BUGGY] if (referencedType instanceof EnumElementType && ((EnumElementType) referencedType).getPrimitiveType() == this) { handleTypeCycle(t); } } [CLASS] NamedType PropertyContinuation [METHOD] checkEnumElementCycle [RETURN_TYPE] void  ErrorReporter t [VARIABLES] ErrorReporter t JSType referencedType slotType type value boolean forAnnotations inferred resolved Node propertyNode List propertyContinuations String propertyName reference sourceName long serialVersionUID int charno i lineno Predicate validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.2055566129482595	321	321	3	replace	
34	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] private void checkEnumElementCycle(ErrorReporter t) { [BUGGY] [BUGGY] JSType referencedType = getReferencedType(); if (referencedType instanceof EnumElementType && ((EnumElementType) referencedType).getPrimitiveType() == this) { handleTypeCycle(t); } } [CLASS] NamedType PropertyContinuation [METHOD] checkEnumElementCycle [RETURN_TYPE] void  ErrorReporter t [VARIABLES] ErrorReporter t JSType referencedType slotType type value boolean forAnnotations inferred resolved Node propertyNode List propertyContinuations String propertyName reference sourceName long serialVersionUID int charno i lineno Predicate validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.2055566129482595	321	321	3	add	
35	[BUG] [BUGGY] if (referencedType instanceof EnumElementType && ((EnumElementType) referencedType).getPrimitiveType() == this) { [FE] AssertionFailedError [CONTEXT] private void checkEnumElementCycle(ErrorReporter t) { JSType referencedType = getReferencedType(); [BUGGY] if (referencedType instanceof EnumElementType &&  ((EnumElementType) referencedType).getPrimitiveType() == this) { [BUGGY] ((EnumElementType) referencedType).getPrimitiveType() == this) { handleTypeCycle(t); } } [CLASS] NamedType PropertyContinuation [METHOD] checkEnumElementCycle [RETURN_TYPE] void  ErrorReporter t [VARIABLES] ErrorReporter t JSType referencedType slotType type value boolean forAnnotations inferred resolved Node propertyNode List propertyContinuations String propertyName reference sourceName long serialVersionUID int charno i lineno Predicate validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.2055566129482595	322	323	3	replace	
36	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] private void checkEnumElementCycle(ErrorReporter t) { JSType referencedType = getReferencedType(); [BUGGY] [BUGGY] if (referencedType instanceof EnumElementType &&  ((EnumElementType) referencedType).getPrimitiveType() == this) { ((EnumElementType) referencedType).getPrimitiveType() == this) { handleTypeCycle(t); } } [CLASS] NamedType PropertyContinuation [METHOD] checkEnumElementCycle [RETURN_TYPE] void  ErrorReporter t [VARIABLES] ErrorReporter t JSType referencedType slotType type value boolean forAnnotations inferred resolved Node propertyNode List propertyContinuations String propertyName reference sourceName long serialVersionUID int charno i lineno Predicate validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.2055566129482595	322	323	3	add	
37	[BUG] [BUGGY] } [FE] AssertionFailedError [CONTEXT] private void checkEnumElementCycle(ErrorReporter t) { JSType referencedType = getReferencedType(); if (referencedType instanceof EnumElementType && ((EnumElementType) referencedType).getPrimitiveType() == this) { handleTypeCycle(t); } [BUGGY] } [BUGGY]  [CLASS] NamedType PropertyContinuation [METHOD] checkEnumElementCycle [RETURN_TYPE] void  ErrorReporter t [VARIABLES] ErrorReporter t JSType referencedType slotType type value boolean forAnnotations inferred resolved Node propertyNode List propertyContinuations String propertyName reference sourceName long serialVersionUID int charno i lineno Predicate validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.2055566129482595	326	326	3	replace	
38	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] private void checkEnumElementCycle(ErrorReporter t) { JSType referencedType = getReferencedType(); if (referencedType instanceof EnumElementType && ((EnumElementType) referencedType).getPrimitiveType() == this) { handleTypeCycle(t); } [BUGGY] [BUGGY] } [CLASS] NamedType PropertyContinuation [METHOD] checkEnumElementCycle [RETURN_TYPE] void  ErrorReporter t [VARIABLES] ErrorReporter t JSType referencedType slotType type value boolean forAnnotations inferred resolved Node propertyNode List propertyContinuations String propertyName reference sourceName long serialVersionUID int charno i lineno Predicate validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.2055566129482595	326	326	3	add	
39	[BUG] [BUGGY] return reference.hashCode(); [FE] AssertionFailedError [CONTEXT] public int hashCode() { [BUGGY] return reference.hashCode(); [BUGGY] } [CLASS] NamedType PropertyContinuation [METHOD] hashCode [RETURN_TYPE] int  [VARIABLES] JSType type boolean forAnnotations inferred Node propertyNode List propertyContinuations String propertyName reference sourceName long serialVersionUID int charno lineno Predicate validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.2013468165642073	177	177	3	replace	
40	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] public int hashCode() { [BUGGY] [BUGGY] return reference.hashCode(); } [CLASS] NamedType PropertyContinuation [METHOD] hashCode [RETURN_TYPE] int  [VARIABLES] JSType type boolean forAnnotations inferred Node propertyNode List propertyContinuations String propertyName reference sourceName long serialVersionUID int charno lineno Predicate validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.2013468165642073	177	177	3	add	
