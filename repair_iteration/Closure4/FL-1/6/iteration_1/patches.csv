bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  super.resolveInternal(t,  enclosing,  type,  false);  [CE]  cannot  find  symbol  type  [FE]        AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {    [BUGGY]  super.resolveInternal(t,  enclosing,  type,  false);  [BUGGY]    finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  enclosing,  type,  false);	  super.resolveInternal(t,    enclosing,    false);    	non-compiled	[CE]  cannot  find  symbol  type	10	None	replace
2	[BUG]  [BUGGY]  super.resolveInternal(t,  enclosing,  true);  [CE]  no  suitable  method  found  for  resolveInternal(ErrorReporter,StaticScope<JSType>,boolean)  [FE]          AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {    [BUGGY]  super.resolveInternal(t,  enclosing,  true);  [BUGGY]    finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  enclosing,  true);	  super.resolveInternal(t,    enclosing,    false);    	non-compiled	[CE]  no  suitable  method  found  for  resolveInternal(ErrorReporter,StaticScope<JSType>,boolean)	10	None	replace
3	[BUG]  [BUGGY]  super.resolveInternal(t,  enclosing,  false,  forAnnotations);  [CE]  cannot  find  symbol  forAnnotations  [FE]            AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {    [BUGGY]  super.resolveInternal(t,  enclosing,  false,  forAnnotations);  [BUGGY]    finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  enclosing,  false,  forAnnotations);	  super.resolveInternal(t,    enclosing,    false);    	non-compiled	[CE]  cannot  find  symbol  forAnnotations	10	None	replace
4	[BUG]  [BUGGY]  super.resolveInternal(t,  enclosing,  null,  false);  [CE]  no  suitable  method  found  for  resolveInternal(ErrorReporter,StaticScope<JSType>,<null>,boolean)  [FE]              AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {    [BUGGY]  super.resolveInternal(t,  enclosing,  null,  false);  [BUGGY]    finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  enclosing,  null,  false);	  super.resolveInternal(t,    enclosing,    false);    	non-compiled	[CE]  no  suitable  method  found  for  resolveInternal(ErrorReporter,StaticScope<JSType>,<null>,boolean)	10	None	replace
5	[BUG]  [BUGGY]  super.resolveInternal(t,  type,  enclosing,  false);  [CE]  cannot  find  symbol  type  [FE]                AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {    [BUGGY]  super.resolveInternal(t,  type,  enclosing,  false);  [BUGGY]    finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  type,  enclosing,  false);	  super.resolveInternal(t,    enclosing,    false);    	non-compiled	[CE]  cannot  find  symbol  type	10	None	replace
6	[BUG]  [BUGGY]  Super.resolveInternal(t,  enclosing,  type,  false);  [CE]  cannot  find  symbol  type  [FE]                  AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {    [BUGGY]  Super.resolveInternal(t,  enclosing,  type,  false);  [BUGGY]    finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	Super.resolveInternal(t,  enclosing,  type,  false);	  super.resolveInternal(t,    enclosing,    false);    	non-compiled	[CE]  cannot  find  symbol  type	10	None	replace
7	[BUG]  [BUGGY]  super.resolveInternal(t,  enclosing,  false,  type);  [CE]  cannot  find  symbol  type  [FE]                    AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {    [BUGGY]  super.resolveInternal(t,  enclosing,  false,  type);  [BUGGY]    finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  enclosing,  false,  type);	  super.resolveInternal(t,    enclosing,    false);    	non-compiled	[CE]  cannot  find  symbol  type	10	None	replace
8	[BUG]  [BUGGY]  super.resolveInternal(t,  enclosing,  handleTypeCycle);  [CE]  cannot  find  symbol  handleTypeCycle  [FE]          AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {    [BUGGY]  super.resolveInternal(t,  enclosing,  handleTypeCycle);  [BUGGY]    finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  enclosing,  handleTypeCycle);	  super.resolveInternal(t,    enclosing,    type);    	non-compiled	[CE]  cannot  find  symbol  handleTypeCycle	2	None	replace
9	[BUG]  [BUGGY]  super.resolveInternal(t,  enclosing,  DEFAULT_TYPE);  [CE]  cannot  find  symbol  DEFAULT_TYPE  [FE]            AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {    [BUGGY]  super.resolveInternal(t,  enclosing,  DEFAULT_TYPE);  [BUGGY]    finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  enclosing,  DEFAULT_TYPE);	  super.resolveInternal(t,    enclosing,    type);    	non-compiled	[CE]  cannot  find  symbol  DEFAULT_TYPE	2	None	replace
10	[BUG]  [BUGGY]  super.resolveInternal(t,  enclosing,  this);  [CE]  no  suitable  method  found  for  resolveInternal(ErrorReporter,StaticScope<JSType>,NamedType)  [FE]              AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {    [BUGGY]  super.resolveInternal(t,  enclosing,  this);  [BUGGY]    finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  enclosing,  this);	  super.resolveInternal(t,    enclosing,    type);    	non-compiled	[CE]  no  suitable  method  found  for  resolveInternal(ErrorReporter,StaticScope<JSType>,NamedType)	2	None	replace
11	[BUG]  [BUGGY]  super.resolveInternal(t,  enclosing,  propType);  [CE]  cannot  find  symbol  propType  [FE]                AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {    [BUGGY]  super.resolveInternal(t,  enclosing,  propType);  [BUGGY]    finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  enclosing,  propType);	  super.resolveInternal(t,    enclosing,    type);    	non-compiled	[CE]  cannot  find  symbol  propType	2	None	replace
12	[BUG]  [BUGGY]  super.resolveInternal(t,  enclosing,  null);  [CE]  no  suitable  method  found  for  resolveInternal(ErrorReporter,StaticScope<JSType>,<null>)  [FE]        AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {    [BUGGY]  super.resolveInternal(t,  enclosing,  null);  [BUGGY]    finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  enclosing,  null);	  super.resolveInternal(t,    enclosing,    propertyNode);    	non-compiled	[CE]  no  suitable  method  found  for  resolveInternal(ErrorReporter,StaticScope<JSType>,<null>)	1	None	replace
13	[BUG]  [BUGGY]  super.resolveInternal(t,  enclosing,  propertyName);  [CE]  cannot  find  symbol  propertyName  [FE]          AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {    [BUGGY]  super.resolveInternal(t,  enclosing,  propertyName);  [BUGGY]    finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  enclosing,  propertyName);	  super.resolveInternal(t,    enclosing,    propertyNode);    	non-compiled	[CE]  cannot  find  symbol  propertyName	1	None	replace
14	[BUG]  [BUGGY]  super.resolveInternal(t,  enclosing,  propertyType);  [CE]  cannot  find  symbol  propertyType  [FE]            AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {    [BUGGY]  super.resolveInternal(t,  enclosing,  propertyType);  [BUGGY]    finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  enclosing,  propertyType);	  super.resolveInternal(t,    enclosing,    propertyNode);    	non-compiled	[CE]  cannot  find  symbol  propertyType	1	None	replace
15	[BUG]  [BUGGY]  super.resolveInternal(t,  registry,  enclosing);  [CE]  no  suitable  method  found  for  resolveInternal(ErrorReporter,JSTypeRegistry,StaticScope<JSType>)  [FE]                  AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {    [BUGGY]  super.resolveInternal(t,  registry,  enclosing);  [BUGGY]    finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  registry,  enclosing);	  super.resolveInternal(t,    enclosing,    registry);    	non-compiled	[CE]  no  suitable  method  found  for  resolveInternal(ErrorReporter,JSTypeRegistry,StaticScope<JSType>)	6	None	replace
16	[BUG]  [BUGGY]  super.resolveInternal(t,  enclosing,  registry,  type);  [CE]  cannot  find  symbol  type  [FE]                    AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {    [BUGGY]  super.resolveInternal(t,  enclosing,  registry,  type);  [BUGGY]    finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  enclosing,  registry,  type);	  super.resolveInternal(t,    enclosing,    registry);    	non-compiled	[CE]  cannot  find  symbol  type	6	None	replace
17	[BUG]  [BUGGY]  super.resolveInternal(t,  enclosing,  registry,  propertyNode);  [CE]  cannot  find  symbol  propertyNode  [FE]                      AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {    [BUGGY]  super.resolveInternal(t,  enclosing,  registry,  propertyNode);  [BUGGY]    finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  enclosing,  registry,  propertyNode);	  super.resolveInternal(t,    enclosing,    registry);    	non-compiled	[CE]  cannot  find  symbol  propertyNode	6	None	replace
18	[BUG]  [BUGGY]  super.resolveInternal(t,  enclosing,  type,  registry);  [CE]  cannot  find  symbol  type  [FE]                        AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {    [BUGGY]  super.resolveInternal(t,  enclosing,  type,  registry);  [BUGGY]    finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  enclosing,  type,  registry);	  super.resolveInternal(t,    enclosing,    registry);    	non-compiled	[CE]  cannot  find  symbol  type	6	None	replace
19	[BUG]  [BUGGY]  super.resolveInternal(registry,  enclosing,  t);  [CE]  no  suitable  method  found  for  resolveInternal(JSTypeRegistry,StaticScope<JSType>,ErrorReporter)  [FE]                          AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {    [BUGGY]  super.resolveInternal(registry,  enclosing,  t);  [BUGGY]    finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(registry,  enclosing,  t);	  super.resolveInternal(t,    enclosing,    registry);    	non-compiled	[CE]  no  suitable  method  found  for  resolveInternal(JSTypeRegistry,StaticScope<JSType>,ErrorReporter)	6	None	replace
20	[BUG]  [BUGGY]  super.resolveInternal(t,  enclosing,  propertyContinuations);  [CE]  no  suitable  method  found  for  resolveInternal(ErrorReporter,StaticScope<JSType>,List<PropertyContinuation>)  [FE]            AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {    [BUGGY]  super.resolveInternal(t,  enclosing,  propertyContinuations);  [BUGGY]    finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  enclosing,  propertyContinuations);	  super.resolveInternal(t,    enclosing,    forAnnotations);    	non-compiled	[CE]  no  suitable  method  found  for  resolveInternal(ErrorReporter,StaticScope<JSType>,List<PropertyContinuation>)	3	None	replace
21	[BUG]  [BUGGY]  super.resolveInternal(t,  enclosing,  properties);  [CE]  cannot  find  symbol  properties  [FE]              AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {    [BUGGY]  super.resolveInternal(t,  enclosing,  properties);  [BUGGY]    finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  enclosing,  properties);	  super.resolveInternal(t,    enclosing,    forAnnotations);    	non-compiled	[CE]  cannot  find  symbol  properties	3	None	replace
22	[BUG]  [BUGGY]  super.resolveInternal(t,  enclosing,  propertyNodes);  [CE]  cannot  find  symbol  propertyNodes  [FE]                AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {    [BUGGY]  super.resolveInternal(t,  enclosing,  propertyNodes);  [BUGGY]    finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  enclosing,  propertyNodes);	  super.resolveInternal(t,    enclosing,    forAnnotations);    	non-compiled	[CE]  cannot  find  symbol  propertyNodes	3	None	replace
23	[BUG]  [BUGGY]  super.resolveInternal(t,  enclosing,  types);  [CE]  cannot  find  symbol  types  [FE]                  AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {    [BUGGY]  super.resolveInternal(t,  enclosing,  types);  [BUGGY]    finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  enclosing,  types);	  super.resolveInternal(t,    enclosing,    forAnnotations);    	non-compiled	[CE]  cannot  find  symbol  types	3	None	replace
24	[BUG]  [BUGGY]  super.resolveInternal(t,  enclosing,  props);  [CE]  cannot  find  symbol  props  [FE]                    AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {    [BUGGY]  super.resolveInternal(t,  enclosing,  props);  [BUGGY]    finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  enclosing,  props);	  super.resolveInternal(t,    enclosing,    forAnnotations);    	non-compiled	[CE]  cannot  find  symbol  props	3	None	replace
25	[BUG]  [BUGGY]  super.resolveInternal(t,  forAnnotations);  [CE]  cannot  find  symbol  forAnnotations  [FE]                    AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {    [BUGGY]  super.resolveInternal(t,  forAnnotations);  [BUGGY]    finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  forAnnotations);	  super.resolveInternal(t,    propertyNode);    	non-compiled	[CE]  cannot  find  symbol  forAnnotations	7	None	replace
26	[BUG]  [BUGGY]  super.resolveInternal(t,  type);  [CE]  cannot  find  symbol  type  [FE]                      AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {    [BUGGY]  super.resolveInternal(t,  type);  [BUGGY]    finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  type);	  super.resolveInternal(t,    propertyNode);    	non-compiled	[CE]  cannot  find  symbol  type	7	None	replace
27	[BUG]  [BUGGY]  super.resolveInternal(t,  resolved);  [CE]  no  suitable  method  found  for  resolveInternal(ErrorReporter,boolean)  [FE]                        AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {    [BUGGY]  super.resolveInternal(t,  resolved);  [BUGGY]    finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  resolved);	  super.resolveInternal(t,    propertyNode);    	non-compiled	[CE]  no  suitable  method  found  for  resolveInternal(ErrorReporter,boolean)	7	None	replace
28	[BUG]  [BUGGY]  super.resolveInternal(t,  ref);  [CE]  cannot  find  symbol  ref  [FE]                          AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {    [BUGGY]  super.resolveInternal(t,  ref);  [BUGGY]    finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  ref);	  super.resolveInternal(t,    propertyNode);    	non-compiled	[CE]  cannot  find  symbol  ref	7	None	replace
29	[BUG]  [BUGGY]  super.resolveInternal(t,  reference);  [CE]  no  suitable  method  found  for  resolveInternal(ErrorReporter,String)  [FE]                            AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {    [BUGGY]  super.resolveInternal(t,  reference);  [BUGGY]    finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  reference);	  super.resolveInternal(t,    propertyNode);    	non-compiled	[CE]  no  suitable  method  found  for  resolveInternal(ErrorReporter,String)	7	None	replace
30	[BUG]  [BUGGY]  timeout  [FE]                              AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {    [BUGGY]  super.resolveInternal(t,  null);  [BUGGY]    finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	add	super.resolveInternal(t,  null);	  super.resolveInternal(t,    propertyNode);    	compilable	timeout	7	1	replace
31	[BUG]  [BUGGY]  super.resolveInternal(t,  null);  timeout  [FE]                              AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {    [BUGGY]  super.resolveInternal(t,  null);  [BUGGY]    finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  null);	  super.resolveInternal(t,    propertyNode);    	compilable	timeout	7	1	replace
32	[BUG]  [BUGGY]  PropertyRegistry  registry  =  enclosing.getPropertyRegistry();  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {    [BUGGY]  PropertyRegistry  registry  =  enclosing.getPropertyRegistry();  [BUGGY]    finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	PropertyRegistry  registry  =  enclosing.getPropertyRegistry();	      timeout    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
33	[BUG]  [BUGGY]  Predicate  validator  =  enclosing.getValue();  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {    [BUGGY]  Predicate  validator  =  enclosing.getValue();  [BUGGY]    finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	Predicate  validator  =  enclosing.getValue();	      timeout    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
34	[BUG]  [BUGGY]  PropertyRegistry  registry  =  enclosing.getPropertyRegistry(propertyName);  [CE]  cannot  find  symbol  [FE]                          AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {    [BUGGY]  PropertyRegistry  registry  =  enclosing.getPropertyRegistry(propertyName);  [BUGGY]    finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	PropertyRegistry  registry  =  enclosing.getPropertyRegistry(propertyName);	      timeout    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
35	[BUG]  [BUGGY]  PropertyRegistry  registry  =  getPropertyRegistry();  [CE]  cannot  find  symbol  [FE]                            AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {    [BUGGY]  PropertyRegistry  registry  =  getPropertyRegistry();  [BUGGY]    finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	PropertyRegistry  registry  =  getPropertyRegistry();	      timeout    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
36	[BUG]  [BUGGY]  Predicates.checkNotNull(enclosing);  [CE]  cannot  find  symbol  Predicates  [FE]                              AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {    [BUGGY]  Predicates.checkNotNull(enclosing);  [BUGGY]    finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	Predicates.checkNotNull(enclosing);	      timeout    	non-compiled	[CE]  cannot  find  symbol  Predicates	9	None	replace
37	[BUG]  [BUGGY]  Predicate  validator  =  getValueForAnnotations(enclosing);  [CE]  cannot  find  symbol  [FE]                                AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {    [BUGGY]  Predicate  validator  =  getValueForAnnotations(enclosing);  [BUGGY]    finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	Predicate  validator  =  getValueForAnnotations(enclosing);	      timeout    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
38	[BUG]  [BUGGY]  Predicates.checkNotNull(propertyContinuations);  [CE]  cannot  find  symbol  Predicates  [FE]                                  AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {    [BUGGY]  Predicates.checkNotNull(propertyContinuations);  [BUGGY]    finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	Predicates.checkNotNull(propertyContinuations);	      timeout    	non-compiled	[CE]  cannot  find  symbol  Predicates	9	None	replace
39	[BUG]  [BUGGY]  super.resolvePropertyInternal(t,  enclosing,  type);  [CE]  cannot  find  symbol  type  [FE]            AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {    [BUGGY]  super.resolvePropertyInternal(t,  enclosing,  type);  [BUGGY]    finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolvePropertyInternal(t,  enclosing,  type);	  super.resolvePropertyInternal(t,    enclosing);    	non-compiled	[CE]  cannot  find  symbol  type	12	None	replace
40	[BUG]  [BUGGY]  super.resolvePropertyInternal(t,  enclosing,  registry);  [CE]  cannot  find  symbol  [FE]              AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {    [BUGGY]  super.resolvePropertyInternal(t,  enclosing,  registry);  [BUGGY]    finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolvePropertyInternal(t,  enclosing,  registry);	  super.resolvePropertyInternal(t,    enclosing);    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
41	[BUG]  [BUGGY]  super.resolvePropertyInternal(t,  enclosing,  propertyNode);  [CE]  cannot  find  symbol  propertyNode  [FE]                AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {    [BUGGY]  super.resolvePropertyInternal(t,  enclosing,  propertyNode);  [BUGGY]    finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolvePropertyInternal(t,  enclosing,  propertyNode);	  super.resolvePropertyInternal(t,    enclosing);    	non-compiled	[CE]  cannot  find  symbol  propertyNode	12	None	replace
42	[BUG]  [BUGGY]  super.resolvePropertyInternal(t,  enclosing,  forAnnotations);  [CE]  cannot  find  symbol  forAnnotations  [FE]                  AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {    [BUGGY]  super.resolvePropertyInternal(t,  enclosing,  forAnnotations);  [BUGGY]    finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolvePropertyInternal(t,  enclosing,  forAnnotations);	  super.resolvePropertyInternal(t,    enclosing);    	non-compiled	[CE]  cannot  find  symbol  forAnnotations	12	None	replace
43	[BUG]  [BUGGY]  super.resolvePropertyInternal(t,  propertyNode);  [CE]  cannot  find  symbol  propertyNode  [FE]                    AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {    [BUGGY]  super.resolvePropertyInternal(t,  propertyNode);  [BUGGY]    finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolvePropertyInternal(t,  propertyNode);	  super.resolvePropertyInternal(t,    enclosing);    	non-compiled	[CE]  cannot  find  symbol  propertyNode	12	None	replace
44	[BUG]  [BUGGY]  super.resolvePropertyInternal(t,  type);  [CE]  cannot  find  symbol  type  [FE]                      AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {    [BUGGY]  super.resolvePropertyInternal(t,  type);  [BUGGY]    finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolvePropertyInternal(t,  type);	  super.resolvePropertyInternal(t,    enclosing);    	non-compiled	[CE]  cannot  find  symbol  type	12	None	replace
45	[BUG]  [BUGGY]  super.resolveInternal(t,  enclosing,  getPropertyType(),  type);  [CE]  method  getPropertyType  in  class  ObjectType  cannot  be  applied  to  given  types;  [FE]          AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {    [BUGGY]  super.resolveInternal(t,  enclosing,  getPropertyType(),  type);  [BUGGY]    finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  enclosing,  getPropertyType(),  type);	  super.resolveInternal(t,    enclosing,    getPropertyType());    	non-compiled	[CE]  method  getPropertyType  in  class  ObjectType  cannot  be  applied  to  given  types;	11	None	replace
46	[BUG]  [BUGGY]  super.resolveInternal(t,  enclosing,  type,  getPropertyType());  [CE]  cannot  find  symbol  type  [FE]            AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {    [BUGGY]  super.resolveInternal(t,  enclosing,  type,  getPropertyType());  [BUGGY]    finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  enclosing,  type,  getPropertyType());	  super.resolveInternal(t,    enclosing,    getPropertyType());    	non-compiled	[CE]  cannot  find  symbol  type	11	None	replace
47	[BUG]  [BUGGY]  super.resolveInternal(t,  enclosing,  propertyNode,  getPropertyType());  [CE]  cannot  find  symbol  propertyNode  [FE]              AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {    [BUGGY]  super.resolveInternal(t,  enclosing,  propertyNode,  getPropertyType());  [BUGGY]    finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  enclosing,  propertyNode,  getPropertyType());	  super.resolveInternal(t,    enclosing,    getPropertyType());    	non-compiled	[CE]  cannot  find  symbol  propertyNode	11	None	replace
48	[BUG]  [BUGGY]  super.resolveInternal(t,  type,  enclosing,  getPropertyType());  [CE]  cannot  find  symbol  type  [FE]                AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {    [BUGGY]  super.resolveInternal(t,  type,  enclosing,  getPropertyType());  [BUGGY]    finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  type,  enclosing,  getPropertyType());	  super.resolveInternal(t,    enclosing,    getPropertyType());    	non-compiled	[CE]  cannot  find  symbol  type	11	None	replace
49	[BUG]  [BUGGY]  super.resolveInternal(t,  enclosing,  getPropertyType(),  propertyNode);  [CE]  method  getPropertyType  in  class  ObjectType  cannot  be  applied  to  given  types;  [FE]                  AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {    [BUGGY]  super.resolveInternal(t,  enclosing,  getPropertyType(),  propertyNode);  [BUGGY]    finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  enclosing,  getPropertyType(),  propertyNode);	  super.resolveInternal(t,    enclosing,    getPropertyType());    	non-compiled	[CE]  method  getPropertyType  in  class  ObjectType  cannot  be  applied  to  given  types;	11	None	replace
50	[BUG]  [BUGGY]  super.resolveInternal(t,  propertyNode,  enclosing,  getPropertyType());  [CE]  cannot  find  symbol  propertyNode  [FE]                    AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {    [BUGGY]  super.resolveInternal(t,  propertyNode,  enclosing,  getPropertyType());  [BUGGY]    finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  propertyNode,  enclosing,  getPropertyType());	  super.resolveInternal(t,    enclosing,    getPropertyType());    	non-compiled	[CE]  cannot  find  symbol  propertyNode	11	None	replace
51	[BUG]  [BUGGY]  super.resolveInternal(t,  enclosing,  getPropertyName(),  type);  [CE]  cannot  find  symbol  [FE]        AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {    [BUGGY]  super.resolveInternal(t,  enclosing,  getPropertyName(),  type);  [BUGGY]    finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  enclosing,  getPropertyName(),  type);	  super.resolveInternal(t,    enclosing,    getPropertyName());    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
52	[BUG]  [BUGGY]  super.resolveInternal(t,  enclosing,  propertyName,  getPropertyName());  [CE]  cannot  find  symbol  propertyName  [FE]          AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {    [BUGGY]  super.resolveInternal(t,  enclosing,  propertyName,  getPropertyName());  [BUGGY]    finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  enclosing,  propertyName,  getPropertyName());	  super.resolveInternal(t,    enclosing,    getPropertyName());    	non-compiled	[CE]  cannot  find  symbol  propertyName	13	None	replace
53	[BUG]  [BUGGY]  super.resolveInternal(t,  propertyNode,  enclosing,  getPropertyName());  [CE]  cannot  find  symbol  propertyNode  [FE]            AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {    [BUGGY]  super.resolveInternal(t,  propertyNode,  enclosing,  getPropertyName());  [BUGGY]    finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  propertyNode,  enclosing,  getPropertyName());	  super.resolveInternal(t,    enclosing,    getPropertyName());    	non-compiled	[CE]  cannot  find  symbol  propertyNode	13	None	replace
54	[BUG]  [BUGGY]  super.resolveInternal(t,  enclosing,  getPropertyName(),  propertyNode);  [CE]  cannot  find  symbol  [FE]              AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {    [BUGGY]  super.resolveInternal(t,  enclosing,  getPropertyName(),  propertyNode);  [BUGGY]    finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  enclosing,  getPropertyName(),  propertyNode);	  super.resolveInternal(t,    enclosing,    getPropertyName());    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
55	[BUG]  [BUGGY]  super.resolveInternal(t,  enclosing,  type,  getPropertyName());  [CE]  cannot  find  symbol  type  [FE]                AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {    [BUGGY]  super.resolveInternal(t,  enclosing,  type,  getPropertyName());  [BUGGY]    finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  enclosing,  type,  getPropertyName());	  super.resolveInternal(t,    enclosing,    getPropertyName());    	non-compiled	[CE]  cannot  find  symbol  type	13	None	replace
56	[BUG]  [BUGGY]      Predicate  validator  =  getReferencedType();  [CE]  incompatible  types  [FE]                      AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {    [BUGGY]      Predicate  validator  =  getReferencedType();  [BUGGY]    finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	        Predicate  validator  =  getReferencedType();	  timeout    	non-compiled	[CE]  incompatible  types	8	None	add
57	[BUG]  [BUGGY]  super.resolveInternal(t,  enclosing,  getReferencedType(),  type);  [CE]  cannot  find  symbol  type  [FE]              AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {    [BUGGY]  super.resolveInternal(t,  enclosing,  getReferencedType(),  type);  [BUGGY]    finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  enclosing,  getReferencedType(),  type);	  super.resolveInternal(t,    enclosing,    getReferencedType());    	non-compiled	[CE]  cannot  find  symbol  type	4	None	replace
58	[BUG]  [BUGGY]  super.resolveInternal(t,  enclosing,  type,  getReferencedType());  [CE]  cannot  find  symbol  type  [FE]                AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {    [BUGGY]  super.resolveInternal(t,  enclosing,  type,  getReferencedType());  [BUGGY]    finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  enclosing,  type,  getReferencedType());	  super.resolveInternal(t,    enclosing,    getReferencedType());    	non-compiled	[CE]  cannot  find  symbol  type	4	None	replace
59	[BUG]  [BUGGY]  super.resolveInternal(t,  type,  enclosing,  getReferencedType());  [CE]  cannot  find  symbol  type  [FE]                  AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {    [BUGGY]  super.resolveInternal(t,  type,  enclosing,  getReferencedType());  [BUGGY]    finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  type,  enclosing,  getReferencedType());	  super.resolveInternal(t,    enclosing,    getReferencedType());    	non-compiled	[CE]  cannot  find  symbol  type	4	None	replace
60	[BUG]  [BUGGY]  super.resolveInternal(t,  enclosing,  propertyNode,  getReferencedType());  [CE]  cannot  find  symbol  propertyNode  [FE]                    AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {    [BUGGY]  super.resolveInternal(t,  enclosing,  propertyNode,  getReferencedType());  [BUGGY]    finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  enclosing,  propertyNode,  getReferencedType());	  super.resolveInternal(t,    enclosing,    getReferencedType());    	non-compiled	[CE]  cannot  find  symbol  propertyNode	4	None	replace
61	[BUG]  [BUGGY]  super.resolveInternal(t,  enclosing,  getReferencedType(),  propertyNode);  [CE]  cannot  find  symbol  propertyNode  [FE]                      AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {    [BUGGY]  super.resolveInternal(t,  enclosing,  getReferencedType(),  propertyNode);  [BUGGY]    finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  enclosing,  getReferencedType(),  propertyNode);	  super.resolveInternal(t,    enclosing,    getReferencedType());    	non-compiled	[CE]  cannot  find  symbol  propertyNode	4	None	replace
62	[BUG]  [BUGGY]  Super.resolveInternal(t,  enclosing,  getReferencedType(),  type);  [CE]  cannot  find  symbol  type  [FE]                        AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {    [BUGGY]  Super.resolveInternal(t,  enclosing,  getReferencedType(),  type);  [BUGGY]    finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	Super.resolveInternal(t,  enclosing,  getReferencedType(),  type);	  super.resolveInternal(t,    enclosing,    getReferencedType());    	non-compiled	[CE]  cannot  find  symbol  type	4	None	replace
63	[BUG]  [BUGGY]  super.resolveType(t,  enclosing,  registry);  [CE]  cannot  find  symbol  [FE]                AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {    [BUGGY]  super.resolveType(t,  enclosing,  registry);  [BUGGY]    finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveType(t,  enclosing,  registry);	  super.resolveType(t,    enclosing);    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
64	[BUG]  [BUGGY]  super.resolveType(t,  enclosing,  propertyNode);  [CE]  cannot  find  symbol  propertyNode  [FE]                  AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {    [BUGGY]  super.resolveType(t,  enclosing,  propertyNode);  [BUGGY]    finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveType(t,  enclosing,  propertyNode);	  super.resolveType(t,    enclosing);    	non-compiled	[CE]  cannot  find  symbol  propertyNode	5	None	replace
65	[BUG]  [BUGGY]  super.resolveType(t,  enclosing,  type);  [CE]  cannot  find  symbol  type  [FE]                    AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {    [BUGGY]  super.resolveType(t,  enclosing,  type);  [BUGGY]    finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveType(t,  enclosing,  type);	  super.resolveType(t,    enclosing);    	non-compiled	[CE]  cannot  find  symbol  type	5	None	replace
66	[BUG]  [BUGGY]  super.resolveType(t,  enclosing,  forAnnotations);  [CE]  cannot  find  symbol  forAnnotations  [FE]                      AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {    [BUGGY]  super.resolveType(t,  enclosing,  forAnnotations);  [BUGGY]    finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveType(t,  enclosing,  forAnnotations);	  super.resolveType(t,    enclosing);    	non-compiled	[CE]  cannot  find  symbol  forAnnotations	5	None	replace
67	[BUG]  [BUGGY]  super.resolveType(t,  enclosing,  getReferencedType());  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {    [BUGGY]  super.resolveType(t,  enclosing,  getReferencedType());  [BUGGY]    finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveType(t,  enclosing,  getReferencedType());	  super.resolveType(t,    enclosing);    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
68	[BUG]  [BUGGY]  super.resolveType(t,  type);  [CE]  cannot  find  symbol  type  [FE]                          AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {    [BUGGY]  super.resolveType(t,  type);  [BUGGY]    finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveType(t,  type);	  super.resolveType(t,    enclosing);    	non-compiled	[CE]  cannot  find  symbol  type	5	None	replace
69	[BUG]  [BUGGY]  super.resolveInternal(t,  enclosing,  def);  [CE]  cannot  find  symbol  def  [FE]          AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {    [BUGGY]  super.resolveInternal(t,  enclosing,  def);  [BUGGY]    finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  enclosing,  def);	  super.resolveInternal(t,    enclosing,    type);    	non-compiled	[CE]  cannot  find  symbol  def	2	None	replace
70	[BUG]  [BUGGY]  super.resolveInternal(t,  enclosing,  deferred);  [CE]  cannot  find  symbol  deferred  [FE]            AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {    [BUGGY]  super.resolveInternal(t,  enclosing,  deferred);  [BUGGY]    finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  enclosing,  deferred);	  super.resolveInternal(t,    enclosing,    type);    	non-compiled	[CE]  cannot  find  symbol  deferred	2	None	replace
71	[BUG]  [BUGGY]  super.resolvePropertyInternal(t,  enclosing,  getReferencedType());  [CE]  cannot  find  symbol  [FE]            AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {    [BUGGY]  super.resolvePropertyInternal(t,  enclosing,  getReferencedType());  [BUGGY]    finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolvePropertyInternal(t,  enclosing,  getReferencedType());	  super.resolvePropertyInternal(t,    enclosing);    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
72	[BUG]  [BUGGY]  super.resolvePropertyInternal(t,  enclosing,  scope);  [CE]  cannot  find  symbol  scope  [FE]              AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {    [BUGGY]  super.resolvePropertyInternal(t,  enclosing,  scope);  [BUGGY]    finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolvePropertyInternal(t,  enclosing,  scope);	  super.resolvePropertyInternal(t,    enclosing);    	non-compiled	[CE]  cannot  find  symbol  scope	12	None	replace
73	[BUG]  [BUGGY]  super.resolveInternal(t,  enclosing,  propertyName,  getReferencedType());  [CE]  cannot  find  symbol  propertyName  [FE]        AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {    [BUGGY]  super.resolveInternal(t,  enclosing,  propertyName,  getReferencedType());  [BUGGY]    finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  enclosing,  propertyName,  getReferencedType());	  super.resolveInternal(t,    enclosing,    getPropertyName());    	non-compiled	[CE]  cannot  find  symbol  propertyName	13	None	replace
74	[BUG]  [BUGGY]  super.resolveInternal(t,  enclosing,  propertyNode,  getPropertyName());  [CE]  cannot  find  symbol  propertyNode  [FE]          AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {    [BUGGY]  super.resolveInternal(t,  enclosing,  propertyNode,  getPropertyName());  [BUGGY]    finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  enclosing,  propertyNode,  getPropertyName());	  super.resolveInternal(t,    enclosing,    getPropertyName());    	non-compiled	[CE]  cannot  find  symbol  propertyNode	13	None	replace
75	[BUG]  [BUGGY]  super.resolveInternal(t,  propertyNode,  getPropertyName());  [CE]  cannot  find  symbol  propertyNode  [FE]            AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {    [BUGGY]  super.resolveInternal(t,  propertyNode,  getPropertyName());  [BUGGY]    finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  propertyNode,  getPropertyName());	  super.resolveInternal(t,    enclosing,    getPropertyName());    	non-compiled	[CE]  cannot  find  symbol  propertyNode	13	None	replace
76	[BUG]  [BUGGY]  Predicates.checkNotNull(propertyNode);  [CE]  cannot  find  symbol  propertyNode  [FE]                      AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {    [BUGGY]  Predicates.checkNotNull(propertyNode);  [BUGGY]    finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	Predicates.checkNotNull(propertyNode);	      timeout    	non-compiled	[CE]  cannot  find  symbol  propertyNode	9	None	replace
77	[BUG]  [BUGGY]  super.resolveInternal(t,  enclosing,  getPropertyType(),  getReferencedType());  [CE]  method  getPropertyType  in  class  ObjectType  cannot  be  applied  to  given  types;  [FE]              AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {    [BUGGY]  super.resolveInternal(t,  enclosing,  getPropertyType(),  getReferencedType());  [BUGGY]    finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  enclosing,  getPropertyType(),  getReferencedType());	  super.resolveInternal(t,    enclosing,    getReferencedType());    	non-compiled	[CE]  method  getPropertyType  in  class  ObjectType  cannot  be  applied  to  given  types;	4	None	replace
78	[BUG]  [BUGGY]  super.resolveInternal(t,  enclosing,  getPropertyName(),  getReferencedType());  [CE]  cannot  find  symbol  [FE]                AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {    [BUGGY]  super.resolveInternal(t,  enclosing,  getPropertyName(),  getReferencedType());  [BUGGY]    finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  enclosing,  getPropertyName(),  getReferencedType());	  super.resolveInternal(t,    enclosing,    getReferencedType());    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
79	[BUG]  [BUGGY]  super.resolveInternal(t,  enclosing,  inferred);  [CE]  cannot  find  symbol  inferred  [FE]            AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {    [BUGGY]  super.resolveInternal(t,  enclosing,  inferred);  [BUGGY]    finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  enclosing,  inferred);	  super.resolveInternal(t,    enclosing,    forAnnotations);    	non-compiled	[CE]  cannot  find  symbol  inferred	3	None	replace
80	[BUG]  [BUGGY]  super.resolveInternal(t,  enclosing,  propertyNode,  registry);  [CE]  cannot  find  symbol  propertyNode  [FE]                  AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {    [BUGGY]  super.resolveInternal(t,  enclosing,  propertyNode,  registry);  [BUGGY]    finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  enclosing,  propertyNode,  registry);	  super.resolveInternal(t,    enclosing,    registry);    	non-compiled	[CE]  cannot  find  symbol  propertyNode	6	None	replace
81	[BUG]  [BUGGY]  super.resolveInternal(t,  enclosing,  registry,  inferred);  [CE]  cannot  find  symbol  inferred  [FE]                    AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {    [BUGGY]  super.resolveInternal(t,  enclosing,  registry,  inferred);  [BUGGY]    finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  enclosing,  registry,  inferred);	  super.resolveInternal(t,    enclosing,    registry);    	non-compiled	[CE]  cannot  find  symbol  inferred	6	None	replace
82	[BUG]  [BUGGY]  super.resolveInternal(t,  inferred);  [CE]  cannot  find  symbol  inferred  [FE]                    AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {    [BUGGY]  super.resolveInternal(t,  inferred);  [BUGGY]    finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  inferred);	  super.resolveInternal(t,    propertyNode);    	non-compiled	[CE]  cannot  find  symbol  inferred	7	None	replace
83	[BUG]  [BUGGY]  super.resolveInternal(t,  sourceName);  [CE]  no  suitable  method  found  for  resolveInternal(ErrorReporter,String)  [FE]                      AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {    [BUGGY]  super.resolveInternal(t,  sourceName);  [BUGGY]    finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  sourceName);	  super.resolveInternal(t,    propertyNode);    	non-compiled	[CE]  no  suitable  method  found  for  resolveInternal(ErrorReporter,String)	7	None	replace
84	[BUG]  [BUGGY]  super.resolveInternal(t,  enclosing,  nameNode);  [CE]  cannot  find  symbol  nameNode  [FE]        AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {    [BUGGY]  super.resolveInternal(t,  enclosing,  nameNode);  [BUGGY]    finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  enclosing,  nameNode);	  super.resolveInternal(t,    enclosing,    propertyNode);    	non-compiled	[CE]  cannot  find  symbol  nameNode	1	None	replace
85	[BUG]  [BUGGY]  super.resolveInternal(t,  enclosing,  sourceName);  [CE]  no  suitable  method  found  for  resolveInternal(ErrorReporter,StaticScope<JSType>,String)  [FE]          AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {    [BUGGY]  super.resolveInternal(t,  enclosing,  sourceName);  [BUGGY]    finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  enclosing,  sourceName);	  super.resolveInternal(t,    enclosing,    propertyNode);    	non-compiled	[CE]  no  suitable  method  found  for  resolveInternal(ErrorReporter,StaticScope<JSType>,String)	1	None	replace
86	[BUG]  [BUGGY]  super.resolveInternal(t,  enclosing,  propertyNode,  false);  [CE]  cannot  find  symbol  propertyNode  [FE]        AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {    [BUGGY]  super.resolveInternal(t,  enclosing,  propertyNode,  false);  [BUGGY]    finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  enclosing,  propertyNode,  false);	  super.resolveInternal(t,    enclosing,    false);    	non-compiled	[CE]  cannot  find  symbol  propertyNode	10	None	replace
87	[BUG]  [BUGGY]  super.resolveInternal(t,  enclosing,  false,  propertyNode);  [CE]  cannot  find  symbol  propertyNode  [FE]          AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {    [BUGGY]  super.resolveInternal(t,  enclosing,  false,  propertyNode);  [BUGGY]    finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  enclosing,  false,  propertyNode);	  super.resolveInternal(t,    enclosing,    false);    	non-compiled	[CE]  cannot  find  symbol  propertyNode	10	None	replace
88	[BUG]  [BUGGY]  super.resolveType(t,  enclosing,  properties);  [CE]  cannot  find  symbol  properties  [FE]                AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {    [BUGGY]  super.resolveType(t,  enclosing,  properties);  [BUGGY]    finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveType(t,  enclosing,  properties);	  super.resolveType(t,    enclosing);    	non-compiled	[CE]  cannot  find  symbol  properties	5	None	replace
89	[BUG]  [BUGGY]      PropertyRegistry  registry  =  getPropertyRegistry(enclosing);  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {    [BUGGY]      PropertyRegistry  registry  =  getPropertyRegistry(enclosing);  [BUGGY]    finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	        PropertyRegistry  registry  =  getPropertyRegistry(enclosing);	  timeout    	non-compiled	[CE]  cannot  find  symbol	8	None	add
90	[BUG]  [BUGGY]  super.resolveType(t,  enclosing,  this);  [CE]  cannot  find  symbol  [FE]                AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {    [BUGGY]  super.resolveType(t,  enclosing,  this);  [BUGGY]    finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveType(t,  enclosing,  this);	  super.resolveType(t,    enclosing);    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
91	[BUG]  [BUGGY]  super.resolveInternal(t,  enclosing,  getReferencedType(),  false);  [CE]  no  suitable  method  found  for  resolveInternal(ErrorReporter,StaticScope<JSType>,JSType,boolean)  [FE]        AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {    [BUGGY]  super.resolveInternal(t,  enclosing,  getReferencedType(),  false);  [BUGGY]    finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  enclosing,  getReferencedType(),  false);	  super.resolveInternal(t,    enclosing,    false);    	non-compiled	[CE]  no  suitable  method  found  for  resolveInternal(ErrorReporter,StaticScope<JSType>,JSType,boolean)	10	None	replace
92	[BUG]  [BUGGY]  super.resolveInternal(t,  enclosing,  getType(),  getPropertyType());  [CE]  cannot  find  symbol  [FE]          AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {    [BUGGY]  super.resolveInternal(t,  enclosing,  getType(),  getPropertyType());  [BUGGY]    finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  enclosing,  getType(),  getPropertyType());	  super.resolveInternal(t,    enclosing,    getPropertyType());    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
93	[BUG]  [BUGGY]  PropertyRegistry  registry  =  t.getPropertyRegistry();  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {    [BUGGY]  PropertyRegistry  registry  =  t.getPropertyRegistry();  [BUGGY]    finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	PropertyRegistry  registry  =  t.getPropertyRegistry();	      timeout    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
94	[BUG]  [BUGGY]  timeout  [FE]                        AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {    [BUGGY]  Preconditions.checkArgument(resolved);  [BUGGY]    finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	add	Preconditions.checkArgument(resolved);	      timeout    	compilable	timeout	9	1	replace
95	[BUG]  [BUGGY]  Preconditions.checkArgument(resolved);  timeout  [FE]                        AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {    [BUGGY]  Preconditions.checkArgument(resolved);  [BUGGY]    finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	Preconditions.checkArgument(resolved);	      timeout    	compilable	timeout	9	1	replace
96	[BUG]  [BUGGY]  PropertyRegistry  registry  =  getPropertyRegistry(propertyName);  [CE]  cannot  find  symbol  [FE]                          AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {    [BUGGY]  PropertyRegistry  registry  =  getPropertyRegistry(propertyName);  [BUGGY]    finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	PropertyRegistry  registry  =  getPropertyRegistry(propertyName);	      timeout    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
97	[BUG]  [BUGGY]  Predicate  validator  =  t.getValue();  [CE]  cannot  find  symbol  [FE]                            AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {    [BUGGY]  Predicate  validator  =  t.getValue();  [BUGGY]    finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	Predicate  validator  =  t.getValue();	      timeout    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
98	[BUG]  [BUGGY]  super.resolvePropertyInternal(t,  enclosing,  this);  [CE]  cannot  find  symbol  [FE]            AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {    [BUGGY]  super.resolvePropertyInternal(t,  enclosing,  this);  [BUGGY]    finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolvePropertyInternal(t,  enclosing,  this);	  super.resolvePropertyInternal(t,    enclosing);    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
99	[BUG]  [BUGGY]  super.resolveInternal(t,  enclosing,  getPropertyNode());  [CE]  method  getPropertyNode  in  class  ObjectType  cannot  be  applied  to  given  types;  [FE]        AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {    [BUGGY]  super.resolveInternal(t,  enclosing,  getPropertyNode());  [BUGGY]    finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  enclosing,  getPropertyNode());	  super.resolveInternal(t,    enclosing,    propertyNode);    	non-compiled	[CE]  method  getPropertyNode  in  class  ObjectType  cannot  be  applied  to  given  types;	1	None	replace
100	[BUG]  [BUGGY]      Predicates.checkNotNull(registry);  [CE]  cannot  find  symbol  Predicates  [FE]                      AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {    [BUGGY]      Predicates.checkNotNull(registry);  [BUGGY]    finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	        Predicates.checkNotNull(registry);	  timeout    	non-compiled	[CE]  cannot  find  symbol  Predicates	8	None	add
101	[BUG]  [BUGGY]  super.resolveInternal(t,  enclosing,  getPropertyName(),  propertyName);  [CE]  cannot  find  symbol  [FE]        AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {    [BUGGY]  super.resolveInternal(t,  enclosing,  getPropertyName(),  propertyName);  [BUGGY]    finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  enclosing,  getPropertyName(),  propertyName);	  super.resolveInternal(t,    enclosing,    getPropertyName());    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
102	[BUG]  [BUGGY]  super.resolveInternal(t,  enclosing,  getPropertyName(),  null);  [CE]  cannot  find  symbol  [FE]          AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {    [BUGGY]  super.resolveInternal(t,  enclosing,  getPropertyName(),  null);  [BUGGY]    finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  enclosing,  getPropertyName(),  null);	  super.resolveInternal(t,    enclosing,    getPropertyName());    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
103	[BUG]  [BUGGY]  Super.resolveInternal(t,  enclosing);  [CE]  cannot  find  symbol  Super  [FE]                    AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {    [BUGGY]  Super.resolveInternal(t,  enclosing);  [BUGGY]    finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	Super.resolveInternal(t,  enclosing);	  super.resolveInternal(t,    propertyNode);    	non-compiled	[CE]  cannot  find  symbol  Super	7	None	replace
104	[BUG]  [BUGGY]  super.resolveInternal(t,  enclosing,  getPropertyTypeName(),  getReferencedType());  [CE]  cannot  find  symbol  [FE]              AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {    [BUGGY]  super.resolveInternal(t,  enclosing,  getPropertyTypeName(),  getReferencedType());  [BUGGY]    finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  enclosing,  getPropertyTypeName(),  getReferencedType());	  super.resolveInternal(t,    enclosing,    getReferencedType());    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
105	[BUG]  [BUGGY]  super.resolveInternal(t,  enclosing,  getPropertyNode(),  getReferencedType());  [CE]  method  getPropertyNode  in  class  ObjectType  cannot  be  applied  to  given  types;  [FE]                AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {    [BUGGY]  super.resolveInternal(t,  enclosing,  getPropertyNode(),  getReferencedType());  [BUGGY]    finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	super.resolveInternal(t,  enclosing,  getPropertyNode(),  getReferencedType());	  super.resolveInternal(t,    enclosing,    getReferencedType());    	non-compiled	[CE]  method  getPropertyNode  in  class  ObjectType  cannot  be  applied  to  given  types;	4	None	replace
106	[BUG]  [BUGGY]  Super.resolveInternal(t,  enclosing,  propertyNode);  [CE]  cannot  find  symbol  propertyNode  [FE]            AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {    [BUGGY]  Super.resolveInternal(t,  enclosing,  propertyNode);  [BUGGY]    finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	195	195	3	replace	Super.resolveInternal(t,  enclosing,  propertyNode);	  super.resolveInternal(t,    enclosing,    forAnnotations);    	non-compiled	[CE]  cannot  find  symbol  propertyNode	3	None	replace
