bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(type!=  null  &&  type.isAnnotated())  {  return  false;  }  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(type!=  null  &&  type.isAnnotated())  {  return  false;  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(type!=  null  &&  type.isAnnotated())  {  return  false;  }	  if(type!=    null    ||    type.isAnnotated())    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol	102	None	replace
2	[BUG]  [BUGGY]  if(type  ==  null  &&  type.isAnnotated())  {  return  false;  }  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(type  ==  null  &&  type.isAnnotated())  {  return  false;  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(type  ==  null  &&  type.isAnnotated())  {  return  false;  }	  if(type!=    null    ||    type.isAnnotated())    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol	102	None	replace
3	[BUG]  [BUGGY]  if(type  ==  null  ||  type.isAnnotated())  {  return  false;  }  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(type  ==  null  ||  type.isAnnotated())  {  return  false;  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(type  ==  null  ||  type.isAnnotated())  {  return  false;  }	  if(type!=    null    ||    type.isAnnotated())    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol	102	None	replace
4	[BUG]  [BUGGY]  if(type!=  null  ||  type.isAnnotated())return  false;  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(type!=  null  ||  type.isAnnotated())return  false;  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(type!=  null  ||  type.isAnnotated())return  false;  }	  if(type!=    null    ||    type.isAnnotated())    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	102	None	replace
5	[BUG]  [BUGGY]  if(type!=  null  ||  type.isAnnotated()  ||  forAnnotations)  {  return  false;  }  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(type!=  null  ||  type.isAnnotated()  ||  forAnnotations)  {  return  false;  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(type!=  null  ||  type.isAnnotated()  ||  forAnnotations)  {  return  false;  }	  if(type!=    null    ||    type.isAnnotated())    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol	102	None	replace
6	[BUG]  [BUGGY]  if(type!=  null  ||  type.isAnnotated())return  false;  [CE]  cannot  find  symbol  [FE]                          AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(type!=  null  ||  type.isAnnotated())return  false;  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(type!=  null  ||  type.isAnnotated())return  false;	  if(type!=    null    ||    type.isAnnotated())    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol	102	None	replace
7	[BUG]  [BUGGY]  if(type.isVarArgs()  ||  type.isUnknownType())return  false;  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(type.isVarArgs()  ||  type.isUnknownType())return  false;  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(type.isVarArgs()  ||  type.isUnknownType())return  false;  }	  if(type.isVarArgs()    ||    type.isUnknownType())    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	168	None	replace
8	[BUG]  [BUGGY]  if(type.isVarArgs()  &&  type.isUnknownType())  {  return  false;  }  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(type.isVarArgs()  &&  type.isUnknownType())  {  return  false;  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(type.isVarArgs()  &&  type.isUnknownType())  {  return  false;  }	  if(type.isVarArgs()    ||    type.isUnknownType())    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol	168	None	replace
9	[BUG]  [BUGGY]  if(type.isUnknownType()  ||  type.isVarArgs())  {  return  false;  }  [CE]  cannot  find  symbol  [FE]                          AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(type.isUnknownType()  ||  type.isVarArgs())  {  return  false;  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(type.isUnknownType()  ||  type.isVarArgs())  {  return  false;  }	  if(type.isVarArgs()    ||    type.isUnknownType())    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol	168	None	replace
10	[BUG]  [BUGGY]  if(type.isVarArgs()  ||  type.isUnknownType()  ||  enclosing)  {  return  false;  }  [CE]  cannot  find  symbol  [FE]                            AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(type.isVarArgs()  ||  type.isUnknownType()  ||  enclosing)  {  return  false;  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(type.isVarArgs()  ||  type.isUnknownType()  ||  enclosing)  {  return  false;  }	  if(type.isVarArgs()    ||    type.isUnknownType())    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol	168	None	replace
11	[BUG]  [BUGGY]  if(registry.isVarArgs()  ||  type.isUnknownType())  {  return  false;  }  [CE]  cannot  find  symbol  [FE]                              AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(registry.isVarArgs()  ||  type.isUnknownType())  {  return  false;  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(registry.isVarArgs()  ||  type.isUnknownType())  {  return  false;  }	  if(type.isVarArgs()    ||    type.isUnknownType())    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol	168	None	replace
12	[BUG]  [BUGGY]  if(type.isVarArgs()  ||  type.isUnknownType())return  false;  [CE]  cannot  find  symbol  [FE]                                AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(type.isVarArgs()  ||  type.isUnknownType())return  false;  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(type.isVarArgs()  ||  type.isUnknownType())return  false;	  if(type.isVarArgs()    ||    type.isUnknownType())    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol	168	None	replace
13	[BUG]  [BUGGY]  if(type.isUnknownType()  &&  type.isSubtype(enclosing))  {  return  true;  }  [CE]  method  isSubtype  in  class  JSType  cannot  be  applied  to  given  types;  [FE]            AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(type.isUnknownType()  &&  type.isSubtype(enclosing))  {  return  true;  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(type.isUnknownType()  &&  type.isSubtype(enclosing))  {  return  true;  }	  if(type.isUnknownType()    ||    type.isSubtype(enclosing))    {    return    true;    }    	non-compiled	[CE]  method  isSubtype  in  class  JSType  cannot  be  applied  to  given  types;	219	None	replace
14	[BUG]  [BUGGY]  if(type.isUnknownType()  ||  type.isSubtype(enclosing,  t))  {  return  true;  }  [CE]  method  isSubtype  in  class  JSType  cannot  be  applied  to  given  types;  [FE]              AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(type.isUnknownType()  ||  type.isSubtype(enclosing,  t))  {  return  true;  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(type.isUnknownType()  ||  type.isSubtype(enclosing,  t))  {  return  true;  }	  if(type.isUnknownType()    ||    type.isSubtype(enclosing))    {    return    true;    }    	non-compiled	[CE]  method  isSubtype  in  class  JSType  cannot  be  applied  to  given  types;	219	None	replace
15	[BUG]  [BUGGY]  if(type.isUnknownType()  ||  type.isSubtype(enclosing,  forAnnotations))  {  return  true;  }  [CE]  cannot  find  symbol  forAnnotations  [FE]                AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(type.isUnknownType()  ||  type.isSubtype(enclosing,  forAnnotations))  {  return  true;  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(type.isUnknownType()  ||  type.isSubtype(enclosing,  forAnnotations))  {  return  true;  }	  if(type.isUnknownType()    ||    type.isSubtype(enclosing))    {    return    true;    }    	non-compiled	[CE]  cannot  find  symbol  forAnnotations	219	None	replace
16	[BUG]  [BUGGY]  if(type.isUnknownType()  ||  type.isSubtype(enclosing,  propertyNode))  {  return  true;  }  [CE]  cannot  find  symbol  propertyNode  [FE]                  AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(type.isUnknownType()  ||  type.isSubtype(enclosing,  propertyNode))  {  return  true;  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(type.isUnknownType()  ||  type.isSubtype(enclosing,  propertyNode))  {  return  true;  }	  if(type.isUnknownType()    ||    type.isSubtype(enclosing))    {    return    true;    }    	non-compiled	[CE]  cannot  find  symbol  propertyNode	219	None	replace
17	[BUG]  [BUGGY]  if(type.isUnknownType()  ||  type.isSubtype(enclosing,  false))  {  return  true;  }  [CE]  method  isSubtype  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                    AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(type.isUnknownType()  ||  type.isSubtype(enclosing,  false))  {  return  true;  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(type.isUnknownType()  ||  type.isSubtype(enclosing,  false))  {  return  true;  }	  if(type.isUnknownType()    ||    type.isSubtype(enclosing))    {    return    true;    }    	non-compiled	[CE]  method  isSubtype  in  class  JSType  cannot  be  applied  to  given  types;	219	None	replace
18	[BUG]  [BUGGY]  if(type.isUnknownType()  ||  type.isSubtype(enclosing,  registry))  {  return  true;  }  [CE]  method  isSubtype  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                      AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(type.isUnknownType()  ||  type.isSubtype(enclosing,  registry))  {  return  true;  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(type.isUnknownType()  ||  type.isSubtype(enclosing,  registry))  {  return  true;  }	  if(type.isUnknownType()    ||    type.isSubtype(enclosing))    {    return    true;    }    	non-compiled	[CE]  method  isSubtype  in  class  JSType  cannot  be  applied  to  given  types;	219	None	replace
19	[BUG]  [BUGGY]  if(type.isReferenced()  ||  type.isUnknownType())  {  return  false;  }  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(type.isReferenced()  ||  type.isUnknownType())  {  return  false;  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(type.isReferenced()  ||  type.isUnknownType())  {  return  false;  }	  if(type.isUnknownType()    ||    type.isUnknownType())    {    return    false;    }    timeout    	non-compiled	[CE]  cannot  find  symbol	155	None	replace
20	[BUG]  [BUGGY]  if(type.isAnnotationType()  ||  type.isAnnotationType())  {  return  false;  }  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(type.isAnnotationType()  ||  type.isAnnotationType())  {  return  false;  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(type.isAnnotationType()  ||  type.isAnnotationType())  {  return  false;  }	  if(type.isUnknownType()    ||    type.isUnknownType())    {    return    false;    }    timeout    	non-compiled	[CE]  cannot  find  symbol	155	None	replace
21	[BUG]  [BUGGY]  if(type.isReferencedType()  ||  type.isUnknownType())  {  return  false;  }  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(type.isReferencedType()  ||  type.isUnknownType())  {  return  false;  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(type.isReferencedType()  ||  type.isUnknownType())  {  return  false;  }	  if(type.isUnknownType()    ||    type.isUnknownType())    {    return    false;    }    timeout    	non-compiled	[CE]  cannot  find  symbol	155	None	replace
22	[BUG]  [BUGGY]  if(type.isSyntheticType()  ||  type.isUnknownType())  {  return  false;  }  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(type.isSyntheticType()  ||  type.isUnknownType())  {  return  false;  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(type.isSyntheticType()  ||  type.isUnknownType())  {  return  false;  }	  if(type.isUnknownType()    ||    type.isUnknownType())    {    return    false;    }    timeout    	non-compiled	[CE]  cannot  find  symbol	155	None	replace
23	[BUG]  [BUGGY]  if(type.isAnnotated()  ||  type.isAnnotated())  {  return  false;  }  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(type.isAnnotated()  ||  type.isAnnotated())  {  return  false;  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(type.isAnnotated()  ||  type.isAnnotated())  {  return  false;  }	  if(type.isUnknownType()    ||    type.isUnknownType())    {    return    false;    }    timeout    	non-compiled	[CE]  cannot  find  symbol	155	None	replace
24	[BUG]  [BUGGY]  if(type!=  null  ||!resolved)  {  return  false;  }  [CE]  resolved  has  private  access  in  JSType  [FE]              AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(type!=  null  ||!resolved)  {  return  false;  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(type!=  null  ||!resolved)  {  return  false;  }	  if(type    ==    null    ||!resolved)    {    return    true;    }    	non-compiled	[CE]  resolved  has  private  access  in  JSType	230	None	replace
25	[BUG]  [BUGGY]  if(resolved  ||  type  ==  null)  {  return  true;  }  [CE]  resolved  has  private  access  in  JSType  [FE]                AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(resolved  ||  type  ==  null)  {  return  true;  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(resolved  ||  type  ==  null)  {  return  true;  }	  if(type    ==    null    ||!resolved)    {    return    true;    }    	non-compiled	[CE]  resolved  has  private  access  in  JSType	230	None	replace
26	[BUG]  [BUGGY]  if(type!=  null  &&!resolved)  {  return  true;  }  [CE]  resolved  has  private  access  in  JSType  [FE]                  AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(type!=  null  &&!resolved)  {  return  true;  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(type!=  null  &&!resolved)  {  return  true;  }	  if(type    ==    null    ||!resolved)    {    return    true;    }    	non-compiled	[CE]  resolved  has  private  access  in  JSType	230	None	replace
27	[BUG]  [BUGGY]  if(type  ==  null  &&!resolved)  {  return  true;  }  [CE]  resolved  has  private  access  in  JSType  [FE]                    AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(type  ==  null  &&!resolved)  {  return  true;  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(type  ==  null  &&!resolved)  {  return  true;  }	  if(type    ==    null    ||!resolved)    {    return    true;    }    	non-compiled	[CE]  resolved  has  private  access  in  JSType	230	None	replace
28	[BUG]  [BUGGY]  Predicate  validator  =  type.getValue();  setReferencedAndResolvedType(type,  t,  validator,  enclosing);  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  Predicate  validator  =  type.getValue();  setReferencedAndResolvedType(type,  t,  validator,  enclosing);  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	Predicate  validator  =  type.getValue();  setReferencedAndResolvedType(type,  t,  validator,  enclosing);	  return    false;    Predicate    validator    =    enclosing.getValue();    setReferencedAndResolvedType(type,    t,    validator,    enclosing);    	non-compiled	[CE]  cannot  find  symbol	109	None	replace
29	[BUG]  [BUGGY]  Node  validator  =  enclosing.getValue();  setReferencedAndResolvedType(type,  t,  validator,  enclosing);  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  Node  validator  =  enclosing.getValue();  setReferencedAndResolvedType(type,  t,  validator,  enclosing);  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	Node  validator  =  enclosing.getValue();  setReferencedAndResolvedType(type,  t,  validator,  enclosing);	  return    false;    Predicate    validator    =    enclosing.getValue();    setReferencedAndResolvedType(type,    t,    validator,    enclosing);    	non-compiled	[CE]  cannot  find  symbol	109	None	replace
30	[BUG]  [BUGGY]  if(enclosing!=  null)  {  return  false;  Predicate  validator  =  enclosing.getValue();  setReferencedAndResolvedType(type,  t,  validator,  enclosing);  }  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(enclosing!=  null)  {  return  false;  Predicate  validator  =  enclosing.getValue();  setReferencedAndResolvedType(type,  t,  validator,  enclosing);  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(enclosing!=  null)  {  return  false;  Predicate  validator  =  enclosing.getValue();  setReferencedAndResolvedType(type,  t,  validator,  enclosing);  }	  return    false;    Predicate    validator    =    enclosing.getValue();    setReferencedAndResolvedType(type,    t,    validator,    enclosing);    	non-compiled	[CE]  cannot  find  symbol	109	None	replace
31	[BUG]  [BUGGY]  Predicate  validator  =  registry.getValue(reference);  setReferencedAndResolvedType(type,  t,  validator,  enclosing);  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  Predicate  validator  =  registry.getValue(reference);  setReferencedAndResolvedType(type,  t,  validator,  enclosing);  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	Predicate  validator  =  registry.getValue(reference);  setReferencedAndResolvedType(type,  t,  validator,  enclosing);	  return    false;    Predicate    validator    =    enclosing.getValue();    setReferencedAndResolvedType(type,    t,    validator,    enclosing);    	non-compiled	[CE]  cannot  find  symbol	109	None	replace
32	[BUG]  [BUGGY]  Predicate  validator  =  t.getValue();  setReferencedAndResolvedType(type,  enclosing,  validator,  enclosing);  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  Predicate  validator  =  t.getValue();  setReferencedAndResolvedType(type,  enclosing,  validator,  enclosing);  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	Predicate  validator  =  t.getValue();  setReferencedAndResolvedType(type,  enclosing,  validator,  enclosing);	  return    false;    Predicate    validator    =    enclosing.getValue();    setReferencedAndResolvedType(type,    t,    validator,    enclosing);    	non-compiled	[CE]  cannot  find  symbol	109	None	replace
33	[BUG]  [BUGGY]  Predicate  validator  =  enclosing.getValue();  setReferencedAndResolvedType(type,  t,  invalidator,  enclosing);  [CE]  cannot  find  symbol  [FE]                          AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  Predicate  validator  =  enclosing.getValue();  setReferencedAndResolvedType(type,  t,  invalidator,  enclosing);  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	Predicate  validator  =  enclosing.getValue();  setReferencedAndResolvedType(type,  t,  invalidator,  enclosing);	  return    false;    Predicate    validator    =    enclosing.getValue();    setReferencedAndResolvedType(type,    t,    validator,    enclosing);    	non-compiled	[CE]  cannot  find  symbol	109	None	replace
34	[BUG]  [BUGGY]  timeout  [FE]                    AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(type!=  null  &&  enclosing.equals(type))  {  return  true;  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	add	if(type!=  null  &&  enclosing.equals(type))  {  return  true;  }	  if(type!=    null    ||    enclosing.equals(type))    {    return    true;    }    timeout    	compilable	timeout	200	1	replace
35	[BUG]  [BUGGY]  if(type!=  null  &&  enclosing.equals(type))  {  return  true;  }  timeout  [FE]                    AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(type!=  null  &&  enclosing.equals(type))  {  return  true;  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(type!=  null  &&  enclosing.equals(type))  {  return  true;  }	  if(type!=    null    ||    enclosing.equals(type))    {    return    true;    }    timeout    	compilable	timeout	200	1	replace
36	[BUG]  [BUGGY]  timeout  [FE]                      AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(type  ==  null  &&  enclosing.equals(type))  {  return  true;  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	add	if(type  ==  null  &&  enclosing.equals(type))  {  return  true;  }	  if(type!=    null    ||    enclosing.equals(type))    {    return    true;    }    timeout    	compilable	timeout	200	1	replace
37	[BUG]  [BUGGY]  if(type  ==  null  &&  enclosing.equals(type))  {  return  true;  }  timeout  [FE]                      AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(type  ==  null  &&  enclosing.equals(type))  {  return  true;  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(type  ==  null  &&  enclosing.equals(type))  {  return  true;  }	  if(type!=    null    ||    enclosing.equals(type))    {    return    true;    }    timeout    	compilable	timeout	200	1	replace
38	[BUG]  [BUGGY]  timeout  [FE]                        AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(enclosing!=  null  ||  enclosing.equals(type))  {  return  true;  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	add	if(enclosing!=  null  ||  enclosing.equals(type))  {  return  true;  }	  if(type!=    null    ||    enclosing.equals(type))    {    return    true;    }    timeout    	compilable	timeout	200	1	replace
39	[BUG]  [BUGGY]  if(enclosing!=  null  ||  enclosing.equals(type))  {  return  true;  }  timeout  [FE]                        AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(enclosing!=  null  ||  enclosing.equals(type))  {  return  true;  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(enclosing!=  null  ||  enclosing.equals(type))  {  return  true;  }	  if(type!=    null    ||    enclosing.equals(type))    {    return    true;    }    timeout    	compilable	timeout	200	1	replace
40	[BUG]  [BUGGY]  timeout  [FE]                          AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(type  ==  null  ||  enclosing.equals(type))  {  return  false;  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	add	if(type  ==  null  ||  enclosing.equals(type))  {  return  false;  }	  if(type!=    null    ||    enclosing.equals(type))    {    return    true;    }    timeout    	compilable	timeout	200	1	replace
41	[BUG]  [BUGGY]  if(type  ==  null  ||  enclosing.equals(type))  {  return  false;  }  timeout  [FE]                          AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(type  ==  null  ||  enclosing.equals(type))  {  return  false;  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(type  ==  null  ||  enclosing.equals(type))  {  return  false;  }	  if(type!=    null    ||    enclosing.equals(type))    {    return    true;    }    timeout    	compilable	timeout	200	1	replace
42	[BUG]  [BUGGY]  timeout  [FE]                            AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(enclosing!=  null  ||  enclosing.equals(type))  {  return  false;  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	add	if(enclosing!=  null  ||  enclosing.equals(type))  {  return  false;  }	  if(type!=    null    ||    enclosing.equals(type))    {    return    true;    }    timeout    	compilable	timeout	200	1	replace
43	[BUG]  [BUGGY]  if(enclosing!=  null  ||  enclosing.equals(type))  {  return  false;  }  timeout  [FE]                            AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(enclosing!=  null  ||  enclosing.equals(type))  {  return  false;  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(enclosing!=  null  ||  enclosing.equals(type))  {  return  false;  }	  if(type!=    null    ||    enclosing.equals(type))    {    return    true;    }    timeout    	compilable	timeout	200	1	replace
44	[BUG]  [BUGGY]  if(validator!=  null  &&  validator.isVarArgs())  {  return  true;  }  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(validator!=  null  &&  validator.isVarArgs())  {  return  true;  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(validator!=  null  &&  validator.isVarArgs())  {  return  true;  }	  if(!validator    &&    validator.isVarArgs())    {    return    true;    }    	non-compiled	[CE]  cannot  find  symbol	89	None	replace
45	[BUG]  [BUGGY]  if(!validator  ||  validator.isVarArgs())  {  return  true;  }  [CE]  bad  operand  type  Predicate<JSType>  for  unary  operator  '!'  [FE]                        AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(!validator  ||  validator.isVarArgs())  {  return  true;  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(!validator  ||  validator.isVarArgs())  {  return  true;  }	  if(!validator    &&    validator.isVarArgs())    {    return    true;    }    	non-compiled	[CE]  bad  operand  type  Predicate<JSType>  for  unary  operator  '!'	89	None	replace
46	[BUG]  [BUGGY]  if(!validator  &&  validator.isVarArgs())  {  return  false;  }  [CE]  bad  operand  type  Predicate<JSType>  for  unary  operator  '!'  [FE]                          AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(!validator  &&  validator.isVarArgs())  {  return  false;  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(!validator  &&  validator.isVarArgs())  {  return  false;  }	  if(!validator    &&    validator.isVarArgs())    {    return    true;    }    	non-compiled	[CE]  bad  operand  type  Predicate<JSType>  for  unary  operator  '!'	89	None	replace
47	[BUG]  [BUGGY]  if(validator  ==  null  &&  validator.isVarArgs())  {  return  true;  }  [CE]  cannot  find  symbol  [FE]                            AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(validator  ==  null  &&  validator.isVarArgs())  {  return  true;  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(validator  ==  null  &&  validator.isVarArgs())  {  return  true;  }	  if(!validator    &&    validator.isVarArgs())    {    return    true;    }    	non-compiled	[CE]  cannot  find  symbol	89	None	replace
48	[BUG]  [BUGGY]  if(!validator.isVarArgs()  ||  validator.isVarArgs())  {  return  true;  }  [CE]  cannot  find  symbol  [FE]                              AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(!validator.isVarArgs()  ||  validator.isVarArgs())  {  return  true;  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(!validator.isVarArgs()  ||  validator.isVarArgs())  {  return  true;  }	  if(!validator    &&    validator.isVarArgs())    {    return    true;    }    	non-compiled	[CE]  cannot  find  symbol	89	None	replace
49	[BUG]  [BUGGY]  if(validator!=  null  &&  validator.isVarArgs())  {  return  false;  }  [CE]  cannot  find  symbol  [FE]                                AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(validator!=  null  &&  validator.isVarArgs())  {  return  false;  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(validator!=  null  &&  validator.isVarArgs())  {  return  false;  }	  if(!validator    &&    validator.isVarArgs())    {    return    true;    }    	non-compiled	[CE]  cannot  find  symbol	89	None	replace
50	[BUG]  [BUGGY]  if(type.isAnnotationType()  ||  type.isAnnotationType())  {  return  true;  }  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(type.isAnnotationType()  ||  type.isAnnotationType())  {  return  true;  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(type.isAnnotationType()  ||  type.isAnnotationType())  {  return  true;  }	  if(type.isUnknownType()    ||    type.isUnknownType())    {    return    true;    }    timeout    	non-compiled	[CE]  cannot  find  symbol	153	None	replace
51	[BUG]  [BUGGY]  if(type.isReferencedType()  ||  type.isUnknownType())  {  return  true;  }  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(type.isReferencedType()  ||  type.isUnknownType())  {  return  true;  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(type.isReferencedType()  ||  type.isUnknownType())  {  return  true;  }	  if(type.isUnknownType()    ||    type.isUnknownType())    {    return    true;    }    timeout    	non-compiled	[CE]  cannot  find  symbol	153	None	replace
52	[BUG]  [BUGGY]  if(type.isSyntheticType()  ||  type.isUnknownType())  {  return  true;  }  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(type.isSyntheticType()  ||  type.isUnknownType())  {  return  true;  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(type.isSyntheticType()  ||  type.isUnknownType())  {  return  true;  }	  if(type.isUnknownType()    ||    type.isUnknownType())    {    return    true;    }    timeout    	non-compiled	[CE]  cannot  find  symbol	153	None	replace
53	[BUG]  [BUGGY]  if(registry.isReferencedType())  {  return  true;  }  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(registry.isReferencedType())  {  return  true;  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(registry.isReferencedType())  {  return  true;  }	  if(type.isReferencedType())    {    return    true;    }    	non-compiled	[CE]  cannot  find  symbol	116	None	replace
54	[BUG]  [BUGGY]  if(isReferencedType()  ||  type.isReferencedType())  {  return  true;  }  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(isReferencedType()  ||  type.isReferencedType())  {  return  true;  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(isReferencedType()  ||  type.isReferencedType())  {  return  true;  }	  if(type.isReferencedType())    {    return    true;    }    	non-compiled	[CE]  cannot  find  symbol	116	None	replace
55	[BUG]  [BUGGY]  if(type.isReferencedType()  ||  type.isReferencedType())  {  return  true;  }  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(type.isReferencedType()  ||  type.isReferencedType())  {  return  true;  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(type.isReferencedType()  ||  type.isReferencedType())  {  return  true;  }	  if(type.isReferencedType())    {    return    true;    }    	non-compiled	[CE]  cannot  find  symbol	116	None	replace
56	[BUG]  [BUGGY]  if(!type.isReferencedType())  {  return  true;  }  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(!type.isReferencedType())  {  return  true;  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(!type.isReferencedType())  {  return  true;  }	  if(type.isReferencedType())    {    return    true;    }    	non-compiled	[CE]  cannot  find  symbol	116	None	replace
57	[BUG]  [BUGGY]  if(reference.isReferencedType())  {  return  true;  }  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(reference.isReferencedType())  {  return  true;  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(reference.isReferencedType())  {  return  true;  }	  if(type.isReferencedType())    {    return    true;    }    	non-compiled	[CE]  cannot  find  symbol	116	None	replace
58	[BUG]  [BUGGY]  if(type.isReferencedType()  ||  type.isAnnotations())  {  return  true;  }  [CE]  cannot  find  symbol  [FE]                          AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(type.isReferencedType()  ||  type.isAnnotations())  {  return  true;  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(type.isReferencedType()  ||  type.isAnnotations())  {  return  true;  }	  if(type.isReferencedType())    {    return    true;    }    	non-compiled	[CE]  cannot  find  symbol	116	None	replace
59	[BUG]  [BUGGY]  if(type.isReferencedType()  ||  type.isAnnotated())  {  return  true;  }  [CE]  cannot  find  symbol  [FE]                            AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(type.isReferencedType()  ||  type.isAnnotated())  {  return  true;  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(type.isReferencedType()  ||  type.isAnnotated())  {  return  true;  }	  if(type.isReferencedType())    {    return    true;    }    	non-compiled	[CE]  cannot  find  symbol	116	None	replace
60	[BUG]  [BUGGY]  timeout  [FE]            AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(type.isUnknownType())    {    return    true;    }    if(type.isUnknownType())  {  return  true;  }  if(type.isUnknownType())  {  return  true;  }  if(type.isUnknownType())  {  return  true;  }  if(type.isUnknownType())  {  return  true;  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	add	if(type.isUnknownType())        {        return        true;        }        if(type.isUnknownType())    {    return    true;    }    if(type.isUnknownType())  {  return  true;  }  if(type.isUnknownType())  {  return  true;  }  if(type.isUnknownType())  {  return  true;  }	  timeout    	compilable	timeout	103	1	add
61	[BUG]  [BUGGY]  if(type.isUnknownType())    {    return    true;    }    if(type.isUnknownType())  {  return  true;  }  if(type.isUnknownType())  {  return  true;  }  if(type.isUnknownType())  {  return  true;  }  if(type.isUnknownType())  {  return  true;  }  timeout  [FE]            AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(type.isUnknownType())    {    return    true;    }    if(type.isUnknownType())  {  return  true;  }  if(type.isUnknownType())  {  return  true;  }  if(type.isUnknownType())  {  return  true;  }  if(type.isUnknownType())  {  return  true;  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(type.isUnknownType())        {        return        true;        }        if(type.isUnknownType())    {    return    true;    }    if(type.isUnknownType())  {  return  true;  }  if(type.isUnknownType())  {  return  true;  }  if(type.isUnknownType())  {  return  true;  }	  timeout    	compilable	timeout	103	1	add
62	[BUG]  [BUGGY]  timeout  [FE]              AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(type.isUnknownType())    {    return    true;    }    if(type.isUnknownType())  {  return  true;  }  if(type.isUnknownType())  {  return  true;  }  if(type.isUnknownType())  {  return  true;  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	add	if(type.isUnknownType())        {        return        true;        }        if(type.isUnknownType())    {    return    true;    }    if(type.isUnknownType())  {  return  true;  }  if(type.isUnknownType())  {  return  true;  }	  timeout    	compilable	timeout	103	1	add
63	[BUG]  [BUGGY]  if(type.isUnknownType())    {    return    true;    }    if(type.isUnknownType())  {  return  true;  }  if(type.isUnknownType())  {  return  true;  }  if(type.isUnknownType())  {  return  true;  }  timeout  [FE]              AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(type.isUnknownType())    {    return    true;    }    if(type.isUnknownType())  {  return  true;  }  if(type.isUnknownType())  {  return  true;  }  if(type.isUnknownType())  {  return  true;  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(type.isUnknownType())        {        return        true;        }        if(type.isUnknownType())    {    return    true;    }    if(type.isUnknownType())  {  return  true;  }  if(type.isUnknownType())  {  return  true;  }	  timeout    	compilable	timeout	103	1	add
64	[BUG]  [BUGGY]  timeout  [FE]                AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(type.isUnknownType())    {    return    true;    }    if(type.isUnknownType())  {  return  true;  }  if(type.isUnknownType())  {  return  true;  }  if(type.isUnknownType())  {  return  true;  }  if(type.isUnknownType())  {  return  true;  }  if(type.isUnknownType())  {  return  true;  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	add	if(type.isUnknownType())        {        return        true;        }        if(type.isUnknownType())    {    return    true;    }    if(type.isUnknownType())  {  return  true;  }  if(type.isUnknownType())  {  return  true;  }  if(type.isUnknownType())  {  return  true;  }  if(type.isUnknownType())  {  return  true;  }	  timeout    	compilable	timeout	103	1	add
65	[BUG]  [BUGGY]  if(type.isUnknownType())    {    return    true;    }    if(type.isUnknownType())  {  return  true;  }  if(type.isUnknownType())  {  return  true;  }  if(type.isUnknownType())  {  return  true;  }  if(type.isUnknownType())  {  return  true;  }  if(type.isUnknownType())  {  return  true;  }  timeout  [FE]                AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(type.isUnknownType())    {    return    true;    }    if(type.isUnknownType())  {  return  true;  }  if(type.isUnknownType())  {  return  true;  }  if(type.isUnknownType())  {  return  true;  }  if(type.isUnknownType())  {  return  true;  }  if(type.isUnknownType())  {  return  true;  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(type.isUnknownType())        {        return        true;        }        if(type.isUnknownType())    {    return    true;    }    if(type.isUnknownType())  {  return  true;  }  if(type.isUnknownType())  {  return  true;  }  if(type.isUnknownType())  {  return  true;  }  if(type.isUnknownType())  {  return  true;  }	  timeout    	compilable	timeout	103	1	add
66	[BUG]  [BUGGY]  if(type.isUnknownType())    {    return    true;    }    if(type.isUnknownType())  {  return  true;  }  if(type.isUnknownType())  {  return  true;  }  if(type.isUnknownType())  {  return  true;  }  if(type.isUnknownType())  {  return  true  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(type.isUnknownType())    {    return    true;    }    if(type.isUnknownType())  {  return  true;  }  if(type.isUnknownType())  {  return  true;  }  if(type.isUnknownType())  {  return  true;  }  if(type.isUnknownType())  {  return  true  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(type.isUnknownType())        {        return        true;        }        if(type.isUnknownType())    {    return    true;    }    if(type.isUnknownType())  {  return  true;  }  if(type.isUnknownType())  {  return  true;  }  if(type.isUnknownType())  {  return  true	  timeout    	non-compiled	[CE]  ';'  expected	103	None	add
67	[BUG]  [BUGGY]  if(type.isUnknownType())    {    return    true;    }    if(type.isUnknownType())  {  return  true;  }  if(type.isUnknownType())  {  return  true;  }  if(type.isUnknownType())  {  return  true;  }  if(type.isUnknownType())  {  return  true;  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(type.isUnknownType())    {    return    true;    }    if(type.isUnknownType())  {  return  true;  }  if(type.isUnknownType())  {  return  true;  }  if(type.isUnknownType())  {  return  true;  }  if(type.isUnknownType())  {  return  true;  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(type.isUnknownType())        {        return        true;        }        if(type.isUnknownType())    {    return    true;    }    if(type.isUnknownType())  {  return  true;  }  if(type.isUnknownType())  {  return  true;  }  if(type.isUnknownType())  {  return  true;	  timeout    	non-compiled	[CE]  illegal  start  of  expression	103	None	add
68	[BUG]  [BUGGY]  if(type.isUnknownType())    {    return    true;    }    if(type.isUnknownType())  {  return  true;  }  if(type.isUnknownType())  {  return  true;  }  if(type.isUnknownType())  {  return  true;  }  if(type.isUnknownType())  {  return  true;  }  if(type.isUnknownType())  {  return  true  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(type.isUnknownType())    {    return    true;    }    if(type.isUnknownType())  {  return  true;  }  if(type.isUnknownType())  {  return  true;  }  if(type.isUnknownType())  {  return  true;  }  if(type.isUnknownType())  {  return  true;  }  if(type.isUnknownType())  {  return  true  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(type.isUnknownType())        {        return        true;        }        if(type.isUnknownType())    {    return    true;    }    if(type.isUnknownType())  {  return  true;  }  if(type.isUnknownType())  {  return  true;  }  if(type.isUnknownType())  {  return  true;  }  if(type.isUnknownType())  {  return  true	  timeout    	non-compiled	[CE]  ';'  expected	103	None	add
69	[BUG]  [BUGGY]  timeout  [FE]            AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(type  ==  null  ||  enclosing!=  null)  {  return  false;  }  if(type  ==  null  ||  enclosing!=  null)  {  return  false;  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	add	if(type    ==    null    ||    enclosing!=    null)    {    return    false;    }    if(type  ==  null  ||  enclosing!=  null)  {  return  false;  }	  timeout    	compilable	timeout	45	1	add
70	[BUG]  [BUGGY]  if(type  ==  null  ||  enclosing!=  null)  {  return  false;  }  if(type  ==  null  ||  enclosing!=  null)  {  return  false;  }  timeout  [FE]            AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(type  ==  null  ||  enclosing!=  null)  {  return  false;  }  if(type  ==  null  ||  enclosing!=  null)  {  return  false;  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(type    ==    null    ||    enclosing!=    null)    {    return    false;    }    if(type  ==  null  ||  enclosing!=  null)  {  return  false;  }	  timeout    	compilable	timeout	45	1	add
71	[BUG]  [BUGGY]  timeout  [FE]              AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(type  ==  null  ||  enclosing!=  null)  {  return  false;  }  if(type!=  null  ||  enclosing!=  null)  {  return  false;  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	add	if(type    ==    null    ||    enclosing!=    null)    {    return    false;    }    if(type!=  null  ||  enclosing!=  null)  {  return  false;  }	  timeout    	compilable	timeout	45	1	add
72	[BUG]  [BUGGY]  if(type  ==  null  ||  enclosing!=  null)  {  return  false;  }  if(type!=  null  ||  enclosing!=  null)  {  return  false;  }  timeout  [FE]              AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(type  ==  null  ||  enclosing!=  null)  {  return  false;  }  if(type!=  null  ||  enclosing!=  null)  {  return  false;  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(type    ==    null    ||    enclosing!=    null)    {    return    false;    }    if(type!=  null  ||  enclosing!=  null)  {  return  false;  }	  timeout    	compilable	timeout	45	1	add
73	[BUG]  [BUGGY]  if(type  ==  null  ||  enclosing!=  null)  {  return  false;  }  if(type  ==  null  ||  enclosing  >=  null)  {  return  false;  }  [CE]  bad  operand  types  for  binary  operator  '>='  [FE]                AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(type  ==  null  ||  enclosing!=  null)  {  return  false;  }  if(type  ==  null  ||  enclosing  >=  null)  {  return  false;  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(type    ==    null    ||    enclosing!=    null)    {    return    false;    }    if(type  ==  null  ||  enclosing  >=  null)  {  return  false;  }	  timeout    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>='	45	None	add
74	[BUG]  [BUGGY]  if(type  ==  null  ||  enclosing!=  null)  {  return  false;  }  if(type  >=  null  ||  enclosing!=  null)  {  return  false;  }  [CE]  bad  operand  types  for  binary  operator  '>='  [FE]                  AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(type  ==  null  ||  enclosing!=  null)  {  return  false;  }  if(type  >=  null  ||  enclosing!=  null)  {  return  false;  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(type    ==    null    ||    enclosing!=    null)    {    return    false;    }    if(type  >=  null  ||  enclosing!=  null)  {  return  false;  }	  timeout    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>='	45	None	add
75	[BUG]  [BUGGY]  if(type  ==  null  ||  enclosing!=  null)  {  return  false;  }  if(type  ==  null  ||  enclosing  >>  null)  {  return  false;  }  [CE]  bad  operand  types  for  binary  operator  '>>'  [FE]                    AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(type  ==  null  ||  enclosing!=  null)  {  return  false;  }  if(type  ==  null  ||  enclosing  >>  null)  {  return  false;  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(type    ==    null    ||    enclosing!=    null)    {    return    false;    }    if(type  ==  null  ||  enclosing  >>  null)  {  return  false;  }	  timeout    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>>'	45	None	add
76	[BUG]  [BUGGY]  if(type  ==  null  ||  enclosing!=  null)  {  return  false;  }  If(type  ==  null  ||  enclosing!=  null)  {  return  false;  }  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(type  ==  null  ||  enclosing!=  null)  {  return  false;  }  If(type  ==  null  ||  enclosing!=  null)  {  return  false;  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(type    ==    null    ||    enclosing!=    null)    {    return    false;    }    If(type  ==  null  ||  enclosing!=  null)  {  return  false;  }	  timeout    	non-compiled	[CE]  ';'  expected	45	None	add
77	[BUG]  [BUGGY]  Throw  new  IllegalArgumentException( " ");  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  Throw  new  IllegalArgumentException( " ");  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	Throw  new  IllegalArgumentException( " ");	  throw    new    IllegalArgumentException(       "       ");    Throw    new    IllegalArgumentException(   "       ");    	non-compiled	[CE]  not  a  statement	23	None	replace
78	[BUG]  [BUGGY]  Throw  new  IllegalArgumentException( " ".equals(type));  [CE]  not  a  statement  [FE]                            AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  Throw  new  IllegalArgumentException( " ".equals(type));  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	Throw  new  IllegalArgumentException( " ".equals(type));	  throw    new    IllegalArgumentException(       "       ");    Throw    new    IllegalArgumentException(   "       ");    	non-compiled	[CE]  not  a  statement	23	None	replace
79	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  t,  new  IllegalArgumentException( " "));  [CE]  cannot  find  symbol  compiler  [FE]                              AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  NodeTraversal.traverse(compiler,  t,  new  IllegalArgumentException( " "));  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	NodeTraversal.traverse(compiler,  t,  new  IllegalArgumentException( " "));	  throw    new    IllegalArgumentException(       "       ");    Throw    new    IllegalArgumentException(   "       ");    	non-compiled	[CE]  cannot  find  symbol  compiler	23	None	replace
80	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  type,  enclosing);  [CE]  cannot  find  symbol  compiler  [FE]                                AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  NodeTraversal.traverse(compiler,  type,  enclosing);  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	NodeTraversal.traverse(compiler,  type,  enclosing);	  throw    new    IllegalArgumentException(       "       ");    Throw    new    IllegalArgumentException(   "       ");    	non-compiled	[CE]  cannot  find  symbol  compiler	23	None	replace
81	[BUG]  [BUGGY]  Throw  new  IllegalStateException( " ");  [CE]  not  a  statement  [FE]                                  AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  Throw  new  IllegalStateException( " ");  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	Throw  new  IllegalStateException( " ");	  throw    new    IllegalArgumentException(       "       ");    Throw    new    IllegalArgumentException(   "       ");    	non-compiled	[CE]  not  a  statement	23	None	replace
82	[BUG]  [BUGGY]  timeout  [FE]                    AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(type!=    null)    {    return    true;    }    if(type!=  null)  {  return  true;  }  if(type!=  null)  {  return  true;  }  if(type!=  null)  {  return  true;  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	add	if(type!=        null)        {        return        true;        }        if(type!=    null)    {    return    true;    }    if(type!=  null)  {  return  true;  }  if(type!=  null)  {  return  true;  }	  timeout    	compilable	timeout	14	1	add
83	[BUG]  [BUGGY]  if(type!=    null)    {    return    true;    }    if(type!=  null)  {  return  true;  }  if(type!=  null)  {  return  true;  }  if(type!=  null)  {  return  true;  }  timeout  [FE]                    AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(type!=    null)    {    return    true;    }    if(type!=  null)  {  return  true;  }  if(type!=  null)  {  return  true;  }  if(type!=  null)  {  return  true;  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(type!=        null)        {        return        true;        }        if(type!=    null)    {    return    true;    }    if(type!=  null)  {  return  true;  }  if(type!=  null)  {  return  true;  }	  timeout    	compilable	timeout	14	1	add
84	[BUG]  [BUGGY]  timeout  [FE]                      AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(type!=    null)    {    return    true;    }    if(type!=  null)  {  return  true;  }  if(type!=  null)  {  return  true;  }  if(type!=  null)  {  return  true;  }  if(type!=  null)  {  return  true;  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	add	if(type!=        null)        {        return        true;        }        if(type!=    null)    {    return    true;    }    if(type!=  null)  {  return  true;  }  if(type!=  null)  {  return  true;  }  if(type!=  null)  {  return  true;  }	  timeout    	compilable	timeout	14	1	add
85	[BUG]  [BUGGY]  if(type!=    null)    {    return    true;    }    if(type!=  null)  {  return  true;  }  if(type!=  null)  {  return  true;  }  if(type!=  null)  {  return  true;  }  if(type!=  null)  {  return  true;  }  timeout  [FE]                      AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(type!=    null)    {    return    true;    }    if(type!=  null)  {  return  true;  }  if(type!=  null)  {  return  true;  }  if(type!=  null)  {  return  true;  }  if(type!=  null)  {  return  true;  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(type!=        null)        {        return        true;        }        if(type!=    null)    {    return    true;    }    if(type!=  null)  {  return  true;  }  if(type!=  null)  {  return  true;  }  if(type!=  null)  {  return  true;  }	  timeout    	compilable	timeout	14	1	add
86	[BUG]  [BUGGY]  timeout  [FE]                        AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(type!=    null)    {    return    true;    }    if(type!=  null)  {  return  true;  }  if(type!=  null)  {  return  true;  }  if(type!=  null)  {  return  true;  }  if(type  ==  null)  {  return  true;  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	add	if(type!=        null)        {        return        true;        }        if(type!=    null)    {    return    true;    }    if(type!=  null)  {  return  true;  }  if(type!=  null)  {  return  true;  }  if(type  ==  null)  {  return  true;  }	  timeout    	compilable	timeout	14	1	add
87	[BUG]  [BUGGY]  if(type!=    null)    {    return    true;    }    if(type!=  null)  {  return  true;  }  if(type!=  null)  {  return  true;  }  if(type!=  null)  {  return  true;  }  if(type  ==  null)  {  return  true;  }  timeout  [FE]                        AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(type!=    null)    {    return    true;    }    if(type!=  null)  {  return  true;  }  if(type!=  null)  {  return  true;  }  if(type!=  null)  {  return  true;  }  if(type  ==  null)  {  return  true;  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(type!=        null)        {        return        true;        }        if(type!=    null)    {    return    true;    }    if(type!=  null)  {  return  true;  }  if(type!=  null)  {  return  true;  }  if(type  ==  null)  {  return  true;  }	  timeout    	compilable	timeout	14	1	add
88	[BUG]  [BUGGY]  timeout  [FE]                          AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(type!=    null)    {    return    true;    }    if(type!=  null)  {  return  true;  }  if(type  ==  null)  {  return  true;  }  if(type!=  null)  {  return  true;  }  if(type!=  null)  {  return  true;  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	add	if(type!=        null)        {        return        true;        }        if(type!=    null)    {    return    true;    }    if(type  ==  null)  {  return  true;  }  if(type!=  null)  {  return  true;  }  if(type!=  null)  {  return  true;  }	  timeout    	compilable	timeout	14	1	add
89	[BUG]  [BUGGY]  if(type!=    null)    {    return    true;    }    if(type!=  null)  {  return  true;  }  if(type  ==  null)  {  return  true;  }  if(type!=  null)  {  return  true;  }  if(type!=  null)  {  return  true;  }  timeout  [FE]                          AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(type!=    null)    {    return    true;    }    if(type!=  null)  {  return  true;  }  if(type  ==  null)  {  return  true;  }  if(type!=  null)  {  return  true;  }  if(type!=  null)  {  return  true;  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(type!=        null)        {        return        true;        }        if(type!=    null)    {    return    true;    }    if(type  ==  null)  {  return  true;  }  if(type!=  null)  {  return  true;  }  if(type!=  null)  {  return  true;  }	  timeout    	compilable	timeout	14	1	add
90	[BUG]  [BUGGY]  timeout  [FE]                            AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(type!=    null)    {    return    true;    }    if(type!=  null)  {  return  true;  }  if(type!=  null)  {  return  true;  }  if(type  ==  null)  {  return  true;  }  if(type!=  null)  {  return  true;  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	add	if(type!=        null)        {        return        true;        }        if(type!=    null)    {    return    true;    }    if(type!=  null)  {  return  true;  }  if(type  ==  null)  {  return  true;  }  if(type!=  null)  {  return  true;  }	  timeout    	compilable	timeout	14	1	add
91	[BUG]  [BUGGY]  if(type!=    null)    {    return    true;    }    if(type!=  null)  {  return  true;  }  if(type!=  null)  {  return  true;  }  if(type  ==  null)  {  return  true;  }  if(type!=  null)  {  return  true;  }  timeout  [FE]                            AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(type!=    null)    {    return    true;    }    if(type!=  null)  {  return  true;  }  if(type!=  null)  {  return  true;  }  if(type  ==  null)  {  return  true;  }  if(type!=  null)  {  return  true;  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(type!=        null)        {        return        true;        }        if(type!=    null)    {    return    true;    }    if(type!=  null)  {  return  true;  }  if(type  ==  null)  {  return  true;  }  if(type!=  null)  {  return  true;  }	  timeout    	compilable	timeout	14	1	add
92	[BUG]  [BUGGY]  timeout  [FE]                              AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(type!=    null)    {    return    true;    }    if(type!=  null)  {  return  true;  }  if(type  ==  null)  {  return  true;  }  if(type!=  null)  {  return  true;  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	add	if(type!=        null)        {        return        true;        }        if(type!=    null)    {    return    true;    }    if(type  ==  null)  {  return  true;  }  if(type!=  null)  {  return  true;  }	  timeout    	compilable	timeout	14	1	add
93	[BUG]  [BUGGY]  if(type!=    null)    {    return    true;    }    if(type!=  null)  {  return  true;  }  if(type  ==  null)  {  return  true;  }  if(type!=  null)  {  return  true;  }  timeout  [FE]                              AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(type!=    null)    {    return    true;    }    if(type!=  null)  {  return  true;  }  if(type  ==  null)  {  return  true;  }  if(type!=  null)  {  return  true;  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(type!=        null)        {        return        true;        }        if(type!=    null)    {    return    true;    }    if(type  ==  null)  {  return  true;  }  if(type!=  null)  {  return  true;  }	  timeout    	compilable	timeout	14	1	add
94	[BUG]  [BUGGY]  timeout  [FE]                                AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(type!=    null)    {    return    true;    }    if(type!=  null)  {  return  true;  }  if(type!=  null)  {  return  true;  }  if(type!=  null)  {  return  true;  }  if(type!=  null)  {  return  false;  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	add	if(type!=        null)        {        return        true;        }        if(type!=    null)    {    return    true;    }    if(type!=  null)  {  return  true;  }  if(type!=  null)  {  return  true;  }  if(type!=  null)  {  return  false;  }	  timeout    	compilable	timeout	14	1	add
95	[BUG]  [BUGGY]  if(type!=    null)    {    return    true;    }    if(type!=  null)  {  return  true;  }  if(type!=  null)  {  return  true;  }  if(type!=  null)  {  return  true;  }  if(type!=  null)  {  return  false;  }  timeout  [FE]                                AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(type!=    null)    {    return    true;    }    if(type!=  null)  {  return  true;  }  if(type!=  null)  {  return  true;  }  if(type!=  null)  {  return  true;  }  if(type!=  null)  {  return  false;  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(type!=        null)        {        return        true;        }        if(type!=    null)    {    return    true;    }    if(type!=  null)  {  return  true;  }  if(type!=  null)  {  return  true;  }  if(type!=  null)  {  return  false;  }	  timeout    	compilable	timeout	14	1	add
96	[BUG]  [BUGGY]  timeout  [FE]                                  AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(type!=    null)    {    return    true;    }    if(type!=  null)  {  return  true;  }  if(type!=  null)  {  return  true;  }  if(type  ==  null)  {  return  true;  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	add	if(type!=        null)        {        return        true;        }        if(type!=    null)    {    return    true;    }    if(type!=  null)  {  return  true;  }  if(type  ==  null)  {  return  true;  }	  timeout    	compilable	timeout	14	1	add
97	[BUG]  [BUGGY]  if(type!=    null)    {    return    true;    }    if(type!=  null)  {  return  true;  }  if(type!=  null)  {  return  true;  }  if(type  ==  null)  {  return  true;  }  timeout  [FE]                                  AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(type!=    null)    {    return    true;    }    if(type!=  null)  {  return  true;  }  if(type!=  null)  {  return  true;  }  if(type  ==  null)  {  return  true;  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(type!=        null)        {        return        true;        }        if(type!=    null)    {    return    true;    }    if(type!=  null)  {  return  true;  }  if(type  ==  null)  {  return  true;  }	  timeout    	compilable	timeout	14	1	add
98	[BUG]  [BUGGY]  if(!type.isReferenced())  {  return  false;  }  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(!type.isReferenced())  {  return  false;  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(!type.isReferenced())  {  return  false;  }	  if(!type.isReferenced())    {    return    true;    }    	non-compiled	[CE]  cannot  find  symbol	117	None	replace
99	[BUG]  [BUGGY]  if(!type.isReferenced()  ||  enclosing)  {  return  true;  }  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(!type.isReferenced()  ||  enclosing)  {  return  true;  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(!type.isReferenced()  ||  enclosing)  {  return  true;  }	  if(!type.isReferenced())    {    return    true;    }    	non-compiled	[CE]  cannot  find  symbol	117	None	replace
100	[BUG]  [BUGGY]  if(!type.isReferenced()  &&  enclosing.equals(type))  {  return  true;  }  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(!type.isReferenced()  &&  enclosing.equals(type))  {  return  true;  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(!type.isReferenced()  &&  enclosing.equals(type))  {  return  true;  }	  if(!type.isReferenced())    {    return    true;    }    	non-compiled	[CE]  cannot  find  symbol	117	None	replace
101	[BUG]  [BUGGY]  if(!type.isReferenced()  &&!forAnnotations)  {  return  true;  }  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(!type.isReferenced()  &&!forAnnotations)  {  return  true;  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(!type.isReferenced()  &&!forAnnotations)  {  return  true;  }	  if(!type.isReferenced())    {    return    true;    }    	non-compiled	[CE]  cannot  find  symbol	117	None	replace
102	[BUG]  [BUGGY]  JSError.make(t,  enclosing,  getReferencedAndResolvedType()));  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  JSError.make(t,  enclosing,  getReferencedAndResolvedType()));  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	JSError.make(t,  enclosing,  getReferencedAndResolvedType()));	  throw    new    IllegalArgumentException(       "       ");    JSError.make(t,    enclosing,    getPropertyName()));    	non-compiled	[CE]  ';'  expected	207	None	replace
103	[BUG]  [BUGGY]  JSError.make(t,  enclosing,  getPropertyName()));  [CE]  ';'  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  JSError.make(t,  enclosing,  getPropertyName()));  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	JSError.make(t,  enclosing,  getPropertyName()));	  throw    new    IllegalArgumentException(       "       ");    JSError.make(t,    enclosing,    getPropertyName()));    	non-compiled	[CE]  ';'  expected	207	None	replace
104	[BUG]  [BUGGY]  JSError.make(t,  enclosing,  getPropertyName()),  type);  [CE]  ';'  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  JSError.make(t,  enclosing,  getPropertyName()),  type);  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	JSError.make(t,  enclosing,  getPropertyName()),  type);	  throw    new    IllegalArgumentException(       "       ");    JSError.make(t,    enclosing,    getPropertyName()));    	non-compiled	[CE]  ';'  expected	207	None	replace
105	[BUG]  [BUGGY]  nullValue  =  JSError.make(t,  enclosing,  getPropertyName()));  [CE]  ';'  expected  [FE]                              AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  nullValue  =  JSError.make(t,  enclosing,  getPropertyName()));  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	nullValue  =  JSError.make(t,  enclosing,  getPropertyName()));	  throw    new    IllegalArgumentException(       "       ");    JSError.make(t,    enclosing,    getPropertyName()));    	non-compiled	[CE]  ';'  expected	207	None	replace
106	[BUG]  [BUGGY]  JSError.make(t,  type,  getPropertyName()));  [CE]  ';'  expected  [FE]                                AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  JSError.make(t,  type,  getPropertyName()));  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	JSError.make(t,  type,  getPropertyName()));	  throw    new    IllegalArgumentException(       "       ");    JSError.make(t,    enclosing,    getPropertyName()));    	non-compiled	[CE]  ';'  expected	207	None	replace
107	[BUG]  [BUGGY]  JSError.make(t,  enclosing,  getReferencedAndResolvedTypeName()));  [CE]  ';'  expected  [FE]                                  AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  JSError.make(t,  enclosing,  getReferencedAndResolvedTypeName()));  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	JSError.make(t,  enclosing,  getReferencedAndResolvedTypeName()));	  throw    new    IllegalArgumentException(       "       ");    JSError.make(t,    enclosing,    getPropertyName()));    	non-compiled	[CE]  ';'  expected	207	None	replace
108	[BUG]  [BUGGY]  JSError.make(t,  propertyNode,  getPropertyName()));  [CE]  ';'  expected  [FE]                                    AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  JSError.make(t,  propertyNode,  getPropertyName()));  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	JSError.make(t,  propertyNode,  getPropertyName()));	  throw    new    IllegalArgumentException(       "       ");    JSError.make(t,    enclosing,    getPropertyName()));    	non-compiled	[CE]  ';'  expected	207	None	replace
109	[BUG]  [BUGGY]  if(type!=  null)  {  if(type.isUnknownType())  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(type!=  null)  {  if(type.isUnknownType())  {  return  true;  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(type!=  null)  {  if(type.isUnknownType())  {  return  true;  }	  if(type.isUnknownType())    {    return    true;    }    if(type.isUnknownType())    {    return    true;    }    timeout    	non-compiled	[CE]  illegal  start  of  expression	104	None	replace
110	[BUG]  [BUGGY]  if(type.isReferenced())  {  if(type.isUnknownType())  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(type.isReferenced())  {  if(type.isUnknownType())  {  return  true;  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(type.isReferenced())  {  if(type.isUnknownType())  {  return  true;  }	  if(type.isUnknownType())    {    return    true;    }    if(type.isUnknownType())    {    return    true;    }    timeout    	non-compiled	[CE]  illegal  start  of  expression	104	None	replace
111	[BUG]  [BUGGY]  if(type.isVarArgs())  {  if(type.isUnknownType())  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(type.isVarArgs())  {  if(type.isUnknownType())  {  return  true;  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(type.isVarArgs())  {  if(type.isUnknownType())  {  return  true;  }	  if(type.isUnknownType())    {    return    true;    }    if(type.isUnknownType())    {    return    true;    }    timeout    	non-compiled	[CE]  illegal  start  of  expression	104	None	replace
112	[BUG]  [BUGGY]  if(type.isVarArgs())  {  if(type.isVarArgs())  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(type.isVarArgs())  {  if(type.isVarArgs())  {  return  true;  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(type.isVarArgs())  {  if(type.isVarArgs())  {  return  true;  }	  if(type.isUnknownType())    {    return    true;    }    if(type.isUnknownType())    {    return    true;    }    timeout    	non-compiled	[CE]  illegal  start  of  expression	104	None	replace
113	[BUG]  [BUGGY]  if(type!=  null)  {  if(type.isUnknownType())  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(type!=  null)  {  if(type.isUnknownType())  {  return  false;  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(type!=  null)  {  if(type.isUnknownType())  {  return  false;  }	  if(type.isUnknownType())    {    return    true;    }    if(type.isUnknownType())    {    return    true;    }    timeout    	non-compiled	[CE]  illegal  start  of  expression	104	None	replace
114	[BUG]  [BUGGY]  if(type.isReferenced())  {  if(type.isUnknownType())  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(type.isReferenced())  {  if(type.isUnknownType())  {  return  false;  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(type.isReferenced())  {  if(type.isUnknownType())  {  return  false;  }	  if(type.isUnknownType())    {    return    true;    }    if(type.isUnknownType())    {    return    true;    }    timeout    	non-compiled	[CE]  illegal  start  of  expression	104	None	replace
115	[BUG]  [BUGGY]  if(type.isAnnotations())  {  if(type.isAnnotations())  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(type.isAnnotations())  {  if(type.isAnnotations())  {  return  true;  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(type.isAnnotations())  {  if(type.isAnnotations())  {  return  true;  }	  if(type.isUnknownType())    {    return    true;    }    if(type.isUnknownType())    {    return    true;    }    timeout    	non-compiled	[CE]  illegal  start  of  expression	104	None	replace
116	[BUG]  [BUGGY]  timeout  [FE]                  AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(type!=  null  ||  enclosing.equals(type))  {  return  false;  }  if(type!=  null  ||  enclosing.equals(type))  {  return  false;  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	add	if(type!=    null    ||    enclosing.equals(type))    {    return    false;    }    if(type!=  null  ||  enclosing.equals(type))  {  return  false;  }	  timeout    	compilable	timeout	5	1	add
117	[BUG]  [BUGGY]  if(type!=  null  ||  enclosing.equals(type))  {  return  false;  }  if(type!=  null  ||  enclosing.equals(type))  {  return  false;  }  timeout  [FE]                  AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(type!=  null  ||  enclosing.equals(type))  {  return  false;  }  if(type!=  null  ||  enclosing.equals(type))  {  return  false;  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(type!=    null    ||    enclosing.equals(type))    {    return    false;    }    if(type!=  null  ||  enclosing.equals(type))  {  return  false;  }	  timeout    	compilable	timeout	5	1	add
118	[BUG]  [BUGGY]  timeout  [FE]                    AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(type!=  null  ||  enclosing.equals(type))  {  return  false;  }  if(type  ==  null  ||  enclosing.equals(type))  {  return  false;  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	add	if(type!=    null    ||    enclosing.equals(type))    {    return    false;    }    if(type  ==  null  ||  enclosing.equals(type))  {  return  false;  }	  timeout    	compilable	timeout	5	1	add
119	[BUG]  [BUGGY]  if(type!=  null  ||  enclosing.equals(type))  {  return  false;  }  if(type  ==  null  ||  enclosing.equals(type))  {  return  false;  }  timeout  [FE]                    AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(type!=  null  ||  enclosing.equals(type))  {  return  false;  }  if(type  ==  null  ||  enclosing.equals(type))  {  return  false;  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(type!=    null    ||    enclosing.equals(type))    {    return    false;    }    if(type  ==  null  ||  enclosing.equals(type))  {  return  false;  }	  timeout    	compilable	timeout	5	1	add
120	[BUG]  [BUGGY]  if(type!=  null  ||  enclosing.equals(type))  {  return  false;  }  if(type  >=  null  ||  enclosing.equals(type))  {  return  false;  }  [CE]  bad  operand  types  for  binary  operator  '>='  [FE]                      AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(type!=  null  ||  enclosing.equals(type))  {  return  false;  }  if(type  >=  null  ||  enclosing.equals(type))  {  return  false;  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(type!=    null    ||    enclosing.equals(type))    {    return    false;    }    if(type  >=  null  ||  enclosing.equals(type))  {  return  false;  }	  timeout    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>='	5	None	add
121	[BUG]  [BUGGY]  if(type!=  null  ||  enclosing.equals(type))  {  return  false;  }  if(type  >>  null  ||  enclosing.equals(type))  {  return  false;  }  [CE]  bad  operand  types  for  binary  operator  '>>'  [FE]                        AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(type!=  null  ||  enclosing.equals(type))  {  return  false;  }  if(type  >>  null  ||  enclosing.equals(type))  {  return  false;  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(type!=    null    ||    enclosing.equals(type))    {    return    false;    }    if(type  >>  null  ||  enclosing.equals(type))  {  return  false;  }	  timeout    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>>'	5	None	add
122	[BUG]  [BUGGY]  if(type!=  null  ||  enclosing.equals(type))  {  return  false;  }  If(type!=  null  ||  enclosing.equals(type))  {  return  false;  }  [CE]  ';'  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(type!=  null  ||  enclosing.equals(type))  {  return  false;  }  If(type!=  null  ||  enclosing.equals(type))  {  return  false;  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(type!=    null    ||    enclosing.equals(type))    {    return    false;    }    If(type!=  null  ||  enclosing.equals(type))  {  return  false;  }	  timeout    	non-compiled	[CE]  ';'  expected	5	None	add
123	[BUG]  [BUGGY]  if(type!=  null  ||  enclosing.equals(type))  {  return  false;  }  if(type  [Delete]  null  ||  enclosing.equals(type))  {  return  false;  }  [CE]  ')'  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(type!=  null  ||  enclosing.equals(type))  {  return  false;  }  if(type  [Delete]  null  ||  enclosing.equals(type))  {  return  false;  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(type!=    null    ||    enclosing.equals(type))    {    return    false;    }    if(type  [Delete]  null  ||  enclosing.equals(type))  {  return  false;  }	  timeout    	non-compiled	[CE]  ')'  expected	5	None	add
124	[BUG]  [BUGGY]  if(enclosing  ==  null)  {  if(type  ==  null)  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(enclosing  ==  null)  {  if(type  ==  null)  {  return  true;  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(enclosing  ==  null)  {  if(type  ==  null)  {  return  true;  }	  if(type    ==    null)    {    return    true;    }    if(type    >>    null)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
125	[BUG]  [BUGGY]  if(enclosing  ==  null)  {  if(type  ==  null)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(enclosing  ==  null)  {  if(type  ==  null)  {  return  false;  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(enclosing  ==  null)  {  if(type  ==  null)  {  return  false;  }	  if(type    ==    null)    {    return    true;    }    if(type    >>    null)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
126	[BUG]  [BUGGY]  Predicate  validator  =  enclosing.getValue();  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  Predicate  validator  =  enclosing.getValue();  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	Predicate  validator  =  enclosing.getValue();	  if(type    ==    null)    {    return    true;    }    if(type    >>    null)    {    return    true;    }    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
127	[BUG]  [BUGGY]  Error.make(t,  enclosing,  sourceName));  [CE]  ';'  expected  [FE]                              AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  Error.make(t,  enclosing,  sourceName));  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	Error.make(t,  enclosing,  sourceName));	  throw    new    IllegalArgumentException(       "       ");    JSError.make(t,    enclosing,    sourceName));    	non-compiled	[CE]  ';'  expected	25	None	replace
128	[BUG]  [BUGGY]  JSError.make(t,  enclosing,  type));  [CE]  ';'  expected  [FE]                                AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  JSError.make(t,  enclosing,  type));  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	JSError.make(t,  enclosing,  type));	  throw    new    IllegalArgumentException(       "       ");    JSError.make(t,    enclosing,    sourceName));    	non-compiled	[CE]  ';'  expected	25	None	replace
129	[BUG]  [BUGGY]  JSError.make(t,  enclosing,  sourceName,  type));  [CE]  ';'  expected  [FE]                                  AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  JSError.make(t,  enclosing,  sourceName,  type));  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	JSError.make(t,  enclosing,  sourceName,  type));	  throw    new    IllegalArgumentException(       "       ");    JSError.make(t,    enclosing,    sourceName));    	non-compiled	[CE]  ';'  expected	25	None	replace
130	[BUG]  [BUGGY]  JSError.make(t,  enclosing,  propertyName));  [CE]  ';'  expected  [FE]                                    AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  JSError.make(t,  enclosing,  propertyName));  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	JSError.make(t,  enclosing,  propertyName));	  throw    new    IllegalArgumentException(       "       ");    JSError.make(t,    enclosing,    sourceName));    	non-compiled	[CE]  ';'  expected	25	None	replace
131	[BUG]  [BUGGY]  JSError.make(t,  enclosing,  this.propertyName));  [CE]  ';'  expected  [FE]                                      AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  JSError.make(t,  enclosing,  this.propertyName));  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	JSError.make(t,  enclosing,  this.propertyName));	  throw    new    IllegalArgumentException(       "       ");    JSError.make(t,    enclosing,    sourceName));    	non-compiled	[CE]  ';'  expected	25	None	replace
132	[BUG]  [BUGGY]  JSError.make(t,  sourceName,  enclosing));  [CE]  ';'  expected  [FE]                                        AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  JSError.make(t,  sourceName,  enclosing));  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	JSError.make(t,  sourceName,  enclosing));	  throw    new    IllegalArgumentException(       "       ");    JSError.make(t,    enclosing,    sourceName));    	non-compiled	[CE]  ';'  expected	25	None	replace
133	[BUG]  [BUGGY]  JSError.make(t,  enclosing,  sourceName,  this));  [CE]  ';'  expected  [FE]                                          AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  JSError.make(t,  enclosing,  sourceName,  this));  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	JSError.make(t,  enclosing,  sourceName,  this));	  throw    new    IllegalArgumentException(       "       ");    JSError.make(t,    enclosing,    sourceName));    	non-compiled	[CE]  ';'  expected	25	None	replace
134	[BUG]  [BUGGY]  Predicate  validator  =  type.getValue();  setReferencedAndResolvedType(validator,  type,  enclosing);  [CE]  cannot  find  symbol  [FE]                                    AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  Predicate  validator  =  type.getValue();  setReferencedAndResolvedType(validator,  type,  enclosing);  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	Predicate  validator  =  type.getValue();  setReferencedAndResolvedType(validator,  type,  enclosing);	          Predicate    validator    =    enclosing.getValue();    setReferencedAndResolvedType(validator,    type,    enclosing);    	non-compiled	[CE]  cannot  find  symbol	69	None	replace
135	[BUG]  [BUGGY]  Predicate  validator  =  registry.getValue(reference);  setReferencedAndResolvedType(validator,  type,  enclosing);  [CE]  cannot  find  symbol  [FE]                                      AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  Predicate  validator  =  registry.getValue(reference);  setReferencedAndResolvedType(validator,  type,  enclosing);  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	Predicate  validator  =  registry.getValue(reference);  setReferencedAndResolvedType(validator,  type,  enclosing);	          Predicate    validator    =    enclosing.getValue();    setReferencedAndResolvedType(validator,    type,    enclosing);    	non-compiled	[CE]  cannot  find  symbol	69	None	replace
136	[BUG]  [BUGGY]  Predicate  validator  =  enclosing.getValue();  setReferencedAndResolvedType(validator,  type,  t);  [CE]  cannot  find  symbol  [FE]                                        AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  Predicate  validator  =  enclosing.getValue();  setReferencedAndResolvedType(validator,  type,  t);  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	Predicate  validator  =  enclosing.getValue();  setReferencedAndResolvedType(validator,  type,  t);	          Predicate    validator    =    enclosing.getValue();    setReferencedAndResolvedType(validator,    type,    enclosing);    	non-compiled	[CE]  cannot  find  symbol	69	None	replace
137	[BUG]  [BUGGY]  Predicate  validator  =  t.getValue();  setReferencedAndResolvedType(validator,  type,  enclosing);  [CE]  cannot  find  symbol  [FE]                                          AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  Predicate  validator  =  t.getValue();  setReferencedAndResolvedType(validator,  type,  enclosing);  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	Predicate  validator  =  t.getValue();  setReferencedAndResolvedType(validator,  type,  enclosing);	          Predicate    validator    =    enclosing.getValue();    setReferencedAndResolvedType(validator,    type,    enclosing);    	non-compiled	[CE]  cannot  find  symbol	69	None	replace
138	[BUG]  [BUGGY]  Predicate  validator  =  enclosing.getValue();  setReferencedAndResolvedType(validator,  type,  forAnnotations);  [CE]  cannot  find  symbol  [FE]                                            AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  Predicate  validator  =  enclosing.getValue();  setReferencedAndResolvedType(validator,  type,  forAnnotations);  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	Predicate  validator  =  enclosing.getValue();  setReferencedAndResolvedType(validator,  type,  forAnnotations);	          Predicate    validator    =    enclosing.getValue();    setReferencedAndResolvedType(validator,    type,    enclosing);    	non-compiled	[CE]  cannot  find  symbol	69	None	replace
139	[BUG]  [BUGGY]  Predicate  validator  =  enclosing.getValue();  setReferencedAndResolvedType(type,  enclosing);  [CE]  cannot  find  symbol  [FE]                                              AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  Predicate  validator  =  enclosing.getValue();  setReferencedAndResolvedType(type,  enclosing);  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	Predicate  validator  =  enclosing.getValue();  setReferencedAndResolvedType(type,  enclosing);	          Predicate    validator    =    enclosing.getValue();    setReferencedAndResolvedType(validator,    type,    enclosing);    	non-compiled	[CE]  cannot  find  symbol	69	None	replace
140	[BUG]  [BUGGY]  if(enclosing!=  null)  {  if(type!=  null)  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(enclosing!=  null)  {  if(type!=  null)  {  return  true;  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(enclosing!=  null)  {  if(type!=  null)  {  return  true;  }	  if(type!=    null)    {    return    true;    }    if(type    >>    null)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
141	[BUG]  [BUGGY]  if(enclosing  ==  null)  {  if(type!=  null)  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(enclosing  ==  null)  {  if(type!=  null)  {  return  true;  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(enclosing  ==  null)  {  if(type!=  null)  {  return  true;  }	  if(type!=    null)    {    return    true;    }    if(type    >>    null)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
142	[BUG]  [BUGGY]  if(enclosing!=  null)  {  if(type!=  null)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(enclosing!=  null)  {  if(type!=  null)  {  return  false;  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(enclosing!=  null)  {  if(type!=  null)  {  return  false;  }	  if(type!=    null)    {    return    true;    }    if(type    >>    null)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
143	[BUG]  [BUGGY]  if(enclosing  ==  null)  {  if(type!=  null)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                                AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(enclosing  ==  null)  {  if(type!=  null)  {  return  false;  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(enclosing  ==  null)  {  if(type!=  null)  {  return  false;  }	  if(type!=    null)    {    return    true;    }    if(type    >>    null)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
144	[BUG]  [BUGGY]  if(enclosing!=  null)  {  if(type  ==  null)  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                                  AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(enclosing!=  null)  {  if(type  ==  null)  {  return  true;  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(enclosing!=  null)  {  if(type  ==  null)  {  return  true;  }	  if(type!=    null)    {    return    true;    }    if(type    >>    null)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
145	[BUG]  [BUGGY]  if(type!=  null)  {  throw  new  IllegalArgumentException( " "  +  type.getMessage());  }  [CE]  cannot  find  symbol  [FE]                                  AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(type!=  null)  {  throw  new  IllegalArgumentException( " "  +  type.getMessage());  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(type!=  null)  {  throw  new  IllegalArgumentException( " "  +  type.getMessage());  }	  if(type!=    null)    {    throw    new    IllegalArgumentException(   "   ".getMessage());    }    	non-compiled	[CE]  cannot  find  symbol	129	None	replace
146	[BUG]  [BUGGY]  if(type!=  null)  {  throw  new  IllegalArgumentException( " ").getMessage();  }  [CE]  incompatible  types  [FE]                                    AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(type!=  null)  {  throw  new  IllegalArgumentException( " ").getMessage();  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(type!=  null)  {  throw  new  IllegalArgumentException( " ").getMessage();  }	  if(type!=    null)    {    throw    new    IllegalArgumentException(   "   ".getMessage());    }    	non-compiled	[CE]  incompatible  types	129	None	replace
147	[BUG]  [BUGGY]  if(type!=  null)  {  throw  new  IllegalArgumentException( " "  +  enclosing.getMessage());  }  [CE]  cannot  find  symbol  [FE]                                      AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(type!=  null)  {  throw  new  IllegalArgumentException( " "  +  enclosing.getMessage());  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(type!=  null)  {  throw  new  IllegalArgumentException( " "  +  enclosing.getMessage());  }	  if(type!=    null)    {    throw    new    IllegalArgumentException(   "   ".getMessage());    }    	non-compiled	[CE]  cannot  find  symbol	129	None	replace
148	[BUG]  [BUGGY]  if(type.isUnknownType()  ||  validator.isUnknownType())  {  return  true;  }  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(type.isUnknownType()  ||  validator.isUnknownType())  {  return  true;  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(type.isUnknownType()  ||  validator.isUnknownType())  {  return  true;  }	  if(!validator    ||    type.isUnknownType())    {    return    true;    }    	non-compiled	[CE]  cannot  find  symbol	162	None	replace
149	[BUG]  [BUGGY]  if(type.isUnknownType()  ||!validator  ||  type.isUnknownType())  {  return  true;  }  [CE]  bad  operand  type  Predicate<JSType>  for  unary  operator  '!'  [FE]                    AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(type.isUnknownType()  ||!validator  ||  type.isUnknownType())  {  return  true;  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(type.isUnknownType()  ||!validator  ||  type.isUnknownType())  {  return  true;  }	  if(!validator    ||    type.isUnknownType())    {    return    true;    }    	non-compiled	[CE]  bad  operand  type  Predicate<JSType>  for  unary  operator  '!'	162	None	replace
150	[BUG]  [BUGGY]  if(!validator  ||  type.isUnknownType())  {  return  false;  }  [CE]  bad  operand  type  Predicate<JSType>  for  unary  operator  '!'  [FE]                      AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(!validator  ||  type.isUnknownType())  {  return  false;  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(!validator  ||  type.isUnknownType())  {  return  false;  }	  if(!validator    ||    type.isUnknownType())    {    return    true;    }    	non-compiled	[CE]  bad  operand  type  Predicate<JSType>  for  unary  operator  '!'	162	None	replace
151	[BUG]  [BUGGY]  if(validator  ||  type.isUnknownType())  {  return  true;  }  [CE]  bad  operand  types  for  binary  operator  '||'  [FE]                        AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(validator  ||  type.isUnknownType())  {  return  true;  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(validator  ||  type.isUnknownType())  {  return  true;  }	  if(!validator    ||    type.isUnknownType())    {    return    true;    }    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '||'	162	None	replace
152	[BUG]  [BUGGY]  timeout  [FE]                  AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(type    ==    null)    {    return    false;    }    if(type!=  null)  {  return  false;  }  if(type  ==  null)  {  return  false;  }  if(type!=  null)  {  return  false;  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	add	if(type        ==        null)        {        return        false;        }        if(type!=    null)    {    return    false;    }    if(type  ==  null)  {  return  false;  }  if(type!=  null)  {  return  false;  }	  timeout    	compilable	timeout	58	1	add
153	[BUG]  [BUGGY]  if(type    ==    null)    {    return    false;    }    if(type!=  null)  {  return  false;  }  if(type  ==  null)  {  return  false;  }  if(type!=  null)  {  return  false;  }  timeout  [FE]                  AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(type    ==    null)    {    return    false;    }    if(type!=  null)  {  return  false;  }  if(type  ==  null)  {  return  false;  }  if(type!=  null)  {  return  false;  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(type        ==        null)        {        return        false;        }        if(type!=    null)    {    return    false;    }    if(type  ==  null)  {  return  false;  }  if(type!=  null)  {  return  false;  }	  timeout    	compilable	timeout	58	1	add
154	[BUG]  [BUGGY]  timeout  [FE]                    AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(type    ==    null)    {    return    false;    }    if(type!=  null)  {  return  false;  }  if(type  ==  null)  {  return  false;  }  if(type!=  null)  {  return  false;  }  if(type!=  null)  {  return  false;  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	add	if(type        ==        null)        {        return        false;        }        if(type!=    null)    {    return    false;    }    if(type  ==  null)  {  return  false;  }  if(type!=  null)  {  return  false;  }  if(type!=  null)  {  return  false;  }	  timeout    	compilable	timeout	58	1	add
155	[BUG]  [BUGGY]  if(type    ==    null)    {    return    false;    }    if(type!=  null)  {  return  false;  }  if(type  ==  null)  {  return  false;  }  if(type!=  null)  {  return  false;  }  if(type!=  null)  {  return  false;  }  timeout  [FE]                    AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(type    ==    null)    {    return    false;    }    if(type!=  null)  {  return  false;  }  if(type  ==  null)  {  return  false;  }  if(type!=  null)  {  return  false;  }  if(type!=  null)  {  return  false;  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(type        ==        null)        {        return        false;        }        if(type!=    null)    {    return    false;    }    if(type  ==  null)  {  return  false;  }  if(type!=  null)  {  return  false;  }  if(type!=  null)  {  return  false;  }	  timeout    	compilable	timeout	58	1	add
156	[BUG]  [BUGGY]  timeout  [FE]                      AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(type    ==    null)    {    return    false;    }    if(type!=  null)  {  return  false;  }  if(type!=  null)  {  return  false;  }  if(type!=  null)  {  return  false;  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	add	if(type        ==        null)        {        return        false;        }        if(type!=    null)    {    return    false;    }    if(type!=  null)  {  return  false;  }  if(type!=  null)  {  return  false;  }	  timeout    	compilable	timeout	58	1	add
157	[BUG]  [BUGGY]  if(type    ==    null)    {    return    false;    }    if(type!=  null)  {  return  false;  }  if(type!=  null)  {  return  false;  }  if(type!=  null)  {  return  false;  }  timeout  [FE]                      AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(type    ==    null)    {    return    false;    }    if(type!=  null)  {  return  false;  }  if(type!=  null)  {  return  false;  }  if(type!=  null)  {  return  false;  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(type        ==        null)        {        return        false;        }        if(type!=    null)    {    return    false;    }    if(type!=  null)  {  return  false;  }  if(type!=  null)  {  return  false;  }	  timeout    	compilable	timeout	58	1	add
158	[BUG]  [BUGGY]  timeout  [FE]                        AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(type    ==    null)    {    return    false;    }    if(type!=  null)  {  return  false;  }  if(type!=  null)  {  return  false;  }  if(type!=  null)  {  return  false;  }  if(type!=  null)  {  return  false;  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	add	if(type        ==        null)        {        return        false;        }        if(type!=    null)    {    return    false;    }    if(type!=  null)  {  return  false;  }  if(type!=  null)  {  return  false;  }  if(type!=  null)  {  return  false;  }	  timeout    	compilable	timeout	58	1	add
159	[BUG]  [BUGGY]  if(type    ==    null)    {    return    false;    }    if(type!=  null)  {  return  false;  }  if(type!=  null)  {  return  false;  }  if(type!=  null)  {  return  false;  }  if(type!=  null)  {  return  false;  }  timeout  [FE]                        AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(type    ==    null)    {    return    false;    }    if(type!=  null)  {  return  false;  }  if(type!=  null)  {  return  false;  }  if(type!=  null)  {  return  false;  }  if(type!=  null)  {  return  false;  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(type        ==        null)        {        return        false;        }        if(type!=    null)    {    return    false;    }    if(type!=  null)  {  return  false;  }  if(type!=  null)  {  return  false;  }  if(type!=  null)  {  return  false;  }	  timeout    	compilable	timeout	58	1	add
160	[BUG]  [BUGGY]  timeout  [FE]                          AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(type    ==    null)    {    return    false;    }    if(type!=  null)  {  return  false;  }  if(type!=  null)  {  return  false;  }  if(type  ==  null)  {  return  false;  }  if(type!=  null)  {  return  false;  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	add	if(type        ==        null)        {        return        false;        }        if(type!=    null)    {    return    false;    }    if(type!=  null)  {  return  false;  }  if(type  ==  null)  {  return  false;  }  if(type!=  null)  {  return  false;  }	  timeout    	compilable	timeout	58	1	add
161	[BUG]  [BUGGY]  if(type    ==    null)    {    return    false;    }    if(type!=  null)  {  return  false;  }  if(type!=  null)  {  return  false;  }  if(type  ==  null)  {  return  false;  }  if(type!=  null)  {  return  false;  }  timeout  [FE]                          AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(type    ==    null)    {    return    false;    }    if(type!=  null)  {  return  false;  }  if(type!=  null)  {  return  false;  }  if(type  ==  null)  {  return  false;  }  if(type!=  null)  {  return  false;  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(type        ==        null)        {        return        false;        }        if(type!=    null)    {    return    false;    }    if(type!=  null)  {  return  false;  }  if(type  ==  null)  {  return  false;  }  if(type!=  null)  {  return  false;  }	  timeout    	compilable	timeout	58	1	add
162	[BUG]  [BUGGY]  if(type    ==    null)    {    return    false;    }    if(type!=  null)  {  return  false;  }  if(type  ==  null)  {  return  false;  }  if(type!=  null)  {  return  false;  }  if(type  >=  null)  {  return  false;  }  [CE]  bad  operand  types  for  binary  operator  '>='  [FE]                            AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(type    ==    null)    {    return    false;    }    if(type!=  null)  {  return  false;  }  if(type  ==  null)  {  return  false;  }  if(type!=  null)  {  return  false;  }  if(type  >=  null)  {  return  false;  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(type        ==        null)        {        return        false;        }        if(type!=    null)    {    return    false;    }    if(type  ==  null)  {  return  false;  }  if(type!=  null)  {  return  false;  }  if(type  >=  null)  {  return  false;  }	  timeout    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>='	58	None	add
163	[BUG]  [BUGGY]  if(type    ==    null)    {    return    false;    }    if(type!=  null)  {  return  false;  }  if(type  ==  null)  {  return  false;  }  if(type  >=  null)  {  return  false;  }  if(type!=  null)  {  return  false;  }  [CE]  bad  operand  types  for  binary  operator  '>='  [FE]                              AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(type    ==    null)    {    return    false;    }    if(type!=  null)  {  return  false;  }  if(type  ==  null)  {  return  false;  }  if(type  >=  null)  {  return  false;  }  if(type!=  null)  {  return  false;  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(type        ==        null)        {        return        false;        }        if(type!=    null)    {    return    false;    }    if(type  ==  null)  {  return  false;  }  if(type  >=  null)  {  return  false;  }  if(type!=  null)  {  return  false;  }	  timeout    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>='	58	None	add
164	[BUG]  [BUGGY]  timeout  [FE]                                AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(type    ==    null)    {    return    false;    }    if(type!=  null)  {  return  false;  }  if(type!=  null)  {  return  false;  }  if(type!=  null)  {  return  false;  }  if(type  ==  null)  {  return  false;  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	add	if(type        ==        null)        {        return        false;        }        if(type!=    null)    {    return    false;    }    if(type!=  null)  {  return  false;  }  if(type!=  null)  {  return  false;  }  if(type  ==  null)  {  return  false;  }	  timeout    	compilable	timeout	58	1	add
165	[BUG]  [BUGGY]  if(type    ==    null)    {    return    false;    }    if(type!=  null)  {  return  false;  }  if(type!=  null)  {  return  false;  }  if(type!=  null)  {  return  false;  }  if(type  ==  null)  {  return  false;  }  timeout  [FE]                                AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(type    ==    null)    {    return    false;    }    if(type!=  null)  {  return  false;  }  if(type!=  null)  {  return  false;  }  if(type!=  null)  {  return  false;  }  if(type  ==  null)  {  return  false;  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(type        ==        null)        {        return        false;        }        if(type!=    null)    {    return    false;    }    if(type!=  null)  {  return  false;  }  if(type!=  null)  {  return  false;  }  if(type  ==  null)  {  return  false;  }	  timeout    	compilable	timeout	58	1	add
166	[BUG]  [BUGGY]  if(type.isUnknownType())  {  if(!validator  &&!type.isUnknownType())  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(type.isUnknownType())  {  if(!validator  &&!type.isUnknownType())  {  return  true;  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(type.isUnknownType())  {  if(!validator  &&!type.isUnknownType())  {  return  true;  }	  if(!validator    &&!type.isUnknownType())    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	163	None	replace
167	[BUG]  [BUGGY]  if(!validator  &&!type.isUnknownType())  {  return  false;  }  [CE]  bad  operand  type  Predicate<JSType>  for  unary  operator  '!'  [FE]                      AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(!validator  &&!type.isUnknownType())  {  return  false;  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(!validator  &&!type.isUnknownType())  {  return  false;  }	  if(!validator    &&!type.isUnknownType())    {    return    true;    }    	non-compiled	[CE]  bad  operand  type  Predicate<JSType>  for  unary  operator  '!'	163	None	replace
168	[BUG]  [BUGGY]  if(type.isUnknownType()  ||!validator  &&!type.isUnknownType())  {  return  true;  }  [CE]  bad  operand  type  Predicate<JSType>  for  unary  operator  '!'  [FE]                        AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(type.isUnknownType()  ||!validator  &&!type.isUnknownType())  {  return  true;  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(type.isUnknownType()  ||!validator  &&!type.isUnknownType())  {  return  true;  }	  if(!validator    &&!type.isUnknownType())    {    return    true;    }    	non-compiled	[CE]  bad  operand  type  Predicate<JSType>  for  unary  operator  '!'	163	None	replace
169	[BUG]  [BUGGY]  if(!validator  ||!type.isUnknownType())  {  return  true;  }  [CE]  bad  operand  type  Predicate<JSType>  for  unary  operator  '!'  [FE]                          AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(!validator  ||!type.isUnknownType())  {  return  true;  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(!validator  ||!type.isUnknownType())  {  return  true;  }	  if(!validator    &&!type.isUnknownType())    {    return    true;    }    	non-compiled	[CE]  bad  operand  type  Predicate<JSType>  for  unary  operator  '!'	163	None	replace
170	[BUG]  [BUGGY]  if(!validator  &&  type.isUnknownType())  {  return  false;  }  [CE]  bad  operand  type  Predicate<JSType>  for  unary  operator  '!'  [FE]                            AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(!validator  &&  type.isUnknownType())  {  return  false;  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(!validator  &&  type.isUnknownType())  {  return  false;  }	  if(!validator    &&!type.isUnknownType())    {    return    true;    }    	non-compiled	[CE]  bad  operand  type  Predicate<JSType>  for  unary  operator  '!'	163	None	replace
171	[BUG]  [BUGGY]  if(type.isUnknownType())  {  if(!validator  &&!type.isUnknownType())  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(type.isUnknownType())  {  if(!validator  &&!type.isUnknownType())  {  return  false;  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(type.isUnknownType())  {  if(!validator  &&!type.isUnknownType())  {  return  false;  }	  if(!validator    &&!type.isUnknownType())    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	163	None	replace
172	[BUG]  [BUGGY]  timeout  [FE]                    AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(type  ==  null  ||  enclosing  ==  null)  {  return  false;  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	add	if(type  ==  null  ||  enclosing  ==  null)  {  return  false;  }	  if(type!=    null    ||    enclosing    ==    null)    {    return    true;    }    timeout    	compilable	timeout	44	1	replace
173	[BUG]  [BUGGY]  if(type  ==  null  ||  enclosing  ==  null)  {  return  false;  }  timeout  [FE]                    AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(type  ==  null  ||  enclosing  ==  null)  {  return  false;  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(type  ==  null  ||  enclosing  ==  null)  {  return  false;  }	  if(type!=    null    ||    enclosing    ==    null)    {    return    true;    }    timeout    	compilable	timeout	44	1	replace
174	[BUG]  [BUGGY]  timeout  [FE]                      AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(type!=  null  &&  enclosing  ==  null)  {  return  true;  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	add	if(type!=  null  &&  enclosing  ==  null)  {  return  true;  }	  if(type!=    null    ||    enclosing    ==    null)    {    return    true;    }    timeout    	compilable	timeout	44	1	replace
175	[BUG]  [BUGGY]  if(type!=  null  &&  enclosing  ==  null)  {  return  true;  }  timeout  [FE]                      AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(type!=  null  &&  enclosing  ==  null)  {  return  true;  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(type!=  null  &&  enclosing  ==  null)  {  return  true;  }	  if(type!=    null    ||    enclosing    ==    null)    {    return    true;    }    timeout    	compilable	timeout	44	1	replace
176	[BUG]  [BUGGY]  timeout  [FE]                        AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(type  ==  null  &&  enclosing  ==  null)  {  return  true;  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	add	if(type  ==  null  &&  enclosing  ==  null)  {  return  true;  }	  if(type!=    null    ||    enclosing    ==    null)    {    return    true;    }    timeout    	compilable	timeout	44	1	replace
177	[BUG]  [BUGGY]  if(type  ==  null  &&  enclosing  ==  null)  {  return  true;  }  timeout  [FE]                        AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(type  ==  null  &&  enclosing  ==  null)  {  return  true;  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(type  ==  null  &&  enclosing  ==  null)  {  return  true;  }	  if(type!=    null    ||    enclosing    ==    null)    {    return    true;    }    timeout    	compilable	timeout	44	1	replace
178	[BUG]  [BUGGY]  timeout  [FE]                          AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(type  ==  null  ||  enclosing  ==  null)  {  return  true;  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	add	if(type  ==  null  ||  enclosing  ==  null)  {  return  true;  }	  if(type!=    null    ||    enclosing    ==    null)    {    return    true;    }    timeout    	compilable	timeout	44	1	replace
179	[BUG]  [BUGGY]  if(type  ==  null  ||  enclosing  ==  null)  {  return  true;  }  timeout  [FE]                          AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(type  ==  null  ||  enclosing  ==  null)  {  return  true;  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(type  ==  null  ||  enclosing  ==  null)  {  return  true;  }	  if(type!=    null    ||    enclosing    ==    null)    {    return    true;    }    timeout    	compilable	timeout	44	1	replace
180	[BUG]  [BUGGY]  if(!validator  &&  type.isSyntheticType())  {  return  true;  }  [CE]  bad  operand  type  Predicate<JSType>  for  unary  operator  '!'  [FE]                  AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(!validator  &&  type.isSyntheticType())  {  return  true;  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(!validator  &&  type.isSyntheticType())  {  return  true;  }	  if(!validator    ||    type.isSyntheticType())    {    return    true;    }    	non-compiled	[CE]  bad  operand  type  Predicate<JSType>  for  unary  operator  '!'	197	None	replace
181	[BUG]  [BUGGY]  if(type.isSyntheticType()  ||  validator.isSyntheticType())  {  return  true;  }  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(type.isSyntheticType()  ||  validator.isSyntheticType())  {  return  true;  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(type.isSyntheticType()  ||  validator.isSyntheticType())  {  return  true;  }	  if(!validator    ||    type.isSyntheticType())    {    return    true;    }    	non-compiled	[CE]  cannot  find  symbol	197	None	replace
182	[BUG]  [BUGGY]  if(type.isSyntheticType())  {  return  true;  }  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(type.isSyntheticType())  {  return  true;  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(type.isSyntheticType())  {  return  true;  }	  if(!validator    ||    type.isSyntheticType())    {    return    true;    }    	non-compiled	[CE]  cannot  find  symbol	197	None	replace
183	[BUG]  [BUGGY]  if(!validator  ||  type.isSyntheticType())  {  return  false;  }  [CE]  bad  operand  type  Predicate<JSType>  for  unary  operator  '!'  [FE]                        AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(!validator  ||  type.isSyntheticType())  {  return  false;  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(!validator  ||  type.isSyntheticType())  {  return  false;  }	  if(!validator    ||    type.isSyntheticType())    {    return    true;    }    	non-compiled	[CE]  bad  operand  type  Predicate<JSType>  for  unary  operator  '!'	197	None	replace
184	[BUG]  [BUGGY]  if(validator  ||  type.isSyntheticType())  {  return  true;  }  [CE]  cannot  find  symbol  [FE]                          AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(validator  ||  type.isSyntheticType())  {  return  true;  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(validator  ||  type.isSyntheticType())  {  return  true;  }	  if(!validator    ||    type.isSyntheticType())    {    return    true;    }    	non-compiled	[CE]  cannot  find  symbol	197	None	replace
185	[BUG]  [BUGGY]  if(isSyntheticType()  ||  type.isSyntheticType())  {  return  true;  }  [CE]  cannot  find  symbol  [FE]                            AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(isSyntheticType()  ||  type.isSyntheticType())  {  return  true;  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(isSyntheticType()  ||  type.isSyntheticType())  {  return  true;  }	  if(!validator    ||    type.isSyntheticType())    {    return    true;    }    	non-compiled	[CE]  cannot  find  symbol	197	None	replace
186	[BUG]  [BUGGY]  if(type!=  null)  {  if(validator  ==  null)  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(type!=  null)  {  if(validator  ==  null)  {  return  true;  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(type!=  null)  {  if(validator  ==  null)  {  return  true;  }	  if(validator!=    null)    {    return    true;    }    if(validator    ==    null)    {    return    true;    }    timeout    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
187	[BUG]  [BUGGY]  if(type!=  null)  {  if(validator  ==  null)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(type!=  null)  {  if(validator  ==  null)  {  return  false;  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(type!=  null)  {  if(validator  ==  null)  {  return  false;  }	  if(validator!=    null)    {    return    true;    }    if(validator    ==    null)    {    return    true;    }    timeout    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
188	[BUG]  [BUGGY]  if(type  ==  null)  {  if(validator!=  null)  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(type  ==  null)  {  if(validator!=  null)  {  return  true;  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(type  ==  null)  {  if(validator!=  null)  {  return  true;  }	  if(validator!=    null)    {    return    true;    }    if(validator    ==    null)    {    return    true;    }    timeout    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
189	[BUG]  [BUGGY]  if(type  ==  null)  {  if(validator  ==  null)  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(type  ==  null)  {  if(validator  ==  null)  {  return  true;  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(type  ==  null)  {  if(validator  ==  null)  {  return  true;  }	  if(validator!=    null)    {    return    true;    }    if(validator    ==    null)    {    return    true;    }    timeout    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
190	[BUG]  [BUGGY]  if(type  ==  null)  {  if(validator  ==  null)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(type  ==  null)  {  if(validator  ==  null)  {  return  false;  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(type  ==  null)  {  if(validator  ==  null)  {  return  false;  }	  if(validator!=    null)    {    return    true;    }    if(validator    ==    null)    {    return    true;    }    timeout    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
191	[BUG]  [BUGGY]  if(type  ==  null)  {  if(validator!=  null)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(type  ==  null)  {  if(validator!=  null)  {  return  false;  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(type  ==  null)  {  if(validator!=  null)  {  return  false;  }	  if(validator!=    null)    {    return    true;    }    if(validator    ==    null)    {    return    true;    }    timeout    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
192	[BUG]  [BUGGY]  Predicate  <?>  validator  =  type.getValue();  [CE]  cannot  find  symbol  [FE]                            AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  Predicate  <?>  validator  =  type.getValue();  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	Predicate  <?>  validator  =  type.getValue();	  if(validator!=    null)    {    return    true;    }    if(validator    ==    null)    {    return    true;    }    timeout    	non-compiled	[CE]  cannot  find  symbol	50	None	replace
193	[BUG]  [BUGGY]  timeout  [FE]                  AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(!type.isUnknownType())  {  return  true;  }  if(!type.isUnknownType())  {  return  true;  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	add	if(!type.isUnknownType())    {    return    true;    }    if(!type.isUnknownType())  {  return  true;  }	  timeout    	compilable	timeout	38	1	add
194	[BUG]  [BUGGY]  if(!type.isUnknownType())  {  return  true;  }  if(!type.isUnknownType())  {  return  true;  }  timeout  [FE]                  AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(!type.isUnknownType())  {  return  true;  }  if(!type.isUnknownType())  {  return  true;  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(!type.isUnknownType())    {    return    true;    }    if(!type.isUnknownType())  {  return  true;  }	  timeout    	compilable	timeout	38	1	add
195	[BUG]  [BUGGY]  if(!type.isUnknownType())  {  return  true;  }  If(!type.isUnknownType())  {  return  true;  }  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(!type.isUnknownType())  {  return  true;  }  If(!type.isUnknownType())  {  return  true;  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(!type.isUnknownType())    {    return    true;    }    If(!type.isUnknownType())  {  return  true;  }	  timeout    	non-compiled	[CE]  ';'  expected	38	None	add
196	[BUG]  [BUGGY]  if(!type.isUnknownType())  {  return  true;  }  ||!type.isUnknownType())  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(!type.isUnknownType())  {  return  true;  }  ||!type.isUnknownType())  {  return  true;  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(!type.isUnknownType())    {    return    true;    }    ||!type.isUnknownType())  {  return  true;  }	  timeout    	non-compiled	[CE]  illegal  start  of  expression	38	None	add
197	[BUG]  [BUGGY]  if(!type.isUnknownType())  {  return  true;  }  if(!type.getUnknownType())  {  return  true;  }  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(!type.isUnknownType())  {  return  true;  }  if(!type.getUnknownType())  {  return  true;  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(!type.isUnknownType())    {    return    true;    }    if(!type.getUnknownType())  {  return  true;  }	  timeout    	non-compiled	[CE]  cannot  find  symbol	38	None	add
198	[BUG]  [BUGGY]  timeout  [FE]                          AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(!type.isUnknownType())  {  return  true;  }  while(!type.isUnknownType())  {  return  true;  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	add	if(!type.isUnknownType())    {    return    true;    }    while(!type.isUnknownType())  {  return  true;  }	  timeout    	compilable	timeout	38	1	add
199	[BUG]  [BUGGY]  if(!type.isUnknownType())  {  return  true;  }  while(!type.isUnknownType())  {  return  true;  }  timeout  [FE]                          AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(!type.isUnknownType())  {  return  true;  }  while(!type.isUnknownType())  {  return  true;  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(!type.isUnknownType())    {    return    true;    }    while(!type.isUnknownType())  {  return  true;  }	  timeout    	compilable	timeout	38	1	add
200	[BUG]  [BUGGY]  if(type  ==  null)  {  if(forAnnotations!=  null)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(type  ==  null)  {  if(forAnnotations!=  null)  {  return  false;  }  [BUGGY]    null)  {  return  false;  }  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(type  ==  null)  {  if(forAnnotations!=  null)  {  return  false;  }	  if(type!=    null)    {    return    false;    }    if(type    	non-compiled	[CE]  illegal  start  of  expression	225	None	replace
201	[BUG]  [BUGGY]  if(type!=  null)  {  if(forAnnotations  ==  null)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(type!=  null)  {  if(forAnnotations  ==  null)  {  return  false;  }  [BUGGY]    null)  {  return  false;  }  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(type!=  null)  {  if(forAnnotations  ==  null)  {  return  false;  }	  if(type!=    null)    {    return    false;    }    if(type    	non-compiled	[CE]  illegal  start  of  expression	225	None	replace
202	[BUG]  [BUGGY]  if(type!=  null)  {  if(forAnnotations!=  null)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(type!=  null)  {  if(forAnnotations!=  null)  {  return  false;  }  [BUGGY]    null)  {  return  false;  }  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(type!=  null)  {  if(forAnnotations!=  null)  {  return  false;  }	  if(type!=    null)    {    return    false;    }    if(type    	non-compiled	[CE]  illegal  start  of  expression	225	None	replace
203	[BUG]  [BUGGY]  if(type  ==  null)  {  if(type!=  null)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(type  ==  null)  {  if(type!=  null)  {  return  false;  }  [BUGGY]    null)  {  return  false;  }  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(type  ==  null)  {  if(type!=  null)  {  return  false;  }	  if(type!=    null)    {    return    false;    }    if(type    	non-compiled	[CE]  illegal  start  of  expression	225	None	replace
204	[BUG]  [BUGGY]  if(type!=  null)  {  if(type  ==  null)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(type!=  null)  {  if(type  ==  null)  {  return  false;  }  [BUGGY]    null)  {  return  false;  }  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(type!=  null)  {  if(type  ==  null)  {  return  false;  }	  if(type!=    null)    {    return    false;    }    if(type    	non-compiled	[CE]  illegal  start  of  expression	225	None	replace
205	[BUG]  [BUGGY]  if(type!=  null)  {  if(type!=  null)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(type!=  null)  {  if(type!=  null)  {  return  false;  }  [BUGGY]    null)  {  return  false;  }  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(type!=  null)  {  if(type!=  null)  {  return  false;  }	  if(type!=    null)    {    return    false;    }    if(type    	non-compiled	[CE]  illegal  start  of  expression	225	None	replace
206	[BUG]  [BUGGY]  if(type!=  null)  {  if(!forAnnotations)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(type!=  null)  {  if(!forAnnotations)  {  return  false;  }  [BUGGY]    null)  {  return  false;  }  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(type!=  null)  {  if(!forAnnotations)  {  return  false;  }	  if(type!=    null)    {    return    false;    }    if(type    	non-compiled	[CE]  illegal  start  of  expression	225	None	replace
207	[BUG]  [BUGGY]  if(type.isVarArgs()  ||  type.isInterface())return  false;  }  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(type.isVarArgs()  ||  type.isInterface())return  false;  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(type.isVarArgs()  ||  type.isInterface())return  false;  }	  if(type.isVarArgs()    ||    type.isInterface())    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	169	None	replace
208	[BUG]  [BUGGY]  if(type.isVarArgs()  &&  type.isInterface())  {  return  false;  }  [CE]  cannot  find  symbol  [FE]                          AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(type.isVarArgs()  &&  type.isInterface())  {  return  false;  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(type.isVarArgs()  &&  type.isInterface())  {  return  false;  }	  if(type.isVarArgs()    ||    type.isInterface())    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol	169	None	replace
209	[BUG]  [BUGGY]  if(type.isInterface()  ||  type.isVarArgs())  {  return  false;  }  [CE]  cannot  find  symbol  [FE]                            AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(type.isInterface()  ||  type.isVarArgs())  {  return  false;  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(type.isInterface()  ||  type.isVarArgs())  {  return  false;  }	  if(type.isVarArgs()    ||    type.isInterface())    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol	169	None	replace
210	[BUG]  [BUGGY]  timeout  [FE]                              AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(type.isConstructor()  ||  type.isInterface())  {  return  false;  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	add	if(type.isConstructor()  ||  type.isInterface())  {  return  false;  }	  if(type.isVarArgs()    ||    type.isInterface())    {    return    false;    }    	compilable	timeout	169	1	replace
211	[BUG]  [BUGGY]  if(type.isConstructor()  ||  type.isInterface())  {  return  false;  }  timeout  [FE]                              AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(type.isConstructor()  ||  type.isInterface())  {  return  false;  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(type.isConstructor()  ||  type.isInterface())  {  return  false;  }	  if(type.isVarArgs()    ||    type.isInterface())    {    return    false;    }    	compilable	timeout	169	1	replace
212	[BUG]  [BUGGY]  if(type.isVarArgs()  ||  type.isConstructor())  {  return  false;  }  [CE]  cannot  find  symbol  [FE]                                AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(type.isVarArgs()  ||  type.isConstructor())  {  return  false;  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(type.isVarArgs()  ||  type.isConstructor())  {  return  false;  }	  if(type.isVarArgs()    ||    type.isInterface())    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol	169	None	replace
213	[BUG]  [BUGGY]  timeout  [FE]                    AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(type  ==  null  ||  enclosing!=  type)  {  return  false;  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	add	if(type  ==  null  ||  enclosing!=  type)  {  return  false;  }	  if(type    ==    null    ||    enclosing!=    propertyNode)    {    return    false;    }    	compilable	timeout	205	1	replace
214	[BUG]  [BUGGY]  if(type  ==  null  ||  enclosing!=  type)  {  return  false;  }  timeout  [FE]                    AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(type  ==  null  ||  enclosing!=  type)  {  return  false;  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(type  ==  null  ||  enclosing!=  type)  {  return  false;  }	  if(type    ==    null    ||    enclosing!=    propertyNode)    {    return    false;    }    	compilable	timeout	205	1	replace
215	[BUG]  [BUGGY]  timeout  [FE]                      AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(type  ==  null  ||  enclosing!=  registry.getType(reference))  {  return  false;  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	add	if(type  ==  null  ||  enclosing!=  registry.getType(reference))  {  return  false;  }	  if(type    ==    null    ||    enclosing!=    propertyNode)    {    return    false;    }    	compilable	timeout	205	1	replace
216	[BUG]  [BUGGY]  if(type  ==  null  ||  enclosing!=  registry.getType(reference))  {  return  false;  }  timeout  [FE]                      AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(type  ==  null  ||  enclosing!=  registry.getType(reference))  {  return  false;  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(type  ==  null  ||  enclosing!=  registry.getType(reference))  {  return  false;  }	  if(type    ==    null    ||    enclosing!=    propertyNode)    {    return    false;    }    	compilable	timeout	205	1	replace
217	[BUG]  [BUGGY]  if(type  ==  null  ||  enclosing!=  forAnnotations)  {  return  false;  }  [CE]  cannot  find  symbol  forAnnotations  [FE]                        AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(type  ==  null  ||  enclosing!=  forAnnotations)  {  return  false;  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(type  ==  null  ||  enclosing!=  forAnnotations)  {  return  false;  }	  if(type    ==    null    ||    enclosing!=    propertyNode)    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol  forAnnotations	205	None	replace
218	[BUG]  [BUGGY]  timeout  [FE]                          AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(type  ==  null  ||  enclosing!=  registry.getNativeType(JSTypeNative.UNKNOWN_TYPE))  {  return  false;  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	add	if(type  ==  null  ||  enclosing!=  registry.getNativeType(JSTypeNative.UNKNOWN_TYPE))  {  return  false;  }	  if(type    ==    null    ||    enclosing!=    propertyNode)    {    return    false;    }    	compilable	timeout	205	1	replace
219	[BUG]  [BUGGY]  if(type  ==  null  ||  enclosing!=  registry.getNativeType(JSTypeNative.UNKNOWN_TYPE))  {  return  false;  }  timeout  [FE]                          AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(type  ==  null  ||  enclosing!=  registry.getNativeType(JSTypeNative.UNKNOWN_TYPE))  {  return  false;  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(type  ==  null  ||  enclosing!=  registry.getNativeType(JSTypeNative.UNKNOWN_TYPE))  {  return  false;  }	  if(type    ==    null    ||    enclosing!=    propertyNode)    {    return    false;    }    	compilable	timeout	205	1	replace
220	[BUG]  [BUGGY]  timeout  [FE]                            AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(type  ==  null  ||  enclosing!=  registry.getNativeType(JSTypeNative.NO_TYPE))  {  return  false;  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	add	if(type  ==  null  ||  enclosing!=  registry.getNativeType(JSTypeNative.NO_TYPE))  {  return  false;  }	  if(type    ==    null    ||    enclosing!=    propertyNode)    {    return    false;    }    	compilable	timeout	205	1	replace
221	[BUG]  [BUGGY]  if(type  ==  null  ||  enclosing!=  registry.getNativeType(JSTypeNative.NO_TYPE))  {  return  false;  }  timeout  [FE]                            AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(type  ==  null  ||  enclosing!=  registry.getNativeType(JSTypeNative.NO_TYPE))  {  return  false;  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(type  ==  null  ||  enclosing!=  registry.getNativeType(JSTypeNative.NO_TYPE))  {  return  false;  }	  if(type    ==    null    ||    enclosing!=    propertyNode)    {    return    false;    }    	compilable	timeout	205	1	replace
222	[BUG]  [BUGGY]  if(type  ==  null  ||  enclosing!=  registry.getNativeType(UNKNOWN_TYPE))  {  return  false;  }  [CE]  cannot  find  symbol  UNKNOWN_TYPE  [FE]                              AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(type  ==  null  ||  enclosing!=  registry.getNativeType(UNKNOWN_TYPE))  {  return  false;  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(type  ==  null  ||  enclosing!=  registry.getNativeType(UNKNOWN_TYPE))  {  return  false;  }	  if(type    ==    null    ||    enclosing!=    propertyNode)    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol  UNKNOWN_TYPE	205	None	replace
223	[BUG]  [BUGGY]  timeout  [FE]                  AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(validator!=  null  &&  validator.equals(type))  {  return  true;  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	add	if(validator!=  null  &&  validator.equals(type))  {  return  true;  }	  if(validator!=    null    ||    validator.equals(type))    {    return    true;    }    timeout    	compilable	timeout	33	1	replace
224	[BUG]  [BUGGY]  if(validator!=  null  &&  validator.equals(type))  {  return  true;  }  timeout  [FE]                  AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(validator!=  null  &&  validator.equals(type))  {  return  true;  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(validator!=  null  &&  validator.equals(type))  {  return  true;  }	  if(validator!=    null    ||    validator.equals(type))    {    return    true;    }    timeout    	compilable	timeout	33	1	replace
225	[BUG]  [BUGGY]  timeout  [FE]                    AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(validator  ==  null  &&  validator.equals(type))  {  return  true;  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	add	if(validator  ==  null  &&  validator.equals(type))  {  return  true;  }	  if(validator!=    null    ||    validator.equals(type))    {    return    true;    }    timeout    	compilable	timeout	33	1	replace
226	[BUG]  [BUGGY]  if(validator  ==  null  &&  validator.equals(type))  {  return  true;  }  timeout  [FE]                    AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(validator  ==  null  &&  validator.equals(type))  {  return  true;  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(validator  ==  null  &&  validator.equals(type))  {  return  true;  }	  if(validator!=    null    ||    validator.equals(type))    {    return    true;    }    timeout    	compilable	timeout	33	1	replace
227	[BUG]  [BUGGY]  timeout  [FE]                      AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(validator!=  null  ||  validator.equals(type))  {  return  false;  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	add	if(validator!=  null  ||  validator.equals(type))  {  return  false;  }	  if(validator!=    null    ||    validator.equals(type))    {    return    true;    }    timeout    	compilable	timeout	33	1	replace
228	[BUG]  [BUGGY]  if(validator!=  null  ||  validator.equals(type))  {  return  false;  }  timeout  [FE]                      AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(validator!=  null  ||  validator.equals(type))  {  return  false;  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(validator!=  null  ||  validator.equals(type))  {  return  false;  }	  if(validator!=    null    ||    validator.equals(type))    {    return    true;    }    timeout    	compilable	timeout	33	1	replace
229	[BUG]  [BUGGY]  timeout  [FE]                        AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(validator!=  null  &&  validator.equals(type))  {  return  false;  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	add	if(validator!=  null  &&  validator.equals(type))  {  return  false;  }	  if(validator!=    null    ||    validator.equals(type))    {    return    true;    }    timeout    	compilable	timeout	33	1	replace
230	[BUG]  [BUGGY]  if(validator!=  null  &&  validator.equals(type))  {  return  false;  }  timeout  [FE]                        AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(validator!=  null  &&  validator.equals(type))  {  return  false;  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(validator!=  null  &&  validator.equals(type))  {  return  false;  }	  if(validator!=    null    ||    validator.equals(type))    {    return    true;    }    timeout    	compilable	timeout	33	1	replace
231	[BUG]  [BUGGY]  timeout  [FE]                          AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(validator  ==  null  ||  validator.equals(type))  {  return  false;  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	add	if(validator  ==  null  ||  validator.equals(type))  {  return  false;  }	  if(validator!=    null    ||    validator.equals(type))    {    return    true;    }    timeout    	compilable	timeout	33	1	replace
232	[BUG]  [BUGGY]  if(validator  ==  null  ||  validator.equals(type))  {  return  false;  }  timeout  [FE]                          AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(validator  ==  null  ||  validator.equals(type))  {  return  false;  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(validator  ==  null  ||  validator.equals(type))  {  return  false;  }	  if(validator!=    null    ||    validator.equals(type))    {    return    true;    }    timeout    	compilable	timeout	33	1	replace
233	[BUG]  [BUGGY]  timeout  [FE]                            AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(type!=  null  ||  validator.equals(type))  {  return  true;  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	add	if(type!=  null  ||  validator.equals(type))  {  return  true;  }	  if(validator!=    null    ||    validator.equals(type))    {    return    true;    }    timeout    	compilable	timeout	33	1	replace
234	[BUG]  [BUGGY]  if(type!=  null  ||  validator.equals(type))  {  return  true;  }  timeout  [FE]                            AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(type!=  null  ||  validator.equals(type))  {  return  true;  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(type!=  null  ||  validator.equals(type))  {  return  true;  }	  if(validator!=    null    ||    validator.equals(type))    {    return    true;    }    timeout    	compilable	timeout	33	1	replace
235	[BUG]  [BUGGY]  if(enclosing.isReferenced()  ||  type.equals(type))  {  return  true;  }  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(enclosing.isReferenced()  ||  type.equals(type))  {  return  true;  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(enclosing.isReferenced()  ||  type.equals(type))  {  return  true;  }	  if(type.isReferenced()    ||    type.equals(enclosing))    {    return    true;    }    	non-compiled	[CE]  cannot  find  symbol	164	None	replace
236	[BUG]  [BUGGY]  if(type.isReferenced()  &&  type.equals(enclosing))  {  return  true;  }  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(type.isReferenced()  &&  type.equals(enclosing))  {  return  true;  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(type.isReferenced()  &&  type.equals(enclosing))  {  return  true;  }	  if(type.isReferenced()    ||    type.equals(enclosing))    {    return    true;    }    	non-compiled	[CE]  cannot  find  symbol	164	None	replace
237	[BUG]  [BUGGY]  if(type.isReferenced()  ||  enclosing.equals(type))  {  return  true;  }  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(type.isReferenced()  ||  enclosing.equals(type))  {  return  true;  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(type.isReferenced()  ||  enclosing.equals(type))  {  return  true;  }	  if(type.isReferenced()    ||    type.equals(enclosing))    {    return    true;    }    	non-compiled	[CE]  cannot  find  symbol	164	None	replace
238	[BUG]  [BUGGY]  if(enclosing.isReferenced()  ||  type.equals(enclosing))  {  return  true;  }  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(enclosing.isReferenced()  ||  type.equals(enclosing))  {  return  true;  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(enclosing.isReferenced()  ||  type.equals(enclosing))  {  return  true;  }	  if(type.isReferenced()    ||    type.equals(enclosing))    {    return    true;    }    	non-compiled	[CE]  cannot  find  symbol	164	None	replace
239	[BUG]  [BUGGY]  if(delegate.isReferenced()  ||  type.equals(enclosing))  {  return  true;  }  [CE]  cannot  find  symbol  delegate  [FE]                      AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(delegate.isReferenced()  ||  type.equals(enclosing))  {  return  true;  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(delegate.isReferenced()  ||  type.equals(enclosing))  {  return  true;  }	  if(type.isReferenced()    ||    type.equals(enclosing))    {    return    true;    }    	non-compiled	[CE]  cannot  find  symbol  delegate	164	None	replace
240	[BUG]  [BUGGY]  enclosing.resolveViaRegistry(t,  enclosing);  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  enclosing.resolveViaRegistry(t,  enclosing);  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	enclosing.resolveViaRegistry(t,  enclosing);	  parent.resolveViaRegistry(t,    enclosing);    	non-compiled	[CE]  cannot  find  symbol	141	None	replace
241	[BUG]  [BUGGY]  Predicates.resolveViaRegistry(t,  enclosing);  [CE]  cannot  find  symbol  Predicates  [FE]                      AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  Predicates.resolveViaRegistry(t,  enclosing);  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	Predicates.resolveViaRegistry(t,  enclosing);	  parent.resolveViaRegistry(t,    enclosing);    	non-compiled	[CE]  cannot  find  symbol  Predicates	141	None	replace
242	[BUG]  [BUGGY]  owner.resolveViaRegistry(t,  enclosing);  [CE]  cannot  find  symbol  owner  [FE]                        AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  owner.resolveViaRegistry(t,  enclosing);  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	owner.resolveViaRegistry(t,  enclosing);	  parent.resolveViaRegistry(t,    enclosing);    	non-compiled	[CE]  cannot  find  symbol  owner	141	None	replace
243	[BUG]  [BUGGY]  predicate.resolveViaRegistry(t,  enclosing);  [CE]  cannot  find  symbol  predicate  [FE]                          AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  predicate.resolveViaRegistry(t,  enclosing);  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	predicate.resolveViaRegistry(t,  enclosing);	  parent.resolveViaRegistry(t,    enclosing);    	non-compiled	[CE]  cannot  find  symbol  predicate	141	None	replace
244	[BUG]  [BUGGY]  enclosing.resolveViaRegistry(t,  parent);  [CE]  cannot  find  symbol  parent  [FE]                            AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  enclosing.resolveViaRegistry(t,  parent);  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	enclosing.resolveViaRegistry(t,  parent);	  parent.resolveViaRegistry(t,    enclosing);    	non-compiled	[CE]  cannot  find  symbol  parent	141	None	replace
245	[BUG]  [BUGGY]  t.resolveViaRegistry(type,  enclosing);  [CE]  cannot  find  symbol  [FE]                              AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  t.resolveViaRegistry(type,  enclosing);  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	t.resolveViaRegistry(type,  enclosing);	  parent.resolveViaRegistry(t,    enclosing);    	non-compiled	[CE]  cannot  find  symbol	141	None	replace
246	[BUG]  [BUGGY]  if(type.isVarArgs()  ||  type.isVarArgs())return  false;  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(type.isVarArgs()  ||  type.isVarArgs())return  false;  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(type.isVarArgs()  ||  type.isVarArgs())return  false;  }	  if(type.isVarArgs()    ||    type.isVarArgs())    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
247	[BUG]  [BUGGY]  if(type.isVarArgs()  &&  type.isVarArgs())  {  return  false;  }  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(type.isVarArgs()  &&  type.isVarArgs())  {  return  false;  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(type.isVarArgs()  &&  type.isVarArgs())  {  return  false;  }	  if(type.isVarArgs()    ||    type.isVarArgs())    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol	80	None	replace
248	[BUG]  [BUGGY]  if(type!=  null)  {  if(validator!=  null)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(type!=  null)  {  if(validator!=  null)  {  return  false;  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(type!=  null)  {  if(validator!=  null)  {  return  false;  }	  if(validator!=    null)    {    return    true;    }    if(validator    [Delete]    null)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
249	[BUG]  [BUGGY]  if(type!=  null)  {  if(validator!=  null)  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(type!=  null)  {  if(validator!=  null)  {  return  true;  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(type!=  null)  {  if(validator!=  null)  {  return  true;  }	  if(validator!=    null)    {    return    true;    }    if(validator    [Delete]    null)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
250	[BUG]  [BUGGY]  if(enclosing!=  null  &&  type.size()  >  0)  {  return  false;  }  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(enclosing!=  null  &&  type.size()  >  0)  {  return  false;  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(enclosing!=  null  &&  type.size()  >  0)  {  return  false;  }	  if(type!=    null    &&    enclosing.size()    >    0)    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol	210	None	replace
251	[BUG]  [BUGGY]  if(enclosing!=  null  &&  enclosing.size()  >  0)  {  return  false;  }  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(enclosing!=  null  &&  enclosing.size()  >  0)  {  return  false;  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(enclosing!=  null  &&  enclosing.size()  >  0)  {  return  false;  }	  if(type!=    null    &&    enclosing.size()    >    0)    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol	210	None	replace
252	[BUG]  [BUGGY]  if(type!=  null  ||  enclosing.size()  >  0)  {  return  false;  }  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(type!=  null  ||  enclosing.size()  >  0)  {  return  false;  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(type!=  null  ||  enclosing.size()  >  0)  {  return  false;  }	  if(type!=    null    &&    enclosing.size()    >    0)    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol	210	None	replace
253	[BUG]  [BUGGY]  if(enclosing  ==  null  &&  type.size()  >  0)  {  return  false;  }  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(enclosing  ==  null  &&  type.size()  >  0)  {  return  false;  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(enclosing  ==  null  &&  type.size()  >  0)  {  return  false;  }	  if(type!=    null    &&    enclosing.size()    >    0)    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol	210	None	replace
254	[BUG]  [BUGGY]  if(enclosing!=  null  &&  types.size()  >  0)  {  return  false;  }  [CE]  cannot  find  symbol  types  [FE]                        AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(enclosing!=  null  &&  types.size()  >  0)  {  return  false;  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(enclosing!=  null  &&  types.size()  >  0)  {  return  false;  }	  if(type!=    null    &&    enclosing.size()    >    0)    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol  types	210	None	replace
255	[BUG]  [BUGGY]  if(type  ==  null  &&  enclosing.size()  >  0)  {  return  false;  }  [CE]  cannot  find  symbol  [FE]                          AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(type  ==  null  &&  enclosing.size()  >  0)  {  return  false;  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(type  ==  null  &&  enclosing.size()  >  0)  {  return  false;  }	  if(type!=    null    &&    enclosing.size()    >    0)    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol	210	None	replace
256	[BUG]  [BUGGY]  if(type.isSyntheticType())  {  forAnnotations  inferred  =  false;  forAnnotations  inferred  =  true;  forAnnotations  =  inferred;  }  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(type.isSyntheticType())  {  forAnnotations  inferred  =  false;  forAnnotations  inferred  =  true;  forAnnotations  =  inferred;  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(type.isSyntheticType())  {  forAnnotations  inferred  =  false;  forAnnotations  inferred  =  true;  forAnnotations  =  inferred;  }	  return    false;    if(type.isSyntheticType())    {    forAnnotations    inferred    =    false;    forAnnotations    inferred    =    true;    forAnnotations    =    inferred;    }    	non-compiled	[CE]  cannot  find  symbol	232	None	replace
257	[BUG]  [BUGGY]  if(type.isSyntheticType()  ||  type.isSyntheticType())  {  forAnnotations  inferred  =  false;  forAnnotations  inferred  =  true;  forAnnotations  =  inferred;  }  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(type.isSyntheticType()  ||  type.isSyntheticType())  {  forAnnotations  inferred  =  false;  forAnnotations  inferred  =  true;  forAnnotations  =  inferred;  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(type.isSyntheticType()  ||  type.isSyntheticType())  {  forAnnotations  inferred  =  false;  forAnnotations  inferred  =  true;  forAnnotations  =  inferred;  }	  return    false;    if(type.isSyntheticType())    {    forAnnotations    inferred    =    false;    forAnnotations    inferred    =    true;    forAnnotations    =    inferred;    }    	non-compiled	[CE]  cannot  find  symbol	232	None	replace
258	[BUG]  [BUGGY]  forAnnotations  inferred  =  false;  forAnnotations  =  inferred;  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  forAnnotations  inferred  =  false;  forAnnotations  =  inferred;  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	forAnnotations  inferred  =  false;  forAnnotations  =  inferred;  }	  return    false;    if(type.isSyntheticType())    {    forAnnotations    inferred    =    false;    forAnnotations    inferred    =    true;    forAnnotations    =    inferred;    }    	non-compiled	[CE]  illegal  start  of  type	232	None	replace
259	[BUG]  [BUGGY]  forAnnotations  inferred  =  false;  forAnnotations  =  inferred;  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  forAnnotations  inferred  =  false;  forAnnotations  =  inferred;  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	forAnnotations  inferred  =  false;  forAnnotations  =  inferred;	  return    false;    if(type.isSyntheticType())    {    forAnnotations    inferred    =    false;    forAnnotations    inferred    =    true;    forAnnotations    =    inferred;    }    	non-compiled	[CE]  cannot  find  symbol	232	None	replace
260	[BUG]  [BUGGY]  if(type.isSyntheticType()  ||  type.isSyntheticClass())  {  forAnnotations  inferred  =  false;  forAnnotations  inferred  =  true;  forAnnotations  =  inferred;  }  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(type.isSyntheticType()  ||  type.isSyntheticClass())  {  forAnnotations  inferred  =  false;  forAnnotations  inferred  =  true;  forAnnotations  =  inferred;  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(type.isSyntheticType()  ||  type.isSyntheticClass())  {  forAnnotations  inferred  =  false;  forAnnotations  inferred  =  true;  forAnnotations  =  inferred;  }	  return    false;    if(type.isSyntheticType())    {    forAnnotations    inferred    =    false;    forAnnotations    inferred    =    true;    forAnnotations    =    inferred;    }    	non-compiled	[CE]  cannot  find  symbol	232	None	replace
261	[BUG]  [BUGGY]  forAnnotations  inferred  =  true;  forAnnotations  =  inferred;  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  forAnnotations  inferred  =  true;  forAnnotations  =  inferred;  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	forAnnotations  inferred  =  true;  forAnnotations  =  inferred;	  return    false;    if(type.isSyntheticType())    {    forAnnotations    inferred    =    false;    forAnnotations    inferred    =    true;    forAnnotations    =    inferred;    }    	non-compiled	[CE]  cannot  find  symbol	232	None	replace
262	[BUG]  [BUGGY]  Predicate  validator  =  t.getValue();  setReferencedAndResolvedType(type,  t,  enclosing);  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  Predicate  validator  =  t.getValue();  setReferencedAndResolvedType(type,  t,  enclosing);  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	Predicate  validator  =  t.getValue();  setReferencedAndResolvedType(type,  t,  enclosing);	  return    false;    Predicate    validator    =    t.getValue();    setReferencedAndResolvedType(type,    t,    enclosing);    	non-compiled	[CE]  cannot  find  symbol	107	None	replace
263	[BUG]  [BUGGY]  Predicate  validator  =  type.getValue();  setReferencedAndResolvedType(type,  t,  enclosing);  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  Predicate  validator  =  type.getValue();  setReferencedAndResolvedType(type,  t,  enclosing);  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	Predicate  validator  =  type.getValue();  setReferencedAndResolvedType(type,  t,  enclosing);	  return    false;    Predicate    validator    =    t.getValue();    setReferencedAndResolvedType(type,    t,    enclosing);    	non-compiled	[CE]  cannot  find  symbol	107	None	replace
264	[BUG]  [BUGGY]  Predicate  validator  =  registry.getValue(reference);  setReferencedAndResolvedType(type,  t,  enclosing);  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  Predicate  validator  =  registry.getValue(reference);  setReferencedAndResolvedType(type,  t,  enclosing);  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	Predicate  validator  =  registry.getValue(reference);  setReferencedAndResolvedType(type,  t,  enclosing);	  return    false;    Predicate    validator    =    t.getValue();    setReferencedAndResolvedType(type,    t,    enclosing);    	non-compiled	[CE]  cannot  find  symbol	107	None	replace
265	[BUG]  [BUGGY]  Node  validator  =  t.getValue();  setReferencedAndResolvedType(type,  t,  enclosing);  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  Node  validator  =  t.getValue();  setReferencedAndResolvedType(type,  t,  enclosing);  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	Node  validator  =  t.getValue();  setReferencedAndResolvedType(type,  t,  enclosing);	  return    false;    Predicate    validator    =    t.getValue();    setReferencedAndResolvedType(type,    t,    enclosing);    	non-compiled	[CE]  cannot  find  symbol	107	None	replace
266	[BUG]  [BUGGY]  if(validator!=  null)  {  return  false;  Predicate  validator  =  t.getValue();  setReferencedAndResolvedType(type,  t,  enclosing);  }  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(validator!=  null)  {  return  false;  Predicate  validator  =  t.getValue();  setReferencedAndResolvedType(type,  t,  enclosing);  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(validator!=  null)  {  return  false;  Predicate  validator  =  t.getValue();  setReferencedAndResolvedType(type,  t,  enclosing);  }	  return    false;    Predicate    validator    =    t.getValue();    setReferencedAndResolvedType(type,    t,    enclosing);    	non-compiled	[CE]  cannot  find  symbol	107	None	replace
267	[BUG]  [BUGGY]  JSType  validator  =  t.getValue();  setReferencedAndResolvedType(type,  t,  enclosing);  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  JSType  validator  =  t.getValue();  setReferencedAndResolvedType(type,  t,  enclosing);  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	JSType  validator  =  t.getValue();  setReferencedAndResolvedType(type,  t,  enclosing);	  return    false;    Predicate    validator    =    t.getValue();    setReferencedAndResolvedType(type,    t,    enclosing);    	non-compiled	[CE]  cannot  find  symbol	107	None	replace
268	[BUG]  [BUGGY]  if(type!=  null)  {  forAnnotations  =  Collections.emptyList();  if(forAnnotations!=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);  }  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(type!=  null)  {  forAnnotations  =  Collections.emptyList();  if(forAnnotations!=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(type!=  null)  {  forAnnotations  =  Collections.emptyList();  if(forAnnotations!=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);  }	  if(type    ==    null)    {    forAnnotations    =    Collections.emptyList();    if(forAnnotations!=    null)    {    setReferencedAndResolvedType(type,    t,    enclosing);    }    	non-compiled	[CE]  illegal  start  of  expression	147	None	replace
269	[BUG]  [BUGGY]  if(type!=  null)  {  forAnnotations  =  Collections.emptyList();  if(forAnnotations  ==  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);  }  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(type!=  null)  {  forAnnotations  =  Collections.emptyList();  if(forAnnotations  ==  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(type!=  null)  {  forAnnotations  =  Collections.emptyList();  if(forAnnotations  ==  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);  }	  if(type    ==    null)    {    forAnnotations    =    Collections.emptyList();    if(forAnnotations!=    null)    {    setReferencedAndResolvedType(type,    t,    enclosing);    }    	non-compiled	[CE]  illegal  start  of  expression	147	None	replace
270	[BUG]  [BUGGY]  Annotations  forAnnotations  =  Collections.emptyList();  if(forAnnotations!=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);  }  [CE]  cannot  find  symbol  [FE]                              AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  Annotations  forAnnotations  =  Collections.emptyList();  if(forAnnotations!=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	Annotations  forAnnotations  =  Collections.emptyList();  if(forAnnotations!=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);  }	  if(type    ==    null)    {    forAnnotations    =    Collections.emptyList();    if(forAnnotations!=    null)    {    setReferencedAndResolvedType(type,    t,    enclosing);    }    	non-compiled	[CE]  cannot  find  symbol	147	None	replace
271	[BUG]  [BUGGY]  Annotations  forAnnotations  =  Collections.emptyList();  if(enclosing!=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);  }  [CE]  cannot  find  symbol  [FE]                                AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  Annotations  forAnnotations  =  Collections.emptyList();  if(enclosing!=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	Annotations  forAnnotations  =  Collections.emptyList();  if(enclosing!=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);  }	  if(type    ==    null)    {    forAnnotations    =    Collections.emptyList();    if(forAnnotations!=    null)    {    setReferencedAndResolvedType(type,    t,    enclosing);    }    	non-compiled	[CE]  cannot  find  symbol	147	None	replace
272	[BUG]  [BUGGY]  Annotations  forAnnotations  =  Collections.emptyList();  if(forAnnotations  ==  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);  }  [CE]  cannot  find  symbol  [FE]                                  AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  Annotations  forAnnotations  =  Collections.emptyList();  if(forAnnotations  ==  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	Annotations  forAnnotations  =  Collections.emptyList();  if(forAnnotations  ==  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);  }	  if(type    ==    null)    {    forAnnotations    =    Collections.emptyList();    if(forAnnotations!=    null)    {    setReferencedAndResolvedType(type,    t,    enclosing);    }    	non-compiled	[CE]  cannot  find  symbol	147	None	replace
273	[BUG]  [BUGGY]  if(type!=  null)  {  forAnnotations  =  Collections.emptyList();  if(enclosing!=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);  }  [CE]  illegal  start  of  expression  [FE]                                    AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(type!=  null)  {  forAnnotations  =  Collections.emptyList();  if(enclosing!=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(type!=  null)  {  forAnnotations  =  Collections.emptyList();  if(enclosing!=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);  }	  if(type    ==    null)    {    forAnnotations    =    Collections.emptyList();    if(forAnnotations!=    null)    {    setReferencedAndResolvedType(type,    t,    enclosing);    }    	non-compiled	[CE]  illegal  start  of  expression	147	None	replace
274	[BUG]  [BUGGY]  Annotations  forAnnotations  =  Collections.emptyList();  [CE]  cannot  find  symbol  [FE]                                      AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  Annotations  forAnnotations  =  Collections.emptyList();  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	Annotations  forAnnotations  =  Collections.emptyList();	  if(type    ==    null)    {    forAnnotations    =    Collections.emptyList();    if(forAnnotations!=    null)    {    setReferencedAndResolvedType(type,    t,    enclosing);    }    	non-compiled	[CE]  cannot  find  symbol	147	None	replace
275	[BUG]  [BUGGY]  timeout  [FE]              AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(type.isUnknownType()  ||  type.equals(enclosing))  {  return  true;  }  if(type.isUnknownType()  ||  type.equals(enclosing))  {  return  true;  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	add	if(type.isUnknownType()    ||    type.equals(enclosing))    {    return    true;    }    if(type.isUnknownType()  ||  type.equals(enclosing))  {  return  true;  }	  timeout    	compilable	timeout	220	1	add
276	[BUG]  [BUGGY]  if(type.isUnknownType()  ||  type.equals(enclosing))  {  return  true;  }  if(type.isUnknownType()  ||  type.equals(enclosing))  {  return  true;  }  timeout  [FE]              AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(type.isUnknownType()  ||  type.equals(enclosing))  {  return  true;  }  if(type.isUnknownType()  ||  type.equals(enclosing))  {  return  true;  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(type.isUnknownType()    ||    type.equals(enclosing))    {    return    true;    }    if(type.isUnknownType()  ||  type.equals(enclosing))  {  return  true;  }	  timeout    	compilable	timeout	220	1	add
277	[BUG]  [BUGGY]  if(type.isUnknownType()  ||  type.equals(enclosing))  {  return  true;  }  If(type.isUnknownType()  ||  type.equals(enclosing))  {  return  true;  }  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(type.isUnknownType()  ||  type.equals(enclosing))  {  return  true;  }  If(type.isUnknownType()  ||  type.equals(enclosing))  {  return  true;  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(type.isUnknownType()    ||    type.equals(enclosing))    {    return    true;    }    If(type.isUnknownType()  ||  type.equals(enclosing))  {  return  true;  }	  timeout    	non-compiled	[CE]  ';'  expected	220	None	add
278	[BUG]  [BUGGY]  if(type.isUnknownType()  ||  type.equals(enclosing))  {  return  true;  }  if(Type.isUnknownType()  ||  type.equals(enclosing))  {  return  true;  }  [CE]  cannot  find  symbol  Type  [FE]                  AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(type.isUnknownType()  ||  type.equals(enclosing))  {  return  true;  }  if(Type.isUnknownType()  ||  type.equals(enclosing))  {  return  true;  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(type.isUnknownType()    ||    type.equals(enclosing))    {    return    true;    }    if(Type.isUnknownType()  ||  type.equals(enclosing))  {  return  true;  }	  timeout    	non-compiled	[CE]  cannot  find  symbol  Type	220	None	add
279	[BUG]  [BUGGY]  timeout  [FE]                    AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(type.isUnknownType()  ||  type.equals(enclosing))  {  return  true;  }  if(type.isUnknownType()  ||  type.equals(enclosing))  {  return  false;  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	add	if(type.isUnknownType()    ||    type.equals(enclosing))    {    return    true;    }    if(type.isUnknownType()  ||  type.equals(enclosing))  {  return  false;  }	  timeout    	compilable	timeout	220	1	add
280	[BUG]  [BUGGY]  if(type.isUnknownType()  ||  type.equals(enclosing))  {  return  true;  }  if(type.isUnknownType()  ||  type.equals(enclosing))  {  return  false;  }  timeout  [FE]                    AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(type.isUnknownType()  ||  type.equals(enclosing))  {  return  true;  }  if(type.isUnknownType()  ||  type.equals(enclosing))  {  return  false;  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(type.isUnknownType()    ||    type.equals(enclosing))    {    return    true;    }    if(type.isUnknownType()  ||  type.equals(enclosing))  {  return  false;  }	  timeout    	compilable	timeout	220	1	add
281	[BUG]  [BUGGY]  if(!validator  &&  type.isVarArgs())  {  return  false;  }  [CE]  bad  operand  type  Predicate<JSType>  for  unary  operator  '!'  [FE]                            AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(!validator  &&  type.isVarArgs())  {  return  false;  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(!validator  &&  type.isVarArgs())  {  return  false;  }	  if(!validator    &&    type.isVarArgs())    {    return    true;    }    	non-compiled	[CE]  bad  operand  type  Predicate<JSType>  for  unary  operator  '!'	92	None	replace
282	[BUG]  [BUGGY]  if(!validator  ||  type.isVarArgs())  {  return  true;  }  [CE]  bad  operand  type  Predicate<JSType>  for  unary  operator  '!'  [FE]                              AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(!validator  ||  type.isVarArgs())  {  return  true;  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(!validator  ||  type.isVarArgs())  {  return  true;  }	  if(!validator    &&    type.isVarArgs())    {    return    true;    }    	non-compiled	[CE]  bad  operand  type  Predicate<JSType>  for  unary  operator  '!'	92	None	replace
283	[BUG]  [BUGGY]  if(type.isVarArgs()  ||!validator  &&  type.isVarArgs())  {  return  true;  }  [CE]  cannot  find  symbol  [FE]                                AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(type.isVarArgs()  ||!validator  &&  type.isVarArgs())  {  return  true;  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(type.isVarArgs()  ||!validator  &&  type.isVarArgs())  {  return  true;  }	  if(!validator    &&    type.isVarArgs())    {    return    true;    }    	non-compiled	[CE]  cannot  find  symbol	92	None	replace
284	[BUG]  [BUGGY]  validator  ||  type.isVarArgs())  {  return  true;  }  [CE]  not  a  statement  [FE]                                  AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  validator  ||  type.isVarArgs())  {  return  true;  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	validator  ||  type.isVarArgs())  {  return  true;  }	  if(!validator    &&    type.isVarArgs())    {    return    true;    }    	non-compiled	[CE]  not  a  statement	92	None	replace
285	[BUG]  [BUGGY]  timeout  [FE]              AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(type.isUnknownType()  ||  type.equals(enclosing))  {  return  false;  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	add	if(type.isUnknownType()  ||  type.equals(enclosing))  {  return  false;  }	  if(type.isUnknownType()    ||    type.equals(enclosing))    {    return    true;    }    timeout    	compilable	timeout	221	1	replace
286	[BUG]  [BUGGY]  if(type.isUnknownType()  ||  type.equals(enclosing))  {  return  false;  }  timeout  [FE]              AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(type.isUnknownType()  ||  type.equals(enclosing))  {  return  false;  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(type.isUnknownType()  ||  type.equals(enclosing))  {  return  false;  }	  if(type.isUnknownType()    ||    type.equals(enclosing))    {    return    true;    }    timeout    	compilable	timeout	221	1	replace
287	[BUG]  [BUGGY]  timeout  [FE]                AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(type.isUnknownType()  &&  type.equals(enclosing))  {  return  true;  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	add	if(type.isUnknownType()  &&  type.equals(enclosing))  {  return  true;  }	  if(type.isUnknownType()    ||    type.equals(enclosing))    {    return    true;    }    timeout    	compilable	timeout	221	1	replace
288	[BUG]  [BUGGY]  if(type.isUnknownType()  &&  type.equals(enclosing))  {  return  true;  }  timeout  [FE]                AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(type.isUnknownType()  &&  type.equals(enclosing))  {  return  true;  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(type.isUnknownType()  &&  type.equals(enclosing))  {  return  true;  }	  if(type.isUnknownType()    ||    type.equals(enclosing))    {    return    true;    }    timeout    	compilable	timeout	221	1	replace
289	[BUG]  [BUGGY]  if(type.isVarArgs()  ||  type.equals(enclosing))  {  return  true;  }  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(type.isVarArgs()  ||  type.equals(enclosing))  {  return  true;  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(type.isVarArgs()  ||  type.equals(enclosing))  {  return  true;  }	  if(type.isUnknownType()    ||    type.equals(enclosing))    {    return    true;    }    timeout    	non-compiled	[CE]  cannot  find  symbol	221	None	replace
290	[BUG]  [BUGGY]  JSType  type  =  type.isUnknownType()  &&  type.equals(enclosing);  [CE]  variable  type  is  already  defined  in  method  resolveViaRegistry(ErrorReporter,StaticScope<JSType>)  [FE]                    AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  JSType  type  =  type.isUnknownType()  &&  type.equals(enclosing);  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	JSType  type  =  type.isUnknownType()  &&  type.equals(enclosing);	  if(type.isUnknownType()    ||    type.equals(enclosing))    {    return    true;    }    timeout    	non-compiled	[CE]  variable  type  is  already  defined  in  method  resolveViaRegistry(ErrorReporter,StaticScope<JSType>)	221	None	replace
291	[BUG]  [BUGGY]  Status.checkState(type.isUnknownType()  ||  type.equals(enclosing));  [CE]  cannot  find  symbol  Status  [FE]                      AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  Status.checkState(type.isUnknownType()  ||  type.equals(enclosing));  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	Status.checkState(type.isUnknownType()  ||  type.equals(enclosing));	  if(type.isUnknownType()    ||    type.equals(enclosing))    {    return    true;    }    timeout    	non-compiled	[CE]  cannot  find  symbol  Status	221	None	replace
292	[BUG]  [BUGGY]  if(type.isUnknownType()  ||  type.equals(resolved))  {  return  true;  }  [CE]  resolved  has  private  access  in  JSType  [FE]                        AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(type.isUnknownType()  ||  type.equals(resolved))  {  return  true;  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(type.isUnknownType()  ||  type.equals(resolved))  {  return  true;  }	  if(type.isUnknownType()    ||    type.equals(enclosing))    {    return    true;    }    timeout    	non-compiled	[CE]  resolved  has  private  access  in  JSType	221	None	replace
293	[BUG]  [BUGGY]  JSError.make(t,  enclosing,  type);  [CE]  cannot  find  symbol  JSError  [FE]                          AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  JSError.make(t,  enclosing,  type);  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	JSError.make(t,  enclosing,  type);	  throw    new    IllegalArgumentException(       "       ");    JSError.make(t,    enclosing,    DEFAULT_NON_OBJECT_TYPE);    	non-compiled	[CE]  cannot  find  symbol  JSError	208	None	replace
294	[BUG]  [BUGGY]  JSError.make(t,  type,  DEFAULT_NON_OBJECT_TYPE);  [CE]  cannot  find  symbol  DEFAULT_NON_OBJECT_TYPE  [FE]                            AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  JSError.make(t,  type,  DEFAULT_NON_OBJECT_TYPE);  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	JSError.make(t,  type,  DEFAULT_NON_OBJECT_TYPE);	  throw    new    IllegalArgumentException(       "       ");    JSError.make(t,    enclosing,    DEFAULT_NON_OBJECT_TYPE);    	non-compiled	[CE]  cannot  find  symbol  DEFAULT_NON_OBJECT_TYPE	208	None	replace
295	[BUG]  [BUGGY]  JSError.make(t,  enclosing,  DEFAULT_NON_OBJECT_TYPE,  type);  [CE]  cannot  find  symbol  DEFAULT_NON_OBJECT_TYPE  [FE]                              AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  JSError.make(t,  enclosing,  DEFAULT_NON_OBJECT_TYPE,  type);  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	JSError.make(t,  enclosing,  DEFAULT_NON_OBJECT_TYPE,  type);	  throw    new    IllegalArgumentException(       "       ");    JSError.make(t,    enclosing,    DEFAULT_NON_OBJECT_TYPE);    	non-compiled	[CE]  cannot  find  symbol  DEFAULT_NON_OBJECT_TYPE	208	None	replace
296	[BUG]  [BUGGY]  JSError.make(t,  enclosing,  DEFAULT_NON_OBJECT_TYPE);  [CE]  cannot  find  symbol  DEFAULT_NON_OBJECT_TYPE  [FE]                                AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  JSError.make(t,  enclosing,  DEFAULT_NON_OBJECT_TYPE);  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	JSError.make(t,  enclosing,  DEFAULT_NON_OBJECT_TYPE);	  throw    new    IllegalArgumentException(       "       ");    JSError.make(t,    enclosing,    DEFAULT_NON_OBJECT_TYPE);    	non-compiled	[CE]  cannot  find  symbol  DEFAULT_NON_OBJECT_TYPE	208	None	replace
297	[BUG]  [BUGGY]  JSError.make(t,  enclosing,  DEFAULT_TYPE);  [CE]  cannot  find  symbol  DEFAULT_TYPE  [FE]                                  AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  JSError.make(t,  enclosing,  DEFAULT_TYPE);  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	JSError.make(t,  enclosing,  DEFAULT_TYPE);	  throw    new    IllegalArgumentException(       "       ");    JSError.make(t,    enclosing,    DEFAULT_NON_OBJECT_TYPE);    	non-compiled	[CE]  cannot  find  symbol  DEFAULT_TYPE	208	None	replace
298	[BUG]  [BUGGY]  JSError.make(t,  enclosing,  NO_TYPE);  [CE]  cannot  find  symbol  NO_TYPE  [FE]                                    AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  JSError.make(t,  enclosing,  NO_TYPE);  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	JSError.make(t,  enclosing,  NO_TYPE);	  throw    new    IllegalArgumentException(       "       ");    JSError.make(t,    enclosing,    DEFAULT_NON_OBJECT_TYPE);    	non-compiled	[CE]  cannot  find  symbol  NO_TYPE	208	None	replace
299	[BUG]  [BUGGY]  timeout  [FE]              AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(type!=  null  ||  type.isUnknownType())  {  return  false;  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	add	if(type!=  null  ||  type.isUnknownType())  {  return  false;  }	  if(type    >=    null)    {    return    false;    }    	compilable	timeout	193	1	replace
300	[BUG]  [BUGGY]  if(type!=  null  ||  type.isUnknownType())  {  return  false;  }  timeout  [FE]              AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(type!=  null  ||  type.isUnknownType())  {  return  false;  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(type!=  null  ||  type.isUnknownType())  {  return  false;  }	  if(type    >=    null)    {    return    false;    }    	compilable	timeout	193	1	replace
301	[BUG]  [BUGGY]  timeout  [FE]                AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(enclosing!=  null  ||  validator  ==  null)  {  return  true;  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	add	if(enclosing!=  null  ||  validator  ==  null)  {  return  true;  }	  if(validator!=    null    ||    enclosing    ==    null)    {    return    true;    }    timeout    	compilable	timeout	138	1	replace
302	[BUG]  [BUGGY]  if(enclosing!=  null  ||  validator  ==  null)  {  return  true;  }  timeout  [FE]                AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(enclosing!=  null  ||  validator  ==  null)  {  return  true;  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(enclosing!=  null  ||  validator  ==  null)  {  return  true;  }	  if(validator!=    null    ||    enclosing    ==    null)    {    return    true;    }    timeout    	compilable	timeout	138	1	replace
303	[BUG]  [BUGGY]  timeout  [FE]                  AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(validator  ==  null  ||  enclosing  ==  null)  {  return  false;  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	add	if(validator  ==  null  ||  enclosing  ==  null)  {  return  false;  }	  if(validator!=    null    ||    enclosing    ==    null)    {    return    true;    }    timeout    	compilable	timeout	138	1	replace
304	[BUG]  [BUGGY]  if(validator  ==  null  ||  enclosing  ==  null)  {  return  false;  }  timeout  [FE]                  AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(validator  ==  null  ||  enclosing  ==  null)  {  return  false;  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(validator  ==  null  ||  enclosing  ==  null)  {  return  false;  }	  if(validator!=    null    ||    enclosing    ==    null)    {    return    true;    }    timeout    	compilable	timeout	138	1	replace
305	[BUG]  [BUGGY]  timeout  [FE]                    AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(enclosing  ==  null  ||  validator  ==  null)  {  return  true;  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	add	if(enclosing  ==  null  ||  validator  ==  null)  {  return  true;  }	  if(validator!=    null    ||    enclosing    ==    null)    {    return    true;    }    timeout    	compilable	timeout	138	1	replace
306	[BUG]  [BUGGY]  if(enclosing  ==  null  ||  validator  ==  null)  {  return  true;  }  timeout  [FE]                    AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(enclosing  ==  null  ||  validator  ==  null)  {  return  true;  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(enclosing  ==  null  ||  validator  ==  null)  {  return  true;  }	  if(validator!=    null    ||    enclosing    ==    null)    {    return    true;    }    timeout    	compilable	timeout	138	1	replace
307	[BUG]  [BUGGY]  timeout  [FE]                      AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(validator!=  null  ||  enclosing  ==  null)  {  return  false;  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	add	if(validator!=  null  ||  enclosing  ==  null)  {  return  false;  }	  if(validator!=    null    ||    enclosing    ==    null)    {    return    true;    }    timeout    	compilable	timeout	138	1	replace
308	[BUG]  [BUGGY]  if(validator!=  null  ||  enclosing  ==  null)  {  return  false;  }  timeout  [FE]                      AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(validator!=  null  ||  enclosing  ==  null)  {  return  false;  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(validator!=  null  ||  enclosing  ==  null)  {  return  false;  }	  if(validator!=    null    ||    enclosing    ==    null)    {    return    true;    }    timeout    	compilable	timeout	138	1	replace
309	[BUG]  [BUGGY]  timeout  [FE]                        AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(validator  ==  null  ||  enclosing!=  null)  {  return  false;  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	add	if(validator  ==  null  ||  enclosing!=  null)  {  return  false;  }	  if(validator!=    null    ||    enclosing    ==    null)    {    return    true;    }    timeout    	compilable	timeout	138	1	replace
310	[BUG]  [BUGGY]  if(validator  ==  null  ||  enclosing!=  null)  {  return  false;  }  timeout  [FE]                        AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(validator  ==  null  ||  enclosing!=  null)  {  return  false;  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(validator  ==  null  ||  enclosing!=  null)  {  return  false;  }	  if(validator!=    null    ||    enclosing    ==    null)    {    return    true;    }    timeout    	compilable	timeout	138	1	replace
311	[BUG]  [BUGGY]  if(type.isVarArgs()  &&  type.isFunctionDeclaration())  {  return  false;  }  [CE]  cannot  find  symbol  [FE]                            AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(type.isVarArgs()  &&  type.isFunctionDeclaration())  {  return  false;  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(type.isVarArgs()  &&  type.isFunctionDeclaration())  {  return  false;  }	  if(type.isVarArgs()    ||    type.isFunctionDeclaration())    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol	171	None	replace
312	[BUG]  [BUGGY]  if(type.isFunctionDeclaration()  ||  type.isVarArgs())  {  return  false;  }  [CE]  cannot  find  symbol  [FE]                              AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(type.isFunctionDeclaration()  ||  type.isVarArgs())  {  return  false;  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(type.isFunctionDeclaration()  ||  type.isVarArgs())  {  return  false;  }	  if(type.isVarArgs()    ||    type.isFunctionDeclaration())    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol	171	None	replace
313	[BUG]  [BUGGY]  if(type.isVarArgs()  ||  type.isFunctionDeclaration())return  false;  }  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(type.isVarArgs()  ||  type.isFunctionDeclaration())return  false;  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(type.isVarArgs()  ||  type.isFunctionDeclaration())return  false;  }	  if(type.isVarArgs()    ||    type.isFunctionDeclaration())    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	171	None	replace
314	[BUG]  [BUGGY]  if(type.isConstructor()  ||  type.isFunctionDeclaration())  {  return  false;  }  [CE]  cannot  find  symbol  [FE]                                  AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(type.isConstructor()  ||  type.isFunctionDeclaration())  {  return  false;  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(type.isConstructor()  ||  type.isFunctionDeclaration())  {  return  false;  }	  if(type.isVarArgs()    ||    type.isFunctionDeclaration())    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol	171	None	replace
315	[BUG]  [BUGGY]  if(type.isStatic()  ||  type.isFunctionDeclaration())  {  return  false;  }  [CE]  cannot  find  symbol  [FE]                                    AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(type.isStatic()  ||  type.isFunctionDeclaration())  {  return  false;  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(type.isStatic()  ||  type.isFunctionDeclaration())  {  return  false;  }	  if(type.isVarArgs()    ||    type.isFunctionDeclaration())    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol	171	None	replace
316	[BUG]  [BUGGY]  throw  new  IllegalStateException(   "   ");  throw  new  IllegalStateException( "   ");  [CE]  unreachable  statement  [FE]                              AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  throw  new  IllegalStateException(   "   ");  throw  new  IllegalStateException( "   ");  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	throw    new    IllegalStateException(   "   ");    throw  new  IllegalStateException( "   ");	  timeout    	non-compiled	[CE]  unreachable  statement	126	None	add
317	[BUG]  [BUGGY]  throw  new  IllegalStateException(   "   ");  Throw  new  IllegalStateException( "   ");  [CE]  not  a  statement  [FE]                                AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  throw  new  IllegalStateException(   "   ");  Throw  new  IllegalStateException( "   ");  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	throw    new    IllegalStateException(   "   ");    Throw  new  IllegalStateException( "   ");	  timeout    	non-compiled	[CE]  not  a  statement	126	None	add
318	[BUG]  [BUGGY]  throw  new  IllegalStateException(   "   ");  Throwables.throw  new  IllegalStateException( "   ");  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  throw  new  IllegalStateException(   "   ");  Throwables.throw  new  IllegalStateException( "   ");  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	throw    new    IllegalStateException(   "   ");    Throwables.throw  new  IllegalStateException( "   ");	  timeout    	non-compiled	[CE]  <identifier>  expected	126	None	add
319	[BUG]  [BUGGY]  throw  new  IllegalStateException(   "   ");  System.err.println( "Unresolved  type: "  +  type);  [CE]  unreachable  statement  [FE]                                    AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  throw  new  IllegalStateException(   "   ");  System.err.println( "Unresolved  type: "  +  type);  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	throw    new    IllegalStateException(   "   ");    System.err.println( "Unresolved  type: "  +  type);	  timeout    	non-compiled	[CE]  unreachable  statement	126	None	add
320	[BUG]  [BUGGY]  throw  new  IllegalStateException(   "   ");  JSError.make(t,  enclosing,  sourceName));  [CE]  [FE]                                      AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  throw  new  IllegalStateException(   "   ");  JSError.make(t,  enclosing,  sourceName));  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	throw    new    IllegalStateException(   "   ");    JSError.make(t,  enclosing,  sourceName));	  timeout    	non-compiled	[CE]  	126	None	add
321	[BUG]  [BUGGY]  throw  new  IllegalStateException(   "   ");  JSError.make(t,  enclosing));  [CE]  [FE]                                        AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  throw  new  IllegalStateException(   "   ");  JSError.make(t,  enclosing));  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	throw    new    IllegalStateException(   "   ");    JSError.make(t,  enclosing));	  timeout    	non-compiled	[CE]  	126	None	add
322	[BUG]  [BUGGY]  if(type.isInstanceType()  ||  type.isVarArgs())  {  return  true;  }  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(type.isInstanceType()  ||  type.isVarArgs())  {  return  true;  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(type.isInstanceType()  ||  type.isVarArgs())  {  return  true;  }	  if(type.isVarArgs()    ||    type.isInstanceType())    {    return    true;    }    	non-compiled	[CE]  cannot  find  symbol	194	None	replace
323	[BUG]  [BUGGY]  if(type.isVarArgs()  &&  type.isInstanceType())  {  return  true;  }  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(type.isVarArgs()  &&  type.isInstanceType())  {  return  true;  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(type.isVarArgs()  &&  type.isInstanceType())  {  return  true;  }	  if(type.isVarArgs()    ||    type.isInstanceType())    {    return    true;    }    	non-compiled	[CE]  cannot  find  symbol	194	None	replace
324	[BUG]  [BUGGY]  if(type.isVarArgs()  ||  type.isInstanceType())return  true;  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(type.isVarArgs()  ||  type.isInstanceType())return  true;  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(type.isVarArgs()  ||  type.isInstanceType())return  true;  }	  if(type.isVarArgs()    ||    type.isInstanceType())    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  type	194	None	replace
325	[BUG]  [BUGGY]  if(type.isVarArgs()  ||  type.isConstructor())  {  return  true;  }  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(type.isVarArgs()  ||  type.isConstructor())  {  return  true;  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(type.isVarArgs()  ||  type.isConstructor())  {  return  true;  }	  if(type.isVarArgs()    ||    type.isInstanceType())    {    return    true;    }    	non-compiled	[CE]  cannot  find  symbol	194	None	replace
326	[BUG]  [BUGGY]  Set  <  JSType>  propertyContinuations  =  Sets.newHashSet(enclosing);  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  Set  <  JSType>  propertyContinuations  =  Sets.newHashSet(enclosing);  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	Set  <  JSType>  propertyContinuations  =  Sets.newHashSet(enclosing);	  if(type    ==    null)    {    return    false;    }    if(type    {    null)    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol	172	None	replace
327	[BUG]  [BUGGY]  Set  <  JSType>  propertyContinuations  =  Sets.newHashSet();  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  Set  <  JSType>  propertyContinuations  =  Sets.newHashSet();  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	Set  <  JSType>  propertyContinuations  =  Sets.newHashSet();	  if(type    ==    null)    {    return    false;    }    if(type    {    null)    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol	172	None	replace
328	[BUG]  [BUGGY]  Set  <  JSType>  propertyContinuations  =  Sets.newHashSet(propertyContinuations);  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  Set  <  JSType>  propertyContinuations  =  Sets.newHashSet(propertyContinuations);  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	Set  <  JSType>  propertyContinuations  =  Sets.newHashSet(propertyContinuations);	  if(type    ==    null)    {    return    false;    }    if(type    {    null)    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol	172	None	replace
329	[BUG]  [BUGGY]  timeout  [FE]                          AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]          setReferencedAndResolvedType(type,  t,  enclosing);  setReferencedAndResolvedType(type,  t,  enclosing);  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	add	                setReferencedAndResolvedType(type,    t,    enclosing);    setReferencedAndResolvedType(type,  t,  enclosing);	  timeout    	compilable	timeout	63	1	add
330	[BUG]  [BUGGY]          setReferencedAndResolvedType(type,  t,  enclosing);  setReferencedAndResolvedType(type,  t,  enclosing);  timeout  [FE]                          AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]          setReferencedAndResolvedType(type,  t,  enclosing);  setReferencedAndResolvedType(type,  t,  enclosing);  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	                setReferencedAndResolvedType(type,    t,    enclosing);    setReferencedAndResolvedType(type,  t,  enclosing);	  timeout    	compilable	timeout	63	1	add
331	[BUG]  [BUGGY]  timeout  [FE]                            AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]          setReferencedAndResolvedType(type,  t,  enclosing);  if(type!=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	add	                setReferencedAndResolvedType(type,    t,    enclosing);    if(type!=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);  }	  timeout    	compilable	timeout	63	1	add
332	[BUG]  [BUGGY]          setReferencedAndResolvedType(type,  t,  enclosing);  if(type!=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);  }  timeout  [FE]                            AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]          setReferencedAndResolvedType(type,  t,  enclosing);  if(type!=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	                setReferencedAndResolvedType(type,    t,    enclosing);    if(type!=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);  }	  timeout    	compilable	timeout	63	1	add
333	[BUG]  [BUGGY]          setReferencedAndResolvedType(type,  t,  enclosing);  if(type!=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);  }  else  {  forAnnotations.add(resolveViaRegistry(t,  enclosing));  }  [CE]  cannot  find  symbol  forAnnotations  [FE]                              AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]          setReferencedAndResolvedType(type,  t,  enclosing);  if(type!=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);  }  else  {  forAnnotations.add(resolveViaRegistry(t,  enclosing));  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	                setReferencedAndResolvedType(type,    t,    enclosing);    if(type!=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);  }  else  {  forAnnotations.add(resolveViaRegistry(t,  enclosing));  }	  timeout    	non-compiled	[CE]  cannot  find  symbol  forAnnotations	63	None	add
334	[BUG]  [BUGGY]          setReferencedAndResolvedType(type,  t,  enclosing);  if(type!=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);  }  else  {  forAnnotations.add(validator);  }  [CE]  cannot  find  symbol  forAnnotations  [FE]                                AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]          setReferencedAndResolvedType(type,  t,  enclosing);  if(type!=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);  }  else  {  forAnnotations.add(validator);  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	                setReferencedAndResolvedType(type,    t,    enclosing);    if(type!=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);  }  else  {  forAnnotations.add(validator);  }	  timeout    	non-compiled	[CE]  cannot  find  symbol  forAnnotations	63	None	add
335	[BUG]  [BUGGY]          setReferencedAndResolvedType(type,  t,  enclosing);  if(type!=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);  }  else  {  forAnnotations.add(propertyContinuation);  }  [CE]  cannot  find  symbol  propertyContinuation  [FE]                                  AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]          setReferencedAndResolvedType(type,  t,  enclosing);  if(type!=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);  }  else  {  forAnnotations.add(propertyContinuation);  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	                setReferencedAndResolvedType(type,    t,    enclosing);    if(type!=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);  }  else  {  forAnnotations.add(propertyContinuation);  }	  timeout    	non-compiled	[CE]  cannot  find  symbol  propertyContinuation	63	None	add
336	[BUG]  [BUGGY]          setReferencedAndResolvedType(type,  t,  enclosing);  if(type!=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);  }  else  {  forAnnotations.clear();  }  [CE]  cannot  find  symbol  forAnnotations  [FE]                                    AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]          setReferencedAndResolvedType(type,  t,  enclosing);  if(type!=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);  }  else  {  forAnnotations.clear();  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	                setReferencedAndResolvedType(type,    t,    enclosing);    if(type!=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);  }  else  {  forAnnotations.clear();  }	  timeout    	non-compiled	[CE]  cannot  find  symbol  forAnnotations	63	None	add
337	[BUG]  [BUGGY]          setReferencedAndResolvedType(type,  t,  enclosing);  if(type!=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);  }  else  {  forAnnotations.add(resolveViaRegistry(t,  propertyNode,  enclosing));  }  [CE]  cannot  find  symbol  propertyNode  [FE]                                      AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]          setReferencedAndResolvedType(type,  t,  enclosing);  if(type!=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);  }  else  {  forAnnotations.add(resolveViaRegistry(t,  propertyNode,  enclosing));  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	                setReferencedAndResolvedType(type,    t,    enclosing);    if(type!=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);  }  else  {  forAnnotations.add(resolveViaRegistry(t,  propertyNode,  enclosing));  }	  timeout    	non-compiled	[CE]  cannot  find  symbol  propertyNode	63	None	add
338	[BUG]  [BUGGY]  if(enclosing!=  null)  {  if(type  ==  null)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(enclosing!=  null)  {  if(type  ==  null)  {  return  false;  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(enclosing!=  null)  {  if(type  ==  null)  {  return  false;  }	  if(type!=    null)    {    return    false;    }    if(type    >=    null)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
339	[BUG]  [BUGGY]  Predicate  validator  =  t.getValue();  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  Predicate  validator  =  t.getValue();  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	Predicate  validator  =  t.getValue();	  if(type!=    null)    {    return    false;    }    if(type    >=    null)    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol	76	None	replace
340	[BUG]  [BUGGY]  if(type!=  null)  {  throw  new  IllegalArgumentException(   "   ");  }  else  {  setReferencedAndResolvedType(type,  t,  enclosing);  return  true;  }  if(type!=  null)  {  throw  new  IllegalArgumentException( "   ");  }  else  {  setReferencedAndResolvedType(type,  t,  enclosing);  return  true;  }  [CE]  unreachable  statement  [FE]                            AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(type!=  null)  {  throw  new  IllegalArgumentException(   "   ");  }  else  {  setReferencedAndResolvedType(type,  t,  enclosing);  return  true;  }  if(type!=  null)  {  throw  new  IllegalArgumentException( "   ");  }  else  {  setReferencedAndResolvedType(type,  t,  enclosing);  return  true;  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(type!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    else    {    setReferencedAndResolvedType(type,    t,    enclosing);    return    true;    }    if(type!=  null)  {  throw  new  IllegalArgumentException( "   ");  }  else  {  setReferencedAndResolvedType(type,  t,  enclosing);  return  true;  }	  timeout    	non-compiled	[CE]  unreachable  statement	177	None	add
341	[BUG]  [BUGGY]  if(type!=  null)  {  throw  new  IllegalArgumentException(   "   ");  }  else  {  setReferencedAndResolvedType(type,  t,  enclosing);  return  true;  }  if(type  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  else  {  setReferencedAndResolvedType(type,  t,  enclosing);  return  true;  }  [CE]  unreachable  statement  [FE]                              AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(type!=  null)  {  throw  new  IllegalArgumentException(   "   ");  }  else  {  setReferencedAndResolvedType(type,  t,  enclosing);  return  true;  }  if(type  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  else  {  setReferencedAndResolvedType(type,  t,  enclosing);  return  true;  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(type!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    else    {    setReferencedAndResolvedType(type,    t,    enclosing);    return    true;    }    if(type  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  else  {  setReferencedAndResolvedType(type,  t,  enclosing);  return  true;  }	  timeout    	non-compiled	[CE]  unreachable  statement	177	None	add
342	[BUG]  [BUGGY]  if(type!=  null)  {  throw  new  IllegalArgumentException(   "   ");  }  else  {  setReferencedAndResolvedType(type,  t,  enclosing);  return  true;  }  if(type!=  null)  {  throw  new  IllegalArgumentException( " ".);  }  else  {  setReferencedAndResolvedType(type,  t,  enclosing);  return  true;  }  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(type!=  null)  {  throw  new  IllegalArgumentException(   "   ");  }  else  {  setReferencedAndResolvedType(type,  t,  enclosing);  return  true;  }  if(type!=  null)  {  throw  new  IllegalArgumentException( " ".);  }  else  {  setReferencedAndResolvedType(type,  t,  enclosing);  return  true;  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(type!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    else    {    setReferencedAndResolvedType(type,    t,    enclosing);    return    true;    }    if(type!=  null)  {  throw  new  IllegalArgumentException( " ".);  }  else  {  setReferencedAndResolvedType(type,  t,  enclosing);  return  true;  }	  timeout    	non-compiled	[CE]  <identifier>  expected	177	None	add
343	[BUG]  [BUGGY]  if(type!=  null)  {  throw  new  IllegalArgumentException(   "   ");  }  else  {  setReferencedAndResolvedType(type,  t,  enclosing);  return  true;  }  if(type  >=  null)  {  throw  new  IllegalArgumentException( "   ");  }  else  {  setReferencedAndResolvedType(type,  t,  enclosing);  return  true;  }  [CE]  bad  operand  types  for  binary  operator  [FE]                                  AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(type!=  null)  {  throw  new  IllegalArgumentException(   "   ");  }  else  {  setReferencedAndResolvedType(type,  t,  enclosing);  return  true;  }  if(type  >=  null)  {  throw  new  IllegalArgumentException( "   ");  }  else  {  setReferencedAndResolvedType(type,  t,  enclosing);  return  true;  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(type!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    else    {    setReferencedAndResolvedType(type,    t,    enclosing);    return    true;    }    if(type  >=  null)  {  throw  new  IllegalArgumentException( "   ");  }  else  {  setReferencedAndResolvedType(type,  t,  enclosing);  return  true;  }	  timeout    	non-compiled	[CE]  bad  operand  types  for  binary  operator  	177	None	add
344	[BUG]  [BUGGY]  if(type!=  null)  {  throw  new  IllegalArgumentException(   "   ");  }  else  {  setReferencedAndResolvedType(type,  t,  enclosing);  return  true;  }  if(type!=  null)  {  throw  new  IllegalArgumentException( "   ");  }  else  {  setReferencedAndResolvedType(type,  t,  enclosing);  return  false;  }  [CE]  unreachable  statement  [FE]                                    AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(type!=  null)  {  throw  new  IllegalArgumentException(   "   ");  }  else  {  setReferencedAndResolvedType(type,  t,  enclosing);  return  true;  }  if(type!=  null)  {  throw  new  IllegalArgumentException( "   ");  }  else  {  setReferencedAndResolvedType(type,  t,  enclosing);  return  false;  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(type!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    else    {    setReferencedAndResolvedType(type,    t,    enclosing);    return    true;    }    if(type!=  null)  {  throw  new  IllegalArgumentException( "   ");  }  else  {  setReferencedAndResolvedType(type,  t,  enclosing);  return  false;  }	  timeout    	non-compiled	[CE]  unreachable  statement	177	None	add
345	[BUG]  [BUGGY]  timeout  [FE]                        AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(type  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  else  {  setReferencedAndResolvedType(type,  t,  enclosing);  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	add	if(type  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  else  {  setReferencedAndResolvedType(type,  t,  enclosing);  }	  throw    new    IllegalArgumentException(       "       ");    throw    new    IllegalArgumentException(   "       ");    	compilable	timeout	22	1	replace
346	[BUG]  [BUGGY]  if(type  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  else  {  setReferencedAndResolvedType(type,  t,  enclosing);  }  timeout  [FE]                        AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(type  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  else  {  setReferencedAndResolvedType(type,  t,  enclosing);  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(type  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  else  {  setReferencedAndResolvedType(type,  t,  enclosing);  }	  throw    new    IllegalArgumentException(       "       ");    throw    new    IllegalArgumentException(   "       ");    	compilable	timeout	22	1	replace
347	[BUG]  [BUGGY]  if(type!=  null)  {  throw  new  IllegalArgumentException( " ");  }  else  {  setReferencedAndResolvedType(type,  t,  forAnnotations);  }  [CE]  cannot  find  symbol  forAnnotations  [FE]                          AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(type!=  null)  {  throw  new  IllegalArgumentException( " ");  }  else  {  setReferencedAndResolvedType(type,  t,  forAnnotations);  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(type!=  null)  {  throw  new  IllegalArgumentException( " ");  }  else  {  setReferencedAndResolvedType(type,  t,  forAnnotations);  }	  throw    new    IllegalArgumentException(       "       ");    throw    new    IllegalArgumentException(   "       ");    	non-compiled	[CE]  cannot  find  symbol  forAnnotations	22	None	replace
348	[BUG]  [BUGGY]  timeout  [FE]                      AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(type!=  null  ||!type.equals(enclosing))  {  return  false;  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	add	if(type!=  null  ||!type.equals(enclosing))  {  return  false;  }	  if(type!=    null    ||!type.equals(enclosing))    {    return    true;    }    timeout    	compilable	timeout	143	1	replace
349	[BUG]  [BUGGY]  if(type!=  null  ||!type.equals(enclosing))  {  return  false;  }  timeout  [FE]                      AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(type!=  null  ||!type.equals(enclosing))  {  return  false;  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(type!=  null  ||!type.equals(enclosing))  {  return  false;  }	  if(type!=    null    ||!type.equals(enclosing))    {    return    true;    }    timeout    	compilable	timeout	143	1	replace
350	[BUG]  [BUGGY]  timeout  [FE]                        AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(type!=  null  &&!type.equals(enclosing))  {  return  true;  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	add	if(type!=  null  &&!type.equals(enclosing))  {  return  true;  }	  if(type!=    null    ||!type.equals(enclosing))    {    return    true;    }    timeout    	compilable	timeout	143	1	replace
351	[BUG]  [BUGGY]  if(type!=  null  &&!type.equals(enclosing))  {  return  true;  }  timeout  [FE]                        AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(type!=  null  &&!type.equals(enclosing))  {  return  true;  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(type!=  null  &&!type.equals(enclosing))  {  return  true;  }	  if(type!=    null    ||!type.equals(enclosing))    {    return    true;    }    timeout    	compilable	timeout	143	1	replace
352	[BUG]  [BUGGY]  timeout  [FE]                          AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(enclosing!=  null  ||!type.equals(enclosing))  {  return  true;  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	add	if(enclosing!=  null  ||!type.equals(enclosing))  {  return  true;  }	  if(type!=    null    ||!type.equals(enclosing))    {    return    true;    }    timeout    	compilable	timeout	143	1	replace
353	[BUG]  [BUGGY]  if(enclosing!=  null  ||!type.equals(enclosing))  {  return  true;  }  timeout  [FE]                          AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(enclosing!=  null  ||!type.equals(enclosing))  {  return  true;  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(enclosing!=  null  ||!type.equals(enclosing))  {  return  true;  }	  if(type!=    null    ||!type.equals(enclosing))    {    return    true;    }    timeout    	compilable	timeout	143	1	replace
354	[BUG]  [BUGGY]  timeout  [FE]                            AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(type  ==  null  ||!type.equals(enclosing))  {  return  true;  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	add	if(type  ==  null  ||!type.equals(enclosing))  {  return  true;  }	  if(type!=    null    ||!type.equals(enclosing))    {    return    true;    }    timeout    	compilable	timeout	143	1	replace
355	[BUG]  [BUGGY]  if(type  ==  null  ||!type.equals(enclosing))  {  return  true;  }  timeout  [FE]                            AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(type  ==  null  ||!type.equals(enclosing))  {  return  true;  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(type  ==  null  ||!type.equals(enclosing))  {  return  true;  }	  if(type!=    null    ||!type.equals(enclosing))    {    return    true;    }    timeout    	compilable	timeout	143	1	replace
356	[BUG]  [BUGGY]  timeout  [FE]                              AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(type  ==  null  &&!type.equals(enclosing))  {  return  true;  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	add	if(type  ==  null  &&!type.equals(enclosing))  {  return  true;  }	  if(type!=    null    ||!type.equals(enclosing))    {    return    true;    }    timeout    	compilable	timeout	143	1	replace
357	[BUG]  [BUGGY]  if(type  ==  null  &&!type.equals(enclosing))  {  return  true;  }  timeout  [FE]                              AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(type  ==  null  &&!type.equals(enclosing))  {  return  true;  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(type  ==  null  &&!type.equals(enclosing))  {  return  true;  }	  if(type!=    null    ||!type.equals(enclosing))    {    return    true;    }    timeout    	compilable	timeout	143	1	replace
358	[BUG]  [BUGGY]  timeout  [FE]                                AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  setReferencedAndResolvedType(type,  t,  enclosing);  return  false;  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	add	setReferencedAndResolvedType(type,  t,  enclosing);  return  false;	          setReferencedAndResolvedType(type,    t,    enclosing);    return    true;    	compilable	timeout	67	1	replace
359	[BUG]  [BUGGY]  setReferencedAndResolvedType(type,  t,  enclosing);  return  false;  timeout  [FE]                                AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  setReferencedAndResolvedType(type,  t,  enclosing);  return  false;  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	setReferencedAndResolvedType(type,  t,  enclosing);  return  false;	          setReferencedAndResolvedType(type,    t,    enclosing);    return    true;    	compilable	timeout	67	1	replace
360	[BUG]  [BUGGY]  timeout  [FE]                                  AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(type!=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);  return  true;  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	add	if(type!=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);  return  true;  }	          setReferencedAndResolvedType(type,    t,    enclosing);    return    true;    	compilable	timeout	67	1	replace
361	[BUG]  [BUGGY]  if(type!=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);  return  true;  }  timeout  [FE]                                  AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(type!=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);  return  true;  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(type!=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);  return  true;  }	          setReferencedAndResolvedType(type,    t,    enclosing);    return    true;    	compilable	timeout	67	1	replace
362	[BUG]  [BUGGY]  timeout  [FE]                                    AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(type!=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);  return  false;  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	add	if(type!=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);  return  false;  }	          setReferencedAndResolvedType(type,    t,    enclosing);    return    true;    	compilable	timeout	67	1	replace
363	[BUG]  [BUGGY]  if(type!=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);  return  false;  }  timeout  [FE]                                    AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(type!=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);  return  false;  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(type!=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);  return  false;  }	          setReferencedAndResolvedType(type,    t,    enclosing);    return    true;    	compilable	timeout	67	1	replace
364	[BUG]  [BUGGY]  timeout  [FE]                                      AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(type  ==  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);  return  true;  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	add	if(type  ==  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);  return  true;  }	          setReferencedAndResolvedType(type,    t,    enclosing);    return    true;    	compilable	timeout	67	1	replace
365	[BUG]  [BUGGY]  if(type  ==  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);  return  true;  }  timeout  [FE]                                      AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(type  ==  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);  return  true;  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(type  ==  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);  return  true;  }	          setReferencedAndResolvedType(type,    t,    enclosing);    return    true;    	compilable	timeout	67	1	replace
366	[BUG]  [BUGGY]  timeout  [FE]                                        AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(enclosing!=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);  return  true;  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	add	if(enclosing!=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);  return  true;  }	          setReferencedAndResolvedType(type,    t,    enclosing);    return    true;    	compilable	timeout	67	1	replace
367	[BUG]  [BUGGY]  if(enclosing!=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);  return  true;  }  timeout  [FE]                                        AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(enclosing!=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);  return  true;  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(enclosing!=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);  return  true;  }	          setReferencedAndResolvedType(type,    t,    enclosing);    return    true;    	compilable	timeout	67	1	replace
368	[BUG]  [BUGGY]  timeout  [FE]                                          AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(type  ==  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);  return  false;  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	add	if(type  ==  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);  return  false;  }	          setReferencedAndResolvedType(type,    t,    enclosing);    return    true;    	compilable	timeout	67	1	replace
369	[BUG]  [BUGGY]  if(type  ==  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);  return  false;  }  timeout  [FE]                                          AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(type  ==  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);  return  false;  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(type  ==  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);  return  false;  }	          setReferencedAndResolvedType(type,    t,    enclosing);    return    true;    	compilable	timeout	67	1	replace
370	[BUG]  [BUGGY]  timeout  [FE]                                            AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(enclosing!=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);  return  false;  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	add	if(enclosing!=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);  return  false;  }	          setReferencedAndResolvedType(type,    t,    enclosing);    return    true;    	compilable	timeout	67	1	replace
371	[BUG]  [BUGGY]  if(enclosing!=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);  return  false;  }  timeout  [FE]                                            AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(enclosing!=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);  return  false;  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(enclosing!=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);  return  false;  }	          setReferencedAndResolvedType(type,    t,    enclosing);    return    true;    	compilable	timeout	67	1	replace
372	[BUG]  [BUGGY]  if(validator  ||  validator)  {  return  true;  }  [CE]  bad  operand  types  for  binary  operator  '||'  [FE]                    AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(validator  ||  validator)  {  return  true;  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(validator  ||  validator)  {  return  true;  }	  if(!validator    &&    validator)    {    return    true;    }    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '||'	198	None	replace
373	[BUG]  [BUGGY]  if(!validator  ||  validator)  {  return  true;  }  [CE]  bad  operand  type  Predicate<JSType>  for  unary  operator  '!'  [FE]                      AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(!validator  ||  validator)  {  return  true;  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(!validator  ||  validator)  {  return  true;  }	  if(!validator    &&    validator)    {    return    true;    }    	non-compiled	[CE]  bad  operand  type  Predicate<JSType>  for  unary  operator  '!'	198	None	replace
374	[BUG]  [BUGGY]  if(!validator  &&  validator)  {  return  false;  }  [CE]  bad  operand  type  Predicate<JSType>  for  unary  operator  '!'  [FE]                        AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(!validator  &&  validator)  {  return  false;  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(!validator  &&  validator)  {  return  false;  }	  if(!validator    &&    validator)    {    return    true;    }    	non-compiled	[CE]  bad  operand  type  Predicate<JSType>  for  unary  operator  '!'	198	None	replace
375	[BUG]  [BUGGY]  validator  ||  validator)  {  return  true;  }  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  validator  ||  validator)  {  return  true;  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	validator  ||  validator)  {  return  true;  }	  if(!validator    &&    validator)    {    return    true;    }    	non-compiled	[CE]  not  a  statement	198	None	replace
376	[BUG]  [BUGGY]  if(!validator  &&  validate)  {  return  false;  }  [CE]  bad  operand  type  Predicate<JSType>  for  unary  operator  '!'  [FE]                            AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(!validator  &&  validate)  {  return  false;  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(!validator  &&  validate)  {  return  false;  }	  if(!validator    &&    validator)    {    return    true;    }    	non-compiled	[CE]  bad  operand  type  Predicate<JSType>  for  unary  operator  '!'	198	None	replace
377	[BUG]  [BUGGY]  Validator.notNull(type);  [CE]  cannot  find  symbol  Validator  [FE]                              AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  Validator.notNull(type);  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	Validator.notNull(type);	  if(!validator    &&    validator)    {    return    true;    }    	non-compiled	[CE]  cannot  find  symbol  Validator	198	None	replace
378	[BUG]  [BUGGY]  if(type  ==  null  ||  enclosing)  {  return  false;  }  [CE]  bad  operand  types  for  binary  operator  '||'  [FE]              AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(type  ==  null  ||  enclosing)  {  return  false;  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(type  ==  null  ||  enclosing)  {  return  false;  }	  if(type    ==    null    ||    forAnnotations)    {    return    false;    }    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '||'	131	None	replace
379	[BUG]  [BUGGY]  if(type  ==  null  ||  inferred)  {  return  false;  }  [CE]  cannot  find  symbol  inferred  [FE]                AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(type  ==  null  ||  inferred)  {  return  false;  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(type  ==  null  ||  inferred)  {  return  false;  }	  if(type    ==    null    ||    forAnnotations)    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol  inferred	131	None	replace
380	[BUG]  [BUGGY]  if(type  ==  null  ||  propertyContinuations)  {  return  false;  }  [CE]  bad  operand  types  for  binary  operator  '||'  [FE]                  AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(type  ==  null  ||  propertyContinuations)  {  return  false;  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(type  ==  null  ||  propertyContinuations)  {  return  false;  }	  if(type    ==    null    ||    forAnnotations)    {    return    false;    }    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '||'	131	None	replace
381	[BUG]  [BUGGY]  if(type  ==  null  ||  type.forAnnotations)  {  return  false;  }  [CE]  cannot  find  symbol  forAnnotations  [FE]                    AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(type  ==  null  ||  type.forAnnotations)  {  return  false;  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(type  ==  null  ||  type.forAnnotations)  {  return  false;  }	  if(type    ==    null    ||    forAnnotations)    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol  forAnnotations	131	None	replace
382	[BUG]  [BUGGY]  if(type  ==  null  ||  type.inferred)  {  return  false;  }  [CE]  cannot  find  symbol  inferred  [FE]                      AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(type  ==  null  ||  type.inferred)  {  return  false;  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(type  ==  null  ||  type.inferred)  {  return  false;  }	  if(type    ==    null    ||    forAnnotations)    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol  inferred	131	None	replace
383	[BUG]  [BUGGY]  if(type  ==  null  ||  forAnnotations.size()  >  0)  {  return  false;  }  [CE]  cannot  find  symbol  forAnnotations  [FE]                        AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(type  ==  null  ||  forAnnotations.size()  >  0)  {  return  false;  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(type  ==  null  ||  forAnnotations.size()  >  0)  {  return  false;  }	  if(type    ==    null    ||    forAnnotations)    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol  forAnnotations	131	None	replace
384	[BUG]  [BUGGY]  if(type.isVarArgs()  ||  type.isStatic())return  false;  }  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(type.isVarArgs()  ||  type.isStatic())return  false;  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(type.isVarArgs()  ||  type.isStatic())return  false;  }	  if(type.isVarArgs()    ||    type.isStatic())    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	85	None	replace
385	[BUG]  [BUGGY]  if(type.isVarArgs()  &&  type.isStatic())  {  return  false;  }  [CE]  cannot  find  symbol  [FE]                                  AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(type.isVarArgs()  &&  type.isStatic())  {  return  false;  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(type.isVarArgs()  &&  type.isStatic())  {  return  false;  }	  if(type.isVarArgs()    ||    type.isStatic())    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol	85	None	replace
386	[BUG]  [BUGGY]  if(type.isStatic()  ||  type.isVarArgs())  {  return  false;  }  [CE]  cannot  find  symbol  [FE]                                    AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(type.isStatic()  ||  type.isVarArgs())  {  return  false;  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(type.isStatic()  ||  type.isVarArgs())  {  return  false;  }	  if(type.isVarArgs()    ||    type.isStatic())    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol	85	None	replace
387	[BUG]  [BUGGY]  if(registry.isVarArgs()  ||  type.isStatic())  {  return  false;  }  [CE]  cannot  find  symbol  [FE]                                      AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(registry.isVarArgs()  ||  type.isStatic())  {  return  false;  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(registry.isVarArgs()  ||  type.isStatic())  {  return  false;  }	  if(type.isVarArgs()    ||    type.isStatic())    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol	85	None	replace
388	[BUG]  [BUGGY]  if(type.isVarArgs()  ||  type.isStatic())return  false;  [CE]  cannot  find  symbol  [FE]                                        AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(type.isVarArgs()  ||  type.isStatic())return  false;  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(type.isVarArgs()  ||  type.isStatic())return  false;	  if(type.isVarArgs()    ||    type.isStatic())    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol	85	None	replace
389	[BUG]  [BUGGY]  if(type.isAnnotationType())  {  return  true;  }  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(type.isAnnotationType())  {  return  true;  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(type.isAnnotationType())  {  return  true;  }	  if(type.isUnknownType())    {    return    true;    }    if(Type.isUnknownType())    {    return    true;    }    	non-compiled	[CE]  cannot  find  symbol	106	None	replace
390	[BUG]  [BUGGY]  if(type.isAnnotatedType())  {  return  true;  }  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(type.isAnnotatedType())  {  return  true;  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(type.isAnnotatedType())  {  return  true;  }	  if(type.isUnknownType())    {    return    true;    }    if(Type.isUnknownType())    {    return    true;    }    	non-compiled	[CE]  cannot  find  symbol	106	None	replace
391	[BUG]  [BUGGY]  if(type.isNativeType())  {  return  true;  }  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(type.isNativeType())  {  return  true;  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(type.isNativeType())  {  return  true;  }	  if(type.isUnknownType())    {    return    true;    }    if(Type.isUnknownType())    {    return    true;    }    	non-compiled	[CE]  cannot  find  symbol	106	None	replace
392	[BUG]  [BUGGY]  if(type.isReferenced()  &&  type.isAnnotated())  {  return  true;  }  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(type.isReferenced()  &&  type.isAnnotated())  {  return  true;  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(type.isReferenced()  &&  type.isAnnotated())  {  return  true;  }	  if(type.isReferenced()    ||    type.isAnnotated())    {    return    true;    }    	non-compiled	[CE]  cannot  find  symbol	119	None	replace
393	[BUG]  [BUGGY]  if(type.isReferenced()  ||  type.isAnnotated()  ||  forAnnotations)  {  return  true;  }  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(type.isReferenced()  ||  type.isAnnotated()  ||  forAnnotations)  {  return  true;  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(type.isReferenced()  ||  type.isAnnotated()  ||  forAnnotations)  {  return  true;  }	  if(type.isReferenced()    ||    type.isAnnotated())    {    return    true;    }    	non-compiled	[CE]  cannot  find  symbol	119	None	replace
394	[BUG]  [BUGGY]  if(type.isReferenced()  ||  type.isAnnotated())return  true;  }  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(type.isReferenced()  ||  type.isAnnotated())return  true;  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(type.isReferenced()  ||  type.isAnnotated())return  true;  }	  if(type.isReferenced()    ||    type.isAnnotated())    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  type	119	None	replace
395	[BUG]  [BUGGY]  if(type.isReferenced()  ||  forAnnotations.isAnnotated())  {  return  true;  }  [CE]  cannot  find  symbol  [FE]                            AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(type.isReferenced()  ||  forAnnotations.isAnnotated())  {  return  true;  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(type.isReferenced()  ||  forAnnotations.isAnnotated())  {  return  true;  }	  if(type.isReferenced()    ||    type.isAnnotated())    {    return    true;    }    	non-compiled	[CE]  cannot  find  symbol	119	None	replace
396	[BUG]  [BUGGY]  if(resolved.isReferenced()  ||  type.isAnnotated())  {  return  true;  }  [CE]  resolved  has  private  access  in  JSType  [FE]                              AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(resolved.isReferenced()  ||  type.isAnnotated())  {  return  true;  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(resolved.isReferenced()  ||  type.isAnnotated())  {  return  true;  }	  if(type.isReferenced()    ||    type.isAnnotated())    {    return    true;    }    	non-compiled	[CE]  resolved  has  private  access  in  JSType	119	None	replace
397	[BUG]  [BUGGY]  if(type.isReferenced()  ||  type.isAnnotated())return  false;  }  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(type.isReferenced()  ||  type.isAnnotated())return  false;  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(type.isReferenced()  ||  type.isAnnotated())return  false;  }	  if(type.isReferenced()    ||    type.isAnnotated())    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  type	119	None	replace
398	[BUG]  [BUGGY]  if(!validator  &&  validator.equals(type))  {  return  false;  }  [CE]  bad  operand  type  Predicate<JSType>  for  unary  operator  '!'  [FE]                    AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(!validator  &&  validator.equals(type))  {  return  false;  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(!validator  &&  validator.equals(type))  {  return  false;  }	  if(!validator    &&    validator.equals(type))    {    return    true;    }    	non-compiled	[CE]  bad  operand  type  Predicate<JSType>  for  unary  operator  '!'	88	None	replace
399	[BUG]  [BUGGY]  if(!validator  ||  validator.equals(type))  {  return  true;  }  [CE]  bad  operand  type  Predicate<JSType>  for  unary  operator  '!'  [FE]                      AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(!validator  ||  validator.equals(type))  {  return  true;  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(!validator  ||  validator.equals(type))  {  return  true;  }	  if(!validator    &&    validator.equals(type))    {    return    true;    }    	non-compiled	[CE]  bad  operand  type  Predicate<JSType>  for  unary  operator  '!'	88	None	replace
400	[BUG]  [BUGGY]  timeout  [FE]                        AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(!validator.equals(type))  {  return  true;  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	add	if(!validator.equals(type))  {  return  true;  }	  if(!validator    &&    validator.equals(type))    {    return    true;    }    	compilable	timeout	88	1	replace
401	[BUG]  [BUGGY]  if(!validator.equals(type))  {  return  true;  }  timeout  [FE]                        AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(!validator.equals(type))  {  return  true;  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(!validator.equals(type))  {  return  true;  }	  if(!validator    &&    validator.equals(type))    {    return    true;    }    	compilable	timeout	88	1	replace
402	[BUG]  [BUGGY]  ForAnnotations  inferred  =  true;  forAnnotations  =  inferred;  [CE]  cannot  find  symbol  [FE]                          AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  ForAnnotations  inferred  =  true;  forAnnotations  =  inferred;  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	ForAnnotations  inferred  =  true;  forAnnotations  =  inferred;	          if(type.isSyntheticType())    {    forAnnotations    inferred    =    true;    forAnnotations    =    inferred;    }    	non-compiled	[CE]  cannot  find  symbol	238	None	replace
403	[BUG]  [BUGGY]  forAnnotations.isSyntheticType();  [CE]  cannot  find  symbol  forAnnotations  [FE]                            AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  forAnnotations.isSyntheticType();  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	forAnnotations.isSyntheticType();	          if(type.isSyntheticType())    {    forAnnotations    inferred    =    true;    forAnnotations    =    inferred;    }    	non-compiled	[CE]  cannot  find  symbol  forAnnotations	238	None	replace
404	[BUG]  [BUGGY]  Annotations  inferred  =  true;  forAnnotations  =  inferred;  [CE]  cannot  find  symbol  [FE]                              AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  Annotations  inferred  =  true;  forAnnotations  =  inferred;  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	Annotations  inferred  =  true;  forAnnotations  =  inferred;	          if(type.isSyntheticType())    {    forAnnotations    inferred    =    true;    forAnnotations    =    inferred;    }    	non-compiled	[CE]  cannot  find  symbol	238	None	replace
405	[BUG]  [BUGGY]  if(type!=  null)  {  forAnnotations  |=  Collections.emptyList();  lineno  =  type.intValue();  return  true;  }  [CE]  cannot  find  symbol  forAnnotations  [FE]                            AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(type!=  null)  {  forAnnotations  |=  Collections.emptyList();  lineno  =  type.intValue();  return  true;  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(type!=  null)  {  forAnnotations  |=  Collections.emptyList();  lineno  =  type.intValue();  return  true;  }	  if(type!=    null)    {    forAnnotations    |=    Collections.emptyList();    charno    =    type.intValue();    return    true;    }    	non-compiled	[CE]  cannot  find  symbol  forAnnotations	215	None	replace
406	[BUG]  [BUGGY]  forAnnotations  |=  Collections.emptyList();  charno  =  type.intValue();  return  true;  [CE]  cannot  find  symbol  forAnnotations  [FE]                              AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  forAnnotations  |=  Collections.emptyList();  charno  =  type.intValue();  return  true;  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	forAnnotations  |=  Collections.emptyList();  charno  =  type.intValue();  return  true;	  if(type!=    null)    {    forAnnotations    |=    Collections.emptyList();    charno    =    type.intValue();    return    true;    }    	non-compiled	[CE]  cannot  find  symbol  forAnnotations	215	None	replace
407	[BUG]  [BUGGY]  inferred  |=  Collections.emptyList();  charno  =  type.intValue();  return  true;  [CE]  cannot  find  symbol  inferred  [FE]                                AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  inferred  |=  Collections.emptyList();  charno  =  type.intValue();  return  true;  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	inferred  |=  Collections.emptyList();  charno  =  type.intValue();  return  true;	  if(type!=    null)    {    forAnnotations    |=    Collections.emptyList();    charno    =    type.intValue();    return    true;    }    	non-compiled	[CE]  cannot  find  symbol  inferred	215	None	replace
408	[BUG]  [BUGGY]  if(type!=  null)  {  forAnnotations  |=  collection.emptyList();  charno  =  type.intValue();  return  true;  }  [CE]  cannot  find  symbol  forAnnotations  [FE]                                  AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(type!=  null)  {  forAnnotations  |=  collection.emptyList();  charno  =  type.intValue();  return  true;  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(type!=  null)  {  forAnnotations  |=  collection.emptyList();  charno  =  type.intValue();  return  true;  }	  if(type!=    null)    {    forAnnotations    |=    Collections.emptyList();    charno    =    type.intValue();    return    true;    }    	non-compiled	[CE]  cannot  find  symbol  forAnnotations	215	None	replace
409	[BUG]  [BUGGY]  while(type!=  null)  {  forAnnotations  |=  Collections.emptyList();  charno  =  type.intValue();  return  true;  }  [CE]  cannot  find  symbol  forAnnotations  [FE]                                    AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  while(type!=  null)  {  forAnnotations  |=  Collections.emptyList();  charno  =  type.intValue();  return  true;  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	while(type!=  null)  {  forAnnotations  |=  Collections.emptyList();  charno  =  type.intValue();  return  true;  }	  if(type!=    null)    {    forAnnotations    |=    Collections.emptyList();    charno    =    type.intValue();    return    true;    }    	non-compiled	[CE]  cannot  find  symbol  forAnnotations	215	None	replace
410	[BUG]  [BUGGY]  parent!=  null  &&  validator.resolveViaRegistry(t,  type);  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  parent!=  null  &&  validator.resolveViaRegistry(t,  type);  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	parent!=  null  &&  validator.resolveViaRegistry(t,  type);	  if(validator    ==    null)    {    return    false;    }    timeout    	non-compiled	[CE]  not  a  statement	31	None	replace
411	[BUG]  [BUGGY]  if(type  ==  null)  {  if(type  ==  null)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(type  ==  null)  {  if(type  ==  null)  {  return  false;  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(type  ==  null)  {  if(type  ==  null)  {  return  false;  }	  if(type    ==    null)    {    return    true;    }    If(type    ==    null)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
412	[BUG]  [BUGGY]  if(type  ==  null)  {  if(forAnnotations  ==  null)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(type  ==  null)  {  if(forAnnotations  ==  null)  {  return  false;  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(type  ==  null)  {  if(forAnnotations  ==  null)  {  return  false;  }	  if(type    ==    null)    {    return    true;    }    If(type    ==    null)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
413	[BUG]  [BUGGY]  if(type!=  null)  {  if(forAnnotations  ==  null)  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(type!=  null)  {  if(forAnnotations  ==  null)  {  return  true;  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(type!=  null)  {  if(forAnnotations  ==  null)  {  return  true;  }	  if(type    ==    null)    {    return    true;    }    If(type    ==    null)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
414	[BUG]  [BUGGY]  forAnnotations  =  type.getAnnotations();  [CE]  cannot  find  symbol  forAnnotations  [FE]                              AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  forAnnotations  =  type.getAnnotations();  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	forAnnotations  =  type.getAnnotations();	  forAnnotations    =    enclosing.getAnnotations();    	non-compiled	[CE]  cannot  find  symbol  forAnnotations	149	None	replace
415	[BUG]  [BUGGY]  forAnnotations  =  enclosing.getAnnotations(type);  [CE]  cannot  find  symbol  forAnnotations  [FE]                                AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  forAnnotations  =  enclosing.getAnnotations(type);  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	forAnnotations  =  enclosing.getAnnotations(type);	  forAnnotations    =    enclosing.getAnnotations();    	non-compiled	[CE]  cannot  find  symbol  forAnnotations	149	None	replace
416	[BUG]  [BUGGY]  forAnnotations  =  enclosing.findAnnotations(type);  [CE]  cannot  find  symbol  forAnnotations  [FE]                                  AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  forAnnotations  =  enclosing.findAnnotations(type);  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	forAnnotations  =  enclosing.findAnnotations(type);	  forAnnotations    =    enclosing.getAnnotations();    	non-compiled	[CE]  cannot  find  symbol  forAnnotations	149	None	replace
417	[BUG]  [BUGGY]  enclosing.getAnnotations();  [CE]  cannot  find  symbol  [FE]                                    AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  enclosing.getAnnotations();  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	enclosing.getAnnotations();	  forAnnotations    =    enclosing.getAnnotations();    	non-compiled	[CE]  cannot  find  symbol	149	None	replace
418	[BUG]  [BUGGY]  forAnnotations  =  enclosing.getAnnotations(registry);  [CE]  cannot  find  symbol  forAnnotations  [FE]                                      AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  forAnnotations  =  enclosing.getAnnotations(registry);  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	forAnnotations  =  enclosing.getAnnotations(registry);	  forAnnotations    =    enclosing.getAnnotations();    	non-compiled	[CE]  cannot  find  symbol  forAnnotations	149	None	replace
419	[BUG]  [BUGGY]  timeout  [FE]            AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(type.isUnknownType()  ||  type.isUnknownType())  {  return  true;  }  if(type.isUnknownType()  ||  type.isUnknownType())  {  return  true;  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	add	if(type.isUnknownType()    ||    type.isUnknownType())    {    return    true;    }    if(type.isUnknownType()  ||  type.isUnknownType())  {  return  true;  }	  timeout    	compilable	timeout	152	1	add
420	[BUG]  [BUGGY]  if(type.isUnknownType()  ||  type.isUnknownType())  {  return  true;  }  if(type.isUnknownType()  ||  type.isUnknownType())  {  return  true;  }  timeout  [FE]            AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(type.isUnknownType()  ||  type.isUnknownType())  {  return  true;  }  if(type.isUnknownType()  ||  type.isUnknownType())  {  return  true;  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(type.isUnknownType()    ||    type.isUnknownType())    {    return    true;    }    if(type.isUnknownType()  ||  type.isUnknownType())  {  return  true;  }	  timeout    	compilable	timeout	152	1	add
421	[BUG]  [BUGGY]  if(type.isUnknownType()  ||  type.isUnknownType())  {  return  true;  }  If(type.isUnknownType()  ||  type.isUnknownType())  {  return  true;  }  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(type.isUnknownType()  ||  type.isUnknownType())  {  return  true;  }  If(type.isUnknownType()  ||  type.isUnknownType())  {  return  true;  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(type.isUnknownType()    ||    type.isUnknownType())    {    return    true;    }    If(type.isUnknownType()  ||  type.isUnknownType())  {  return  true;  }	  timeout    	non-compiled	[CE]  ';'  expected	152	None	add
422	[BUG]  [BUGGY]  if(type.isUnknownType()  ||  type.isUnknownType())  {  return  true;  }  if(Type.isUnknownType()  ||  type.isUnknownType())  {  return  true;  }  [CE]  cannot  find  symbol  Type  [FE]                AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(type.isUnknownType()  ||  type.isUnknownType())  {  return  true;  }  if(Type.isUnknownType()  ||  type.isUnknownType())  {  return  true;  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(type.isUnknownType()    ||    type.isUnknownType())    {    return    true;    }    if(Type.isUnknownType()  ||  type.isUnknownType())  {  return  true;  }	  timeout    	non-compiled	[CE]  cannot  find  symbol  Type	152	None	add
423	[BUG]  [BUGGY]  if(type  ==  null  ||!enclosing)  {  return  true;  }  [CE]  bad  operand  type  StaticScope<JSType>  for  unary  operator  '!'  [FE]            AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(type  ==  null  ||!enclosing)  {  return  true;  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(type  ==  null  ||!enclosing)  {  return  true;  }	  if(type    ==    null    ||!forAnnotations)    {    return    true;    }    	non-compiled	[CE]  bad  operand  type  StaticScope<JSType>  for  unary  operator  '!'	229	None	replace
424	[BUG]  [BUGGY]  if(type  ==  null  ||!propertyContinuations)  {  return  true;  }  [CE]  bad  operand  type  List<PropertyContinuation>  for  unary  operator  '!'  [FE]              AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(type  ==  null  ||!propertyContinuations)  {  return  true;  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(type  ==  null  ||!propertyContinuations)  {  return  true;  }	  if(type    ==    null    ||!forAnnotations)    {    return    true;    }    	non-compiled	[CE]  bad  operand  type  List<PropertyContinuation>  for  unary  operator  '!'	229	None	replace
425	[BUG]  [BUGGY]  if(type  ==  null  ||!inferred)  {  return  true;  }  [CE]  cannot  find  symbol  inferred  [FE]                AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(type  ==  null  ||!inferred)  {  return  true;  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(type  ==  null  ||!inferred)  {  return  true;  }	  if(type    ==    null    ||!forAnnotations)    {    return    true;    }    	non-compiled	[CE]  cannot  find  symbol  inferred	229	None	replace
426	[BUG]  [BUGGY]  if(type  ==  null  ||!validator)  {  return  true;  }  [CE]  bad  operand  type  Predicate<JSType>  for  unary  operator  '!'  [FE]                  AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(type  ==  null  ||!validator)  {  return  true;  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(type  ==  null  ||!validator)  {  return  true;  }	  if(type    ==    null    ||!forAnnotations)    {    return    true;    }    	non-compiled	[CE]  bad  operand  type  Predicate<JSType>  for  unary  operator  '!'	229	None	replace
427	[BUG]  [BUGGY]  if(registry.isReferenced())  {  return  false;  }  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(registry.isReferenced())  {  return  false;  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(registry.isReferenced())  {  return  false;  }	  if(type.isReferenced())    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol	213	None	replace
428	[BUG]  [BUGGY]  if(type.isReferencedType())  {  return  false;  }  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(type.isReferencedType())  {  return  false;  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(type.isReferencedType())  {  return  false;  }	  if(type.isReferenced())    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol	213	None	replace
429	[BUG]  [BUGGY]  if(type.isReferenced()  ||  enclosing)  {  return  false;  }  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(type.isReferenced()  ||  enclosing)  {  return  false;  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(type.isReferenced()  ||  enclosing)  {  return  false;  }	  if(type.isReferenced())    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol	213	None	replace
430	[BUG]  [BUGGY]  if(reference.isReferenced())  {  return  false;  }  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(reference.isReferenced())  {  return  false;  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(reference.isReferenced())  {  return  false;  }	  if(type.isReferenced())    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol	213	None	replace
431	[BUG]  [BUGGY]  if(type.isReferenced()  ||  type.isAnnotated())  {  return  false;  }  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(type.isReferenced()  ||  type.isAnnotated())  {  return  false;  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(type.isReferenced()  ||  type.isAnnotated())  {  return  false;  }	  if(type.isReferenced())    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol	213	None	replace
432	[BUG]  [BUGGY]  if(type.isReferenced()  &&  enclosing)  {  return  false;  }  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(type.isReferenced()  &&  enclosing)  {  return  false;  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(type.isReferenced()  &&  enclosing)  {  return  false;  }	  if(type.isReferenced())    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol	213	None	replace
433	[BUG]  [BUGGY]  timeout  [FE]            AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(!type.isUnknownType())  {  return  false;  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	add	if(!type.isUnknownType())  {  return  false;  }	  if(type.isUnknownType())    {    return    false;    }    timeout    	compilable	timeout	159	1	replace
434	[BUG]  [BUGGY]  if(!type.isUnknownType())  {  return  false;  }  timeout  [FE]            AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(!type.isUnknownType())  {  return  false;  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(!type.isUnknownType())  {  return  false;  }	  if(type.isUnknownType())    {    return    false;    }    timeout    	compilable	timeout	159	1	replace
435	[BUG]  [BUGGY]  if(type.isUnknownType()  ||  type.isAnnotations())  {  return  false;  }  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(type.isUnknownType()  ||  type.isAnnotations())  {  return  false;  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(type.isUnknownType()  ||  type.isAnnotations())  {  return  false;  }	  if(type.isUnknownType())    {    return    false;    }    timeout    	non-compiled	[CE]  cannot  find  symbol	159	None	replace
436	[BUG]  [BUGGY]  if(type.isUnknownType()  ||  type.isStatic())  {  return  false;  }  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(type.isUnknownType()  ||  type.isStatic())  {  return  false;  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(type.isUnknownType()  ||  type.isStatic())  {  return  false;  }	  if(type.isUnknownType())    {    return    false;    }    timeout    	non-compiled	[CE]  cannot  find  symbol	159	None	replace
437	[BUG]  [BUGGY]  if(type.isUnknownType()  ||  type.isAnnotated())  {  return  false;  }  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(type.isUnknownType()  ||  type.isAnnotated())  {  return  false;  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(type.isUnknownType()  ||  type.isAnnotated())  {  return  false;  }	  if(type.isUnknownType())    {    return    false;    }    timeout    	non-compiled	[CE]  cannot  find  symbol	159	None	replace
438	[BUG]  [BUGGY]  if(type!=  null)  {  if(resolveViaRegistry(t,  enclosing))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(type!=  null)  {  if(resolveViaRegistry(t,  enclosing))  {  return  false;  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(type!=  null)  {  if(resolveViaRegistry(t,  enclosing))  {  return  false;  }	  if(type    ==    null)    {    return    false;    }    if(type!=    null)    {    return    false;    }    timeout    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
439	[BUG]  [BUGGY]  if(type!=  null)  {  if(resolveViaRegistry(t,  enclosing)  ==  false)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(type!=  null)  {  if(resolveViaRegistry(t,  enclosing)  ==  false)  {  return  false;  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(type!=  null)  {  if(resolveViaRegistry(t,  enclosing)  ==  false)  {  return  false;  }	  if(type    ==    null)    {    return    false;    }    if(type!=    null)    {    return    false;    }    timeout    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
440	[BUG]  [BUGGY]  timeout  [FE]                      AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(type!=    null)    {    return    true;    }    if(type  ==  null)  {  return  true;  }  if(type!=  null)  {  return  true;  }  if(type  ==  null)  {  return  true;  }  if(type  ==  null)  {  return  true;  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	add	if(type!=        null)        {        return        true;        }        if(type    ==    null)    {    return    true;    }    if(type!=  null)  {  return  true;  }  if(type  ==  null)  {  return  true;  }  if(type  ==  null)  {  return  true;  }	  timeout    	compilable	timeout	16	1	add
441	[BUG]  [BUGGY]  if(type!=    null)    {    return    true;    }    if(type  ==  null)  {  return  true;  }  if(type!=  null)  {  return  true;  }  if(type  ==  null)  {  return  true;  }  if(type  ==  null)  {  return  true;  }  timeout  [FE]                      AssertionFailedError      [CONTEXT]      private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);      [BUGGY]  if(type!=    null)    {    return    true;    }    if(type  ==  null)  {  return  true;  }  if(type!=  null)  {  return  true;  }  if(type  ==  null)  {  return  true;  }  if(type  ==  null)  {  return  true;  }  [BUGGY]      }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(type!=        null)        {        return        true;        }        if(type    ==    null)    {    return    true;    }    if(type!=  null)  {  return  true;  }  if(type  ==  null)  {  return  true;  }  if(type  ==  null)  {  return  true;  }	  timeout    	compilable	timeout	16	1	add
