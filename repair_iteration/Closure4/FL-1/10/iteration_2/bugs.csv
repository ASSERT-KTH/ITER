bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  timeout  [FE]          AssertionFailedError    [CONTEXT]    private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);    [BUGGY]  if(type!=  null  ||!resolveViaRegistry(t,  enclosing))  {  return  false;  }  [BUGGY]    }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	add	if(type!=  null  ||!resolveViaRegistry(t,  enclosing))  {  return  false;  }	  if(type!=    null)    {    return    false;    }    timeout    	compilable	timeout	4	1	replace
2	[BUG]  [BUGGY]  if(type!=  null  ||!resolveViaRegistry(t,  enclosing))  {  return  false;  }  timeout  [FE]          AssertionFailedError    [CONTEXT]    private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);    [BUGGY]  if(type!=  null  ||!resolveViaRegistry(t,  enclosing))  {  return  false;  }  [BUGGY]    }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(type!=  null  ||!resolveViaRegistry(t,  enclosing))  {  return  false;  }	  if(type!=    null)    {    return    false;    }    timeout    	compilable	timeout	4	1	replace
3	[BUG]  [BUGGY]  timeout  [FE]            AssertionFailedError    [CONTEXT]    private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);    [BUGGY]  if(type!=  null  ||  enclosing  ==  null)  {  return  false;  }  [BUGGY]    }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	add	if(type!=  null  ||  enclosing  ==  null)  {  return  false;  }	  if(type!=    null)    {    return    false;    }    timeout    	compilable	timeout	4	1	replace
4	[BUG]  [BUGGY]  if(type!=  null  ||  enclosing  ==  null)  {  return  false;  }  timeout  [FE]            AssertionFailedError    [CONTEXT]    private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);    [BUGGY]  if(type!=  null  ||  enclosing  ==  null)  {  return  false;  }  [BUGGY]    }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(type!=  null  ||  enclosing  ==  null)  {  return  false;  }	  if(type!=    null)    {    return    false;    }    timeout    	compilable	timeout	4	1	replace
5	[BUG]  [BUGGY]  timeout  [FE]              AssertionFailedError    [CONTEXT]    private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);    [BUGGY]  if(type!=  null  ||  enclosing.equals(type))  {  return  false;  }  [BUGGY]    }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	add	if(type!=  null  ||  enclosing.equals(type))  {  return  false;  }	  if(type!=    null)    {    return    false;    }    timeout    	compilable	timeout	4	1	replace
6	[BUG]  [BUGGY]  if(type!=  null  ||  enclosing.equals(type))  {  return  false;  }  timeout  [FE]              AssertionFailedError    [CONTEXT]    private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);    [BUGGY]  if(type!=  null  ||  enclosing.equals(type))  {  return  false;  }  [BUGGY]    }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(type!=  null  ||  enclosing.equals(type))  {  return  false;  }	  if(type!=    null)    {    return    false;    }    timeout    	compilable	timeout	4	1	replace
7	[BUG]  [BUGGY]  timeout  [FE]        AssertionFailedError    [CONTEXT]    private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);    [BUGGY]  if(type  ==  null)  {  return  true;  }  if(type  ==  null)  {  return  true;  }  [BUGGY]    }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	add	if(type    ==    null)    {    return    true;    }    if(type  ==  null)  {  return  true;  }	  timeout    	compilable	timeout	15	1	add
8	[BUG]  [BUGGY]  if(type  ==  null)  {  return  true;  }  if(type  ==  null)  {  return  true;  }  timeout  [FE]        AssertionFailedError    [CONTEXT]    private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);    [BUGGY]  if(type  ==  null)  {  return  true;  }  if(type  ==  null)  {  return  true;  }  [BUGGY]    }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(type    ==    null)    {    return    true;    }    if(type  ==  null)  {  return  true;  }	  timeout    	compilable	timeout	15	1	add
9	[BUG]  [BUGGY]  timeout  [FE]          AssertionFailedError    [CONTEXT]    private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);    [BUGGY]  if(type  ==  null)  {  return  true;  }  if(type!=  null)  {  return  true;  }  [BUGGY]    }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	add	if(type    ==    null)    {    return    true;    }    if(type!=  null)  {  return  true;  }	  timeout    	compilable	timeout	15	1	add
10	[BUG]  [BUGGY]  if(type  ==  null)  {  return  true;  }  if(type!=  null)  {  return  true;  }  timeout  [FE]          AssertionFailedError    [CONTEXT]    private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);    [BUGGY]  if(type  ==  null)  {  return  true;  }  if(type!=  null)  {  return  true;  }  [BUGGY]    }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(type    ==    null)    {    return    true;    }    if(type!=  null)  {  return  true;  }	  timeout    	compilable	timeout	15	1	add
11	[BUG]  [BUGGY]  if(type  ==  null)  {  return  true;  }  if(type  >=  null)  {  return  true;  }  [CE]  bad  operand  types  for  binary  operator  '>='  [FE]            AssertionFailedError    [CONTEXT]    private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);    [BUGGY]  if(type  ==  null)  {  return  true;  }  if(type  >=  null)  {  return  true;  }  [BUGGY]    }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(type    ==    null)    {    return    true;    }    if(type  >=  null)  {  return  true;  }	  timeout    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>='	15	None	add
12	[BUG]  [BUGGY]  if(type  ==  null)  {  return  true;  }  If(type  ==  null)  {  return  true;  }  [CE]  ';'  expected  [FE]              AssertionFailedError    [CONTEXT]    private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);    [BUGGY]  if(type  ==  null)  {  return  true;  }  If(type  ==  null)  {  return  true;  }  [BUGGY]    }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(type    ==    null)    {    return    true;    }    If(type  ==  null)  {  return  true;  }	  timeout    	non-compiled	[CE]  ';'  expected	15	None	add
13	[BUG]  [BUGGY]  if(type  ==  null)  {  return  true;  }  if(type  >>  null)  {  return  true;  }  [CE]  bad  operand  types  for  binary  operator  '>>'  [FE]                AssertionFailedError    [CONTEXT]    private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);    [BUGGY]  if(type  ==  null)  {  return  true;  }  if(type  >>  null)  {  return  true;  }  [BUGGY]    }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(type    ==    null)    {    return    true;    }    if(type  >>  null)  {  return  true;  }	  timeout    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>>'	15	None	add
14	[BUG]  [BUGGY]  timeout  [FE]                AssertionFailedError    [CONTEXT]    private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);    [BUGGY]  if(type!=  null)  {  return  true;  }  if(type!=  null)  {  return  true;  }  [BUGGY]    }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	add	if(type!=    null)    {    return    true;    }    if(type!=  null)  {  return  true;  }	  timeout    	compilable	timeout	8	1	add
15	[BUG]  [BUGGY]  if(type!=  null)  {  return  true;  }  if(type!=  null)  {  return  true;  }  timeout  [FE]                AssertionFailedError    [CONTEXT]    private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);    [BUGGY]  if(type!=  null)  {  return  true;  }  if(type!=  null)  {  return  true;  }  [BUGGY]    }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(type!=    null)    {    return    true;    }    if(type!=  null)  {  return  true;  }	  timeout    	compilable	timeout	8	1	add
16	[BUG]  [BUGGY]  timeout  [FE]                  AssertionFailedError    [CONTEXT]    private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);    [BUGGY]  if(type!=  null)  {  return  true;  }  if(type  ==  null)  {  return  true;  }  [BUGGY]    }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	add	if(type!=    null)    {    return    true;    }    if(type  ==  null)  {  return  true;  }	  timeout    	compilable	timeout	8	1	add
17	[BUG]  [BUGGY]  if(type!=  null)  {  return  true;  }  if(type  ==  null)  {  return  true;  }  timeout  [FE]                  AssertionFailedError    [CONTEXT]    private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);    [BUGGY]  if(type!=  null)  {  return  true;  }  if(type  ==  null)  {  return  true;  }  [BUGGY]    }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(type!=    null)    {    return    true;    }    if(type  ==  null)  {  return  true;  }	  timeout    	compilable	timeout	8	1	add
18	[BUG]  [BUGGY]  if(type!=  null)  {  return  true;  }  if(type  >=  null)  {  return  true;  }  [CE]  bad  operand  types  for  binary  operator  '>='  [FE]                    AssertionFailedError    [CONTEXT]    private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);    [BUGGY]  if(type!=  null)  {  return  true;  }  if(type  >=  null)  {  return  true;  }  [BUGGY]    }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(type!=    null)    {    return    true;    }    if(type  >=  null)  {  return  true;  }	  timeout    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>='	8	None	add
19	[BUG]  [BUGGY]  if(type!=  null)  {  return  true;  }  if(type  >>  null)  {  return  true;  }  [CE]  bad  operand  types  for  binary  operator  '>>'  [FE]                      AssertionFailedError    [CONTEXT]    private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);    [BUGGY]  if(type!=  null)  {  return  true;  }  if(type  >>  null)  {  return  true;  }  [BUGGY]    }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(type!=    null)    {    return    true;    }    if(type  >>  null)  {  return  true;  }	  timeout    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>>'	8	None	add
20	[BUG]  [BUGGY]  if(type!=  null)  {  return  true;  }  If(type!=  null)  {  return  true;  }  [CE]  ';'  expected  [FE]                        AssertionFailedError    [CONTEXT]    private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);    [BUGGY]  if(type!=  null)  {  return  true;  }  If(type!=  null)  {  return  true;  }  [BUGGY]    }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(type!=    null)    {    return    true;    }    If(type!=  null)  {  return  true;  }	  timeout    	non-compiled	[CE]  ';'  expected	8	None	add
21	[BUG]  [BUGGY]  if(type!=  null)  {  return  true;  }  if(type  [Delete]  null)  {  return  true;  }  [CE]  ')'  expected  [FE]                          AssertionFailedError    [CONTEXT]    private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);    [BUGGY]  if(type!=  null)  {  return  true;  }  if(type  [Delete]  null)  {  return  true;  }  [BUGGY]    }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(type!=    null)    {    return    true;    }    if(type  [Delete]  null)  {  return  true;  }	  timeout    	non-compiled	[CE]  ')'  expected	8	None	add
22	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(   "   ");  throw  new  IllegalArgumentException( "   ");  [CE]  unreachable  statement  [FE]                    AssertionFailedError    [CONTEXT]    private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);    [BUGGY]  throw  new  IllegalArgumentException(   "   ");  throw  new  IllegalArgumentException( "   ");  [BUGGY]    }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	throw    new    IllegalArgumentException(   "   ");    throw  new  IllegalArgumentException( "   ");	  timeout    	non-compiled	[CE]  unreachable  statement	11	None	add
23	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(   "   ");  Throw  new  IllegalArgumentException( "   ");  [CE]  not  a  statement  [FE]                      AssertionFailedError    [CONTEXT]    private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);    [BUGGY]  throw  new  IllegalArgumentException(   "   ");  Throw  new  IllegalArgumentException( "   ");  [BUGGY]    }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	throw    new    IllegalArgumentException(   "   ");    Throw  new  IllegalArgumentException( "   ");	  timeout    	non-compiled	[CE]  not  a  statement	11	None	add
24	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(   "   ");  Throwables.throw  new  IllegalArgumentException( "   ");  [CE]  <identifier>  expected  [FE]                        AssertionFailedError    [CONTEXT]    private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);    [BUGGY]  throw  new  IllegalArgumentException(   "   ");  Throwables.throw  new  IllegalArgumentException( "   ");  [BUGGY]    }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	throw    new    IllegalArgumentException(   "   ");    Throwables.throw  new  IllegalArgumentException( "   ");	  timeout    	non-compiled	[CE]  <identifier>  expected	11	None	add
25	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(   "   ");  JSError.make(t,  enclosing,  sourceName));  [CE]  [FE]                          AssertionFailedError    [CONTEXT]    private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);    [BUGGY]  throw  new  IllegalArgumentException(   "   ");  JSError.make(t,  enclosing,  sourceName));  [BUGGY]    }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	throw    new    IllegalArgumentException(   "   ");    JSError.make(t,  enclosing,  sourceName));	  timeout    	non-compiled	[CE]  	11	None	add
26	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(   "   ");  JSError.make(t,  enclosing));  [CE]  [FE]                            AssertionFailedError    [CONTEXT]    private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);    [BUGGY]  throw  new  IllegalArgumentException(   "   ");  JSError.make(t,  enclosing));  [BUGGY]    }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	throw    new    IllegalArgumentException(   "   ");    JSError.make(t,  enclosing));	  timeout    	non-compiled	[CE]  	11	None	add
27	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(   "   ");  throw  new  IllegalArgumentException( ".   ");  [CE]  unreachable  statement  [FE]                              AssertionFailedError    [CONTEXT]    private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);    [BUGGY]  throw  new  IllegalArgumentException(   "   ");  throw  new  IllegalArgumentException( ".   ");  [BUGGY]    }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	throw    new    IllegalArgumentException(   "   ");    throw  new  IllegalArgumentException( ".   ");	  timeout    	non-compiled	[CE]  unreachable  statement	11	None	add
28	[BUG]  [BUGGY]  timeout  [FE]          AssertionFailedError    [CONTEXT]    private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);    [BUGGY]  if(validator!=  null)  {  return  false;  }  [BUGGY]    }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	add	if(validator!=  null)  {  return  false;  }	  if(validator!=    null)    {    return    true;    }    timeout    	compilable	timeout	18	1	replace
29	[BUG]  [BUGGY]  if(validator!=  null)  {  return  false;  }  timeout  [FE]          AssertionFailedError    [CONTEXT]    private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);    [BUGGY]  if(validator!=  null)  {  return  false;  }  [BUGGY]    }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(validator!=  null)  {  return  false;  }	  if(validator!=    null)    {    return    true;    }    timeout    	compilable	timeout	18	1	replace
30	[BUG]  [BUGGY]  timeout  [FE]            AssertionFailedError    [CONTEXT]    private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);    [BUGGY]  if(validator  ==  null)  {  return  false;  }  [BUGGY]    }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	add	if(validator  ==  null)  {  return  false;  }	  if(validator!=    null)    {    return    true;    }    timeout    	compilable	timeout	18	1	replace
31	[BUG]  [BUGGY]  if(validator  ==  null)  {  return  false;  }  timeout  [FE]            AssertionFailedError    [CONTEXT]    private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);    [BUGGY]  if(validator  ==  null)  {  return  false;  }  [BUGGY]    }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(validator  ==  null)  {  return  false;  }	  if(validator!=    null)    {    return    true;    }    timeout    	compilable	timeout	18	1	replace
32	[BUG]  [BUGGY]  timeout  [FE]              AssertionFailedError    [CONTEXT]    private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);    [BUGGY]  if(validator!=  null  ||  validator.equals(type))  {  return  true;  }  [BUGGY]    }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	add	if(validator!=  null  ||  validator.equals(type))  {  return  true;  }	  if(validator!=    null)    {    return    true;    }    timeout    	compilable	timeout	18	1	replace
33	[BUG]  [BUGGY]  if(validator!=  null  ||  validator.equals(type))  {  return  true;  }  timeout  [FE]              AssertionFailedError    [CONTEXT]    private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);    [BUGGY]  if(validator!=  null  ||  validator.equals(type))  {  return  true;  }  [BUGGY]    }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(validator!=  null  ||  validator.equals(type))  {  return  true;  }	  if(validator!=    null)    {    return    true;    }    timeout    	compilable	timeout	18	1	replace
34	[BUG]  [BUGGY]  timeout  [FE]        AssertionFailedError    [CONTEXT]    private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);    [BUGGY]  if(type.isUnknownType()  ||  type.isInterface())  {  return  true;  }  [BUGGY]    }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	add	if(type.isUnknownType()  ||  type.isInterface())  {  return  true;  }	  if(type.isUnknownType())    {    return    true;    }    timeout    	compilable	timeout	21	1	replace
35	[BUG]  [BUGGY]  if(type.isUnknownType()  ||  type.isInterface())  {  return  true;  }  timeout  [FE]        AssertionFailedError    [CONTEXT]    private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);    [BUGGY]  if(type.isUnknownType()  ||  type.isInterface())  {  return  true;  }  [BUGGY]    }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(type.isUnknownType()  ||  type.isInterface())  {  return  true;  }	  if(type.isUnknownType())    {    return    true;    }    timeout    	compilable	timeout	21	1	replace
36	[BUG]  [BUGGY]  if(type.isUnknownType()  ||  type.isVarArgs())  {  return  true;  }  [CE]  cannot  find  symbol  [FE]          AssertionFailedError    [CONTEXT]    private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);    [BUGGY]  if(type.isUnknownType()  ||  type.isVarArgs())  {  return  true;  }  [BUGGY]    }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(type.isUnknownType()  ||  type.isVarArgs())  {  return  true;  }	  if(type.isUnknownType())    {    return    true;    }    timeout    	non-compiled	[CE]  cannot  find  symbol	21	None	replace
37	[BUG]  [BUGGY]  if(type.isUnknownType()  ||  type.isAnnotations())  {  return  true;  }  [CE]  cannot  find  symbol  [FE]            AssertionFailedError    [CONTEXT]    private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);    [BUGGY]  if(type.isUnknownType()  ||  type.isAnnotations())  {  return  true;  }  [BUGGY]    }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(type.isUnknownType()  ||  type.isAnnotations())  {  return  true;  }	  if(type.isUnknownType())    {    return    true;    }    timeout    	non-compiled	[CE]  cannot  find  symbol	21	None	replace
38	[BUG]  [BUGGY]  timeout  [FE]              AssertionFailedError    [CONTEXT]    private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);    [BUGGY]  if(!type.isUnknownType())  {  return  true;  }  [BUGGY]    }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	add	if(!type.isUnknownType())  {  return  true;  }	  if(type.isUnknownType())    {    return    true;    }    timeout    	compilable	timeout	21	1	replace
39	[BUG]  [BUGGY]  if(!type.isUnknownType())  {  return  true;  }  timeout  [FE]              AssertionFailedError    [CONTEXT]    private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);    [BUGGY]  if(!type.isUnknownType())  {  return  true;  }  [BUGGY]    }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(!type.isUnknownType())  {  return  true;  }	  if(type.isUnknownType())    {    return    true;    }    timeout    	compilable	timeout	21	1	replace
40	[BUG]  [BUGGY]  timeout  [FE]                AssertionFailedError    [CONTEXT]    private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);    [BUGGY]  if(type.isUnknownType()  ||  type.isInterface())  {  return  false;  }  [BUGGY]    }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	add	if(type.isUnknownType()  ||  type.isInterface())  {  return  false;  }	  if(type.isUnknownType())    {    return    true;    }    timeout    	compilable	timeout	21	1	replace
41	[BUG]  [BUGGY]  if(type.isUnknownType()  ||  type.isInterface())  {  return  false;  }  timeout  [FE]                AssertionFailedError    [CONTEXT]    private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);    [BUGGY]  if(type.isUnknownType()  ||  type.isInterface())  {  return  false;  }  [BUGGY]    }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(type.isUnknownType()  ||  type.isInterface())  {  return  false;  }	  if(type.isUnknownType())    {    return    true;    }    timeout    	compilable	timeout	21	1	replace
42	[BUG]  [BUGGY]  if(type.isUnknownType()  ||  type.isStatic())  {  return  true;  }  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError    [CONTEXT]    private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);    [BUGGY]  if(type.isUnknownType()  ||  type.isStatic())  {  return  true;  }  [BUGGY]    }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(type.isUnknownType()  ||  type.isStatic())  {  return  true;  }	  if(type.isUnknownType())    {    return    true;    }    timeout    	non-compiled	[CE]  cannot  find  symbol	21	None	replace
43	[BUG]  [BUGGY]  timeout  [FE]                AssertionFailedError    [CONTEXT]    private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);    [BUGGY]  if(type!=  null  ||  enclosing  ==  null)  {  return  true;  }  [BUGGY]    }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	add	if(type!=  null  ||  enclosing  ==  null)  {  return  true;  }	  if(type!=    null)    {    return    true;    }    timeout    	compilable	timeout	9	1	replace
44	[BUG]  [BUGGY]  if(type!=  null  ||  enclosing  ==  null)  {  return  true;  }  timeout  [FE]                AssertionFailedError    [CONTEXT]    private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);    [BUGGY]  if(type!=  null  ||  enclosing  ==  null)  {  return  true;  }  [BUGGY]    }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(type!=  null  ||  enclosing  ==  null)  {  return  true;  }	  if(type!=    null)    {    return    true;    }    timeout    	compilable	timeout	9	1	replace
45	[BUG]  [BUGGY]  timeout  [FE]        AssertionFailedError    [CONTEXT]    private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);    [BUGGY]  if(type  ==  null  ||  enclosing!=  null)  {  return  false;  }  [BUGGY]    }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	add	if(type  ==  null  ||  enclosing!=  null)  {  return  false;  }	  if(type    ==    null)    {    return    true;    }    timeout    	compilable	timeout	16	1	replace
46	[BUG]  [BUGGY]  if(type  ==  null  ||  enclosing!=  null)  {  return  false;  }  timeout  [FE]        AssertionFailedError    [CONTEXT]    private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);    [BUGGY]  if(type  ==  null  ||  enclosing!=  null)  {  return  false;  }  [BUGGY]    }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(type  ==  null  ||  enclosing!=  null)  {  return  false;  }	  if(type    ==    null)    {    return    true;    }    timeout    	compilable	timeout	16	1	replace
47	[BUG]  [BUGGY]  timeout  [FE]          AssertionFailedError    [CONTEXT]    private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);    [BUGGY]  if(validator!=  null)  {  return  true;  }  if(validator!=  null)  {  return  true;  }  [BUGGY]    }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	add	if(validator!=    null)    {    return    true;    }    if(validator!=  null)  {  return  true;  }	  timeout    	compilable	timeout	17	1	add
48	[BUG]  [BUGGY]  if(validator!=  null)  {  return  true;  }  if(validator!=  null)  {  return  true;  }  timeout  [FE]          AssertionFailedError    [CONTEXT]    private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);    [BUGGY]  if(validator!=  null)  {  return  true;  }  if(validator!=  null)  {  return  true;  }  [BUGGY]    }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(validator!=    null)    {    return    true;    }    if(validator!=  null)  {  return  true;  }	  timeout    	compilable	timeout	17	1	add
49	[BUG]  [BUGGY]  timeout  [FE]            AssertionFailedError    [CONTEXT]    private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);    [BUGGY]  if(validator!=  null)  {  return  true;  }  if(validator  ==  null)  {  return  true;  }  [BUGGY]    }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	add	if(validator!=    null)    {    return    true;    }    if(validator  ==  null)  {  return  true;  }	  timeout    	compilable	timeout	17	1	add
50	[BUG]  [BUGGY]  if(validator!=  null)  {  return  true;  }  if(validator  ==  null)  {  return  true;  }  timeout  [FE]            AssertionFailedError    [CONTEXT]    private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);    [BUGGY]  if(validator!=  null)  {  return  true;  }  if(validator  ==  null)  {  return  true;  }  [BUGGY]    }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(validator!=    null)    {    return    true;    }    if(validator  ==  null)  {  return  true;  }	  timeout    	compilable	timeout	17	1	add
51	[BUG]  [BUGGY]  if(validator!=  null)  {  return  true;  }  if(validator  >=  null)  {  return  true;  }  [CE]  bad  operand  types  for  binary  operator  '>='  [FE]              AssertionFailedError    [CONTEXT]    private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);    [BUGGY]  if(validator!=  null)  {  return  true;  }  if(validator  >=  null)  {  return  true;  }  [BUGGY]    }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(validator!=    null)    {    return    true;    }    if(validator  >=  null)  {  return  true;  }	  timeout    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>='	17	None	add
52	[BUG]  [BUGGY]  if(validator!=  null)  {  return  true;  }  If(validator!=  null)  {  return  true;  }  [CE]  ';'  expected  [FE]                AssertionFailedError    [CONTEXT]    private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);    [BUGGY]  if(validator!=  null)  {  return  true;  }  If(validator!=  null)  {  return  true;  }  [BUGGY]    }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(validator!=    null)    {    return    true;    }    If(validator!=  null)  {  return  true;  }	  timeout    	non-compiled	[CE]  ';'  expected	17	None	add
53	[BUG]  [BUGGY]  if(validator!=  null)  {  return  true;  }  if(validator  >>  null)  {  return  true;  }  [CE]  bad  operand  types  for  binary  operator  '>>'  [FE]                  AssertionFailedError    [CONTEXT]    private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);    [BUGGY]  if(validator!=  null)  {  return  true;  }  if(validator  >>  null)  {  return  true;  }  [BUGGY]    }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(validator!=    null)    {    return    true;    }    if(validator  >>  null)  {  return  true;  }	  timeout    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>>'	17	None	add
54	[BUG]  [BUGGY]  if(validator!=  null)  {  return  true;  }  if(validator  [BUGGY]  null)  {  return  true;  }  [CE]  ')'  expected  [FE]                    AssertionFailedError    [CONTEXT]    private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);    [BUGGY]  if(validator!=  null)  {  return  true;  }  if(validator  [BUGGY]  null)  {  return  true;  }  [BUGGY]    }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(validator!=    null)    {    return    true;    }    if(validator  [BUGGY]  null)  {  return  true;  }	  timeout    	non-compiled	[CE]  ')'  expected	17	None	add
55	[BUG]  [BUGGY]  if(validator!=  null)  {  return  true;  }  if(validator  [Delete]  null)  {  return  true;  }  [CE]  ')'  expected  [FE]                      AssertionFailedError    [CONTEXT]    private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);    [BUGGY]  if(validator!=  null)  {  return  true;  }  if(validator  [Delete]  null)  {  return  true;  }  [BUGGY]    }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(validator!=    null)    {    return    true;    }    if(validator  [Delete]  null)  {  return  true;  }	  timeout    	non-compiled	[CE]  ')'  expected	17	None	add
56	[BUG]  [BUGGY]  timeout  [FE]            AssertionFailedError    [CONTEXT]    private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);    [BUGGY]  if(type  ==  null)  {  return  false;  }  if(type  ==  null)  {  return  false;  }  [BUGGY]    }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	add	if(type    ==    null)    {    return    false;    }    if(type  ==  null)  {  return  false;  }	  timeout    	compilable	timeout	5	1	add
57	[BUG]  [BUGGY]  if(type  ==  null)  {  return  false;  }  if(type  ==  null)  {  return  false;  }  timeout  [FE]            AssertionFailedError    [CONTEXT]    private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);    [BUGGY]  if(type  ==  null)  {  return  false;  }  if(type  ==  null)  {  return  false;  }  [BUGGY]    }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(type    ==    null)    {    return    false;    }    if(type  ==  null)  {  return  false;  }	  timeout    	compilable	timeout	5	1	add
58	[BUG]  [BUGGY]  timeout  [FE]              AssertionFailedError    [CONTEXT]    private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);    [BUGGY]  if(type  ==  null)  {  return  false;  }  if(type!=  null)  {  return  false;  }  [BUGGY]    }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	add	if(type    ==    null)    {    return    false;    }    if(type!=  null)  {  return  false;  }	  timeout    	compilable	timeout	5	1	add
59	[BUG]  [BUGGY]  if(type  ==  null)  {  return  false;  }  if(type!=  null)  {  return  false;  }  timeout  [FE]              AssertionFailedError    [CONTEXT]    private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);    [BUGGY]  if(type  ==  null)  {  return  false;  }  if(type!=  null)  {  return  false;  }  [BUGGY]    }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(type    ==    null)    {    return    false;    }    if(type!=  null)  {  return  false;  }	  timeout    	compilable	timeout	5	1	add
60	[BUG]  [BUGGY]  if(type  ==  null)  {  return  false;  }  if(type  >=  null)  {  return  false;  }  [CE]  bad  operand  types  for  binary  operator  '>='  [FE]                AssertionFailedError    [CONTEXT]    private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);    [BUGGY]  if(type  ==  null)  {  return  false;  }  if(type  >=  null)  {  return  false;  }  [BUGGY]    }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(type    ==    null)    {    return    false;    }    if(type  >=  null)  {  return  false;  }	  timeout    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>='	5	None	add
61	[BUG]  [BUGGY]  if(type  ==  null)  {  return  false;  }  If(type  ==  null)  {  return  false;  }  [CE]  ';'  expected  [FE]                  AssertionFailedError    [CONTEXT]    private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);    [BUGGY]  if(type  ==  null)  {  return  false;  }  If(type  ==  null)  {  return  false;  }  [BUGGY]    }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(type    ==    null)    {    return    false;    }    If(type  ==  null)  {  return  false;  }	  timeout    	non-compiled	[CE]  ';'  expected	5	None	add
62	[BUG]  [BUGGY]  if(type  ==  null)  {  return  false;  }  if(type  >>  null)  {  return  false;  }  [CE]  bad  operand  types  for  binary  operator  '>>'  [FE]                    AssertionFailedError    [CONTEXT]    private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);    [BUGGY]  if(type  ==  null)  {  return  false;  }  if(type  >>  null)  {  return  false;  }  [BUGGY]    }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(type    ==    null)    {    return    false;    }    if(type  >>  null)  {  return  false;  }	  timeout    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>>'	5	None	add
63	[BUG]  [BUGGY]  timeout  [FE]                      AssertionFailedError    [CONTEXT]    private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);    [BUGGY]      setReferencedAndResolvedType(type,  t,  enclosing);  [BUGGY]    }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	add	        setReferencedAndResolvedType(type,  t,  enclosing);	  timeout    	compilable	timeout	13	1	add
64	[BUG]  [BUGGY]      setReferencedAndResolvedType(type,  t,  enclosing);  timeout  [FE]                      AssertionFailedError    [CONTEXT]    private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);    [BUGGY]      setReferencedAndResolvedType(type,  t,  enclosing);  [BUGGY]    }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	        setReferencedAndResolvedType(type,  t,  enclosing);	  timeout    	compilable	timeout	13	1	add
65	[BUG]  [BUGGY]      Predicate  validator  =  enclosing.getValue();  setReferencedAndResolvedType(type,  t,  validator);  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError    [CONTEXT]    private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);    [BUGGY]      Predicate  validator  =  enclosing.getValue();  setReferencedAndResolvedType(type,  t,  validator);  [BUGGY]    }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	        Predicate  validator  =  enclosing.getValue();  setReferencedAndResolvedType(type,  t,  validator);	  timeout    	non-compiled	[CE]  cannot  find  symbol	13	None	add
66	[BUG]  [BUGGY]      forAnnotations  =  enclosing.getAnnotations();  setReferencedAndResolvedType(type,  t,  enclosing);  [CE]  cannot  find  symbol  forAnnotations  [FE]                          AssertionFailedError    [CONTEXT]    private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);    [BUGGY]      forAnnotations  =  enclosing.getAnnotations();  setReferencedAndResolvedType(type,  t,  enclosing);  [BUGGY]    }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	        forAnnotations  =  enclosing.getAnnotations();  setReferencedAndResolvedType(type,  t,  enclosing);	  timeout    	non-compiled	[CE]  cannot  find  symbol  forAnnotations	13	None	add
67	[BUG]  [BUGGY]      setReferencedAndResolvedType(type,  t,  enclosing);  return  true;  [CE]  unreachable  statement  [FE]                            AssertionFailedError    [CONTEXT]    private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);    [BUGGY]      setReferencedAndResolvedType(type,  t,  enclosing);  return  true;  [BUGGY]    }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	        setReferencedAndResolvedType(type,  t,  enclosing);  return  true;	  timeout    	non-compiled	[CE]  unreachable  statement	13	None	add
68	[BUG]  [BUGGY]      Predicate  validator  =  enclosing.getValue();  setReferencedAndResolvedType(type,  t,  validator,  enclosing);  [CE]  cannot  find  symbol  [FE]                              AssertionFailedError    [CONTEXT]    private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);    [BUGGY]      Predicate  validator  =  enclosing.getValue();  setReferencedAndResolvedType(type,  t,  validator,  enclosing);  [BUGGY]    }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	        Predicate  validator  =  enclosing.getValue();  setReferencedAndResolvedType(type,  t,  validator,  enclosing);	  timeout    	non-compiled	[CE]  cannot  find  symbol	13	None	add
69	[BUG]  [BUGGY]      Predicate  validator  =  enclosing.getValue();  setReferencedAndResolvedType(validator,  type,  enclosing);  [CE]  cannot  find  symbol  [FE]                                AssertionFailedError    [CONTEXT]    private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);    [BUGGY]      Predicate  validator  =  enclosing.getValue();  setReferencedAndResolvedType(validator,  type,  enclosing);  [BUGGY]    }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	        Predicate  validator  =  enclosing.getValue();  setReferencedAndResolvedType(validator,  type,  enclosing);	  timeout    	non-compiled	[CE]  cannot  find  symbol	13	None	add
70	[BUG]  [BUGGY]      Predicate  validator  =  enclosing.getValue();  setReferencedAndResolvedType(type,  t,  enclosing);  [CE]  cannot  find  symbol  [FE]                                  AssertionFailedError    [CONTEXT]    private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);    [BUGGY]      Predicate  validator  =  enclosing.getValue();  setReferencedAndResolvedType(type,  t,  enclosing);  [BUGGY]    }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	        Predicate  validator  =  enclosing.getValue();  setReferencedAndResolvedType(type,  t,  enclosing);	  timeout    	non-compiled	[CE]  cannot  find  symbol	13	None	add
71	[BUG]  [BUGGY]      setReferencedAndResolvedType(type,  t,  forAnnotations);  [CE]  cannot  find  symbol  forAnnotations  [FE]                                    AssertionFailedError    [CONTEXT]    private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);    [BUGGY]      setReferencedAndResolvedType(type,  t,  forAnnotations);  [BUGGY]    }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	        setReferencedAndResolvedType(type,  t,  forAnnotations);	  timeout    	non-compiled	[CE]  cannot  find  symbol  forAnnotations	13	None	add
72	[BUG]  [BUGGY]  timeout  [FE]          AssertionFailedError    [CONTEXT]    private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);    [BUGGY]  if(type!=  null)  {  return  false;  }  if(type!=  null)  {  return  false;  }  [BUGGY]    }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	add	if(type!=    null)    {    return    false;    }    if(type!=  null)  {  return  false;  }	  timeout    	compilable	timeout	3	1	add
73	[BUG]  [BUGGY]  if(type!=  null)  {  return  false;  }  if(type!=  null)  {  return  false;  }  timeout  [FE]          AssertionFailedError    [CONTEXT]    private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);    [BUGGY]  if(type!=  null)  {  return  false;  }  if(type!=  null)  {  return  false;  }  [BUGGY]    }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(type!=    null)    {    return    false;    }    if(type!=  null)  {  return  false;  }	  timeout    	compilable	timeout	3	1	add
74	[BUG]  [BUGGY]  timeout  [FE]            AssertionFailedError    [CONTEXT]    private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);    [BUGGY]  if(type!=  null)  {  return  false;  }  if(type  ==  null)  {  return  false;  }  [BUGGY]    }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	add	if(type!=    null)    {    return    false;    }    if(type  ==  null)  {  return  false;  }	  timeout    	compilable	timeout	3	1	add
75	[BUG]  [BUGGY]  if(type!=  null)  {  return  false;  }  if(type  ==  null)  {  return  false;  }  timeout  [FE]            AssertionFailedError    [CONTEXT]    private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);    [BUGGY]  if(type!=  null)  {  return  false;  }  if(type  ==  null)  {  return  false;  }  [BUGGY]    }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(type!=    null)    {    return    false;    }    if(type  ==  null)  {  return  false;  }	  timeout    	compilable	timeout	3	1	add
76	[BUG]  [BUGGY]  if(type!=  null)  {  return  false;  }  if(type  >=  null)  {  return  false;  }  [CE]  bad  operand  types  for  binary  operator  '>='  [FE]              AssertionFailedError    [CONTEXT]    private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);    [BUGGY]  if(type!=  null)  {  return  false;  }  if(type  >=  null)  {  return  false;  }  [BUGGY]    }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(type!=    null)    {    return    false;    }    if(type  >=  null)  {  return  false;  }	  timeout    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>='	3	None	add
77	[BUG]  [BUGGY]  if(type!=  null)  {  return  false;  }  if(type  >>  null)  {  return  false;  }  [CE]  bad  operand  types  for  binary  operator  '>>'  [FE]                AssertionFailedError    [CONTEXT]    private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);    [BUGGY]  if(type!=  null)  {  return  false;  }  if(type  >>  null)  {  return  false;  }  [BUGGY]    }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(type!=    null)    {    return    false;    }    if(type  >>  null)  {  return  false;  }	  timeout    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>>'	3	None	add
78	[BUG]  [BUGGY]  if(type!=  null)  {  return  false;  }  If(type!=  null)  {  return  false;  }  [CE]  ';'  expected  [FE]                  AssertionFailedError    [CONTEXT]    private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);    [BUGGY]  if(type!=  null)  {  return  false;  }  If(type!=  null)  {  return  false;  }  [BUGGY]    }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(type!=    null)    {    return    false;    }    If(type!=  null)  {  return  false;  }	  timeout    	non-compiled	[CE]  ';'  expected	3	None	add
79	[BUG]  [BUGGY]  if(type!=  null)  {  return  false;  }  if(type  [Delete]  null)  {  return  false;  }  [CE]  ')'  expected  [FE]                    AssertionFailedError    [CONTEXT]    private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);    [BUGGY]  if(type!=  null)  {  return  false;  }  if(type  [Delete]  null)  {  return  false;  }  [BUGGY]    }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(type!=    null)    {    return    false;    }    if(type  [Delete]  null)  {  return  false;  }	  timeout    	non-compiled	[CE]  ')'  expected	3	None	add
80	[BUG]  [BUGGY]  if(type.isVarArgs()  ||  type.isVarArgs())  {  return  false;  }  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError    [CONTEXT]    private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);    [BUGGY]  if(type.isVarArgs()  ||  type.isVarArgs())  {  return  false;  }  [BUGGY]    }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(type.isVarArgs()  ||  type.isVarArgs())  {  return  false;  }	  if(type.isVarArgs())    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
81	[BUG]  [BUGGY]  if(!type.isVarArgs())  {  return  false;  }  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError    [CONTEXT]    private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);    [BUGGY]  if(!type.isVarArgs())  {  return  false;  }  [BUGGY]    }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(!type.isVarArgs())  {  return  false;  }	  if(type.isVarArgs())    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
82	[BUG]  [BUGGY]  if(type.isVarArgs()  ||  type.isAnnotations())  {  return  false;  }  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError    [CONTEXT]    private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);    [BUGGY]  if(type.isVarArgs()  ||  type.isAnnotations())  {  return  false;  }  [BUGGY]    }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(type.isVarArgs()  ||  type.isAnnotations())  {  return  false;  }	  if(type.isVarArgs())    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
83	[BUG]  [BUGGY]  if(registry.isVarArgs())  {  return  false;  }  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError    [CONTEXT]    private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);    [BUGGY]  if(registry.isVarArgs())  {  return  false;  }  [BUGGY]    }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(registry.isVarArgs())  {  return  false;  }	  if(type.isVarArgs())    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
84	[BUG]  [BUGGY]  if(type.isVarArgs()  ||  type.isSyntheticType())  {  return  false;  }  [CE]  cannot  find  symbol  [FE]                          AssertionFailedError    [CONTEXT]    private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);    [BUGGY]  if(type.isVarArgs()  ||  type.isSyntheticType())  {  return  false;  }  [BUGGY]    }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(type.isVarArgs()  ||  type.isSyntheticType())  {  return  false;  }	  if(type.isVarArgs())    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
85	[BUG]  [BUGGY]  if(type.isVarArgs()  ||  type.isStatic())  {  return  false;  }  [CE]  cannot  find  symbol  [FE]                            AssertionFailedError    [CONTEXT]    private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);    [BUGGY]  if(type.isVarArgs()  ||  type.isStatic())  {  return  false;  }  [BUGGY]    }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(type.isVarArgs()  ||  type.isStatic())  {  return  false;  }	  if(type.isVarArgs())    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
86	[BUG]  [BUGGY]  if(!validator)  {  return  false;  }  [CE]  bad  operand  type  Predicate<JSType>  for  unary  operator  '!'  [FE]            AssertionFailedError    [CONTEXT]    private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);    [BUGGY]  if(!validator)  {  return  false;  }  [BUGGY]    }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(!validator)  {  return  false;  }	  if(!validator)    {    return    true;    }    	non-compiled	[CE]  bad  operand  type  Predicate<JSType>  for  unary  operator  '!'	19	None	replace
87	[BUG]  [BUGGY]  if(validator)  {  return  false;  }  [CE]  incompatible  types  [FE]              AssertionFailedError    [CONTEXT]    private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);    [BUGGY]  if(validator)  {  return  false;  }  [BUGGY]    }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(validator)  {  return  false;  }	  if(!validator)    {    return    true;    }    	non-compiled	[CE]  incompatible  types	19	None	replace
88	[BUG]  [BUGGY]  if(!validator  &&  validator.equals(type))  {  return  true;  }  [CE]  bad  operand  type  Predicate<JSType>  for  unary  operator  '!'  [FE]                AssertionFailedError    [CONTEXT]    private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);    [BUGGY]  if(!validator  &&  validator.equals(type))  {  return  true;  }  [BUGGY]    }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(!validator  &&  validator.equals(type))  {  return  true;  }	  if(!validator)    {    return    true;    }    	non-compiled	[CE]  bad  operand  type  Predicate<JSType>  for  unary  operator  '!'	19	None	replace
89	[BUG]  [BUGGY]  if(!validator  &&  validator.isVarArgs())  {  return  true;  }  [CE]  bad  operand  type  Predicate<JSType>  for  unary  operator  '!'  [FE]                  AssertionFailedError    [CONTEXT]    private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);    [BUGGY]  if(!validator  &&  validator.isVarArgs())  {  return  true;  }  [BUGGY]    }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(!validator  &&  validator.isVarArgs())  {  return  true;  }	  if(!validator)    {    return    true;    }    	non-compiled	[CE]  bad  operand  type  Predicate<JSType>  for  unary  operator  '!'	19	None	replace
90	[BUG]  [BUGGY]  if(validator)  {  return  true;  }  [CE]  incompatible  types  [FE]                    AssertionFailedError    [CONTEXT]    private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);    [BUGGY]  if(validator)  {  return  true;  }  [BUGGY]    }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(validator)  {  return  true;  }	  if(!validator)    {    return    true;    }    	non-compiled	[CE]  incompatible  types	19	None	replace
91	[BUG]  [BUGGY]  if(!validator  &&  validator.isUnknownType())  {  return  true;  }  [CE]  bad  operand  type  Predicate<JSType>  for  unary  operator  '!'  [FE]                      AssertionFailedError    [CONTEXT]    private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);    [BUGGY]  if(!validator  &&  validator.isUnknownType())  {  return  true;  }  [BUGGY]    }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(!validator  &&  validator.isUnknownType())  {  return  true;  }	  if(!validator)    {    return    true;    }    	non-compiled	[CE]  bad  operand  type  Predicate<JSType>  for  unary  operator  '!'	19	None	replace
92	[BUG]  [BUGGY]  if(!validator  &&  type.isVarArgs())  {  return  true;  }  [CE]  bad  operand  type  Predicate<JSType>  for  unary  operator  '!'  [FE]                        AssertionFailedError    [CONTEXT]    private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);    [BUGGY]  if(!validator  &&  type.isVarArgs())  {  return  true;  }  [BUGGY]    }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(!validator  &&  type.isVarArgs())  {  return  true;  }	  if(!validator)    {    return    true;    }    	non-compiled	[CE]  bad  operand  type  Predicate<JSType>  for  unary  operator  '!'	19	None	replace
93	[BUG]  [BUGGY]  timeout  [FE]        AssertionFailedError    [CONTEXT]    private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);    [BUGGY]  resolveViaRegistry(t,  enclosing);  [BUGGY]    }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	add	resolveViaRegistry(t,  enclosing);	  return    false;    timeout    	compilable	timeout	2	1	replace
94	[BUG]  [BUGGY]  resolveViaRegistry(t,  enclosing);  timeout  [FE]        AssertionFailedError    [CONTEXT]    private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);    [BUGGY]  resolveViaRegistry(t,  enclosing);  [BUGGY]    }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	resolveViaRegistry(t,  enclosing);	  return    false;    timeout    	compilable	timeout	2	1	replace
95	[BUG]  [BUGGY]  if(type.isAnnotated())  {  return  false;  }  [CE]  cannot  find  symbol  [FE]          AssertionFailedError    [CONTEXT]    private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);    [BUGGY]  if(type.isAnnotated())  {  return  false;  }  [BUGGY]    }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(type.isAnnotated())  {  return  false;  }	  return    false;    timeout    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
96	[BUG]  [BUGGY]  if(type.isVarArgs()  ||  type.isVarArgs())  {  return  true;  }  [CE]  cannot  find  symbol  [FE]              AssertionFailedError    [CONTEXT]    private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);    [BUGGY]  if(type.isVarArgs()  ||  type.isVarArgs())  {  return  true;  }  [BUGGY]    }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(type.isVarArgs()  ||  type.isVarArgs())  {  return  true;  }	  if(type.isVarArgs())    {    return    true;    }    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
97	[BUG]  [BUGGY]  if(type.isVarArgs()  ||  type.isAnnotations())  {  return  true;  }  [CE]  cannot  find  symbol  [FE]                AssertionFailedError    [CONTEXT]    private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);    [BUGGY]  if(type.isVarArgs()  ||  type.isAnnotations())  {  return  true;  }  [BUGGY]    }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(type.isVarArgs()  ||  type.isAnnotations())  {  return  true;  }	  if(type.isVarArgs())    {    return    true;    }    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
98	[BUG]  [BUGGY]  if(type.isVarArgs()  ||  type.isUnknownType())  {  return  true;  }  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError    [CONTEXT]    private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);    [BUGGY]  if(type.isVarArgs()  ||  type.isUnknownType())  {  return  true;  }  [BUGGY]    }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(type.isVarArgs()  ||  type.isUnknownType())  {  return  true;  }	  if(type.isVarArgs())    {    return    true;    }    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
99	[BUG]  [BUGGY]  if(!type.isVarArgs())  {  return  true;  }  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError    [CONTEXT]    private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);    [BUGGY]  if(!type.isVarArgs())  {  return  true;  }  [BUGGY]    }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(!type.isVarArgs())  {  return  true;  }	  if(type.isVarArgs())    {    return    true;    }    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
100	[BUG]  [BUGGY]  if(type.isVarArgs()  ||  type.isSyntheticType())  {  return  true;  }  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError    [CONTEXT]    private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);    [BUGGY]  if(type.isVarArgs()  ||  type.isSyntheticType())  {  return  true;  }  [BUGGY]    }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(type.isVarArgs()  ||  type.isSyntheticType())  {  return  true;  }	  if(type.isVarArgs())    {    return    true;    }    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
101	[BUG]  [BUGGY]  if(type.isVarArgs()  ||  type.isStatic())  {  return  true;  }  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError    [CONTEXT]    private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);    [BUGGY]  if(type.isVarArgs()  ||  type.isStatic())  {  return  true;  }  [BUGGY]    }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(type.isVarArgs()  ||  type.isStatic())  {  return  true;  }	  if(type.isVarArgs())    {    return    true;    }    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
102	[BUG]  [BUGGY]  if(type!=  null  ||  type.isAnnotated())  {  return  false;  }  [CE]  cannot  find  symbol  [FE]            AssertionFailedError    [CONTEXT]    private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);    [BUGGY]  if(type!=  null  ||  type.isAnnotated())  {  return  false;  }  [BUGGY]    }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(type!=  null  ||  type.isAnnotated())  {  return  false;  }	  if(type    ==    null)    {    return    false;    }    timeout    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
103	[BUG]  [BUGGY]  timeout  [FE]        AssertionFailedError    [CONTEXT]    private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);    [BUGGY]  if(type.isUnknownType())  {  return  true;  }  if(type.isUnknownType())  {  return  true;  }  [BUGGY]    }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	add	if(type.isUnknownType())    {    return    true;    }    if(type.isUnknownType())  {  return  true;  }	  timeout    	compilable	timeout	20	1	add
104	[BUG]  [BUGGY]  if(type.isUnknownType())  {  return  true;  }  if(type.isUnknownType())  {  return  true;  }  timeout  [FE]        AssertionFailedError    [CONTEXT]    private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);    [BUGGY]  if(type.isUnknownType())  {  return  true;  }  if(type.isUnknownType())  {  return  true;  }  [BUGGY]    }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(type.isUnknownType())    {    return    true;    }    if(type.isUnknownType())  {  return  true;  }	  timeout    	compilable	timeout	20	1	add
105	[BUG]  [BUGGY]  if(type.isUnknownType())  {  return  true;  }  If(type.isUnknownType())  {  return  true;  }  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]    private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);    [BUGGY]  if(type.isUnknownType())  {  return  true;  }  If(type.isUnknownType())  {  return  true;  }  [BUGGY]    }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(type.isUnknownType())    {    return    true;    }    If(type.isUnknownType())  {  return  true;  }	  timeout    	non-compiled	[CE]  ';'  expected	20	None	add
106	[BUG]  [BUGGY]  if(type.isUnknownType())  {  return  true;  }  if(Type.isUnknownType())  {  return  true;  }  [CE]  cannot  find  symbol  Type  [FE]            AssertionFailedError    [CONTEXT]    private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);    [BUGGY]  if(type.isUnknownType())  {  return  true;  }  if(Type.isUnknownType())  {  return  true;  }  [BUGGY]    }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(type.isUnknownType())    {    return    true;    }    if(Type.isUnknownType())  {  return  true;  }	  timeout    	non-compiled	[CE]  cannot  find  symbol  Type	20	None	add
107	[BUG]  [BUGGY]  return  false;  Predicate  validator  =  t.getValue();  setReferencedAndResolvedType(type,  t,  enclosing);  [CE]  cannot  find  symbol  [FE]        AssertionFailedError    [CONTEXT]    private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);    [BUGGY]  return  false;  Predicate  validator  =  t.getValue();  setReferencedAndResolvedType(type,  t,  enclosing);  [BUGGY]    }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	return    false;    Predicate  validator  =  t.getValue();  setReferencedAndResolvedType(type,  t,  enclosing);	  timeout    	non-compiled	[CE]  cannot  find  symbol	1	None	add
108	[BUG]  [BUGGY]  return  false;  Predicate  validator  =  enclosing.getValue();  setReferencedAndResolvedType(type,  t,  validator);  [CE]  cannot  find  symbol  [FE]          AssertionFailedError    [CONTEXT]    private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);    [BUGGY]  return  false;  Predicate  validator  =  enclosing.getValue();  setReferencedAndResolvedType(type,  t,  validator);  [BUGGY]    }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	return    false;    Predicate  validator  =  enclosing.getValue();  setReferencedAndResolvedType(type,  t,  validator);	  timeout    	non-compiled	[CE]  cannot  find  symbol	1	None	add
109	[BUG]  [BUGGY]  return  false;  Predicate  validator  =  enclosing.getValue();  setReferencedAndResolvedType(type,  t,  validator,  enclosing);  [CE]  cannot  find  symbol  [FE]            AssertionFailedError    [CONTEXT]    private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);    [BUGGY]  return  false;  Predicate  validator  =  enclosing.getValue();  setReferencedAndResolvedType(type,  t,  validator,  enclosing);  [BUGGY]    }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	return    false;    Predicate  validator  =  enclosing.getValue();  setReferencedAndResolvedType(type,  t,  validator,  enclosing);	  timeout    	non-compiled	[CE]  cannot  find  symbol	1	None	add
110	[BUG]  [BUGGY]  return  false;  Predicate  validator  =  enclosing.getValue();  [CE]  cannot  find  symbol  [FE]              AssertionFailedError    [CONTEXT]    private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);    [BUGGY]  return  false;  Predicate  validator  =  enclosing.getValue();  [BUGGY]    }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	return    false;    Predicate  validator  =  enclosing.getValue();	  timeout    	non-compiled	[CE]  cannot  find  symbol	1	None	add
111	[BUG]  [BUGGY]  return  false;  if(type!=  null)  {  forAnnotations  =  Collections.emptyList();  if(forAnnotations!=  null)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);    [BUGGY]  return  false;  if(type!=  null)  {  forAnnotations  =  Collections.emptyList();  if(forAnnotations!=  null)  {  return  false;  }  [BUGGY]    }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	return    false;    if(type!=  null)  {  forAnnotations  =  Collections.emptyList();  if(forAnnotations!=  null)  {  return  false;  }	  timeout    	non-compiled	[CE]  illegal  start  of  expression	1	None	add
112	[BUG]  [BUGGY]  return  false;  if(type!=  null)  {  forAnnotations  =  Collections.emptyList();  if(forAnnotations  ==  null)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]    private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);    [BUGGY]  return  false;  if(type!=  null)  {  forAnnotations  =  Collections.emptyList();  if(forAnnotations  ==  null)  {  return  false;  }  [BUGGY]    }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	return    false;    if(type!=  null)  {  forAnnotations  =  Collections.emptyList();  if(forAnnotations  ==  null)  {  return  false;  }	  timeout    	non-compiled	[CE]  illegal  start  of  expression	1	None	add
113	[BUG]  [BUGGY]  return  false;  if(type!=  null)  {  forAnnotations  =  Collections.emptyList();  if(forAnnotations!=  null)  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError    [CONTEXT]    private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);    [BUGGY]  return  false;  if(type!=  null)  {  forAnnotations  =  Collections.emptyList();  if(forAnnotations!=  null)  {  return  true;  }  [BUGGY]    }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	return    false;    if(type!=  null)  {  forAnnotations  =  Collections.emptyList();  if(forAnnotations!=  null)  {  return  true;  }	  timeout    	non-compiled	[CE]  illegal  start  of  expression	1	None	add
114	[BUG]  [BUGGY]  return  false;  if(type!=  null)  {  forAnnotations  =  Collections.emptyList();  if(forAnnotations  ==  null)  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError    [CONTEXT]    private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);    [BUGGY]  return  false;  if(type!=  null)  {  forAnnotations  =  Collections.emptyList();  if(forAnnotations  ==  null)  {  return  true;  }  [BUGGY]    }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	return    false;    if(type!=  null)  {  forAnnotations  =  Collections.emptyList();  if(forAnnotations  ==  null)  {  return  true;  }	  timeout    	non-compiled	[CE]  illegal  start  of  expression	1	None	add
115	[BUG]  [BUGGY]  if(registry.isReferenced())  {  return  true;  }  [CE]  cannot  find  symbol  [FE]          AssertionFailedError    [CONTEXT]    private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);    [BUGGY]  if(registry.isReferenced())  {  return  true;  }  [BUGGY]    }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(registry.isReferenced())  {  return  true;  }	  if(type.isReferenced())    {    return    true;    }    	non-compiled	[CE]  cannot  find  symbol	22	None	replace
116	[BUG]  [BUGGY]  if(type.isReferencedType())  {  return  true;  }  [CE]  cannot  find  symbol  [FE]            AssertionFailedError    [CONTEXT]    private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);    [BUGGY]  if(type.isReferencedType())  {  return  true;  }  [BUGGY]    }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(type.isReferencedType())  {  return  true;  }	  if(type.isReferenced())    {    return    true;    }    	non-compiled	[CE]  cannot  find  symbol	22	None	replace
117	[BUG]  [BUGGY]  if(!type.isReferenced())  {  return  true;  }  [CE]  cannot  find  symbol  [FE]              AssertionFailedError    [CONTEXT]    private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);    [BUGGY]  if(!type.isReferenced())  {  return  true;  }  [BUGGY]    }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(!type.isReferenced())  {  return  true;  }	  if(type.isReferenced())    {    return    true;    }    	non-compiled	[CE]  cannot  find  symbol	22	None	replace
118	[BUG]  [BUGGY]  if(type.isReferenced()  ||  type.isReferenced())  {  return  true;  }  [CE]  cannot  find  symbol  [FE]                AssertionFailedError    [CONTEXT]    private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);    [BUGGY]  if(type.isReferenced()  ||  type.isReferenced())  {  return  true;  }  [BUGGY]    }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(type.isReferenced()  ||  type.isReferenced())  {  return  true;  }	  if(type.isReferenced())    {    return    true;    }    	non-compiled	[CE]  cannot  find  symbol	22	None	replace
119	[BUG]  [BUGGY]  if(type.isReferenced()  ||  type.isAnnotated())  {  return  true;  }  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError    [CONTEXT]    private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);    [BUGGY]  if(type.isReferenced()  ||  type.isAnnotated())  {  return  true;  }  [BUGGY]    }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(type.isReferenced()  ||  type.isAnnotated())  {  return  true;  }	  if(type.isReferenced())    {    return    true;    }    	non-compiled	[CE]  cannot  find  symbol	22	None	replace
120	[BUG]  [BUGGY]  if(type.isReferenced()  ||  type.isAnnotations())  {  return  true;  }  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError    [CONTEXT]    private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);    [BUGGY]  if(type.isReferenced()  ||  type.isAnnotations())  {  return  true;  }  [BUGGY]    }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(type.isReferenced()  ||  type.isAnnotations())  {  return  true;  }	  if(type.isReferenced())    {    return    true;    }    	non-compiled	[CE]  cannot  find  symbol	22	None	replace
121	[BUG]  [BUGGY]  timeout  [FE]                    AssertionFailedError    [CONTEXT]    private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);    [BUGGY]  if(type!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	add	if(type!=  null)  {  throw  new  IllegalArgumentException( " ");  }	  throw    new    IllegalArgumentException(   "   ");    timeout    	compilable	timeout	12	1	replace
122	[BUG]  [BUGGY]  if(type!=  null)  {  throw  new  IllegalArgumentException( " ");  }  timeout  [FE]                    AssertionFailedError    [CONTEXT]    private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);    [BUGGY]  if(type!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(type!=  null)  {  throw  new  IllegalArgumentException( " ");  }	  throw    new    IllegalArgumentException(   "   ");    timeout    	compilable	timeout	12	1	replace
123	[BUG]  [BUGGY]  timeout  [FE]                      AssertionFailedError    [CONTEXT]    private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);    [BUGGY]  if(type  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	add	if(type  ==  null)  {  throw  new  IllegalArgumentException( " ");  }	  throw    new    IllegalArgumentException(   "   ");    timeout    	compilable	timeout	12	1	replace
124	[BUG]  [BUGGY]  if(type  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  timeout  [FE]                      AssertionFailedError    [CONTEXT]    private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);    [BUGGY]  if(type  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(type  ==  null)  {  throw  new  IllegalArgumentException( " ");  }	  throw    new    IllegalArgumentException(   "   ");    timeout    	compilable	timeout	12	1	replace
125	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( " ");  [CE]  <identifier>  expected  [FE]                        AssertionFailedError    [CONTEXT]    private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);    [BUGGY]  Throwables.throw  new  IllegalArgumentException( " ");  [BUGGY]    }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	Throwables.throw  new  IllegalArgumentException( " ");	  throw    new    IllegalArgumentException(   "   ");    timeout    	non-compiled	[CE]  <identifier>  expected	12	None	replace
126	[BUG]  [BUGGY]  timeout  [FE]                          AssertionFailedError    [CONTEXT]    private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);    [BUGGY]  throw  new  IllegalStateException( " ");  [BUGGY]    }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	add	throw  new  IllegalStateException( " ");	  throw    new    IllegalArgumentException(   "   ");    timeout    	compilable	timeout	12	1	replace
127	[BUG]  [BUGGY]  throw  new  IllegalStateException( " ");  timeout  [FE]                          AssertionFailedError    [CONTEXT]    private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);    [BUGGY]  throw  new  IllegalStateException( " ");  [BUGGY]    }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	throw  new  IllegalStateException( " ");	  throw    new    IllegalArgumentException(   "   ");    timeout    	compilable	timeout	12	1	replace
128	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( " ".equals(type));  [CE]  no  suitable  constructor  found  for  IllegalArgumentException(boolean)  [FE]                            AssertionFailedError    [CONTEXT]    private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);    [BUGGY]  throw  new  IllegalArgumentException( " ".equals(type));  [BUGGY]    }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	throw  new  IllegalArgumentException( " ".equals(type));	  throw    new    IllegalArgumentException(   "   ");    timeout    	non-compiled	[CE]  no  suitable  constructor  found  for  IllegalArgumentException(boolean)	12	None	replace
129	[BUG]  [BUGGY]  if(type!=  null)  {  throw  new  IllegalArgumentException( " ".getMessage());  }  [CE]  cannot  find  symbol  [FE]                              AssertionFailedError    [CONTEXT]    private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);    [BUGGY]  if(type!=  null)  {  throw  new  IllegalArgumentException( " ".getMessage());  }  [BUGGY]    }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(type!=  null)  {  throw  new  IllegalArgumentException( " ".getMessage());  }	  throw    new    IllegalArgumentException(   "   ");    timeout    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
130	[BUG]  [BUGGY]  if(type  ==  null  ||  forAnnotations)  {  return  true;  }  [CE]  cannot  find  symbol  forAnnotations  [FE]        AssertionFailedError    [CONTEXT]    private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);    [BUGGY]  if(type  ==  null  ||  forAnnotations)  {  return  true;  }  [BUGGY]    }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(type  ==  null  ||  forAnnotations)  {  return  true;  }	  if(type    ==    null)    {    return    true;    }    timeout    	non-compiled	[CE]  cannot  find  symbol  forAnnotations	16	None	replace
131	[BUG]  [BUGGY]  if(type  ==  null  ||  forAnnotations)  {  return  false;  }  [CE]  cannot  find  symbol  forAnnotations  [FE]          AssertionFailedError    [CONTEXT]    private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);    [BUGGY]  if(type  ==  null  ||  forAnnotations)  {  return  false;  }  [BUGGY]    }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(type  ==  null  ||  forAnnotations)  {  return  false;  }	  if(type    ==    null)    {    return    true;    }    timeout    	non-compiled	[CE]  cannot  find  symbol  forAnnotations	16	None	replace
132	[BUG]  [BUGGY]  timeout  [FE]            AssertionFailedError    [CONTEXT]    private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);    [BUGGY]  if(type  ==  null  ||  enclosing!=  null)  {  return  true;  }  [BUGGY]    }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	add	if(type  ==  null  ||  enclosing!=  null)  {  return  true;  }	  if(type    ==    null)    {    return    true;    }    timeout    	compilable	timeout	16	1	replace
133	[BUG]  [BUGGY]  if(type  ==  null  ||  enclosing!=  null)  {  return  true;  }  timeout  [FE]            AssertionFailedError    [CONTEXT]    private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);    [BUGGY]  if(type  ==  null  ||  enclosing!=  null)  {  return  true;  }  [BUGGY]    }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(type  ==  null  ||  enclosing!=  null)  {  return  true;  }	  if(type    ==    null)    {    return    true;    }    timeout    	compilable	timeout	16	1	replace
134	[BUG]  [BUGGY]  if(type!=  null)  {  return  true;  }  if(type  [BUGGY]  null)  {  return  true;  }  [CE]  ')'  expected  [FE]                AssertionFailedError    [CONTEXT]    private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);    [BUGGY]  if(type!=  null)  {  return  true;  }  if(type  [BUGGY]  null)  {  return  true;  }  [BUGGY]    }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(type!=    null)    {    return    true;    }    if(type  [BUGGY]  null)  {  return  true;  }	  timeout    	non-compiled	[CE]  ')'  expected	8	None	add
135	[BUG]  [BUGGY]  timeout  [FE]          AssertionFailedError    [CONTEXT]    private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);    [BUGGY]  if(validator  ==  null)  {  return  true;  }  [BUGGY]    }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	add	if(validator  ==  null)  {  return  true;  }	  if(validator!=    null)    {    return    true;    }    timeout    	compilable	timeout	18	1	replace
136	[BUG]  [BUGGY]  if(validator  ==  null)  {  return  true;  }  timeout  [FE]          AssertionFailedError    [CONTEXT]    private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);    [BUGGY]  if(validator  ==  null)  {  return  true;  }  [BUGGY]    }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(validator  ==  null)  {  return  true;  }	  if(validator!=    null)    {    return    true;    }    timeout    	compilable	timeout	18	1	replace
137	[BUG]  [BUGGY]  timeout  [FE]            AssertionFailedError    [CONTEXT]    private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);    [BUGGY]  if(validator!=  null  ||  enclosing  ==  null)  {  return  true;  }  [BUGGY]    }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	add	if(validator!=  null  ||  enclosing  ==  null)  {  return  true;  }	  if(validator!=    null)    {    return    true;    }    timeout    	compilable	timeout	18	1	replace
138	[BUG]  [BUGGY]  if(validator!=  null  ||  enclosing  ==  null)  {  return  true;  }  timeout  [FE]            AssertionFailedError    [CONTEXT]    private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);    [BUGGY]  if(validator!=  null  ||  enclosing  ==  null)  {  return  true;  }  [BUGGY]    }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(validator!=  null  ||  enclosing  ==  null)  {  return  true;  }	  if(validator!=    null)    {    return    true;    }    timeout    	compilable	timeout	18	1	replace
139	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(   "   ");  JSError.make(t,  enclosing,  getPropertyName()));  throw  new  IllegalArgumentException( "   ");  [CE]  [FE]                    AssertionFailedError    [CONTEXT]    private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);    [BUGGY]  throw  new  IllegalArgumentException(   "   ");  JSError.make(t,  enclosing,  getPropertyName()));  throw  new  IllegalArgumentException( "   ");  [BUGGY]    }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	throw    new    IllegalArgumentException(   "   ");    JSError.make(t,  enclosing,  getPropertyName()));  throw  new  IllegalArgumentException( "   ");	  timeout    	non-compiled	[CE]  	11	None	add
140	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(   "   ");  JSError.make(t,  enclosing,  DEFAULT_NAMESPACE_ERROR, "   ");  [CE]  cannot  find  symbol  DEFAULT_NAMESPACE_ERROR  [FE]                      AssertionFailedError    [CONTEXT]    private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);    [BUGGY]  throw  new  IllegalArgumentException(   "   ");  JSError.make(t,  enclosing,  DEFAULT_NAMESPACE_ERROR, "   ");  [BUGGY]    }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	throw    new    IllegalArgumentException(   "   ");    JSError.make(t,  enclosing,  DEFAULT_NAMESPACE_ERROR, "   ");	  timeout    	non-compiled	[CE]  cannot  find  symbol  DEFAULT_NAMESPACE_ERROR	11	None	add
141	[BUG]  [BUGGY]  parent.resolveViaRegistry(t,  enclosing);  [CE]  cannot  find  symbol  parent  [FE]                AssertionFailedError    [CONTEXT]    private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);    [BUGGY]  parent.resolveViaRegistry(t,  enclosing);  [BUGGY]    }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	parent.resolveViaRegistry(t,  enclosing);	  if(type!=    null)    {    return    true;    }    timeout    	non-compiled	[CE]  cannot  find  symbol  parent	9	None	replace
142	[BUG]  [BUGGY]  timeout  [FE]                  AssertionFailedError    [CONTEXT]    private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);    [BUGGY]  if(type!=  null  ||!type.equals(enclosing))  {  return  true;  }  [BUGGY]    }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	add	if(type!=  null  ||!type.equals(enclosing))  {  return  true;  }	  if(type!=    null)    {    return    true;    }    timeout    	compilable	timeout	9	1	replace
143	[BUG]  [BUGGY]  if(type!=  null  ||!type.equals(enclosing))  {  return  true;  }  timeout  [FE]                  AssertionFailedError    [CONTEXT]    private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);    [BUGGY]  if(type!=  null  ||!type.equals(enclosing))  {  return  true;  }  [BUGGY]    }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(type!=  null  ||!type.equals(enclosing))  {  return  true;  }	  if(type!=    null)    {    return    true;    }    timeout    	compilable	timeout	9	1	replace
144	[BUG]  [BUGGY]  timeout  [FE]                    AssertionFailedError    [CONTEXT]    private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);    [BUGGY]  if(type!=  null  ||!type.isUnknownType())  {  return  true;  }  [BUGGY]    }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	add	if(type!=  null  ||!type.isUnknownType())  {  return  true;  }	  if(type!=    null)    {    return    true;    }    timeout    	compilable	timeout	9	1	replace
145	[BUG]  [BUGGY]  if(type!=  null  ||!type.isUnknownType())  {  return  true;  }  timeout  [FE]                    AssertionFailedError    [CONTEXT]    private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);    [BUGGY]  if(type!=  null  ||!type.isUnknownType())  {  return  true;  }  [BUGGY]    }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(type!=  null  ||!type.isUnknownType())  {  return  true;  }	  if(type!=    null)    {    return    true;    }    timeout    	compilable	timeout	9	1	replace
146	[BUG]  [BUGGY]  if(type.isUnknownType())  {  return  true;  }  if(type.isUnknownType())  {  return  true;  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);    [BUGGY]  if(type.isUnknownType())  {  return  true;  }  if(type.isUnknownType())  {  return  true;  [BUGGY]    }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(type.isUnknownType())    {    return    true;    }    if(type.isUnknownType())  {  return  true;	  timeout    	non-compiled	[CE]  illegal  start  of  expression	20	None	add
147	[BUG]  [BUGGY]  if(type  ==  null)  {  forAnnotations  =  Collections.emptyList();  if(forAnnotations!=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError    [CONTEXT]    private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);    [BUGGY]  if(type  ==  null)  {  forAnnotations  =  Collections.emptyList();  if(forAnnotations!=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);  }  [BUGGY]    }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(type  ==  null)  {  forAnnotations  =  Collections.emptyList();  if(forAnnotations!=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);  }	      timeout    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
148	[BUG]  [BUGGY]  if(type  ==  null)  {  forAnnotations  =  Collections.emptyList();  if(forAnnotations!=  null)  {  setReferencedAndResolvedType(type,  propertyNode,  enclosing);  }  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError    [CONTEXT]    private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);    [BUGGY]  if(type  ==  null)  {  forAnnotations  =  Collections.emptyList();  if(forAnnotations!=  null)  {  setReferencedAndResolvedType(type,  propertyNode,  enclosing);  }  [BUGGY]    }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(type  ==  null)  {  forAnnotations  =  Collections.emptyList();  if(forAnnotations!=  null)  {  setReferencedAndResolvedType(type,  propertyNode,  enclosing);  }	      timeout    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
149	[BUG]  [BUGGY]  forAnnotations  =  enclosing.getAnnotations();  [CE]  cannot  find  symbol  forAnnotations  [FE]                          AssertionFailedError    [CONTEXT]    private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);    [BUGGY]  forAnnotations  =  enclosing.getAnnotations();  [BUGGY]    }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	forAnnotations  =  enclosing.getAnnotations();	      timeout    	non-compiled	[CE]  cannot  find  symbol  forAnnotations	14	None	replace
150	[BUG]  [BUGGY]  if(type  ==  null)  {  forAnnotations  =  Collections.emptyList();  if(forAnnotations!=  null)  {  setReferencedAndResolvedType(type,  type,  enclosing);  }  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError    [CONTEXT]    private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);    [BUGGY]  if(type  ==  null)  {  forAnnotations  =  Collections.emptyList();  if(forAnnotations!=  null)  {  setReferencedAndResolvedType(type,  type,  enclosing);  }  [BUGGY]    }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(type  ==  null)  {  forAnnotations  =  Collections.emptyList();  if(forAnnotations!=  null)  {  setReferencedAndResolvedType(type,  type,  enclosing);  }	      timeout    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
151	[BUG]  [BUGGY]  if(type  ==  null)  {  forAnnotations  =  Collections.emptyList();  if(propertyContinuations!=  null)  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError    [CONTEXT]    private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);    [BUGGY]  if(type  ==  null)  {  forAnnotations  =  Collections.emptyList();  if(propertyContinuations!=  null)  {  return  true;  }  [BUGGY]    }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(type  ==  null)  {  forAnnotations  =  Collections.emptyList();  if(propertyContinuations!=  null)  {  return  true;  }	      timeout    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
152	[BUG]  [BUGGY]  timeout  [FE]        AssertionFailedError    [CONTEXT]    private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);    [BUGGY]  if(type.isUnknownType()  ||  type.isUnknownType())  {  return  true;  }  [BUGGY]    }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	add	if(type.isUnknownType()  ||  type.isUnknownType())  {  return  true;  }	  if(type.isUnknownType())    {    return    true;    }    timeout    	compilable	timeout	21	1	replace
153	[BUG]  [BUGGY]  if(type.isUnknownType()  ||  type.isUnknownType())  {  return  true;  }  timeout  [FE]        AssertionFailedError    [CONTEXT]    private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);    [BUGGY]  if(type.isUnknownType()  ||  type.isUnknownType())  {  return  true;  }  [BUGGY]    }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(type.isUnknownType()  ||  type.isUnknownType())  {  return  true;  }	  if(type.isUnknownType())    {    return    true;    }    timeout    	compilable	timeout	21	1	replace
154	[BUG]  [BUGGY]  timeout  [FE]          AssertionFailedError    [CONTEXT]    private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);    [BUGGY]  if(type.isUnknownType()  ||  type.isUnknownType())  {  return  false;  }  [BUGGY]    }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	add	if(type.isUnknownType()  ||  type.isUnknownType())  {  return  false;  }	  if(type.isUnknownType())    {    return    true;    }    timeout    	compilable	timeout	21	1	replace
155	[BUG]  [BUGGY]  if(type.isUnknownType()  ||  type.isUnknownType())  {  return  false;  }  timeout  [FE]          AssertionFailedError    [CONTEXT]    private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);    [BUGGY]  if(type.isUnknownType()  ||  type.isUnknownType())  {  return  false;  }  [BUGGY]    }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(type.isUnknownType()  ||  type.isUnknownType())  {  return  false;  }	  if(type.isUnknownType())    {    return    true;    }    timeout    	compilable	timeout	21	1	replace
156	[BUG]  [BUGGY]  if(type.isUnknownType()  ||  type.isReferenced())  {  return  true;  }  [CE]  cannot  find  symbol  [FE]            AssertionFailedError    [CONTEXT]    private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);    [BUGGY]  if(type.isUnknownType()  ||  type.isReferenced())  {  return  true;  }  [BUGGY]    }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(type.isUnknownType()  ||  type.isReferenced())  {  return  true;  }	  if(type.isUnknownType())    {    return    true;    }    timeout    	non-compiled	[CE]  cannot  find  symbol	21	None	replace
157	[BUG]  [BUGGY]  if(type.isUnknownType()  ||  type.isSyntheticBlock())  {  return  true;  }  [CE]  cannot  find  symbol  [FE]              AssertionFailedError    [CONTEXT]    private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);    [BUGGY]  if(type.isUnknownType()  ||  type.isSyntheticBlock())  {  return  true;  }  [BUGGY]    }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(type.isUnknownType()  ||  type.isSyntheticBlock())  {  return  true;  }	  if(type.isUnknownType())    {    return    true;    }    timeout    	non-compiled	[CE]  cannot  find  symbol	21	None	replace
158	[BUG]  [BUGGY]  timeout  [FE]        AssertionFailedError    [CONTEXT]    private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);    [BUGGY]  if(type.isUnknownType())  {  return  false;  }  [BUGGY]    }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	add	if(type.isUnknownType())  {  return  false;  }	  return    false;    timeout    	compilable	timeout	2	1	replace
159	[BUG]  [BUGGY]  if(type.isUnknownType())  {  return  false;  }  timeout  [FE]        AssertionFailedError    [CONTEXT]    private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);    [BUGGY]  if(type.isUnknownType())  {  return  false;  }  [BUGGY]    }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(type.isUnknownType())  {  return  false;  }	  return    false;    timeout    	compilable	timeout	2	1	replace
160	[BUG]  [BUGGY]  resolveViaRegistry(t,  type);  [CE]  method  resolveViaRegistry  in  class  NamedType  cannot  be  applied  to  given  types;  [FE]          AssertionFailedError    [CONTEXT]    private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);    [BUGGY]  resolveViaRegistry(t,  type);  [BUGGY]    }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	resolveViaRegistry(t,  type);	  return    false;    timeout    	non-compiled	[CE]  method  resolveViaRegistry  in  class  NamedType  cannot  be  applied  to  given  types;	2	None	replace
161	[BUG]  [BUGGY]  if(!validator  &&  type.isUnknownType())  {  return  true;  }  [CE]  bad  operand  type  Predicate<JSType>  for  unary  operator  '!'  [FE]            AssertionFailedError    [CONTEXT]    private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);    [BUGGY]  if(!validator  &&  type.isUnknownType())  {  return  true;  }  [BUGGY]    }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(!validator  &&  type.isUnknownType())  {  return  true;  }	  if(!validator)    {    return    true;    }    	non-compiled	[CE]  bad  operand  type  Predicate<JSType>  for  unary  operator  '!'	19	None	replace
162	[BUG]  [BUGGY]  if(!validator  ||  type.isUnknownType())  {  return  true;  }  [CE]  bad  operand  type  Predicate<JSType>  for  unary  operator  '!'  [FE]              AssertionFailedError    [CONTEXT]    private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);    [BUGGY]  if(!validator  ||  type.isUnknownType())  {  return  true;  }  [BUGGY]    }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(!validator  ||  type.isUnknownType())  {  return  true;  }	  if(!validator)    {    return    true;    }    	non-compiled	[CE]  bad  operand  type  Predicate<JSType>  for  unary  operator  '!'	19	None	replace
163	[BUG]  [BUGGY]  if(!validator  &&!type.isUnknownType())  {  return  true;  }  [CE]  bad  operand  type  Predicate<JSType>  for  unary  operator  '!'  [FE]                AssertionFailedError    [CONTEXT]    private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);    [BUGGY]  if(!validator  &&!type.isUnknownType())  {  return  true;  }  [BUGGY]    }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(!validator  &&!type.isUnknownType())  {  return  true;  }	  if(!validator)    {    return    true;    }    	non-compiled	[CE]  bad  operand  type  Predicate<JSType>  for  unary  operator  '!'	19	None	replace
164	[BUG]  [BUGGY]  if(type.isReferenced()  ||  type.equals(enclosing))  {  return  true;  }  [CE]  cannot  find  symbol  [FE]          AssertionFailedError    [CONTEXT]    private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);    [BUGGY]  if(type.isReferenced()  ||  type.equals(enclosing))  {  return  true;  }  [BUGGY]    }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(type.isReferenced()  ||  type.equals(enclosing))  {  return  true;  }	  if(type.isReferenced())    {    return    true;    }    	non-compiled	[CE]  cannot  find  symbol	22	None	replace
165	[BUG]  [BUGGY]  if(type.isReferenced()  ||  enclosing.isReferenced())  {  return  true;  }  [CE]  cannot  find  symbol  [FE]            AssertionFailedError    [CONTEXT]    private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);    [BUGGY]  if(type.isReferenced()  ||  enclosing.isReferenced())  {  return  true;  }  [BUGGY]    }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(type.isReferenced()  ||  enclosing.isReferenced())  {  return  true;  }	  if(type.isReferenced())    {    return    true;    }    	non-compiled	[CE]  cannot  find  symbol	22	None	replace
166	[BUG]  [BUGGY]  if(type.isReferenced()  ||  t.isReferenced())  {  return  true;  }  [CE]  cannot  find  symbol  [FE]              AssertionFailedError    [CONTEXT]    private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);    [BUGGY]  if(type.isReferenced()  ||  t.isReferenced())  {  return  true;  }  [BUGGY]    }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(type.isReferenced()  ||  t.isReferenced())  {  return  true;  }	  if(type.isReferenced())    {    return    true;    }    	non-compiled	[CE]  cannot  find  symbol	22	None	replace
167	[BUG]  [BUGGY]  if(type.isReferenced()  ||  type.isSyntheticType())  {  return  true;  }  [CE]  cannot  find  symbol  [FE]                AssertionFailedError    [CONTEXT]    private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);    [BUGGY]  if(type.isReferenced()  ||  type.isSyntheticType())  {  return  true;  }  [BUGGY]    }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(type.isReferenced()  ||  type.isSyntheticType())  {  return  true;  }	  if(type.isReferenced())    {    return    true;    }    	non-compiled	[CE]  cannot  find  symbol	22	None	replace
168	[BUG]  [BUGGY]  if(type.isVarArgs()  ||  type.isUnknownType())  {  return  false;  }  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError    [CONTEXT]    private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);    [BUGGY]  if(type.isVarArgs()  ||  type.isUnknownType())  {  return  false;  }  [BUGGY]    }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(type.isVarArgs()  ||  type.isUnknownType())  {  return  false;  }	  if(type.isVarArgs())    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
169	[BUG]  [BUGGY]  if(type.isVarArgs()  ||  type.isInterface())  {  return  false;  }  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError    [CONTEXT]    private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);    [BUGGY]  if(type.isVarArgs()  ||  type.isInterface())  {  return  false;  }  [BUGGY]    }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(type.isVarArgs()  ||  type.isInterface())  {  return  false;  }	  if(type.isVarArgs())    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
170	[BUG]  [BUGGY]  if(type.isVarArgs()  ||  type.isReferenced())  {  return  false;  }  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError    [CONTEXT]    private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);    [BUGGY]  if(type.isVarArgs()  ||  type.isReferenced())  {  return  false;  }  [BUGGY]    }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(type.isVarArgs()  ||  type.isReferenced())  {  return  false;  }	  if(type.isVarArgs())    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
171	[BUG]  [BUGGY]  if(type.isVarArgs()  ||  type.isFunctionDeclaration())  {  return  false;  }  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError    [CONTEXT]    private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);    [BUGGY]  if(type.isVarArgs()  ||  type.isFunctionDeclaration())  {  return  false;  }  [BUGGY]    }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(type.isVarArgs()  ||  type.isFunctionDeclaration())  {  return  false;  }	  if(type.isVarArgs())    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
172	[BUG]  [BUGGY]  if(type  ==  null)  {  return  false;  }  if(type  {  null)  {  return  false;  }  [CE]  ')'  expected  [FE]            AssertionFailedError    [CONTEXT]    private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);    [BUGGY]  if(type  ==  null)  {  return  false;  }  if(type  {  null)  {  return  false;  }  [BUGGY]    }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(type    ==    null)    {    return    false;    }    if(type  {  null)  {  return  false;  }	  timeout    	non-compiled	[CE]  ')'  expected	5	None	add
173	[BUG]  [BUGGY]      if(type  ==  null)  {  forAnnotations  =  Collections.emptyList();  if(forAnnotations!=  null)  {  setReferencedAndResolvedType(type,  propertyNode);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError    [CONTEXT]    private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);    [BUGGY]      if(type  ==  null)  {  forAnnotations  =  Collections.emptyList();  if(forAnnotations!=  null)  {  setReferencedAndResolvedType(type,  propertyNode);  }  [BUGGY]    }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	        if(type  ==  null)  {  forAnnotations  =  Collections.emptyList();  if(forAnnotations!=  null)  {  setReferencedAndResolvedType(type,  propertyNode);  }	  timeout    	non-compiled	[CE]  illegal  start  of  expression	13	None	add
174	[BUG]  [BUGGY]  timeout  [FE]                    AssertionFailedError    [CONTEXT]    private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);    [BUGGY]  if(type!=  null)  {  throw  new  IllegalArgumentException( " ");  }  else  {  setReferencedAndResolvedType(type,  t,  enclosing);  }  [BUGGY]    }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	add	if(type!=  null)  {  throw  new  IllegalArgumentException( " ");  }  else  {  setReferencedAndResolvedType(type,  t,  enclosing);  }	  throw    new    IllegalArgumentException(   "   ");    timeout    	compilable	timeout	12	1	replace
175	[BUG]  [BUGGY]  if(type!=  null)  {  throw  new  IllegalArgumentException( " ");  }  else  {  setReferencedAndResolvedType(type,  t,  enclosing);  }  timeout  [FE]                    AssertionFailedError    [CONTEXT]    private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);    [BUGGY]  if(type!=  null)  {  throw  new  IllegalArgumentException( " ");  }  else  {  setReferencedAndResolvedType(type,  t,  enclosing);  }  [BUGGY]    }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(type!=  null)  {  throw  new  IllegalArgumentException( " ");  }  else  {  setReferencedAndResolvedType(type,  t,  enclosing);  }	  throw    new    IllegalArgumentException(   "   ");    timeout    	compilable	timeout	12	1	replace
176	[BUG]  [BUGGY]  if(type!=  null)  {  throw  new  IllegalArgumentException( " ");  }  else  {  setReferencedAndResolvedType(type,  propertyNode,  enclosing);  }  [CE]  cannot  find  symbol  propertyNode  [FE]                      AssertionFailedError    [CONTEXT]    private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);    [BUGGY]  if(type!=  null)  {  throw  new  IllegalArgumentException( " ");  }  else  {  setReferencedAndResolvedType(type,  propertyNode,  enclosing);  }  [BUGGY]    }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(type!=  null)  {  throw  new  IllegalArgumentException( " ");  }  else  {  setReferencedAndResolvedType(type,  propertyNode,  enclosing);  }	  throw    new    IllegalArgumentException(   "   ");    timeout    	non-compiled	[CE]  cannot  find  symbol  propertyNode	12	None	replace
177	[BUG]  [BUGGY]  timeout  [FE]                        AssertionFailedError    [CONTEXT]    private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);    [BUGGY]  if(type!=  null)  {  throw  new  IllegalArgumentException( " ");  }  else  {  setReferencedAndResolvedType(type,  t,  enclosing);  return  true;  }  [BUGGY]    }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	add	if(type!=  null)  {  throw  new  IllegalArgumentException( " ");  }  else  {  setReferencedAndResolvedType(type,  t,  enclosing);  return  true;  }	  throw    new    IllegalArgumentException(   "   ");    timeout    	compilable	timeout	12	1	replace
178	[BUG]  [BUGGY]  if(type!=  null)  {  throw  new  IllegalArgumentException( " ");  }  else  {  setReferencedAndResolvedType(type,  t,  enclosing);  return  true;  }  timeout  [FE]                        AssertionFailedError    [CONTEXT]    private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);    [BUGGY]  if(type!=  null)  {  throw  new  IllegalArgumentException( " ");  }  else  {  setReferencedAndResolvedType(type,  t,  enclosing);  return  true;  }  [BUGGY]    }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(type!=  null)  {  throw  new  IllegalArgumentException( " ");  }  else  {  setReferencedAndResolvedType(type,  t,  enclosing);  return  true;  }	  throw    new    IllegalArgumentException(   "   ");    timeout    	compilable	timeout	12	1	replace
179	[BUG]  [BUGGY]  if(type  ==  null)  {  return  true;  }  if(type  {  null)  {  return  true;  }  [CE]  ')'  expected  [FE]        AssertionFailedError    [CONTEXT]    private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);    [BUGGY]  if(type  ==  null)  {  return  true;  }  if(type  {  null)  {  return  true;  }  [BUGGY]    }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(type    ==    null)    {    return    true;    }    if(type  {  null)  {  return  true;  }	  timeout    	non-compiled	[CE]  ')'  expected	15	None	add
180	[BUG]  [BUGGY]  return  false;  if(type!=  null)  {  forAnnotations  =  Collections.emptyList();  if(propertyContinuations!=  null)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);    [BUGGY]  return  false;  if(type!=  null)  {  forAnnotations  =  Collections.emptyList();  if(propertyContinuations!=  null)  {  return  false;  }  [BUGGY]    }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	return    false;    if(type!=  null)  {  forAnnotations  =  Collections.emptyList();  if(propertyContinuations!=  null)  {  return  false;  }	  timeout    	non-compiled	[CE]  illegal  start  of  expression	1	None	add
181	[BUG]  [BUGGY]  return  false;  if(type!=  null)  {  forAnnotations  =  Collections.emptyList();  if(forAnnotations  ==  Collections.emptyList())  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);    [BUGGY]  return  false;  if(type!=  null)  {  forAnnotations  =  Collections.emptyList();  if(forAnnotations  ==  Collections.emptyList())  {  return  false;  }  [BUGGY]    }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	return    false;    if(type!=  null)  {  forAnnotations  =  Collections.emptyList();  if(forAnnotations  ==  Collections.emptyList())  {  return  false;  }	  timeout    	non-compiled	[CE]  illegal  start  of  expression	1	None	add
182	[BUG]  [BUGGY]  return  false;  if(type!=  null)  {  forAnnotations  =  Collections.emptyList();  if(propertyContinuations  ==  null)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);    [BUGGY]  return  false;  if(type!=  null)  {  forAnnotations  =  Collections.emptyList();  if(propertyContinuations  ==  null)  {  return  false;  }  [BUGGY]    }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	return    false;    if(type!=  null)  {  forAnnotations  =  Collections.emptyList();  if(propertyContinuations  ==  null)  {  return  false;  }	  timeout    	non-compiled	[CE]  illegal  start  of  expression	1	None	add
183	[BUG]  [BUGGY]  return  false;  if(type!=  null)  {  forAnnotations  =  Collections.emptyList();  if(forAnnotations  ==  Collections.emptyList())  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);    [BUGGY]  return  false;  if(type!=  null)  {  forAnnotations  =  Collections.emptyList();  if(forAnnotations  ==  Collections.emptyList())  {  return  true;  }  [BUGGY]    }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	return    false;    if(type!=  null)  {  forAnnotations  =  Collections.emptyList();  if(forAnnotations  ==  Collections.emptyList())  {  return  true;  }	  timeout    	non-compiled	[CE]  illegal  start  of  expression	1	None	add
184	[BUG]  [BUGGY]  return  false;  if(type!=  null)  {  forAnnotations  =  Collections.emptyList();  if(propertyContinuations!=  null)  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);    [BUGGY]  return  false;  if(type!=  null)  {  forAnnotations  =  Collections.emptyList();  if(propertyContinuations!=  null)  {  return  true;  }  [BUGGY]    }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	return    false;    if(type!=  null)  {  forAnnotations  =  Collections.emptyList();  if(propertyContinuations!=  null)  {  return  true;  }	  timeout    	non-compiled	[CE]  illegal  start  of  expression	1	None	add
185	[BUG]  [BUGGY]  return  false;  return  false;  [CE]  unreachable  statement  [FE]                  AssertionFailedError    [CONTEXT]    private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);    [BUGGY]  return  false;  return  false;  [BUGGY]    }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	return    false;    return  false;	  timeout    	non-compiled	[CE]  unreachable  statement	1	None	add
186	[BUG]  [BUGGY]  timeout  [FE]            AssertionFailedError    [CONTEXT]    private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);    [BUGGY]  if(type  ==  null  ||!type.equals(enclosing))  {  return  false;  }  [BUGGY]    }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	add	if(type  ==  null  ||!type.equals(enclosing))  {  return  false;  }	  if(type    ==    null)    {    return    false;    }    timeout    	compilable	timeout	6	1	replace
187	[BUG]  [BUGGY]  if(type  ==  null  ||!type.equals(enclosing))  {  return  false;  }  timeout  [FE]            AssertionFailedError    [CONTEXT]    private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);    [BUGGY]  if(type  ==  null  ||!type.equals(enclosing))  {  return  false;  }  [BUGGY]    }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(type  ==  null  ||!type.equals(enclosing))  {  return  false;  }	  if(type    ==    null)    {    return    false;    }    timeout    	compilable	timeout	6	1	replace
188	[BUG]  [BUGGY]  timeout  [FE]              AssertionFailedError    [CONTEXT]    private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);    [BUGGY]  if(type  ==  null  ||  type.isUnknownType())  {  return  false;  }  [BUGGY]    }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	add	if(type  ==  null  ||  type.isUnknownType())  {  return  false;  }	  if(type    ==    null)    {    return    false;    }    timeout    	compilable	timeout	6	1	replace
189	[BUG]  [BUGGY]  if(type  ==  null  ||  type.isUnknownType())  {  return  false;  }  timeout  [FE]              AssertionFailedError    [CONTEXT]    private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);    [BUGGY]  if(type  ==  null  ||  type.isUnknownType())  {  return  false;  }  [BUGGY]    }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(type  ==  null  ||  type.isUnknownType())  {  return  false;  }	  if(type    ==    null)    {    return    false;    }    timeout    	compilable	timeout	6	1	replace
190	[BUG]  [BUGGY]  if(type.isVarArgs()  ||  type.isInterface())  {  return  true;  }  [CE]  cannot  find  symbol  [FE]              AssertionFailedError    [CONTEXT]    private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);    [BUGGY]  if(type.isVarArgs()  ||  type.isInterface())  {  return  true;  }  [BUGGY]    }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(type.isVarArgs()  ||  type.isInterface())  {  return  true;  }	  if(type.isVarArgs())    {    return    true;    }    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
191	[BUG]  [BUGGY]  if(type.isVarArgs()  ||  type.isReferenced())  {  return  true;  }  [CE]  cannot  find  symbol  [FE]                AssertionFailedError    [CONTEXT]    private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);    [BUGGY]  if(type.isVarArgs()  ||  type.isReferenced())  {  return  true;  }  [BUGGY]    }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(type.isVarArgs()  ||  type.isReferenced())  {  return  true;  }	  if(type.isVarArgs())    {    return    true;    }    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
192	[BUG]  [BUGGY]  if(type.isVarArgs()  ||  type.isFunctionPrototype())  {  return  true;  }  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError    [CONTEXT]    private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);    [BUGGY]  if(type.isVarArgs()  ||  type.isFunctionPrototype())  {  return  true;  }  [BUGGY]    }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(type.isVarArgs()  ||  type.isFunctionPrototype())  {  return  true;  }	  if(type.isVarArgs())    {    return    true;    }    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
193	[BUG]  [BUGGY]  if(type  >=  null)  {  return  false;  }  [CE]  bad  operand  types  for  binary  operator  '>='  [FE]          AssertionFailedError    [CONTEXT]    private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);    [BUGGY]  if(type  >=  null)  {  return  false;  }  [BUGGY]    }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(type  >=  null)  {  return  false;  }	  if(type!=    null)    {    return    false;    }    timeout    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>='	4	None	replace
194	[BUG]  [BUGGY]  if(type.isVarArgs()  ||  type.isInstanceType())  {  return  true;  }  [CE]  cannot  find  symbol  [FE]              AssertionFailedError    [CONTEXT]    private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);    [BUGGY]  if(type.isVarArgs()  ||  type.isInstanceType())  {  return  true;  }  [BUGGY]    }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(type.isVarArgs()  ||  type.isInstanceType())  {  return  true;  }	  if(type.isVarArgs())    {    return    true;    }    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
195	[BUG]  [BUGGY]  if(type.isVarArgs()  ||  type.isAllType())  {  return  true;  }  [CE]  cannot  find  symbol  [FE]                AssertionFailedError    [CONTEXT]    private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);    [BUGGY]  if(type.isVarArgs()  ||  type.isAllType())  {  return  true;  }  [BUGGY]    }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(type.isVarArgs()  ||  type.isAllType())  {  return  true;  }	  if(type.isVarArgs())    {    return    true;    }    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
196	[BUG]  [BUGGY]  if(!validator  ||  type.equals(enclosing))  {  return  true;  }  [CE]  bad  operand  type  Predicate<JSType>  for  unary  operator  '!'  [FE]            AssertionFailedError    [CONTEXT]    private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);    [BUGGY]  if(!validator  ||  type.equals(enclosing))  {  return  true;  }  [BUGGY]    }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(!validator  ||  type.equals(enclosing))  {  return  true;  }	  if(!validator)    {    return    true;    }    	non-compiled	[CE]  bad  operand  type  Predicate<JSType>  for  unary  operator  '!'	19	None	replace
197	[BUG]  [BUGGY]  if(!validator  ||  type.isSyntheticType())  {  return  true;  }  [CE]  bad  operand  type  Predicate<JSType>  for  unary  operator  '!'  [FE]              AssertionFailedError    [CONTEXT]    private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);    [BUGGY]  if(!validator  ||  type.isSyntheticType())  {  return  true;  }  [BUGGY]    }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(!validator  ||  type.isSyntheticType())  {  return  true;  }	  if(!validator)    {    return    true;    }    	non-compiled	[CE]  bad  operand  type  Predicate<JSType>  for  unary  operator  '!'	19	None	replace
198	[BUG]  [BUGGY]  if(!validator  &&  validator)  {  return  true;  }  [CE]  bad  operand  type  Predicate<JSType>  for  unary  operator  '!'  [FE]                AssertionFailedError    [CONTEXT]    private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);    [BUGGY]  if(!validator  &&  validator)  {  return  true;  }  [BUGGY]    }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(!validator  &&  validator)  {  return  true;  }	  if(!validator)    {    return    true;    }    	non-compiled	[CE]  bad  operand  type  Predicate<JSType>  for  unary  operator  '!'	19	None	replace
199	[BUG]  [BUGGY]  timeout  [FE]                AssertionFailedError    [CONTEXT]    private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);    [BUGGY]  if(type!=  null  ||  enclosing.equals(type))  {  return  true;  }  [BUGGY]    }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	add	if(type!=  null  ||  enclosing.equals(type))  {  return  true;  }	  if(type!=    null)    {    return    true;    }    timeout    	compilable	timeout	9	1	replace
200	[BUG]  [BUGGY]  if(type!=  null  ||  enclosing.equals(type))  {  return  true;  }  timeout  [FE]                AssertionFailedError    [CONTEXT]    private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);    [BUGGY]  if(type!=  null  ||  enclosing.equals(type))  {  return  true;  }  [BUGGY]    }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(type!=  null  ||  enclosing.equals(type))  {  return  true;  }	  if(type!=    null)    {    return    true;    }    timeout    	compilable	timeout	9	1	replace
201	[BUG]  [BUGGY]  if(type!=  null  ||!resolved)  {  return  true;  }  [CE]  resolved  has  private  access  in  JSType  [FE]                  AssertionFailedError    [CONTEXT]    private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);    [BUGGY]  if(type!=  null  ||!resolved)  {  return  true;  }  [BUGGY]    }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(type!=  null  ||!resolved)  {  return  true;  }	  if(type!=    null)    {    return    true;    }    timeout    	non-compiled	[CE]  resolved  has  private  access  in  JSType	9	None	replace
202	[BUG]  [BUGGY]  if(type!=  null  ||  enclosing.size()  ==  0)  {  return  true;  }  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError    [CONTEXT]    private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);    [BUGGY]  if(type!=  null  ||  enclosing.size()  ==  0)  {  return  true;  }  [BUGGY]    }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(type!=  null  ||  enclosing.size()  ==  0)  {  return  true;  }	  if(type!=    null)    {    return    true;    }    timeout    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
203	[BUG]  [BUGGY]  if(type  ==  null  ||!forAnnotations)  {  return  false;  }  [CE]  cannot  find  symbol  forAnnotations  [FE]            AssertionFailedError    [CONTEXT]    private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);    [BUGGY]  if(type  ==  null  ||!forAnnotations)  {  return  false;  }  [BUGGY]    }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(type  ==  null  ||!forAnnotations)  {  return  false;  }	  if(type    ==    null)    {    return    false;    }    timeout    	non-compiled	[CE]  cannot  find  symbol  forAnnotations	6	None	replace
204	[BUG]  [BUGGY]  if(type  ==  null  ||!resolved)  {  return  false;  }  [CE]  resolved  has  private  access  in  JSType  [FE]              AssertionFailedError    [CONTEXT]    private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);    [BUGGY]  if(type  ==  null  ||!resolved)  {  return  false;  }  [BUGGY]    }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(type  ==  null  ||!resolved)  {  return  false;  }	  if(type    ==    null)    {    return    false;    }    timeout    	non-compiled	[CE]  resolved  has  private  access  in  JSType	6	None	replace
205	[BUG]  [BUGGY]  if(type  ==  null  ||  enclosing!=  propertyNode)  {  return  false;  }  [CE]  cannot  find  symbol  propertyNode  [FE]                AssertionFailedError    [CONTEXT]    private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);    [BUGGY]  if(type  ==  null  ||  enclosing!=  propertyNode)  {  return  false;  }  [BUGGY]    }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(type  ==  null  ||  enclosing!=  propertyNode)  {  return  false;  }	  if(type    ==    null)    {    return    false;    }    timeout    	non-compiled	[CE]  cannot  find  symbol  propertyNode	6	None	replace
206	[BUG]  [BUGGY]  if(type.isVarArgs()  ||  type.isFunctionPrototype())  {  return  false;  }  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError    [CONTEXT]    private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);    [BUGGY]  if(type.isVarArgs()  ||  type.isFunctionPrototype())  {  return  false;  }  [BUGGY]    }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(type.isVarArgs()  ||  type.isFunctionPrototype())  {  return  false;  }	  if(type.isVarArgs())    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
207	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(   "   ");  JSError.make(t,  enclosing,  getPropertyName()));  [CE]  [FE]                    AssertionFailedError    [CONTEXT]    private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);    [BUGGY]  throw  new  IllegalArgumentException(   "   ");  JSError.make(t,  enclosing,  getPropertyName()));  [BUGGY]    }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	throw    new    IllegalArgumentException(   "   ");    JSError.make(t,  enclosing,  getPropertyName()));	  timeout    	non-compiled	[CE]  	11	None	add
208	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(   "   ");  JSError.make(t,  enclosing,  DEFAULT_NON_OBJECT_TYPE);  [CE]  cannot  find  symbol  DEFAULT_NON_OBJECT_TYPE  [FE]                      AssertionFailedError    [CONTEXT]    private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);    [BUGGY]  throw  new  IllegalArgumentException(   "   ");  JSError.make(t,  enclosing,  DEFAULT_NON_OBJECT_TYPE);  [BUGGY]    }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	throw    new    IllegalArgumentException(   "   ");    JSError.make(t,  enclosing,  DEFAULT_NON_OBJECT_TYPE);	  timeout    	non-compiled	[CE]  cannot  find  symbol  DEFAULT_NON_OBJECT_TYPE	11	None	add
209	[BUG]  [BUGGY]  if(type!=  null  ||  forAnnotations)  {  return  false;  }  [CE]  cannot  find  symbol  forAnnotations  [FE]          AssertionFailedError    [CONTEXT]    private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);    [BUGGY]  if(type!=  null  ||  forAnnotations)  {  return  false;  }  [BUGGY]    }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(type!=  null  ||  forAnnotations)  {  return  false;  }	  if(type!=    null)    {    return    false;    }    timeout    	non-compiled	[CE]  cannot  find  symbol  forAnnotations	4	None	replace
210	[BUG]  [BUGGY]  if(type!=  null  &&  enclosing.size()  >  0)  {  return  false;  }  [CE]  cannot  find  symbol  [FE]            AssertionFailedError    [CONTEXT]    private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);    [BUGGY]  if(type!=  null  &&  enclosing.size()  >  0)  {  return  false;  }  [BUGGY]    }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(type!=  null  &&  enclosing.size()  >  0)  {  return  false;  }	  if(type!=    null)    {    return    false;    }    timeout    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
211	[BUG]  [BUGGY]  if(type!=  null  &&!resolved)  {  return  false;  }  [CE]  resolved  has  private  access  in  JSType  [FE]              AssertionFailedError    [CONTEXT]    private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);    [BUGGY]  if(type!=  null  &&!resolved)  {  return  false;  }  [BUGGY]    }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(type!=  null  &&!resolved)  {  return  false;  }	  if(type!=    null)    {    return    false;    }    timeout    	non-compiled	[CE]  resolved  has  private  access  in  JSType	4	None	replace
212	[BUG]  [BUGGY]  if(type.isSyntheticType())  {  return  false;  }  [CE]  cannot  find  symbol  [FE]        AssertionFailedError    [CONTEXT]    private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);    [BUGGY]  if(type.isSyntheticType())  {  return  false;  }  [BUGGY]    }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(type.isSyntheticType())  {  return  false;  }	  return    false;    timeout    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
213	[BUG]  [BUGGY]  if(type.isReferenced())  {  return  false;  }  [CE]  cannot  find  symbol  [FE]          AssertionFailedError    [CONTEXT]    private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);    [BUGGY]  if(type.isReferenced())  {  return  false;  }  [BUGGY]    }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(type.isReferenced())  {  return  false;  }	  return    false;    timeout    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
214	[BUG]  [BUGGY]  if(type.isAnnotated())  {  forAnnotations  inferred  =  true;  forAnnotations  =  inferred;  }  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError    [CONTEXT]    private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);    [BUGGY]  if(type.isAnnotated())  {  forAnnotations  inferred  =  true;  forAnnotations  =  inferred;  }  [BUGGY]    }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(type.isAnnotated())  {  forAnnotations  inferred  =  true;  forAnnotations  =  inferred;  }	      timeout    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
215	[BUG]  [BUGGY]  if(type!=  null)  {  forAnnotations  |=  Collections.emptyList();  charno  =  type.intValue();  return  true;  }  [CE]  cannot  find  symbol  forAnnotations  [FE]                        AssertionFailedError    [CONTEXT]    private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);    [BUGGY]  if(type!=  null)  {  forAnnotations  |=  Collections.emptyList();  charno  =  type.intValue();  return  true;  }  [BUGGY]    }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(type!=  null)  {  forAnnotations  |=  Collections.emptyList();  charno  =  type.intValue();  return  true;  }	      timeout    	non-compiled	[CE]  cannot  find  symbol  forAnnotations	14	None	replace
216	[BUG]  [BUGGY]  if(type  ==  null)  {  forAnnotations  |=  Collections.emptyList();  }  [CE]  cannot  find  symbol  forAnnotations  [FE]                          AssertionFailedError    [CONTEXT]    private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);    [BUGGY]  if(type  ==  null)  {  forAnnotations  |=  Collections.emptyList();  }  [BUGGY]    }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(type  ==  null)  {  forAnnotations  |=  Collections.emptyList();  }	      timeout    	non-compiled	[CE]  cannot  find  symbol  forAnnotations	14	None	replace
217	[BUG]  [BUGGY]  if(type!=  null)  {  forAnnotations  |=  Collections.emptyList();  }  [CE]  cannot  find  symbol  forAnnotations  [FE]                            AssertionFailedError    [CONTEXT]    private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);    [BUGGY]  if(type!=  null)  {  forAnnotations  |=  Collections.emptyList();  }  [BUGGY]    }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(type!=  null)  {  forAnnotations  |=  Collections.emptyList();  }	      timeout    	non-compiled	[CE]  cannot  find  symbol  forAnnotations	14	None	replace
218	[BUG]  [BUGGY]  if(type  ==  null)  {  forAnnotations  |=  Collections.emptyList();  charno  =  type.intValue();  return  true;  }  [CE]  cannot  find  symbol  forAnnotations  [FE]                              AssertionFailedError    [CONTEXT]    private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);    [BUGGY]  if(type  ==  null)  {  forAnnotations  |=  Collections.emptyList();  charno  =  type.intValue();  return  true;  }  [BUGGY]    }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(type  ==  null)  {  forAnnotations  |=  Collections.emptyList();  charno  =  type.intValue();  return  true;  }	      timeout    	non-compiled	[CE]  cannot  find  symbol  forAnnotations	14	None	replace
219	[BUG]  [BUGGY]  if(type.isUnknownType()  ||  type.isSubtype(enclosing))  {  return  true;  }  [CE]  method  isSubtype  in  class  JSType  cannot  be  applied  to  given  types;  [FE]        AssertionFailedError    [CONTEXT]    private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);    [BUGGY]  if(type.isUnknownType()  ||  type.isSubtype(enclosing))  {  return  true;  }  [BUGGY]    }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(type.isUnknownType()  ||  type.isSubtype(enclosing))  {  return  true;  }	  if(type.isUnknownType())    {    return    true;    }    timeout    	non-compiled	[CE]  method  isSubtype  in  class  JSType  cannot  be  applied  to  given  types;	21	None	replace
220	[BUG]  [BUGGY]  timeout  [FE]          AssertionFailedError    [CONTEXT]    private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);    [BUGGY]  if(type.isUnknownType()  ||  type.equals(enclosing))  {  return  true;  }  [BUGGY]    }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	add	if(type.isUnknownType()  ||  type.equals(enclosing))  {  return  true;  }	  if(type.isUnknownType())    {    return    true;    }    timeout    	compilable	timeout	21	1	replace
221	[BUG]  [BUGGY]  if(type.isUnknownType()  ||  type.equals(enclosing))  {  return  true;  }  timeout  [FE]          AssertionFailedError    [CONTEXT]    private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);    [BUGGY]  if(type.isUnknownType()  ||  type.equals(enclosing))  {  return  true;  }  [BUGGY]    }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(type.isUnknownType()  ||  type.equals(enclosing))  {  return  true;  }	  if(type.isUnknownType())    {    return    true;    }    timeout    	compilable	timeout	21	1	replace
222	[BUG]  [BUGGY]  if(type.isUnknownType()  ||  type.isPrimitive())  {  return  true;  }  [CE]  cannot  find  symbol  [FE]            AssertionFailedError    [CONTEXT]    private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);    [BUGGY]  if(type.isUnknownType()  ||  type.isPrimitive())  {  return  true;  }  [BUGGY]    }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(type.isUnknownType()  ||  type.isPrimitive())  {  return  true;  }	  if(type.isUnknownType())    {    return    true;    }    timeout    	non-compiled	[CE]  cannot  find  symbol	21	None	replace
223	[BUG]  [BUGGY]  timeout  [FE]              AssertionFailedError    [CONTEXT]    private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);    [BUGGY]  if(type.isUnknownType()  ||  type.isInstanceType())  {  return  true;  }  [BUGGY]    }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	add	if(type.isUnknownType()  ||  type.isInstanceType())  {  return  true;  }	  if(type.isUnknownType())    {    return    true;    }    timeout    	compilable	timeout	21	1	replace
224	[BUG]  [BUGGY]  if(type.isUnknownType()  ||  type.isInstanceType())  {  return  true;  }  timeout  [FE]              AssertionFailedError    [CONTEXT]    private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);    [BUGGY]  if(type.isUnknownType()  ||  type.isInstanceType())  {  return  true;  }  [BUGGY]    }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(type.isUnknownType()  ||  type.isInstanceType())  {  return  true;  }	  if(type.isUnknownType())    {    return    true;    }    timeout    	compilable	timeout	21	1	replace
225	[BUG]  [BUGGY]  if(type!=  null)  {  return  false;  }  if(type  [BUGGY]  null)  {  return  false;  }  [CE]  ')'  expected  [FE]          AssertionFailedError    [CONTEXT]    private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);    [BUGGY]  if(type!=  null)  {  return  false;  }  if(type  [BUGGY]  null)  {  return  false;  }  [BUGGY]    }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(type!=    null)    {    return    false;    }    if(type  [BUGGY]  null)  {  return  false;  }	  timeout    	non-compiled	[CE]  ')'  expected	3	None	add
226	[BUG]  [BUGGY]  if(type.isReferenced()  ||  type.isUnknownType())  {  return  true;  }  [CE]  cannot  find  symbol  [FE]          AssertionFailedError    [CONTEXT]    private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);    [BUGGY]  if(type.isReferenced()  ||  type.isUnknownType())  {  return  true;  }  [BUGGY]    }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(type.isReferenced()  ||  type.isUnknownType())  {  return  true;  }	  if(type.isReferenced())    {    return    true;    }    	non-compiled	[CE]  cannot  find  symbol	22	None	replace
227	[BUG]  [BUGGY]  if(type.isReferenced()  ||  type.isInferred())  {  return  true;  }  [CE]  cannot  find  symbol  [FE]            AssertionFailedError    [CONTEXT]    private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);    [BUGGY]  if(type.isReferenced()  ||  type.isInferred())  {  return  true;  }  [BUGGY]    }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(type.isReferenced()  ||  type.isInferred())  {  return  true;  }	  if(type.isReferenced())    {    return    true;    }    	non-compiled	[CE]  cannot  find  symbol	22	None	replace
228	[BUG]  [BUGGY]  if(type.isReferenced()  ||  type.isVarArgs())  {  return  true;  }  [CE]  cannot  find  symbol  [FE]              AssertionFailedError    [CONTEXT]    private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);    [BUGGY]  if(type.isReferenced()  ||  type.isVarArgs())  {  return  true;  }  [BUGGY]    }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(type.isReferenced()  ||  type.isVarArgs())  {  return  true;  }	  if(type.isReferenced())    {    return    true;    }    	non-compiled	[CE]  cannot  find  symbol	22	None	replace
229	[BUG]  [BUGGY]  if(type  ==  null  ||!forAnnotations)  {  return  true;  }  [CE]  cannot  find  symbol  forAnnotations  [FE]        AssertionFailedError    [CONTEXT]    private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);    [BUGGY]  if(type  ==  null  ||!forAnnotations)  {  return  true;  }  [BUGGY]    }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(type  ==  null  ||!forAnnotations)  {  return  true;  }	  if(type    ==    null)    {    return    true;    }    timeout    	non-compiled	[CE]  cannot  find  symbol  forAnnotations	16	None	replace
230	[BUG]  [BUGGY]  if(type  ==  null  ||!resolved)  {  return  true;  }  [CE]  resolved  has  private  access  in  JSType  [FE]          AssertionFailedError    [CONTEXT]    private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);    [BUGGY]  if(type  ==  null  ||!resolved)  {  return  true;  }  [BUGGY]    }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(type  ==  null  ||!resolved)  {  return  true;  }	  if(type    ==    null)    {    return    true;    }    timeout    	non-compiled	[CE]  resolved  has  private  access  in  JSType	16	None	replace
231	[BUG]  [BUGGY]  return  false;  if(type!=  null)  {  return  false;  }  [CE]  unreachable  statement  [FE]        AssertionFailedError    [CONTEXT]    private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);    [BUGGY]  return  false;  if(type!=  null)  {  return  false;  }  [BUGGY]    }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	return    false;    if(type!=  null)  {  return  false;  }	  timeout    	non-compiled	[CE]  unreachable  statement	1	None	add
232	[BUG]  [BUGGY]  return  false;  if(type.isSyntheticType())  {  forAnnotations  inferred  =  false;  forAnnotations  inferred  =  true;  forAnnotations  =  inferred;  }  [CE]  cannot  find  symbol  [FE]          AssertionFailedError    [CONTEXT]    private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);    [BUGGY]  return  false;  if(type.isSyntheticType())  {  forAnnotations  inferred  =  false;  forAnnotations  inferred  =  true;  forAnnotations  =  inferred;  }  [BUGGY]    }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	return    false;    if(type.isSyntheticType())  {  forAnnotations  inferred  =  false;  forAnnotations  inferred  =  true;  forAnnotations  =  inferred;  }	  timeout    	non-compiled	[CE]  cannot  find  symbol	1	None	add
233	[BUG]  [BUGGY]  return  false;  if(type.isSyntheticType())  {  forAnnotations  inferred  =  false;  forAnnotations  inferred  =  false;  forAnnotations  inferred  =  true;  }  [CE]  cannot  find  symbol  [FE]            AssertionFailedError    [CONTEXT]    private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);    [BUGGY]  return  false;  if(type.isSyntheticType())  {  forAnnotations  inferred  =  false;  forAnnotations  inferred  =  false;  forAnnotations  inferred  =  true;  }  [BUGGY]    }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	return    false;    if(type.isSyntheticType())  {  forAnnotations  inferred  =  false;  forAnnotations  inferred  =  false;  forAnnotations  inferred  =  true;  }	  timeout    	non-compiled	[CE]  cannot  find  symbol	1	None	add
234	[BUG]  [BUGGY]  return  false;  if(type.isReferenced())  {  return  false;  }  [CE]  cannot  find  symbol  [FE]              AssertionFailedError    [CONTEXT]    private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);    [BUGGY]  return  false;  if(type.isReferenced())  {  return  false;  }  [BUGGY]    }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	return    false;    if(type.isReferenced())  {  return  false;  }	  timeout    	non-compiled	[CE]  cannot  find  symbol	1	None	add
235	[BUG]  [BUGGY]  return  false;  if(type.isSyntheticType())  {  forAnnotations  inferred  =  true;  forAnnotations  inferred  =  false;  forAnnotations  inferred  =  true;  }  [CE]  cannot  find  symbol  [FE]                AssertionFailedError    [CONTEXT]    private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);    [BUGGY]  return  false;  if(type.isSyntheticType())  {  forAnnotations  inferred  =  true;  forAnnotations  inferred  =  false;  forAnnotations  inferred  =  true;  }  [BUGGY]    }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	return    false;    if(type.isSyntheticType())  {  forAnnotations  inferred  =  true;  forAnnotations  inferred  =  false;  forAnnotations  inferred  =  true;  }	  timeout    	non-compiled	[CE]  cannot  find  symbol	1	None	add
236	[BUG]  [BUGGY]  return  false;  if(type.isSyntheticType())  {  forAnnotations  inferred  =  false;  forAnnotations  inferred  =  true;  }  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError    [CONTEXT]    private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);    [BUGGY]  return  false;  if(type.isSyntheticType())  {  forAnnotations  inferred  =  false;  forAnnotations  inferred  =  true;  }  [BUGGY]    }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	return    false;    if(type.isSyntheticType())  {  forAnnotations  inferred  =  false;  forAnnotations  inferred  =  true;  }	  timeout    	non-compiled	[CE]  cannot  find  symbol	1	None	add
237	[BUG]  [BUGGY]  return  false;  if(type.isVarArgs())  {  return  false;  }  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError    [CONTEXT]    private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);    [BUGGY]  return  false;  if(type.isVarArgs())  {  return  false;  }  [BUGGY]    }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	return    false;    if(type.isVarArgs())  {  return  false;  }	  timeout    	non-compiled	[CE]  cannot  find  symbol	1	None	add
238	[BUG]  [BUGGY]      if(type.isSyntheticType())  {  forAnnotations  inferred  =  true;  forAnnotations  =  inferred;  }  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError    [CONTEXT]    private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);    [BUGGY]      if(type.isSyntheticType())  {  forAnnotations  inferred  =  true;  forAnnotations  =  inferred;  }  [BUGGY]    }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	        if(type.isSyntheticType())  {  forAnnotations  inferred  =  true;  forAnnotations  =  inferred;  }	  timeout    	non-compiled	[CE]  cannot  find  symbol	13	None	add
239	[BUG]  [BUGGY]  timeout  [FE]          AssertionFailedError    [CONTEXT]    private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);    [BUGGY]  if(validator!=  null  &&  type.isUnknownType())  {  return  true;  }  [BUGGY]    }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	add	if(validator!=  null  &&  type.isUnknownType())  {  return  true;  }	  if(validator!=    null)    {    return    true;    }    timeout    	compilable	timeout	18	1	replace
240	[BUG]  [BUGGY]  if(validator!=  null  &&  type.isUnknownType())  {  return  true;  }  timeout  [FE]          AssertionFailedError    [CONTEXT]    private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);    [BUGGY]  if(validator!=  null  &&  type.isUnknownType())  {  return  true;  }  [BUGGY]    }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(validator!=  null  &&  type.isUnknownType())  {  return  true;  }	  if(validator!=    null)    {    return    true;    }    timeout    	compilable	timeout	18	1	replace
241	[BUG]  [BUGGY]  if(validator!=  null  &&  type.isSyntheticType())  {  return  true;  }  [CE]  cannot  find  symbol  [FE]            AssertionFailedError    [CONTEXT]    private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);    [BUGGY]  if(validator!=  null  &&  type.isSyntheticType())  {  return  true;  }  [BUGGY]    }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(validator!=  null  &&  type.isSyntheticType())  {  return  true;  }	  if(validator!=    null)    {    return    true;    }    timeout    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
242	[BUG]  [BUGGY]  if(validator!=  null  &&  type.isVarArgs())  {  return  true;  }  [CE]  cannot  find  symbol  [FE]              AssertionFailedError    [CONTEXT]    private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  JSType  type  =  registry.getType(reference);  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);    [BUGGY]  if(validator!=  null  &&  type.isVarArgs())  {  return  true;  }  [BUGGY]    }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	223	223	3	replace	if(validator!=  null  &&  type.isVarArgs())  {  return  true;  }	  if(validator!=    null)    {    return    true;    }    timeout    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
