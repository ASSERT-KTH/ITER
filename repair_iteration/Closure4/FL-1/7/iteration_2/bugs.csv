bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(propertyContinuations  ==  null)  {  finishPropertyContinuations();  }  else  {  forAnnotations  =  Collections.emptyList();  }  [CE]  cannot  find  symbol  forAnnotations  [FE]            AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);    [BUGGY]  if(propertyContinuations  ==  null)  {  finishPropertyContinuations();  }  else  {  forAnnotations  =  Collections.emptyList();  }  [BUGGY]    return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations  ==  null)  {  finishPropertyContinuations();  }  else  {  forAnnotations  =  Collections.emptyList();  }	  if(propertyContinuations!=    null)    {    finishPropertyContinuations();    }    else    {    forAnnotations    =    Collections.emptyList();    }    	non-compiled	[CE]  cannot  find  symbol  forAnnotations	20	None	replace
2	[BUG]  [BUGGY]  if(propertyContinuations!=  null)  {  startPropertyContinuations();  }  else  {  forAnnotations  =  Collections.emptyList();  }  [CE]  cannot  find  symbol  [FE]              AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);    [BUGGY]  if(propertyContinuations!=  null)  {  startPropertyContinuations();  }  else  {  forAnnotations  =  Collections.emptyList();  }  [BUGGY]    return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations!=  null)  {  startPropertyContinuations();  }  else  {  forAnnotations  =  Collections.emptyList();  }	  if(propertyContinuations!=    null)    {    finishPropertyContinuations();    }    else    {    forAnnotations    =    Collections.emptyList();    }    	non-compiled	[CE]  cannot  find  symbol	20	None	replace
3	[BUG]  [BUGGY]  if(propertyContinuations  ==  null)  {  startPropertyContinuations();  }  else  {  forAnnotations  =  Collections.emptyList();  }  [CE]  cannot  find  symbol  [FE]                AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);    [BUGGY]  if(propertyContinuations  ==  null)  {  startPropertyContinuations();  }  else  {  forAnnotations  =  Collections.emptyList();  }  [BUGGY]    return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations  ==  null)  {  startPropertyContinuations();  }  else  {  forAnnotations  =  Collections.emptyList();  }	  if(propertyContinuations!=    null)    {    finishPropertyContinuations();    }    else    {    forAnnotations    =    Collections.emptyList();    }    	non-compiled	[CE]  cannot  find  symbol	20	None	replace
4	[BUG]  [BUGGY]  forAnnotations  =  Collections.emptyList();  [CE]  cannot  find  symbol  forAnnotations  [FE]                  AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);    [BUGGY]  forAnnotations  =  Collections.emptyList();  [BUGGY]    return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	forAnnotations  =  Collections.emptyList();	  if(propertyContinuations!=    null)    {    finishPropertyContinuations();    }    else    {    forAnnotations    =    Collections.emptyList();    }    	non-compiled	[CE]  cannot  find  symbol  forAnnotations	20	None	replace
5	[BUG]  [BUGGY]  if(propertyContinuations!=  null)  {  finishPropertyAnnotations();  }  else  {  forAnnotations  =  Collections.emptyList();  }  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);    [BUGGY]  if(propertyContinuations!=  null)  {  finishPropertyAnnotations();  }  else  {  forAnnotations  =  Collections.emptyList();  }  [BUGGY]    return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations!=  null)  {  finishPropertyAnnotations();  }  else  {  forAnnotations  =  Collections.emptyList();  }	  if(propertyContinuations!=    null)    {    finishPropertyContinuations();    }    else    {    forAnnotations    =    Collections.emptyList();    }    	non-compiled	[CE]  cannot  find  symbol	20	None	replace
6	[BUG]  [BUGGY]  if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  else  {  forAnnotations  =  Lists.emptyList();  }  [CE]  cannot  find  symbol  forAnnotations  [FE]                      AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);    [BUGGY]  if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  else  {  forAnnotations  =  Lists.emptyList();  }  [BUGGY]    return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  else  {  forAnnotations  =  Lists.emptyList();  }	  if(propertyContinuations!=    null)    {    finishPropertyContinuations();    }    else    {    forAnnotations    =    Collections.emptyList();    }    	non-compiled	[CE]  cannot  find  symbol  forAnnotations	20	None	replace
7	[BUG]  [BUGGY]  registry.isLastGeneration()?  getReferencedType()  :  this;  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);    [BUGGY]  registry.isLastGeneration()?  getReferencedType()  :  this;  [BUGGY]    return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	registry.isLastGeneration()?  getReferencedType()  :  this;	  if(propertyContinuations!=    null)    {    finishPropertyContinuations();    }    else    {    registry.isLastGeneration()?    getReferencedType()    :    this;    }    	non-compiled	[CE]  not  a  statement	2	None	replace
8	[BUG]  [BUGGY]  Registry.isLastGeneration()?  getReferencedType()  :  this;  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);    [BUGGY]  Registry.isLastGeneration()?  getReferencedType()  :  this;  [BUGGY]    return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Registry.isLastGeneration()?  getReferencedType()  :  this;	  if(propertyContinuations!=    null)    {    finishPropertyContinuations();    }    else    {    registry.isLastGeneration()?    getReferencedType()    :    this;    }    	non-compiled	[CE]  not  a  statement	2	None	replace
9	[BUG]  [BUGGY]  propertyContinuations  =  registry.isLastGeneration()?  getReferencedType()  :  this;  [CE]  incompatible  types  [FE]              AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);    [BUGGY]  propertyContinuations  =  registry.isLastGeneration()?  getReferencedType()  :  this;  [BUGGY]    return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	propertyContinuations  =  registry.isLastGeneration()?  getReferencedType()  :  this;	  if(propertyContinuations!=    null)    {    finishPropertyContinuations();    }    else    {    registry.isLastGeneration()?    getReferencedType()    :    this;    }    	non-compiled	[CE]  incompatible  types	2	None	replace
10	[BUG]  [BUGGY]  propertyContinuations  =  registry.isLastGeneration()?  getReferencedType()  :  null;  [CE]  incompatible  types  [FE]                AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);    [BUGGY]  propertyContinuations  =  registry.isLastGeneration()?  getReferencedType()  :  null;  [BUGGY]    return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	propertyContinuations  =  registry.isLastGeneration()?  getReferencedType()  :  null;	  if(propertyContinuations!=    null)    {    finishPropertyContinuations();    }    else    {    registry.isLastGeneration()?    getReferencedType()    :    this;    }    	non-compiled	[CE]  incompatible  types	2	None	replace
11	[BUG]  [BUGGY]  Status.checkState(registry.isLastGeneration(),  getReferencedType());  [CE]  cannot  find  symbol  Status  [FE]                  AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);    [BUGGY]  Status.checkState(registry.isLastGeneration(),  getReferencedType());  [BUGGY]    return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Status.checkState(registry.isLastGeneration(),  getReferencedType());	  if(propertyContinuations!=    null)    {    finishPropertyContinuations();    }    else    {    registry.isLastGeneration()?    getReferencedType()    :    this;    }    	non-compiled	[CE]  cannot  find  symbol  Status	2	None	replace
12	[BUG]  [BUGGY]  Status.checkState(registry.isLastGeneration(),  resolved);  [CE]  cannot  find  symbol  Status  [FE]                    AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);    [BUGGY]  Status.checkState(registry.isLastGeneration(),  resolved);  [BUGGY]    return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Status.checkState(registry.isLastGeneration(),  resolved);	  if(propertyContinuations!=    null)    {    finishPropertyContinuations();    }    else    {    registry.isLastGeneration()?    getReferencedType()    :    this;    }    	non-compiled	[CE]  cannot  find  symbol  Status	2	None	replace
13	[BUG]  [BUGGY]  Status.checkState(registry.isLastGeneration());  [CE]  cannot  find  symbol  Status  [FE]                      AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);    [BUGGY]  Status.checkState(registry.isLastGeneration());  [BUGGY]    return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Status.checkState(registry.isLastGeneration());	  if(propertyContinuations!=    null)    {    finishPropertyContinuations();    }    else    {    registry.isLastGeneration()?    getReferencedType()    :    this;    }    	non-compiled	[CE]  cannot  find  symbol  Status	2	None	replace
14	[BUG]  [BUGGY]  ensurePropertyContinuations()  &&  registry.isLastGeneration();  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);    [BUGGY]  ensurePropertyContinuations()  &&  registry.isLastGeneration();  [BUGGY]    return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	ensurePropertyContinuations()  &&  registry.isLastGeneration();	  ensurePropertyContinuations();    	non-compiled	[CE]  not  a  statement	19	None	replace
15	[BUG]  [BUGGY]  ensurePropertyContinuations()  &&  registry.isLastGeneration()?  getReferencedType()  :  this;  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);    [BUGGY]  ensurePropertyContinuations()  &&  registry.isLastGeneration()?  getReferencedType()  :  this;  [BUGGY]    return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	ensurePropertyContinuations()  &&  registry.isLastGeneration()?  getReferencedType()  :  this;	  ensurePropertyContinuations();    	non-compiled	[CE]  not  a  statement	19	None	replace
16	[BUG]  [BUGGY]  ensurePropertyContinuations()  &&  registry.isLastGeneration());  [CE]  not  a  statement  [FE]              AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);    [BUGGY]  ensurePropertyContinuations()  &&  registry.isLastGeneration());  [BUGGY]    return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	ensurePropertyContinuations()  &&  registry.isLastGeneration());	  ensurePropertyContinuations();    	non-compiled	[CE]  not  a  statement	19	None	replace
17	[BUG]  [BUGGY]  ensurePropertyContinuations()  &&  registry.isLastGeneration()?  getReferencedType()  :  null;  [CE]  not  a  statement  [FE]                AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);    [BUGGY]  ensurePropertyContinuations()  &&  registry.isLastGeneration()?  getReferencedType()  :  null;  [BUGGY]    return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	ensurePropertyContinuations()  &&  registry.isLastGeneration()?  getReferencedType()  :  null;	  ensurePropertyContinuations();    	non-compiled	[CE]  not  a  statement	19	None	replace
18	[BUG]  [BUGGY]  ensurePropertyContinuations(),  registry.isLastGeneration());  [CE]  ';'  expected  [FE]                  AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);    [BUGGY]  ensurePropertyContinuations(),  registry.isLastGeneration());  [BUGGY]    return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	ensurePropertyContinuations(),  registry.isLastGeneration());	  ensurePropertyContinuations();    	non-compiled	[CE]  ';'  expected	19	None	replace
19	[BUG]  [BUGGY]  ensurePropertyContinuations()  &&  resolveViaRegistry.isLastGeneration();  [CE]  not  a  statement  [FE]                    AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);    [BUGGY]  ensurePropertyContinuations()  &&  resolveViaRegistry.isLastGeneration();  [BUGGY]    return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	ensurePropertyContinuations()  &&  resolveViaRegistry.isLastGeneration();	  ensurePropertyContinuations();    	non-compiled	[CE]  not  a  statement	19	None	replace
20	[BUG]  [BUGGY]      Predicate  validator  =  enclosing.getValue();  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);    [BUGGY]      Predicate  validator  =  enclosing.getValue();  [BUGGY]    return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	        Predicate  validator  =  enclosing.getValue();	  timeout    	non-compiled	[CE]  cannot  find  symbol	11	None	add
21	[BUG]  [BUGGY]      Predicate  validator  =  getValueForAnnotations(t,  enclosing);  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);    [BUGGY]      Predicate  validator  =  getValueForAnnotations(t,  enclosing);  [BUGGY]    return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	        Predicate  validator  =  getValueForAnnotations(t,  enclosing);	  timeout    	non-compiled	[CE]  cannot  find  symbol	11	None	add
22	[BUG]  [BUGGY]      Predicate  validator  =  getValueForAnnotations(t);  [CE]  cannot  find  symbol  [FE]                          AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);    [BUGGY]      Predicate  validator  =  getValueForAnnotations(t);  [BUGGY]    return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	        Predicate  validator  =  getValueForAnnotations(t);	  timeout    	non-compiled	[CE]  cannot  find  symbol	11	None	add
23	[BUG]  [BUGGY]      inferred  =  resolveViaRegistry(t,  enclosing);  [CE]  cannot  find  symbol  inferred  [FE]                            AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);    [BUGGY]      inferred  =  resolveViaRegistry(t,  enclosing);  [BUGGY]    return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	        inferred  =  resolveViaRegistry(t,  enclosing);	  timeout    	non-compiled	[CE]  cannot  find  symbol  inferred	11	None	add
24	[BUG]  [BUGGY]      Predicates.checkNotNull(enclosing);  [CE]  cannot  find  symbol  Predicates  [FE]                              AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);    [BUGGY]      Predicates.checkNotNull(enclosing);  [BUGGY]    return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	        Predicates.checkNotNull(enclosing);	  timeout    	non-compiled	[CE]  cannot  find  symbol  Predicates	11	None	add
25	[BUG]  [BUGGY]      Predicate  validator  =  getValue();  [CE]  cannot  find  symbol  [FE]                                AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);    [BUGGY]      Predicate  validator  =  getValue();  [BUGGY]    return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	        Predicate  validator  =  getValue();	  timeout    	non-compiled	[CE]  cannot  find  symbol	11	None	add
26	[BUG]  [BUGGY]      GenericScope  <  JSType>  registry  =  getRegistry();  [CE]  cannot  find  symbol  [FE]                                  AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);    [BUGGY]      GenericScope  <  JSType>  registry  =  getRegistry();  [BUGGY]    return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	        GenericScope  <  JSType>  registry  =  getRegistry();	  timeout    	non-compiled	[CE]  cannot  find  symbol	11	None	add
27	[BUG]  [BUGGY]      Predicate  validator  =  getValidator();  [CE]  cannot  find  symbol  [FE]                                    AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);    [BUGGY]      Predicate  validator  =  getValidator();  [BUGGY]    return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	        Predicate  validator  =  getValidator();	  timeout    	non-compiled	[CE]  cannot  find  symbol	11	None	add
28	[BUG]  [BUGGY]  Parchet.checkState(validator!=  null);  [CE]  cannot  find  symbol  Parchet  [FE]        AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);    [BUGGY]  Parchet.checkState(validator!=  null);  [BUGGY]    return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Parchet.checkState(validator!=  null);	  if(validator!=    null)    {    finishPropertyContinuations();    }    timeout    	non-compiled	[CE]  cannot  find  symbol  Parchet	14	None	replace
29	[BUG]  [BUGGY]  Parchet.getInstance().finishPropertyContinuations();  [CE]  cannot  find  symbol  Parchet  [FE]          AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);    [BUGGY]  Parchet.getInstance().finishPropertyContinuations();  [BUGGY]    return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Parchet.getInstance().finishPropertyContinuations();	  if(validator!=    null)    {    finishPropertyContinuations();    }    timeout    	non-compiled	[CE]  cannot  find  symbol  Parchet	14	None	replace
30	[BUG]  [BUGGY]  Status.checkState(validator!=  null);  [CE]  cannot  find  symbol  Status  [FE]            AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);    [BUGGY]  Status.checkState(validator!=  null);  [BUGGY]    return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Status.checkState(validator!=  null);	  if(validator!=    null)    {    finishPropertyContinuations();    }    timeout    	non-compiled	[CE]  cannot  find  symbol  Status	14	None	replace
31	[BUG]  [BUGGY]  validatePropertyContinuations();  [CE]  cannot  find  symbol  [FE]              AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);    [BUGGY]  validatePropertyContinuations();  [BUGGY]    return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	validatePropertyContinuations();	  if(validator!=    null)    {    finishPropertyContinuations();    }    timeout    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
32	[BUG]  [BUGGY]  Parchet.checkNotNull(validator);  [CE]  cannot  find  symbol  Parchet  [FE]                AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);    [BUGGY]  Parchet.checkNotNull(validator);  [BUGGY]    return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Parchet.checkNotNull(validator);	  if(validator!=    null)    {    finishPropertyContinuations();    }    timeout    	non-compiled	[CE]  cannot  find  symbol  Parchet	14	None	replace
33	[BUG]  [BUGGY]  Parchet.checkState(validator!=  null);  finishPropertyContinuations();  [CE]  cannot  find  symbol  Parchet  [FE]                  AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);    [BUGGY]  Parchet.checkState(validator!=  null);  finishPropertyContinuations();  [BUGGY]    return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Parchet.checkState(validator!=  null);  finishPropertyContinuations();	  if(validator!=    null)    {    finishPropertyContinuations();    }    timeout    	non-compiled	[CE]  cannot  find  symbol  Parchet	14	None	replace
34	[BUG]  [BUGGY]  timeout  [FE]              AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);    [BUGGY]  if(resolved)  {  finishPropertyContinuations();  }  if(resolved)  {  finishPropertyContinuations();  }  [BUGGY]    return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	add	if(resolved)    {    finishPropertyContinuations();    }    if(resolved)  {  finishPropertyContinuations();  }	  timeout    	compilable	timeout	5	1	add
35	[BUG]  [BUGGY]  if(resolved)  {  finishPropertyContinuations();  }  if(resolved)  {  finishPropertyContinuations();  }  timeout  [FE]              AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);    [BUGGY]  if(resolved)  {  finishPropertyContinuations();  }  if(resolved)  {  finishPropertyContinuations();  }  [BUGGY]    return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(resolved)    {    finishPropertyContinuations();    }    if(resolved)  {  finishPropertyContinuations();  }	  timeout    	compilable	timeout	5	1	add
36	[BUG]  [BUGGY]  if(resolved)  {  finishPropertyContinuations();  }  if(resolved)  {  startPropertyContinuations();  }  [CE]  cannot  find  symbol  [FE]                AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);    [BUGGY]  if(resolved)  {  finishPropertyContinuations();  }  if(resolved)  {  startPropertyContinuations();  }  [BUGGY]    return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(resolved)    {    finishPropertyContinuations();    }    if(resolved)  {  startPropertyContinuations();  }	  timeout    	non-compiled	[CE]  cannot  find  symbol	5	None	add
37	[BUG]  [BUGGY]  if(resolved)  {  finishPropertyContinuations();  }  If(resolved)  {  finishPropertyContinuations();  }  [CE]  ';'  expected  [FE]                  AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);    [BUGGY]  if(resolved)  {  finishPropertyContinuations();  }  If(resolved)  {  finishPropertyContinuations();  }  [BUGGY]    return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(resolved)    {    finishPropertyContinuations();    }    If(resolved)  {  finishPropertyContinuations();  }	  timeout    	non-compiled	[CE]  ';'  expected	5	None	add
38	[BUG]  [BUGGY]  if(resolved)  {  finishPropertyContinuations();  }  when(resolved)  {  finishPropertyContinuations();  }  [CE]  ';'  expected  [FE]                    AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);    [BUGGY]  if(resolved)  {  finishPropertyContinuations();  }  when(resolved)  {  finishPropertyContinuations();  }  [BUGGY]    return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(resolved)    {    finishPropertyContinuations();    }    when(resolved)  {  finishPropertyContinuations();  }	  timeout    	non-compiled	[CE]  ';'  expected	5	None	add
39	[BUG]  [BUGGY]  timeout  [FE]                      AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);    [BUGGY]  if(resolved)  {  finishPropertyContinuations();  }  while(resolved)  {  finishPropertyContinuations();  }  [BUGGY]    return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	add	if(resolved)    {    finishPropertyContinuations();    }    while(resolved)  {  finishPropertyContinuations();  }	  timeout    	compilable	timeout	5	1	add
40	[BUG]  [BUGGY]  if(resolved)  {  finishPropertyContinuations();  }  while(resolved)  {  finishPropertyContinuations();  }  timeout  [FE]                      AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);    [BUGGY]  if(resolved)  {  finishPropertyContinuations();  }  while(resolved)  {  finishPropertyContinuations();  }  [BUGGY]    return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(resolved)    {    finishPropertyContinuations();    }    while(resolved)  {  finishPropertyContinuations();  }	  timeout    	compilable	timeout	5	1	add
41	[BUG]  [BUGGY]  timeout  [FE]                    AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);    [BUGGY]  if(propertyContinuations  ==  null)  {  finishPropertyContinuations();  }  if(propertyContinuations  ==  null)  {  finishPropertyContinuations();  }  [BUGGY]    return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	add	if(propertyContinuations    ==    null)    {    finishPropertyContinuations();    }    if(propertyContinuations  ==  null)  {  finishPropertyContinuations();  }	  timeout    	compilable	timeout	9	1	add
42	[BUG]  [BUGGY]  if(propertyContinuations  ==  null)  {  finishPropertyContinuations();  }  if(propertyContinuations  ==  null)  {  finishPropertyContinuations();  }  timeout  [FE]                    AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);    [BUGGY]  if(propertyContinuations  ==  null)  {  finishPropertyContinuations();  }  if(propertyContinuations  ==  null)  {  finishPropertyContinuations();  }  [BUGGY]    return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations    ==    null)    {    finishPropertyContinuations();    }    if(propertyContinuations  ==  null)  {  finishPropertyContinuations();  }	  timeout    	compilable	timeout	9	1	add
43	[BUG]  [BUGGY]  timeout  [FE]                      AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);    [BUGGY]  if(propertyContinuations  ==  null)  {  finishPropertyContinuations();  }  if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  [BUGGY]    return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	add	if(propertyContinuations    ==    null)    {    finishPropertyContinuations();    }    if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }	  timeout    	compilable	timeout	9	1	add
44	[BUG]  [BUGGY]  if(propertyContinuations  ==  null)  {  finishPropertyContinuations();  }  if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  timeout  [FE]                      AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);    [BUGGY]  if(propertyContinuations  ==  null)  {  finishPropertyContinuations();  }  if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  [BUGGY]    return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations    ==    null)    {    finishPropertyContinuations();    }    if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }	  timeout    	compilable	timeout	9	1	add
45	[BUG]  [BUGGY]  if(propertyContinuations  ==  null)  {  finishPropertyContinuations();  }  if(propertyContinuations  ==  null)  {  startPropertyContinuations();  }  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);    [BUGGY]  if(propertyContinuations  ==  null)  {  finishPropertyContinuations();  }  if(propertyContinuations  ==  null)  {  startPropertyContinuations();  }  [BUGGY]    return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations    ==    null)    {    finishPropertyContinuations();    }    if(propertyContinuations  ==  null)  {  startPropertyContinuations();  }	  timeout    	non-compiled	[CE]  cannot  find  symbol	9	None	add
46	[BUG]  [BUGGY]  if(propertyContinuations  ==  null)  {  finishPropertyContinuations();  }  If(propertyContinuations  ==  null)  {  finishPropertyContinuations();  }  [CE]  ';'  expected  [FE]                          AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);    [BUGGY]  if(propertyContinuations  ==  null)  {  finishPropertyContinuations();  }  If(propertyContinuations  ==  null)  {  finishPropertyContinuations();  }  [BUGGY]    return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations    ==    null)    {    finishPropertyContinuations();    }    If(propertyContinuations  ==  null)  {  finishPropertyContinuations();  }	  timeout    	non-compiled	[CE]  ';'  expected	9	None	add
47	[BUG]  [BUGGY]  if(propertyContinuations  ==  null)  {  finishPropertyContinuations();  }  if(propertyContinuations  >=  null)  {  finishPropertyContinuations();  }  [CE]  bad  operand  types  for  binary  operator  '>='  [FE]                            AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);    [BUGGY]  if(propertyContinuations  ==  null)  {  finishPropertyContinuations();  }  if(propertyContinuations  >=  null)  {  finishPropertyContinuations();  }  [BUGGY]    return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations    ==    null)    {    finishPropertyContinuations();    }    if(propertyContinuations  >=  null)  {  finishPropertyContinuations();  }	  timeout    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>='	9	None	add
48	[BUG]  [BUGGY]  if(propertyContinuations  ==  null)  {  finishPropertyContinuations();  }  if(propertyContinuations  >>  null)  {  finishPropertyContinuations();  }  [CE]  bad  operand  types  for  binary  operator  '>>'  [FE]                              AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);    [BUGGY]  if(propertyContinuations  ==  null)  {  finishPropertyContinuations();  }  if(propertyContinuations  >>  null)  {  finishPropertyContinuations();  }  [BUGGY]    return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations    ==    null)    {    finishPropertyContinuations();    }    if(propertyContinuations  >>  null)  {  finishPropertyContinuations();  }	  timeout    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>>'	9	None	add
49	[BUG]  [BUGGY]  if(propertyContinuations  ==  null)  {  finishPropertyContinuations();  }  if(propertyContinuations  [BUGGY]  null)  {  finishPropertyContinuations();  }  [CE]  ')'  expected  [FE]                                AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);    [BUGGY]  if(propertyContinuations  ==  null)  {  finishPropertyContinuations();  }  if(propertyContinuations  [BUGGY]  null)  {  finishPropertyContinuations();  }  [BUGGY]    return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations    ==    null)    {    finishPropertyContinuations();    }    if(propertyContinuations  [BUGGY]  null)  {  finishPropertyContinuations();  }	  timeout    	non-compiled	[CE]  ')'  expected	9	None	add
50	[BUG]  [BUGGY]  timeout  [FE]        AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);    [BUGGY]  if(validator!=  null)  {  finishPropertyContinuations();  }  if(validator!=  null)  {  finishPropertyContinuations();  }  [BUGGY]    return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	add	if(validator!=    null)    {    finishPropertyContinuations();    }    if(validator!=  null)  {  finishPropertyContinuations();  }	  timeout    	compilable	timeout	13	1	add
51	[BUG]  [BUGGY]  if(validator!=  null)  {  finishPropertyContinuations();  }  if(validator!=  null)  {  finishPropertyContinuations();  }  timeout  [FE]        AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);    [BUGGY]  if(validator!=  null)  {  finishPropertyContinuations();  }  if(validator!=  null)  {  finishPropertyContinuations();  }  [BUGGY]    return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(validator!=    null)    {    finishPropertyContinuations();    }    if(validator!=  null)  {  finishPropertyContinuations();  }	  timeout    	compilable	timeout	13	1	add
52	[BUG]  [BUGGY]  timeout  [FE]          AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);    [BUGGY]  if(validator!=  null)  {  finishPropertyContinuations();  }  if(validator  ==  null)  {  finishPropertyContinuations();  }  [BUGGY]    return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	add	if(validator!=    null)    {    finishPropertyContinuations();    }    if(validator  ==  null)  {  finishPropertyContinuations();  }	  timeout    	compilable	timeout	13	1	add
53	[BUG]  [BUGGY]  if(validator!=  null)  {  finishPropertyContinuations();  }  if(validator  ==  null)  {  finishPropertyContinuations();  }  timeout  [FE]          AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);    [BUGGY]  if(validator!=  null)  {  finishPropertyContinuations();  }  if(validator  ==  null)  {  finishPropertyContinuations();  }  [BUGGY]    return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(validator!=    null)    {    finishPropertyContinuations();    }    if(validator  ==  null)  {  finishPropertyContinuations();  }	  timeout    	compilable	timeout	13	1	add
54	[BUG]  [BUGGY]  if(validator!=  null)  {  finishPropertyContinuations();  }  if(validator!=  null)  {  startPropertyContinuations();  }  [CE]  cannot  find  symbol  [FE]            AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);    [BUGGY]  if(validator!=  null)  {  finishPropertyContinuations();  }  if(validator!=  null)  {  startPropertyContinuations();  }  [BUGGY]    return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(validator!=    null)    {    finishPropertyContinuations();    }    if(validator!=  null)  {  startPropertyContinuations();  }	  timeout    	non-compiled	[CE]  cannot  find  symbol	13	None	add
55	[BUG]  [BUGGY]  if(validator!=  null)  {  finishPropertyContinuations();  }  If(validator!=  null)  {  finishPropertyContinuations();  }  [CE]  ';'  expected  [FE]              AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);    [BUGGY]  if(validator!=  null)  {  finishPropertyContinuations();  }  If(validator!=  null)  {  finishPropertyContinuations();  }  [BUGGY]    return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(validator!=    null)    {    finishPropertyContinuations();    }    If(validator!=  null)  {  finishPropertyContinuations();  }	  timeout    	non-compiled	[CE]  ';'  expected	13	None	add
56	[BUG]  [BUGGY]  if(validator!=  null)  {  finishPropertyContinuations();  }  if(validator  >=  null)  {  finishPropertyContinuations();  }  [CE]  bad  operand  types  for  binary  operator  '>='  [FE]                AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);    [BUGGY]  if(validator!=  null)  {  finishPropertyContinuations();  }  if(validator  >=  null)  {  finishPropertyContinuations();  }  [BUGGY]    return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(validator!=    null)    {    finishPropertyContinuations();    }    if(validator  >=  null)  {  finishPropertyContinuations();  }	  timeout    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>='	13	None	add
57	[BUG]  [BUGGY]  if(validator!=  null)  {  finishPropertyContinuations();  }  if(validator  >>  null)  {  finishPropertyContinuations();  }  [CE]  bad  operand  types  for  binary  operator  '>>'  [FE]                  AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);    [BUGGY]  if(validator!=  null)  {  finishPropertyContinuations();  }  if(validator  >>  null)  {  finishPropertyContinuations();  }  [BUGGY]    return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(validator!=    null)    {    finishPropertyContinuations();    }    if(validator  >>  null)  {  finishPropertyContinuations();  }	  timeout    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>>'	13	None	add
58	[BUG]  [BUGGY]  if(validator!=  null)  {  finishPropertyContinuations();  }  if(validator  [BUGGY]  null)  {  finishPropertyContinuations();  }  [CE]  ')'  expected  [FE]                    AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);    [BUGGY]  if(validator!=  null)  {  finishPropertyContinuations();  }  if(validator  [BUGGY]  null)  {  finishPropertyContinuations();  }  [BUGGY]    return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(validator!=    null)    {    finishPropertyContinuations();    }    if(validator  [BUGGY]  null)  {  finishPropertyContinuations();  }	  timeout    	non-compiled	[CE]  ')'  expected	13	None	add
59	[BUG]  [BUGGY]  propertyContinuations(resolved,  propertyNode)  {  finishPropertyContinuations();  }  else  {  registry.isLastGeneration()?  getReferencedType()  :  this;  }  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);    [BUGGY]  propertyContinuations(resolved,  propertyNode)  {  finishPropertyContinuations();  }  else  {  registry.isLastGeneration()?  getReferencedType()  :  this;  }  [BUGGY]    return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	propertyContinuations(resolved,  propertyNode)  {  finishPropertyContinuations();  }  else  {  registry.isLastGeneration()?  getReferencedType()  :  this;  }	  if(resolved)    {    finishPropertyContinuations();    }    else    {    registry.isLastGeneration()?    getReferencedType()    :    this;    }    	non-compiled	[CE]  ';'  expected	1	None	replace
60	[BUG]  [BUGGY]  propertyContinuations(resolved)  {  finishPropertyContinuations();  }  else  {  registry.isLastGeneration()?  getReferencedType()  :  this;  }  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);    [BUGGY]  propertyContinuations(resolved)  {  finishPropertyContinuations();  }  else  {  registry.isLastGeneration()?  getReferencedType()  :  this;  }  [BUGGY]    return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	propertyContinuations(resolved)  {  finishPropertyContinuations();  }  else  {  registry.isLastGeneration()?  getReferencedType()  :  this;  }	  if(resolved)    {    finishPropertyContinuations();    }    else    {    registry.isLastGeneration()?    getReferencedType()    :    this;    }    	non-compiled	[CE]  ';'  expected	1	None	replace
61	[BUG]  [BUGGY]  Annotations  validator  =  registry.isLastGeneration()?  getReferencedType()  :  this;  [CE]  cannot  find  symbol  [FE]            AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);    [BUGGY]  Annotations  validator  =  registry.isLastGeneration()?  getReferencedType()  :  this;  [BUGGY]    return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Annotations  validator  =  registry.isLastGeneration()?  getReferencedType()  :  this;	  if(resolved)    {    finishPropertyContinuations();    }    else    {    registry.isLastGeneration()?    getReferencedType()    :    this;    }    	non-compiled	[CE]  cannot  find  symbol	1	None	replace
62	[BUG]  [BUGGY]  Parchet.checkState(resolved  ||  registry.isLastGeneration()?  getReferencedType()  :  this);  [CE]  cannot  find  symbol  Parchet  [FE]              AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);    [BUGGY]  Parchet.checkState(resolved  ||  registry.isLastGeneration()?  getReferencedType()  :  this);  [BUGGY]    return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Parchet.checkState(resolved  ||  registry.isLastGeneration()?  getReferencedType()  :  this);	  if(resolved)    {    finishPropertyContinuations();    }    else    {    registry.isLastGeneration()?    getReferencedType()    :    this;    }    	non-compiled	[CE]  cannot  find  symbol  Parchet	1	None	replace
63	[BUG]  [BUGGY]  Parchet.checkState(registry.isLastGeneration()?  getReferencedType()  :  this);  [CE]  cannot  find  symbol  Parchet  [FE]          AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);    [BUGGY]  Parchet.checkState(registry.isLastGeneration()?  getReferencedType()  :  this);  [BUGGY]    return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Parchet.checkState(registry.isLastGeneration()?  getReferencedType()  :  this);	  if(validator!=    null)    {    finishPropertyContinuations();    }    else    {    registry.isLastGeneration()?    getReferencedType()    :    this;    }    	non-compiled	[CE]  cannot  find  symbol  Parchet	15	None	replace
64	[BUG]  [BUGGY]  Parchet.checkState(registry.isLastGeneration()?  getReferencedType()  :  null);  [CE]  cannot  find  symbol  Parchet  [FE]            AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);    [BUGGY]  Parchet.checkState(registry.isLastGeneration()?  getReferencedType()  :  null);  [BUGGY]    return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Parchet.checkState(registry.isLastGeneration()?  getReferencedType()  :  null);	  if(validator!=    null)    {    finishPropertyContinuations();    }    else    {    registry.isLastGeneration()?    getReferencedType()    :    this;    }    	non-compiled	[CE]  cannot  find  symbol  Parchet	15	None	replace
65	[BUG]  [BUGGY]  Parchet.checkState(registry.isLastGeneration()?  getReferencedType()  :  this;  [CE]  ')'  expected  [FE]              AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);    [BUGGY]  Parchet.checkState(registry.isLastGeneration()?  getReferencedType()  :  this;  [BUGGY]    return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Parchet.checkState(registry.isLastGeneration()?  getReferencedType()  :  this;	  if(validator!=    null)    {    finishPropertyContinuations();    }    else    {    registry.isLastGeneration()?    getReferencedType()    :    this;    }    	non-compiled	[CE]  ')'  expected	15	None	replace
66	[BUG]  [BUGGY]  propertyContinuations();  [CE]  cannot  find  symbol  [FE]              AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);    [BUGGY]  propertyContinuations();  [BUGGY]    return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	propertyContinuations();	  if(propertyContinuations!=    null)    {    finishPropertyContinuations();    }    else    {    propertyContinuations.add(propertyName);    }    	non-compiled	[CE]  cannot  find  symbol	21	None	replace
67	[BUG]  [BUGGY]  propertyContinuations.add(propertyName);  [CE]  cannot  find  symbol  propertyName  [FE]                AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);    [BUGGY]  propertyContinuations.add(propertyName);  [BUGGY]    return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	propertyContinuations.add(propertyName);	  if(propertyContinuations!=    null)    {    finishPropertyContinuations();    }    else    {    propertyContinuations.add(propertyName);    }    	non-compiled	[CE]  cannot  find  symbol  propertyName	21	None	replace
68	[BUG]  [BUGGY]  if(propertyContinuations!=  null)  {  startPropertyContinuations();  }  else  {  propertyContinuations.add(propertyName);  }  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);    [BUGGY]  if(propertyContinuations!=  null)  {  startPropertyContinuations();  }  else  {  propertyContinuations.add(propertyName);  }  [BUGGY]    return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations!=  null)  {  startPropertyContinuations();  }  else  {  propertyContinuations.add(propertyName);  }	  if(propertyContinuations!=    null)    {    finishPropertyContinuations();    }    else    {    propertyContinuations.add(propertyName);    }    	non-compiled	[CE]  cannot  find  symbol	21	None	replace
69	[BUG]  [BUGGY]  if(propertyContinuations!=  null)  {  finishPropertyValues();  }  else  {  propertyContinuations.add(propertyName);  }  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);    [BUGGY]  if(propertyContinuations!=  null)  {  finishPropertyValues();  }  else  {  propertyContinuations.add(propertyName);  }  [BUGGY]    return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations!=  null)  {  finishPropertyValues();  }  else  {  propertyContinuations.add(propertyName);  }	  if(propertyContinuations!=    null)    {    finishPropertyContinuations();    }    else    {    propertyContinuations.add(propertyName);    }    	non-compiled	[CE]  cannot  find  symbol	21	None	replace
70	[BUG]  [BUGGY]  if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  else  {  propertyContinuations.add(resolved);  }  [CE]  no  suitable  method  found  for  add(boolean)  [FE]                      AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);    [BUGGY]  if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  else  {  propertyContinuations.add(resolved);  }  [BUGGY]    return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  else  {  propertyContinuations.add(resolved);  }	  if(propertyContinuations!=    null)    {    finishPropertyContinuations();    }    else    {    propertyContinuations.add(propertyName);    }    	non-compiled	[CE]  no  suitable  method  found  for  add(boolean)	21	None	replace
71	[BUG]  [BUGGY]  if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  else  {  propertyContinuations.add(propertyNode);  }  [CE]  cannot  find  symbol  propertyNode  [FE]                        AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);    [BUGGY]  if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  else  {  propertyContinuations.add(propertyNode);  }  [BUGGY]    return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  else  {  propertyContinuations.add(propertyNode);  }	  if(propertyContinuations!=    null)    {    finishPropertyContinuations();    }    else    {    propertyContinuations.add(propertyName);    }    	non-compiled	[CE]  cannot  find  symbol  propertyNode	21	None	replace
72	[BUG]  [BUGGY]  registry.isLastGeneration()?  getReferencedType()  :  null;  [CE]  not  a  statement  [FE]                  AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);    [BUGGY]  registry.isLastGeneration()?  getReferencedType()  :  null;  [BUGGY]    return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	registry.isLastGeneration()?  getReferencedType()  :  null;	  if(resolved)    {    finishPropertyContinuations();    }    else    {    registry.isLastGeneration()?    getReferencedType()    :    null;    }    	non-compiled	[CE]  not  a  statement	8	None	replace
73	[BUG]  [BUGGY]  Annotations  validator  =  registry.isLastGeneration()?  getReferencedType()  :  null;  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);    [BUGGY]  Annotations  validator  =  registry.isLastGeneration()?  getReferencedType()  :  null;  [BUGGY]    return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Annotations  validator  =  registry.isLastGeneration()?  getReferencedType()  :  null;	  if(resolved)    {    finishPropertyContinuations();    }    else    {    registry.isLastGeneration()?    getReferencedType()    :    null;    }    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
74	[BUG]  [BUGGY]  Status.checkState(registry.isLastGeneration()?  getReferencedType()  :  null);  [CE]  cannot  find  symbol  Status  [FE]                      AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);    [BUGGY]  Status.checkState(registry.isLastGeneration()?  getReferencedType()  :  null);  [BUGGY]    return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Status.checkState(registry.isLastGeneration()?  getReferencedType()  :  null);	  if(resolved)    {    finishPropertyContinuations();    }    else    {    registry.isLastGeneration()?    getReferencedType()    :    null;    }    	non-compiled	[CE]  cannot  find  symbol  Status	8	None	replace
75	[BUG]  [BUGGY]  Status.checkState(registry.isLastGeneration(),  resolveViaProperties);  [CE]  cannot  find  symbol  resolveViaProperties  [FE]                        AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);    [BUGGY]  Status.checkState(registry.isLastGeneration(),  resolveViaProperties);  [BUGGY]    return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Status.checkState(registry.isLastGeneration(),  resolveViaProperties);	  if(resolved)    {    finishPropertyContinuations();    }    else    {    registry.isLastGeneration()?    getReferencedType()    :    null;    }    	non-compiled	[CE]  cannot  find  symbol  resolveViaProperties	8	None	replace
76	[BUG]  [BUGGY]  timeout  [FE]            AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);    [BUGGY]  if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  [BUGGY]    return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	add	if(propertyContinuations!=    null)    {    finishPropertyContinuations();    }    if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }	  timeout    	compilable	timeout	3	1	add
77	[BUG]  [BUGGY]  if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  timeout  [FE]            AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);    [BUGGY]  if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  [BUGGY]    return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations!=    null)    {    finishPropertyContinuations();    }    if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }	  timeout    	compilable	timeout	3	1	add
78	[BUG]  [BUGGY]  timeout  [FE]              AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);    [BUGGY]  if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  if(propertyContinuations  ==  null)  {  finishPropertyContinuations();  }  [BUGGY]    return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	add	if(propertyContinuations!=    null)    {    finishPropertyContinuations();    }    if(propertyContinuations  ==  null)  {  finishPropertyContinuations();  }	  timeout    	compilable	timeout	3	1	add
79	[BUG]  [BUGGY]  if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  if(propertyContinuations  ==  null)  {  finishPropertyContinuations();  }  timeout  [FE]              AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);    [BUGGY]  if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  if(propertyContinuations  ==  null)  {  finishPropertyContinuations();  }  [BUGGY]    return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations!=    null)    {    finishPropertyContinuations();    }    if(propertyContinuations  ==  null)  {  finishPropertyContinuations();  }	  timeout    	compilable	timeout	3	1	add
80	[BUG]  [BUGGY]  if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  if(propertyContinuations  >=  null)  {  finishPropertyContinuations();  }  [CE]  bad  operand  types  for  binary  operator  '>='  [FE]                AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);    [BUGGY]  if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  if(propertyContinuations  >=  null)  {  finishPropertyContinuations();  }  [BUGGY]    return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations!=    null)    {    finishPropertyContinuations();    }    if(propertyContinuations  >=  null)  {  finishPropertyContinuations();  }	  timeout    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>='	3	None	add
81	[BUG]  [BUGGY]  if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  if(propertyContinuations!=  null)  {  startPropertyContinuations();  }  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);    [BUGGY]  if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  if(propertyContinuations!=  null)  {  startPropertyContinuations();  }  [BUGGY]    return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations!=    null)    {    finishPropertyContinuations();    }    if(propertyContinuations!=  null)  {  startPropertyContinuations();  }	  timeout    	non-compiled	[CE]  cannot  find  symbol	3	None	add
82	[BUG]  [BUGGY]  if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  If(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  [CE]  ';'  expected  [FE]                    AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);    [BUGGY]  if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  If(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  [BUGGY]    return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations!=    null)    {    finishPropertyContinuations();    }    If(propertyContinuations!=  null)  {  finishPropertyContinuations();  }	  timeout    	non-compiled	[CE]  ';'  expected	3	None	add
83	[BUG]  [BUGGY]  if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  if(propertyContinuations  >>  null)  {  finishPropertyContinuations();  }  [CE]  bad  operand  types  for  binary  operator  '>>'  [FE]                      AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);    [BUGGY]  if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  if(propertyContinuations  >>  null)  {  finishPropertyContinuations();  }  [BUGGY]    return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations!=    null)    {    finishPropertyContinuations();    }    if(propertyContinuations  >>  null)  {  finishPropertyContinuations();  }	  timeout    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>>'	3	None	add
84	[BUG]  [BUGGY]  if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  if(propertyContinuations  [BUGGY]  null)  {  finishPropertyContinuations();  }  [CE]  ')'  expected  [FE]                        AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);    [BUGGY]  if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  if(propertyContinuations  [BUGGY]  null)  {  finishPropertyContinuations();  }  [BUGGY]    return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations!=    null)    {    finishPropertyContinuations();    }    if(propertyContinuations  [BUGGY]  null)  {  finishPropertyContinuations();  }	  timeout    	non-compiled	[CE]  ')'  expected	3	None	add
85	[BUG]  [BUGGY]  timeout  [FE]              AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);    [BUGGY]  resolveViaProperties(t,  enclosing);  [BUGGY]    return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	add	resolveViaProperties(t,  enclosing);	  if(resolved)    {    finishPropertyContinuations();    }    timeout    	compilable	timeout	6	1	replace
86	[BUG]  [BUGGY]  resolveViaProperties(t,  enclosing);  timeout  [FE]              AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);    [BUGGY]  resolveViaProperties(t,  enclosing);  [BUGGY]    return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	resolveViaProperties(t,  enclosing);	  if(resolved)    {    finishPropertyContinuations();    }    timeout    	compilable	timeout	6	1	replace
87	[BUG]  [BUGGY]  Predicate  validator  =  resolveViaRegistry(t,  enclosing);  [CE]  incompatible  types  [FE]                AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);    [BUGGY]  Predicate  validator  =  resolveViaRegistry(t,  enclosing);  [BUGGY]    return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Predicate  validator  =  resolveViaRegistry(t,  enclosing);	  if(resolved)    {    finishPropertyContinuations();    }    timeout    	non-compiled	[CE]  incompatible  types	6	None	replace
88	[BUG]  [BUGGY]  Parchet.checkNotNull(propertyContinuations);  [CE]  cannot  find  symbol  Parchet  [FE]                  AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);    [BUGGY]  Parchet.checkNotNull(propertyContinuations);  [BUGGY]    return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Parchet.checkNotNull(propertyContinuations);	  if(resolved)    {    finishPropertyContinuations();    }    timeout    	non-compiled	[CE]  cannot  find  symbol  Parchet	6	None	replace
89	[BUG]  [BUGGY]  Predicates.checkNotNull(propertyContinuations);  [CE]  cannot  find  symbol  Predicates  [FE]                    AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);    [BUGGY]  Predicates.checkNotNull(propertyContinuations);  [BUGGY]    return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Predicates.checkNotNull(propertyContinuations);	  if(resolved)    {    finishPropertyContinuations();    }    timeout    	non-compiled	[CE]  cannot  find  symbol  Predicates	6	None	replace
90	[BUG]  [BUGGY]  Predicates.checkState(resolved)  {  finishPropertyContinuations();  }  [CE]  ';'  expected  [FE]                      AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);    [BUGGY]  Predicates.checkState(resolved)  {  finishPropertyContinuations();  }  [BUGGY]    return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Predicates.checkState(resolved)  {  finishPropertyContinuations();  }	  if(resolved)    {    finishPropertyContinuations();    }    timeout    	non-compiled	[CE]  ';'  expected	6	None	replace
91	[BUG]  [BUGGY]  result.finishPropertyContinuations();  [CE]  cannot  find  symbol  result  [FE]                        AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);    [BUGGY]  result.finishPropertyContinuations();  [BUGGY]    return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	result.finishPropertyContinuations();	  if(resolved)    {    finishPropertyContinuations();    }    timeout    	non-compiled	[CE]  cannot  find  symbol  result	6	None	replace
92	[BUG]  [BUGGY]  Predicate  validator  =  resolveViaProperties(t,  enclosing);  [CE]  incompatible  types  [FE]                          AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);    [BUGGY]  Predicate  validator  =  resolveViaProperties(t,  enclosing);  [BUGGY]    return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Predicate  validator  =  resolveViaProperties(t,  enclosing);	  if(resolved)    {    finishPropertyContinuations();    }    timeout    	non-compiled	[CE]  incompatible  types	6	None	replace
93	[BUG]  [BUGGY]  if(validator!=  null)  {  finishPropertyGenerations();  }  else  {  registry.isLastGeneration()  :  this;  }  [CE]  ';'  expected  [FE]              AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);    [BUGGY]  if(validator!=  null)  {  finishPropertyGenerations();  }  else  {  registry.isLastGeneration()  :  this;  }  [BUGGY]    return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(validator!=  null)  {  finishPropertyGenerations();  }  else  {  registry.isLastGeneration()  :  this;  }	  if(validator!=    null)    {    finishPropertyContinuations();    }    else    {    registry.isLastGeneration()    :    this;    }    	non-compiled	[CE]  ';'  expected	17	None	replace
94	[BUG]  [BUGGY]  registry.isLastGeneration()  :  this;  [CE]  ';'  expected  [FE]                AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);    [BUGGY]  registry.isLastGeneration()  :  this;  [BUGGY]    return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	registry.isLastGeneration()  :  this;	  if(validator!=    null)    {    finishPropertyContinuations();    }    else    {    registry.isLastGeneration()    :    this;    }    	non-compiled	[CE]  ';'  expected	17	None	replace
95	[BUG]  [BUGGY]  validator!=  null  &&  validator.getType()  ==  Token.FUNCTION)  {  finishPropertyContinuations();  }  else  {  registry.isLastGeneration()  :  this;  }  [CE]  not  a  statement  [FE]                  AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);    [BUGGY]  validator!=  null  &&  validator.getType()  ==  Token.FUNCTION)  {  finishPropertyContinuations();  }  else  {  registry.isLastGeneration()  :  this;  }  [BUGGY]    return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	validator!=  null  &&  validator.getType()  ==  Token.FUNCTION)  {  finishPropertyContinuations();  }  else  {  registry.isLastGeneration()  :  this;  }	  if(validator!=    null)    {    finishPropertyContinuations();    }    else    {    registry.isLastGeneration()    :    this;    }    	non-compiled	[CE]  not  a  statement	17	None	replace
96	[BUG]  [BUGGY]  if(validator!=  null)  {  finishPropertyContinuations();  }  else  {  registry.isFirstGeneration()  :  this;  }  [CE]  ';'  expected  [FE]                    AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);    [BUGGY]  if(validator!=  null)  {  finishPropertyContinuations();  }  else  {  registry.isFirstGeneration()  :  this;  }  [BUGGY]    return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(validator!=  null)  {  finishPropertyContinuations();  }  else  {  registry.isFirstGeneration()  :  this;  }	  if(validator!=    null)    {    finishPropertyContinuations();    }    else    {    registry.isLastGeneration()    :    this;    }    	non-compiled	[CE]  ';'  expected	17	None	replace
97	[BUG]  [BUGGY]  validator!=  null  &&  registry.isLastGeneration();  [CE]  not  a  statement  [FE]                      AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);    [BUGGY]  validator!=  null  &&  registry.isLastGeneration();  [BUGGY]    return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	validator!=  null  &&  registry.isLastGeneration();	  if(validator!=    null)    {    finishPropertyContinuations();    }    else    {    registry.isLastGeneration()    :    this;    }    	non-compiled	[CE]  not  a  statement	17	None	replace
98	[BUG]  [BUGGY]  propertyContinuations  =  getPropertyContinuations();  [CE]  cannot  find  symbol  [FE]        AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);    [BUGGY]  propertyContinuations  =  getPropertyContinuations();  [BUGGY]    return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	propertyContinuations  =  getPropertyContinuations();	  if(propertyContinuations!=    null)    {    finishPropertyContinuations();    }    else    {    getPropertyContinuations().addAll(propertyContinuations);    }    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
99	[BUG]  [BUGGY]  BundlePropertyContinuations  registry  =  getBundlePropertyContinuations();  [CE]  cannot  find  symbol  [FE]          AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);    [BUGGY]  BundlePropertyContinuations  registry  =  getBundlePropertyContinuations();  [BUGGY]    return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	BundlePropertyContinuations  registry  =  getBundlePropertyContinuations();	  if(propertyContinuations!=    null)    {    finishPropertyContinuations();    }    else    {    getPropertyContinuations().addAll(propertyContinuations);    }    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
100	[BUG]  [BUGGY]  propertyContinuations  =  new  ArrayList  <  PropertyContinuation>();  [CE]  cannot  find  symbol  [FE]            AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);    [BUGGY]  propertyContinuations  =  new  ArrayList  <  PropertyContinuation>();  [BUGGY]    return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	propertyContinuations  =  new  ArrayList  <  PropertyContinuation>();	  if(propertyContinuations!=    null)    {    finishPropertyContinuations();    }    else    {    getPropertyContinuations().addAll(propertyContinuations);    }    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
101	[BUG]  [BUGGY]  propertyContinuations  =  new  ArrayList  <  PropertyContinuation>(propertyContinuations);  [CE]  cannot  find  symbol  [FE]              AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);    [BUGGY]  propertyContinuations  =  new  ArrayList  <  PropertyContinuation>(propertyContinuations);  [BUGGY]    return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	propertyContinuations  =  new  ArrayList  <  PropertyContinuation>(propertyContinuations);	  if(propertyContinuations!=    null)    {    finishPropertyContinuations();    }    else    {    getPropertyContinuations().addAll(propertyContinuations);    }    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
102	[BUG]  [BUGGY]  BundlePropertyContinuations  registry  =  getBundlePropertyContinuations(propertyNode);  [CE]  cannot  find  symbol  [FE]                AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);    [BUGGY]  BundlePropertyContinuations  registry  =  getBundlePropertyContinuations(propertyNode);  [BUGGY]    return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	BundlePropertyContinuations  registry  =  getBundlePropertyContinuations(propertyNode);	  if(propertyContinuations!=    null)    {    finishPropertyContinuations();    }    else    {    getPropertyContinuations().addAll(propertyContinuations);    }    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
103	[BUG]  [BUGGY]  PropertyContinuations  registry  =  getPropertyContinuations();  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);    [BUGGY]  PropertyContinuations  registry  =  getPropertyContinuations();  [BUGGY]    return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	PropertyContinuations  registry  =  getPropertyContinuations();	  if(propertyContinuations!=    null)    {    finishPropertyContinuations();    }    else    {    getPropertyContinuations().addAll(propertyContinuations);    }    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
104	[BUG]  [BUGGY]  BundlePropertyContinuations  registry  =  getBundlePropertyContinuations(propertyName);  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);    [BUGGY]  BundlePropertyContinuations  registry  =  getBundlePropertyContinuations(propertyName);  [BUGGY]    return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	BundlePropertyContinuations  registry  =  getBundlePropertyContinuations(propertyName);	  if(propertyContinuations!=    null)    {    finishPropertyContinuations();    }    else    {    getPropertyContinuations().addAll(propertyContinuations);    }    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
105	[BUG]  [BUGGY]  Parchet.checkState(resolved  ||  resolved)  {  finishPropertyContinuations();  }  else  {  registry.isLastGeneration()  :  this;  }  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);    [BUGGY]  Parchet.checkState(resolved  ||  resolved)  {  finishPropertyContinuations();  }  else  {  registry.isLastGeneration()  :  this;  }  [BUGGY]    return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Parchet.checkState(resolved  ||  resolved)  {  finishPropertyContinuations();  }  else  {  registry.isLastGeneration()  :  this;  }	  if(resolved)    {    finishPropertyContinuations();    }    else    {    registry.isLastGeneration()    :    this;    }    	non-compiled	[CE]  ';'  expected	16	None	replace
106	[BUG]  [BUGGY]  validatePropertyContinuations();  }  else  {  registry.isLastGeneration()  :  this;  }  [CE]  [FE]              AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);    [BUGGY]  validatePropertyContinuations();  }  else  {  registry.isLastGeneration()  :  this;  }  [BUGGY]    return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	validatePropertyContinuations();  }  else  {  registry.isLastGeneration()  :  this;  }	  if(resolved)    {    finishPropertyContinuations();    }    else    {    registry.isLastGeneration()    :    this;    }    	non-compiled	[CE]  	16	None	replace
107	[BUG]  [BUGGY]  Parchet.checkState(resolved  ||  registry.isLastGeneration());  [CE]  cannot  find  symbol  Parchet  [FE]                AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);    [BUGGY]  Parchet.checkState(resolved  ||  registry.isLastGeneration());  [BUGGY]    return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Parchet.checkState(resolved  ||  registry.isLastGeneration());	  if(resolved)    {    finishPropertyContinuations();    }    else    {    registry.isLastGeneration()    :    this;    }    	non-compiled	[CE]  cannot  find  symbol  Parchet	16	None	replace
108	[BUG]  [BUGGY]  validatePropertyContinuations(t,  resolved);  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);    [BUGGY]  validatePropertyContinuations(t,  resolved);  [BUGGY]    return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	validatePropertyContinuations(t,  resolved);	  if(resolved)    {    finishPropertyContinuations();    }    else    {    registry.isLastGeneration()    :    this;    }    	non-compiled	[CE]  cannot  find  symbol	16	None	replace
109	[BUG]  [BUGGY]  Parchet.checkState(resolved  ||  resolved)  {  finishPropertyContinuations();  }  else  {  registry.isLastGeneration()  :  null;  }  [CE]  ';'  expected  [FE]                    AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);    [BUGGY]  Parchet.checkState(resolved  ||  resolved)  {  finishPropertyContinuations();  }  else  {  registry.isLastGeneration()  :  null;  }  [BUGGY]    return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Parchet.checkState(resolved  ||  resolved)  {  finishPropertyContinuations();  }  else  {  registry.isLastGeneration()  :  null;  }	  if(resolved)    {    finishPropertyContinuations();    }    else    {    registry.isLastGeneration()    :    this;    }    	non-compiled	[CE]  ';'  expected	16	None	replace
110	[BUG]  [BUGGY]  Parchet.checkState(resolved  ||  resolved)  {  finishPropertyContinuations();  }  else  {  registry.isLastGeneration()  :  getReferencedType();  }  [CE]  ';'  expected  [FE]                      AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);    [BUGGY]  Parchet.checkState(resolved  ||  resolved)  {  finishPropertyContinuations();  }  else  {  registry.isLastGeneration()  :  getReferencedType();  }  [BUGGY]    return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Parchet.checkState(resolved  ||  resolved)  {  finishPropertyContinuations();  }  else  {  registry.isLastGeneration()  :  getReferencedType();  }	  if(resolved)    {    finishPropertyContinuations();    }    else    {    registry.isLastGeneration()    :    this;    }    	non-compiled	[CE]  ';'  expected	16	None	replace
111	[BUG]  [BUGGY]  Parchet.checkState(resolved  ||  resolved)  {  finishPropertyContinuations();  }  else  {  Registry.isLastGeneration()  :  this;  }  [CE]  ';'  expected  [FE]                        AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);    [BUGGY]  Parchet.checkState(resolved  ||  resolved)  {  finishPropertyContinuations();  }  else  {  Registry.isLastGeneration()  :  this;  }  [BUGGY]    return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Parchet.checkState(resolved  ||  resolved)  {  finishPropertyContinuations();  }  else  {  Registry.isLastGeneration()  :  this;  }	  if(resolved)    {    finishPropertyContinuations();    }    else    {    registry.isLastGeneration()    :    this;    }    	non-compiled	[CE]  ';'  expected	16	None	replace
112	[BUG]  [BUGGY]  PropertyContinuations  <  PropertyContinuation>  finishPropertyContinuations();  [CE]  ';'  expected  [FE]                    AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);    [BUGGY]  PropertyContinuations  <  PropertyContinuation>  finishPropertyContinuations();  [BUGGY]    return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	PropertyContinuations  <  PropertyContinuation>  finishPropertyContinuations();	  if(propertyContinuations    ==    null)    {    finishPropertyContinuations();    }    timeout    	non-compiled	[CE]  ';'  expected	10	None	replace
113	[BUG]  [BUGGY]  final  PropertyContinuations  <  PropertyContinuation>  startPropertyContinuations();  [CE]  ';'  expected  [FE]                      AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);    [BUGGY]  final  PropertyContinuations  <  PropertyContinuation>  startPropertyContinuations();  [BUGGY]    return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	final  PropertyContinuations  <  PropertyContinuation>  startPropertyContinuations();	  if(propertyContinuations    ==    null)    {    finishPropertyContinuations();    }    timeout    	non-compiled	[CE]  ';'  expected	10	None	replace
114	[BUG]  [BUGGY]  Status.checkState(propertyContinuations  ==  null);  [CE]  cannot  find  symbol  Status  [FE]                        AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);    [BUGGY]  Status.checkState(propertyContinuations  ==  null);  [BUGGY]    return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Status.checkState(propertyContinuations  ==  null);	  if(propertyContinuations    ==    null)    {    finishPropertyContinuations();    }    timeout    	non-compiled	[CE]  cannot  find  symbol  Status	10	None	replace
115	[BUG]  [BUGGY]  final  PropertyContinuations  <  PropertyContinuation>  finishPropertyContinuations();  [CE]  ';'  expected  [FE]                          AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);    [BUGGY]  final  PropertyContinuations  <  PropertyContinuation>  finishPropertyContinuations();  [BUGGY]    return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	final  PropertyContinuations  <  PropertyContinuation>  finishPropertyContinuations();	  if(propertyContinuations    ==    null)    {    finishPropertyContinuations();    }    timeout    	non-compiled	[CE]  ';'  expected	10	None	replace
116	[BUG]  [BUGGY]  Status.checkState(propertyContinuations!=  null);  [CE]  cannot  find  symbol  Status  [FE]                            AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);    [BUGGY]  Status.checkState(propertyContinuations!=  null);  [BUGGY]    return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Status.checkState(propertyContinuations!=  null);	  if(propertyContinuations    ==    null)    {    finishPropertyContinuations();    }    timeout    	non-compiled	[CE]  cannot  find  symbol  Status	10	None	replace
117	[BUG]  [BUGGY]  PropertyContinuations  <  PropertyContinuation>  startPropertyContinuations();  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);    [BUGGY]  PropertyContinuations  <  PropertyContinuation>  startPropertyContinuations();  [BUGGY]    return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	PropertyContinuations  <  PropertyContinuation>  startPropertyContinuations();	  if(propertyContinuations!=    null)    {    finishPropertyContinuations();    }    timeout    	non-compiled	[CE]  ';'  expected	4	None	replace
118	[BUG]  [BUGGY]  if(propertyContinuations!=  null)  {  finishPropertyInferred();  }  else  {  getPropertyContinuations().addAll(propertyContinuations);  }  [CE]  cannot  find  symbol  [FE]        AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);    [BUGGY]  if(propertyContinuations!=  null)  {  finishPropertyInferred();  }  else  {  getPropertyContinuations().addAll(propertyContinuations);  }  [BUGGY]    return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations!=  null)  {  finishPropertyInferred();  }  else  {  getPropertyContinuations().addAll(propertyContinuations);  }	  if(propertyContinuations!=    null)    {    finishPropertyContinuations();    }    else    {    getPropertyContinuations().addAll(propertyContinuations);    }    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
119	[BUG]  [BUGGY]  if(propertyContinuations!=  null)  {  finishPropertyFields();  }  else  {  getPropertyContinuations().addAll(propertyContinuations);  }  [CE]  cannot  find  symbol  [FE]          AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);    [BUGGY]  if(propertyContinuations!=  null)  {  finishPropertyFields();  }  else  {  getPropertyContinuations().addAll(propertyContinuations);  }  [BUGGY]    return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations!=  null)  {  finishPropertyFields();  }  else  {  getPropertyContinuations().addAll(propertyContinuations);  }	  if(propertyContinuations!=    null)    {    finishPropertyContinuations();    }    else    {    getPropertyContinuations().addAll(propertyContinuations);    }    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
120	[BUG]  [BUGGY]  if(propertyContinuations!=  null)  {  finishPropertyAnnotations();  }  else  {  getPropertyContinuations().addAll(propertyContinuations);  }  [CE]  cannot  find  symbol  [FE]            AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);    [BUGGY]  if(propertyContinuations!=  null)  {  finishPropertyAnnotations();  }  else  {  getPropertyContinuations().addAll(propertyContinuations);  }  [BUGGY]    return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations!=  null)  {  finishPropertyAnnotations();  }  else  {  getPropertyContinuations().addAll(propertyContinuations);  }	  if(propertyContinuations!=    null)    {    finishPropertyContinuations();    }    else    {    getPropertyContinuations().addAll(propertyContinuations);    }    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
121	[BUG]  [BUGGY]  if(propertyContinuations!=  null)  {  finishPropertyGeneration();  }  else  {  getPropertyContinuations().addAll(propertyContinuations);  }  [CE]  cannot  find  symbol  [FE]              AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);    [BUGGY]  if(propertyContinuations!=  null)  {  finishPropertyGeneration();  }  else  {  getPropertyContinuations().addAll(propertyContinuations);  }  [BUGGY]    return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations!=  null)  {  finishPropertyGeneration();  }  else  {  getPropertyContinuations().addAll(propertyContinuations);  }	  if(propertyContinuations!=    null)    {    finishPropertyContinuations();    }    else    {    getPropertyContinuations().addAll(propertyContinuations);    }    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
122	[BUG]  [BUGGY]  if(propertyContinuations!=  null)  {  finishPropertyType();  }  else  {  getPropertyContinuations().addAll(propertyContinuations);  }  [CE]  cannot  find  symbol  [FE]                AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);    [BUGGY]  if(propertyContinuations!=  null)  {  finishPropertyType();  }  else  {  getPropertyContinuations().addAll(propertyContinuations);  }  [BUGGY]    return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations!=  null)  {  finishPropertyType();  }  else  {  getPropertyContinuations().addAll(propertyContinuations);  }	  if(propertyContinuations!=    null)    {    finishPropertyContinuations();    }    else    {    getPropertyContinuations().addAll(propertyContinuations);    }    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
123	[BUG]  [BUGGY]  if(propertyContinuations!=  null)  {  finishPropertyGenerations();  }  else  {  getPropertyContinuations().addAll(propertyContinuations);  }  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);    [BUGGY]  if(propertyContinuations!=  null)  {  finishPropertyGenerations();  }  else  {  getPropertyContinuations().addAll(propertyContinuations);  }  [BUGGY]    return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations!=  null)  {  finishPropertyGenerations();  }  else  {  getPropertyContinuations().addAll(propertyContinuations);  }	  if(propertyContinuations!=    null)    {    finishPropertyContinuations();    }    else    {    getPropertyContinuations().addAll(propertyContinuations);    }    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
124	[BUG]  [BUGGY]  if(propertyContinuations!=  null)  {  finishProperty();  }  else  {  getPropertyContinuations().addAll(propertyContinuations);  }  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);    [BUGGY]  if(propertyContinuations!=  null)  {  finishProperty();  }  else  {  getPropertyContinuations().addAll(propertyContinuations);  }  [BUGGY]    return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations!=  null)  {  finishProperty();  }  else  {  getPropertyContinuations().addAll(propertyContinuations);  }	  if(propertyContinuations!=    null)    {    finishPropertyContinuations();    }    else    {    getPropertyContinuations().addAll(propertyContinuations);    }    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
125	[BUG]  [BUGGY]  Predicates.checkNotNull(registry);  [CE]  cannot  find  symbol  Predicates  [FE]                      AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);    [BUGGY]  Predicates.checkNotNull(registry);  [BUGGY]    return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Predicates.checkNotNull(registry);	      timeout    	non-compiled	[CE]  cannot  find  symbol  Predicates	12	None	replace
126	[BUG]  [BUGGY]  Predicates.checkState(detectImplicitPrototypeCycle());  [CE]  cannot  find  symbol  Predicates  [FE]                        AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);    [BUGGY]  Predicates.checkState(detectImplicitPrototypeCycle());  [BUGGY]    return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Predicates.checkState(detectImplicitPrototypeCycle());	      timeout    	non-compiled	[CE]  cannot  find  symbol  Predicates	12	None	replace
127	[BUG]  [BUGGY]  Preconditions.checkState(resolved)  {  finishPropertyContinuations();  }  [CE]  ';'  expected  [FE]              AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);    [BUGGY]  Preconditions.checkState(resolved)  {  finishPropertyContinuations();  }  [BUGGY]    return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Preconditions.checkState(resolved)  {  finishPropertyContinuations();  }	  if(resolved)    {    finishPropertyContinuations();    }    timeout    	non-compiled	[CE]  ';'  expected	6	None	replace
128	[BUG]  [BUGGY]  if(resolved)  {  finishPropertyAnnotations();  }  [CE]  cannot  find  symbol  [FE]                AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);    [BUGGY]  if(resolved)  {  finishPropertyAnnotations();  }  [BUGGY]    return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(resolved)  {  finishPropertyAnnotations();  }	  if(resolved)    {    finishPropertyContinuations();    }    timeout    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
129	[BUG]  [BUGGY]  if(resolved)  {  finishPropertyInferred();  }  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);    [BUGGY]  if(resolved)  {  finishPropertyInferred();  }  [BUGGY]    return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(resolved)  {  finishPropertyInferred();  }	  if(resolved)    {    finishPropertyContinuations();    }    timeout    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
130	[BUG]  [BUGGY]  if(resolved)  {  finishPropertyInternal();  }  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);    [BUGGY]  if(resolved)  {  finishPropertyInternal();  }  [BUGGY]    return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(resolved)  {  finishPropertyInternal();  }	  if(resolved)    {    finishPropertyContinuations();    }    timeout    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
131	[BUG]  [BUGGY]  if(validator  ==  null)  {  finishPropertyContinuations();  }  else  {  registry.isLastGeneration()  :  this;  }  [CE]  ';'  expected  [FE]              AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);    [BUGGY]  if(validator  ==  null)  {  finishPropertyContinuations();  }  else  {  registry.isLastGeneration()  :  this;  }  [BUGGY]    return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(validator  ==  null)  {  finishPropertyContinuations();  }  else  {  registry.isLastGeneration()  :  this;  }	  if(validator!=    null)    {    finishPropertyContinuations();    }    else    {    registry.isLastGeneration()    :    this;    }    	non-compiled	[CE]  ';'  expected	17	None	replace
132	[BUG]  [BUGGY]  if(validator!=  null)  {  startPropertyGenerations();  }  else  {  registry.isLastGeneration()  :  this;  }  [CE]  ';'  expected  [FE]                AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);    [BUGGY]  if(validator!=  null)  {  startPropertyGenerations();  }  else  {  registry.isLastGeneration()  :  this;  }  [BUGGY]    return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(validator!=  null)  {  startPropertyGenerations();  }  else  {  registry.isLastGeneration()  :  this;  }	  if(validator!=    null)    {    finishPropertyContinuations();    }    else    {    registry.isLastGeneration()    :    this;    }    	non-compiled	[CE]  ';'  expected	17	None	replace
133	[BUG]  [BUGGY]  if(validator  ==  null)  {  finishPropertyGenerations();  }  else  {  registry.isLastGeneration()  :  this;  }  [CE]  ';'  expected  [FE]                  AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);    [BUGGY]  if(validator  ==  null)  {  finishPropertyGenerations();  }  else  {  registry.isLastGeneration()  :  this;  }  [BUGGY]    return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(validator  ==  null)  {  finishPropertyGenerations();  }  else  {  registry.isLastGeneration()  :  this;  }	  if(validator!=    null)    {    finishPropertyContinuations();    }    else    {    registry.isLastGeneration()    :    this;    }    	non-compiled	[CE]  ';'  expected	17	None	replace
134	[BUG]  [BUGGY]  if(validator  ==  null)  {  finishPropertyContinuations();  }  else  {  registry.isFirstGeneration()  :  this;  }  [CE]  ';'  expected  [FE]                    AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);    [BUGGY]  if(validator  ==  null)  {  finishPropertyContinuations();  }  else  {  registry.isFirstGeneration()  :  this;  }  [BUGGY]    return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(validator  ==  null)  {  finishPropertyContinuations();  }  else  {  registry.isFirstGeneration()  :  this;  }	  if(validator!=    null)    {    finishPropertyContinuations();    }    else    {    registry.isLastGeneration()    :    this;    }    	non-compiled	[CE]  ';'  expected	17	None	replace
135	[BUG]  [BUGGY]  final  PropertyContinuations  <  Node>  propertyContinuations  =  getPropertyContinuations();  [CE]  cannot  find  symbol  [FE]            AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);    [BUGGY]  final  PropertyContinuations  <  Node>  propertyContinuations  =  getPropertyContinuations();  [BUGGY]    return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	final  PropertyContinuations  <  Node>  propertyContinuations  =  getPropertyContinuations();	  if(propertyContinuations!=    null)    {    finishPropertyContinuations();    }    timeout    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
136	[BUG]  [BUGGY]  if(propertyContinuations!=  null)  {  finishPropertyInferred();  }  [CE]  cannot  find  symbol  [FE]              AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);    [BUGGY]  if(propertyContinuations!=  null)  {  finishPropertyInferred();  }  [BUGGY]    return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations!=  null)  {  finishPropertyInferred();  }	  if(propertyContinuations!=    null)    {    finishPropertyContinuations();    }    timeout    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
137	[BUG]  [BUGGY]  if(propertyContinuations!=  null)  {  startPropertyGeneration();  }  [CE]  cannot  find  symbol  [FE]                AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);    [BUGGY]  if(propertyContinuations!=  null)  {  startPropertyGeneration();  }  [BUGGY]    return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations!=  null)  {  startPropertyGeneration();  }	  if(propertyContinuations!=    null)    {    finishPropertyContinuations();    }    timeout    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
138	[BUG]  [BUGGY]  validator!=  null  &&  registry.isLastGeneration()?  getReferencedType()  :  this;  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);    [BUGGY]  validator!=  null  &&  registry.isLastGeneration()?  getReferencedType()  :  this;  [BUGGY]    return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	validator!=  null  &&  registry.isLastGeneration()?  getReferencedType()  :  this;	  if(validator!=    null)    {    finishPropertyContinuations();    }    else    {    registry.isLastGeneration()?    getReferencedType()    :    this;    }    	non-compiled	[CE]  not  a  statement	15	None	replace
139	[BUG]  [BUGGY]  validator!=  null  &&  validator.isLastGeneration()?  getReferencedType()  :  this;  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);    [BUGGY]  validator!=  null  &&  validator.isLastGeneration()?  getReferencedType()  :  this;  [BUGGY]    return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	validator!=  null  &&  validator.isLastGeneration()?  getReferencedType()  :  this;	  if(validator!=    null)    {    finishPropertyContinuations();    }    else    {    registry.isLastGeneration()?    getReferencedType()    :    this;    }    	non-compiled	[CE]  not  a  statement	15	None	replace
140	[BUG]  [BUGGY]  Predicates.checkState(validator!=  null);  [CE]  cannot  find  symbol  Predicates  [FE]              AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);    [BUGGY]  Predicates.checkState(validator!=  null);  [BUGGY]    return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Predicates.checkState(validator!=  null);	  if(validator!=    null)    {    finishPropertyContinuations();    }    else    {    registry.isLastGeneration()?    getReferencedType()    :    this;    }    	non-compiled	[CE]  cannot  find  symbol  Predicates	15	None	replace
141	[BUG]  [BUGGY]  predicate.finishPropertyGeneration();  [CE]  cannot  find  symbol  predicate  [FE]                AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);    [BUGGY]  predicate.finishPropertyGeneration();  [BUGGY]    return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	predicate.finishPropertyGeneration();	  if(validator!=    null)    {    finishPropertyContinuations();    }    else    {    registry.isLastGeneration()?    getReferencedType()    :    this;    }    	non-compiled	[CE]  cannot  find  symbol  predicate	15	None	replace
142	[BUG]  [BUGGY]  Predicate  validator  =  getValueForAnnotations(resolved);  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);    [BUGGY]  Predicate  validator  =  getValueForAnnotations(resolved);  [BUGGY]    return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Predicate  validator  =  getValueForAnnotations(resolved);	  if(validator!=    null)    {    finishPropertyContinuations();    }    else    {    registry.isLastGeneration()?    getReferencedType()    :    this;    }    	non-compiled	[CE]  cannot  find  symbol	15	None	replace
143	[BUG]  [BUGGY]  predicate.finishPropertyType(resolved);  [CE]  cannot  find  symbol  predicate  [FE]                    AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);    [BUGGY]  predicate.finishPropertyType(resolved);  [BUGGY]    return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	predicate.finishPropertyType(resolved);	  if(validator!=    null)    {    finishPropertyContinuations();    }    else    {    registry.isLastGeneration()?    getReferencedType()    :    this;    }    	non-compiled	[CE]  cannot  find  symbol  predicate	15	None	replace
144	[BUG]  [BUGGY]  PropertyContinuation  propertyContinuations  =  registry.isLastGeneration()?  getReferencedType()  :  this;  [CE]  incompatible  types  [FE]                AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);    [BUGGY]  PropertyContinuation  propertyContinuations  =  registry.isLastGeneration()?  getReferencedType()  :  this;  [BUGGY]    return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	PropertyContinuation  propertyContinuations  =  registry.isLastGeneration()?  getReferencedType()  :  this;	  if(propertyContinuations    ==    null)    {    finishPropertyContinuations();    }    else    {    registry.isLastGeneration()?    getReferencedType()    :    this;    }    	non-compiled	[CE]  incompatible  types	7	None	replace
145	[BUG]  [BUGGY]  PropertyContinuation  propertyContinuations  =  registry.isLastGeneration()?  getReferencedType()  :  null;  [CE]  incompatible  types  [FE]                  AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);    [BUGGY]  PropertyContinuation  propertyContinuations  =  registry.isLastGeneration()?  getReferencedType()  :  null;  [BUGGY]    return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	PropertyContinuation  propertyContinuations  =  registry.isLastGeneration()?  getReferencedType()  :  null;	  if(propertyContinuations    ==    null)    {    finishPropertyContinuations();    }    else    {    registry.isLastGeneration()?    getReferencedType()    :    this;    }    	non-compiled	[CE]  incompatible  types	7	None	replace
146	[BUG]  [BUGGY]  PropertyContinuation  propertyContinuations  =  registry.getPropertyContinuations();  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);    [BUGGY]  PropertyContinuation  propertyContinuations  =  registry.getPropertyContinuations();  [BUGGY]    return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	PropertyContinuation  propertyContinuations  =  registry.getPropertyContinuations();	  if(propertyContinuations    ==    null)    {    finishPropertyContinuations();    }    else    {    registry.isLastGeneration()?    getReferencedType()    :    this;    }    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
147	[BUG]  [BUGGY]  PropertyContinuation  propertyContinuations  =  getPropertyContinuations();  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);    [BUGGY]  PropertyContinuation  propertyContinuations  =  getPropertyContinuations();  [BUGGY]    return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	PropertyContinuation  propertyContinuations  =  getPropertyContinuations();	  if(propertyContinuations    ==    null)    {    finishPropertyContinuations();    }    else    {    registry.isLastGeneration()?    getReferencedType()    :    this;    }    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
148	[BUG]  [BUGGY]  PropertyContinuation  <  Object>  propertyContinuations  =  getPropertyContinuations();  [CE]  type  PropertyContinuation  does  not  take  parameters  [FE]                        AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);    [BUGGY]  PropertyContinuation  <  Object>  propertyContinuations  =  getPropertyContinuations();  [BUGGY]    return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	PropertyContinuation  <  Object>  propertyContinuations  =  getPropertyContinuations();	  if(propertyContinuations    ==    null)    {    finishPropertyContinuations();    }    else    {    registry.isLastGeneration()?    getReferencedType()    :    this;    }    	non-compiled	[CE]  type  PropertyContinuation  does  not  take  parameters	7	None	replace
149	[BUG]  [BUGGY]  PropertyContinuation  propertyContinuations  =  registry.getPropertyContinuations(propertyName);  [CE]  cannot  find  symbol  propertyName  [FE]                          AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);    [BUGGY]  PropertyContinuation  propertyContinuations  =  registry.getPropertyContinuations(propertyName);  [BUGGY]    return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	PropertyContinuation  propertyContinuations  =  registry.getPropertyContinuations(propertyName);	  if(propertyContinuations    ==    null)    {    finishPropertyContinuations();    }    else    {    registry.isLastGeneration()?    getReferencedType()    :    this;    }    	non-compiled	[CE]  cannot  find  symbol  propertyName	7	None	replace
150	[BUG]  [BUGGY]  if(propertyContinuations!=  null)  {  finishPropertyInferred();  }  else  {  propertyContinuations.add(propertyName);  }  [CE]  cannot  find  symbol  [FE]              AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);    [BUGGY]  if(propertyContinuations!=  null)  {  finishPropertyInferred();  }  else  {  propertyContinuations.add(propertyName);  }  [BUGGY]    return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations!=  null)  {  finishPropertyInferred();  }  else  {  propertyContinuations.add(propertyName);  }	  if(propertyContinuations!=    null)    {    finishPropertyContinuations();    }    else    {    propertyContinuations.add(propertyName);    }    	non-compiled	[CE]  cannot  find  symbol	21	None	replace
151	[BUG]  [BUGGY]  if(propertyContinuations!=  null)  {  finishPropertyFields();  }  else  {  propertyContinuations.add(propertyName);  }  [CE]  cannot  find  symbol  [FE]                AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);    [BUGGY]  if(propertyContinuations!=  null)  {  finishPropertyFields();  }  else  {  propertyContinuations.add(propertyName);  }  [BUGGY]    return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations!=  null)  {  finishPropertyFields();  }  else  {  propertyContinuations.add(propertyName);  }	  if(propertyContinuations!=    null)    {    finishPropertyContinuations();    }    else    {    propertyContinuations.add(propertyName);    }    	non-compiled	[CE]  cannot  find  symbol	21	None	replace
152	[BUG]  [BUGGY]  if(propertyContinuations!=  null)  {  finishPropertyGenerated();  }  else  {  propertyContinuations.add(propertyName);  }  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);    [BUGGY]  if(propertyContinuations!=  null)  {  finishPropertyGenerated();  }  else  {  propertyContinuations.add(propertyName);  }  [BUGGY]    return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations!=  null)  {  finishPropertyGenerated();  }  else  {  propertyContinuations.add(propertyName);  }	  if(propertyContinuations!=    null)    {    finishPropertyContinuations();    }    else    {    propertyContinuations.add(propertyName);    }    	non-compiled	[CE]  cannot  find  symbol	21	None	replace
153	[BUG]  [BUGGY]  if(propertyContinuations!=  null)  {  finishPropertyAnnotations();  }  else  {  propertyContinuations.add(propertyName);  }  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);    [BUGGY]  if(propertyContinuations!=  null)  {  finishPropertyAnnotations();  }  else  {  propertyContinuations.add(propertyName);  }  [BUGGY]    return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations!=  null)  {  finishPropertyAnnotations();  }  else  {  propertyContinuations.add(propertyName);  }	  if(propertyContinuations!=    null)    {    finishPropertyContinuations();    }    else    {    propertyContinuations.add(propertyName);    }    	non-compiled	[CE]  cannot  find  symbol	21	None	replace
154	[BUG]  [BUGGY]  if(propertyContinuations!=  null)  {  finishPropertyConuations();  }  else  {  propertyContinuations.add(propertyName);  }  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);    [BUGGY]  if(propertyContinuations!=  null)  {  finishPropertyConuations();  }  else  {  propertyContinuations.add(propertyName);  }  [BUGGY]    return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations!=  null)  {  finishPropertyConuations();  }  else  {  propertyContinuations.add(propertyName);  }	  if(propertyContinuations!=    null)    {    finishPropertyContinuations();    }    else    {    propertyContinuations.add(propertyName);    }    	non-compiled	[CE]  cannot  find  symbol	21	None	replace
155	[BUG]  [BUGGY]  if(propertyContinuations!=  null)  {  finishPropertyType();  }  else  {  propertyContinuations.add(propertyName);  }  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);    [BUGGY]  if(propertyContinuations!=  null)  {  finishPropertyType();  }  else  {  propertyContinuations.add(propertyName);  }  [BUGGY]    return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations!=  null)  {  finishPropertyType();  }  else  {  propertyContinuations.add(propertyName);  }	  if(propertyContinuations!=    null)    {    finishPropertyContinuations();    }    else    {    propertyContinuations.add(propertyName);    }    	non-compiled	[CE]  cannot  find  symbol	21	None	replace
156	[BUG]  [BUGGY]  timeout  [FE]        AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);    [BUGGY]  if(validator  ==  null)  {  finishPropertyContinuations();  }  [BUGGY]    return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	add	if(validator  ==  null)  {  finishPropertyContinuations();  }	  if(validator!=    null)    {    finishPropertyContinuations();    }    timeout    	compilable	timeout	14	1	replace
157	[BUG]  [BUGGY]  if(validator  ==  null)  {  finishPropertyContinuations();  }  timeout  [FE]        AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);    [BUGGY]  if(validator  ==  null)  {  finishPropertyContinuations();  }  [BUGGY]    return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(validator  ==  null)  {  finishPropertyContinuations();  }	  if(validator!=    null)    {    finishPropertyContinuations();    }    timeout    	compilable	timeout	14	1	replace
158	[BUG]  [BUGGY]  if(validator!=  null)  {  finishPropertyEnclosing();  }  [CE]  cannot  find  symbol  [FE]          AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);    [BUGGY]  if(validator!=  null)  {  finishPropertyEnclosing();  }  [BUGGY]    return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(validator!=  null)  {  finishPropertyEnclosing();  }	  if(validator!=    null)    {    finishPropertyContinuations();    }    timeout    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
159	[BUG]  [BUGGY]  if(validator!=  null)  {  finishPropertyInferred();  }  [CE]  cannot  find  symbol  [FE]            AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);    [BUGGY]  if(validator!=  null)  {  finishPropertyInferred();  }  [BUGGY]    return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(validator!=  null)  {  finishPropertyInferred();  }	  if(validator!=    null)    {    finishPropertyContinuations();    }    timeout    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
160	[BUG]  [BUGGY]  if(validator!=  null)  {  finishPropertyInternal();  }  [CE]  cannot  find  symbol  [FE]              AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);    [BUGGY]  if(validator!=  null)  {  finishPropertyInternal();  }  [BUGGY]    return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(validator!=  null)  {  finishPropertyInternal();  }	  if(validator!=    null)    {    finishPropertyContinuations();    }    timeout    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
161	[BUG]  [BUGGY]  if(validator!=  null)  {  finishPropertyFields();  }  [CE]  cannot  find  symbol  [FE]                AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);    [BUGGY]  if(validator!=  null)  {  finishPropertyFields();  }  [BUGGY]    return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(validator!=  null)  {  finishPropertyFields();  }	  if(validator!=    null)    {    finishPropertyContinuations();    }    timeout    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
162	[BUG]  [BUGGY]  if(validator!=  null)  {  finishPropertyType();  }  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);    [BUGGY]  if(validator!=  null)  {  finishPropertyType();  }  [BUGGY]    return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(validator!=  null)  {  finishPropertyType();  }	  if(validator!=    null)    {    finishPropertyContinuations();    }    timeout    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
163	[BUG]  [BUGGY]  if(propertyContinuations  ==  null)  {  finishPropertyContinuations();  }  if(propertyContinuations  {  null)  {  finishPropertyContinuations();  }  [CE]  ')'  expected  [FE]                    AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);    [BUGGY]  if(propertyContinuations  ==  null)  {  finishPropertyContinuations();  }  if(propertyContinuations  {  null)  {  finishPropertyContinuations();  }  [BUGGY]    return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations    ==    null)    {    finishPropertyContinuations();    }    if(propertyContinuations  {  null)  {  finishPropertyContinuations();  }	  timeout    	non-compiled	[CE]  ')'  expected	9	None	add
164	[BUG]  [BUGGY]  luate(registry,  resolved)  {  finishPropertyContinuations();  }  else  {  registry.isLastGeneration()?  getReferencedType()  :  this;  }  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);    [BUGGY]  luate(registry,  resolved)  {  finishPropertyContinuations();  }  else  {  registry.isLastGeneration()?  getReferencedType()  :  this;  }  [BUGGY]    return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	luate(registry,  resolved)  {  finishPropertyContinuations();  }  else  {  registry.isLastGeneration()?  getReferencedType()  :  this;  }	  if(resolved)    {    finishPropertyContinuations();    }    else    {    registry.isLastGeneration()?    getReferencedType()    :    this;    }    	non-compiled	[CE]  ';'  expected	1	None	replace
165	[BUG]  [BUGGY]  luate(registry,  resolved)  {  finishPropertyContinuations();  }  else  {  registry.isLastGeneration()?  getReferencedType()  :  this;  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);    [BUGGY]  luate(registry,  resolved)  {  finishPropertyContinuations();  }  else  {  registry.isLastGeneration()?  getReferencedType()  :  this;  [BUGGY]    return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	luate(registry,  resolved)  {  finishPropertyContinuations();  }  else  {  registry.isLastGeneration()?  getReferencedType()  :  this;	  if(resolved)    {    finishPropertyContinuations();    }    else    {    registry.isLastGeneration()?    getReferencedType()    :    this;    }    	non-compiled	[CE]  ';'  expected	1	None	replace
166	[BUG]  [BUGGY]  luate(registry,  resolved)  {  finishPropertyContinuations();  }  else  {  registry.isFirstGeneration()?  getReferencedType()  :  this;  }  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);    [BUGGY]  luate(registry,  resolved)  {  finishPropertyContinuations();  }  else  {  registry.isFirstGeneration()?  getReferencedType()  :  this;  }  [BUGGY]    return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	luate(registry,  resolved)  {  finishPropertyContinuations();  }  else  {  registry.isFirstGeneration()?  getReferencedType()  :  this;  }	  if(resolved)    {    finishPropertyContinuations();    }    else    {    registry.isLastGeneration()?    getReferencedType()    :    this;    }    	non-compiled	[CE]  ';'  expected	1	None	replace
167	[BUG]  [BUGGY]  luate(registry,  resolved)  {  finishPropertyContinuations();  }  else  {  registry.isLastGeneration()?  getReferencedType()  :  null;  }  [CE]  ';'  expected  [FE]              AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);    [BUGGY]  luate(registry,  resolved)  {  finishPropertyContinuations();  }  else  {  registry.isLastGeneration()?  getReferencedType()  :  null;  }  [BUGGY]    return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	luate(registry,  resolved)  {  finishPropertyContinuations();  }  else  {  registry.isLastGeneration()?  getReferencedType()  :  null;  }	  if(resolved)    {    finishPropertyContinuations();    }    else    {    registry.isLastGeneration()?    getReferencedType()    :    this;    }    	non-compiled	[CE]  ';'  expected	1	None	replace
168	[BUG]  [BUGGY]  luate(registry,  resolved)  {  finishPropertyContinuations();  }  else  {  registry.islastGeneration()?  getReferencedType()  :  this;  }  [CE]  ';'  expected  [FE]                AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);    [BUGGY]  luate(registry,  resolved)  {  finishPropertyContinuations();  }  else  {  registry.islastGeneration()?  getReferencedType()  :  this;  }  [BUGGY]    return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	luate(registry,  resolved)  {  finishPropertyContinuations();  }  else  {  registry.islastGeneration()?  getReferencedType()  :  this;  }	  if(resolved)    {    finishPropertyContinuations();    }    else    {    registry.isLastGeneration()?    getReferencedType()    :    this;    }    	non-compiled	[CE]  ';'  expected	1	None	replace
169	[BUG]  [BUGGY]  ensurePropertyContinuations(t);  [CE]  cannot  find  symbol  [FE]          AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);    [BUGGY]  ensurePropertyContinuations(t);  [BUGGY]    return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	ensurePropertyContinuations(t);	  ensurePropertyContinuations();    	non-compiled	[CE]  cannot  find  symbol	19	None	replace
170	[BUG]  [BUGGY]  ensurePropertyContinuations()  &&  propertyNode!=  null;  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);    [BUGGY]  ensurePropertyContinuations()  &&  propertyNode!=  null;  [BUGGY]    return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	ensurePropertyContinuations()  &&  propertyNode!=  null;	  ensurePropertyContinuations();    	non-compiled	[CE]  not  a  statement	19	None	replace
171	[BUG]  [BUGGY]  ensurePropertyContinuations(registry);  [CE]  cannot  find  symbol  [FE]              AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);    [BUGGY]  ensurePropertyContinuations(registry);  [BUGGY]    return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	ensurePropertyContinuations(registry);	  ensurePropertyContinuations();    	non-compiled	[CE]  cannot  find  symbol	19	None	replace
172	[BUG]  [BUGGY]  if(resolved)  {  finishPropertyGenerations();  }  else  {  registry.isLastGeneration()  :  this;  }  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);    [BUGGY]  if(resolved)  {  finishPropertyGenerations();  }  else  {  registry.isLastGeneration()  :  this;  }  [BUGGY]    return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(resolved)  {  finishPropertyGenerations();  }  else  {  registry.isLastGeneration()  :  this;  }	  if(resolved)    {    finishPropertyContinuations();    }    else    {    registry.isLastGeneration()    :    this;    }    	non-compiled	[CE]  ';'  expected	16	None	replace
173	[BUG]  [BUGGY]  if(resolved)  {  startPropertyGenerations();  }  else  {  registry.isLastGeneration()  :  this;  }  [CE]  ';'  expected  [FE]              AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);    [BUGGY]  if(resolved)  {  startPropertyGenerations();  }  else  {  registry.isLastGeneration()  :  this;  }  [BUGGY]    return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(resolved)  {  startPropertyGenerations();  }  else  {  registry.isLastGeneration()  :  this;  }	  if(resolved)    {    finishPropertyContinuations();    }    else    {    registry.isLastGeneration()    :    this;    }    	non-compiled	[CE]  ';'  expected	16	None	replace
174	[BUG]  [BUGGY]  if(resolved)  {  finishPropertyAnnotations();  }  else  {  registry.isLastGeneration()  :  this;  }  [CE]  ';'  expected  [FE]                AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);    [BUGGY]  if(resolved)  {  finishPropertyAnnotations();  }  else  {  registry.isLastGeneration()  :  this;  }  [BUGGY]    return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(resolved)  {  finishPropertyAnnotations();  }  else  {  registry.isLastGeneration()  :  this;  }	  if(resolved)    {    finishPropertyContinuations();    }    else    {    registry.isLastGeneration()    :    this;    }    	non-compiled	[CE]  ';'  expected	16	None	replace
175	[BUG]  [BUGGY]  if(resolved)  {  finishPropertyInferred();  }  else  {  registry.isLastGeneration()  :  this;  }  [CE]  ';'  expected  [FE]                  AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);    [BUGGY]  if(resolved)  {  finishPropertyInferred();  }  else  {  registry.isLastGeneration()  :  this;  }  [BUGGY]    return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(resolved)  {  finishPropertyInferred();  }  else  {  registry.isLastGeneration()  :  this;  }	  if(resolved)    {    finishPropertyContinuations();    }    else    {    registry.isLastGeneration()    :    this;    }    	non-compiled	[CE]  ';'  expected	16	None	replace
176	[BUG]  [BUGGY]  if(resolved)  {  startPropertyGeneration();  }  else  {  registry.isLastGeneration()  :  this;  }  [CE]  ';'  expected  [FE]                    AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);    [BUGGY]  if(resolved)  {  startPropertyGeneration();  }  else  {  registry.isLastGeneration()  :  this;  }  [BUGGY]    return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(resolved)  {  startPropertyGeneration();  }  else  {  registry.isLastGeneration()  :  this;  }	  if(resolved)    {    finishPropertyContinuations();    }    else    {    registry.isLastGeneration()    :    this;    }    	non-compiled	[CE]  ';'  expected	16	None	replace
177	[BUG]  [BUGGY]  Annotations  inferred  =  resolveViaRegistry(t,  enclosing);  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);    [BUGGY]  Annotations  inferred  =  resolveViaRegistry(t,  enclosing);  [BUGGY]    return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Annotations  inferred  =  resolveViaRegistry(t,  enclosing);	  if(resolved)    {    finishPropertyContinuations();    }    else    {    registry.isLastGeneration()    :    this;    }    	non-compiled	[CE]  cannot  find  symbol	16	None	replace
178	[BUG]  [BUGGY]      Predicate  validator  =  getValueForAnnotations(enclosing);  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);    [BUGGY]      Predicate  validator  =  getValueForAnnotations(enclosing);  [BUGGY]    return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	        Predicate  validator  =  getValueForAnnotations(enclosing);	  timeout    	non-compiled	[CE]  cannot  find  symbol	11	None	add
179	[BUG]  [BUGGY]  if(validator!=  null)  {  finishPropertyContinuations();  }  if(validator  [Delete]  null)  {  finishPropertyContinuations();  }  [CE]  ')'  expected  [FE]        AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);    [BUGGY]  if(validator!=  null)  {  finishPropertyContinuations();  }  if(validator  [Delete]  null)  {  finishPropertyContinuations();  }  [BUGGY]    return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(validator!=    null)    {    finishPropertyContinuations();    }    if(validator  [Delete]  null)  {  finishPropertyContinuations();  }	  timeout    	non-compiled	[CE]  ')'  expected	13	None	add
180	[BUG]  [BUGGY]  luate(registry,  resolved)  {  finishPropertyContinuations();  }  else  {  Registry.isLastGeneration()?  getReferencedType()  :  null;  }  [CE]  ';'  expected  [FE]                  AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);    [BUGGY]  luate(registry,  resolved)  {  finishPropertyContinuations();  }  else  {  Registry.isLastGeneration()?  getReferencedType()  :  null;  }  [BUGGY]    return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	luate(registry,  resolved)  {  finishPropertyContinuations();  }  else  {  Registry.isLastGeneration()?  getReferencedType()  :  null;  }	  if(resolved)    {    finishPropertyContinuations();    }    else    {    registry.isLastGeneration()?    getReferencedType()    :    null;    }    	non-compiled	[CE]  ';'  expected	8	None	replace
181	[BUG]  [BUGGY]  luate(registry,  resolved)  {  finishPropertyContinuations();  }  else  {  registry.isLastGeneration()?  getReferencedType()  :  null;  [CE]  ';'  expected  [FE]                    AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);    [BUGGY]  luate(registry,  resolved)  {  finishPropertyContinuations();  }  else  {  registry.isLastGeneration()?  getReferencedType()  :  null;  [BUGGY]    return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	luate(registry,  resolved)  {  finishPropertyContinuations();  }  else  {  registry.isLastGeneration()?  getReferencedType()  :  null;	  if(resolved)    {    finishPropertyContinuations();    }    else    {    registry.isLastGeneration()?    getReferencedType()    :    null;    }    	non-compiled	[CE]  ';'  expected	8	None	replace
182	[BUG]  [BUGGY]  luate(registry,  resolved)  {  finishPropertyContinuations();  }  else  {  register.isLastGeneration()?  getReferencedType()  :  null;  }  [CE]  ';'  expected  [FE]                      AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);    [BUGGY]  luate(registry,  resolved)  {  finishPropertyContinuations();  }  else  {  register.isLastGeneration()?  getReferencedType()  :  null;  }  [BUGGY]    return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	luate(registry,  resolved)  {  finishPropertyContinuations();  }  else  {  register.isLastGeneration()?  getReferencedType()  :  null;  }	  if(resolved)    {    finishPropertyContinuations();    }    else    {    registry.isLastGeneration()?    getReferencedType()    :    null;    }    	non-compiled	[CE]  ';'  expected	8	None	replace
183	[BUG]  [BUGGY]  luate(registry,  resolved)  {  finishPropertyContinuations();  }  else  {  registry.isFirstGeneration()?  getReferencedType()  :  null;  }  [CE]  ';'  expected  [FE]                        AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);    [BUGGY]  luate(registry,  resolved)  {  finishPropertyContinuations();  }  else  {  registry.isFirstGeneration()?  getReferencedType()  :  null;  }  [BUGGY]    return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	luate(registry,  resolved)  {  finishPropertyContinuations();  }  else  {  registry.isFirstGeneration()?  getReferencedType()  :  null;  }	  if(resolved)    {    finishPropertyContinuations();    }    else    {    registry.isLastGeneration()?    getReferencedType()    :    null;    }    	non-compiled	[CE]  ';'  expected	8	None	replace
184	[BUG]  [BUGGY]  luate(registry,  resolved)  {  finishPropertyContinuations();  }  else  {  registry.islastGeneration()?  getReferencedType()  :  null;  }  [CE]  ';'  expected  [FE]                          AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);    [BUGGY]  luate(registry,  resolved)  {  finishPropertyContinuations();  }  else  {  registry.islastGeneration()?  getReferencedType()  :  null;  }  [BUGGY]    return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	luate(registry,  resolved)  {  finishPropertyContinuations();  }  else  {  registry.islastGeneration()?  getReferencedType()  :  null;  }	  if(resolved)    {    finishPropertyContinuations();    }    else    {    registry.isLastGeneration()?    getReferencedType()    :    null;    }    	non-compiled	[CE]  ';'  expected	8	None	replace
185	[BUG]  [BUGGY]  if(forAnnotations!=  null)  {  finishPropertyContinuations();  }  else  {  forAnnotations  =  Collections.emptyList();  }  [CE]  cannot  find  symbol  forAnnotations  [FE]            AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);    [BUGGY]  if(forAnnotations!=  null)  {  finishPropertyContinuations();  }  else  {  forAnnotations  =  Collections.emptyList();  }  [BUGGY]    return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(forAnnotations!=  null)  {  finishPropertyContinuations();  }  else  {  forAnnotations  =  Collections.emptyList();  }	  if(propertyContinuations!=    null)    {    finishPropertyContinuations();    }    else    {    forAnnotations    =    Collections.emptyList();    }    	non-compiled	[CE]  cannot  find  symbol  forAnnotations	20	None	replace
186	[BUG]  [BUGGY]  if(propertyContinuations!=  null)  {  finishPropertyValues();  }  else  {  forAnnotations  =  Collections.emptyList();  }  [CE]  cannot  find  symbol  [FE]              AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);    [BUGGY]  if(propertyContinuations!=  null)  {  finishPropertyValues();  }  else  {  forAnnotations  =  Collections.emptyList();  }  [BUGGY]    return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations!=  null)  {  finishPropertyValues();  }  else  {  forAnnotations  =  Collections.emptyList();  }	  if(propertyContinuations!=    null)    {    finishPropertyContinuations();    }    else    {    forAnnotations    =    Collections.emptyList();    }    	non-compiled	[CE]  cannot  find  symbol	20	None	replace
187	[BUG]  [BUGGY]  if(propertyContinuations!=  null)  {  finishPropertyList();  }  else  {  forAnnotations  =  Collections.emptyList();  }  [CE]  cannot  find  symbol  [FE]                AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);    [BUGGY]  if(propertyContinuations!=  null)  {  finishPropertyList();  }  else  {  forAnnotations  =  Collections.emptyList();  }  [BUGGY]    return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations!=  null)  {  finishPropertyList();  }  else  {  forAnnotations  =  Collections.emptyList();  }	  if(propertyContinuations!=    null)    {    finishPropertyContinuations();    }    else    {    forAnnotations    =    Collections.emptyList();    }    	non-compiled	[CE]  cannot  find  symbol	20	None	replace
188	[BUG]  [BUGGY]  if(propertyContinuations!=  null)  {  finishPropertyInferred();  }  else  {  forAnnotations  =  Collections.emptyList();  }  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);    [BUGGY]  if(propertyContinuations!=  null)  {  finishPropertyInferred();  }  else  {  forAnnotations  =  Collections.emptyList();  }  [BUGGY]    return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations!=  null)  {  finishPropertyInferred();  }  else  {  forAnnotations  =  Collections.emptyList();  }	  if(propertyContinuations!=    null)    {    finishPropertyContinuations();    }    else    {    forAnnotations    =    Collections.emptyList();    }    	non-compiled	[CE]  cannot  find  symbol	20	None	replace
189	[BUG]  [BUGGY]  propertyContinuations  ==  null)  {  finishPropertyContinuations();  }  else  {  registry.isLastGeneration()?  getReferencedType()  :  this;  }  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);    [BUGGY]  propertyContinuations  ==  null)  {  finishPropertyContinuations();  }  else  {  registry.isLastGeneration()?  getReferencedType()  :  this;  }  [BUGGY]    return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	propertyContinuations  ==  null)  {  finishPropertyContinuations();  }  else  {  registry.isLastGeneration()?  getReferencedType()  :  this;  }	  if(propertyContinuations!=    null)    {    finishPropertyContinuations();    }    else    {    registry.isLastGeneration()?    getReferencedType()    :    this;    }    	non-compiled	[CE]  not  a  statement	2	None	replace
190	[BUG]  [BUGGY]  propertyContinuations!=  null  &&  propertyContinuations.size()  >  0)  {  finishPropertyContinuations();  }  else  {  registry.isLastGeneration()?  getReferencedType()  :  this;  }  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);    [BUGGY]  propertyContinuations!=  null  &&  propertyContinuations.size()  >  0)  {  finishPropertyContinuations();  }  else  {  registry.isLastGeneration()?  getReferencedType()  :  this;  }  [BUGGY]    return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	propertyContinuations!=  null  &&  propertyContinuations.size()  >  0)  {  finishPropertyContinuations();  }  else  {  registry.isLastGeneration()?  getReferencedType()  :  this;  }	  if(propertyContinuations!=    null)    {    finishPropertyContinuations();    }    else    {    registry.isLastGeneration()?    getReferencedType()    :    this;    }    	non-compiled	[CE]  not  a  statement	2	None	replace
191	[BUG]  [BUGGY]  propertyContinuations!=  null  &&  registry.isLastGeneration()?  getReferencedType()  :  this;  [CE]  not  a  statement  [FE]              AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);    [BUGGY]  propertyContinuations!=  null  &&  registry.isLastGeneration()?  getReferencedType()  :  this;  [BUGGY]    return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	propertyContinuations!=  null  &&  registry.isLastGeneration()?  getReferencedType()  :  this;	  if(propertyContinuations!=    null)    {    finishPropertyContinuations();    }    else    {    registry.isLastGeneration()?    getReferencedType()    :    this;    }    	non-compiled	[CE]  not  a  statement	2	None	replace
192	[BUG]  [BUGGY]  propertyContinuations!=  null  &&  propertyContinuations.size()  >  0)  {  finishPropertyContinuations();  }  [CE]  not  a  statement  [FE]                AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);    [BUGGY]  propertyContinuations!=  null  &&  propertyContinuations.size()  >  0)  {  finishPropertyContinuations();  }  [BUGGY]    return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	propertyContinuations!=  null  &&  propertyContinuations.size()  >  0)  {  finishPropertyContinuations();  }	  if(propertyContinuations!=    null)    {    finishPropertyContinuations();    }    else    {    registry.isLastGeneration()?    getReferencedType()    :    this;    }    	non-compiled	[CE]  not  a  statement	2	None	replace
193	[BUG]  [BUGGY]  propertyContinuations!=  null  &&  propertyContinuations.size()  >  0)  {  startPropertyContinuations();  }  else  {  registry.isLastGeneration()?  getReferencedType()  :  this;  }  [CE]  not  a  statement  [FE]                  AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);    [BUGGY]  propertyContinuations!=  null  &&  propertyContinuations.size()  >  0)  {  startPropertyContinuations();  }  else  {  registry.isLastGeneration()?  getReferencedType()  :  this;  }  [BUGGY]    return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	propertyContinuations!=  null  &&  propertyContinuations.size()  >  0)  {  startPropertyContinuations();  }  else  {  registry.isLastGeneration()?  getReferencedType()  :  this;  }	  if(propertyContinuations!=    null)    {    finishPropertyContinuations();    }    else    {    registry.isLastGeneration()?    getReferencedType()    :    this;    }    	non-compiled	[CE]  not  a  statement	2	None	replace
194	[BUG]  [BUGGY]  aughtExceptionHandler.handleTypeCycle(t,  enclosing);  [CE]  cannot  find  symbol  aughtExceptionHandler  [FE]                  AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);    [BUGGY]  aughtExceptionHandler.handleTypeCycle(t,  enclosing);  [BUGGY]    return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	aughtExceptionHandler.handleTypeCycle(t,  enclosing);	  if(resolved)    {    finishPropertyContinuations();    }    else    {    registry.isLastGeneration()?    getReferencedType()    :    null;    }    	non-compiled	[CE]  cannot  find  symbol  aughtExceptionHandler	8	None	replace
195	[BUG]  [BUGGY]  aughtExceptionHandler.handleTypeCycle(t);  [CE]  cannot  find  symbol  aughtExceptionHandler  [FE]                    AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);    [BUGGY]  aughtExceptionHandler.handleTypeCycle(t);  [BUGGY]    return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	aughtExceptionHandler.handleTypeCycle(t);	  if(resolved)    {    finishPropertyContinuations();    }    else    {    registry.isLastGeneration()?    getReferencedType()    :    null;    }    	non-compiled	[CE]  cannot  find  symbol  aughtExceptionHandler	8	None	replace
196	[BUG]  [BUGGY]  Annotation  <?>  propertyContinuations  =  registry.getPropertyContinuations(propertyName);  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);    [BUGGY]  Annotation  <?>  propertyContinuations  =  registry.getPropertyContinuations(propertyName);  [BUGGY]    return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Annotation  <?>  propertyContinuations  =  registry.getPropertyContinuations(propertyName);	  if(resolved)    {    finishPropertyContinuations();    }    else    {    registry.isLastGeneration()?    getReferencedType()    :    null;    }    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
197	[BUG]  [BUGGY]  Annotations  condition  =  getPropertyContinuations();  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);    [BUGGY]  Annotations  condition  =  getPropertyContinuations();  [BUGGY]    return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Annotations  condition  =  getPropertyContinuations();	  if(resolved)    {    finishPropertyContinuations();    }    else    {    registry.isLastGeneration()?    getReferencedType()    :    null;    }    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
198	[BUG]  [BUGGY]  Annotation  <?>  propertyContinuations  =  registry.getPropertyType(propertyName);  [CE]  cannot  find  symbol  [FE]                          AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);    [BUGGY]  Annotation  <?>  propertyContinuations  =  registry.getPropertyType(propertyName);  [BUGGY]    return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Annotation  <?>  propertyContinuations  =  registry.getPropertyType(propertyName);	  if(resolved)    {    finishPropertyContinuations();    }    else    {    registry.isLastGeneration()?    getReferencedType()    :    null;    }    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
199	[BUG]  [BUGGY]  aughtExceptionHandler.handlePropertyType(t,  enclosing);  [CE]  cannot  find  symbol  aughtExceptionHandler  [FE]                            AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);    [BUGGY]  aughtExceptionHandler.handlePropertyType(t,  enclosing);  [BUGGY]    return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	aughtExceptionHandler.handlePropertyType(t,  enclosing);	  if(resolved)    {    finishPropertyContinuations();    }    else    {    registry.isLastGeneration()?    getReferencedType()    :    null;    }    	non-compiled	[CE]  cannot  find  symbol  aughtExceptionHandler	8	None	replace
200	[BUG]  [BUGGY]  Annotation  <?>  propertyContinuations  =  registry.getPropertyContinuations();  [CE]  cannot  find  symbol  [FE]                              AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);    [BUGGY]  Annotation  <?>  propertyContinuations  =  registry.getPropertyContinuations();  [BUGGY]    return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Annotation  <?>  propertyContinuations  =  registry.getPropertyContinuations();	  if(resolved)    {    finishPropertyContinuations();    }    else    {    registry.isLastGeneration()?    getReferencedType()    :    null;    }    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
201	[BUG]  [BUGGY]  Predicates.checkArgument(detectImplicitPrototypeCycle());  [CE]  cannot  find  symbol  Predicates  [FE]                      AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);    [BUGGY]  Predicates.checkArgument(detectImplicitPrototypeCycle());  [BUGGY]    return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Predicates.checkArgument(detectImplicitPrototypeCycle());	      timeout    	non-compiled	[CE]  cannot  find  symbol  Predicates	12	None	replace
202	[BUG]  [BUGGY]  Predicates.checkArgument(detectImplicitPrototypeCycle());  handleTypeCycle(t);  [CE]  cannot  find  symbol  Predicates  [FE]                        AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);    [BUGGY]  Predicates.checkArgument(detectImplicitPrototypeCycle());  handleTypeCycle(t);  [BUGGY]    return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Predicates.checkArgument(detectImplicitPrototypeCycle());  handleTypeCycle(t);	      timeout    	non-compiled	[CE]  cannot  find  symbol  Predicates	12	None	replace
203	[BUG]  [BUGGY]  Predicates.checkState(detectImplicitPrototypeCycle());  handleTypeCycle(t);  [CE]  cannot  find  symbol  Predicates  [FE]                          AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);    [BUGGY]  Predicates.checkState(detectImplicitPrototypeCycle());  handleTypeCycle(t);  [BUGGY]    return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Predicates.checkState(detectImplicitPrototypeCycle());  handleTypeCycle(t);	      timeout    	non-compiled	[CE]  cannot  find  symbol  Predicates	12	None	replace
204	[BUG]  [BUGGY]  Predicate  validator  =  getValueForType(t,  enclosing);  [CE]  cannot  find  symbol  [FE]                            AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);    [BUGGY]  Predicate  validator  =  getValueForType(t,  enclosing);  [BUGGY]    return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Predicate  validator  =  getValueForType(t,  enclosing);	      timeout    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
205	[BUG]  [BUGGY]  Predicate  validator  =  t.getValue();  [CE]  cannot  find  symbol  [FE]                              AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);    [BUGGY]  Predicate  validator  =  t.getValue();  [BUGGY]    return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Predicate  validator  =  t.getValue();	      timeout    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
206	[BUG]  [BUGGY]  if(validator!=  null  &&  resolveViaProperties())  {  finishPropertyContinuations();  }  [CE]  method  resolveViaProperties  in  class  NamedType  cannot  be  applied  to  given  types;  [FE]        AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);    [BUGGY]  if(validator!=  null  &&  resolveViaProperties())  {  finishPropertyContinuations();  }  [BUGGY]    return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(validator!=  null  &&  resolveViaProperties())  {  finishPropertyContinuations();  }	  if(validator!=    null)    {    finishPropertyContinuations();    }    timeout    	non-compiled	[CE]  method  resolveViaProperties  in  class  NamedType  cannot  be  applied  to  given  types;	14	None	replace
207	[BUG]  [BUGGY]  if(validator!=  null  &&  validator.isConstructor())  {  finishPropertyContinuations();  }  [CE]  cannot  find  symbol  [FE]          AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);    [BUGGY]  if(validator!=  null  &&  validator.isConstructor())  {  finishPropertyContinuations();  }  [BUGGY]    return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(validator!=  null  &&  validator.isConstructor())  {  finishPropertyContinuations();  }	  if(validator!=    null)    {    finishPropertyContinuations();    }    timeout    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
208	[BUG]  [BUGGY]  if(validator!=  null  &&  propertyNode  ==  null)  {  finishPropertyContinuations();  }  [CE]  cannot  find  symbol  propertyNode  [FE]            AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);    [BUGGY]  if(validator!=  null  &&  propertyNode  ==  null)  {  finishPropertyContinuations();  }  [BUGGY]    return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(validator!=  null  &&  propertyNode  ==  null)  {  finishPropertyContinuations();  }	  if(validator!=    null)    {    finishPropertyContinuations();    }    timeout    	non-compiled	[CE]  cannot  find  symbol  propertyNode	14	None	replace
209	[BUG]  [BUGGY]  if(validator!=  null  &&  validator.getPropertyType()!=  propertyType)  {  finishPropertyContinuations();  }  [CE]  cannot  find  symbol  [FE]              AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);    [BUGGY]  if(validator!=  null  &&  validator.getPropertyType()!=  propertyType)  {  finishPropertyContinuations();  }  [BUGGY]    return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(validator!=  null  &&  validator.getPropertyType()!=  propertyType)  {  finishPropertyContinuations();  }	  if(validator!=    null)    {    finishPropertyContinuations();    }    timeout    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
210	[BUG]  [BUGGY]  if(validator!=  null  &&  validator.isProperty())  {  finishPropertyContinuations();  }  [CE]  cannot  find  symbol  [FE]                AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);    [BUGGY]  if(validator!=  null  &&  validator.isProperty())  {  finishPropertyContinuations();  }  [BUGGY]    return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(validator!=  null  &&  validator.isProperty())  {  finishPropertyContinuations();  }	  if(validator!=    null)    {    finishPropertyContinuations();    }    timeout    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
211	[BUG]  [BUGGY]  if(validator!=  null  &&  validator.getPropertyType()!=  PropertyType.PROPERTY)  {  finishPropertyContinuations();  }  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);    [BUGGY]  if(validator!=  null  &&  validator.getPropertyType()!=  PropertyType.PROPERTY)  {  finishPropertyContinuations();  }  [BUGGY]    return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(validator!=  null  &&  validator.getPropertyType()!=  PropertyType.PROPERTY)  {  finishPropertyContinuations();  }	  if(validator!=    null)    {    finishPropertyContinuations();    }    timeout    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
212	[BUG]  [BUGGY]  if(propertyContinuations!=  null)  {  finishPropertyValues();  }  else  {  getPropertyContinuations().addAll(propertyContinuations);  }  [CE]  cannot  find  symbol  [FE]        AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);    [BUGGY]  if(propertyContinuations!=  null)  {  finishPropertyValues();  }  else  {  getPropertyContinuations().addAll(propertyContinuations);  }  [BUGGY]    return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations!=  null)  {  finishPropertyValues();  }  else  {  getPropertyContinuations().addAll(propertyContinuations);  }	  if(propertyContinuations!=    null)    {    finishPropertyContinuations();    }    else    {    getPropertyContinuations().addAll(propertyContinuations);    }    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
213	[BUG]  [BUGGY]  if(propertyContinuations!=  null)  {  finishPropertyActual();  }  else  {  getPropertyContinuations().addAll(propertyContinuations);  }  [CE]  cannot  find  symbol  [FE]          AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);    [BUGGY]  if(propertyContinuations!=  null)  {  finishPropertyActual();  }  else  {  getPropertyContinuations().addAll(propertyContinuations);  }  [BUGGY]    return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations!=  null)  {  finishPropertyActual();  }  else  {  getPropertyContinuations().addAll(propertyContinuations);  }	  if(propertyContinuations!=    null)    {    finishPropertyContinuations();    }    else    {    getPropertyContinuations().addAll(propertyContinuations);    }    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
214	[BUG]  [BUGGY]  if(propertyContinuations!=  null)  {  finishPropertyGenerator();  }  else  {  getPropertyContinuations().addAll(propertyContinuations);  }  [CE]  cannot  find  symbol  [FE]            AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);    [BUGGY]  if(propertyContinuations!=  null)  {  finishPropertyGenerator();  }  else  {  getPropertyContinuations().addAll(propertyContinuations);  }  [BUGGY]    return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations!=  null)  {  finishPropertyGenerator();  }  else  {  getPropertyContinuations().addAll(propertyContinuations);  }	  if(propertyContinuations!=    null)    {    finishPropertyContinuations();    }    else    {    getPropertyContinuations().addAll(propertyContinuations);    }    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
215	[BUG]  [BUGGY]  if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  else  {  registry.isFirstGeneration()?  getReferencedType()  :  this;  }  [CE]  not  a  statement  [FE]                AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);    [BUGGY]  if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  else  {  registry.isFirstGeneration()?  getReferencedType()  :  this;  }  [BUGGY]    return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  else  {  registry.isFirstGeneration()?  getReferencedType()  :  this;  }	  if(propertyContinuations    ==    null)    {    finishPropertyContinuations();    }    else    {    registry.isLastGeneration()?    getReferencedType()    :    this;    }    	non-compiled	[CE]  not  a  statement	7	None	replace
216	[BUG]  [BUGGY]  if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  else  {  register.isLastGeneration()?  getReferencedType()  :  this;  }  [CE]  not  a  statement  [FE]                  AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);    [BUGGY]  if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  else  {  register.isLastGeneration()?  getReferencedType()  :  this;  }  [BUGGY]    return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  else  {  register.isLastGeneration()?  getReferencedType()  :  this;  }	  if(propertyContinuations    ==    null)    {    finishPropertyContinuations();    }    else    {    registry.isLastGeneration()?    getReferencedType()    :    this;    }    	non-compiled	[CE]  not  a  statement	7	None	replace
217	[BUG]  [BUGGY]  if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  else  {  Registry.isLastGeneration()?  getReferencedType()  :  this;  }  [CE]  not  a  statement  [FE]                    AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);    [BUGGY]  if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  else  {  Registry.isLastGeneration()?  getReferencedType()  :  this;  }  [BUGGY]    return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  else  {  Registry.isLastGeneration()?  getReferencedType()  :  this;  }	  if(propertyContinuations    ==    null)    {    finishPropertyContinuations();    }    else    {    registry.isLastGeneration()?    getReferencedType()    :    this;    }    	non-compiled	[CE]  not  a  statement	7	None	replace
218	[BUG]  [BUGGY]  resolved  =  finishPropertyContinuations();  [CE]  incompatible  types  [FE]              AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);    [BUGGY]  resolved  =  finishPropertyContinuations();  [BUGGY]    return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	resolved  =  finishPropertyContinuations();	  if(resolved)    {    finishPropertyContinuations();    }    timeout    	non-compiled	[CE]  incompatible  types	6	None	replace
219	[BUG]  [BUGGY]  previously()  {  finishPropertyContinuations();  }  [CE]  ';'  expected  [FE]                AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);    [BUGGY]  previously()  {  finishPropertyContinuations();  }  [BUGGY]    return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	previously()  {  finishPropertyContinuations();  }	  if(resolved)    {    finishPropertyContinuations();    }    timeout    	non-compiled	[CE]  ';'  expected	6	None	replace
220	[BUG]  [BUGGY]  timeout  [FE]                  AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);    [BUGGY]  Preconditions.checkState(resolved);  [BUGGY]    return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	add	Preconditions.checkState(resolved);	  if(resolved)    {    finishPropertyContinuations();    }    timeout    	compilable	timeout	6	1	replace
221	[BUG]  [BUGGY]  Preconditions.checkState(resolved);  timeout  [FE]                  AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);    [BUGGY]  Preconditions.checkState(resolved);  [BUGGY]    return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Preconditions.checkState(resolved);	  if(resolved)    {    finishPropertyContinuations();    }    timeout    	compilable	timeout	6	1	replace
222	[BUG]  [BUGGY]  if(resolved)  {  finishPropertyContinuations();  }  if(resolved)  ==  finishPropertyContinuations();  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);    [BUGGY]  if(resolved)  {  finishPropertyContinuations();  }  if(resolved)  ==  finishPropertyContinuations();  }  [BUGGY]    return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(resolved)    {    finishPropertyContinuations();    }    if(resolved)  ==  finishPropertyContinuations();  }	  timeout    	non-compiled	[CE]  illegal  start  of  expression	5	None	add
223	[BUG]  [BUGGY]  if(resolved)  {  finishPropertyContinuations();  }  if(resolved)  <  finishPropertyContinuations();  }  [CE]  >  expected  [FE]                AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);    [BUGGY]  if(resolved)  {  finishPropertyContinuations();  }  if(resolved)  <  finishPropertyContinuations();  }  [BUGGY]    return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(resolved)    {    finishPropertyContinuations();    }    if(resolved)  <  finishPropertyContinuations();  }	  timeout    	non-compiled	[CE]  >  expected	5	None	add
224	[BUG]  [BUGGY]  if(propertyContinuations  ==  null)  {  finishPropertyContinuations();  }  else  {  propertyContinuations.add(propertyName);  }  [CE]  cannot  find  symbol  propertyName  [FE]              AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);    [BUGGY]  if(propertyContinuations  ==  null)  {  finishPropertyContinuations();  }  else  {  propertyContinuations.add(propertyName);  }  [BUGGY]    return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations  ==  null)  {  finishPropertyContinuations();  }  else  {  propertyContinuations.add(propertyName);  }	  if(propertyContinuations!=    null)    {    finishPropertyContinuations();    }    else    {    propertyContinuations.add(propertyName);    }    	non-compiled	[CE]  cannot  find  symbol  propertyName	21	None	replace
225	[BUG]  [BUGGY]  if(propertyContinuations!=  null)  {  finishPropertyGeneration();  }  else  {  propertyContinuations.add(propertyName);  }  [CE]  cannot  find  symbol  [FE]                AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);    [BUGGY]  if(propertyContinuations!=  null)  {  finishPropertyGeneration();  }  else  {  propertyContinuations.add(propertyName);  }  [BUGGY]    return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations!=  null)  {  finishPropertyGeneration();  }  else  {  propertyContinuations.add(propertyName);  }	  if(propertyContinuations!=    null)    {    finishPropertyContinuations();    }    else    {    propertyContinuations.add(propertyName);    }    	non-compiled	[CE]  cannot  find  symbol	21	None	replace
226	[BUG]  [BUGGY]  if(propertyContinuations!=  null)  {  finishPropertyActual();  }  else  {  propertyContinuations.add(propertyName);  }  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);    [BUGGY]  if(propertyContinuations!=  null)  {  finishPropertyActual();  }  else  {  propertyContinuations.add(propertyName);  }  [BUGGY]    return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations!=  null)  {  finishPropertyActual();  }  else  {  propertyContinuations.add(propertyName);  }	  if(propertyContinuations!=    null)    {    finishPropertyContinuations();    }    else    {    propertyContinuations.add(propertyName);    }    	non-compiled	[CE]  cannot  find  symbol	21	None	replace
227	[BUG]  [BUGGY]  ParchetActualState.checkState(registry.isLastGeneration());  [CE]  cannot  find  symbol  ParchetActualState  [FE]        AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);    [BUGGY]  ParchetActualState.checkState(registry.isLastGeneration());  [BUGGY]    return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	ParchetActualState.checkState(registry.isLastGeneration());	  if(resolved)    {    finishPropertyContinuations();    }    else    {    registry.isLastGeneration()?    getReferencedType()    :    this;    }    	non-compiled	[CE]  cannot  find  symbol  ParchetActualState	1	None	replace
228	[BUG]  [BUGGY]  aughtExceptionHandler.handleTypeCycle(t,  propertyNode);  [CE]  cannot  find  symbol  propertyNode  [FE]          AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);    [BUGGY]  aughtExceptionHandler.handleTypeCycle(t,  propertyNode);  [BUGGY]    return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	aughtExceptionHandler.handleTypeCycle(t,  propertyNode);	  if(resolved)    {    finishPropertyContinuations();    }    else    {    registry.isLastGeneration()?    getReferencedType()    :    this;    }    	non-compiled	[CE]  cannot  find  symbol  propertyNode	1	None	replace
229	[BUG]  [BUGGY]  Annotations  props  =  getPropertyContinuations();  [CE]  cannot  find  symbol  [FE]            AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);    [BUGGY]  Annotations  props  =  getPropertyContinuations();  [BUGGY]    return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Annotations  props  =  getPropertyContinuations();	  if(resolved)    {    finishPropertyContinuations();    }    else    {    registry.isLastGeneration()?    getReferencedType()    :    this;    }    	non-compiled	[CE]  cannot  find  symbol	1	None	replace
230	[BUG]  [BUGGY]  if(validator!=  null  &&  registry.isLastGeneration())  {  finishPropertyContinuations();  }  else  {  registry.isLastGeneration()?  getReferencedType()  :  this;  }  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);    [BUGGY]  if(validator!=  null  &&  registry.isLastGeneration())  {  finishPropertyContinuations();  }  else  {  registry.isLastGeneration()?  getReferencedType()  :  this;  }  [BUGGY]    return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(validator!=  null  &&  registry.isLastGeneration())  {  finishPropertyContinuations();  }  else  {  registry.isLastGeneration()?  getReferencedType()  :  this;  }	  if(validator!=    null)    {    finishPropertyContinuations();    }    else    {    registry.isLastGeneration()?    getReferencedType()    :    this;    }    	non-compiled	[CE]  not  a  statement	15	None	replace
231	[BUG]  [BUGGY]  if(validator!=  null  &&  registry.isLastGeneration())  {  startPropertyContinuations();  }  else  {  registry.isLastGeneration()?  getReferencedType()  :  this;  }  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);    [BUGGY]  if(validator!=  null  &&  registry.isLastGeneration())  {  startPropertyContinuations();  }  else  {  registry.isLastGeneration()?  getReferencedType()  :  this;  }  [BUGGY]    return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(validator!=  null  &&  registry.isLastGeneration())  {  startPropertyContinuations();  }  else  {  registry.isLastGeneration()?  getReferencedType()  :  this;  }	  if(validator!=    null)    {    finishPropertyContinuations();    }    else    {    registry.isLastGeneration()?    getReferencedType()    :    this;    }    	non-compiled	[CE]  not  a  statement	15	None	replace
232	[BUG]  [BUGGY]  if(validator!=  null)  {  finishPropertyGenerations();  }  else  {  registry.isLastGeneration()?  getReferencedType()  :  this;  }  [CE]  not  a  statement  [FE]              AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);    [BUGGY]  if(validator!=  null)  {  finishPropertyGenerations();  }  else  {  registry.isLastGeneration()?  getReferencedType()  :  this;  }  [BUGGY]    return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(validator!=  null)  {  finishPropertyGenerations();  }  else  {  registry.isLastGeneration()?  getReferencedType()  :  this;  }	  if(validator!=    null)    {    finishPropertyContinuations();    }    else    {    registry.isLastGeneration()?    getReferencedType()    :    this;    }    	non-compiled	[CE]  not  a  statement	15	None	replace
233	[BUG]  [BUGGY]  if(validator!=  null)  {  startPropertyGeneration();  }  else  {  registry.isLastGeneration()?  getReferencedType()  :  this;  }  [CE]  not  a  statement  [FE]                AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);    [BUGGY]  if(validator!=  null)  {  startPropertyGeneration();  }  else  {  registry.isLastGeneration()?  getReferencedType()  :  this;  }  [BUGGY]    return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(validator!=  null)  {  startPropertyGeneration();  }  else  {  registry.isLastGeneration()?  getReferencedType()  :  this;  }	  if(validator!=    null)    {    finishPropertyContinuations();    }    else    {    registry.isLastGeneration()?    getReferencedType()    :    this;    }    	non-compiled	[CE]  not  a  statement	15	None	replace
234	[BUG]  [BUGGY]  if(validator!=  null)  {  startPropertyContinuations();  }  else  {  registry.isLastGeneration()?  getReferencedType()  :  this;  }  [CE]  not  a  statement  [FE]                  AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);    [BUGGY]  if(validator!=  null)  {  startPropertyContinuations();  }  else  {  registry.isLastGeneration()?  getReferencedType()  :  this;  }  [BUGGY]    return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(validator!=  null)  {  startPropertyContinuations();  }  else  {  registry.isLastGeneration()?  getReferencedType()  :  this;  }	  if(validator!=    null)    {    finishPropertyContinuations();    }    else    {    registry.isLastGeneration()?    getReferencedType()    :    this;    }    	non-compiled	[CE]  not  a  statement	15	None	replace
235	[BUG]  [BUGGY]  timeout  [FE]                    AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);    [BUGGY]  if(validator!=  null  &&  registry.isLastGeneration())  {  finishPropertyContinuations();  }  [BUGGY]    return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	add	if(validator!=  null  &&  registry.isLastGeneration())  {  finishPropertyContinuations();  }	  if(validator!=    null)    {    finishPropertyContinuations();    }    else    {    registry.isLastGeneration()?    getReferencedType()    :    this;    }    	compilable	timeout	15	1	replace
236	[BUG]  [BUGGY]  if(validator!=  null  &&  registry.isLastGeneration())  {  finishPropertyContinuations();  }  timeout  [FE]                    AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);    [BUGGY]  if(validator!=  null  &&  registry.isLastGeneration())  {  finishPropertyContinuations();  }  [BUGGY]    return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(validator!=  null  &&  registry.isLastGeneration())  {  finishPropertyContinuations();  }	  if(validator!=    null)    {    finishPropertyContinuations();    }    else    {    registry.isLastGeneration()?    getReferencedType()    :    this;    }    	compilable	timeout	15	1	replace
237	[BUG]  [BUGGY]      Predicate  validator  =  getValueForType(t);  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);    [BUGGY]      Predicate  validator  =  getValueForType(t);  [BUGGY]    return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	        Predicate  validator  =  getValueForType(t);	  timeout    	non-compiled	[CE]  cannot  find  symbol	11	None	add
238	[BUG]  [BUGGY]  if(propertyContinuations  ==  null)  {  finishPropertyContinuations();  }  if(propertyContinuations  ==  null)  {  finishPropropertyContinuations();  }  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);    [BUGGY]  if(propertyContinuations  ==  null)  {  finishPropertyContinuations();  }  if(propertyContinuations  ==  null)  {  finishPropropertyContinuations();  }  [BUGGY]    return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations    ==    null)    {    finishPropertyContinuations();    }    if(propertyContinuations  ==  null)  {  finishPropropertyContinuations();  }	  timeout    	non-compiled	[CE]  cannot  find  symbol	9	None	add
239	[BUG]  [BUGGY]  if(validator!=  null  &&  registry.isLastGeneration())  {  finishPropertyContinuations();  }  else  {  registry.isLastGeneration()  :  this;  }  [CE]  ';'  expected  [FE]              AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);    [BUGGY]  if(validator!=  null  &&  registry.isLastGeneration())  {  finishPropertyContinuations();  }  else  {  registry.isLastGeneration()  :  this;  }  [BUGGY]    return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(validator!=  null  &&  registry.isLastGeneration())  {  finishPropertyContinuations();  }  else  {  registry.isLastGeneration()  :  this;  }	  if(validator!=    null)    {    finishPropertyContinuations();    }    else    {    registry.isLastGeneration()    :    this;    }    	non-compiled	[CE]  ';'  expected	17	None	replace
240	[BUG]  [BUGGY]  if(validator!=  null)  {  finishPropertyGeneration();  }  else  {  registry.isLastGeneration()  :  this;  }  [CE]  ';'  expected  [FE]                AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);    [BUGGY]  if(validator!=  null)  {  finishPropertyGeneration();  }  else  {  registry.isLastGeneration()  :  this;  }  [BUGGY]    return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(validator!=  null)  {  finishPropertyGeneration();  }  else  {  registry.isLastGeneration()  :  this;  }	  if(validator!=    null)    {    finishPropertyContinuations();    }    else    {    registry.isLastGeneration()    :    this;    }    	non-compiled	[CE]  ';'  expected	17	None	replace
241	[BUG]  [BUGGY]  if(registry!=  null)  {  finishPropertyContinuations();  }  else  {  registry.isLastGeneration()  :  this;  }  [CE]  ';'  expected  [FE]                  AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);    [BUGGY]  if(registry!=  null)  {  finishPropertyContinuations();  }  else  {  registry.isLastGeneration()  :  this;  }  [BUGGY]    return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(registry!=  null)  {  finishPropertyContinuations();  }  else  {  registry.isLastGeneration()  :  this;  }	  if(validator!=    null)    {    finishPropertyContinuations();    }    else    {    registry.isLastGeneration()    :    this;    }    	non-compiled	[CE]  ';'  expected	17	None	replace
242	[BUG]  [BUGGY]  if(validator!=  null)  {  startPropertyGeneration();  }  else  {  registry.isLastGeneration()  :  this;  }  [CE]  ';'  expected  [FE]                    AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);    [BUGGY]  if(validator!=  null)  {  startPropertyGeneration();  }  else  {  registry.isLastGeneration()  :  this;  }  [BUGGY]    return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(validator!=  null)  {  startPropertyGeneration();  }  else  {  registry.isLastGeneration()  :  this;  }	  if(validator!=    null)    {    finishPropertyContinuations();    }    else    {    registry.isLastGeneration()    :    this;    }    	non-compiled	[CE]  ';'  expected	17	None	replace
243	[BUG]  [BUGGY]  aughtExceptionHandler  &&  resolved)  {  finishPropertyContinuations();  }  else  {  registry.isLastGeneration()  :  this;  }  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);    [BUGGY]  aughtExceptionHandler  &&  resolved)  {  finishPropertyContinuations();  }  else  {  registry.isLastGeneration()  :  this;  }  [BUGGY]    return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	aughtExceptionHandler  &&  resolved)  {  finishPropertyContinuations();  }  else  {  registry.isLastGeneration()  :  this;  }	  if(resolved)    {    finishPropertyContinuations();    }    else    {    registry.isLastGeneration()    :    this;    }    	non-compiled	[CE]  not  a  statement	16	None	replace
244	[BUG]  [BUGGY]  Annotations  inferred  =  finishPropertyContinuations();  }  else  {  registry.isLastGeneration()  :  this;  }  [CE]  [FE]              AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);    [BUGGY]  Annotations  inferred  =  finishPropertyContinuations();  }  else  {  registry.isLastGeneration()  :  this;  }  [BUGGY]    return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Annotations  inferred  =  finishPropertyContinuations();  }  else  {  registry.isLastGeneration()  :  this;  }	  if(resolved)    {    finishPropertyContinuations();    }    else    {    registry.isLastGeneration()    :    this;    }    	non-compiled	[CE]  	16	None	replace
245	[BUG]  [BUGGY]  Register.isLastGeneration()?  getReferencedType()  :  this;  [CE]  not  a  statement  [FE]                AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);    [BUGGY]  Register.isLastGeneration()?  getReferencedType()  :  this;  [BUGGY]    return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Register.isLastGeneration()?  getReferencedType()  :  this;	  if(resolved)    {    finishPropertyContinuations();    }    else    {    registry.isLastGeneration()    :    this;    }    	non-compiled	[CE]  not  a  statement	16	None	replace
246	[BUG]  [BUGGY]  Register.isLastGeneration()  :  registry.isLastGeneration();  [CE]  ';'  expected  [FE]                  AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);    [BUGGY]  Register.isLastGeneration()  :  registry.isLastGeneration();  [BUGGY]    return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Register.isLastGeneration()  :  registry.isLastGeneration();	  if(resolved)    {    finishPropertyContinuations();    }    else    {    registry.isLastGeneration()    :    this;    }    	non-compiled	[CE]  ';'  expected	16	None	replace
247	[BUG]  [BUGGY]  Parchet.checkState(registry.isLastGeneration());  [CE]  cannot  find  symbol  Parchet  [FE]                    AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);    [BUGGY]  Parchet.checkState(registry.isLastGeneration());  [BUGGY]    return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Parchet.checkState(registry.isLastGeneration());	  if(resolved)    {    finishPropertyContinuations();    }    else    {    registry.isLastGeneration()    :    this;    }    	non-compiled	[CE]  cannot  find  symbol  Parchet	16	None	replace
248	[BUG]  [BUGGY]  aughtExceptionHandler  &&  resolved)  {  finishPropertyContinuations();  }  [CE]  not  a  statement  [FE]                      AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);    [BUGGY]  aughtExceptionHandler  &&  resolved)  {  finishPropertyContinuations();  }  [BUGGY]    return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	aughtExceptionHandler  &&  resolved)  {  finishPropertyContinuations();  }	  if(resolved)    {    finishPropertyContinuations();    }    else    {    registry.isLastGeneration()    :    this;    }    	non-compiled	[CE]  not  a  statement	16	None	replace
249	[BUG]  [BUGGY]  if(forAnnotations  ==  null)  {  finishPropertyContinuations();  }  else  {  forAnnotations  =  Collections.emptyList();  }  [CE]  cannot  find  symbol  forAnnotations  [FE]            AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);    [BUGGY]  if(forAnnotations  ==  null)  {  finishPropertyContinuations();  }  else  {  forAnnotations  =  Collections.emptyList();  }  [BUGGY]    return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(forAnnotations  ==  null)  {  finishPropertyContinuations();  }  else  {  forAnnotations  =  Collections.emptyList();  }	  if(propertyContinuations!=    null)    {    finishPropertyContinuations();    }    else    {    forAnnotations    =    Collections.emptyList();    }    	non-compiled	[CE]  cannot  find  symbol  forAnnotations	20	None	replace
250	[BUG]  [BUGGY]  if(propertyContinuations!=  null)  {  startPropertyAnnotations();  }  else  {  forAnnotations  =  Collections.emptyList();  }  [CE]  cannot  find  symbol  [FE]              AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);    [BUGGY]  if(propertyContinuations!=  null)  {  startPropertyAnnotations();  }  else  {  forAnnotations  =  Collections.emptyList();  }  [BUGGY]    return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations!=  null)  {  startPropertyAnnotations();  }  else  {  forAnnotations  =  Collections.emptyList();  }	  if(propertyContinuations!=    null)    {    finishPropertyContinuations();    }    else    {    forAnnotations    =    Collections.emptyList();    }    	non-compiled	[CE]  cannot  find  symbol	20	None	replace
251	[BUG]  [BUGGY]  if(propertyContinuations!=  null)  {  finishPropertyGeneration();  }  else  {  forAnnotations  =  Collections.emptyList();  }  [CE]  cannot  find  symbol  [FE]                AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);    [BUGGY]  if(propertyContinuations!=  null)  {  finishPropertyGeneration();  }  else  {  forAnnotations  =  Collections.emptyList();  }  [BUGGY]    return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations!=  null)  {  finishPropertyGeneration();  }  else  {  forAnnotations  =  Collections.emptyList();  }	  if(propertyContinuations!=    null)    {    finishPropertyContinuations();    }    else    {    forAnnotations    =    Collections.emptyList();    }    	non-compiled	[CE]  cannot  find  symbol	20	None	replace
252	[BUG]  [BUGGY]  if(propertyContinuations!=  null)  {  startPropertyContinuations();  }  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);    [BUGGY]  if(propertyContinuations!=  null)  {  startPropertyContinuations();  }  [BUGGY]    return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations!=  null)  {  startPropertyContinuations();  }	  if(propertyContinuations    ==    null)    {    finishPropertyContinuations();    }    timeout    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
253	[BUG]  [BUGGY]  PropertyContinuations  registry  =  getPropertyContinuations(propertyName);  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);    [BUGGY]  PropertyContinuations  registry  =  getPropertyContinuations(propertyName);  [BUGGY]    return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	PropertyContinuations  registry  =  getPropertyContinuations(propertyName);	  if(propertyContinuations    ==    null)    {    finishPropertyContinuations();    }    timeout    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
254	[BUG]  [BUGGY]  final  PropertyContinuations  <  N>  propertyContinuations  =  getPropertyContinuations();  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);    [BUGGY]  final  PropertyContinuations  <  N>  propertyContinuations  =  getPropertyContinuations();  [BUGGY]    return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	final  PropertyContinuations  <  N>  propertyContinuations  =  getPropertyContinuations();	  if(propertyContinuations    ==    null)    {    finishPropertyContinuations();    }    timeout    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
255	[BUG]  [BUGGY]  if(validator!=  null)  {  finishPropertyContinuations();  }  if(validator!=  null)  {  finishPropropertyContinuations();  }  [CE]  cannot  find  symbol  [FE]        AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);    [BUGGY]  if(validator!=  null)  {  finishPropertyContinuations();  }  if(validator!=  null)  {  finishPropropertyContinuations();  }  [BUGGY]    return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(validator!=    null)    {    finishPropertyContinuations();    }    if(validator!=  null)  {  finishPropropertyContinuations();  }	  timeout    	non-compiled	[CE]  cannot  find  symbol	13	None	add
256	[BUG]  [BUGGY]  timeout  [FE]            AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);    [BUGGY]  if(propertyContinuations!=  null  &&  propertyContinuations.size()  >  0)  {  finishPropertyContinuations();  }  [BUGGY]    return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	add	if(propertyContinuations!=  null  &&  propertyContinuations.size()  >  0)  {  finishPropertyContinuations();  }	  if(propertyContinuations!=    null)    {    finishPropertyContinuations();    }    timeout    	compilable	timeout	4	1	replace
257	[BUG]  [BUGGY]  if(propertyContinuations!=  null  &&  propertyContinuations.size()  >  0)  {  finishPropertyContinuations();  }  timeout  [FE]            AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);    [BUGGY]  if(propertyContinuations!=  null  &&  propertyContinuations.size()  >  0)  {  finishPropertyContinuations();  }  [BUGGY]    return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations!=  null  &&  propertyContinuations.size()  >  0)  {  finishPropertyContinuations();  }	  if(propertyContinuations!=    null)    {    finishPropertyContinuations();    }    timeout    	compilable	timeout	4	1	replace
258	[BUG]  [BUGGY]  timeout  [FE]              AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);    [BUGGY]  if(propertyContinuations!=  null  &&  propertyContinuations.size()  >  1)  {  finishPropertyContinuations();  }  [BUGGY]    return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	add	if(propertyContinuations!=  null  &&  propertyContinuations.size()  >  1)  {  finishPropertyContinuations();  }	  if(propertyContinuations!=    null)    {    finishPropertyContinuations();    }    timeout    	compilable	timeout	4	1	replace
259	[BUG]  [BUGGY]  if(propertyContinuations!=  null  &&  propertyContinuations.size()  >  1)  {  finishPropertyContinuations();  }  timeout  [FE]              AssertionFailedError    [CONTEXT]        boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);    [BUGGY]  if(propertyContinuations!=  null  &&  propertyContinuations.size()  >  1)  {  finishPropertyContinuations();  }  [BUGGY]    return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations!=  null  &&  propertyContinuations.size()  >  1)  {  finishPropertyContinuations();  }	  if(propertyContinuations!=    null)    {    finishPropertyContinuations();    }    timeout    	compilable	timeout	4	1	replace
