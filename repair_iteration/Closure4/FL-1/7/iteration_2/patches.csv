bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  PropertyNode  registry  =  getPropertyNode(propertyName);  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  PropertyNode  registry  =  getPropertyNode(propertyName);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	PropertyNode  registry  =  getPropertyNode(propertyName);	  if(propertyContinuations    ==    null)    {    finishPropertyContinuations();    }    else    {    propertyContinuations.add(propertyName);    }    	non-compiled	[CE]  cannot  find  symbol	224	None	replace
2	[BUG]  [BUGGY]  PropertyNode  propertyNode  =  getPropertyNode();  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  PropertyNode  propertyNode  =  getPropertyNode();  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	PropertyNode  propertyNode  =  getPropertyNode();	  if(propertyContinuations    ==    null)    {    finishPropertyContinuations();    }    else    {    propertyContinuations.add(propertyName);    }    	non-compiled	[CE]  cannot  find  symbol	224	None	replace
3	[BUG]  [BUGGY]  PropertyNode  registry  =  getPropertyNode(resolved);  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  PropertyNode  registry  =  getPropertyNode(resolved);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	PropertyNode  registry  =  getPropertyNode(resolved);	  if(propertyContinuations    ==    null)    {    finishPropertyContinuations();    }    else    {    propertyContinuations.add(propertyName);    }    	non-compiled	[CE]  cannot  find  symbol	224	None	replace
4	[BUG]  [BUGGY]  if(propertyContinuations!=  null)  {  finishPropropertyContinuations();  }  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(propertyContinuations!=  null)  {  finishPropropertyContinuations();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations!=  null)  {  finishPropropertyContinuations();  }	  if(propertyContinuations    ==    null)    {    finishPropertyContinuations();    }    if(propertyContinuations    ==    null)    {    finishPropropertyContinuations();    }    	non-compiled	[CE]  cannot  find  symbol	238	None	replace
5	[BUG]  [BUGGY]  if(propertyContinuations  ==  null)  {  finishPropropertyContinuations();  }  [CE]  cannot  find  symbol  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(propertyContinuations  ==  null)  {  finishPropropertyContinuations();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations  ==  null)  {  finishPropropertyContinuations();  }	  if(propertyContinuations    ==    null)    {    finishPropertyContinuations();    }    if(propertyContinuations    ==    null)    {    finishPropropertyContinuations();    }    	non-compiled	[CE]  cannot  find  symbol	238	None	replace
6	[BUG]  [BUGGY]  PropertyPropertyContinuations  <  null)  {  finishPropropertyContinuations();  }  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  PropertyPropertyContinuations  <  null)  {  finishPropropertyContinuations();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	PropertyPropertyContinuations  <  null)  {  finishPropropertyContinuations();  }	  if(propertyContinuations    ==    null)    {    finishPropertyContinuations();    }    if(propertyContinuations    ==    null)    {    finishPropropertyContinuations();    }    	non-compiled	[CE]  illegal  start  of  type	238	None	replace
7	[BUG]  [BUGGY]  finishPropropertyContinuations();  [CE]  cannot  find  symbol  [FE]                              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  finishPropropertyContinuations();  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	finishPropropertyContinuations();	  if(propertyContinuations    ==    null)    {    finishPropertyContinuations();    }    if(propertyContinuations    ==    null)    {    finishPropropertyContinuations();    }    	non-compiled	[CE]  cannot  find  symbol	238	None	replace
8	[BUG]  [BUGGY]  if(propertyContinuations!=  null)  {  finishPropropertyAnnotations();  }  [CE]  cannot  find  symbol  [FE]                                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(propertyContinuations!=  null)  {  finishPropropertyAnnotations();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations!=  null)  {  finishPropropertyAnnotations();  }	  if(propertyContinuations    ==    null)    {    finishPropertyContinuations();    }    if(propertyContinuations    ==    null)    {    finishPropropertyContinuations();    }    	non-compiled	[CE]  cannot  find  symbol	238	None	replace
9	[BUG]  [BUGGY]  timeout  [FE]            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(validator  ==  null)  {  finishPropertyContinuations();  }  if(validator  ==  null)  {  finishPropertyContinuations();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	add	if(validator    ==    null)    {    finishPropertyContinuations();    }    if(validator  ==  null)  {  finishPropertyContinuations();  }	  timeout    	compilable	timeout	156	1	add
10	[BUG]  [BUGGY]  if(validator  ==  null)  {  finishPropertyContinuations();  }  if(validator  ==  null)  {  finishPropertyContinuations();  }  timeout  [FE]            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(validator  ==  null)  {  finishPropertyContinuations();  }  if(validator  ==  null)  {  finishPropertyContinuations();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(validator    ==    null)    {    finishPropertyContinuations();    }    if(validator  ==  null)  {  finishPropertyContinuations();  }	  timeout    	compilable	timeout	156	1	add
11	[BUG]  [BUGGY]  timeout  [FE]              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(validator  ==  null)  {  finishPropertyContinuations();  }  if(validator!=  null)  {  finishPropertyContinuations();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	add	if(validator    ==    null)    {    finishPropertyContinuations();    }    if(validator!=  null)  {  finishPropertyContinuations();  }	  timeout    	compilable	timeout	156	1	add
12	[BUG]  [BUGGY]  if(validator  ==  null)  {  finishPropertyContinuations();  }  if(validator!=  null)  {  finishPropertyContinuations();  }  timeout  [FE]              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(validator  ==  null)  {  finishPropertyContinuations();  }  if(validator!=  null)  {  finishPropertyContinuations();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(validator    ==    null)    {    finishPropertyContinuations();    }    if(validator!=  null)  {  finishPropertyContinuations();  }	  timeout    	compilable	timeout	156	1	add
13	[BUG]  [BUGGY]  if(validator  ==  null)  {  finishPropertyContinuations();  }  if(validator  ==  null)  {  startPropertyContinuations();  }  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(validator  ==  null)  {  finishPropertyContinuations();  }  if(validator  ==  null)  {  startPropertyContinuations();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(validator    ==    null)    {    finishPropertyContinuations();    }    if(validator  ==  null)  {  startPropertyContinuations();  }	  timeout    	non-compiled	[CE]  cannot  find  symbol	156	None	add
14	[BUG]  [BUGGY]  if(validator  ==  null)  {  finishPropertyContinuations();  }  If(validator  ==  null)  {  finishPropertyContinuations();  }  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(validator  ==  null)  {  finishPropertyContinuations();  }  If(validator  ==  null)  {  finishPropertyContinuations();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(validator    ==    null)    {    finishPropertyContinuations();    }    If(validator  ==  null)  {  finishPropertyContinuations();  }	  timeout    	non-compiled	[CE]  ';'  expected	156	None	add
15	[BUG]  [BUGGY]  if(validator  ==  null)  {  finishPropertyContinuations();  }  if(validator  >=  null)  {  finishPropertyContinuations();  }  [CE]  bad  operand  types  for  binary  operator  '>='  [FE]                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(validator  ==  null)  {  finishPropertyContinuations();  }  if(validator  >=  null)  {  finishPropertyContinuations();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(validator    ==    null)    {    finishPropertyContinuations();    }    if(validator  >=  null)  {  finishPropertyContinuations();  }	  timeout    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>='	156	None	add
16	[BUG]  [BUGGY]  if(validator  ==  null)  {  finishPropertyContinuations();  }  if(validator  [BUGGY]  null)  {  finishPropertyContinuations();  }  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(validator  ==  null)  {  finishPropertyContinuations();  }  if(validator  [BUGGY]  null)  {  finishPropertyContinuations();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(validator    ==    null)    {    finishPropertyContinuations();    }    if(validator  [BUGGY]  null)  {  finishPropertyContinuations();  }	  timeout    	non-compiled	[CE]  ')'  expected	156	None	add
17	[BUG]  [BUGGY]  if(validator  ==  null)  {  finishPropertyContinuations();  }  AssertionFailedError  t  =  resolveViaRegistry(t,  enclosing);  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(validator  ==  null)  {  finishPropertyContinuations();  }  AssertionFailedError  t  =  resolveViaRegistry(t,  enclosing);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(validator    ==    null)    {    finishPropertyContinuations();    }    AssertionFailedError  t  =  resolveViaRegistry(t,  enclosing);	  timeout    	non-compiled	[CE]  cannot  find  symbol	156	None	add
18	[BUG]  [BUGGY]  propertyContinuations.add(resolved);  [CE]  no  suitable  method  found  for  add(boolean)  [FE]                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  propertyContinuations.add(resolved);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	propertyContinuations.add(resolved);	  propertyContinuations.add(propertyName);    	non-compiled	[CE]  no  suitable  method  found  for  add(boolean)	67	None	replace
19	[BUG]  [BUGGY]  propertyContinuations.add(name);  [CE]  cannot  find  symbol  name  [FE]                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  propertyContinuations.add(name);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	propertyContinuations.add(name);	  propertyContinuations.add(propertyName);    	non-compiled	[CE]  cannot  find  symbol  name	67	None	replace
20	[BUG]  [BUGGY]  propertyContinuations.add(sourceName);  [CE]  no  suitable  method  found  for  add(String)  [FE]                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  propertyContinuations.add(sourceName);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	propertyContinuations.add(sourceName);	  propertyContinuations.add(propertyName);    	non-compiled	[CE]  no  suitable  method  found  for  add(String)	67	None	replace
21	[BUG]  [BUGGY]  propertyContinuations.add(propertyNode);  [CE]  cannot  find  symbol  propertyNode  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  propertyContinuations.add(propertyNode);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	propertyContinuations.add(propertyNode);	  propertyContinuations.add(propertyName);    	non-compiled	[CE]  cannot  find  symbol  propertyNode	67	None	replace
22	[BUG]  [BUGGY]  propertyContinuations.add(type);  [CE]  cannot  find  symbol  type  [FE]                            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  propertyContinuations.add(type);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	propertyContinuations.add(type);	  propertyContinuations.add(propertyName);    	non-compiled	[CE]  cannot  find  symbol  type	67	None	replace
23	[BUG]  [BUGGY]  propertyContinuations.add(resolved,  propertyName);  [CE]  cannot  find  symbol  propertyName  [FE]                              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  propertyContinuations.add(resolved,  propertyName);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	propertyContinuations.add(resolved,  propertyName);	  propertyContinuations.add(propertyName);    	non-compiled	[CE]  cannot  find  symbol  propertyName	67	None	replace
24	[BUG]  [BUGGY]  register.isLastGeneration()  :  this;  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  register.isLastGeneration()  :  this;  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	register.isLastGeneration()  :  this;	  if(registry!=    null)    {    finishPropertyContinuations();    }    else    {    registry.isLastGeneration()    :    this;    }    	non-compiled	[CE]  ';'  expected	241	None	replace
25	[BUG]  [BUGGY]  parent!=  null  &&  registry.isLastGeneration();  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  parent!=  null  &&  registry.isLastGeneration();  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	parent!=  null  &&  registry.isLastGeneration();	  if(registry!=    null)    {    finishPropertyContinuations();    }    else    {    registry.isLastGeneration()    :    this;    }    	non-compiled	[CE]  not  a  statement	241	None	replace
26	[BUG]  [BUGGY]  parent  ==  null  &&  registry.isLastGeneration();  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  parent  ==  null  &&  registry.isLastGeneration();  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	parent  ==  null  &&  registry.isLastGeneration();	  if(registry!=    null)    {    finishPropertyContinuations();    }    else    {    registry.isLastGeneration()    :    this;    }    	non-compiled	[CE]  not  a  statement	241	None	replace
27	[BUG]  [BUGGY]  Register.isLastGeneration()  :  this;  [CE]  ';'  expected  [FE]                            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Register.isLastGeneration()  :  this;  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Register.isLastGeneration()  :  this;	  if(registry!=    null)    {    finishPropertyContinuations();    }    else    {    registry.isLastGeneration()    :    this;    }    	non-compiled	[CE]  ';'  expected	241	None	replace
28	[BUG]  [BUGGY]  Parchet.checkState(registry!=  null);  [CE]  cannot  find  symbol  Parchet  [FE]                              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Parchet.checkState(registry!=  null);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Parchet.checkState(registry!=  null);	  if(registry!=    null)    {    finishPropertyContinuations();    }    else    {    registry.isLastGeneration()    :    this;    }    	non-compiled	[CE]  cannot  find  symbol  Parchet	241	None	replace
29	[BUG]  [BUGGY]  assistExceptionHandler.handleTypeCycle(t,  enclosing);  [CE]  cannot  find  symbol  assistExceptionHandler  [FE]                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  assistExceptionHandler.handleTypeCycle(t,  enclosing);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	assistExceptionHandler.handleTypeCycle(t,  enclosing);	  aughtExceptionHandler.handleTypeCycle(t,    enclosing);    	non-compiled	[CE]  cannot  find  symbol  assistExceptionHandler	194	None	replace
30	[BUG]  [BUGGY]  masterExceptionHandler.handleTypeCycle(t,  enclosing);  [CE]  cannot  find  symbol  masterExceptionHandler  [FE]                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  masterExceptionHandler.handleTypeCycle(t,  enclosing);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	masterExceptionHandler.handleTypeCycle(t,  enclosing);	  aughtExceptionHandler.handleTypeCycle(t,    enclosing);    	non-compiled	[CE]  cannot  find  symbol  masterExceptionHandler	194	None	replace
31	[BUG]  [BUGGY]  t.handleTypeCycle(t,  enclosing);  [CE]  cannot  find  symbol  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  t.handleTypeCycle(t,  enclosing);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	t.handleTypeCycle(t,  enclosing);	  aughtExceptionHandler.handleTypeCycle(t,    enclosing);    	non-compiled	[CE]  cannot  find  symbol	194	None	replace
32	[BUG]  [BUGGY]  enclosing.handleTypeCycle(t,  enclosing);  [CE]  cannot  find  symbol  [FE]                            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  enclosing.handleTypeCycle(t,  enclosing);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	enclosing.handleTypeCycle(t,  enclosing);	  aughtExceptionHandler.handleTypeCycle(t,    enclosing);    	non-compiled	[CE]  cannot  find  symbol	194	None	replace
33	[BUG]  [BUGGY]  handleTypeCycle(t,  enclosing);  [CE]  method  handleTypeCycle  in  class  NamedType  cannot  be  applied  to  given  types;  [FE]                              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  handleTypeCycle(t,  enclosing);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	handleTypeCycle(t,  enclosing);	  aughtExceptionHandler.handleTypeCycle(t,    enclosing);    	non-compiled	[CE]  method  handleTypeCycle  in  class  NamedType  cannot  be  applied  to  given  types;	194	None	replace
34	[BUG]  [BUGGY]  enclosing.handleTypeCycle(t,  charno);  [CE]  cannot  find  symbol  [FE]                                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  enclosing.handleTypeCycle(t,  charno);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	enclosing.handleTypeCycle(t,  charno);	  aughtExceptionHandler.handleTypeCycle(t,    enclosing);    	non-compiled	[CE]  cannot  find  symbol	194	None	replace
35	[BUG]  [BUGGY]  if(validator  ==  null)  {  finishProperty();  }  else  {  registry.isLastGeneration()  :  this;  }  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(validator  ==  null)  {  finishProperty();  }  else  {  registry.isLastGeneration()  :  this;  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(validator  ==  null)  {  finishProperty();  }  else  {  registry.isLastGeneration()  :  this;  }	  if(validator    ==    null)    {    finishPropertyContinuations();    }    else    {    registry.isLastGeneration()    :    this;    }    	non-compiled	[CE]  ';'  expected	131	None	replace
36	[BUG]  [BUGGY]  if(validator  ==  null)  {  finishPropertyType();  }  else  {  registry.isLastGeneration()  :  this;  }  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(validator  ==  null)  {  finishPropertyType();  }  else  {  registry.isLastGeneration()  :  this;  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(validator  ==  null)  {  finishPropertyType();  }  else  {  registry.isLastGeneration()  :  this;  }	  if(validator    ==    null)    {    finishPropertyContinuations();    }    else    {    registry.isLastGeneration()    :    this;    }    	non-compiled	[CE]  ';'  expected	131	None	replace
37	[BUG]  [BUGGY]  if(forAnnotations!=  null)  {  startPropertyAnnotations();  }  else  {  forAnnotations  =  Collections.emptyList();  }  [CE]  cannot  find  symbol  forAnnotations  [FE]                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(forAnnotations!=  null)  {  startPropertyAnnotations();  }  else  {  forAnnotations  =  Collections.emptyList();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(forAnnotations!=  null)  {  startPropertyAnnotations();  }  else  {  forAnnotations  =  Collections.emptyList();  }	  if(propertyContinuations!=    null)    {    startPropertyAnnotations();    }    else    {    forAnnotations    =    Collections.emptyList();    }    	non-compiled	[CE]  cannot  find  symbol  forAnnotations	250	None	replace
38	[BUG]  [BUGGY]  startPropertyAnnotations();  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  startPropertyAnnotations();  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	startPropertyAnnotations();	  if(propertyContinuations!=    null)    {    startPropertyAnnotations();    }    else    {    forAnnotations    =    Collections.emptyList();    }    	non-compiled	[CE]  cannot  find  symbol	250	None	replace
39	[BUG]  [BUGGY]  if(forAnnotations!=  null)  {  startPropertyAnnotations();  }  else  {  forAnnotations  =  Collections.EMPTYList();  }  [CE]  cannot  find  symbol  forAnnotations  [FE]                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(forAnnotations!=  null)  {  startPropertyAnnotations();  }  else  {  forAnnotations  =  Collections.EMPTYList();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(forAnnotations!=  null)  {  startPropertyAnnotations();  }  else  {  forAnnotations  =  Collections.EMPTYList();  }	  if(propertyContinuations!=    null)    {    startPropertyAnnotations();    }    else    {    forAnnotations    =    Collections.emptyList();    }    	non-compiled	[CE]  cannot  find  symbol  forAnnotations	250	None	replace
40	[BUG]  [BUGGY]  if(propertyContinuations  ==  null)  {  startPropertyAnnotations();  }  else  {  forAnnotations  =  Collections.emptyList();  }  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(propertyContinuations  ==  null)  {  startPropertyAnnotations();  }  else  {  forAnnotations  =  Collections.emptyList();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations  ==  null)  {  startPropertyAnnotations();  }  else  {  forAnnotations  =  Collections.emptyList();  }	  if(propertyContinuations!=    null)    {    startPropertyAnnotations();    }    else    {    forAnnotations    =    Collections.emptyList();    }    	non-compiled	[CE]  cannot  find  symbol	250	None	replace
41	[BUG]  [BUGGY]  if(propertyContinuations!=  null)  {  startPropertyAnnotations();  }  else  {  forAnnotations  =  Collections.EMPTYList();  }  [CE]  cannot  find  symbol  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(propertyContinuations!=  null)  {  startPropertyAnnotations();  }  else  {  forAnnotations  =  Collections.EMPTYList();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations!=  null)  {  startPropertyAnnotations();  }  else  {  forAnnotations  =  Collections.EMPTYList();  }	  if(propertyContinuations!=    null)    {    startPropertyAnnotations();    }    else    {    forAnnotations    =    Collections.emptyList();    }    	non-compiled	[CE]  cannot  find  symbol	250	None	replace
42	[BUG]  [BUGGY]  ensureTypeContinuations(resolved,  propertyNode)  {  finishPropertyContinuations();  }  else  {  registry.isLastGeneration()?  getReferencedType()  :  this;  }  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  ensureTypeContinuations(resolved,  propertyNode)  {  finishPropertyContinuations();  }  else  {  registry.isLastGeneration()?  getReferencedType()  :  this;  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	ensureTypeContinuations(resolved,  propertyNode)  {  finishPropertyContinuations();  }  else  {  registry.isLastGeneration()?  getReferencedType()  :  this;  }	  propertyContinuations(resolved,    propertyNode)    {    finishPropertyContinuations();    }    else    {    registry.isLastGeneration()?    getReferencedType()    :    this;    }    	non-compiled	[CE]  ';'  expected	59	None	replace
43	[BUG]  [BUGGY]  propertyContinuations(propertyNode,  resolved)  {  finishPropertyContinuations();  }  else  {  registry.isLastGeneration()?  getReferencedType()  :  this;  }  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  propertyContinuations(propertyNode,  resolved)  {  finishPropertyContinuations();  }  else  {  registry.isLastGeneration()?  getReferencedType()  :  this;  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	propertyContinuations(propertyNode,  resolved)  {  finishPropertyContinuations();  }  else  {  registry.isLastGeneration()?  getReferencedType()  :  this;  }	  propertyContinuations(resolved,    propertyNode)    {    finishPropertyContinuations();    }    else    {    registry.isLastGeneration()?    getReferencedType()    :    this;    }    	non-compiled	[CE]  ';'  expected	59	None	replace
44	[BUG]  [BUGGY]  propertyContinuations(resolved,  propertyNode)  {  startPropertyContinuations();  }  else  {  registry.isLastGeneration()?  getReferencedType()  :  this;  }  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  propertyContinuations(resolved,  propertyNode)  {  startPropertyContinuations();  }  else  {  registry.isLastGeneration()?  getReferencedType()  :  this;  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	propertyContinuations(resolved,  propertyNode)  {  startPropertyContinuations();  }  else  {  registry.isLastGeneration()?  getReferencedType()  :  this;  }	  propertyContinuations(resolved,    propertyNode)    {    finishPropertyContinuations();    }    else    {    registry.isLastGeneration()?    getReferencedType()    :    this;    }    	non-compiled	[CE]  ';'  expected	59	None	replace
45	[BUG]  [BUGGY]  Parchet.checkState(resolved);  [CE]  cannot  find  symbol  Parchet  [FE]                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Parchet.checkState(resolved);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Parchet.checkState(resolved);	  if(resolved)    {    finishPropertyContinuations();    }    if(resolved)    {    finishPropertyContinuations();    }    timeout    	non-compiled	[CE]  cannot  find  symbol  Parchet	35	None	replace
46	[BUG]  [BUGGY]  if(resolved)  {  finishPropertyFields();  }  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(resolved)  {  finishPropertyFields();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(resolved)  {  finishPropertyFields();  }	  if(resolved)    {    finishPropertyContinuations();    }    if(resolved)    {    finishPropertyContinuations();    }    timeout    	non-compiled	[CE]  cannot  find  symbol	35	None	replace
47	[BUG]  [BUGGY]  Predicates.checkNotNull(propertyContinuations,  resolved);  [CE]  cannot  find  symbol  Predicates  [FE]                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Predicates.checkNotNull(propertyContinuations,  resolved);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Predicates.checkNotNull(propertyContinuations,  resolved);	  if(resolved)    {    finishPropertyContinuations();    }    if(resolved)    {    finishPropertyContinuations();    }    timeout    	non-compiled	[CE]  cannot  find  symbol  Predicates	35	None	replace
48	[BUG]  [BUGGY]  startPropertyGeneration();  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  startPropertyGeneration();  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	startPropertyGeneration();	  if(propertyContinuations!=    null)    {    startPropertyGeneration();    }    	non-compiled	[CE]  cannot  find  symbol	137	None	replace
49	[BUG]  [BUGGY]  if(propertyContinuations  ==  null)  {  startPropertyGeneration();  }  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(propertyContinuations  ==  null)  {  startPropertyGeneration();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations  ==  null)  {  startPropertyGeneration();  }	  if(propertyContinuations!=    null)    {    startPropertyGeneration();    }    	non-compiled	[CE]  cannot  find  symbol	137	None	replace
50	[BUG]  [BUGGY]  PropertyGeneration  startPropertyGeneration();  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  PropertyGeneration  startPropertyGeneration();  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	PropertyGeneration  startPropertyGeneration();	  if(propertyContinuations!=    null)    {    startPropertyGeneration();    }    	non-compiled	[CE]  ';'  expected	137	None	replace
51	[BUG]  [BUGGY]  PropertyGeneration  <  PropertyContinuation>  startPropertyGeneration();  [CE]  ';'  expected  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  PropertyGeneration  <  PropertyContinuation>  startPropertyGeneration();  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	PropertyGeneration  <  PropertyContinuation>  startPropertyGeneration();	  if(propertyContinuations!=    null)    {    startPropertyGeneration();    }    	non-compiled	[CE]  ';'  expected	137	None	replace
52	[BUG]  [BUGGY]  StartPropertyGeneration();  [CE]  cannot  find  symbol  [FE]                            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  StartPropertyGeneration();  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	StartPropertyGeneration();	  if(propertyContinuations!=    null)    {    startPropertyGeneration();    }    	non-compiled	[CE]  cannot  find  symbol	137	None	replace
53	[BUG]  [BUGGY]  PropertyGeneration  <  PropertyContinuations>  startPropertyGeneration();  [CE]  ';'  expected  [FE]                              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  PropertyGeneration  <  PropertyContinuations>  startPropertyGeneration();  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	PropertyGeneration  <  PropertyContinuations>  startPropertyGeneration();	  if(propertyContinuations!=    null)    {    startPropertyGeneration();    }    	non-compiled	[CE]  ';'  expected	137	None	replace
54	[BUG]  [BUGGY]  if(propertyAnnotations!=  null)  {  finishPropertyAnnotations();  }  else  {  getPropertyContinuations().addAll(propertyContinuations);  }  [CE]  cannot  find  symbol  propertyAnnotations  [FE]                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(propertyAnnotations!=  null)  {  finishPropertyAnnotations();  }  else  {  getPropertyContinuations().addAll(propertyContinuations);  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyAnnotations!=  null)  {  finishPropertyAnnotations();  }  else  {  getPropertyContinuations().addAll(propertyContinuations);  }	  if(propertyContinuations!=    null)    {    finishPropertyAnnotations();    }    else    {    getPropertyContinuations().addAll(propertyContinuations);    }    	non-compiled	[CE]  cannot  find  symbol  propertyAnnotations	120	None	replace
55	[BUG]  [BUGGY]  if(propertyContinuations!=  null)  {  startPropertyAnnotations();  }  else  {  getPropertyContinuations().addAll(propertyContinuations);  }  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(propertyContinuations!=  null)  {  startPropertyAnnotations();  }  else  {  getPropertyContinuations().addAll(propertyContinuations);  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations!=  null)  {  startPropertyAnnotations();  }  else  {  getPropertyContinuations().addAll(propertyContinuations);  }	  if(propertyContinuations!=    null)    {    finishPropertyAnnotations();    }    else    {    getPropertyContinuations().addAll(propertyContinuations);    }    	non-compiled	[CE]  cannot  find  symbol	120	None	replace
56	[BUG]  [BUGGY]  if(propertyAnnotations!=  null)  {  startPropertyAnnotations();  }  else  {  getPropertyContinuations().addAll(propertyContinuations);  }  [CE]  cannot  find  symbol  propertyAnnotations  [FE]                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(propertyAnnotations!=  null)  {  startPropertyAnnotations();  }  else  {  getPropertyContinuations().addAll(propertyContinuations);  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyAnnotations!=  null)  {  startPropertyAnnotations();  }  else  {  getPropertyContinuations().addAll(propertyContinuations);  }	  if(propertyContinuations!=    null)    {    finishPropertyAnnotations();    }    else    {    getPropertyContinuations().addAll(propertyContinuations);    }    	non-compiled	[CE]  cannot  find  symbol  propertyAnnotations	120	None	replace
57	[BUG]  [BUGGY]  if(propertyAnnotations!=  null)  {  finishPropertyAnnotations();  }  else  {  getPropertyContinuations().addAll(propertyAnnotations);  }  [CE]  cannot  find  symbol  propertyAnnotations  [FE]                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(propertyAnnotations!=  null)  {  finishPropertyAnnotations();  }  else  {  getPropertyContinuations().addAll(propertyAnnotations);  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyAnnotations!=  null)  {  finishPropertyAnnotations();  }  else  {  getPropertyContinuations().addAll(propertyAnnotations);  }	  if(propertyContinuations!=    null)    {    finishPropertyAnnotations();    }    else    {    getPropertyContinuations().addAll(propertyContinuations);    }    	non-compiled	[CE]  cannot  find  symbol  propertyAnnotations	120	None	replace
58	[BUG]  [BUGGY]  if(propertyAnnotations!=  null)  {  finishPropertyAnnotations();  }  else  {  getPropertyContinuations().addAll(propertyEnclosing);  }  [CE]  cannot  find  symbol  propertyAnnotations  [FE]                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(propertyAnnotations!=  null)  {  finishPropertyAnnotations();  }  else  {  getPropertyContinuations().addAll(propertyEnclosing);  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyAnnotations!=  null)  {  finishPropertyAnnotations();  }  else  {  getPropertyContinuations().addAll(propertyEnclosing);  }	  if(propertyContinuations!=    null)    {    finishPropertyAnnotations();    }    else    {    getPropertyContinuations().addAll(propertyContinuations);    }    	non-compiled	[CE]  cannot  find  symbol  propertyAnnotations	120	None	replace
59	[BUG]  [BUGGY]  if(propertyContinuations!=  null)  {  finishPropertyAnnotations();  }  else  {  getPropertyContinuations().addAll(forAnnotations);  }  [CE]  cannot  find  symbol  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(propertyContinuations!=  null)  {  finishPropertyAnnotations();  }  else  {  getPropertyContinuations().addAll(forAnnotations);  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations!=  null)  {  finishPropertyAnnotations();  }  else  {  getPropertyContinuations().addAll(forAnnotations);  }	  if(propertyContinuations!=    null)    {    finishPropertyAnnotations();    }    else    {    getPropertyContinuations().addAll(propertyContinuations);    }    	non-compiled	[CE]  cannot  find  symbol	120	None	replace
60	[BUG]  [BUGGY]  Parchet.checkState(resolved)  {  finishPropertyContinuations();  }  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Parchet.checkState(resolved)  {  finishPropertyContinuations();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Parchet.checkState(resolved)  {  finishPropertyContinuations();  }	  if(resolved)    {    finishPropertyContinuations();    }    if(resolved)    ==    finishPropertyContinuations();    }    	non-compiled	[CE]  ';'  expected	222	None	replace
61	[BUG]  [BUGGY]  register.isLastGeneration();  [CE]  cannot  find  symbol  register  [FE]                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  register.isLastGeneration();  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	register.isLastGeneration();	  if(resolved)    {    startPropertyGeneration();    }    else    {    registry.isLastGeneration()    :    this;    }    	non-compiled	[CE]  cannot  find  symbol  register	176	None	replace
62	[BUG]  [BUGGY]  Context.checkState(resolved);  [CE]  cannot  find  symbol  Context  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Context.checkState(resolved);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Context.checkState(resolved);	  if(resolved)    {    startPropertyGeneration();    }    else    {    registry.isLastGeneration()    :    this;    }    	non-compiled	[CE]  cannot  find  symbol  Context	176	None	replace
63	[BUG]  [BUGGY]  validatePropertyGeneration();  [CE]  cannot  find  symbol  [FE]                            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  validatePropertyGeneration();  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	validatePropertyGeneration();	  if(resolved)    {    startPropertyGeneration();    }    else    {    registry.isLastGeneration()    :    this;    }    	non-compiled	[CE]  cannot  find  symbol	176	None	replace
64	[BUG]  [BUGGY]  Constructor  <?>  validator  =  registry.getReferencedType();  [CE]  cannot  find  symbol  [FE]                              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Constructor  <?>  validator  =  registry.getReferencedType();  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Constructor  <?>  validator  =  registry.getReferencedType();	  if(resolved)    {    startPropertyGeneration();    }    else    {    registry.isLastGeneration()    :    this;    }    	non-compiled	[CE]  cannot  find  symbol	176	None	replace
65	[BUG]  [BUGGY]  timeout  [FE]                                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  registry.isLastGeneration();  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	add	registry.isLastGeneration();	  if(resolved)    {    startPropertyGeneration();    }    else    {    registry.isLastGeneration()    :    this;    }    	compilable	timeout	176	1	replace
66	[BUG]  [BUGGY]  registry.isLastGeneration();  timeout  [FE]                                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  registry.isLastGeneration();  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	registry.isLastGeneration();	  if(resolved)    {    startPropertyGeneration();    }    else    {    registry.isLastGeneration()    :    this;    }    	compilable	timeout	176	1	replace
67	[BUG]  [BUGGY]  Validator.notNull(registry.isLastGeneration());  [CE]  cannot  find  symbol  Validator  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Validator.notNull(registry.isLastGeneration());  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Validator.notNull(registry.isLastGeneration());	  validator!=    null    &&    registry.isLastGeneration();    	non-compiled	[CE]  cannot  find  symbol  Validator	97	None	replace
68	[BUG]  [BUGGY]  Validator  <?>  validator!=  null  &&  registry.isLastGeneration();  [CE]  ';'  expected  [FE]                            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Validator  <?>  validator!=  null  &&  registry.isLastGeneration();  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Validator  <?>  validator!=  null  &&  registry.isLastGeneration();	  validator!=    null    &&    registry.isLastGeneration();    	non-compiled	[CE]  ';'  expected	97	None	replace
69	[BUG]  [BUGGY]  validator!=  null  &&  registry.isFirstGeneration();  [CE]  not  a  statement  [FE]                              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  validator!=  null  &&  registry.isFirstGeneration();  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	validator!=  null  &&  registry.isFirstGeneration();	  validator!=    null    &&    registry.isLastGeneration();    	non-compiled	[CE]  not  a  statement	97	None	replace
70	[BUG]  [BUGGY]  Validator  validator!=  null  &&  registry.isLastGeneration();  [CE]  ';'  expected  [FE]                                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Validator  validator!=  null  &&  registry.isLastGeneration();  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Validator  validator!=  null  &&  registry.isLastGeneration();	  validator!=    null    &&    registry.isLastGeneration();    	non-compiled	[CE]  ';'  expected	97	None	replace
71	[BUG]  [BUGGY]  validator!=  null  ||  registry.isLastGeneration();  [CE]  not  a  statement  [FE]                                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  validator!=  null  ||  registry.isLastGeneration();  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	validator!=  null  ||  registry.isLastGeneration();	  validator!=    null    &&    registry.isLastGeneration();    	non-compiled	[CE]  not  a  statement	97	None	replace
72	[BUG]  [BUGGY]  ensureTypeContinuations(resolved)  {  finishPropertyContinuations();  }  else  {  registry.isLastGeneration()?  getReferencedType()  :  this;  }  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  ensureTypeContinuations(resolved)  {  finishPropertyContinuations();  }  else  {  registry.isLastGeneration()?  getReferencedType()  :  this;  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	ensureTypeContinuations(resolved)  {  finishPropertyContinuations();  }  else  {  registry.isLastGeneration()?  getReferencedType()  :  this;  }	  propertyContinuations(resolved)    {    finishPropertyContinuations();    }    else    {    registry.isLastGeneration()?    getReferencedType()    :    this;    }    	non-compiled	[CE]  ';'  expected	60	None	replace
73	[BUG]  [BUGGY]  ensurePropertyContinuations(resolved)  {  finishPropertyContinuations();  }  else  {  registry.isLastGeneration()?  getReferencedType()  :  this;  }  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  ensurePropertyContinuations(resolved)  {  finishPropertyContinuations();  }  else  {  registry.isLastGeneration()?  getReferencedType()  :  this;  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	ensurePropertyContinuations(resolved)  {  finishPropertyContinuations();  }  else  {  registry.isLastGeneration()?  getReferencedType()  :  this;  }	  propertyContinuations(resolved)    {    finishPropertyContinuations();    }    else    {    registry.isLastGeneration()?    getReferencedType()    :    this;    }    	non-compiled	[CE]  ';'  expected	60	None	replace
74	[BUG]  [BUGGY]  luate(registry,  enclosing)  {  finishPropertyContinuations();  }  else  {  registry.isLastGeneration()?  getReferencedType()  :  this;  }  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  luate(registry,  enclosing)  {  finishPropertyContinuations();  }  else  {  registry.isLastGeneration()?  getReferencedType()  :  this;  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	luate(registry,  enclosing)  {  finishPropertyContinuations();  }  else  {  registry.isLastGeneration()?  getReferencedType()  :  this;  }	  luate(registry,    resolved)    {    finishPropertyContinuations();    }    else    {    registry.isLastGeneration()?    getReferencedType()    :    this;    }    	non-compiled	[CE]  ';'  expected	164	None	replace
75	[BUG]  [BUGGY]  luate(registry,  enclosing)  {  startPropertyContinuations();  }  else  {  registry.isLastGeneration()?  getReferencedType()  :  this;  }  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  luate(registry,  enclosing)  {  startPropertyContinuations();  }  else  {  registry.isLastGeneration()?  getReferencedType()  :  this;  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	luate(registry,  enclosing)  {  startPropertyContinuations();  }  else  {  registry.isLastGeneration()?  getReferencedType()  :  this;  }	  luate(registry,    resolved)    {    finishPropertyContinuations();    }    else    {    registry.isLastGeneration()?    getReferencedType()    :    this;    }    	non-compiled	[CE]  ';'  expected	164	None	replace
76	[BUG]  [BUGGY]  luate(registry,  enclosing)  {  getPropertyContinuations();  }  else  {  registry.isLastGeneration()?  getReferencedType()  :  this;  }  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  luate(registry,  enclosing)  {  getPropertyContinuations();  }  else  {  registry.isLastGeneration()?  getReferencedType()  :  this;  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	luate(registry,  enclosing)  {  getPropertyContinuations();  }  else  {  registry.isLastGeneration()?  getReferencedType()  :  this;  }	  luate(registry,    resolved)    {    finishPropertyContinuations();    }    else    {    registry.isLastGeneration()?    getReferencedType()    :    this;    }    	non-compiled	[CE]  ';'  expected	164	None	replace
77	[BUG]  [BUGGY]  luate(registry,  propertyNode)  {  finishPropertyContinuations();  }  else  {  registry.isLastGeneration()?  getReferencedType()  :  this;  }  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  luate(registry,  propertyNode)  {  finishPropertyContinuations();  }  else  {  registry.isLastGeneration()?  getReferencedType()  :  this;  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	luate(registry,  propertyNode)  {  finishPropertyContinuations();  }  else  {  registry.isLastGeneration()?  getReferencedType()  :  this;  }	  luate(registry,    resolved)    {    finishPropertyContinuations();    }    else    {    registry.isLastGeneration()?    getReferencedType()    :    this;    }    	non-compiled	[CE]  ';'  expected	164	None	replace
78	[BUG]  [BUGGY]  luate(registry,  validated)  {  finishPropertyContinuations();  }  else  {  registry.isLastGeneration()?  getReferencedType()  :  this;  }  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  luate(registry,  validated)  {  finishPropertyContinuations();  }  else  {  registry.isLastGeneration()?  getReferencedType()  :  this;  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	luate(registry,  validated)  {  finishPropertyContinuations();  }  else  {  registry.isLastGeneration()?  getReferencedType()  :  this;  }	  luate(registry,    resolved)    {    finishPropertyContinuations();    }    else    {    registry.isLastGeneration()?    getReferencedType()    :    this;    }    	non-compiled	[CE]  ';'  expected	164	None	replace
79	[BUG]  [BUGGY]  luate(registry,  validator)  {  finishPropertyContinuations();  }  else  {  registry.isLastGeneration()?  getReferencedType()  :  this;  }  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  luate(registry,  validator)  {  finishPropertyContinuations();  }  else  {  registry.isLastGeneration()?  getReferencedType()  :  this;  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	luate(registry,  validator)  {  finishPropertyContinuations();  }  else  {  registry.isLastGeneration()?  getReferencedType()  :  this;  }	  luate(registry,    resolved)    {    finishPropertyContinuations();    }    else    {    registry.isLastGeneration()?    getReferencedType()    :    this;    }    	non-compiled	[CE]  ';'  expected	164	None	replace
80	[BUG]  [BUGGY]  timeout  [FE]                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(propertyContinuations!=  null  &&  propertyContinuations.size()  >  0)  {  finishPropertyContinuations();  }  if(propertyContinuations!=  null  &&  propertyContinuations.size()  >  0)  {  finishPropertyContinuations();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	add	if(propertyContinuations!=    null    &&    propertyContinuations.size()    >    0)    {    finishPropertyContinuations();    }    if(propertyContinuations!=  null  &&  propertyContinuations.size()  >  0)  {  finishPropertyContinuations();  }	  timeout    	compilable	timeout	256	1	add
81	[BUG]  [BUGGY]  if(propertyContinuations!=  null  &&  propertyContinuations.size()  >  0)  {  finishPropertyContinuations();  }  if(propertyContinuations!=  null  &&  propertyContinuations.size()  >  0)  {  finishPropertyContinuations();  }  timeout  [FE]                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(propertyContinuations!=  null  &&  propertyContinuations.size()  >  0)  {  finishPropertyContinuations();  }  if(propertyContinuations!=  null  &&  propertyContinuations.size()  >  0)  {  finishPropertyContinuations();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations!=    null    &&    propertyContinuations.size()    >    0)    {    finishPropertyContinuations();    }    if(propertyContinuations!=  null  &&  propertyContinuations.size()  >  0)  {  finishPropertyContinuations();  }	  timeout    	compilable	timeout	256	1	add
82	[BUG]  [BUGGY]  timeout  [FE]                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(propertyContinuations!=  null  &&  propertyContinuations.size()  >  0)  {  finishPropertyContinuations();  }  if(propertyContinuations  ==  null  &&  propertyContinuations.size()  >  0)  {  finishPropertyContinuations();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	add	if(propertyContinuations!=    null    &&    propertyContinuations.size()    >    0)    {    finishPropertyContinuations();    }    if(propertyContinuations  ==  null  &&  propertyContinuations.size()  >  0)  {  finishPropertyContinuations();  }	  timeout    	compilable	timeout	256	1	add
83	[BUG]  [BUGGY]  if(propertyContinuations!=  null  &&  propertyContinuations.size()  >  0)  {  finishPropertyContinuations();  }  if(propertyContinuations  ==  null  &&  propertyContinuations.size()  >  0)  {  finishPropertyContinuations();  }  timeout  [FE]                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(propertyContinuations!=  null  &&  propertyContinuations.size()  >  0)  {  finishPropertyContinuations();  }  if(propertyContinuations  ==  null  &&  propertyContinuations.size()  >  0)  {  finishPropertyContinuations();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations!=    null    &&    propertyContinuations.size()    >    0)    {    finishPropertyContinuations();    }    if(propertyContinuations  ==  null  &&  propertyContinuations.size()  >  0)  {  finishPropertyContinuations();  }	  timeout    	compilable	timeout	256	1	add
84	[BUG]  [BUGGY]  if(propertyContinuations!=  null  &&  propertyContinuations.size()  >  0)  {  finishPropertyContinuations();  }  if(propertyContinuations!=  null  &&  propertyContinuations.size()  >  0)  {  startPropertyContinuations();  }  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(propertyContinuations!=  null  &&  propertyContinuations.size()  >  0)  {  finishPropertyContinuations();  }  if(propertyContinuations!=  null  &&  propertyContinuations.size()  >  0)  {  startPropertyContinuations();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations!=    null    &&    propertyContinuations.size()    >    0)    {    finishPropertyContinuations();    }    if(propertyContinuations!=  null  &&  propertyContinuations.size()  >  0)  {  startPropertyContinuations();  }	  timeout    	non-compiled	[CE]  cannot  find  symbol	256	None	add
85	[BUG]  [BUGGY]  if(propertyContinuations!=  null  &&  propertyContinuations.size()  >  0)  {  finishPropertyContinuations();  }  if(propertyContinuations  >=  null  &&  propertyContinuations.size()  >  0)  {  finishPropertyContinuations();  }  [CE]  bad  operand  types  for  binary  operator  '>='  [FE]                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(propertyContinuations!=  null  &&  propertyContinuations.size()  >  0)  {  finishPropertyContinuations();  }  if(propertyContinuations  >=  null  &&  propertyContinuations.size()  >  0)  {  finishPropertyContinuations();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations!=    null    &&    propertyContinuations.size()    >    0)    {    finishPropertyContinuations();    }    if(propertyContinuations  >=  null  &&  propertyContinuations.size()  >  0)  {  finishPropertyContinuations();  }	  timeout    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>='	256	None	add
86	[BUG]  [BUGGY]  if(propertyContinuations!=  null  &&  propertyContinuations.size()  >  0)  {  finishPropertyContinuations();  }  If(propertyContinuations!=  null  &&  propertyContinuations.size()  >  0)  {  finishPropertyContinuations();  }  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(propertyContinuations!=  null  &&  propertyContinuations.size()  >  0)  {  finishPropertyContinuations();  }  If(propertyContinuations!=  null  &&  propertyContinuations.size()  >  0)  {  finishPropertyContinuations();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations!=    null    &&    propertyContinuations.size()    >    0)    {    finishPropertyContinuations();    }    If(propertyContinuations!=  null  &&  propertyContinuations.size()  >  0)  {  finishPropertyContinuations();  }	  timeout    	non-compiled	[CE]  ';'  expected	256	None	add
87	[BUG]  [BUGGY]  if(propertyContinuations!=  null  &&  propertyContinuations.size()  >  0)  {  finishPropertyContinuations();  }  if(propertyContinuations  >>  null  &&  propertyContinuations.size()  >  0)  {  finishPropertyContinuations();  }  [CE]  bad  operand  types  for  binary  operator  '>>'  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(propertyContinuations!=  null  &&  propertyContinuations.size()  >  0)  {  finishPropertyContinuations();  }  if(propertyContinuations  >>  null  &&  propertyContinuations.size()  >  0)  {  finishPropertyContinuations();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations!=    null    &&    propertyContinuations.size()    >    0)    {    finishPropertyContinuations();    }    if(propertyContinuations  >>  null  &&  propertyContinuations.size()  >  0)  {  finishPropertyContinuations();  }	  timeout    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>>'	256	None	add
88	[BUG]  [BUGGY]  if(propertyContinuations!=  null  &&  propertyContinuations.size()  >  0)  {  finishPropertyContinuations();  }  if(propertyContinuations!=  null  &&  properties.size()  >  0)  {  finishPropertyContinuations();  }  [CE]  cannot  find  symbol  properties  [FE]                            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(propertyContinuations!=  null  &&  propertyContinuations.size()  >  0)  {  finishPropertyContinuations();  }  if(propertyContinuations!=  null  &&  properties.size()  >  0)  {  finishPropertyContinuations();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations!=    null    &&    propertyContinuations.size()    >    0)    {    finishPropertyContinuations();    }    if(propertyContinuations!=  null  &&  properties.size()  >  0)  {  finishPropertyContinuations();  }	  timeout    	non-compiled	[CE]  cannot  find  symbol  properties	256	None	add
89	[BUG]  [BUGGY]  validateViaProperties(t,  enclosing);  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  validateViaProperties(t,  enclosing);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	validateViaProperties(t,  enclosing);	  if(resolved)    {    finishPropertyContinuations();    }    when(resolved)    {    finishPropertyContinuations();    }    	non-compiled	[CE]  cannot  find  symbol	38	None	replace
90	[BUG]  [BUGGY]  Status.checkState(!resolved,  propertyContinuations.size()  >  0);  [CE]  cannot  find  symbol  Status  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Status.checkState(!resolved,  propertyContinuations.size()  >  0);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Status.checkState(!resolved,  propertyContinuations.size()  >  0);	  if(resolved)    {    finishPropertyContinuations();    }    when(resolved)    {    finishPropertyContinuations();    }    	non-compiled	[CE]  cannot  find  symbol  Status	38	None	replace
91	[BUG]  [BUGGY]  Status.checkState(!resolved,  propertyContinuations.isEmpty());  [CE]  cannot  find  symbol  Status  [FE]                            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Status.checkState(!resolved,  propertyContinuations.isEmpty());  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Status.checkState(!resolved,  propertyContinuations.isEmpty());	  if(resolved)    {    finishPropertyContinuations();    }    when(resolved)    {    finishPropertyContinuations();    }    	non-compiled	[CE]  cannot  find  symbol  Status	38	None	replace
92	[BUG]  [BUGGY]  Parchet.checkNotNull(propertyContinuations,  resolved);  [CE]  cannot  find  symbol  Parchet  [FE]                              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Parchet.checkNotNull(propertyContinuations,  resolved);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Parchet.checkNotNull(propertyContinuations,  resolved);	  if(resolved)    {    finishPropertyContinuations();    }    when(resolved)    {    finishPropertyContinuations();    }    	non-compiled	[CE]  cannot  find  symbol  Parchet	38	None	replace
93	[BUG]  [BUGGY]  BundlePropertyGeneration  registry  =  getBundlePropertyGeneration(propertyNode);  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  BundlePropertyGeneration  registry  =  getBundlePropertyGeneration(propertyNode);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	BundlePropertyGeneration  registry  =  getBundlePropertyGeneration(propertyNode);	  if(propertyContinuations!=    null)    {    finishPropertyGenerations();    }    else    {    getPropertyContinuations().addAll(propertyContinuations);    }    	non-compiled	[CE]  cannot  find  symbol	123	None	replace
94	[BUG]  [BUGGY]  BundlePropertyGeneration  registry  =  getBundlePropertyGenerations(propertyNode);  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  BundlePropertyGeneration  registry  =  getBundlePropertyGenerations(propertyNode);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	BundlePropertyGeneration  registry  =  getBundlePropertyGenerations(propertyNode);	  if(propertyContinuations!=    null)    {    finishPropertyGenerations();    }    else    {    getPropertyContinuations().addAll(propertyContinuations);    }    	non-compiled	[CE]  cannot  find  symbol	123	None	replace
95	[BUG]  [BUGGY]  BundlePropertyGeneration  registry  =  getBundlePropertyGenerator();  [CE]  cannot  find  symbol  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  BundlePropertyGeneration  registry  =  getBundlePropertyGenerator();  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	BundlePropertyGeneration  registry  =  getBundlePropertyGenerator();	  if(propertyContinuations!=    null)    {    finishPropertyGenerations();    }    else    {    getPropertyContinuations().addAll(propertyContinuations);    }    	non-compiled	[CE]  cannot  find  symbol	123	None	replace
96	[BUG]  [BUGGY]  BundlePropertyGeneration  registry  =  getBundlePropertyGenerations();  [CE]  cannot  find  symbol  [FE]                            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  BundlePropertyGeneration  registry  =  getBundlePropertyGenerations();  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	BundlePropertyGeneration  registry  =  getBundlePropertyGenerations();	  if(propertyContinuations!=    null)    {    finishPropertyGenerations();    }    else    {    getPropertyContinuations().addAll(propertyContinuations);    }    	non-compiled	[CE]  cannot  find  symbol	123	None	replace
97	[BUG]  [BUGGY]  startPropertyContinuations();  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  startPropertyContinuations();  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	startPropertyContinuations();	  if(propertyContinuations!=    null)    {    finishPropertyContinuations();    }    if(propertyContinuations!=    null)    {    startPropertyContinuations();    }    	non-compiled	[CE]  cannot  find  symbol	81	None	replace
98	[BUG]  [BUGGY]  if(propertyContinuations  ==  null)  {  startPropertyContinuations();  }  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(propertyContinuations  ==  null)  {  startPropertyContinuations();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations  ==  null)  {  startPropertyContinuations();  }	  if(propertyContinuations!=    null)    {    finishPropertyContinuations();    }    if(propertyContinuations!=    null)    {    startPropertyContinuations();    }    	non-compiled	[CE]  cannot  find  symbol	81	None	replace
99	[BUG]  [BUGGY]  PropertyPropertyContinuations  <  null)  {  startPropertyContinuations();  }  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  PropertyPropertyContinuations  <  null)  {  startPropertyContinuations();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	PropertyPropertyContinuations  <  null)  {  startPropertyContinuations();  }	  if(propertyContinuations!=    null)    {    finishPropertyContinuations();    }    if(propertyContinuations!=    null)    {    startPropertyContinuations();    }    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
100	[BUG]  [BUGGY]  PropertyPropertyContinuations  <?>  startPropertyContinuations();  [CE]  ';'  expected  [FE]                            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  PropertyPropertyContinuations  <?>  startPropertyContinuations();  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	PropertyPropertyContinuations  <?>  startPropertyContinuations();	  if(propertyContinuations!=    null)    {    finishPropertyContinuations();    }    if(propertyContinuations!=    null)    {    startPropertyContinuations();    }    	non-compiled	[CE]  ';'  expected	81	None	replace
101	[BUG]  [BUGGY]  Predicate  validator  =  getValueForAnnotations();  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Predicate  validator  =  getValueForAnnotations();  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Predicate  validator  =  getValueForAnnotations();	  previously()    {    finishPropertyContinuations();    }    	non-compiled	[CE]  cannot  find  symbol	219	None	replace
102	[BUG]  [BUGGY]  Predicates.sort(propertyContinuations);  [CE]  cannot  find  symbol  Predicates  [FE]                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Predicates.sort(propertyContinuations);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Predicates.sort(propertyContinuations);	  previously()    {    finishPropertyContinuations();    }    	non-compiled	[CE]  cannot  find  symbol  Predicates	219	None	replace
103	[BUG]  [BUGGY]  Predicates.checkState(resolved,  getReferencedType()  ==  null);  [CE]  cannot  find  symbol  Predicates  [FE]                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Predicates.checkState(resolved,  getReferencedType()  ==  null);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Predicates.checkState(resolved,  getReferencedType()  ==  null);	  previously()    {    finishPropertyContinuations();    }    	non-compiled	[CE]  cannot  find  symbol  Predicates	219	None	replace
104	[BUG]  [BUGGY]  Predicates.checkState(resolved,  getReferencedType()!=  null);  [CE]  cannot  find  symbol  Predicates  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Predicates.checkState(resolved,  getReferencedType()!=  null);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Predicates.checkState(resolved,  getReferencedType()!=  null);	  previously()    {    finishPropertyContinuations();    }    	non-compiled	[CE]  cannot  find  symbol  Predicates	219	None	replace
105	[BUG]  [BUGGY]  Predicate  validator  =  getValueForAnnotations(propertyNode);  [CE]  cannot  find  symbol  propertyNode  [FE]                            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Predicate  validator  =  getValueForAnnotations(propertyNode);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Predicate  validator  =  getValueForAnnotations(propertyNode);	  previously()    {    finishPropertyContinuations();    }    	non-compiled	[CE]  cannot  find  symbol  propertyNode	219	None	replace
106	[BUG]  [BUGGY]  Predicates.checkState(resolved);  handleTypeCycle(t);  [CE]  cannot  find  symbol  Predicates  [FE]                              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Predicates.checkState(resolved);  handleTypeCycle(t);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Predicates.checkState(resolved);  handleTypeCycle(t);	  Predicates.checkState(detectImplicitPrototypeCycle());    handleTypeCycle(t);    	non-compiled	[CE]  cannot  find  symbol  Predicates	203	None	replace
107	[BUG]  [BUGGY]  Predicates.checkState(!detectImplicitPrototypeCycle());  handleTypeCycle(t);  [CE]  cannot  find  symbol  Predicates  [FE]                                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Predicates.checkState(!detectImplicitPrototypeCycle());  handleTypeCycle(t);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Predicates.checkState(!detectImplicitPrototypeCycle());  handleTypeCycle(t);	  Predicates.checkState(detectImplicitPrototypeCycle());    handleTypeCycle(t);    	non-compiled	[CE]  cannot  find  symbol  Predicates	203	None	replace
108	[BUG]  [BUGGY]  Predicates.checkState(detectImplicitTypeCycle());  handleTypeCycle(t);  [CE]  cannot  find  symbol  [FE]                                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Predicates.checkState(detectImplicitTypeCycle());  handleTypeCycle(t);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Predicates.checkState(detectImplicitTypeCycle());  handleTypeCycle(t);	  Predicates.checkState(detectImplicitPrototypeCycle());    handleTypeCycle(t);    	non-compiled	[CE]  cannot  find  symbol	203	None	replace
109	[BUG]  [BUGGY]  Predicates.checkState(!resolved);  handleTypeCycle(t);  [CE]  cannot  find  symbol  Predicates  [FE]                                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Predicates.checkState(!resolved);  handleTypeCycle(t);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Predicates.checkState(!resolved);  handleTypeCycle(t);	  Predicates.checkState(detectImplicitPrototypeCycle());    handleTypeCycle(t);    	non-compiled	[CE]  cannot  find  symbol  Predicates	203	None	replace
110	[BUG]  [BUGGY]  Predicates.checkState(detectTypeCycle());  handleTypeCycle(t);  [CE]  cannot  find  symbol  [FE]                                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Predicates.checkState(detectTypeCycle());  handleTypeCycle(t);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Predicates.checkState(detectTypeCycle());  handleTypeCycle(t);	  Predicates.checkState(detectImplicitPrototypeCycle());    handleTypeCycle(t);    	non-compiled	[CE]  cannot  find  symbol	203	None	replace
111	[BUG]  [BUGGY]  Predicates.checkState(detectImplicitPrototypeCycle()  }  );  handleTypeCycle(t);  [CE]  ')'  expected  [FE]                                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Predicates.checkState(detectImplicitPrototypeCycle()  }  );  handleTypeCycle(t);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Predicates.checkState(detectImplicitPrototypeCycle()  }  );  handleTypeCycle(t);	  Predicates.checkState(detectImplicitPrototypeCycle());    handleTypeCycle(t);    	non-compiled	[CE]  ')'  expected	203	None	replace
112	[BUG]  [BUGGY]  if(propertyContinuations!=  null)  {  finishPropertyValues();  }  [CE]  cannot  find  symbol  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(propertyContinuations!=  null)  {  finishPropertyValues();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations!=  null)  {  finishPropertyValues();  }	  if(propertyContinuations    ==    null)    {    finishPropertyContinuations();    }    if(propertyContinuations!=    null)    {    finishPropertyContinuations();    }    timeout    	non-compiled	[CE]  cannot  find  symbol	44	None	replace
113	[BUG]  [BUGGY]  if(propertyContinuations!=  null)  {  finishPropertyLineno();  }  [CE]  cannot  find  symbol  [FE]                            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(propertyContinuations!=  null)  {  finishPropertyLineno();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations!=  null)  {  finishPropertyLineno();  }	  if(propertyContinuations    ==    null)    {    finishPropertyContinuations();    }    if(propertyContinuations!=    null)    {    finishPropertyContinuations();    }    timeout    	non-compiled	[CE]  cannot  find  symbol	44	None	replace
114	[BUG]  [BUGGY]  Parchet.checkState(registry.isLastGeneration()?  getReferencedType()  :  null,  resolved);  [CE]  cannot  find  symbol  Parchet  [FE]                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Parchet.checkState(registry.isLastGeneration()?  getReferencedType()  :  null,  resolved);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Parchet.checkState(registry.isLastGeneration()?  getReferencedType()  :  null,  resolved);	  Parchet.checkState(registry.isLastGeneration()?    getReferencedType()    :    null);    	non-compiled	[CE]  cannot  find  symbol  Parchet	64	None	replace
115	[BUG]  [BUGGY]  Parchet.checkState(registry.isLastGeneration()?  getReferencedType()  :  null,  registry.isLastGeneration());  [CE]  cannot  find  symbol  Parchet  [FE]                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Parchet.checkState(registry.isLastGeneration()?  getReferencedType()  :  null,  registry.isLastGeneration());  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Parchet.checkState(registry.isLastGeneration()?  getReferencedType()  :  null,  registry.isLastGeneration());	  Parchet.checkState(registry.isLastGeneration()?    getReferencedType()    :    null);    	non-compiled	[CE]  cannot  find  symbol  Parchet	64	None	replace
116	[BUG]  [BUGGY]  Parchet.checkState(registry.isLastGeneration()?  getReferencedType()  :  null,  registry);  [CE]  cannot  find  symbol  Parchet  [FE]                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Parchet.checkState(registry.isLastGeneration()?  getReferencedType()  :  null,  registry);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Parchet.checkState(registry.isLastGeneration()?  getReferencedType()  :  null,  registry);	  Parchet.checkState(registry.isLastGeneration()?    getReferencedType()    :    null);    	non-compiled	[CE]  cannot  find  symbol  Parchet	64	None	replace
117	[BUG]  [BUGGY]  Parchet.checkState(registry.isLastGeneration()?  getReferencedType()  :  null,  this);  [CE]  cannot  find  symbol  Parchet  [FE]                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Parchet.checkState(registry.isLastGeneration()?  getReferencedType()  :  null,  this);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Parchet.checkState(registry.isLastGeneration()?  getReferencedType()  :  null,  this);	  Parchet.checkState(registry.isLastGeneration()?    getReferencedType()    :    null);    	non-compiled	[CE]  cannot  find  symbol  Parchet	64	None	replace
118	[BUG]  [BUGGY]  Parchet.checkState(registry.isLastGeneration()?  getReferencedType()  :  null,  resolveViaProperties);  [CE]  cannot  find  symbol  resolveViaProperties  [FE]                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Parchet.checkState(registry.isLastGeneration()?  getReferencedType()  :  null,  resolveViaProperties);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Parchet.checkState(registry.isLastGeneration()?  getReferencedType()  :  null,  resolveViaProperties);	  Parchet.checkState(registry.isLastGeneration()?    getReferencedType()    :    null);    	non-compiled	[CE]  cannot  find  symbol  resolveViaProperties	64	None	replace
119	[BUG]  [BUGGY]  ensurePropertyContinuations(t,  propertyNode);  [CE]  cannot  find  symbol  propertyNode  [FE]              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  ensurePropertyContinuations(t,  propertyNode);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	ensurePropertyContinuations(t,  propertyNode);	  ensurePropertyContinuations(t);    	non-compiled	[CE]  cannot  find  symbol  propertyNode	169	None	replace
120	[BUG]  [BUGGY]  ensurePropertyContinuations(t,  enclosing);  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  ensurePropertyContinuations(t,  enclosing);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	ensurePropertyContinuations(t,  enclosing);	  ensurePropertyContinuations(t);    	non-compiled	[CE]  cannot  find  symbol	169	None	replace
121	[BUG]  [BUGGY]  ensurePropertyContinuations(t,  forAnnotations);  [CE]  cannot  find  symbol  forAnnotations  [FE]                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  ensurePropertyContinuations(t,  forAnnotations);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	ensurePropertyContinuations(t,  forAnnotations);	  ensurePropertyContinuations(t);    	non-compiled	[CE]  cannot  find  symbol  forAnnotations	169	None	replace
122	[BUG]  [BUGGY]  ensurePropertyContinuations(t,  properties);  [CE]  cannot  find  symbol  properties  [FE]                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  ensurePropertyContinuations(t,  properties);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	ensurePropertyContinuations(t,  properties);	  ensurePropertyContinuations(t);    	non-compiled	[CE]  cannot  find  symbol  properties	169	None	replace
123	[BUG]  [BUGGY]  ensurePropertyContinuations(t,  registry);  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  ensurePropertyContinuations(t,  registry);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	ensurePropertyContinuations(t,  registry);	  ensurePropertyContinuations(t);    	non-compiled	[CE]  cannot  find  symbol	169	None	replace
124	[BUG]  [BUGGY]  ensurePropertyContinuations(t,  validator);  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  ensurePropertyContinuations(t,  validator);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	ensurePropertyContinuations(t,  validator);	  ensurePropertyContinuations(t);    	non-compiled	[CE]  cannot  find  symbol	169	None	replace
125	[BUG]  [BUGGY]  forAnnotations  =  Collections.EMPTY_LIST;  [CE]  cannot  find  symbol  forAnnotations  [FE]                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  forAnnotations  =  Collections.EMPTY_LIST;  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	forAnnotations  =  Collections.EMPTY_LIST;	  forAnnotations    =    Collections.emptyList();    	non-compiled	[CE]  cannot  find  symbol  forAnnotations	4	None	replace
126	[BUG]  [BUGGY]  enclosing  =  Collections.emptyList();  [CE]  cannot  find  symbol  Collections  [FE]                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  enclosing  =  Collections.emptyList();  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	enclosing  =  Collections.emptyList();	  forAnnotations    =    Collections.emptyList();    	non-compiled	[CE]  cannot  find  symbol  Collections	4	None	replace
127	[BUG]  [BUGGY]  inferred  =  Collections.emptyList();  [CE]  cannot  find  symbol  inferred  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  inferred  =  Collections.emptyList();  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	inferred  =  Collections.emptyList();	  forAnnotations    =    Collections.emptyList();    	non-compiled	[CE]  cannot  find  symbol  inferred	4	None	replace
128	[BUG]  [BUGGY]  List  propertyContinuations  =  Collections.emptyList();  [CE]  cannot  find  symbol  Collections  [FE]                            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  List  propertyContinuations  =  Collections.emptyList();  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	List  propertyContinuations  =  Collections.emptyList();	  forAnnotations    =    Collections.emptyList();    	non-compiled	[CE]  cannot  find  symbol  Collections	4	None	replace
129	[BUG]  [BUGGY]  this.forAnnotations  =  Collections.emptyList();  [CE]  cannot  find  symbol  forAnnotations  [FE]                              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  this.forAnnotations  =  Collections.emptyList();  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	this.forAnnotations  =  Collections.emptyList();	  forAnnotations    =    Collections.emptyList();    	non-compiled	[CE]  cannot  find  symbol  forAnnotations	4	None	replace
130	[BUG]  [BUGGY]  final  PropertyContinuations  <  PropertyContinuation>  finishPropertyContinuations(t);  [CE]  ';'  expected  [FE]                              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  final  PropertyContinuations  <  PropertyContinuation>  finishPropertyContinuations(t);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	final  PropertyContinuations  <  PropertyContinuation>  finishPropertyContinuations(t);	  final    PropertyContinuations    <    PropertyContinuation>    finishPropertyContinuations();    	non-compiled	[CE]  ';'  expected	115	None	replace
131	[BUG]  [BUGGY]  final  PropertyContinuations  <  PropertyContinuation>  finishPropertyContinuations(propertyContinuations);  [CE]  ';'  expected  [FE]                                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  final  PropertyContinuations  <  PropertyContinuation>  finishPropertyContinuations(propertyContinuations);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	final  PropertyContinuations  <  PropertyContinuation>  finishPropertyContinuations(propertyContinuations);	  final    PropertyContinuations    <    PropertyContinuation>    finishPropertyContinuations();    	non-compiled	[CE]  ';'  expected	115	None	replace
132	[BUG]  [BUGGY]  final  PropertyContinuations  <  PropertyContinuation>  finishPropertyContinuations(t,  propertyNode);  [CE]  ';'  expected  [FE]                                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  final  PropertyContinuations  <  PropertyContinuation>  finishPropertyContinuations(t,  propertyNode);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	final  PropertyContinuations  <  PropertyContinuation>  finishPropertyContinuations(t,  propertyNode);	  final    PropertyContinuations    <    PropertyContinuation>    finishPropertyContinuations();    	non-compiled	[CE]  ';'  expected	115	None	replace
133	[BUG]  [BUGGY]  final  PropertyContinuations  <  PropertyContinuation>  finishPropertyContinuations(registry);  [CE]  ';'  expected  [FE]                                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  final  PropertyContinuations  <  PropertyContinuation>  finishPropertyContinuations(registry);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	final  PropertyContinuations  <  PropertyContinuation>  finishPropertyContinuations(registry);	  final    PropertyContinuations    <    PropertyContinuation>    finishPropertyContinuations();    	non-compiled	[CE]  ';'  expected	115	None	replace
134	[BUG]  [BUGGY]  Parchet.checkNotNull(registry,  validator);  [CE]  cannot  find  symbol  Parchet  [FE]                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Parchet.checkNotNull(registry,  validator);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Parchet.checkNotNull(registry,  validator);	  Parchet.checkNotNull(validator);    	non-compiled	[CE]  cannot  find  symbol  Parchet	32	None	replace
135	[BUG]  [BUGGY]  Parchet.checkNotNull(enclosing);  [CE]  cannot  find  symbol  Parchet  [FE]                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Parchet.checkNotNull(enclosing);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Parchet.checkNotNull(enclosing);	  Parchet.checkNotNull(validator);    	non-compiled	[CE]  cannot  find  symbol  Parchet	32	None	replace
136	[BUG]  [BUGGY]  Parchet.checkNotNull(registry.validator);  [CE]  cannot  find  symbol  validator  [FE]                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Parchet.checkNotNull(registry.validator);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Parchet.checkNotNull(registry.validator);	  Parchet.checkNotNull(validator);    	non-compiled	[CE]  cannot  find  symbol  validator	32	None	replace
137	[BUG]  [BUGGY]  Parchet.checkNotNull(registry);  [CE]  cannot  find  symbol  Parchet  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Parchet.checkNotNull(registry);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Parchet.checkNotNull(registry);	  Parchet.checkNotNull(validator);    	non-compiled	[CE]  cannot  find  symbol  Parchet	32	None	replace
138	[BUG]  [BUGGY]  Parchet.checkNotNull(validator,  registry);  [CE]  cannot  find  symbol  Parchet  [FE]                            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Parchet.checkNotNull(validator,  registry);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Parchet.checkNotNull(validator,  registry);	  Parchet.checkNotNull(validator);    	non-compiled	[CE]  cannot  find  symbol  Parchet	32	None	replace
139	[BUG]  [BUGGY]  Parchet.checkNotNull(registry,  validater);  [CE]  cannot  find  symbol  validater  [FE]                              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Parchet.checkNotNull(registry,  validater);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Parchet.checkNotNull(registry,  validater);	  Parchet.checkNotNull(validator);    	non-compiled	[CE]  cannot  find  symbol  validater	32	None	replace
140	[BUG]  [BUGGY]  Parchet.checkState(resolved  ||  registry.isLastGeneration()?  getReferencedType()  :  null);  [CE]  cannot  find  symbol  Parchet  [FE]                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Parchet.checkState(resolved  ||  registry.isLastGeneration()?  getReferencedType()  :  null);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Parchet.checkState(resolved  ||  registry.isLastGeneration()?  getReferencedType()  :  null);	  Parchet.checkState(resolved    ||    registry.isLastGeneration()?    getReferencedType()    :    this);    	non-compiled	[CE]  cannot  find  symbol  Parchet	62	None	replace
141	[BUG]  [BUGGY]  Parchet.checkState(registry.isLastGeneration()  ||  registry.isLastGeneration()?  getReferencedType()  :  this);  [CE]  cannot  find  symbol  Parchet  [FE]                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Parchet.checkState(registry.isLastGeneration()  ||  registry.isLastGeneration()?  getReferencedType()  :  this);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Parchet.checkState(registry.isLastGeneration()  ||  registry.isLastGeneration()?  getReferencedType()  :  this);	  Parchet.checkState(resolved    ||    registry.isLastGeneration()?    getReferencedType()    :    this);    	non-compiled	[CE]  cannot  find  symbol  Parchet	62	None	replace
142	[BUG]  [BUGGY]  Parchet.checkState(resolved  &&  registry.isLastGeneration()?  getReferencedType()  :  this);  [CE]  cannot  find  symbol  Parchet  [FE]                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Parchet.checkState(resolved  &&  registry.isLastGeneration()?  getReferencedType()  :  this);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Parchet.checkState(resolved  &&  registry.isLastGeneration()?  getReferencedType()  :  this);	  Parchet.checkState(resolved    ||    registry.isLastGeneration()?    getReferencedType()    :    this);    	non-compiled	[CE]  cannot  find  symbol  Parchet	62	None	replace
143	[BUG]  [BUGGY]  Parchet.checkState(registered  ||  registry.isLastGeneration()?  getReferencedType()  :  this);  [CE]  cannot  find  symbol  registered  [FE]                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Parchet.checkState(registered  ||  registry.isLastGeneration()?  getReferencedType()  :  this);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Parchet.checkState(registered  ||  registry.isLastGeneration()?  getReferencedType()  :  this);	  Parchet.checkState(resolved    ||    registry.isLastGeneration()?    getReferencedType()    :    this);    	non-compiled	[CE]  cannot  find  symbol  registered	62	None	replace
144	[BUG]  [BUGGY]  registry.isFirstGeneration()?  getReferencedType()  :  this;  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  registry.isFirstGeneration()?  getReferencedType()  :  this;  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	registry.isFirstGeneration()?  getReferencedType()  :  this;	  if(propertyContinuations!=    null)    {    finishPropertyContinuations();    }    else    {    registry.isFirstGeneration()?    getReferencedType()    :    this;    }    	non-compiled	[CE]  not  a  statement	215	None	replace
145	[BUG]  [BUGGY]  Registry.isFirstGeneration()?  getReferencedType()  :  this;  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Registry.isFirstGeneration()?  getReferencedType()  :  this;  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Registry.isFirstGeneration()?  getReferencedType()  :  this;	  if(propertyContinuations!=    null)    {    finishPropertyContinuations();    }    else    {    registry.isFirstGeneration()?    getReferencedType()    :    this;    }    	non-compiled	[CE]  not  a  statement	215	None	replace
146	[BUG]  [BUGGY]  Status.checkState(registry.isFirstGeneration(),  resolved);  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Status.checkState(registry.isFirstGeneration(),  resolved);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Status.checkState(registry.isFirstGeneration(),  resolved);	  if(propertyContinuations!=    null)    {    finishPropertyContinuations();    }    else    {    registry.isFirstGeneration()?    getReferencedType()    :    this;    }    	non-compiled	[CE]  cannot  find  symbol	215	None	replace
147	[BUG]  [BUGGY]  PropertyContinuation  <  Object>  registry  =  getPropertyContinuations();  [CE]  type  PropertyContinuation  does  not  take  parameters  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  PropertyContinuation  <  Object>  registry  =  getPropertyContinuations();  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	PropertyContinuation  <  Object>  registry  =  getPropertyContinuations();	  if(propertyContinuations!=    null)    {    finishPropertyContinuations();    }    else    {    registry.isFirstGeneration()?    getReferencedType()    :    this;    }    	non-compiled	[CE]  type  PropertyContinuation  does  not  take  parameters	215	None	replace
148	[BUG]  [BUGGY]  Status.checkState(registry.isFirstGeneration(),  resolveViaProperties);  [CE]  cannot  find  symbol  [FE]                            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Status.checkState(registry.isFirstGeneration(),  resolveViaProperties);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Status.checkState(registry.isFirstGeneration(),  resolveViaProperties);	  if(propertyContinuations!=    null)    {    finishPropertyContinuations();    }    else    {    registry.isFirstGeneration()?    getReferencedType()    :    this;    }    	non-compiled	[CE]  cannot  find  symbol	215	None	replace
149	[BUG]  [BUGGY]  propertyContinuations(registry,  enclosing);  [CE]  cannot  find  symbol  [FE]                              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  propertyContinuations(registry,  enclosing);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	propertyContinuations(registry,  enclosing);	  if(propertyContinuations!=    null)    {    finishPropertyContinuations();    }    else    {    registry.isFirstGeneration()?    getReferencedType()    :    this;    }    	non-compiled	[CE]  cannot  find  symbol	215	None	replace
150	[BUG]  [BUGGY]  Status.checkState(registry.isFirstGeneration());  [CE]  cannot  find  symbol  [FE]                                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Status.checkState(registry.isFirstGeneration());  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Status.checkState(registry.isFirstGeneration());	  if(propertyContinuations!=    null)    {    finishPropertyContinuations();    }    else    {    registry.isFirstGeneration()?    getReferencedType()    :    this;    }    	non-compiled	[CE]  cannot  find  symbol	215	None	replace
151	[BUG]  [BUGGY]  propertyContinuations!=  null  ||  propertyContinuations.size()  >  0)  {  finishPropertyContinuations();  }  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  propertyContinuations!=  null  ||  propertyContinuations.size()  >  0)  {  finishPropertyContinuations();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	propertyContinuations!=  null  ||  propertyContinuations.size()  >  0)  {  finishPropertyContinuations();  }	  propertyContinuations!=    null    &&    propertyContinuations.size()    >    0)    {    finishPropertyContinuations();    }    	non-compiled	[CE]  not  a  statement	192	None	replace
152	[BUG]  [BUGGY]  propertyContinuations!=  null  &&  propertyContinuations.size()  >  0)  {  startPropertyContinuations();  }  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  propertyContinuations!=  null  &&  propertyContinuations.size()  >  0)  {  startPropertyContinuations();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	propertyContinuations!=  null  &&  propertyContinuations.size()  >  0)  {  startPropertyContinuations();  }	  propertyContinuations!=    null    &&    propertyContinuations.size()    >    0)    {    finishPropertyContinuations();    }    	non-compiled	[CE]  not  a  statement	192	None	replace
153	[BUG]  [BUGGY]  propertyContinuations!=  null  &&  properties.size()  >  0)  {  finishPropertyContinuations();  }  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  propertyContinuations!=  null  &&  properties.size()  >  0)  {  finishPropertyContinuations();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	propertyContinuations!=  null  &&  properties.size()  >  0)  {  finishPropertyContinuations();  }	  propertyContinuations!=    null    &&    propertyContinuations.size()    >    0)    {    finishPropertyContinuations();    }    	non-compiled	[CE]  not  a  statement	192	None	replace
154	[BUG]  [BUGGY]  propertyContinuations!=  null  &&  propertyContinuations.size()  >  1)  {  finishPropertyContinuations();  }  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  propertyContinuations!=  null  &&  propertyContinuations.size()  >  1)  {  finishPropertyContinuations();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	propertyContinuations!=  null  &&  propertyContinuations.size()  >  1)  {  finishPropertyContinuations();  }	  propertyContinuations!=    null    &&    propertyContinuations.size()    >    0)    {    finishPropertyContinuations();    }    	non-compiled	[CE]  not  a  statement	192	None	replace
155	[BUG]  [BUGGY]  propertyContinuations!=  null  &&  propertyContinuations.size()  >  0)  {  handlePropertyContinuations();  }  [CE]  not  a  statement  [FE]                            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  propertyContinuations!=  null  &&  propertyContinuations.size()  >  0)  {  handlePropertyContinuations();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	propertyContinuations!=  null  &&  propertyContinuations.size()  >  0)  {  handlePropertyContinuations();  }	  propertyContinuations!=    null    &&    propertyContinuations.size()    >    0)    {    finishPropertyContinuations();    }    	non-compiled	[CE]  not  a  statement	192	None	replace
156	[BUG]  [BUGGY]  propertyContinuations!=  null  &&  propertyContinuations.size()  >  0)  {  endPropertyContinuations();  }  [CE]  not  a  statement  [FE]                              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  propertyContinuations!=  null  &&  propertyContinuations.size()  >  0)  {  endPropertyContinuations();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	propertyContinuations!=  null  &&  propertyContinuations.size()  >  0)  {  endPropertyContinuations();  }	  propertyContinuations!=    null    &&    propertyContinuations.size()    >    0)    {    finishPropertyContinuations();    }    	non-compiled	[CE]  not  a  statement	192	None	replace
157	[BUG]  [BUGGY]  luate(registry,  enclosing)  {  finishPropertyContinuations();  }  else  {  register.isLastGeneration()?  getReferencedType()  :  null;  }  [CE]  ';'  expected  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  luate(registry,  enclosing)  {  finishPropertyContinuations();  }  else  {  register.isLastGeneration()?  getReferencedType()  :  null;  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	luate(registry,  enclosing)  {  finishPropertyContinuations();  }  else  {  register.isLastGeneration()?  getReferencedType()  :  null;  }	  luate(registry,    resolved)    {    finishPropertyContinuations();    }    else    {    register.isLastGeneration()?    getReferencedType()    :    null;    }    	non-compiled	[CE]  ';'  expected	182	None	replace
158	[BUG]  [BUGGY]  luate(registry,  enclosing)  {  finishPropertyContinuations();  }  else  {  registry.isLastGeneration()?  getReferencedType()  :  null;  }  [CE]  ';'  expected  [FE]                            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  luate(registry,  enclosing)  {  finishPropertyContinuations();  }  else  {  registry.isLastGeneration()?  getReferencedType()  :  null;  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	luate(registry,  enclosing)  {  finishPropertyContinuations();  }  else  {  registry.isLastGeneration()?  getReferencedType()  :  null;  }	  luate(registry,    resolved)    {    finishPropertyContinuations();    }    else    {    register.isLastGeneration()?    getReferencedType()    :    null;    }    	non-compiled	[CE]  ';'  expected	182	None	replace
159	[BUG]  [BUGGY]  luate(registry,  enclosing)  {  finishPropertyContinuations();  }  [CE]  ';'  expected  [FE]                              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  luate(registry,  enclosing)  {  finishPropertyContinuations();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	luate(registry,  enclosing)  {  finishPropertyContinuations();  }	  luate(registry,    resolved)    {    finishPropertyContinuations();    }    else    {    register.isLastGeneration()?    getReferencedType()    :    null;    }    	non-compiled	[CE]  ';'  expected	182	None	replace
160	[BUG]  [BUGGY]  luate(registry,  enclosing)  {  startPropertyContinuations();  }  else  {  register.isLastGeneration()?  getReferencedType()  :  null;  }  [CE]  ';'  expected  [FE]                                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  luate(registry,  enclosing)  {  startPropertyContinuations();  }  else  {  register.isLastGeneration()?  getReferencedType()  :  null;  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	luate(registry,  enclosing)  {  startPropertyContinuations();  }  else  {  register.isLastGeneration()?  getReferencedType()  :  null;  }	  luate(registry,    resolved)    {    finishPropertyContinuations();    }    else    {    register.isLastGeneration()?    getReferencedType()    :    null;    }    	non-compiled	[CE]  ';'  expected	182	None	replace
161	[BUG]  [BUGGY]  luate(registry,  propertyNode)  {  finishPropertyContinuations();  }  else  {  register.isLastGeneration()?  getReferencedType()  :  null;  }  [CE]  ';'  expected  [FE]                                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  luate(registry,  propertyNode)  {  finishPropertyContinuations();  }  else  {  register.isLastGeneration()?  getReferencedType()  :  null;  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	luate(registry,  propertyNode)  {  finishPropertyContinuations();  }  else  {  register.isLastGeneration()?  getReferencedType()  :  null;  }	  luate(registry,    resolved)    {    finishPropertyContinuations();    }    else    {    register.isLastGeneration()?    getReferencedType()    :    null;    }    	non-compiled	[CE]  ';'  expected	182	None	replace
162	[BUG]  [BUGGY]  luate(registry,  validated)  {  finishPropertyContinuations();  }  else  {  register.isLastGeneration()?  getReferencedType()  :  null;  }  [CE]  ';'  expected  [FE]                                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  luate(registry,  validated)  {  finishPropertyContinuations();  }  else  {  register.isLastGeneration()?  getReferencedType()  :  null;  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	luate(registry,  validated)  {  finishPropertyContinuations();  }  else  {  register.isLastGeneration()?  getReferencedType()  :  null;  }	  luate(registry,    resolved)    {    finishPropertyContinuations();    }    else    {    register.isLastGeneration()?    getReferencedType()    :    null;    }    	non-compiled	[CE]  ';'  expected	182	None	replace
163	[BUG]  [BUGGY]  AssertionFailedError  t  =  resolveViaRegistry(t,  enclosing);  [CE]  cannot  find  symbol  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  AssertionFailedError  t  =  resolveViaRegistry(t,  enclosing);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	AssertionFailedError  t  =  resolveViaRegistry(t,  enclosing);	  if(resolved)    {    finishPropertyContinuations();    }    while(resolved)    {    finishPropertyContinuations();    }    timeout    	non-compiled	[CE]  cannot  find  symbol	40	None	replace
164	[BUG]  [BUGGY]  AssertionFailedError  t  =  getReferencedType();  [CE]  cannot  find  symbol  [FE]                            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  AssertionFailedError  t  =  getReferencedType();  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	AssertionFailedError  t  =  getReferencedType();	  if(resolved)    {    finishPropertyContinuations();    }    while(resolved)    {    finishPropertyContinuations();    }    timeout    	non-compiled	[CE]  cannot  find  symbol	40	None	replace
165	[BUG]  [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(this,  getReferencedType());  [CE]  cannot  find  symbol  [FE]                              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(this,  getReferencedType());  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	AssertionFailedError  t  =  new  AssertionFailedError(this,  getReferencedType());	  if(resolved)    {    finishPropertyContinuations();    }    while(resolved)    {    finishPropertyContinuations();    }    timeout    	non-compiled	[CE]  cannot  find  symbol	40	None	replace
166	[BUG]  [BUGGY]  AssertionFailedError  t  =  resolveViaRegistry(t,  propertyNode);  [CE]  cannot  find  symbol  [FE]                                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  AssertionFailedError  t  =  resolveViaRegistry(t,  propertyNode);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	AssertionFailedError  t  =  resolveViaRegistry(t,  propertyNode);	  if(resolved)    {    finishPropertyContinuations();    }    while(resolved)    {    finishPropertyContinuations();    }    timeout    	non-compiled	[CE]  cannot  find  symbol	40	None	replace
167	[BUG]  [BUGGY]  propertyInferred();  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  propertyInferred();  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	propertyInferred();	  if(propertyContinuations!=    null)    {    finishPropertyInferred();    }    else    {    propertyContinuations.add(propertyName);    }    	non-compiled	[CE]  cannot  find  symbol	150	None	replace
168	[BUG]  [BUGGY]  PropertyInferred();  }  else  {  propertyContinuations.add(propertyName);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  PropertyInferred();  }  else  {  propertyContinuations.add(propertyName);  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	PropertyInferred();  }  else  {  propertyContinuations.add(propertyName);  }	  if(propertyContinuations!=    null)    {    finishPropertyInferred();    }    else    {    propertyContinuations.add(propertyName);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	150	None	replace
169	[BUG]  [BUGGY]  propertyInferred();  }  else  {  propertyContinuations.add(propertyName);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  propertyInferred();  }  else  {  propertyContinuations.add(propertyName);  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	propertyInferred();  }  else  {  propertyContinuations.add(propertyName);  }	  if(propertyContinuations!=    null)    {    finishPropertyInferred();    }    else    {    propertyContinuations.add(propertyName);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	150	None	replace
170	[BUG]  [BUGGY]  PropertyInferred();  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  PropertyInferred();  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	PropertyInferred();	  if(propertyContinuations!=    null)    {    finishPropertyInferred();    }    else    {    propertyContinuations.add(propertyName);    }    	non-compiled	[CE]  cannot  find  symbol	150	None	replace
171	[BUG]  [BUGGY]  PropertyPropertyInferred();  }  else  {  propertyContinuations.add(propertyName);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  PropertyPropertyInferred();  }  else  {  propertyContinuations.add(propertyName);  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	PropertyPropertyInferred();  }  else  {  propertyContinuations.add(propertyName);  }	  if(propertyContinuations!=    null)    {    finishPropertyInferred();    }    else    {    propertyContinuations.add(propertyName);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	150	None	replace
172	[BUG]  [BUGGY]  Predicates.checkArgument(resolved,  detectImplicitPrototypeCycle());  [CE]  cannot  find  symbol  Predicates  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Predicates.checkArgument(resolved,  detectImplicitPrototypeCycle());  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Predicates.checkArgument(resolved,  detectImplicitPrototypeCycle());	  Predicates.checkArgument(detectImplicitPrototypeCycle());    	non-compiled	[CE]  cannot  find  symbol  Predicates	201	None	replace
173	[BUG]  [BUGGY]  Predicates.checkArgument(resolved  ||  detectImplicitPrototypeCycle());  [CE]  cannot  find  symbol  Predicates  [FE]                            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Predicates.checkArgument(resolved  ||  detectImplicitPrototypeCycle());  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Predicates.checkArgument(resolved  ||  detectImplicitPrototypeCycle());	  Predicates.checkArgument(detectImplicitPrototypeCycle());    	non-compiled	[CE]  cannot  find  symbol  Predicates	201	None	replace
174	[BUG]  [BUGGY]  Predicates.checkArgument(!resolved  &&  detectImplicitPrototypeCycle());  [CE]  cannot  find  symbol  Predicates  [FE]                              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Predicates.checkArgument(!resolved  &&  detectImplicitPrototypeCycle());  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Predicates.checkArgument(!resolved  &&  detectImplicitPrototypeCycle());	  Predicates.checkArgument(detectImplicitPrototypeCycle());    	non-compiled	[CE]  cannot  find  symbol  Predicates	201	None	replace
175	[BUG]  [BUGGY]  Predicates.checkArgument(!resolved?  detectImplicitPrototypeCycle()  :  null);  [CE]  cannot  find  symbol  Predicates  [FE]                                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Predicates.checkArgument(!resolved?  detectImplicitPrototypeCycle()  :  null);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Predicates.checkArgument(!resolved?  detectImplicitPrototypeCycle()  :  null);	  Predicates.checkArgument(detectImplicitPrototypeCycle());    	non-compiled	[CE]  cannot  find  symbol  Predicates	201	None	replace
176	[BUG]  [BUGGY]  Predicates.checkArgument(detectImplicitTypeCycle());  [CE]  cannot  find  symbol  [FE]                                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Predicates.checkArgument(detectImplicitTypeCycle());  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Predicates.checkArgument(detectImplicitTypeCycle());	  Predicates.checkArgument(detectImplicitPrototypeCycle());    	non-compiled	[CE]  cannot  find  symbol	201	None	replace
177	[BUG]  [BUGGY]  AssertionFailedError  t  =  propertyContinuations.iterator();  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  AssertionFailedError  t  =  propertyContinuations.iterator();  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	AssertionFailedError  t  =  propertyContinuations.iterator();	  if(propertyContinuations!=    null)    {    finishPropertyContinuations();    }    If(propertyContinuations!=    null)    {    finishPropertyContinuations();    }    	non-compiled	[CE]  cannot  find  symbol	82	None	replace
178	[BUG]  [BUGGY]  PropertyNode  registry  =  propertyNode.getPropertyNode(propertyName);  [CE]  cannot  find  symbol  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  PropertyNode  registry  =  propertyNode.getPropertyNode(propertyName);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	PropertyNode  registry  =  propertyNode.getPropertyNode(propertyName);	  if(propertyContinuations!=    null)    {    finishPropertyContinuations();    }    If(propertyContinuations!=    null)    {    finishPropertyContinuations();    }    	non-compiled	[CE]  cannot  find  symbol	82	None	replace
179	[BUG]  [BUGGY]  PropertyNode  registry  =  propertyNode.getPropertyNode();  [CE]  cannot  find  symbol  [FE]                            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  PropertyNode  registry  =  propertyNode.getPropertyNode();  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	PropertyNode  registry  =  propertyNode.getPropertyNode();	  if(propertyContinuations!=    null)    {    finishPropertyContinuations();    }    If(propertyContinuations!=    null)    {    finishPropertyContinuations();    }    	non-compiled	[CE]  cannot  find  symbol	82	None	replace
180	[BUG]  [BUGGY]  AssertionFailedError  t  =  propertyContinuations.get(resolved);  [CE]  cannot  find  symbol  [FE]                              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  AssertionFailedError  t  =  propertyContinuations.get(resolved);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	AssertionFailedError  t  =  propertyContinuations.get(resolved);	  if(propertyContinuations!=    null)    {    finishPropertyContinuations();    }    If(propertyContinuations!=    null)    {    finishPropertyContinuations();    }    	non-compiled	[CE]  cannot  find  symbol	82	None	replace
181	[BUG]  [BUGGY]  Parchet.checkState(resolved)  {  finishPropertyInferred();  }  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Parchet.checkState(resolved)  {  finishPropertyInferred();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Parchet.checkState(resolved)  {  finishPropertyInferred();  }	  if(resolved)    {    finishPropertyInferred();    }    	non-compiled	[CE]  ';'  expected	129	None	replace
182	[BUG]  [BUGGY]  finishPropertyInferred();  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  finishPropertyInferred();  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	finishPropertyInferred();	  if(resolved)    {    finishPropertyInferred();    }    	non-compiled	[CE]  cannot  find  symbol	129	None	replace
183	[BUG]  [BUGGY]  Parchet.getInstance().finishPropertyInferred();  [CE]  cannot  find  symbol  Parchet  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Parchet.getInstance().finishPropertyInferred();  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Parchet.getInstance().finishPropertyInferred();	  if(resolved)    {    finishPropertyInferred();    }    	non-compiled	[CE]  cannot  find  symbol  Parchet	129	None	replace
184	[BUG]  [BUGGY]  validatePropertyInferred();  [CE]  cannot  find  symbol  [FE]                            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  validatePropertyInferred();  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	validatePropertyInferred();	  if(resolved)    {    finishPropertyInferred();    }    	non-compiled	[CE]  cannot  find  symbol	129	None	replace
185	[BUG]  [BUGGY]  Predicate  validator  =  registry.getValue();  [CE]  cannot  find  symbol  [FE]                                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Predicate  validator  =  registry.getValue();  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Predicate  validator  =  registry.getValue();	  Predicate    validator    =    t.getValue();    	non-compiled	[CE]  cannot  find  symbol	205	None	replace
186	[BUG]  [BUGGY]  Predicate  validator  =  t,  registry.getValue();  [CE]  ';'  expected  [FE]                                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Predicate  validator  =  t,  registry.getValue();  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Predicate  validator  =  t,  registry.getValue();	  Predicate    validator    =    t.getValue();    	non-compiled	[CE]  ';'  expected	205	None	replace
187	[BUG]  [BUGGY]  Predicate  validator  =  registry.getValue(t.getValue());  [CE]  cannot  find  symbol  [FE]                                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Predicate  validator  =  registry.getValue(t.getValue());  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Predicate  validator  =  registry.getValue(t.getValue());	  Predicate    validator    =    t.getValue();    	non-compiled	[CE]  cannot  find  symbol	205	None	replace
188	[BUG]  [BUGGY]  Predicate  validator  =  this.validator.getValue();  [CE]  cannot  find  symbol  [FE]                                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Predicate  validator  =  this.validator.getValue();  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Predicate  validator  =  this.validator.getValue();	  Predicate    validator    =    t.getValue();    	non-compiled	[CE]  cannot  find  symbol	205	None	replace
189	[BUG]  [BUGGY]  Predicate  validator  =  propertyNode.getValue();  [CE]  cannot  find  symbol  propertyNode  [FE]                                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Predicate  validator  =  propertyNode.getValue();  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Predicate  validator  =  propertyNode.getValue();	  Predicate    validator    =    t.getValue();    	non-compiled	[CE]  cannot  find  symbol  propertyNode	205	None	replace
190	[BUG]  [BUGGY]  Predicate  validator  =  status.getValue();  [CE]  cannot  find  symbol  status  [FE]                                            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Predicate  validator  =  status.getValue();  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Predicate  validator  =  status.getValue();	  Predicate    validator    =    t.getValue();    	non-compiled	[CE]  cannot  find  symbol  status	205	None	replace
191	[BUG]  [BUGGY]  timeout  [FE]                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(validator!=  null  &&  registry.isLastGeneration())  {  finishPropertyContinuations();  }  if(validator!=  null  &&  registry.isLastGeneration())  {  finishPropertyContinuations();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	add	if(validator!=    null    &&    registry.isLastGeneration())    {    finishPropertyContinuations();    }    if(validator!=  null  &&  registry.isLastGeneration())  {  finishPropertyContinuations();  }	  timeout    	compilable	timeout	235	1	add
192	[BUG]  [BUGGY]  if(validator!=  null  &&  registry.isLastGeneration())  {  finishPropertyContinuations();  }  if(validator!=  null  &&  registry.isLastGeneration())  {  finishPropertyContinuations();  }  timeout  [FE]                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(validator!=  null  &&  registry.isLastGeneration())  {  finishPropertyContinuations();  }  if(validator!=  null  &&  registry.isLastGeneration())  {  finishPropertyContinuations();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(validator!=    null    &&    registry.isLastGeneration())    {    finishPropertyContinuations();    }    if(validator!=  null  &&  registry.isLastGeneration())  {  finishPropertyContinuations();  }	  timeout    	compilable	timeout	235	1	add
193	[BUG]  [BUGGY]  timeout  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(validator!=  null  &&  registry.isLastGeneration())  {  finishPropertyContinuations();  }  if(validator  ==  null  &&  registry.isLastGeneration())  {  finishPropertyContinuations();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	add	if(validator!=    null    &&    registry.isLastGeneration())    {    finishPropertyContinuations();    }    if(validator  ==  null  &&  registry.isLastGeneration())  {  finishPropertyContinuations();  }	  timeout    	compilable	timeout	235	1	add
194	[BUG]  [BUGGY]  if(validator!=  null  &&  registry.isLastGeneration())  {  finishPropertyContinuations();  }  if(validator  ==  null  &&  registry.isLastGeneration())  {  finishPropertyContinuations();  }  timeout  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(validator!=  null  &&  registry.isLastGeneration())  {  finishPropertyContinuations();  }  if(validator  ==  null  &&  registry.isLastGeneration())  {  finishPropertyContinuations();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(validator!=    null    &&    registry.isLastGeneration())    {    finishPropertyContinuations();    }    if(validator  ==  null  &&  registry.isLastGeneration())  {  finishPropertyContinuations();  }	  timeout    	compilable	timeout	235	1	add
195	[BUG]  [BUGGY]  if(validator!=  null  &&  registry.isLastGeneration())  {  finishPropertyContinuations();  }  if(validator!=  null  &&  registry.isLastGeneration())  {  startPropertyContinuations();  }  [CE]  cannot  find  symbol  [FE]                            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(validator!=  null  &&  registry.isLastGeneration())  {  finishPropertyContinuations();  }  if(validator!=  null  &&  registry.isLastGeneration())  {  startPropertyContinuations();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(validator!=    null    &&    registry.isLastGeneration())    {    finishPropertyContinuations();    }    if(validator!=  null  &&  registry.isLastGeneration())  {  startPropertyContinuations();  }	  timeout    	non-compiled	[CE]  cannot  find  symbol	235	None	add
196	[BUG]  [BUGGY]  if(validator!=  null  &&  registry.isLastGeneration())  {  finishPropertyContinuations();  }  If(validator!=  null  &&  registry.isLastGeneration())  {  finishPropertyContinuations();  }  [CE]  ';'  expected  [FE]                              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(validator!=  null  &&  registry.isLastGeneration())  {  finishPropertyContinuations();  }  If(validator!=  null  &&  registry.isLastGeneration())  {  finishPropertyContinuations();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(validator!=    null    &&    registry.isLastGeneration())    {    finishPropertyContinuations();    }    If(validator!=  null  &&  registry.isLastGeneration())  {  finishPropertyContinuations();  }	  timeout    	non-compiled	[CE]  ';'  expected	235	None	add
197	[BUG]  [BUGGY]  if(validator!=  null  &&  registry.isLastGeneration())  {  finishPropertyContinuations();  }  if(validator  >=  null  &&  registry.isLastGeneration())  {  finishPropertyContinuations();  }  [CE]  bad  operand  types  for  binary  operator  '>='  [FE]                                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(validator!=  null  &&  registry.isLastGeneration())  {  finishPropertyContinuations();  }  if(validator  >=  null  &&  registry.isLastGeneration())  {  finishPropertyContinuations();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(validator!=    null    &&    registry.isLastGeneration())    {    finishPropertyContinuations();    }    if(validator  >=  null  &&  registry.isLastGeneration())  {  finishPropertyContinuations();  }	  timeout    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>='	235	None	add
198	[BUG]  [BUGGY]  if(validator!=  null  &&  registry.isLastGeneration())  {  finishPropertyContinuations();  }  if(validator  >>  null  &&  registry.isLastGeneration())  {  finishPropertyContinuations();  }  [CE]  bad  operand  types  for  binary  operator  '>>'  [FE]                                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(validator!=  null  &&  registry.isLastGeneration())  {  finishPropertyContinuations();  }  if(validator  >>  null  &&  registry.isLastGeneration())  {  finishPropertyContinuations();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(validator!=    null    &&    registry.isLastGeneration())    {    finishPropertyContinuations();    }    if(validator  >>  null  &&  registry.isLastGeneration())  {  finishPropertyContinuations();  }	  timeout    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>>'	235	None	add
199	[BUG]  [BUGGY]  if(validator!=  null  &&  registry.isLastGeneration())  {  finishPropertyContinuations();  }  if(validator!=  null  &&  registry.isFirstGeneration())  {  finishPropertyContinuations();  }  [CE]  cannot  find  symbol  [FE]                                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(validator!=  null  &&  registry.isLastGeneration())  {  finishPropertyContinuations();  }  if(validator!=  null  &&  registry.isFirstGeneration())  {  finishPropertyContinuations();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(validator!=    null    &&    registry.isLastGeneration())    {    finishPropertyContinuations();    }    if(validator!=  null  &&  registry.isFirstGeneration())  {  finishPropertyContinuations();  }	  timeout    	non-compiled	[CE]  cannot  find  symbol	235	None	add
200	[BUG]  [BUGGY]  Predicate  validator  =  getValueForType(t,  type);  [CE]  cannot  find  symbol  type  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Predicate  validator  =  getValueForType(t,  type);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Predicate  validator  =  getValueForType(t,  type);	          Predicate    validator    =    getValueForType(t);    	non-compiled	[CE]  cannot  find  symbol  type	237	None	replace
201	[BUG]  [BUGGY]  Predicate  validator  =  getValueForType(t,  registry);  [CE]  cannot  find  symbol  [FE]                            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Predicate  validator  =  getValueForType(t,  registry);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Predicate  validator  =  getValueForType(t,  registry);	          Predicate    validator    =    getValueForType(t);    	non-compiled	[CE]  cannot  find  symbol	237	None	replace
202	[BUG]  [BUGGY]  Predicate  validator  =  getValueForType(t,  propertyNode);  [CE]  cannot  find  symbol  propertyNode  [FE]                              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Predicate  validator  =  getValueForType(t,  propertyNode);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Predicate  validator  =  getValueForType(t,  propertyNode);	          Predicate    validator    =    getValueForType(t);    	non-compiled	[CE]  cannot  find  symbol  propertyNode	237	None	replace
203	[BUG]  [BUGGY]  Predicate  validator  =  getValueForType(t,  resolved);  [CE]  cannot  find  symbol  [FE]                                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Predicate  validator  =  getValueForType(t,  resolved);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Predicate  validator  =  getValueForType(t,  resolved);	          Predicate    validator    =    getValueForType(t);    	non-compiled	[CE]  cannot  find  symbol	237	None	replace
204	[BUG]  [BUGGY]  Predicate  validator  =  getValueForType(t,  false);  [CE]  cannot  find  symbol  [FE]                                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Predicate  validator  =  getValueForType(t,  false);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Predicate  validator  =  getValueForType(t,  false);	          Predicate    validator    =    getValueForType(t);    	non-compiled	[CE]  cannot  find  symbol	237	None	replace
205	[BUG]  [BUGGY]  Predicate  <?>  validator  =  getReferencedType();  [CE]  incompatible  types  [FE]                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Predicate  <?>  validator  =  getReferencedType();  [BUGGY]    null)  {  finishPropertyContinuations();  }  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Predicate  <?>  validator  =  getReferencedType();	  if(validator!=    null)    {    finishPropertyContinuations();    }    if(validator    	non-compiled	[CE]  incompatible  types	58	None	replace
206	[BUG]  [BUGGY]  PropertyRegistry  registry  =  getPropertyRegistry();  [CE]  cannot  find  symbol  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  PropertyRegistry  registry  =  getPropertyRegistry();  [BUGGY]    null)  {  finishPropertyContinuations();  }  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	PropertyRegistry  registry  =  getPropertyRegistry();	  if(validator!=    null)    {    finishPropertyContinuations();    }    if(validator    	non-compiled	[CE]  cannot  find  symbol	58	None	replace
207	[BUG]  [BUGGY]  Predicate  <?>  validator  =  getValue(resolved);  [CE]  cannot  find  symbol  [FE]                            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Predicate  <?>  validator  =  getValue(resolved);  [BUGGY]    null)  {  finishPropertyContinuations();  }  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Predicate  <?>  validator  =  getValue(resolved);	  if(validator!=    null)    {    finishPropertyContinuations();    }    if(validator    	non-compiled	[CE]  cannot  find  symbol	58	None	replace
208	[BUG]  [BUGGY]  Predicate  <?>  validator  =  getValue();  [CE]  cannot  find  symbol  [FE]                              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Predicate  <?>  validator  =  getValue();  [BUGGY]    null)  {  finishPropertyContinuations();  }  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Predicate  <?>  validator  =  getValue();	  if(validator!=    null)    {    finishPropertyContinuations();    }    if(validator    	non-compiled	[CE]  cannot  find  symbol	58	None	replace
209	[BUG]  [BUGGY]  Registry.isLastGeneration()  :  this;  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Registry.isLastGeneration()  :  this;  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Registry.isLastGeneration()  :  this;	  if(validator    ==    null)    {    finishPropertyGenerations();    }    else    {    registry.isLastGeneration()    :    this;    }    	non-compiled	[CE]  ';'  expected	133	None	replace
210	[BUG]  [BUGGY]  validator  =  registry.isLastGeneration()?  getReferencedType()  :  this;  [CE]  incompatible  types  [FE]                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  validator  =  registry.isLastGeneration()?  getReferencedType()  :  this;  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	validator  =  registry.isLastGeneration()?  getReferencedType()  :  this;	  if(validator    ==    null)    {    finishPropertyGenerations();    }    else    {    registry.isLastGeneration()    :    this;    }    	non-compiled	[CE]  incompatible  types	133	None	replace
211	[BUG]  [BUGGY]  validator  =  registry.isLastGeneration()?  getReferencedType()  :  null;  [CE]  incompatible  types  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  validator  =  registry.isLastGeneration()?  getReferencedType()  :  null;  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	validator  =  registry.isLastGeneration()?  getReferencedType()  :  null;	  if(validator    ==    null)    {    finishPropertyGenerations();    }    else    {    registry.isLastGeneration()    :    this;    }    	non-compiled	[CE]  incompatible  types	133	None	replace
212	[BUG]  [BUGGY]  validatePropertyGenerations();  [CE]  cannot  find  symbol  [FE]                            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  validatePropertyGenerations();  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	validatePropertyGenerations();	  if(validator    ==    null)    {    finishPropertyGenerations();    }    else    {    registry.isLastGeneration()    :    this;    }    	non-compiled	[CE]  cannot  find  symbol	133	None	replace
213	[BUG]  [BUGGY]  validator  =  registry.isLastGeneration();  [CE]  incompatible  types  [FE]                              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  validator  =  registry.isLastGeneration();  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	validator  =  registry.isLastGeneration();	  if(validator    ==    null)    {    finishPropertyGenerations();    }    else    {    registry.isLastGeneration()    :    this;    }    	non-compiled	[CE]  incompatible  types	133	None	replace
214	[BUG]  [BUGGY]  timeout  [FE]                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Preconditions.checkState(resolved);  Preconditions.checkState(resolved);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	add	Preconditions.checkState(resolved);    Preconditions.checkState(resolved);	  timeout    	compilable	timeout	220	1	add
215	[BUG]  [BUGGY]  Preconditions.checkState(resolved);  Preconditions.checkState(resolved);  timeout  [FE]                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Preconditions.checkState(resolved);  Preconditions.checkState(resolved);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Preconditions.checkState(resolved);    Preconditions.checkState(resolved);	  timeout    	compilable	timeout	220	1	add
216	[BUG]  [BUGGY]  Preconditions.checkState(resolved);  Preconditions.checkState(resolved);  enclosing  =  registry.isLastGeneration()?  getReferencedType()  :  this;  [CE]  incompatible  types  [FE]                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Preconditions.checkState(resolved);  Preconditions.checkState(resolved);  enclosing  =  registry.isLastGeneration()?  getReferencedType()  :  this;  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Preconditions.checkState(resolved);    Preconditions.checkState(resolved);  enclosing  =  registry.isLastGeneration()?  getReferencedType()  :  this;	  timeout    	non-compiled	[CE]  incompatible  types	220	None	add
217	[BUG]  [BUGGY]  Preconditions.checkState(resolved);  Preconditions.checkState(resolved);  preconditions.checkState(resolved);  [CE]  cannot  find  symbol  preconditions  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Preconditions.checkState(resolved);  Preconditions.checkState(resolved);  preconditions.checkState(resolved);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Preconditions.checkState(resolved);    Preconditions.checkState(resolved);  preconditions.checkState(resolved);	  timeout    	non-compiled	[CE]  cannot  find  symbol  preconditions	220	None	add
218	[BUG]  [BUGGY]  Preconditions.checkState(resolved);  Preconditions.checkState(resolved);  enclosing  =  registry.isLastGeneration()?  getReferencedType()  :  null;  [CE]  incompatible  types  [FE]                            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Preconditions.checkState(resolved);  Preconditions.checkState(resolved);  enclosing  =  registry.isLastGeneration()?  getReferencedType()  :  null;  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Preconditions.checkState(resolved);    Preconditions.checkState(resolved);  enclosing  =  registry.isLastGeneration()?  getReferencedType()  :  null;	  timeout    	non-compiled	[CE]  incompatible  types	220	None	add
219	[BUG]  [BUGGY]  Preconditions.checkState(resolved);  Preconditions.checkState(resolved);  enclosing  =  registry.isLastGeneration()?  getReferencedType()  :  Collections.emptyList();  [CE]  cannot  find  symbol  Collections  [FE]                              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Preconditions.checkState(resolved);  Preconditions.checkState(resolved);  enclosing  =  registry.isLastGeneration()?  getReferencedType()  :  Collections.emptyList();  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Preconditions.checkState(resolved);    Preconditions.checkState(resolved);  enclosing  =  registry.isLastGeneration()?  getReferencedType()  :  Collections.emptyList();	  timeout    	non-compiled	[CE]  cannot  find  symbol  Collections	220	None	add
220	[BUG]  [BUGGY]  Preconditions.checkState(resolved);  Preconditions.checkState(resolved);  enclosing  =  registry.isLastGeneration()?  getReferencedType()  :  Collections.EMPTY_LIST;  [CE]  cannot  find  symbol  Collections  [FE]                                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Preconditions.checkState(resolved);  Preconditions.checkState(resolved);  enclosing  =  registry.isLastGeneration()?  getReferencedType()  :  Collections.EMPTY_LIST;  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Preconditions.checkState(resolved);    Preconditions.checkState(resolved);  enclosing  =  registry.isLastGeneration()?  getReferencedType()  :  Collections.EMPTY_LIST;	  timeout    	non-compiled	[CE]  cannot  find  symbol  Collections	220	None	add
221	[BUG]  [BUGGY]  Preconditions.checkState(resolved);  Preconditions.checkState(resolved);  enclosing  =  registry.isLastGeneration()?  getInferredType()  :  this;  [CE]  cannot  find  symbol  [FE]                                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Preconditions.checkState(resolved);  Preconditions.checkState(resolved);  enclosing  =  registry.isLastGeneration()?  getInferredType()  :  this;  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Preconditions.checkState(resolved);    Preconditions.checkState(resolved);  enclosing  =  registry.isLastGeneration()?  getInferredType()  :  this;	  timeout    	non-compiled	[CE]  cannot  find  symbol	220	None	add
222	[BUG]  [BUGGY]  Preconditions.checkState(resolved);  Preconditions.checkState(resolved);  enclosing  =  registry.isLastGeneration()?  getReferencedType()  :  Collections.EMPTY_STRING;  [CE]  cannot  find  symbol  Collections  [FE]                                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Preconditions.checkState(resolved);  Preconditions.checkState(resolved);  enclosing  =  registry.isLastGeneration()?  getReferencedType()  :  Collections.EMPTY_STRING;  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Preconditions.checkState(resolved);    Preconditions.checkState(resolved);  enclosing  =  registry.isLastGeneration()?  getReferencedType()  :  Collections.EMPTY_STRING;	  timeout    	non-compiled	[CE]  cannot  find  symbol  Collections	220	None	add
223	[BUG]  [BUGGY]  charno  =  resolveViaRegistry(t,  enclosing);  [CE]  cannot  assign  a  value  to  final  variable  charno  [FE]                                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  charno  =  resolveViaRegistry(t,  enclosing);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	charno  =  resolveViaRegistry(t,  enclosing);	          inferred    =    resolveViaRegistry(t,    enclosing);    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  charno	23	None	replace
224	[BUG]  [BUGGY]  enclosing  =  resolveViaRegistry(t,  enclosing);  [CE]  incompatible  types  [FE]                                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  enclosing  =  resolveViaRegistry(t,  enclosing);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	enclosing  =  resolveViaRegistry(t,  enclosing);	          inferred    =    resolveViaRegistry(t,    enclosing);    	non-compiled	[CE]  incompatible  types	23	None	replace
225	[BUG]  [BUGGY]  timeout  [FE]                                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  resolved  =  resolveViaRegistry(t,  enclosing);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	add	resolved  =  resolveViaRegistry(t,  enclosing);	          inferred    =    resolveViaRegistry(t,    enclosing);    	compilable	timeout	23	1	replace
226	[BUG]  [BUGGY]  resolved  =  resolveViaRegistry(t,  enclosing);  timeout  [FE]                                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  resolved  =  resolveViaRegistry(t,  enclosing);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	resolved  =  resolveViaRegistry(t,  enclosing);	          inferred    =    resolveViaRegistry(t,    enclosing);    	compilable	timeout	23	1	replace
227	[BUG]  [BUGGY]  ered  =  resolveViaRegistry(t,  enclosing);  [CE]  cannot  find  symbol  ered  [FE]                                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  ered  =  resolveViaRegistry(t,  enclosing);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	ered  =  resolveViaRegistry(t,  enclosing);	          inferred    =    resolveViaRegistry(t,    enclosing);    	non-compiled	[CE]  cannot  find  symbol  ered	23	None	replace
228	[BUG]  [BUGGY]  Predicates.checkState(propertyContinuations  ==  null);  [CE]  cannot  find  symbol  Predicates  [FE]                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Predicates.checkState(propertyContinuations  ==  null);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Predicates.checkState(propertyContinuations  ==  null);	  if(propertyContinuations    ==    null)    {    finishPropertyContinuations();    }    if(propertyContinuations    {    null)    {    finishPropertyContinuations();    }    	non-compiled	[CE]  cannot  find  symbol  Predicates	163	None	replace
229	[BUG]  [BUGGY]  register.isLastGeneration()?  getReferencedType()  :  this;  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  register.isLastGeneration()?  getReferencedType()  :  this;  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	register.isLastGeneration()?  getReferencedType()  :  this;	  if(validator!=    null)    {    startPropertyGeneration();    }    else    {    registry.isLastGeneration()?    getReferencedType()    :    this;    }    	non-compiled	[CE]  not  a  statement	233	None	replace
230	[BUG]  [BUGGY]  Registry.isLastGeneration()?  getReferencedType()  :  null;  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Registry.isLastGeneration()?  getReferencedType()  :  null;  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Registry.isLastGeneration()?  getReferencedType()  :  null;	  if(validator!=    null)    {    startPropertyGeneration();    }    else    {    registry.isLastGeneration()?    getReferencedType()    :    this;    }    	non-compiled	[CE]  not  a  statement	233	None	replace
231	[BUG]  [BUGGY]  luate(registry,  enclosing)  {  finishPropertyContinuations();  }  else  {  Registry.isLastGeneration()?  getReferencedType()  :  null;  }  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  luate(registry,  enclosing)  {  finishPropertyContinuations();  }  else  {  Registry.isLastGeneration()?  getReferencedType()  :  null;  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	luate(registry,  enclosing)  {  finishPropertyContinuations();  }  else  {  Registry.isLastGeneration()?  getReferencedType()  :  null;  }	  luate(registry,    resolved)    {    finishPropertyContinuations();    }    else    {    Registry.isLastGeneration()?    getReferencedType()    :    null;    }    	non-compiled	[CE]  ';'  expected	180	None	replace
232	[BUG]  [BUGGY]  luate(registry,  enclosing)  {  startPropertyContinuations();  }  else  {  Registry.isLastGeneration()?  getReferencedType()  :  null;  }  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  luate(registry,  enclosing)  {  startPropertyContinuations();  }  else  {  Registry.isLastGeneration()?  getReferencedType()  :  null;  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	luate(registry,  enclosing)  {  startPropertyContinuations();  }  else  {  Registry.isLastGeneration()?  getReferencedType()  :  null;  }	  luate(registry,    resolved)    {    finishPropertyContinuations();    }    else    {    Registry.isLastGeneration()?    getReferencedType()    :    null;    }    	non-compiled	[CE]  ';'  expected	180	None	replace
233	[BUG]  [BUGGY]  luate(registry,  propertyNode)  {  finishPropertyContinuations();  }  else  {  Registry.isLastGeneration()?  getReferencedType()  :  null;  }  [CE]  ';'  expected  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  luate(registry,  propertyNode)  {  finishPropertyContinuations();  }  else  {  Registry.isLastGeneration()?  getReferencedType()  :  null;  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	luate(registry,  propertyNode)  {  finishPropertyContinuations();  }  else  {  Registry.isLastGeneration()?  getReferencedType()  :  null;  }	  luate(registry,    resolved)    {    finishPropertyContinuations();    }    else    {    Registry.isLastGeneration()?    getReferencedType()    :    null;    }    	non-compiled	[CE]  ';'  expected	180	None	replace
234	[BUG]  [BUGGY]  luate(registry,  enclosing)  {  getPropertyContinuations();  }  else  {  Registry.isLastGeneration()?  getReferencedType()  :  null;  }  [CE]  ';'  expected  [FE]                            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  luate(registry,  enclosing)  {  getPropertyContinuations();  }  else  {  Registry.isLastGeneration()?  getReferencedType()  :  null;  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	luate(registry,  enclosing)  {  getPropertyContinuations();  }  else  {  Registry.isLastGeneration()?  getReferencedType()  :  null;  }	  luate(registry,    resolved)    {    finishPropertyContinuations();    }    else    {    Registry.isLastGeneration()?    getReferencedType()    :    null;    }    	non-compiled	[CE]  ';'  expected	180	None	replace
235	[BUG]  [BUGGY]  Predicates.checkState(resolved)  {  handlePropertyContinuations();  }  [CE]  ';'  expected  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Predicates.checkState(resolved)  {  handlePropertyContinuations();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Predicates.checkState(resolved)  {  handlePropertyContinuations();  }	  Predicates.checkState(resolved)    {    finishPropertyContinuations();    }    	non-compiled	[CE]  ';'  expected	90	None	replace
236	[BUG]  [BUGGY]  Predicates.checkState(resolved  ==  false)  {  finishPropertyContinuations();  }  [CE]  ';'  expected  [FE]                            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Predicates.checkState(resolved  ==  false)  {  finishPropertyContinuations();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Predicates.checkState(resolved  ==  false)  {  finishPropertyContinuations();  }	  Predicates.checkState(resolved)    {    finishPropertyContinuations();    }    	non-compiled	[CE]  ';'  expected	90	None	replace
237	[BUG]  [BUGGY]  Predicates.checkState(!resolved)  {  finishPropertyContinuations();  }  [CE]  ';'  expected  [FE]                              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Predicates.checkState(!resolved)  {  finishPropertyContinuations();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Predicates.checkState(!resolved)  {  finishPropertyContinuations();  }	  Predicates.checkState(resolved)    {    finishPropertyContinuations();    }    	non-compiled	[CE]  ';'  expected	90	None	replace
238	[BUG]  [BUGGY]  Predicates.checkState(resolved!=  false)  {  finishPropertyContinuations();  }  [CE]  ';'  expected  [FE]                                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Predicates.checkState(resolved!=  false)  {  finishPropertyContinuations();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Predicates.checkState(resolved!=  false)  {  finishPropertyContinuations();  }	  Predicates.checkState(resolved)    {    finishPropertyContinuations();    }    	non-compiled	[CE]  ';'  expected	90	None	replace
239	[BUG]  [BUGGY]  Predicates.checkState(resolved);  [CE]  cannot  find  symbol  Predicates  [FE]                                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Predicates.checkState(resolved);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Predicates.checkState(resolved);	  Predicates.checkState(resolved)    {    finishPropertyContinuations();    }    	non-compiled	[CE]  cannot  find  symbol  Predicates	90	None	replace
240	[BUG]  [BUGGY]  Predicates.checkState(resolved)  {  handleTypeCycle(t);  }  [CE]  ';'  expected  [FE]                                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Predicates.checkState(resolved)  {  handleTypeCycle(t);  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Predicates.checkState(resolved)  {  handleTypeCycle(t);  }	  Predicates.checkState(resolved)    {    finishPropertyContinuations();    }    	non-compiled	[CE]  ';'  expected	90	None	replace
241	[BUG]  [BUGGY]  ensurePropertyContinuations(registry,  enclosing);  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  ensurePropertyContinuations(registry,  enclosing);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	ensurePropertyContinuations(registry,  enclosing);	  ensurePropertyContinuations(registry);    	non-compiled	[CE]  cannot  find  symbol	171	None	replace
242	[BUG]  [BUGGY]  ensurePropertyContinuations(registry,  resolved);  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  ensurePropertyContinuations(registry,  resolved);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	ensurePropertyContinuations(registry,  resolved);	  ensurePropertyContinuations(registry);    	non-compiled	[CE]  cannot  find  symbol	171	None	replace
243	[BUG]  [BUGGY]  ensurePropertyContinuations(registry,  propertyNode);  [CE]  cannot  find  symbol  propertyNode  [FE]                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  ensurePropertyContinuations(registry,  propertyNode);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	ensurePropertyContinuations(registry,  propertyNode);	  ensurePropertyContinuations(registry);    	non-compiled	[CE]  cannot  find  symbol  propertyNode	171	None	replace
244	[BUG]  [BUGGY]  ensurePropertyContinuations(registry,  forAnnotations);  [CE]  cannot  find  symbol  forAnnotations  [FE]                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  ensurePropertyContinuations(registry,  forAnnotations);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	ensurePropertyContinuations(registry,  forAnnotations);	  ensurePropertyContinuations(registry);    	non-compiled	[CE]  cannot  find  symbol  forAnnotations	171	None	replace
245	[BUG]  [BUGGY]  ensurePropertyContinuations(registry,  true);  [CE]  cannot  find  symbol  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  ensurePropertyContinuations(registry,  true);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	ensurePropertyContinuations(registry,  true);	  ensurePropertyContinuations(registry);    	non-compiled	[CE]  cannot  find  symbol	171	None	replace
246	[BUG]  [BUGGY]  ensurePropertyContinuations(registry,  false);  [CE]  cannot  find  symbol  [FE]                            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  ensurePropertyContinuations(registry,  false);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	ensurePropertyContinuations(registry,  false);	  ensurePropertyContinuations(registry);    	non-compiled	[CE]  cannot  find  symbol	171	None	replace
247	[BUG]  [BUGGY]  BundlePropertyContinuations  registry  =  getBundlePropertyContinuations(propertyNode,  enclosing);  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  BundlePropertyContinuations  registry  =  getBundlePropertyContinuations(propertyNode,  enclosing);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	BundlePropertyContinuations  registry  =  getBundlePropertyContinuations(propertyNode,  enclosing);	  BundlePropertyContinuations    registry    =    getBundlePropertyContinuations(propertyNode);    	non-compiled	[CE]  cannot  find  symbol	102	None	replace
248	[BUG]  [BUGGY]  BundlePropertyContinuations  registry  =  getBundlePropertyContinuations(propertyNode,  resolved);  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  BundlePropertyContinuations  registry  =  getBundlePropertyContinuations(propertyNode,  resolved);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	BundlePropertyContinuations  registry  =  getBundlePropertyContinuations(propertyNode,  resolved);	  BundlePropertyContinuations    registry    =    getBundlePropertyContinuations(propertyNode);    	non-compiled	[CE]  cannot  find  symbol	102	None	replace
249	[BUG]  [BUGGY]  BundlePropertyContinuations  registry  =  getBundlePropertyContinuations(propertyNode,  true);  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  BundlePropertyContinuations  registry  =  getBundlePropertyContinuations(propertyNode,  true);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	BundlePropertyContinuations  registry  =  getBundlePropertyContinuations(propertyNode,  true);	  BundlePropertyContinuations    registry    =    getBundlePropertyContinuations(propertyNode);    	non-compiled	[CE]  cannot  find  symbol	102	None	replace
250	[BUG]  [BUGGY]  BundlePropertyContinuations  registry  =  getBundlePropertyContinuations(propertyNode,  ref);  [CE]  cannot  find  symbol  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  BundlePropertyContinuations  registry  =  getBundlePropertyContinuations(propertyNode,  ref);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	BundlePropertyContinuations  registry  =  getBundlePropertyContinuations(propertyNode,  ref);	  BundlePropertyContinuations    registry    =    getBundlePropertyContinuations(propertyNode);    	non-compiled	[CE]  cannot  find  symbol	102	None	replace
251	[BUG]  [BUGGY]  BundlePropertyContinuations  propertyContinuations  =  getBundlePropertyContinuations(propertyNode);  [CE]  cannot  find  symbol  [FE]                            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  BundlePropertyContinuations  propertyContinuations  =  getBundlePropertyContinuations(propertyNode);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	BundlePropertyContinuations  propertyContinuations  =  getBundlePropertyContinuations(propertyNode);	  BundlePropertyContinuations    registry    =    getBundlePropertyContinuations(propertyNode);    	non-compiled	[CE]  cannot  find  symbol	102	None	replace
252	[BUG]  [BUGGY]  BundlePropertyContinuations  registry  =  getBundlePropertyContinuations(propertyNode,  false);  [CE]  cannot  find  symbol  [FE]                              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  BundlePropertyContinuations  registry  =  getBundlePropertyContinuations(propertyNode,  false);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	BundlePropertyContinuations  registry  =  getBundlePropertyContinuations(propertyNode,  false);	  BundlePropertyContinuations    registry    =    getBundlePropertyContinuations(propertyNode);    	non-compiled	[CE]  cannot  find  symbol	102	None	replace
253	[BUG]  [BUGGY]  if(validator  ==  null)  {  startPropertyGeneration();  }  else  {  registry.isLastGeneration()  :  this;  }  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(validator  ==  null)  {  startPropertyGeneration();  }  else  {  registry.isLastGeneration()  :  this;  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(validator  ==  null)  {  startPropertyGeneration();  }  else  {  registry.isLastGeneration()  :  this;  }	  if(validator!=    null)    {    startPropertyGeneration();    }    else    {    registry.isLastGeneration()    :    this;    }    	non-compiled	[CE]  ';'  expected	242	None	replace
254	[BUG]  [BUGGY]  validator!=  null  &&  validator.getType()  ==  Token.FUNCTION)  {  startPropertyGeneration();  }  else  {  registry.isLastGeneration()  :  this;  }  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  validator!=  null  &&  validator.getType()  ==  Token.FUNCTION)  {  startPropertyGeneration();  }  else  {  registry.isLastGeneration()  :  this;  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	validator!=  null  &&  validator.getType()  ==  Token.FUNCTION)  {  startPropertyGeneration();  }  else  {  registry.isLastGeneration()  :  this;  }	  if(validator!=    null)    {    startPropertyGeneration();    }    else    {    registry.isLastGeneration()    :    this;    }    	non-compiled	[CE]  not  a  statement	242	None	replace
255	[BUG]  [BUGGY]  validator!=  null  &&  validator.getType()  ==  Token.STRING)  {  startPropertyGeneration();  }  else  {  registry.isLastGeneration()  :  this;  }  [CE]  not  a  statement  [FE]                            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  validator!=  null  &&  validator.getType()  ==  Token.STRING)  {  startPropertyGeneration();  }  else  {  registry.isLastGeneration()  :  this;  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	validator!=  null  &&  validator.getType()  ==  Token.STRING)  {  startPropertyGeneration();  }  else  {  registry.isLastGeneration()  :  this;  }	  if(validator!=    null)    {    startPropertyGeneration();    }    else    {    registry.isLastGeneration()    :    this;    }    	non-compiled	[CE]  not  a  statement	242	None	replace
256	[BUG]  [BUGGY]  t.handleTypeCycle(t);  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  t.handleTypeCycle(t);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	t.handleTypeCycle(t);	  aughtExceptionHandler.handleTypeCycle(t);    	non-compiled	[CE]  cannot  find  symbol	195	None	replace
257	[BUG]  [BUGGY]  assistExceptionHandler.handleTypeCycle(t);  [CE]  cannot  find  symbol  assistExceptionHandler  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  assistExceptionHandler.handleTypeCycle(t);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	assistExceptionHandler.handleTypeCycle(t);	  aughtExceptionHandler.handleTypeCycle(t);    	non-compiled	[CE]  cannot  find  symbol  assistExceptionHandler	195	None	replace
258	[BUG]  [BUGGY]  timeout  [FE]                            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  handleTypeCycle(t);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	add	handleTypeCycle(t);	  aughtExceptionHandler.handleTypeCycle(t);    	compilable	timeout	195	1	replace
259	[BUG]  [BUGGY]  handleTypeCycle(t);  timeout  [FE]                            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  handleTypeCycle(t);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	handleTypeCycle(t);	  aughtExceptionHandler.handleTypeCycle(t);    	compilable	timeout	195	1	replace
260	[BUG]  [BUGGY]  masterExceptionHandler.handleTypeCycle(t);  [CE]  cannot  find  symbol  masterExceptionHandler  [FE]                              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  masterExceptionHandler.handleTypeCycle(t);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	masterExceptionHandler.handleTypeCycle(t);	  aughtExceptionHandler.handleTypeCycle(t);    	non-compiled	[CE]  cannot  find  symbol  masterExceptionHandler	195	None	replace
261	[BUG]  [BUGGY]  t.handleTypeCycle(resolved);  [CE]  cannot  find  symbol  [FE]                                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  t.handleTypeCycle(resolved);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	t.handleTypeCycle(resolved);	  aughtExceptionHandler.handleTypeCycle(t);    	non-compiled	[CE]  cannot  find  symbol	195	None	replace
262	[BUG]  [BUGGY]  mandExceptionHandler.handleTypeCycle(t);  [CE]  cannot  find  symbol  mandExceptionHandler  [FE]                                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  mandExceptionHandler.handleTypeCycle(t);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	mandExceptionHandler.handleTypeCycle(t);	  aughtExceptionHandler.handleTypeCycle(t);    	non-compiled	[CE]  cannot  find  symbol  mandExceptionHandler	195	None	replace
263	[BUG]  [BUGGY]  if(propertyContinuations!=  null)  {  startPropertyAnnotations();  }  else  {  propertyContinuations.add(propertyName);  }  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(propertyContinuations!=  null)  {  startPropertyAnnotations();  }  else  {  propertyContinuations.add(propertyName);  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations!=  null)  {  startPropertyAnnotations();  }  else  {  propertyContinuations.add(propertyName);  }	  if(propertyContinuations!=    null)    {    finishPropertyAnnotations();    }    else    {    propertyContinuations.add(propertyName);    }    	non-compiled	[CE]  cannot  find  symbol	153	None	replace
264	[BUG]  [BUGGY]  propertyAnnotations();  [CE]  cannot  find  symbol  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  propertyAnnotations();  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	propertyAnnotations();	  if(propertyContinuations!=    null)    {    finishPropertyAnnotations();    }    else    {    propertyContinuations.add(propertyName);    }    	non-compiled	[CE]  cannot  find  symbol	153	None	replace
265	[BUG]  [BUGGY]  PropertyAnnotations  propertyContinuations  =  getPropertyAnnotations();  [CE]  cannot  find  symbol  [FE]                            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  PropertyAnnotations  propertyContinuations  =  getPropertyAnnotations();  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	PropertyAnnotations  propertyContinuations  =  getPropertyAnnotations();	  if(propertyContinuations!=    null)    {    finishPropertyAnnotations();    }    else    {    propertyContinuations.add(propertyName);    }    	non-compiled	[CE]  cannot  find  symbol	153	None	replace
266	[BUG]  [BUGGY]  Parchet.checkState(validator  ==  null);  finishPropertyContinuations();  [CE]  cannot  find  symbol  Parchet  [FE]                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Parchet.checkState(validator  ==  null);  finishPropertyContinuations();  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Parchet.checkState(validator  ==  null);  finishPropertyContinuations();	  Parchet.checkState(validator!=    null);    finishPropertyContinuations();    	non-compiled	[CE]  cannot  find  symbol  Parchet	33	None	replace
267	[BUG]  [BUGGY]  Parchet.checkState(validator!=  null);  startPropertyContinuations();  [CE]  cannot  find  symbol  Parchet  [FE]                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Parchet.checkState(validator!=  null);  startPropertyContinuations();  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Parchet.checkState(validator!=  null);  startPropertyContinuations();	  Parchet.checkState(validator!=    null);    finishPropertyContinuations();    	non-compiled	[CE]  cannot  find  symbol  Parchet	33	None	replace
268	[BUG]  [BUGGY]  Parchet.checkState(resolved!=  null);  finishPropertyContinuations();  [CE]  incomparable  types:  boolean  and  <null>  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Parchet.checkState(resolved!=  null);  finishPropertyContinuations();  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Parchet.checkState(resolved!=  null);  finishPropertyContinuations();	  Parchet.checkState(validator!=    null);    finishPropertyContinuations();    	non-compiled	[CE]  incomparable  types:  boolean  and  <null>	33	None	replace
269	[BUG]  [BUGGY]  Parchet.checkState(validator!=  null);  handlePropertyContinuations();  [CE]  cannot  find  symbol  Parchet  [FE]                            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Parchet.checkState(validator!=  null);  handlePropertyContinuations();  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Parchet.checkState(validator!=  null);  handlePropertyContinuations();	  Parchet.checkState(validator!=    null);    finishPropertyContinuations();    	non-compiled	[CE]  cannot  find  symbol  Parchet	33	None	replace
270	[BUG]  [BUGGY]  Parchet.checkState(registry!=  null);  finishPropertyContinuations();  [CE]  cannot  find  symbol  Parchet  [FE]                              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Parchet.checkState(registry!=  null);  finishPropertyContinuations();  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Parchet.checkState(registry!=  null);  finishPropertyContinuations();	  Parchet.checkState(validator!=    null);    finishPropertyContinuations();    	non-compiled	[CE]  cannot  find  symbol  Parchet	33	None	replace
271	[BUG]  [BUGGY]  Parchet.checkState(validator!=  null);  getPropertyContinuations();  [CE]  cannot  find  symbol  Parchet  [FE]                                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Parchet.checkState(validator!=  null);  getPropertyContinuations();  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Parchet.checkState(validator!=  null);  getPropertyContinuations();	  Parchet.checkState(validator!=    null);    finishPropertyContinuations();    	non-compiled	[CE]  cannot  find  symbol  Parchet	33	None	replace
272	[BUG]  [BUGGY]  Predicate  validator  =  getValueForType(t,  enclosing,  registry);  [CE]  cannot  find  symbol  [FE]                                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Predicate  validator  =  getValueForType(t,  enclosing,  registry);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Predicate  validator  =  getValueForType(t,  enclosing,  registry);	  Predicate    validator    =    getValueForType(t,    enclosing);    	non-compiled	[CE]  cannot  find  symbol	204	None	replace
273	[BUG]  [BUGGY]  Predicate  validator  =  getValueForType(t,  enclosing,  type);  [CE]  cannot  find  symbol  type  [FE]                                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Predicate  validator  =  getValueForType(t,  enclosing,  type);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Predicate  validator  =  getValueForType(t,  enclosing,  type);	  Predicate    validator    =    getValueForType(t,    enclosing);    	non-compiled	[CE]  cannot  find  symbol  type	204	None	replace
274	[BUG]  [BUGGY]  Predicate  validator  =  getValueForType(t,  enclosing,  propertyNode);  [CE]  cannot  find  symbol  propertyNode  [FE]                                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Predicate  validator  =  getValueForType(t,  enclosing,  propertyNode);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Predicate  validator  =  getValueForType(t,  enclosing,  propertyNode);	  Predicate    validator    =    getValueForType(t,    enclosing);    	non-compiled	[CE]  cannot  find  symbol  propertyNode	204	None	replace
275	[BUG]  [BUGGY]  PropertyInferred();  }  else  {  getPropertyContinuations().addAll(propertyContinuations);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  PropertyInferred();  }  else  {  getPropertyContinuations().addAll(propertyContinuations);  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	PropertyInferred();  }  else  {  getPropertyContinuations().addAll(propertyContinuations);  }	  if(propertyContinuations!=    null)    {    finishPropertyInferred();    }    else    {    getPropertyContinuations().addAll(propertyContinuations);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	118	None	replace
276	[BUG]  [BUGGY]  timeout  [FE]              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  propertyContinuations.addAll(propertyContinuations);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	add	propertyContinuations.addAll(propertyContinuations);	  if(propertyContinuations!=    null)    {    finishPropertyInferred();    }    else    {    getPropertyContinuations().addAll(propertyContinuations);    }    	compilable	timeout	118	1	replace
277	[BUG]  [BUGGY]  propertyContinuations.addAll(propertyContinuations);  timeout  [FE]              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  propertyContinuations.addAll(propertyContinuations);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	propertyContinuations.addAll(propertyContinuations);	  if(propertyContinuations!=    null)    {    finishPropertyInferred();    }    else    {    getPropertyContinuations().addAll(propertyContinuations);    }    	compilable	timeout	118	1	replace
278	[BUG]  [BUGGY]  propertyInferred();  }  else  {  getPropertyContinuations().addAll(propertyContinuations);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  propertyInferred();  }  else  {  getPropertyContinuations().addAll(propertyContinuations);  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	propertyInferred();  }  else  {  getPropertyContinuations().addAll(propertyContinuations);  }	  if(propertyContinuations!=    null)    {    finishPropertyInferred();    }    else    {    getPropertyContinuations().addAll(propertyContinuations);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	118	None	replace
279	[BUG]  [BUGGY]  ensurePropertyInferred();  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  ensurePropertyInferred();  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	ensurePropertyInferred();	  if(propertyContinuations!=    null)    {    finishPropertyInferred();    }    else    {    getPropertyContinuations().addAll(propertyContinuations);    }    	non-compiled	[CE]  cannot  find  symbol	118	None	replace
280	[BUG]  [BUGGY]  timeout  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(resolved)    {    finishPropertyContinuations();    }    while(resolved)  {  finishPropertyContinuations();  }  if(resolved)  {  finishPropertyContinuations();  }  while(resolved)  {  finishPropertyContinuations();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	add	if(resolved)        {        finishPropertyContinuations();        }        while(resolved)    {    finishPropertyContinuations();    }    if(resolved)  {  finishPropertyContinuations();  }  while(resolved)  {  finishPropertyContinuations();  }	  timeout    	compilable	timeout	39	1	add
281	[BUG]  [BUGGY]  if(resolved)    {    finishPropertyContinuations();    }    while(resolved)  {  finishPropertyContinuations();  }  if(resolved)  {  finishPropertyContinuations();  }  while(resolved)  {  finishPropertyContinuations();  }  timeout  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(resolved)    {    finishPropertyContinuations();    }    while(resolved)  {  finishPropertyContinuations();  }  if(resolved)  {  finishPropertyContinuations();  }  while(resolved)  {  finishPropertyContinuations();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(resolved)        {        finishPropertyContinuations();        }        while(resolved)    {    finishPropertyContinuations();    }    if(resolved)  {  finishPropertyContinuations();  }  while(resolved)  {  finishPropertyContinuations();  }	  timeout    	compilable	timeout	39	1	add
282	[BUG]  [BUGGY]  if(resolved)    {    finishPropertyContinuations();    }    while(resolved)  {  finishPropertyContinuations();  }  if(resolved)  {  startPropertyContinuations();  }  while(resolved)  {  finishPropertyContinuations();  }  [CE]  cannot  find  symbol  [FE]                            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(resolved)    {    finishPropertyContinuations();    }    while(resolved)  {  finishPropertyContinuations();  }  if(resolved)  {  startPropertyContinuations();  }  while(resolved)  {  finishPropertyContinuations();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(resolved)        {        finishPropertyContinuations();        }        while(resolved)    {    finishPropertyContinuations();    }    if(resolved)  {  startPropertyContinuations();  }  while(resolved)  {  finishPropertyContinuations();  }	  timeout    	non-compiled	[CE]  cannot  find  symbol	39	None	add
283	[BUG]  [BUGGY]  if(resolved)    {    finishPropertyContinuations();    }    while(resolved)  {  finishPropertyContinuations();  }  If(resolved)  {  finishPropertyContinuations();  }  while(resolved)  {  finishPropertyContinuations();  }  [CE]  ';'  expected  [FE]                              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(resolved)    {    finishPropertyContinuations();    }    while(resolved)  {  finishPropertyContinuations();  }  If(resolved)  {  finishPropertyContinuations();  }  while(resolved)  {  finishPropertyContinuations();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(resolved)        {        finishPropertyContinuations();        }        while(resolved)    {    finishPropertyContinuations();    }    If(resolved)  {  finishPropertyContinuations();  }  while(resolved)  {  finishPropertyContinuations();  }	  timeout    	non-compiled	[CE]  ';'  expected	39	None	add
284	[BUG]  [BUGGY]  if(resolved)    {    finishPropertyContinuations();    }    while(resolved)  {  finishPropertyContinuations();  }  if(resolved)  {  finishPropertyContinuations();  }  while(resolved)  {  startPropertyContinuations();  }  [CE]  cannot  find  symbol  [FE]                                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(resolved)    {    finishPropertyContinuations();    }    while(resolved)  {  finishPropertyContinuations();  }  if(resolved)  {  finishPropertyContinuations();  }  while(resolved)  {  startPropertyContinuations();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(resolved)        {        finishPropertyContinuations();        }        while(resolved)    {    finishPropertyContinuations();    }    if(resolved)  {  finishPropertyContinuations();  }  while(resolved)  {  startPropertyContinuations();  }	  timeout    	non-compiled	[CE]  cannot  find  symbol	39	None	add
285	[BUG]  [BUGGY]  if(resolved)    {    finishPropertyContinuations();    }    while(resolved)  {  finishPropertyContinuations();  }  if(resolved)  {  finishPropertyContinuations();  }  while(resolved)  {  finishPropertyContinuations();  [CE]  illegal  start  of  expression  [FE]                                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(resolved)    {    finishPropertyContinuations();    }    while(resolved)  {  finishPropertyContinuations();  }  if(resolved)  {  finishPropertyContinuations();  }  while(resolved)  {  finishPropertyContinuations();  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(resolved)        {        finishPropertyContinuations();        }        while(resolved)    {    finishPropertyContinuations();    }    if(resolved)  {  finishPropertyContinuations();  }  while(resolved)  {  finishPropertyContinuations();	  timeout    	non-compiled	[CE]  illegal  start  of  expression	39	None	add
286	[BUG]  [BUGGY]  timeout  [FE]                                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(resolved)    {    finishPropertyContinuations();    }    while(resolved)  {  finishPropertyContinuations();  }  if(resolved)  {  finishPropertyContinuations();  }  while(resolved)  {  getReferencedType();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	add	if(resolved)        {        finishPropertyContinuations();        }        while(resolved)    {    finishPropertyContinuations();    }    if(resolved)  {  finishPropertyContinuations();  }  while(resolved)  {  getReferencedType();  }	  timeout    	compilable	timeout	39	1	add
287	[BUG]  [BUGGY]  if(resolved)    {    finishPropertyContinuations();    }    while(resolved)  {  finishPropertyContinuations();  }  if(resolved)  {  finishPropertyContinuations();  }  while(resolved)  {  getReferencedType();  }  timeout  [FE]                                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(resolved)    {    finishPropertyContinuations();    }    while(resolved)  {  finishPropertyContinuations();  }  if(resolved)  {  finishPropertyContinuations();  }  while(resolved)  {  getReferencedType();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(resolved)        {        finishPropertyContinuations();        }        while(resolved)    {    finishPropertyContinuations();    }    if(resolved)  {  finishPropertyContinuations();  }  while(resolved)  {  getReferencedType();  }	  timeout    	compilable	timeout	39	1	add
288	[BUG]  [BUGGY]  t.finishPropertyType(resolved);  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  t.finishPropertyType(resolved);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	t.finishPropertyType(resolved);	  predicate.finishPropertyType(resolved);    	non-compiled	[CE]  cannot  find  symbol	143	None	replace
289	[BUG]  [BUGGY]  Predicates.finishPropertyType(resolved);  [CE]  cannot  find  symbol  Predicates  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Predicates.finishPropertyType(resolved);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Predicates.finishPropertyType(resolved);	  predicate.finishPropertyType(resolved);    	non-compiled	[CE]  cannot  find  symbol  Predicates	143	None	replace
290	[BUG]  [BUGGY]  predicate.finishPropertyType(propertyName);  [CE]  cannot  find  symbol  propertyName  [FE]                            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  predicate.finishPropertyType(propertyName);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	predicate.finishPropertyType(propertyName);	  predicate.finishPropertyType(resolved);    	non-compiled	[CE]  cannot  find  symbol  propertyName	143	None	replace
291	[BUG]  [BUGGY]  inferred.finishPropertyType(resolved);  [CE]  cannot  find  symbol  inferred  [FE]                              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  inferred.finishPropertyType(resolved);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	inferred.finishPropertyType(resolved);	  predicate.finishPropertyType(resolved);    	non-compiled	[CE]  cannot  find  symbol  inferred	143	None	replace
292	[BUG]  [BUGGY]  Predicate  validator.finishPropertyType(resolved);  [CE]  ';'  expected  [FE]                                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Predicate  validator.finishPropertyType(resolved);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Predicate  validator.finishPropertyType(resolved);	  predicate.finishPropertyType(resolved);    	non-compiled	[CE]  ';'  expected	143	None	replace
293	[BUG]  [BUGGY]  validator.finishPropertyType(resolved);  [CE]  cannot  find  symbol  [FE]                                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  validator.finishPropertyType(resolved);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	validator.finishPropertyType(resolved);	  predicate.finishPropertyType(resolved);    	non-compiled	[CE]  cannot  find  symbol	143	None	replace
294	[BUG]  [BUGGY]  validatePropertyGenerations();  }  else  {  registry.isLastGeneration()  :  this;  }  [CE]  [FE]                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  validatePropertyGenerations();  }  else  {  registry.isLastGeneration()  :  this;  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	validatePropertyGenerations();  }  else  {  registry.isLastGeneration()  :  this;  }	  if(resolved)    {    finishPropertyGenerations();    }    else    {    registry.isLastGeneration()    :    this;    }    	non-compiled	[CE]  	172	None	replace
295	[BUG]  [BUGGY]  validatePropertyGenerations(t,  resolved);  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  validatePropertyGenerations(t,  resolved);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	validatePropertyGenerations(t,  resolved);	  if(resolved)    {    finishPropertyGenerations();    }    else    {    registry.isLastGeneration()    :    this;    }    	non-compiled	[CE]  cannot  find  symbol	172	None	replace
296	[BUG]  [BUGGY]  validatePropertyGenerations();  }  else  {  registry.isLastGeneration()  :  null;  }  [CE]  [FE]                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  validatePropertyGenerations();  }  else  {  registry.isLastGeneration()  :  null;  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	validatePropertyGenerations();  }  else  {  registry.isLastGeneration()  :  null;  }	  if(resolved)    {    finishPropertyGenerations();    }    else    {    registry.isLastGeneration()    :    this;    }    	non-compiled	[CE]  	172	None	replace
297	[BUG]  [BUGGY]  validatePropertyGenerations();  }  else  {  registry.isFirstGeneration()  :  this;  }  [CE]  [FE]                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  validatePropertyGenerations();  }  else  {  registry.isFirstGeneration()  :  this;  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	validatePropertyGenerations();  }  else  {  registry.isFirstGeneration()  :  this;  }	  if(resolved)    {    finishPropertyGenerations();    }    else    {    registry.isLastGeneration()    :    this;    }    	non-compiled	[CE]  	172	None	replace
298	[BUG]  [BUGGY]  timeout  [FE]                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(resolved)    {    finishPropertyContinuations();    }    if(resolved)  {  finishPropertyContinuations();  }  if(resolved)  {  finishPropertyContinuations();  }  if(resolved)  {  finishPropertyContinuations();  }  if(resolved)  {  finishPropertyContinuations();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	add	if(resolved)        {        finishPropertyContinuations();        }        if(resolved)    {    finishPropertyContinuations();    }    if(resolved)  {  finishPropertyContinuations();  }  if(resolved)  {  finishPropertyContinuations();  }  if(resolved)  {  finishPropertyContinuations();  }	  timeout    	compilable	timeout	34	1	add
299	[BUG]  [BUGGY]  if(resolved)    {    finishPropertyContinuations();    }    if(resolved)  {  finishPropertyContinuations();  }  if(resolved)  {  finishPropertyContinuations();  }  if(resolved)  {  finishPropertyContinuations();  }  if(resolved)  {  finishPropertyContinuations();  }  timeout  [FE]                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(resolved)    {    finishPropertyContinuations();    }    if(resolved)  {  finishPropertyContinuations();  }  if(resolved)  {  finishPropertyContinuations();  }  if(resolved)  {  finishPropertyContinuations();  }  if(resolved)  {  finishPropertyContinuations();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(resolved)        {        finishPropertyContinuations();        }        if(resolved)    {    finishPropertyContinuations();    }    if(resolved)  {  finishPropertyContinuations();  }  if(resolved)  {  finishPropertyContinuations();  }  if(resolved)  {  finishPropertyContinuations();  }	  timeout    	compilable	timeout	34	1	add
300	[BUG]  [BUGGY]  if(resolved)    {    finishPropertyContinuations();    }    if(resolved)  {  finishPropertyContinuations();  }  if(resolved)  {  finishPropertyContinuations();  }  if(resolved)  {  finishPropertyContinuations();  }  if(resolved)  {  finishPropertyContinuations();  }  if(resolved)  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(resolved)    {    finishPropertyContinuations();    }    if(resolved)  {  finishPropertyContinuations();  }  if(resolved)  {  finishPropertyContinuations();  }  if(resolved)  {  finishPropertyContinuations();  }  if(resolved)  {  finishPropertyContinuations();  }  if(resolved)  {  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(resolved)        {        finishPropertyContinuations();        }        if(resolved)    {    finishPropertyContinuations();    }    if(resolved)  {  finishPropertyContinuations();  }  if(resolved)  {  finishPropertyContinuations();  }  if(resolved)  {  finishPropertyContinuations();  }  if(resolved)  {	  timeout    	non-compiled	[CE]  illegal  start  of  expression	34	None	add
301	[BUG]  [BUGGY]  timeout  [FE]                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(resolved)    {    finishPropertyContinuations();    }    if(resolved)  {  finishPropertyContinuations();  }  if(resolved)  {  finishPropertyContinuations();  }  if(resolved)  {  finishPropertyContinuations();  }  if(resolved)  {  finishPropertyContinuations();  }  if(resolved)  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	add	if(resolved)        {        finishPropertyContinuations();        }        if(resolved)    {    finishPropertyContinuations();    }    if(resolved)  {  finishPropertyContinuations();  }  if(resolved)  {  finishPropertyContinuations();  }  if(resolved)  {  finishPropertyContinuations();  }  if(resolved)	  timeout    	compilable	timeout	34	1	add
302	[BUG]  [BUGGY]  if(resolved)    {    finishPropertyContinuations();    }    if(resolved)  {  finishPropertyContinuations();  }  if(resolved)  {  finishPropertyContinuations();  }  if(resolved)  {  finishPropertyContinuations();  }  if(resolved)  {  finishPropertyContinuations();  }  if(resolved)  timeout  [FE]                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(resolved)    {    finishPropertyContinuations();    }    if(resolved)  {  finishPropertyContinuations();  }  if(resolved)  {  finishPropertyContinuations();  }  if(resolved)  {  finishPropertyContinuations();  }  if(resolved)  {  finishPropertyContinuations();  }  if(resolved)  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(resolved)        {        finishPropertyContinuations();        }        if(resolved)    {    finishPropertyContinuations();    }    if(resolved)  {  finishPropertyContinuations();  }  if(resolved)  {  finishPropertyContinuations();  }  if(resolved)  {  finishPropertyContinuations();  }  if(resolved)	  timeout    	compilable	timeout	34	1	add
303	[BUG]  [BUGGY]  timeout  [FE]                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(resolved)    {    finishPropertyContinuations();    }    if(resolved)  {  finishPropertyContinuations();  }  if(resolved)  {  finishPropertyContinuations();  }  if(resolved)  {  finishPropertyContinuations();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	add	if(resolved)        {        finishPropertyContinuations();        }        if(resolved)    {    finishPropertyContinuations();    }    if(resolved)  {  finishPropertyContinuations();  }  if(resolved)  {  finishPropertyContinuations();  }	  timeout    	compilable	timeout	34	1	add
304	[BUG]  [BUGGY]  if(resolved)    {    finishPropertyContinuations();    }    if(resolved)  {  finishPropertyContinuations();  }  if(resolved)  {  finishPropertyContinuations();  }  if(resolved)  {  finishPropertyContinuations();  }  timeout  [FE]                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(resolved)    {    finishPropertyContinuations();    }    if(resolved)  {  finishPropertyContinuations();  }  if(resolved)  {  finishPropertyContinuations();  }  if(resolved)  {  finishPropertyContinuations();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(resolved)        {        finishPropertyContinuations();        }        if(resolved)    {    finishPropertyContinuations();    }    if(resolved)  {  finishPropertyContinuations();  }  if(resolved)  {  finishPropertyContinuations();  }	  timeout    	compilable	timeout	34	1	add
305	[BUG]  [BUGGY]  if(resolved)    {    finishPropertyContinuations();    }    if(resolved)  {  finishPropertyContinuations();  }  if(resolved)  {  finishPropertyContinuations();  }  if(resolved)  {  finishPropertyContinuations();  }  if(resolved)  {  finishPropertyContinuations()  [CE]  ';'  expected  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(resolved)    {    finishPropertyContinuations();    }    if(resolved)  {  finishPropertyContinuations();  }  if(resolved)  {  finishPropertyContinuations();  }  if(resolved)  {  finishPropertyContinuations();  }  if(resolved)  {  finishPropertyContinuations()  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(resolved)        {        finishPropertyContinuations();        }        if(resolved)    {    finishPropertyContinuations();    }    if(resolved)  {  finishPropertyContinuations();  }  if(resolved)  {  finishPropertyContinuations();  }  if(resolved)  {  finishPropertyContinuations()	  timeout    	non-compiled	[CE]  ';'  expected	34	None	add
306	[BUG]  [BUGGY]  if(resolved)    {    finishPropertyContinuations();    }    if(resolved)  {  finishPropertyContinuations();  }  if(resolved)  {  finishPropertyContinuations();  }  if(resolved)  {  finishPropertyContinuations();  }  if(resolved)  {  finishPropertyContinuations();  }  if  [CE]  '('  expected  [FE]                            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(resolved)    {    finishPropertyContinuations();    }    if(resolved)  {  finishPropertyContinuations();  }  if(resolved)  {  finishPropertyContinuations();  }  if(resolved)  {  finishPropertyContinuations();  }  if(resolved)  {  finishPropertyContinuations();  }  if  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(resolved)        {        finishPropertyContinuations();        }        if(resolved)    {    finishPropertyContinuations();    }    if(resolved)  {  finishPropertyContinuations();  }  if(resolved)  {  finishPropertyContinuations();  }  if(resolved)  {  finishPropertyContinuations();  }  if	  timeout    	non-compiled	[CE]  '('  expected	34	None	add
307	[BUG]  [BUGGY]  if(resolved)    {    finishPropertyContinuations();    }    if(resolved)  {  finishPropertyContinuations();  }  if(resolved)  {  finishPropertyContinuations();  }  if(resolved)  {  finishPropertyContinuations();  }  if(resolved)  {  finishPropertyContinu  [CE]  ';'  expected  [FE]                              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(resolved)    {    finishPropertyContinuations();    }    if(resolved)  {  finishPropertyContinuations();  }  if(resolved)  {  finishPropertyContinuations();  }  if(resolved)  {  finishPropertyContinuations();  }  if(resolved)  {  finishPropertyContinu  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(resolved)        {        finishPropertyContinuations();        }        if(resolved)    {    finishPropertyContinuations();    }    if(resolved)  {  finishPropertyContinuations();  }  if(resolved)  {  finishPropertyContinuations();  }  if(resolved)  {  finishPropertyContinu	  timeout    	non-compiled	[CE]  ';'  expected	34	None	add
308	[BUG]  [BUGGY]  if(propertyContinuations!=  null)  {  startPropertyGeneration();  }  else  {  propertyContinuations.add(propertyName);  }  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(propertyContinuations!=  null)  {  startPropertyGeneration();  }  else  {  propertyContinuations.add(propertyName);  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations!=  null)  {  startPropertyGeneration();  }  else  {  propertyContinuations.add(propertyName);  }	  if(propertyContinuations!=    null)    {    finishPropertyGeneration();    }    else    {    propertyContinuations.add(propertyName);    }    	non-compiled	[CE]  cannot  find  symbol	225	None	replace
309	[BUG]  [BUGGY]  if(propertyContinuations!=  null)  {  finishPropertyGeneration();  }  else  {  properties.add(propertyName);  }  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(propertyContinuations!=  null)  {  finishPropertyGeneration();  }  else  {  properties.add(propertyName);  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations!=  null)  {  finishPropertyGeneration();  }  else  {  properties.add(propertyName);  }	  if(propertyContinuations!=    null)    {    finishPropertyGeneration();    }    else    {    propertyContinuations.add(propertyName);    }    	non-compiled	[CE]  cannot  find  symbol	225	None	replace
310	[BUG]  [BUGGY]  PropertyGeneration  propertyContinuations  =  getPropertyGeneration();  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  PropertyGeneration  propertyContinuations  =  getPropertyGeneration();  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	PropertyGeneration  propertyContinuations  =  getPropertyGeneration();	  if(propertyContinuations!=    null)    {    finishPropertyGeneration();    }    else    {    propertyContinuations.add(propertyName);    }    	non-compiled	[CE]  cannot  find  symbol	225	None	replace
311	[BUG]  [BUGGY]  if(propertyContinuations!=  null)  {  finishPropertyGeneration();  }  else  {  propertyContinuations.remove(propertyName);  }  [CE]  cannot  find  symbol  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(propertyContinuations!=  null)  {  finishPropertyGeneration();  }  else  {  propertyContinuations.remove(propertyName);  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations!=  null)  {  finishPropertyGeneration();  }  else  {  propertyContinuations.remove(propertyName);  }	  if(propertyContinuations!=    null)    {    finishPropertyGeneration();    }    else    {    propertyContinuations.add(propertyName);    }    	non-compiled	[CE]  cannot  find  symbol	225	None	replace
312	[BUG]  [BUGGY]  Annotations  props  =  getPropertyContinuations(propertyNode);  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Annotations  props  =  getPropertyContinuations(propertyNode);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Annotations  props  =  getPropertyContinuations(propertyNode);	  Annotations    props    =    getPropertyContinuations();    	non-compiled	[CE]  cannot  find  symbol	229	None	replace
313	[BUG]  [BUGGY]  Annotations  props  =  getPropertyContinuations(registry);  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Annotations  props  =  getPropertyContinuations(registry);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Annotations  props  =  getPropertyContinuations(registry);	  Annotations    props    =    getPropertyContinuations();    	non-compiled	[CE]  cannot  find  symbol	229	None	replace
314	[BUG]  [BUGGY]  Annotations  props  =  getPropertyContinuations(resolved);  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Annotations  props  =  getPropertyContinuations(resolved);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Annotations  props  =  getPropertyContinuations(resolved);	  Annotations    props    =    getPropertyContinuations();    	non-compiled	[CE]  cannot  find  symbol	229	None	replace
315	[BUG]  [BUGGY]  Annotations  props  =  getPropertyContinuations(propertyName);  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Annotations  props  =  getPropertyContinuations(propertyName);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Annotations  props  =  getPropertyContinuations(propertyName);	  Annotations    props    =    getPropertyContinuations();    	non-compiled	[CE]  cannot  find  symbol	229	None	replace
316	[BUG]  [BUGGY]  Annotations  props  =  getPropertyContinuations(nameNode);  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Annotations  props  =  getPropertyContinuations(nameNode);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Annotations  props  =  getPropertyContinuations(nameNode);	  Annotations    props    =    getPropertyContinuations();    	non-compiled	[CE]  cannot  find  symbol	229	None	replace
317	[BUG]  [BUGGY]  Annotations  props  =  getPropertyContinuations(propertyNodes);  [CE]  cannot  find  symbol  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Annotations  props  =  getPropertyContinuations(propertyNodes);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Annotations  props  =  getPropertyContinuations(propertyNodes);	  Annotations    props    =    getPropertyContinuations();    	non-compiled	[CE]  cannot  find  symbol	229	None	replace
318	[BUG]  [BUGGY]  validator!=  null  &&  validator.isLastGeneration()?  getReferencedType()  :  null;  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  validator!=  null  &&  validator.isLastGeneration()?  getReferencedType()  :  null;  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	validator!=  null  &&  validator.isLastGeneration()?  getReferencedType()  :  null;	  validator!=    null    &&    validator.isLastGeneration()?    getReferencedType()    :    this;    	non-compiled	[CE]  not  a  statement	139	None	replace
319	[BUG]  [BUGGY]  validator!=  null  &&  validator.isFirstGeneration()?  getReferencedType()  :  this;  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  validator!=  null  &&  validator.isFirstGeneration()?  getReferencedType()  :  this;  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	validator!=  null  &&  validator.isFirstGeneration()?  getReferencedType()  :  this;	  validator!=    null    &&    validator.isLastGeneration()?    getReferencedType()    :    this;    	non-compiled	[CE]  not  a  statement	139	None	replace
320	[BUG]  [BUGGY]  Validator  <?>  validator!=  null  &&  validator.isLastGeneration()?  getReferencedType()  :  this;  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Validator  <?>  validator!=  null  &&  validator.isLastGeneration()?  getReferencedType()  :  this;  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Validator  <?>  validator!=  null  &&  validator.isLastGeneration()?  getReferencedType()  :  this;	  validator!=    null    &&    validator.isLastGeneration()?    getReferencedType()    :    this;    	non-compiled	[CE]  ';'  expected	139	None	replace
321	[BUG]  [BUGGY]  validator!=  null  &&  validator.isLastGeneration()?  getReferencedType()  :  REFERRED_TYPE;  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  validator!=  null  &&  validator.isLastGeneration()?  getReferencedType()  :  REFERRED_TYPE;  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	validator!=  null  &&  validator.isLastGeneration()?  getReferencedType()  :  REFERRED_TYPE;	  validator!=    null    &&    validator.isLastGeneration()?    getReferencedType()    :    this;    	non-compiled	[CE]  not  a  statement	139	None	replace
322	[BUG]  [BUGGY]  Validator  validator!=  null  &&  validator.isLastGeneration()?  getReferencedType()  :  this;  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Validator  validator!=  null  &&  validator.isLastGeneration()?  getReferencedType()  :  this;  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Validator  validator!=  null  &&  validator.isLastGeneration()?  getReferencedType()  :  this;	  validator!=    null    &&    validator.isLastGeneration()?    getReferencedType()    :    this;    	non-compiled	[CE]  ';'  expected	139	None	replace
323	[BUG]  [BUGGY]  Register.isLastGeneration()?  getReferencedType()  :  null;  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Register.isLastGeneration()?  getReferencedType()  :  null;  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Register.isLastGeneration()?  getReferencedType()  :  null;	  Register.isLastGeneration()?    getReferencedType()    :    this;    	non-compiled	[CE]  not  a  statement	245	None	replace
324	[BUG]  [BUGGY]  Register.isFirstGeneration()?  getReferencedType()  :  this;  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Register.isFirstGeneration()?  getReferencedType()  :  this;  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Register.isFirstGeneration()?  getReferencedType()  :  this;	  Register.isLastGeneration()?    getReferencedType()    :    this;    	non-compiled	[CE]  not  a  statement	245	None	replace
325	[BUG]  [BUGGY]  Register.isLastGeneration()?  getReferencedType()  :  registry;  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Register.isLastGeneration()?  getReferencedType()  :  registry;  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Register.isLastGeneration()?  getReferencedType()  :  registry;	  Register.isLastGeneration()?    getReferencedType()    :    this;    	non-compiled	[CE]  not  a  statement	245	None	replace
326	[BUG]  [BUGGY]  Register.isLastGeneration()?  getReferencedType()  :  REFERRED_TYPE;  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Register.isLastGeneration()?  getReferencedType()  :  REFERRED_TYPE;  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Register.isLastGeneration()?  getReferencedType()  :  REFERRED_TYPE;	  Register.isLastGeneration()?    getReferencedType()    :    this;    	non-compiled	[CE]  not  a  statement	245	None	replace
327	[BUG]  [BUGGY]  Register.isLastGeneration()?  getReferencedType()  :  REFERENCE_TYPE;  [CE]  not  a  statement  [FE]                            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Register.isLastGeneration()?  getReferencedType()  :  REFERENCE_TYPE;  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Register.isLastGeneration()?  getReferencedType()  :  REFERENCE_TYPE;	  Register.isLastGeneration()?    getReferencedType()    :    this;    	non-compiled	[CE]  not  a  statement	245	None	replace
328	[BUG]  [BUGGY]  PropertyContinuation  propertyContinuations  =  registry.isLastGeneration()?  getReferencedType()  :  Collections.EMPTY_LIST;  [CE]  cannot  find  symbol  Collections  [FE]                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  PropertyContinuation  propertyContinuations  =  registry.isLastGeneration()?  getReferencedType()  :  Collections.EMPTY_LIST;  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	PropertyContinuation  propertyContinuations  =  registry.isLastGeneration()?  getReferencedType()  :  Collections.EMPTY_LIST;	  PropertyContinuation    propertyContinuations    =    registry.isLastGeneration()?    getReferencedType()    :    null;    	non-compiled	[CE]  cannot  find  symbol  Collections	145	None	replace
329	[BUG]  [BUGGY]  PropertyContinuation  propertyContinuations  =  registry.isLastGeneration()?  getReferencedType()  :  type;  [CE]  cannot  find  symbol  type  [FE]                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  PropertyContinuation  propertyContinuations  =  registry.isLastGeneration()?  getReferencedType()  :  type;  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	PropertyContinuation  propertyContinuations  =  registry.isLastGeneration()?  getReferencedType()  :  type;	  PropertyContinuation    propertyContinuations    =    registry.isLastGeneration()?    getReferencedType()    :    null;    	non-compiled	[CE]  cannot  find  symbol  type	145	None	replace
330	[BUG]  [BUGGY]  PropertyContinuation  propertyContinuations  =  registry.isFirstGeneration()?  getReferencedType()  :  null;  [CE]  cannot  find  symbol  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  PropertyContinuation  propertyContinuations  =  registry.isFirstGeneration()?  getReferencedType()  :  null;  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	PropertyContinuation  propertyContinuations  =  registry.isFirstGeneration()?  getReferencedType()  :  null;	  PropertyContinuation    propertyContinuations    =    registry.isLastGeneration()?    getReferencedType()    :    null;    	non-compiled	[CE]  cannot  find  symbol	145	None	replace
331	[BUG]  [BUGGY]  PropertyContinuation  propertyContinuations  =  registry.isLastGeneration()?  getReferencedType()  :  Collections.emptyList();  [CE]  cannot  find  symbol  Collections  [FE]                            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  PropertyContinuation  propertyContinuations  =  registry.isLastGeneration()?  getReferencedType()  :  Collections.emptyList();  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	PropertyContinuation  propertyContinuations  =  registry.isLastGeneration()?  getReferencedType()  :  Collections.emptyList();	  PropertyContinuation    propertyContinuations    =    registry.isLastGeneration()?    getReferencedType()    :    null;    	non-compiled	[CE]  cannot  find  symbol  Collections	145	None	replace
332	[BUG]  [BUGGY]  PropertyContinuation  propertyContinuations  =  registry.isLastGeneration()?  getReferencedType()  :  DEFAULT_TYPE;  [CE]  cannot  find  symbol  DEFAULT_TYPE  [FE]                              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  PropertyContinuation  propertyContinuations  =  registry.isLastGeneration()?  getReferencedType()  :  DEFAULT_TYPE;  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	PropertyContinuation  propertyContinuations  =  registry.isLastGeneration()?  getReferencedType()  :  DEFAULT_TYPE;	  PropertyContinuation    propertyContinuations    =    registry.isLastGeneration()?    getReferencedType()    :    null;    	non-compiled	[CE]  cannot  find  symbol  DEFAULT_TYPE	145	None	replace
333	[BUG]  [BUGGY]  Predicates.checkState(resolved,  detectImplicitPrototypeCycle());  [CE]  cannot  find  symbol  Predicates  [FE]                            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Predicates.checkState(resolved,  detectImplicitPrototypeCycle());  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Predicates.checkState(resolved,  detectImplicitPrototypeCycle());	  Predicates.checkState(detectImplicitPrototypeCycle());    	non-compiled	[CE]  cannot  find  symbol  Predicates	126	None	replace
334	[BUG]  [BUGGY]  Predicates.checkState(!resolved  &&  detectImplicitPrototypeCycle());  [CE]  cannot  find  symbol  Predicates  [FE]                              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Predicates.checkState(!resolved  &&  detectImplicitPrototypeCycle());  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Predicates.checkState(!resolved  &&  detectImplicitPrototypeCycle());	  Predicates.checkState(detectImplicitPrototypeCycle());    	non-compiled	[CE]  cannot  find  symbol  Predicates	126	None	replace
335	[BUG]  [BUGGY]  Predicates.checkState(validator.detectImplicitPrototypeCycle());  [CE]  cannot  find  symbol  [FE]                                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Predicates.checkState(validator.detectImplicitPrototypeCycle());  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Predicates.checkState(validator.detectImplicitPrototypeCycle());	  Predicates.checkState(detectImplicitPrototypeCycle());    	non-compiled	[CE]  cannot  find  symbol	126	None	replace
336	[BUG]  [BUGGY]  Predicates.checkState(detectImplicitTypeCycle());  [CE]  cannot  find  symbol  [FE]                                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Predicates.checkState(detectImplicitTypeCycle());  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Predicates.checkState(detectImplicitTypeCycle());	  Predicates.checkState(detectImplicitPrototypeCycle());    	non-compiled	[CE]  cannot  find  symbol	126	None	replace
337	[BUG]  [BUGGY]  Predicates.checkState(validator.detectPrototypeCycle());  [CE]  cannot  find  symbol  [FE]                                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Predicates.checkState(validator.detectPrototypeCycle());  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Predicates.checkState(validator.detectPrototypeCycle());	  Predicates.checkState(detectImplicitPrototypeCycle());    	non-compiled	[CE]  cannot  find  symbol	126	None	replace
338	[BUG]  [BUGGY]  timeout  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(propertyContinuations    ==    null)    {    finishPropertyContinuations();    }    if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  if(propertyContinuations  ==  null)  {  finishPropertyContinuations();  }  if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	add	if(propertyContinuations        ==        null)        {        finishPropertyContinuations();        }        if(propertyContinuations!=    null)    {    finishPropertyContinuations();    }    if(propertyContinuations  ==  null)  {  finishPropertyContinuations();  }  if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }	  timeout    	compilable	timeout	43	1	add
339	[BUG]  [BUGGY]  if(propertyContinuations    ==    null)    {    finishPropertyContinuations();    }    if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  if(propertyContinuations  ==  null)  {  finishPropertyContinuations();  }  if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  timeout  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(propertyContinuations    ==    null)    {    finishPropertyContinuations();    }    if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  if(propertyContinuations  ==  null)  {  finishPropertyContinuations();  }  if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations        ==        null)        {        finishPropertyContinuations();        }        if(propertyContinuations!=    null)    {    finishPropertyContinuations();    }    if(propertyContinuations  ==  null)  {  finishPropertyContinuations();  }  if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }	  timeout    	compilable	timeout	43	1	add
340	[BUG]  [BUGGY]  if(propertyContinuations    ==    null)    {    finishPropertyContinuations();    }    if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  if(propertyContinuations  ==  null)  {  finishPropertyContinuations();  }  if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  if(propertyContinuations!=  null)  {  finishPropertyContinu  [CE]  ';'  expected  [FE]                            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(propertyContinuations    ==    null)    {    finishPropertyContinuations();    }    if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  if(propertyContinuations  ==  null)  {  finishPropertyContinuations();  }  if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  if(propertyContinuations!=  null)  {  finishPropertyContinu  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations        ==        null)        {        finishPropertyContinuations();        }        if(propertyContinuations!=    null)    {    finishPropertyContinuations();    }    if(propertyContinuations  ==  null)  {  finishPropertyContinuations();  }  if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  if(propertyContinuations!=  null)  {  finishPropertyContinu	  timeout    	non-compiled	[CE]  ';'  expected	43	None	add
341	[BUG]  [BUGGY]  if(propertyContinuations    ==    null)    {    finishPropertyContinuations();    }    if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  if(propertyContinuations  ==  null)  {  finishPropertyContinuations();  }  if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  if(propertyContinuations!=  null)  {  finishProperty  [CE]  ';'  expected  [FE]                              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(propertyContinuations    ==    null)    {    finishPropertyContinuations();    }    if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  if(propertyContinuations  ==  null)  {  finishPropertyContinuations();  }  if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  if(propertyContinuations!=  null)  {  finishProperty  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations        ==        null)        {        finishPropertyContinuations();        }        if(propertyContinuations!=    null)    {    finishPropertyContinuations();    }    if(propertyContinuations  ==  null)  {  finishPropertyContinuations();  }  if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  if(propertyContinuations!=  null)  {  finishProperty	  timeout    	non-compiled	[CE]  ';'  expected	43	None	add
342	[BUG]  [BUGGY]  if(propertyContinuations    ==    null)    {    finishPropertyContinuations();    }    if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  if(propertyContinuations  ==  null)  {  finishPropertyContinuations();  }  if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  if(propertyContinuations!=  null)  {  finishPropert  [CE]  ';'  expected  [FE]                                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(propertyContinuations    ==    null)    {    finishPropertyContinuations();    }    if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  if(propertyContinuations  ==  null)  {  finishPropertyContinuations();  }  if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  if(propertyContinuations!=  null)  {  finishPropert  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations        ==        null)        {        finishPropertyContinuations();        }        if(propertyContinuations!=    null)    {    finishPropertyContinuations();    }    if(propertyContinuations  ==  null)  {  finishPropertyContinuations();  }  if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  if(propertyContinuations!=  null)  {  finishPropert	  timeout    	non-compiled	[CE]  ';'  expected	43	None	add
343	[BUG]  [BUGGY]  if(propertyContinuations    ==    null)    {    finishPropertyContinuations();    }    if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  if(propertyContinuations  ==  null)  {  finishPropertyContinuations();  }  if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  if(propertyContinuations!=  null)  {  [CE]  illegal  start  of  expression  [FE]                                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(propertyContinuations    ==    null)    {    finishPropertyContinuations();    }    if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  if(propertyContinuations  ==  null)  {  finishPropertyContinuations();  }  if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  if(propertyContinuations!=  null)  {  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations        ==        null)        {        finishPropertyContinuations();        }        if(propertyContinuations!=    null)    {    finishPropertyContinuations();    }    if(propertyContinuations  ==  null)  {  finishPropertyContinuations();  }  if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  if(propertyContinuations!=  null)  {	  timeout    	non-compiled	[CE]  illegal  start  of  expression	43	None	add
344	[BUG]  [BUGGY]  timeout  [FE]                                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(propertyContinuations    ==    null)    {    finishPropertyContinuations();    }    if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	add	if(propertyContinuations        ==        null)        {        finishPropertyContinuations();        }        if(propertyContinuations!=    null)    {    finishPropertyContinuations();    }    if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }	  timeout    	compilable	timeout	43	1	add
345	[BUG]  [BUGGY]  if(propertyContinuations    ==    null)    {    finishPropertyContinuations();    }    if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  timeout  [FE]                                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(propertyContinuations    ==    null)    {    finishPropertyContinuations();    }    if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations        ==        null)        {        finishPropertyContinuations();        }        if(propertyContinuations!=    null)    {    finishPropertyContinuations();    }    if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }	  timeout    	compilable	timeout	43	1	add
346	[BUG]  [BUGGY]  if(propertyContinuations    ==    null)    {    finishPropertyContinuations();    }    if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  if(propertyContinuations  ==  null)  {  finishPropertyContinuations();  }  if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  if(propertyContinuations!=  null)  {  finishProper  [CE]  ';'  expected  [FE]                                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(propertyContinuations    ==    null)    {    finishPropertyContinuations();    }    if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  if(propertyContinuations  ==  null)  {  finishPropertyContinuations();  }  if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  if(propertyContinuations!=  null)  {  finishProper  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations        ==        null)        {        finishPropertyContinuations();        }        if(propertyContinuations!=    null)    {    finishPropertyContinuations();    }    if(propertyContinuations  ==  null)  {  finishPropertyContinuations();  }  if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  if(propertyContinuations!=  null)  {  finishProper	  timeout    	non-compiled	[CE]  ';'  expected	43	None	add
347	[BUG]  [BUGGY]  if(propertyContinuations    ==    null)    {    finishPropertyContinuations();    }    if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  if(propertyContinuations  ==  null)  {  finishPropertyContinuations();  }  if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  if(propertyContinuations!=  null)  {  finishPropertyContin  [CE]  ';'  expected  [FE]                                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(propertyContinuations    ==    null)    {    finishPropertyContinuations();    }    if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  if(propertyContinuations  ==  null)  {  finishPropertyContinuations();  }  if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  if(propertyContinuations!=  null)  {  finishPropertyContin  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations        ==        null)        {        finishPropertyContinuations();        }        if(propertyContinuations!=    null)    {    finishPropertyContinuations();    }    if(propertyContinuations  ==  null)  {  finishPropertyContinuations();  }  if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  if(propertyContinuations!=  null)  {  finishPropertyContin	  timeout    	non-compiled	[CE]  ';'  expected	43	None	add
348	[BUG]  [BUGGY]  PropertyContinuations  <  PropertyContinuation>  startPropertyContinuations(t);  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  PropertyContinuations  <  PropertyContinuation>  startPropertyContinuations(t);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	PropertyContinuations  <  PropertyContinuation>  startPropertyContinuations(t);	  PropertyContinuations    <    PropertyContinuation>    startPropertyContinuations();    	non-compiled	[CE]  ';'  expected	117	None	replace
349	[BUG]  [BUGGY]  PropertyContinuations  <  PropertyContinuation>  startPropertyContinuations(registry);  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  PropertyContinuations  <  PropertyContinuation>  startPropertyContinuations(registry);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	PropertyContinuations  <  PropertyContinuation>  startPropertyContinuations(registry);	  PropertyContinuations    <    PropertyContinuation>    startPropertyContinuations();    	non-compiled	[CE]  ';'  expected	117	None	replace
350	[BUG]  [BUGGY]  PropertyContinuations  <  PropertyContinuation>  startProperties();  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  PropertyContinuations  <  PropertyContinuation>  startProperties();  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	PropertyContinuations  <  PropertyContinuation>  startProperties();	  PropertyContinuations    <    PropertyContinuation>    startPropertyContinuations();    	non-compiled	[CE]  ';'  expected	117	None	replace
351	[BUG]  [BUGGY]  PropertyContinuations  <  PropertyContinuation>  startPropertyContinuations(propertyContinuations);  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  PropertyContinuations  <  PropertyContinuation>  startPropertyContinuations(propertyContinuations);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	PropertyContinuations  <  PropertyContinuation>  startPropertyContinuations(propertyContinuations);	  PropertyContinuations    <    PropertyContinuation>    startPropertyContinuations();    	non-compiled	[CE]  ';'  expected	117	None	replace
352	[BUG]  [BUGGY]  propertyContinuations  =  new  ArrayList  <  PropertyContinuation>(propertyFields);  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  propertyContinuations  =  new  ArrayList  <  PropertyContinuation>(propertyFields);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	propertyContinuations  =  new  ArrayList  <  PropertyContinuation>(propertyFields);	  if(propertyContinuations!=    null)    {    finishPropertyFields();    }    else    {    getPropertyContinuations().addAll(propertyContinuations);    }    	non-compiled	[CE]  cannot  find  symbol	119	None	replace
353	[BUG]  [BUGGY]  propertyContinuations  =  new  ArrayList  <  PropertyContinuation>(propertyFields.size());  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  propertyContinuations  =  new  ArrayList  <  PropertyContinuation>(propertyFields.size());  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	propertyContinuations  =  new  ArrayList  <  PropertyContinuation>(propertyFields.size());	  if(propertyContinuations!=    null)    {    finishPropertyFields();    }    else    {    getPropertyContinuations().addAll(propertyContinuations);    }    	non-compiled	[CE]  cannot  find  symbol	119	None	replace
354	[BUG]  [BUGGY]  propertyContinuations  =  new  LinkedList  <  PropertyContinuation>();  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  propertyContinuations  =  new  LinkedList  <  PropertyContinuation>();  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	propertyContinuations  =  new  LinkedList  <  PropertyContinuation>();	  if(propertyContinuations!=    null)    {    finishPropertyFields();    }    else    {    getPropertyContinuations().addAll(propertyContinuations);    }    	non-compiled	[CE]  cannot  find  symbol	119	None	replace
355	[BUG]  [BUGGY]  propertyContinuations  =  Collections.emptyList();  [CE]  cannot  find  symbol  Collections  [FE]                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  propertyContinuations  =  Collections.emptyList();  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	propertyContinuations  =  Collections.emptyList();	  if(propertyContinuations!=    null)    {    finishPropertyFields();    }    else    {    getPropertyContinuations().addAll(propertyContinuations);    }    	non-compiled	[CE]  cannot  find  symbol  Collections	119	None	replace
356	[BUG]  [BUGGY]  BundlePropertyContinuations  registry  =  getBundlePropertyContinuations(propertyContinuations);  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  BundlePropertyContinuations  registry  =  getBundlePropertyContinuations(propertyContinuations);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	BundlePropertyContinuations  registry  =  getBundlePropertyContinuations(propertyContinuations);	  BundlePropertyContinuations    registry    =    getBundlePropertyContinuations();    	non-compiled	[CE]  cannot  find  symbol	99	None	replace
357	[BUG]  [BUGGY]  BundlePropertyContinuations  registry  =  getBundlePropertyContinuations(false);  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  BundlePropertyContinuations  registry  =  getBundlePropertyContinuations(false);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	BundlePropertyContinuations  registry  =  getBundlePropertyContinuations(false);	  BundlePropertyContinuations    registry    =    getBundlePropertyContinuations();    	non-compiled	[CE]  cannot  find  symbol	99	None	replace
358	[BUG]  [BUGGY]  BundlePropertyContinuations  registry  =  getBundlePropertyContinuations(resolved);  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  BundlePropertyContinuations  registry  =  getBundlePropertyContinuations(resolved);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	BundlePropertyContinuations  registry  =  getBundlePropertyContinuations(resolved);	  BundlePropertyContinuations    registry    =    getBundlePropertyContinuations();    	non-compiled	[CE]  cannot  find  symbol	99	None	replace
359	[BUG]  [BUGGY]  BundlePropertyContinuations  registry  =  getBundlePropertyContinuations(null);  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  BundlePropertyContinuations  registry  =  getBundlePropertyContinuations(null);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	BundlePropertyContinuations  registry  =  getBundlePropertyContinuations(null);	  BundlePropertyContinuations    registry    =    getBundlePropertyContinuations();    	non-compiled	[CE]  cannot  find  symbol	99	None	replace
360	[BUG]  [BUGGY]  BundlePropertyContinuations  registry  =  getBundlePropertyContinuations(true);  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  BundlePropertyContinuations  registry  =  getBundlePropertyContinuations(true);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	BundlePropertyContinuations  registry  =  getBundlePropertyContinuations(true);	  BundlePropertyContinuations    registry    =    getBundlePropertyContinuations();    	non-compiled	[CE]  cannot  find  symbol	99	None	replace
361	[BUG]  [BUGGY]  PropertyContinuation  propertyContinuations  =  getPropertyContinuations(propertyNode);  [CE]  cannot  find  symbol  propertyNode  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  PropertyContinuation  propertyContinuations  =  getPropertyContinuations(propertyNode);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	PropertyContinuation  propertyContinuations  =  getPropertyContinuations(propertyNode);	  PropertyContinuation    propertyContinuations    =    getPropertyContinuations();    	non-compiled	[CE]  cannot  find  symbol  propertyNode	147	None	replace
362	[BUG]  [BUGGY]  PropertyContinuation  propertyContinuations  =  getPropertyContinuations(propertyName);  [CE]  cannot  find  symbol  propertyName  [FE]                            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  PropertyContinuation  propertyContinuations  =  getPropertyContinuations(propertyName);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	PropertyContinuation  propertyContinuations  =  getPropertyContinuations(propertyName);	  PropertyContinuation    propertyContinuations    =    getPropertyContinuations();    	non-compiled	[CE]  cannot  find  symbol  propertyName	147	None	replace
363	[BUG]  [BUGGY]  PropertyContinuation  propertyContinuations  =  getPropertyContinuations(resolved);  [CE]  cannot  find  symbol  [FE]                              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  PropertyContinuation  propertyContinuations  =  getPropertyContinuations(resolved);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	PropertyContinuation  propertyContinuations  =  getPropertyContinuations(resolved);	  PropertyContinuation    propertyContinuations    =    getPropertyContinuations();    	non-compiled	[CE]  cannot  find  symbol	147	None	replace
364	[BUG]  [BUGGY]  PropertyContinuation  propertyContinuations  =  getPropertyContinuations(propertyNamingStrategy);  [CE]  cannot  find  symbol  propertyNamingStrategy  [FE]                                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  PropertyContinuation  propertyContinuations  =  getPropertyContinuations(propertyNamingStrategy);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	PropertyContinuation  propertyContinuations  =  getPropertyContinuations(propertyNamingStrategy);	  PropertyContinuation    propertyContinuations    =    getPropertyContinuations();    	non-compiled	[CE]  cannot  find  symbol  propertyNamingStrategy	147	None	replace
365	[BUG]  [BUGGY]  PropertyContinuation  propertyContinuations  =  getPropertyContinuations(registry);  [CE]  cannot  find  symbol  [FE]                                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  PropertyContinuation  propertyContinuations  =  getPropertyContinuations(registry);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	PropertyContinuation  propertyContinuations  =  getPropertyContinuations(registry);	  PropertyContinuation    propertyContinuations    =    getPropertyContinuations();    	non-compiled	[CE]  cannot  find  symbol	147	None	replace
366	[BUG]  [BUGGY]  PropertyContinuation  propertyContinuations  =  getPropertyContinuations(property);  [CE]  cannot  find  symbol  property  [FE]                                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  PropertyContinuation  propertyContinuations  =  getPropertyContinuations(property);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	PropertyContinuation  propertyContinuations  =  getPropertyContinuations(property);	  PropertyContinuation    propertyContinuations    =    getPropertyContinuations();    	non-compiled	[CE]  cannot  find  symbol  property	147	None	replace
367	[BUG]  [BUGGY]  prosecutor  &&  resolved)  {  finishPropertyContinuations();  }  else  {  registry.isLastGeneration()  :  this;  }  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  prosecutor  &&  resolved)  {  finishPropertyContinuations();  }  else  {  registry.isLastGeneration()  :  this;  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	prosecutor  &&  resolved)  {  finishPropertyContinuations();  }  else  {  registry.isLastGeneration()  :  this;  }	  aughtExceptionHandler    &&    resolved)    {    finishPropertyContinuations();    }    else    {    registry.isLastGeneration()    :    this;    }    	non-compiled	[CE]  not  a  statement	243	None	replace
368	[BUG]  [BUGGY]  if(resolved)  {  startPropertyContinuations();  }  else  {  registry.isLastGeneration()  :  this;  }  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(resolved)  {  startPropertyContinuations();  }  else  {  registry.isLastGeneration()  :  this;  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(resolved)  {  startPropertyContinuations();  }  else  {  registry.isLastGeneration()  :  this;  }	  aughtExceptionHandler    &&    resolved)    {    finishPropertyContinuations();    }    else    {    registry.isLastGeneration()    :    this;    }    	non-compiled	[CE]  ';'  expected	243	None	replace
369	[BUG]  [BUGGY]  prosecutor  &&  resolved)  {  finishPropertyContinuations();  }  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  prosecutor  &&  resolved)  {  finishPropertyContinuations();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	prosecutor  &&  resolved)  {  finishPropertyContinuations();  }	  aughtExceptionHandler    &&    resolved)    {    finishPropertyContinuations();    }    else    {    registry.isLastGeneration()    :    this;    }    	non-compiled	[CE]  not  a  statement	243	None	replace
370	[BUG]  [BUGGY]  if(resolved)  {  finishPropertyContinuations();  }  else  {  registry.isLastGeneration()  :  null;  }  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(resolved)  {  finishPropertyContinuations();  }  else  {  registry.isLastGeneration()  :  null;  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(resolved)  {  finishPropertyContinuations();  }  else  {  registry.isLastGeneration()  :  null;  }	  aughtExceptionHandler    &&    resolved)    {    finishPropertyContinuations();    }    else    {    registry.isLastGeneration()    :    this;    }    	non-compiled	[CE]  ';'  expected	243	None	replace
371	[BUG]  [BUGGY]  luate(registry,  enclosing)  {  finishPropertyContinuations();  }  else  {  registry.isFirstGeneration()?  getReferencedType()  :  this;  }  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  luate(registry,  enclosing)  {  finishPropertyContinuations();  }  else  {  registry.isFirstGeneration()?  getReferencedType()  :  this;  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	luate(registry,  enclosing)  {  finishPropertyContinuations();  }  else  {  registry.isFirstGeneration()?  getReferencedType()  :  this;  }	  luate(registry,    resolved)    {    finishPropertyContinuations();    }    else    {    registry.isFirstGeneration()?    getReferencedType()    :    this;    }    	non-compiled	[CE]  ';'  expected	166	None	replace
372	[BUG]  [BUGGY]  luate(registry,  enclosing)  {  startPropertyContinuations();  }  else  {  registry.isFirstGeneration()?  getReferencedType()  :  this;  }  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  luate(registry,  enclosing)  {  startPropertyContinuations();  }  else  {  registry.isFirstGeneration()?  getReferencedType()  :  this;  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	luate(registry,  enclosing)  {  startPropertyContinuations();  }  else  {  registry.isFirstGeneration()?  getReferencedType()  :  this;  }	  luate(registry,    resolved)    {    finishPropertyContinuations();    }    else    {    registry.isFirstGeneration()?    getReferencedType()    :    this;    }    	non-compiled	[CE]  ';'  expected	166	None	replace
373	[BUG]  [BUGGY]  luate(registry,  enclosing)  {  getPropertyContinuations();  }  else  {  registry.isFirstGeneration()?  getReferencedType()  :  this;  }  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  luate(registry,  enclosing)  {  getPropertyContinuations();  }  else  {  registry.isFirstGeneration()?  getReferencedType()  :  this;  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	luate(registry,  enclosing)  {  getPropertyContinuations();  }  else  {  registry.isFirstGeneration()?  getReferencedType()  :  this;  }	  luate(registry,    resolved)    {    finishPropertyContinuations();    }    else    {    registry.isFirstGeneration()?    getReferencedType()    :    this;    }    	non-compiled	[CE]  ';'  expected	166	None	replace
374	[BUG]  [BUGGY]  luate(registry,  validated)  {  finishPropertyContinuations();  }  else  {  registry.isFirstGeneration()?  getReferencedType()  :  this;  }  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  luate(registry,  validated)  {  finishPropertyContinuations();  }  else  {  registry.isFirstGeneration()?  getReferencedType()  :  this;  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	luate(registry,  validated)  {  finishPropertyContinuations();  }  else  {  registry.isFirstGeneration()?  getReferencedType()  :  this;  }	  luate(registry,    resolved)    {    finishPropertyContinuations();    }    else    {    registry.isFirstGeneration()?    getReferencedType()    :    this;    }    	non-compiled	[CE]  ';'  expected	166	None	replace
375	[BUG]  [BUGGY]  luate(registry,  validator)  {  finishPropertyContinuations();  }  else  {  registry.isFirstGeneration()?  getReferencedType()  :  this;  }  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  luate(registry,  validator)  {  finishPropertyContinuations();  }  else  {  registry.isFirstGeneration()?  getReferencedType()  :  this;  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	luate(registry,  validator)  {  finishPropertyContinuations();  }  else  {  registry.isFirstGeneration()?  getReferencedType()  :  this;  }	  luate(registry,    resolved)    {    finishPropertyContinuations();    }    else    {    registry.isFirstGeneration()?    getReferencedType()    :    this;    }    	non-compiled	[CE]  ';'  expected	166	None	replace
376	[BUG]  [BUGGY]  ensurePropertyContinuations()  &&  registry.isFirstGeneration()?  getReferencedType()  :  this;  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  ensurePropertyContinuations()  &&  registry.isFirstGeneration()?  getReferencedType()  :  this;  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	ensurePropertyContinuations()  &&  registry.isFirstGeneration()?  getReferencedType()  :  this;	  ensurePropertyContinuations()    &&    registry.isLastGeneration()?    getReferencedType()    :    this;    	non-compiled	[CE]  not  a  statement	15	None	replace
377	[BUG]  [BUGGY]  ensurePropertyContinuations()  ||  registry.isLastGeneration()?  getReferencedType()  :  this;  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  ensurePropertyContinuations()  ||  registry.isLastGeneration()?  getReferencedType()  :  this;  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	ensurePropertyContinuations()  ||  registry.isLastGeneration()?  getReferencedType()  :  this;	  ensurePropertyContinuations()    &&    registry.isLastGeneration()?    getReferencedType()    :    this;    	non-compiled	[CE]  not  a  statement	15	None	replace
378	[BUG]  [BUGGY]  ensurePropertyContinuations()  &&  registry.isLastGeneration()?  getType()  :  this;  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  ensurePropertyContinuations()  &&  registry.isLastGeneration()?  getType()  :  this;  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	ensurePropertyContinuations()  &&  registry.isLastGeneration()?  getType()  :  this;	  ensurePropertyContinuations()    &&    registry.isLastGeneration()?    getReferencedType()    :    this;    	non-compiled	[CE]  not  a  statement	15	None	replace
379	[BUG]  [BUGGY]  ensurePropertyContinuations()  &&  registry.isLastGeneration()?  getReferencedType()  :  false;  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  ensurePropertyContinuations()  &&  registry.isLastGeneration()?  getReferencedType()  :  false;  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	ensurePropertyContinuations()  &&  registry.isLastGeneration()?  getReferencedType()  :  false;	  ensurePropertyContinuations()    &&    registry.isLastGeneration()?    getReferencedType()    :    this;    	non-compiled	[CE]  not  a  statement	15	None	replace
380	[BUG]  [BUGGY]  ensurePropertyContinuations()  &&  registry.isLastGeneration()?  getReferencedType()  :  super;  [CE]  '.'  expected  [FE]                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  ensurePropertyContinuations()  &&  registry.isLastGeneration()?  getReferencedType()  :  super;  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	ensurePropertyContinuations()  &&  registry.isLastGeneration()?  getReferencedType()  :  super;	  ensurePropertyContinuations()    &&    registry.isLastGeneration()?    getReferencedType()    :    this;    	non-compiled	[CE]  '.'  expected	15	None	replace
381	[BUG]  [BUGGY]  propertyContinuations  =  new  LinkedList  <  PropertyContinuation>(propertyContinuations);  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  propertyContinuations  =  new  LinkedList  <  PropertyContinuation>(propertyContinuations);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	propertyContinuations  =  new  LinkedList  <  PropertyContinuation>(propertyContinuations);	  propertyContinuations    =    new    ArrayList    <    PropertyContinuation>(propertyContinuations);    	non-compiled	[CE]  cannot  find  symbol	101	None	replace
382	[BUG]  [BUGGY]  PropertyContinuation>  propertyContinuations  =  new  ArrayList  <  PropertyContinuation>(propertyContinuations);  [CE]  cannot  find  symbol  PropertyContinuation  [FE]                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  PropertyContinuation>  propertyContinuations  =  new  ArrayList  <  PropertyContinuation>(propertyContinuations);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	PropertyContinuation>  propertyContinuations  =  new  ArrayList  <  PropertyContinuation>(propertyContinuations);	  propertyContinuations    =    new    ArrayList    <    PropertyContinuation>(propertyContinuations);    	non-compiled	[CE]  cannot  find  symbol  PropertyContinuation	101	None	replace
383	[BUG]  [BUGGY]  PropertyContinuation  propertyContinuations  =  new  ArrayList  <  PropertyContinuation>(propertyContinuations);  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  PropertyContinuation  propertyContinuations  =  new  ArrayList  <  PropertyContinuation>(propertyContinuations);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	PropertyContinuation  propertyContinuations  =  new  ArrayList  <  PropertyContinuation>(propertyContinuations);	  propertyContinuations    =    new    ArrayList    <    PropertyContinuation>(propertyContinuations);    	non-compiled	[CE]  cannot  find  symbol	101	None	replace
384	[BUG]  [BUGGY]  PropertyContinuation  propertyContinuations  =  new  LinkedList  <  PropertyContinuation>(propertyContinuations);  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  PropertyContinuation  propertyContinuations  =  new  LinkedList  <  PropertyContinuation>(propertyContinuations);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	PropertyContinuation  propertyContinuations  =  new  LinkedList  <  PropertyContinuation>(propertyContinuations);	  propertyContinuations    =    new    ArrayList    <    PropertyContinuation>(propertyContinuations);    	non-compiled	[CE]  cannot  find  symbol	101	None	replace
385	[BUG]  [BUGGY]  PropertyContinuation>  propertyContinuations  =  new  LinkedList  <  PropertyContinuation>(propertyContinuations);  [CE]  cannot  find  symbol  PropertyContinuation  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  PropertyContinuation>  propertyContinuations  =  new  LinkedList  <  PropertyContinuation>(propertyContinuations);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	PropertyContinuation>  propertyContinuations  =  new  LinkedList  <  PropertyContinuation>(propertyContinuations);	  propertyContinuations    =    new    ArrayList    <    PropertyContinuation>(propertyContinuations);    	non-compiled	[CE]  cannot  find  symbol  PropertyContinuation	101	None	replace
386	[BUG]  [BUGGY]  PropertyContinuation[]  propertyContinuations  =  new  PropertyContinuation[propertyContinuations.size()  ];  [CE]  cannot  find  symbol  [FE]                            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  PropertyContinuation[]  propertyContinuations  =  new  PropertyContinuation[propertyContinuations.size()  ];  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	PropertyContinuation[]  propertyContinuations  =  new  PropertyContinuation[propertyContinuations.size()  ];	  propertyContinuations    =    new    ArrayList    <    PropertyContinuation>(propertyContinuations);    	non-compiled	[CE]  cannot  find  symbol	101	None	replace
387	[BUG]  [BUGGY]  PropertyContinuation  propertyContinuations  =  registry.getPropertyContinuations(sourceName);  [CE]  cannot  find  symbol  [FE]                              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  PropertyContinuation  propertyContinuations  =  registry.getPropertyContinuations(sourceName);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	PropertyContinuation  propertyContinuations  =  registry.getPropertyContinuations(sourceName);	  PropertyContinuation    propertyContinuations    =    registry.getPropertyContinuations(propertyName);    	non-compiled	[CE]  cannot  find  symbol	149	None	replace
388	[BUG]  [BUGGY]  PropertyContinuation  propertyContinuations  =  registry.getPropertyContinuations(resolved);  [CE]  cannot  find  symbol  [FE]                                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  PropertyContinuation  propertyContinuations  =  registry.getPropertyContinuations(resolved);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	PropertyContinuation  propertyContinuations  =  registry.getPropertyContinuations(resolved);	  PropertyContinuation    propertyContinuations    =    registry.getPropertyContinuations(propertyName);    	non-compiled	[CE]  cannot  find  symbol	149	None	replace
389	[BUG]  [BUGGY]  PropertyContinuation  propertyContinuations  =  registry.getPropertyContinuations(name);  [CE]  cannot  find  symbol  name  [FE]                                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  PropertyContinuation  propertyContinuations  =  registry.getPropertyContinuations(name);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	PropertyContinuation  propertyContinuations  =  registry.getPropertyContinuations(name);	  PropertyContinuation    propertyContinuations    =    registry.getPropertyContinuations(propertyName);    	non-compiled	[CE]  cannot  find  symbol  name	149	None	replace
390	[BUG]  [BUGGY]  PropertyContinuation  propertyContinuations  =  registry.getPropertyContinuations(propertyNode);  [CE]  cannot  find  symbol  propertyNode  [FE]                                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  PropertyContinuation  propertyContinuations  =  registry.getPropertyContinuations(propertyNode);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	PropertyContinuation  propertyContinuations  =  registry.getPropertyContinuations(propertyNode);	  PropertyContinuation    propertyContinuations    =    registry.getPropertyContinuations(propertyName);    	non-compiled	[CE]  cannot  find  symbol  propertyNode	149	None	replace
391	[BUG]  [BUGGY]  PropertyContinuation  propertyContinuations  =  registry.getPropertyContinuations(RESULT_TYPE);  [CE]  cannot  find  symbol  RESULT_TYPE  [FE]                                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  PropertyContinuation  propertyContinuations  =  registry.getPropertyContinuations(RESULT_TYPE);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	PropertyContinuation  propertyContinuations  =  registry.getPropertyContinuations(RESULT_TYPE);	  PropertyContinuation    propertyContinuations    =    registry.getPropertyContinuations(propertyName);    	non-compiled	[CE]  cannot  find  symbol  RESULT_TYPE	149	None	replace
392	[BUG]  [BUGGY]  PropertyContinuation  propertyContinuations  =  registry.getPropertyContinuations(resolved,  propertyName);  [CE]  cannot  find  symbol  propertyName  [FE]                                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  PropertyContinuation  propertyContinuations  =  registry.getPropertyContinuations(resolved,  propertyName);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	PropertyContinuation  propertyContinuations  =  registry.getPropertyContinuations(resolved,  propertyName);	  PropertyContinuation    propertyContinuations    =    registry.getPropertyContinuations(propertyName);    	non-compiled	[CE]  cannot  find  symbol  propertyName	149	None	replace
393	[BUG]  [BUGGY]  aughtExceptionHandler.handleTypeCycle(t,  resolved);  [CE]  cannot  find  symbol  aughtExceptionHandler  [FE]              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  aughtExceptionHandler.handleTypeCycle(t,  resolved);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	aughtExceptionHandler.handleTypeCycle(t,  resolved);	  aughtExceptionHandler.handleTypeCycle(t,    propertyNode);    	non-compiled	[CE]  cannot  find  symbol  aughtExceptionHandler	228	None	replace
394	[BUG]  [BUGGY]  aughtExceptionHandler.handleTypeCycle(t,  type);  [CE]  cannot  find  symbol  type  [FE]                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  aughtExceptionHandler.handleTypeCycle(t,  type);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	aughtExceptionHandler.handleTypeCycle(t,  type);	  aughtExceptionHandler.handleTypeCycle(t,    propertyNode);    	non-compiled	[CE]  cannot  find  symbol  type	228	None	replace
395	[BUG]  [BUGGY]  aughtExceptionHandler.handleTypeCycle(t,  handleTypeCycle);  [CE]  cannot  find  symbol  handleTypeCycle  [FE]                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  aughtExceptionHandler.handleTypeCycle(t,  handleTypeCycle);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	aughtExceptionHandler.handleTypeCycle(t,  handleTypeCycle);	  aughtExceptionHandler.handleTypeCycle(t,    propertyNode);    	non-compiled	[CE]  cannot  find  symbol  handleTypeCycle	228	None	replace
396	[BUG]  [BUGGY]  aughtExceptionHandler.handleTypeCycle(t,  this);  [CE]  cannot  find  symbol  aughtExceptionHandler  [FE]                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  aughtExceptionHandler.handleTypeCycle(t,  this);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	aughtExceptionHandler.handleTypeCycle(t,  this);	  aughtExceptionHandler.handleTypeCycle(t,    propertyNode);    	non-compiled	[CE]  cannot  find  symbol  aughtExceptionHandler	228	None	replace
397	[BUG]  [BUGGY]  aughtExceptionHandler.handleTypeCycle(t,  propertyContinuations);  [CE]  cannot  find  symbol  aughtExceptionHandler  [FE]                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  aughtExceptionHandler.handleTypeCycle(t,  propertyContinuations);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	aughtExceptionHandler.handleTypeCycle(t,  propertyContinuations);	  aughtExceptionHandler.handleTypeCycle(t,    propertyNode);    	non-compiled	[CE]  cannot  find  symbol  aughtExceptionHandler	228	None	replace
398	[BUG]  [BUGGY]  propertyConuations.add(propertyName);  [CE]  cannot  find  symbol  propertyName  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  propertyConuations.add(propertyName);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	propertyConuations.add(propertyName);	  if(propertyContinuations!=    null)    {    finishPropertyConuations();    }    else    {    propertyContinuations.add(propertyName);    }    	non-compiled	[CE]  cannot  find  symbol  propertyName	154	None	replace
399	[BUG]  [BUGGY]  PropertyConuation  propertyContinuations  =  getPropertyConuations();  [CE]  cannot  find  symbol  [FE]                            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  PropertyConuation  propertyContinuations  =  getPropertyConuations();  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	PropertyConuation  propertyContinuations  =  getPropertyConuations();	  if(propertyContinuations!=    null)    {    finishPropertyConuations();    }    else    {    propertyContinuations.add(propertyName);    }    	non-compiled	[CE]  cannot  find  symbol	154	None	replace
400	[BUG]  [BUGGY]  PropertyConutations  registry  =  propertyContinuations.get(propertyName);  [CE]  cannot  find  symbol  [FE]                              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  PropertyConutations  registry  =  propertyContinuations.get(propertyName);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	PropertyConutations  registry  =  propertyContinuations.get(propertyName);	  if(propertyContinuations!=    null)    {    finishPropertyConuations();    }    else    {    propertyContinuations.add(propertyName);    }    	non-compiled	[CE]  cannot  find  symbol	154	None	replace
401	[BUG]  [BUGGY]  PropertyConuations  props  =  propertyContinuations.get(propertyName);  [CE]  cannot  find  symbol  [FE]                                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  PropertyConuations  props  =  propertyContinuations.get(propertyName);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	PropertyConuations  props  =  propertyContinuations.get(propertyName);	  if(propertyContinuations!=    null)    {    finishPropertyConuations();    }    else    {    propertyContinuations.add(propertyName);    }    	non-compiled	[CE]  cannot  find  symbol	154	None	replace
402	[BUG]  [BUGGY]  PropertyConuation  propertyContinuations  =  buildPropertyConuations(propertyName);  [CE]  cannot  find  symbol  [FE]                                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  PropertyConuation  propertyContinuations  =  buildPropertyConuations(propertyName);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	PropertyConuation  propertyContinuations  =  buildPropertyConuations(propertyName);	  if(propertyContinuations!=    null)    {    finishPropertyConuations();    }    else    {    propertyContinuations.add(propertyName);    }    	non-compiled	[CE]  cannot  find  symbol	154	None	replace
403	[BUG]  [BUGGY]  registry.isFirstGeneration()?  getReferencedType()  :  null;  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  registry.isFirstGeneration()?  getReferencedType()  :  null;  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	registry.isFirstGeneration()?  getReferencedType()  :  null;	  registry.isLastGeneration()?    getReferencedType()    :    null;    	non-compiled	[CE]  not  a  statement	72	None	replace
404	[BUG]  [BUGGY]  registry.isLastGeneration()?  getReferencedType()  :  NodeUtil.getNativeType(JSTypeNative.UNKNOWN_TYPE);  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  registry.isLastGeneration()?  getReferencedType()  :  NodeUtil.getNativeType(JSTypeNative.UNKNOWN_TYPE);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	registry.isLastGeneration()?  getReferencedType()  :  NodeUtil.getNativeType(JSTypeNative.UNKNOWN_TYPE);	  registry.isLastGeneration()?    getReferencedType()    :    null;    	non-compiled	[CE]  not  a  statement	72	None	replace
405	[BUG]  [BUGGY]  registry.isLastGeneration()?  getReferencedType()  :  NodeUtil.getNativeType(JSTypeNative.NO_TYPE);  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  registry.isLastGeneration()?  getReferencedType()  :  NodeUtil.getNativeType(JSTypeNative.NO_TYPE);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	registry.isLastGeneration()?  getReferencedType()  :  NodeUtil.getNativeType(JSTypeNative.NO_TYPE);	  registry.isLastGeneration()?    getReferencedType()    :    null;    	non-compiled	[CE]  not  a  statement	72	None	replace
406	[BUG]  [BUGGY]  GenericScope  <  JSType>  registry  =  getRegisteredScope();  [CE]  cannot  find  symbol  [FE]                                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  GenericScope  <  JSType>  registry  =  getRegisteredScope();  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	GenericScope  <  JSType>  registry  =  getRegisteredScope();	          GenericScope    <    JSType>    registry    =    getRegistry();    	non-compiled	[CE]  cannot  find  symbol	26	None	replace
407	[BUG]  [BUGGY]  GenericScope  <  JSType>  registry  =  getRegistry().getGenericScope();  [CE]  cannot  find  symbol  [FE]                                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  GenericScope  <  JSType>  registry  =  getRegistry().getGenericScope();  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	GenericScope  <  JSType>  registry  =  getRegistry().getGenericScope();	          GenericScope    <    JSType>    registry    =    getRegistry();    	non-compiled	[CE]  cannot  find  symbol	26	None	replace
408	[BUG]  [BUGGY]  GenericScope  <  JSType>  registry  =  getRegistryInstance();  [CE]  cannot  find  symbol  [FE]                                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  GenericScope  <  JSType>  registry  =  getRegistryInstance();  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	GenericScope  <  JSType>  registry  =  getRegistryInstance();	          GenericScope    <    JSType>    registry    =    getRegistry();    	non-compiled	[CE]  cannot  find  symbol	26	None	replace
409	[BUG]  [BUGGY]  GenericScope  <  JSType>  registry  =  getRegistry(t);  [CE]  cannot  find  symbol  [FE]                                            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  GenericScope  <  JSType>  registry  =  getRegistry(t);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	GenericScope  <  JSType>  registry  =  getRegistry(t);	          GenericScope    <    JSType>    registry    =    getRegistry();    	non-compiled	[CE]  cannot  find  symbol	26	None	replace
410	[BUG]  [BUGGY]  GenericScope  <  JSType>  registry  =  getRegister();  [CE]  cannot  find  symbol  [FE]                                              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  GenericScope  <  JSType>  registry  =  getRegister();  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	GenericScope  <  JSType>  registry  =  getRegister();	          GenericScope    <    JSType>    registry    =    getRegistry();    	non-compiled	[CE]  cannot  find  symbol	26	None	replace
411	[BUG]  [BUGGY]  GenericScope  <  JSType>  registry  =  getScope();  [CE]  cannot  find  symbol  [FE]                                                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  GenericScope  <  JSType>  registry  =  getScope();  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	GenericScope  <  JSType>  registry  =  getScope();	          GenericScope    <    JSType>    registry    =    getRegistry();    	non-compiled	[CE]  cannot  find  symbol	26	None	replace
412	[BUG]  [BUGGY]  Status.checkState(validator!=  null  &&  validator.isProperty());  finishPropertyContinuations();  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Status.checkState(validator!=  null  &&  validator.isProperty());  finishPropertyContinuations();  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Status.checkState(validator!=  null  &&  validator.isProperty());  finishPropertyContinuations();	  if(validator!=    null    &&    validator.isProperty())    {    finishPropertyContinuations();    }    	non-compiled	[CE]  cannot  find  symbol	210	None	replace
413	[BUG]  [BUGGY]  if(validator  ==  null  &&  validator.isProperty())  {  finishPropertyContinuations();  }  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(validator  ==  null  &&  validator.isProperty())  {  finishPropertyContinuations();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(validator  ==  null  &&  validator.isProperty())  {  finishPropertyContinuations();  }	  if(validator!=    null    &&    validator.isProperty())    {    finishPropertyContinuations();    }    	non-compiled	[CE]  cannot  find  symbol	210	None	replace
414	[BUG]  [BUGGY]  if(validator!=  null  &&  validator.isProperty()  ||  registry.isLastGeneration())  {  finishPropertyContinuations();  }  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(validator!=  null  &&  validator.isProperty()  ||  registry.isLastGeneration())  {  finishPropertyContinuations();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(validator!=  null  &&  validator.isProperty()  ||  registry.isLastGeneration())  {  finishPropertyContinuations();  }	  if(validator!=    null    &&    validator.isProperty())    {    finishPropertyContinuations();    }    	non-compiled	[CE]  cannot  find  symbol	210	None	replace
415	[BUG]  [BUGGY]  if(validator!=  null  &&  validator.isProperty())  {  startPropertyContinuations();  }  [CE]  cannot  find  symbol  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(validator!=  null  &&  validator.isProperty())  {  startPropertyContinuations();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(validator!=  null  &&  validator.isProperty())  {  startPropertyContinuations();  }	  if(validator!=    null    &&    validator.isProperty())    {    finishPropertyContinuations();    }    	non-compiled	[CE]  cannot  find  symbol	210	None	replace
416	[BUG]  [BUGGY]  if(validator!=  null  &&  validater.isProperty())  {  finishPropertyContinuations();  }  [CE]  cannot  find  symbol  validater  [FE]                            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(validator!=  null  &&  validater.isProperty())  {  finishPropertyContinuations();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(validator!=  null  &&  validater.isProperty())  {  finishPropertyContinuations();  }	  if(validator!=    null    &&    validator.isProperty())    {    finishPropertyContinuations();    }    	non-compiled	[CE]  cannot  find  symbol  validater	210	None	replace
417	[BUG]  [BUGGY]  if(validator!=  null  ||  validator.isProperty())  {  finishPropertyContinuations();  }  [CE]  cannot  find  symbol  [FE]                              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(validator!=  null  ||  validator.isProperty())  {  finishPropertyContinuations();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(validator!=  null  ||  validator.isProperty())  {  finishPropertyContinuations();  }	  if(validator!=    null    &&    validator.isProperty())    {    finishPropertyContinuations();    }    	non-compiled	[CE]  cannot  find  symbol	210	None	replace
418	[BUG]  [BUGGY]  propertyValues.add(propertyName);  [CE]  cannot  find  symbol  propertyName  [FE]                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  propertyValues.add(propertyName);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	propertyValues.add(propertyName);	  if(propertyContinuations!=    null)    {    finishPropertyValues();    }    else    {    propertyContinuations.add(propertyName);    }    	non-compiled	[CE]  cannot  find  symbol  propertyName	69	None	replace
419	[BUG]  [BUGGY]  PropertyValues  registry  =  propertyContinuations.get(propertyName);  [CE]  cannot  find  symbol  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  PropertyValues  registry  =  propertyContinuations.get(propertyName);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	PropertyValues  registry  =  propertyContinuations.get(propertyName);	  if(propertyContinuations!=    null)    {    finishPropertyValues();    }    else    {    propertyContinuations.add(propertyName);    }    	non-compiled	[CE]  cannot  find  symbol	69	None	replace
420	[BUG]  [BUGGY]  PropertyValues  registry  =  getPropertyValues();  [CE]  cannot  find  symbol  [FE]                            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  PropertyValues  registry  =  getPropertyValues();  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	PropertyValues  registry  =  getPropertyValues();	  if(propertyContinuations!=    null)    {    finishPropertyValues();    }    else    {    propertyContinuations.add(propertyName);    }    	non-compiled	[CE]  cannot  find  symbol	69	None	replace
421	[BUG]  [BUGGY]  PropertyValues  propertyContinuations  =  getPropertyValues();  [CE]  cannot  find  symbol  [FE]                              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  PropertyValues  propertyContinuations  =  getPropertyValues();  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	PropertyValues  propertyContinuations  =  getPropertyValues();	  if(propertyContinuations!=    null)    {    finishPropertyValues();    }    else    {    propertyContinuations.add(propertyName);    }    	non-compiled	[CE]  cannot  find  symbol	69	None	replace
422	[BUG]  [BUGGY]  if(propertyContinuations!=  null)  {  finishPropertyAnnotations();  }  [CE]  cannot  find  symbol  [FE]                                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(propertyContinuations!=  null)  {  finishPropertyAnnotations();  }  [BUGGY]    null)  {  finishPropertyContinuations();  }  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations!=  null)  {  finishPropertyAnnotations();  }	  if(propertyContinuations    ==    null)    {    finishPropertyContinuations();    }    if(propertyContinuations    	non-compiled	[CE]  cannot  find  symbol	49	None	replace
423	[BUG]  [BUGGY]  PropertyContinuation  registry  =  getPropertyContinuations(propertyName);  [CE]  cannot  find  symbol  propertyName  [FE]                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  PropertyContinuation  registry  =  getPropertyContinuations(propertyName);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	PropertyContinuation  registry  =  getPropertyContinuations(propertyName);	  propertyContinuations();    	non-compiled	[CE]  cannot  find  symbol  propertyName	66	None	replace
424	[BUG]  [BUGGY]  if(resolved)  {  propertyContinuations();  }  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(resolved)  {  propertyContinuations();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(resolved)  {  propertyContinuations();  }	  propertyContinuations();    	non-compiled	[CE]  cannot  find  symbol	66	None	replace
425	[BUG]  [BUGGY]  PropertyContinuation  registry  =  getPropertyContinuations();  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  PropertyContinuation  registry  =  getPropertyContinuations();  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	PropertyContinuation  registry  =  getPropertyContinuations();	  propertyContinuations();    	non-compiled	[CE]  cannot  find  symbol	66	None	replace
426	[BUG]  [BUGGY]  propertyContinuations!=  null  &&  registry.isLastGeneration()?  getReferencedType()  :  null;  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  propertyContinuations!=  null  &&  registry.isLastGeneration()?  getReferencedType()  :  null;  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	propertyContinuations!=  null  &&  registry.isLastGeneration()?  getReferencedType()  :  null;	  propertyContinuations!=    null    &&    registry.isLastGeneration()?    getReferencedType()    :    this;    	non-compiled	[CE]  not  a  statement	191	None	replace
427	[BUG]  [BUGGY]  PropertyContinuation  <?>  propertyContinuations  =  registry.isLastGeneration()?  getReferencedType()  :  this;  [CE]  type  PropertyContinuation  does  not  take  parameters  [FE]                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  PropertyContinuation  <?>  propertyContinuations  =  registry.isLastGeneration()?  getReferencedType()  :  this;  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	PropertyContinuation  <?>  propertyContinuations  =  registry.isLastGeneration()?  getReferencedType()  :  this;	  propertyContinuations!=    null    &&    registry.isLastGeneration()?    getReferencedType()    :    this;    	non-compiled	[CE]  type  PropertyContinuation  does  not  take  parameters	191	None	replace
428	[BUG]  [BUGGY]  propertyContinuations!=  null  &&  registry.isFirstGeneration()?  getReferencedType()  :  this;  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  propertyContinuations!=  null  &&  registry.isFirstGeneration()?  getReferencedType()  :  this;  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	propertyContinuations!=  null  &&  registry.isFirstGeneration()?  getReferencedType()  :  this;	  propertyContinuations!=    null    &&    registry.isLastGeneration()?    getReferencedType()    :    this;    	non-compiled	[CE]  not  a  statement	191	None	replace
429	[BUG]  [BUGGY]  PropertyContinuation  <  Object>  propertyContinuations  =  registry.isLastGeneration()?  getReferencedType()  :  this;  [CE]  type  PropertyContinuation  does  not  take  parameters  [FE]                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  PropertyContinuation  <  Object>  propertyContinuations  =  registry.isLastGeneration()?  getReferencedType()  :  this;  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	PropertyContinuation  <  Object>  propertyContinuations  =  registry.isLastGeneration()?  getReferencedType()  :  this;	  propertyContinuations!=    null    &&    registry.isLastGeneration()?    getReferencedType()    :    this;    	non-compiled	[CE]  type  PropertyContinuation  does  not  take  parameters	191	None	replace
430	[BUG]  [BUGGY]  PropertyContinuation  <?>  propertyContinuations  =  registry.isLastGeneration()?  getReferencedType()  :  null;  [CE]  type  PropertyContinuation  does  not  take  parameters  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  PropertyContinuation  <?>  propertyContinuations  =  registry.isLastGeneration()?  getReferencedType()  :  null;  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	PropertyContinuation  <?>  propertyContinuations  =  registry.isLastGeneration()?  getReferencedType()  :  null;	  propertyContinuations!=    null    &&    registry.isLastGeneration()?    getReferencedType()    :    this;    	non-compiled	[CE]  type  PropertyContinuation  does  not  take  parameters	191	None	replace
431	[BUG]  [BUGGY]  PropertyContinuation  <  NamedType>  propertyContinuations  =  registry.isLastGeneration()?  getReferencedType()  :  null;  [CE]  type  PropertyContinuation  does  not  take  parameters  [FE]                            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  PropertyContinuation  <  NamedType>  propertyContinuations  =  registry.isLastGeneration()?  getReferencedType()  :  null;  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	PropertyContinuation  <  NamedType>  propertyContinuations  =  registry.isLastGeneration()?  getReferencedType()  :  null;	  propertyContinuations!=    null    &&    registry.isLastGeneration()?    getReferencedType()    :    this;    	non-compiled	[CE]  type  PropertyContinuation  does  not  take  parameters	191	None	replace
432	[BUG]  [BUGGY]  PropertyContinuation>  propertyContinuations  =  new  ArrayList  <  PropertyContinuation>();  [CE]  cannot  find  symbol  PropertyContinuation  [FE]                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  PropertyContinuation>  propertyContinuations  =  new  ArrayList  <  PropertyContinuation>();  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	PropertyContinuation>  propertyContinuations  =  new  ArrayList  <  PropertyContinuation>();	  propertyContinuations    =    new    ArrayList    <    PropertyContinuation>();    	non-compiled	[CE]  cannot  find  symbol  PropertyContinuation	100	None	replace
433	[BUG]  [BUGGY]  PropertyContinuation  <  PropertyContinuation>  propertyContinuations  =  new  ArrayList  <  PropertyContinuation>();  [CE]  type  PropertyContinuation  does  not  take  parameters  [FE]                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  PropertyContinuation  <  PropertyContinuation>  propertyContinuations  =  new  ArrayList  <  PropertyContinuation>();  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	PropertyContinuation  <  PropertyContinuation>  propertyContinuations  =  new  ArrayList  <  PropertyContinuation>();	  propertyContinuations    =    new    ArrayList    <    PropertyContinuation>();    	non-compiled	[CE]  type  PropertyContinuation  does  not  take  parameters	100	None	replace
434	[BUG]  [BUGGY]  PropertyContinuation>  propertyContinuations  =  new  LinkedList  <  PropertyContinuation>();  [CE]  cannot  find  symbol  PropertyContinuation  [FE]                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  PropertyContinuation>  propertyContinuations  =  new  LinkedList  <  PropertyContinuation>();  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	PropertyContinuation>  propertyContinuations  =  new  LinkedList  <  PropertyContinuation>();	  propertyContinuations    =    new    ArrayList    <    PropertyContinuation>();    	non-compiled	[CE]  cannot  find  symbol  PropertyContinuation	100	None	replace
435	[BUG]  [BUGGY]  PropertyContinuation  <  PropertyContinuation>  propertyContinuations  =  new  LinkedList  <  PropertyContinuation>();  [CE]  type  PropertyContinuation  does  not  take  parameters  [FE]                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  PropertyContinuation  <  PropertyContinuation>  propertyContinuations  =  new  LinkedList  <  PropertyContinuation>();  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	PropertyContinuation  <  PropertyContinuation>  propertyContinuations  =  new  LinkedList  <  PropertyContinuation>();	  propertyContinuations    =    new    ArrayList    <    PropertyContinuation>();    	non-compiled	[CE]  type  PropertyContinuation  does  not  take  parameters	100	None	replace
436	[BUG]  [BUGGY]  propertyContinuations  =  new  TreeSet  <  PropertyContinuation>();  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  propertyContinuations  =  new  TreeSet  <  PropertyContinuation>();  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	propertyContinuations  =  new  TreeSet  <  PropertyContinuation>();	  propertyContinuations    =    new    ArrayList    <    PropertyContinuation>();    	non-compiled	[CE]  cannot  find  symbol	100	None	replace
437	[BUG]  [BUGGY]  ensurePropertyContinuations()  &&  registry.isFirstGeneration()?  getReferencedType()  :  null;  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  ensurePropertyContinuations()  &&  registry.isFirstGeneration()?  getReferencedType()  :  null;  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	ensurePropertyContinuations()  &&  registry.isFirstGeneration()?  getReferencedType()  :  null;	  ensurePropertyContinuations()    &&    registry.isLastGeneration()?    getReferencedType()    :    null;    	non-compiled	[CE]  not  a  statement	17	None	replace
438	[BUG]  [BUGGY]  ensurePropertyContinuations()  ||  registry.isLastGeneration()?  getReferencedType()  :  null;  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  ensurePropertyContinuations()  ||  registry.isLastGeneration()?  getReferencedType()  :  null;  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	ensurePropertyContinuations()  ||  registry.isLastGeneration()?  getReferencedType()  :  null;	  ensurePropertyContinuations()    &&    registry.isLastGeneration()?    getReferencedType()    :    null;    	non-compiled	[CE]  not  a  statement	17	None	replace
439	[BUG]  [BUGGY]  ensurePropertyContinuations()  &&  registry.isLastGeneration()?  getReferencedType()  :  Collections.EMPTY_LIST;  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  ensurePropertyContinuations()  &&  registry.isLastGeneration()?  getReferencedType()  :  Collections.EMPTY_LIST;  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	ensurePropertyContinuations()  &&  registry.isLastGeneration()?  getReferencedType()  :  Collections.EMPTY_LIST;	  ensurePropertyContinuations()    &&    registry.isLastGeneration()?    getReferencedType()    :    null;    	non-compiled	[CE]  not  a  statement	17	None	replace
440	[BUG]  [BUGGY]  ensurePropertyContinuations()  &&  registry.isLastGeneration()?  getReferencedType()  :  Collections.emptyList();  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  ensurePropertyContinuations()  &&  registry.isLastGeneration()?  getReferencedType()  :  Collections.emptyList();  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	ensurePropertyContinuations()  &&  registry.isLastGeneration()?  getReferencedType()  :  Collections.emptyList();	  ensurePropertyContinuations()    &&    registry.isLastGeneration()?    getReferencedType()    :    null;    	non-compiled	[CE]  not  a  statement	17	None	replace
441	[BUG]  [BUGGY]  ensurePropertyContinuations()  &&  registry.isLastGeneration()?  getType()  :  null;  [CE]  not  a  statement  [FE]                            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  ensurePropertyContinuations()  &&  registry.isLastGeneration()?  getType()  :  null;  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	ensurePropertyContinuations()  &&  registry.isLastGeneration()?  getType()  :  null;	  ensurePropertyContinuations()    &&    registry.isLastGeneration()?    getReferencedType()    :    null;    	non-compiled	[CE]  not  a  statement	17	None	replace
442	[BUG]  [BUGGY]  PropertyContinuations  registry  =  getPropertyContinuations(propertyName,  enclosing);  [CE]  cannot  find  symbol  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  PropertyContinuations  registry  =  getPropertyContinuations(propertyName,  enclosing);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	PropertyContinuations  registry  =  getPropertyContinuations(propertyName,  enclosing);	  PropertyContinuations    registry    =    getPropertyContinuations(propertyName);    	non-compiled	[CE]  cannot  find  symbol	253	None	replace
443	[BUG]  [BUGGY]  PropertyContinuations  registry  =  getPropertyContinuations(propertyName,  resolved);  [CE]  cannot  find  symbol  [FE]                            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  PropertyContinuations  registry  =  getPropertyContinuations(propertyName,  resolved);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	PropertyContinuations  registry  =  getPropertyContinuations(propertyName,  resolved);	  PropertyContinuations    registry    =    getPropertyContinuations(propertyName);    	non-compiled	[CE]  cannot  find  symbol	253	None	replace
444	[BUG]  [BUGGY]  PropertyContinuations  registry  =  getPropertyContinuations(propertyName,  reference);  [CE]  cannot  find  symbol  [FE]                              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  PropertyContinuations  registry  =  getPropertyContinuations(propertyName,  reference);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	PropertyContinuations  registry  =  getPropertyContinuations(propertyName,  reference);	  PropertyContinuations    registry    =    getPropertyContinuations(propertyName);    	non-compiled	[CE]  cannot  find  symbol	253	None	replace
445	[BUG]  [BUGGY]  PropertyContinuations  registry  =  getPropertyContinuations(propertyName,  ref);  [CE]  cannot  find  symbol  [FE]                                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  PropertyContinuations  registry  =  getPropertyContinuations(propertyName,  ref);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	PropertyContinuations  registry  =  getPropertyContinuations(propertyName,  ref);	  PropertyContinuations    registry    =    getPropertyContinuations(propertyName);    	non-compiled	[CE]  cannot  find  symbol	253	None	replace
446	[BUG]  [BUGGY]  PropertyContinuations  registry  =  getPropertyContinuations(propertyName,  true);  [CE]  cannot  find  symbol  [FE]                                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  PropertyContinuations  registry  =  getPropertyContinuations(propertyName,  true);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	PropertyContinuations  registry  =  getPropertyContinuations(propertyName,  true);	  PropertyContinuations    registry    =    getPropertyContinuations(propertyName);    	non-compiled	[CE]  cannot  find  symbol	253	None	replace
447	[BUG]  [BUGGY]  PropertyContinuations  registry  =  getPropertyContinuations(sourceName);  [CE]  cannot  find  symbol  [FE]                                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  PropertyContinuations  registry  =  getPropertyContinuations(sourceName);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	PropertyContinuations  registry  =  getPropertyContinuations(sourceName);	  PropertyContinuations    registry    =    getPropertyContinuations(propertyName);    	non-compiled	[CE]  cannot  find  symbol	253	None	replace
448	[BUG]  [BUGGY]  PropertyContinuations  registry  =  getPropertyContinuations(propertyName,  propertyNode);  [CE]  cannot  find  symbol  [FE]                                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  PropertyContinuations  registry  =  getPropertyContinuations(propertyName,  propertyNode);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	PropertyContinuations  registry  =  getPropertyContinuations(propertyName,  propertyNode);	  PropertyContinuations    registry    =    getPropertyContinuations(propertyName);    	non-compiled	[CE]  cannot  find  symbol	253	None	replace
449	[BUG]  [BUGGY]  validatePropertyContinuations(t);  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  validatePropertyContinuations(t);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	validatePropertyContinuations(t);	  validatePropertyContinuations();    	non-compiled	[CE]  cannot  find  symbol	31	None	replace
450	[BUG]  [BUGGY]  Validate.notNull(propertyContinuations);  [CE]  cannot  find  symbol  Validate  [FE]                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Validate.notNull(propertyContinuations);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Validate.notNull(propertyContinuations);	  validatePropertyContinuations();    	non-compiled	[CE]  cannot  find  symbol  Validate	31	None	replace
451	[BUG]  [BUGGY]  validatePropertyContinuations(t,  enclosing);  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  validatePropertyContinuations(t,  enclosing);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	validatePropertyContinuations(t,  enclosing);	  validatePropertyContinuations();    	non-compiled	[CE]  cannot  find  symbol	31	None	replace
452	[BUG]  [BUGGY]  validator.validatePropertyContinuations();  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  validator.validatePropertyContinuations();  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	validator.validatePropertyContinuations();	  validatePropertyContinuations();    	non-compiled	[CE]  cannot  find  symbol	31	None	replace
453	[BUG]  [BUGGY]  validatePropertyContinuations(t,  propertyNode);  [CE]  cannot  find  symbol  propertyNode  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  validatePropertyContinuations(t,  propertyNode);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	validatePropertyContinuations(t,  propertyNode);	  validatePropertyContinuations();    	non-compiled	[CE]  cannot  find  symbol  propertyNode	31	None	replace
454	[BUG]  [BUGGY]  final  aughtExceptionHandler  &&  resolved)  {  finishPropertyContinuations();  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  final  aughtExceptionHandler  &&  resolved)  {  finishPropertyContinuations();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	final  aughtExceptionHandler  &&  resolved)  {  finishPropertyContinuations();  }	  aughtExceptionHandler    &&    resolved)    {    finishPropertyContinuations();    }    	non-compiled	[CE]  <identifier>  expected	248	None	replace
455	[BUG]  [BUGGY]  handleExceptionHandler(t))  {  finishPropertyContinuations();  }  [CE]  ';'  expected  [FE]                            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  handleExceptionHandler(t))  {  finishPropertyContinuations();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	handleExceptionHandler(t))  {  finishPropertyContinuations();  }	  aughtExceptionHandler    &&    resolved)    {    finishPropertyContinuations();    }    	non-compiled	[CE]  ';'  expected	248	None	replace
456	[BUG]  [BUGGY]  handleExceptionHandler(t,  resolved)  {  finishPropertyContinuations();  }  [CE]  ';'  expected  [FE]                              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  handleExceptionHandler(t,  resolved)  {  finishPropertyContinuations();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	handleExceptionHandler(t,  resolved)  {  finishPropertyContinuations();  }	  aughtExceptionHandler    &&    resolved)    {    finishPropertyContinuations();    }    	non-compiled	[CE]  ';'  expected	248	None	replace
457	[BUG]  [BUGGY]  timeout  [FE]                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(propertyContinuations!=  null  ||  propertyContinuations.size()  >  1)  {  finishPropertyContinuations();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	add	if(propertyContinuations!=  null  ||  propertyContinuations.size()  >  1)  {  finishPropertyContinuations();  }	  if(propertyContinuations!=    null    &&    propertyContinuations.size()    >    1)    {    finishPropertyContinuations();    }    timeout    	compilable	timeout	259	1	replace
458	[BUG]  [BUGGY]  if(propertyContinuations!=  null  ||  propertyContinuations.size()  >  1)  {  finishPropertyContinuations();  }  timeout  [FE]                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(propertyContinuations!=  null  ||  propertyContinuations.size()  >  1)  {  finishPropertyContinuations();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations!=  null  ||  propertyContinuations.size()  >  1)  {  finishPropertyContinuations();  }	  if(propertyContinuations!=    null    &&    propertyContinuations.size()    >    1)    {    finishPropertyContinuations();    }    timeout    	compilable	timeout	259	1	replace
459	[BUG]  [BUGGY]  Status.checkState(propertyContinuations!=  null  &&  propertyContinuations.size()  >  1)  {  finishPropertyContinuations();  }  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Status.checkState(propertyContinuations!=  null  &&  propertyContinuations.size()  >  1)  {  finishPropertyContinuations();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Status.checkState(propertyContinuations!=  null  &&  propertyContinuations.size()  >  1)  {  finishPropertyContinuations();  }	  if(propertyContinuations!=    null    &&    propertyContinuations.size()    >    1)    {    finishPropertyContinuations();    }    timeout    	non-compiled	[CE]  ';'  expected	259	None	replace
460	[BUG]  [BUGGY]  Status.checkState(propertyContinuations!=  null  ||  propertyContinuations.size()  >  1)  {  finishPropertyContinuations();  }  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Status.checkState(propertyContinuations!=  null  ||  propertyContinuations.size()  >  1)  {  finishPropertyContinuations();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Status.checkState(propertyContinuations!=  null  ||  propertyContinuations.size()  >  1)  {  finishPropertyContinuations();  }	  if(propertyContinuations!=    null    &&    propertyContinuations.size()    >    1)    {    finishPropertyContinuations();    }    timeout    	non-compiled	[CE]  ';'  expected	259	None	replace
461	[BUG]  [BUGGY]  if(propertyContinuations!=  null  &&  propertyContinuations.size()  >  1)  {  startPropertyContinuations();  }  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(propertyContinuations!=  null  &&  propertyContinuations.size()  >  1)  {  startPropertyContinuations();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations!=  null  &&  propertyContinuations.size()  >  1)  {  startPropertyContinuations();  }	  if(propertyContinuations!=    null    &&    propertyContinuations.size()    >    1)    {    finishPropertyContinuations();    }    timeout    	non-compiled	[CE]  cannot  find  symbol	259	None	replace
462	[BUG]  [BUGGY]  PropertyGenerator  <  Property>  startPropertyGenerator();  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  PropertyGenerator  <  Property>  startPropertyGenerator();  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	PropertyGenerator  <  Property>  startPropertyGenerator();	  if(propertyContinuations!=    null)    {    finishPropertyGenerator();    }    else    {    getPropertyContinuations().addAll(propertyContinuations);    }    	non-compiled	[CE]  ';'  expected	214	None	replace
463	[BUG]  [BUGGY]  PropertyGenerator  <  Property>  endPropertyGenerator  =  getPropertyGenerator();  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  PropertyGenerator  <  Property>  endPropertyGenerator  =  getPropertyGenerator();  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	PropertyGenerator  <  Property>  endPropertyGenerator  =  getPropertyGenerator();	  if(propertyContinuations!=    null)    {    finishPropertyGenerator();    }    else    {    getPropertyContinuations().addAll(propertyContinuations);    }    	non-compiled	[CE]  cannot  find  symbol	214	None	replace
464	[BUG]  [BUGGY]  propertyContinuations  =  new  ArrayList  <  PropertyContinuation>(propertyContinuations.size());  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  propertyContinuations  =  new  ArrayList  <  PropertyContinuation>(propertyContinuations.size());  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	propertyContinuations  =  new  ArrayList  <  PropertyContinuation>(propertyContinuations.size());	  if(propertyContinuations!=    null)    {    finishPropertyGenerator();    }    else    {    getPropertyContinuations().addAll(propertyContinuations);    }    	non-compiled	[CE]  cannot  find  symbol	214	None	replace
465	[BUG]  [BUGGY]  BundlePropertyGenerator  <  Property>  startPropertyGenerator();  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  BundlePropertyGenerator  <  Property>  startPropertyGenerator();  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	BundlePropertyGenerator  <  Property>  startPropertyGenerator();	  if(propertyContinuations!=    null)    {    finishPropertyGenerator();    }    else    {    getPropertyContinuations().addAll(propertyContinuations);    }    	non-compiled	[CE]  ';'  expected	214	None	replace
466	[BUG]  [BUGGY]  AssertionFailedError  t  =  propertyContinuations.get(propertyName);  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  AssertionFailedError  t  =  propertyContinuations.get(propertyName);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	AssertionFailedError  t  =  propertyContinuations.get(propertyName);	  if(propertyContinuations!=    null)    {    finishPropertyContinuations();    }    if(propertyContinuations    >=    null)    {    finishPropertyContinuations();    }    	non-compiled	[CE]  cannot  find  symbol	80	None	replace
467	[BUG]  [BUGGY]  AssertionFailedError  t  =  propertyContinuations.get(0);  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  AssertionFailedError  t  =  propertyContinuations.get(0);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	AssertionFailedError  t  =  propertyContinuations.get(0);	  if(propertyContinuations!=    null)    {    finishPropertyContinuations();    }    if(propertyContinuations    >=    null)    {    finishPropertyContinuations();    }    	non-compiled	[CE]  cannot  find  symbol	80	None	replace
468	[BUG]  [BUGGY]  parent!=  null  &&  resolved)  {  finishPropertyInferred();  }  else  {  registry.isLastGeneration()  :  this;  }  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  parent!=  null  &&  resolved)  {  finishPropertyInferred();  }  else  {  registry.isLastGeneration()  :  this;  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	parent!=  null  &&  resolved)  {  finishPropertyInferred();  }  else  {  registry.isLastGeneration()  :  this;  }	  if(resolved)    {    finishPropertyInferred();    }    else    {    registry.isLastGeneration()    :    this;    }    	non-compiled	[CE]  not  a  statement	175	None	replace
469	[BUG]  [BUGGY]  validatePropertyInferred();  }  else  {  registry.isLastGeneration()  :  this;  }  [CE]  [FE]                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  validatePropertyInferred();  }  else  {  registry.isLastGeneration()  :  this;  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	validatePropertyInferred();  }  else  {  registry.isLastGeneration()  :  this;  }	  if(resolved)    {    finishPropertyInferred();    }    else    {    registry.isLastGeneration()    :    this;    }    	non-compiled	[CE]  	175	None	replace
470	[BUG]  [BUGGY]  Annotations  inferred  =  resolvePropertyInferred();  }  else  {  registry.isLastGeneration()  :  this;  }  [CE]  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Annotations  inferred  =  resolvePropertyInferred();  }  else  {  registry.isLastGeneration()  :  this;  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Annotations  inferred  =  resolvePropertyInferred();  }  else  {  registry.isLastGeneration()  :  this;  }	  if(resolved)    {    finishPropertyInferred();    }    else    {    registry.isLastGeneration()    :    this;    }    	non-compiled	[CE]  	175	None	replace
471	[BUG]  [BUGGY]  Parchet.checkState(resolved  ||  resolved)  {  finishPropertyInferred();  }  else  {  registry.isLastGeneration()  :  this;  }  [CE]  ';'  expected  [FE]                            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Parchet.checkState(resolved  ||  resolved)  {  finishPropertyInferred();  }  else  {  registry.isLastGeneration()  :  this;  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Parchet.checkState(resolved  ||  resolved)  {  finishPropertyInferred();  }  else  {  registry.isLastGeneration()  :  this;  }	  if(resolved)    {    finishPropertyInferred();    }    else    {    registry.isLastGeneration()    :    this;    }    	non-compiled	[CE]  ';'  expected	175	None	replace
472	[BUG]  [BUGGY]  validatePropertyInferred();  }  else  if(resolved)  {  registry.isLastGeneration()  :  this;  }  [CE]  [FE]                              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  validatePropertyInferred();  }  else  if(resolved)  {  registry.isLastGeneration()  :  this;  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	validatePropertyInferred();  }  else  if(resolved)  {  registry.isLastGeneration()  :  this;  }	  if(resolved)    {    finishPropertyInferred();    }    else    {    registry.isLastGeneration()    :    this;    }    	non-compiled	[CE]  	175	None	replace
473	[BUG]  [BUGGY]  parent!=  null  &&  resolved)  {  finishPropertyInferred();  }  else  {  Registry.isLastGeneration()  :  this;  }  [CE]  not  a  statement  [FE]                                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  parent!=  null  &&  resolved)  {  finishPropertyInferred();  }  else  {  Registry.isLastGeneration()  :  this;  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	parent!=  null  &&  resolved)  {  finishPropertyInferred();  }  else  {  Registry.isLastGeneration()  :  this;  }	  if(resolved)    {    finishPropertyInferred();    }    else    {    registry.isLastGeneration()    :    this;    }    	non-compiled	[CE]  not  a  statement	175	None	replace
474	[BUG]  [BUGGY]  parent!=  null  &&  resolved)  {  finishPropertyInferred();  }  else  {  register.isLastGeneration()  :  this;  }  [CE]  not  a  statement  [FE]                                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  parent!=  null  &&  resolved)  {  finishPropertyInferred();  }  else  {  register.isLastGeneration()  :  this;  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	parent!=  null  &&  resolved)  {  finishPropertyInferred();  }  else  {  register.isLastGeneration()  :  this;  }	  if(resolved)    {    finishPropertyInferred();    }    else    {    registry.isLastGeneration()    :    this;    }    	non-compiled	[CE]  not  a  statement	175	None	replace
475	[BUG]  [BUGGY]  Predicate  validator  =  registry.isLastGeneration()?  getReferencedType()  :  this;  [CE]  incompatible  types  [FE]              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Predicate  validator  =  registry.isLastGeneration()?  getReferencedType()  :  this;  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Predicate  validator  =  registry.isLastGeneration()?  getReferencedType()  :  this;	  if(validator!=    null    &&    registry.isLastGeneration())    {    finishPropertyContinuations();    }    else    {    registry.isLastGeneration()?    getReferencedType()    :    this;    }    	non-compiled	[CE]  incompatible  types	230	None	replace
476	[BUG]  [BUGGY]  Predicate  validator  =  registry.isLastGeneration()?  getReferencedType()  :  null;  [CE]  incompatible  types  [FE]                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Predicate  validator  =  registry.isLastGeneration()?  getReferencedType()  :  null;  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Predicate  validator  =  registry.isLastGeneration()?  getReferencedType()  :  null;	  if(validator!=    null    &&    registry.isLastGeneration())    {    finishPropertyContinuations();    }    else    {    registry.isLastGeneration()?    getReferencedType()    :    this;    }    	non-compiled	[CE]  incompatible  types	230	None	replace
477	[BUG]  [BUGGY]  PropertyContinuation  <  Object>  propertyContinuations  =  getPropertyContinuations(propertyNode);  [CE]  type  PropertyContinuation  does  not  take  parameters  [FE]                            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  PropertyContinuation  <  Object>  propertyContinuations  =  getPropertyContinuations(propertyNode);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	PropertyContinuation  <  Object>  propertyContinuations  =  getPropertyContinuations(propertyNode);	  PropertyContinuation    <    Object>    propertyContinuations    =    getPropertyContinuations();    	non-compiled	[CE]  type  PropertyContinuation  does  not  take  parameters	148	None	replace
478	[BUG]  [BUGGY]  PropertyContinuation  <  Object>  propertyContinuations  =  getPropertyContinuations(propertyName);  [CE]  type  PropertyContinuation  does  not  take  parameters  [FE]                              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  PropertyContinuation  <  Object>  propertyContinuations  =  getPropertyContinuations(propertyName);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	PropertyContinuation  <  Object>  propertyContinuations  =  getPropertyContinuations(propertyName);	  PropertyContinuation    <    Object>    propertyContinuations    =    getPropertyContinuations();    	non-compiled	[CE]  type  PropertyContinuation  does  not  take  parameters	148	None	replace
479	[BUG]  [BUGGY]  PropertyContinuation  <  Object>  propertyContinuations  =  getPropertyContinuations(resolved);  [CE]  type  PropertyContinuation  does  not  take  parameters  [FE]                                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  PropertyContinuation  <  Object>  propertyContinuations  =  getPropertyContinuations(resolved);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	PropertyContinuation  <  Object>  propertyContinuations  =  getPropertyContinuations(resolved);	  PropertyContinuation    <    Object>    propertyContinuations    =    getPropertyContinuations();    	non-compiled	[CE]  type  PropertyContinuation  does  not  take  parameters	148	None	replace
480	[BUG]  [BUGGY]  PropertyContinuation  <  Object>  propertyContinuations  =  getPropertyContinuations(type);  [CE]  type  PropertyContinuation  does  not  take  parameters  [FE]                                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  PropertyContinuation  <  Object>  propertyContinuations  =  getPropertyContinuations(type);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	PropertyContinuation  <  Object>  propertyContinuations  =  getPropertyContinuations(type);	  PropertyContinuation    <    Object>    propertyContinuations    =    getPropertyContinuations();    	non-compiled	[CE]  type  PropertyContinuation  does  not  take  parameters	148	None	replace
481	[BUG]  [BUGGY]  PropertyContinuation  <  Object>  propertyContinuations  =  getReferencedPropertyContinuations();  [CE]  type  PropertyContinuation  does  not  take  parameters  [FE]                                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  PropertyContinuation  <  Object>  propertyContinuations  =  getReferencedPropertyContinuations();  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	PropertyContinuation  <  Object>  propertyContinuations  =  getReferencedPropertyContinuations();	  PropertyContinuation    <    Object>    propertyContinuations    =    getPropertyContinuations();    	non-compiled	[CE]  type  PropertyContinuation  does  not  take  parameters	148	None	replace
482	[BUG]  [BUGGY]  PropertyContinuation  <  Object>  propertyContinuations  =  getPropertyContinuations(property);  [CE]  type  PropertyContinuation  does  not  take  parameters  [FE]                                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  PropertyContinuation  <  Object>  propertyContinuations  =  getPropertyContinuations(property);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	PropertyContinuation  <  Object>  propertyContinuations  =  getPropertyContinuations(property);	  PropertyContinuation    <    Object>    propertyContinuations    =    getPropertyContinuations();    	non-compiled	[CE]  type  PropertyContinuation  does  not  take  parameters	148	None	replace
483	[BUG]  [BUGGY]  Annotations  inferred  =  resolveViaRegistry(t,  enclosing,  registry);  [CE]  cannot  find  symbol  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Annotations  inferred  =  resolveViaRegistry(t,  enclosing,  registry);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Annotations  inferred  =  resolveViaRegistry(t,  enclosing,  registry);	  Annotations    inferred    =    resolveViaRegistry(t,    enclosing);    	non-compiled	[CE]  cannot  find  symbol	177	None	replace
484	[BUG]  [BUGGY]  Annotations  inferred  =  resolveViaRegistry(t,  enclosing,  forAnnotations);  [CE]  cannot  find  symbol  [FE]                            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Annotations  inferred  =  resolveViaRegistry(t,  enclosing,  forAnnotations);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Annotations  inferred  =  resolveViaRegistry(t,  enclosing,  forAnnotations);	  Annotations    inferred    =    resolveViaRegistry(t,    enclosing);    	non-compiled	[CE]  cannot  find  symbol	177	None	replace
485	[BUG]  [BUGGY]  Annotations  inferred  =  resolveViaRegistry(t,  enclosing,  propertyNode);  [CE]  cannot  find  symbol  [FE]                              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Annotations  inferred  =  resolveViaRegistry(t,  enclosing,  propertyNode);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Annotations  inferred  =  resolveViaRegistry(t,  enclosing,  propertyNode);	  Annotations    inferred    =    resolveViaRegistry(t,    enclosing);    	non-compiled	[CE]  cannot  find  symbol	177	None	replace
486	[BUG]  [BUGGY]  Annotations  inferred  =  resolveViaRegistry(t,  registry);  [CE]  cannot  find  symbol  [FE]                                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Annotations  inferred  =  resolveViaRegistry(t,  registry);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Annotations  inferred  =  resolveViaRegistry(t,  registry);	  Annotations    inferred    =    resolveViaRegistry(t,    enclosing);    	non-compiled	[CE]  cannot  find  symbol	177	None	replace
487	[BUG]  [BUGGY]  Annotations  inferred  =  resolveViaRegistry(t,  enclosing,  type);  [CE]  cannot  find  symbol  [FE]                                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Annotations  inferred  =  resolveViaRegistry(t,  enclosing,  type);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Annotations  inferred  =  resolveViaRegistry(t,  enclosing,  type);	  Annotations    inferred    =    resolveViaRegistry(t,    enclosing);    	non-compiled	[CE]  cannot  find  symbol	177	None	replace
488	[BUG]  [BUGGY]  Annotations  inferred  =  resolveViaRegistry(t,  propertyNode);  [CE]  cannot  find  symbol  [FE]                                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Annotations  inferred  =  resolveViaRegistry(t,  propertyNode);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Annotations  inferred  =  resolveViaRegistry(t,  propertyNode);	  Annotations    inferred    =    resolveViaRegistry(t,    enclosing);    	non-compiled	[CE]  cannot  find  symbol	177	None	replace
489	[BUG]  [BUGGY]  timeout  [FE]                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(propertyContinuations!=    null)    {    finishPropertyContinuations();    }    if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	add	if(propertyContinuations!=        null)        {        finishPropertyContinuations();        }        if(propertyContinuations!=    null)    {    finishPropertyContinuations();    }    if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }	  timeout    	compilable	timeout	76	1	add
490	[BUG]  [BUGGY]  if(propertyContinuations!=    null)    {    finishPropertyContinuations();    }    if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  timeout  [FE]                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(propertyContinuations!=    null)    {    finishPropertyContinuations();    }    if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations!=        null)        {        finishPropertyContinuations();        }        if(propertyContinuations!=    null)    {    finishPropertyContinuations();    }    if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }	  timeout    	compilable	timeout	76	1	add
491	[BUG]  [BUGGY]  if(propertyContinuations!=    null)    {    finishPropertyContinuations();    }    if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  if(propertyContinuations!=  null)  {  finishPropertyContinu  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(propertyContinuations!=    null)    {    finishPropertyContinuations();    }    if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  if(propertyContinuations!=  null)  {  finishPropertyContinu  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations!=        null)        {        finishPropertyContinuations();        }        if(propertyContinuations!=    null)    {    finishPropertyContinuations();    }    if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  if(propertyContinuations!=  null)  {  finishPropertyContinu	  timeout    	non-compiled	[CE]  ';'  expected	76	None	add
492	[BUG]  [BUGGY]  if(propertyContinuations!=    null)    {    finishPropertyContinuations();    }    if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  if(propertyContinuations!=  null)  {  finishProperty  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(propertyContinuations!=    null)    {    finishPropertyContinuations();    }    if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  if(propertyContinuations!=  null)  {  finishProperty  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations!=        null)        {        finishPropertyContinuations();        }        if(propertyContinuations!=    null)    {    finishPropertyContinuations();    }    if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  if(propertyContinuations!=  null)  {  finishProperty	  timeout    	non-compiled	[CE]  ';'  expected	76	None	add
493	[BUG]  [BUGGY]  if(propertyContinuations!=    null)    {    finishPropertyContinuations();    }    if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  if(propertyContinuations!=  null)  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(propertyContinuations!=    null)    {    finishPropertyContinuations();    }    if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  if(propertyContinuations!=  null)  {  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations!=        null)        {        finishPropertyContinuations();        }        if(propertyContinuations!=    null)    {    finishPropertyContinuations();    }    if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  if(propertyContinuations!=  null)  {	  timeout    	non-compiled	[CE]  illegal  start  of  expression	76	None	add
494	[BUG]  [BUGGY]  if(propertyContinuations!=    null)    {    finishPropertyContinuations();    }    if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  if(propertyContinuations!=  null)  {  finishPropert  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(propertyContinuations!=    null)    {    finishPropertyContinuations();    }    if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  if(propertyContinuations!=  null)  {  finishPropert  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations!=        null)        {        finishPropertyContinuations();        }        if(propertyContinuations!=    null)    {    finishPropertyContinuations();    }    if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  if(propertyContinuations!=  null)  {  finishPropert	  timeout    	non-compiled	[CE]  ';'  expected	76	None	add
495	[BUG]  [BUGGY]  if(propertyContinuations!=    null)    {    finishPropertyContinuations();    }    if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  if(propertyContinuations  ==  null)  {  finishPropertyContinu  [CE]  ';'  expected  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(propertyContinuations!=    null)    {    finishPropertyContinuations();    }    if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  if(propertyContinuations  ==  null)  {  finishPropertyContinu  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations!=        null)        {        finishPropertyContinuations();        }        if(propertyContinuations!=    null)    {    finishPropertyContinuations();    }    if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  if(propertyContinuations  ==  null)  {  finishPropertyContinu	  timeout    	non-compiled	[CE]  ';'  expected	76	None	add
496	[BUG]  [BUGGY]  if(propertyContinuations!=    null)    {    finishPropertyContinuations();    }    if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  if(propertyContinuations!=  null)  {  finishProper  [CE]  ';'  expected  [FE]                            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(propertyContinuations!=    null)    {    finishPropertyContinuations();    }    if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  if(propertyContinuations!=  null)  {  finishProper  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations!=        null)        {        finishPropertyContinuations();        }        if(propertyContinuations!=    null)    {    finishPropertyContinuations();    }    if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  if(propertyContinuations!=  null)  {  finishProper	  timeout    	non-compiled	[CE]  ';'  expected	76	None	add
497	[BUG]  [BUGGY]  if(propertyContinuations!=    null)    {    finishPropertyContinuations();    }    if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  if(propertyContinuations!=  null)  {  finishPropertyContin  [CE]  ';'  expected  [FE]                              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(propertyContinuations!=    null)    {    finishPropertyContinuations();    }    if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  if(propertyContinuations!=  null)  {  finishPropertyContin  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations!=        null)        {        finishPropertyContinuations();        }        if(propertyContinuations!=    null)    {    finishPropertyContinuations();    }    if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  if(propertyContinuations!=  null)  {  finishPropertyContin	  timeout    	non-compiled	[CE]  ';'  expected	76	None	add
498	[BUG]  [BUGGY]  if(validator  ==  null)  {  finishPropertyFields();  }  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(validator  ==  null)  {  finishPropertyFields();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(validator  ==  null)  {  finishPropertyFields();  }	  if(validator!=    null)    {    finishPropertyFields();    }    	non-compiled	[CE]  cannot  find  symbol	161	None	replace
499	[BUG]  [BUGGY]  finishPropertyFields();  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  finishPropertyFields();  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	finishPropertyFields();	  if(validator!=    null)    {    finishPropertyFields();    }    	non-compiled	[CE]  cannot  find  symbol	161	None	replace
500	[BUG]  [BUGGY]  Parchet.getInstance().finishPropertyFields();  [CE]  cannot  find  symbol  Parchet  [FE]                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Parchet.getInstance().finishPropertyFields();  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Parchet.getInstance().finishPropertyFields();	  if(validator!=    null)    {    finishPropertyFields();    }    	non-compiled	[CE]  cannot  find  symbol  Parchet	161	None	replace
501	[BUG]  [BUGGY]  if(validator!=  null)  {  startPropertyFields();  }  [CE]  cannot  find  symbol  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(validator!=  null)  {  startPropertyFields();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(validator!=  null)  {  startPropertyFields();  }	  if(validator!=    null)    {    finishPropertyFields();    }    	non-compiled	[CE]  cannot  find  symbol	161	None	replace
502	[BUG]  [BUGGY]  FinishPropertyFields();  [CE]  cannot  find  symbol  [FE]                            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  FinishPropertyFields();  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	FinishPropertyFields();	  if(validator!=    null)    {    finishPropertyFields();    }    	non-compiled	[CE]  cannot  find  symbol	161	None	replace
503	[BUG]  [BUGGY]  Preconditions.checkState(resolved  ==  false)  {  finishPropertyContinuations();  }  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Preconditions.checkState(resolved  ==  false)  {  finishPropertyContinuations();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Preconditions.checkState(resolved  ==  false)  {  finishPropertyContinuations();  }	  Preconditions.checkState(resolved)    {    finishPropertyContinuations();    }    	non-compiled	[CE]  ';'  expected	127	None	replace
504	[BUG]  [BUGGY]  Preconditions.checkState(resolved!=  false)  {  finishPropertyContinuations();  }  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Preconditions.checkState(resolved!=  false)  {  finishPropertyContinuations();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Preconditions.checkState(resolved!=  false)  {  finishPropertyContinuations();  }	  Preconditions.checkState(resolved)    {    finishPropertyContinuations();    }    	non-compiled	[CE]  ';'  expected	127	None	replace
505	[BUG]  [BUGGY]  Preconditions.checkState(!resolved)  {  finishPropertyContinuations();  }  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Preconditions.checkState(!resolved)  {  finishPropertyContinuations();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Preconditions.checkState(!resolved)  {  finishPropertyContinuations();  }	  Preconditions.checkState(resolved)    {    finishPropertyContinuations();    }    	non-compiled	[CE]  ';'  expected	127	None	replace
506	[BUG]  [BUGGY]  Preconditions.checkState(resolved  ==  null);  finishPropertyContinuations();  [CE]  incomparable  types:  boolean  and  <null>  [FE]                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Preconditions.checkState(resolved  ==  null);  finishPropertyContinuations();  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Preconditions.checkState(resolved  ==  null);  finishPropertyContinuations();	  Preconditions.checkState(resolved)    {    finishPropertyContinuations();    }    	non-compiled	[CE]  incomparable  types:  boolean  and  <null>	127	None	replace
507	[BUG]  [BUGGY]  Preconditions.checkState(resolved)  {  handlePropertyContinuations();  }  [CE]  ';'  expected  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Preconditions.checkState(resolved)  {  handlePropertyContinuations();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Preconditions.checkState(resolved)  {  handlePropertyContinuations();  }	  Preconditions.checkState(resolved)    {    finishPropertyContinuations();    }    	non-compiled	[CE]  ';'  expected	127	None	replace
508	[BUG]  [BUGGY]  Preconditions.checkState(resolved  <=  getPropertyContinuations());  [CE]  cannot  find  symbol  [FE]                            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Preconditions.checkState(resolved  <=  getPropertyContinuations());  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Preconditions.checkState(resolved  <=  getPropertyContinuations());	  Preconditions.checkState(resolved)    {    finishPropertyContinuations();    }    	non-compiled	[CE]  cannot  find  symbol	127	None	replace
509	[BUG]  [BUGGY]  Context.checkState(resolved)  {  startPropertyGenerations();  }  else  {  registry.isLastGeneration()  :  this;  }  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Context.checkState(resolved)  {  startPropertyGenerations();  }  else  {  registry.isLastGeneration()  :  this;  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Context.checkState(resolved)  {  startPropertyGenerations();  }  else  {  registry.isLastGeneration()  :  this;  }	  if(resolved)    {    startPropertyGenerations();    }    else    {    registry.isLastGeneration()    :    this;    }    	non-compiled	[CE]  ';'  expected	173	None	replace
510	[BUG]  [BUGGY]  Context.checkState(resolved  ||  resolved)  {  startPropertyGenerations();  }  else  {  registry.isLastGeneration()  :  this;  }  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Context.checkState(resolved  ||  resolved)  {  startPropertyGenerations();  }  else  {  registry.isLastGeneration()  :  this;  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Context.checkState(resolved  ||  resolved)  {  startPropertyGenerations();  }  else  {  registry.isLastGeneration()  :  this;  }	  if(resolved)    {    startPropertyGenerations();    }    else    {    registry.isLastGeneration()    :    this;    }    	non-compiled	[CE]  ';'  expected	173	None	replace
511	[BUG]  [BUGGY]  parent.startPropertyGenerations();  }  else  {  registry.isLastGeneration()  :  this;  }  [CE]  [FE]                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  parent.startPropertyGenerations();  }  else  {  registry.isLastGeneration()  :  this;  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	parent.startPropertyGenerations();  }  else  {  registry.isLastGeneration()  :  this;  }	  if(resolved)    {    startPropertyGenerations();    }    else    {    registry.isLastGeneration()    :    this;    }    	non-compiled	[CE]  	173	None	replace
512	[BUG]  [BUGGY]  Annotations  resolved  =  registry.isLastGeneration()?  getReferencedType()  :  this;  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Annotations  resolved  =  registry.isLastGeneration()?  getReferencedType()  :  this;  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Annotations  resolved  =  registry.isLastGeneration()?  getReferencedType()  :  this;	  if(resolved)    {    startPropertyGenerations();    }    else    {    registry.isLastGeneration()    :    this;    }    	non-compiled	[CE]  cannot  find  symbol	173	None	replace
513	[BUG]  [BUGGY]  parent.startPropertyGenerations();  }  else  if(resolved)  {  registry.isLastGeneration()  :  this;  }  [CE]  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  parent.startPropertyGenerations();  }  else  if(resolved)  {  registry.isLastGeneration()  :  this;  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	parent.startPropertyGenerations();  }  else  if(resolved)  {  registry.isLastGeneration()  :  this;  }	  if(resolved)    {    startPropertyGenerations();    }    else    {    registry.isLastGeneration()    :    this;    }    	non-compiled	[CE]  	173	None	replace
514	[BUG]  [BUGGY]  propertyContinuations!=  null  &&  propertyContinuations.size()  >  0)  {  startPropertyContinuations();  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  propertyContinuations!=  null  &&  propertyContinuations.size()  >  0)  {  startPropertyContinuations();  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	propertyContinuations!=  null  &&  propertyContinuations.size()  >  0)  {  startPropertyContinuations();	  propertyContinuations!=    null    &&    propertyContinuations.size()    >    0)    {    finishPropertyContinuations();    }    else    {    registry.isLastGeneration()?    getReferencedType()    :    this;    }    	non-compiled	[CE]  not  a  statement	190	None	replace
515	[BUG]  [BUGGY]  propertyContinuations!=  null  &&  propertyContinuations.size()  >  0)  {  finishPropertyContinuations();  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  propertyContinuations!=  null  &&  propertyContinuations.size()  >  0)  {  finishPropertyContinuations();  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	propertyContinuations!=  null  &&  propertyContinuations.size()  >  0)  {  finishPropertyContinuations();	  propertyContinuations!=    null    &&    propertyContinuations.size()    >    0)    {    finishPropertyContinuations();    }    else    {    registry.isLastGeneration()?    getReferencedType()    :    this;    }    	non-compiled	[CE]  not  a  statement	190	None	replace
516	[BUG]  [BUGGY]  if(validator  ==  null)  {  finishPropertyInternal();  }  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(validator  ==  null)  {  finishPropertyInternal();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(validator  ==  null)  {  finishPropertyInternal();  }	  if(validator!=    null)    {    finishPropertyInternal();    }    	non-compiled	[CE]  cannot  find  symbol	160	None	replace
517	[BUG]  [BUGGY]  if(validator!=  null)  {  startPropertyInternal();  }  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(validator!=  null)  {  startPropertyInternal();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(validator!=  null)  {  startPropertyInternal();  }	  if(validator!=    null)    {    finishPropertyInternal();    }    	non-compiled	[CE]  cannot  find  symbol	160	None	replace
518	[BUG]  [BUGGY]  Parchet.checkState(validator!=  null);  finishPropertyInternal();  [CE]  cannot  find  symbol  Parchet  [FE]                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Parchet.checkState(validator!=  null);  finishPropertyInternal();  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Parchet.checkState(validator!=  null);  finishPropertyInternal();	  if(validator!=    null)    {    finishPropertyInternal();    }    	non-compiled	[CE]  cannot  find  symbol  Parchet	160	None	replace
519	[BUG]  [BUGGY]  Parchet.CheckState(validator!=  null);  finishPropertyInternal();  [CE]  cannot  find  symbol  Parchet  [FE]                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Parchet.CheckState(validator!=  null);  finishPropertyInternal();  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Parchet.CheckState(validator!=  null);  finishPropertyInternal();	  if(validator!=    null)    {    finishPropertyInternal();    }    	non-compiled	[CE]  cannot  find  symbol  Parchet	160	None	replace
520	[BUG]  [BUGGY]  finishPropertyInternal();  [CE]  cannot  find  symbol  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  finishPropertyInternal();  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	finishPropertyInternal();	  if(validator!=    null)    {    finishPropertyInternal();    }    	non-compiled	[CE]  cannot  find  symbol	160	None	replace
521	[BUG]  [BUGGY]  Parchet.GetProperty(validator,  t);  [CE]  cannot  find  symbol  Parchet  [FE]                            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Parchet.GetProperty(validator,  t);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Parchet.GetProperty(validator,  t);	  if(validator!=    null)    {    finishPropertyInternal();    }    	non-compiled	[CE]  cannot  find  symbol  Parchet	160	None	replace
522	[BUG]  [BUGGY]  if(propertyContinuations  ==  null)  {  finishPropertyAnnotations();  }  else  {  forAnnotations  =  Collections.emptyList();  }  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(propertyContinuations  ==  null)  {  finishPropertyAnnotations();  }  else  {  forAnnotations  =  Collections.emptyList();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations  ==  null)  {  finishPropertyAnnotations();  }  else  {  forAnnotations  =  Collections.emptyList();  }	  if(propertyContinuations    ==    null)    {    finishPropertyContinuations();    }    else    {    forAnnotations    =    Collections.emptyList();    }    	non-compiled	[CE]  cannot  find  symbol	1	None	replace
523	[BUG]  [BUGGY]  StatusHandler.handlePropertyContinuations(t,  enclosing);  [CE]  cannot  find  symbol  StatusHandler  [FE]                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  StatusHandler.handlePropertyContinuations(t,  enclosing);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	StatusHandler.handlePropertyContinuations(t,  enclosing);	  if(validator!=    null)    {    finishPropertyContinuations();    }    if(validator    >=    null)    {    finishPropertyContinuations();    }    	non-compiled	[CE]  cannot  find  symbol  StatusHandler	56	None	replace
524	[BUG]  [BUGGY]  AssertionFailedError  t  =  validatePropertyContinuations(t);  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  AssertionFailedError  t  =  validatePropertyContinuations(t);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	AssertionFailedError  t  =  validatePropertyContinuations(t);	  if(validator!=    null)    {    finishPropertyContinuations();    }    if(validator    >=    null)    {    finishPropertyContinuations();    }    	non-compiled	[CE]  cannot  find  symbol	56	None	replace
525	[BUG]  [BUGGY]  AssertionFailedError  t  =  validatePropertyContinuations(t,  enclosing);  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  AssertionFailedError  t  =  validatePropertyContinuations(t,  enclosing);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	AssertionFailedError  t  =  validatePropertyContinuations(t,  enclosing);	  if(validator!=    null)    {    finishPropertyContinuations();    }    if(validator    >=    null)    {    finishPropertyContinuations();    }    	non-compiled	[CE]  cannot  find  symbol	56	None	replace
526	[BUG]  [BUGGY]  luate(registry,  enclosing)  {  finishPropertyContinuations();  }  else  {  registry.isFirstGeneration()?  getReferencedType()  :  null;  }  [CE]  ';'  expected  [FE]                            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  luate(registry,  enclosing)  {  finishPropertyContinuations();  }  else  {  registry.isFirstGeneration()?  getReferencedType()  :  null;  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	luate(registry,  enclosing)  {  finishPropertyContinuations();  }  else  {  registry.isFirstGeneration()?  getReferencedType()  :  null;  }	  luate(registry,    resolved)    {    finishPropertyContinuations();    }    else    {    registry.isFirstGeneration()?    getReferencedType()    :    null;    }    	non-compiled	[CE]  ';'  expected	183	None	replace
527	[BUG]  [BUGGY]  luate(registry,  enclosing)  {  startPropertyContinuations();  }  else  {  registry.isFirstGeneration()?  getReferencedType()  :  null;  }  [CE]  ';'  expected  [FE]                              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  luate(registry,  enclosing)  {  startPropertyContinuations();  }  else  {  registry.isFirstGeneration()?  getReferencedType()  :  null;  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	luate(registry,  enclosing)  {  startPropertyContinuations();  }  else  {  registry.isFirstGeneration()?  getReferencedType()  :  null;  }	  luate(registry,    resolved)    {    finishPropertyContinuations();    }    else    {    registry.isFirstGeneration()?    getReferencedType()    :    null;    }    	non-compiled	[CE]  ';'  expected	183	None	replace
528	[BUG]  [BUGGY]  luate(registry,  propertyNode)  {  finishPropertyContinuations();  }  else  {  registry.isFirstGeneration()?  getReferencedType()  :  null;  }  [CE]  ';'  expected  [FE]                                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  luate(registry,  propertyNode)  {  finishPropertyContinuations();  }  else  {  registry.isFirstGeneration()?  getReferencedType()  :  null;  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	luate(registry,  propertyNode)  {  finishPropertyContinuations();  }  else  {  registry.isFirstGeneration()?  getReferencedType()  :  null;  }	  luate(registry,    resolved)    {    finishPropertyContinuations();    }    else    {    registry.isFirstGeneration()?    getReferencedType()    :    null;    }    	non-compiled	[CE]  ';'  expected	183	None	replace
529	[BUG]  [BUGGY]  luate(registry,  type)  {  finishPropertyContinuations();  }  else  {  registry.isFirstGeneration()?  getReferencedType()  :  null;  }  [CE]  ';'  expected  [FE]                                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  luate(registry,  type)  {  finishPropertyContinuations();  }  else  {  registry.isFirstGeneration()?  getReferencedType()  :  null;  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	luate(registry,  type)  {  finishPropertyContinuations();  }  else  {  registry.isFirstGeneration()?  getReferencedType()  :  null;  }	  luate(registry,    resolved)    {    finishPropertyContinuations();    }    else    {    registry.isFirstGeneration()?    getReferencedType()    :    null;    }    	non-compiled	[CE]  ';'  expected	183	None	replace
530	[BUG]  [BUGGY]  luate(registry,  true)  {  finishPropertyContinuations();  }  else  {  registry.isFirstGeneration()?  getReferencedType()  :  null;  }  [CE]  ';'  expected  [FE]                                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  luate(registry,  true)  {  finishPropertyContinuations();  }  else  {  registry.isFirstGeneration()?  getReferencedType()  :  null;  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	luate(registry,  true)  {  finishPropertyContinuations();  }  else  {  registry.isFirstGeneration()?  getReferencedType()  :  null;  }	  luate(registry,    resolved)    {    finishPropertyContinuations();    }    else    {    registry.isFirstGeneration()?    getReferencedType()    :    null;    }    	non-compiled	[CE]  ';'  expected	183	None	replace
531	[BUG]  [BUGGY]  PropertyContinuation  propertyContinuations  =  registry.isLastGeneration()?  getReferencedType()  :  REFERRED_TYPE;  [CE]  cannot  find  symbol  REFERRED_TYPE  [FE]                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  PropertyContinuation  propertyContinuations  =  registry.isLastGeneration()?  getReferencedType()  :  REFERRED_TYPE;  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	PropertyContinuation  propertyContinuations  =  registry.isLastGeneration()?  getReferencedType()  :  REFERRED_TYPE;	  PropertyContinuation    propertyContinuations    =    registry.isLastGeneration()?    getReferencedType()    :    this;    	non-compiled	[CE]  cannot  find  symbol  REFERRED_TYPE	144	None	replace
532	[BUG]  [BUGGY]  PropertyContinuation  propertyContinuations  =  registry.isLastGeneration()?  getReferencedType()  :  REFERD_TYPE;  [CE]  cannot  find  symbol  REFERD_TYPE  [FE]                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  PropertyContinuation  propertyContinuations  =  registry.isLastGeneration()?  getReferencedType()  :  REFERD_TYPE;  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	PropertyContinuation  propertyContinuations  =  registry.isLastGeneration()?  getReferencedType()  :  REFERD_TYPE;	  PropertyContinuation    propertyContinuations    =    registry.isLastGeneration()?    getReferencedType()    :    this;    	non-compiled	[CE]  cannot  find  symbol  REFERD_TYPE	144	None	replace
533	[BUG]  [BUGGY]  PropertyContinuation  propertyContinuations  =  registry.isFirstGeneration()?  getReferencedType()  :  this;  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  PropertyContinuation  propertyContinuations  =  registry.isFirstGeneration()?  getReferencedType()  :  this;  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	PropertyContinuation  propertyContinuations  =  registry.isFirstGeneration()?  getReferencedType()  :  this;	  PropertyContinuation    propertyContinuations    =    registry.isLastGeneration()?    getReferencedType()    :    this;    	non-compiled	[CE]  cannot  find  symbol	144	None	replace
534	[BUG]  [BUGGY]  resolved  =  finishPropertyContinuations(t);  [CE]  method  finishPropertyContinuations  in  class  NamedType  cannot  be  applied  to  given  types;  [FE]                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  resolved  =  finishPropertyContinuations(t);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	resolved  =  finishPropertyContinuations(t);	  resolved    =    finishPropertyContinuations();    	non-compiled	[CE]  method  finishPropertyContinuations  in  class  NamedType  cannot  be  applied  to  given  types;	218	None	replace
535	[BUG]  [BUGGY]  resolved  =  finishPropertyContinuations(t,  propertyNode);  [CE]  cannot  find  symbol  propertyNode  [FE]                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  resolved  =  finishPropertyContinuations(t,  propertyNode);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	resolved  =  finishPropertyContinuations(t,  propertyNode);	  resolved    =    finishPropertyContinuations();    	non-compiled	[CE]  cannot  find  symbol  propertyNode	218	None	replace
536	[BUG]  [BUGGY]  resolved  =  finishPropertyAnnotations();  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  resolved  =  finishPropertyAnnotations();  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	resolved  =  finishPropertyAnnotations();	  resolved    =    finishPropertyContinuations();    	non-compiled	[CE]  cannot  find  symbol	218	None	replace
537	[BUG]  [BUGGY]  resolved  =  getPropertyContinuations();  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  resolved  =  getPropertyContinuations();  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	resolved  =  getPropertyContinuations();	  resolved    =    finishPropertyContinuations();    	non-compiled	[CE]  cannot  find  symbol	218	None	replace
538	[BUG]  [BUGGY]  resolved  =  finishPropertyContinuations(propertyNode);  [CE]  cannot  find  symbol  propertyNode  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  resolved  =  finishPropertyContinuations(propertyNode);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	resolved  =  finishPropertyContinuations(propertyNode);	  resolved    =    finishPropertyContinuations();    	non-compiled	[CE]  cannot  find  symbol  propertyNode	218	None	replace
539	[BUG]  [BUGGY]  ParchetActualState.checkState(registry.isLastGeneration(),  resolved);  [CE]  cannot  find  symbol  ParchetActualState  [FE]            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  ParchetActualState.checkState(registry.isLastGeneration(),  resolved);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	ParchetActualState.checkState(registry.isLastGeneration(),  resolved);	  ParchetActualState.checkState(registry.isLastGeneration());    	non-compiled	[CE]  cannot  find  symbol  ParchetActualState	227	None	replace
540	[BUG]  [BUGGY]  ParchetActualState.checkState(registry.isLastGeneration()  ||  registry.isLastGeneration());  [CE]  cannot  find  symbol  ParchetActualState  [FE]              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  ParchetActualState.checkState(registry.isLastGeneration()  ||  registry.isLastGeneration());  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	ParchetActualState.checkState(registry.isLastGeneration()  ||  registry.isLastGeneration());	  ParchetActualState.checkState(registry.isLastGeneration());    	non-compiled	[CE]  cannot  find  symbol  ParchetActualState	227	None	replace
541	[BUG]  [BUGGY]  ParchetActualState.checkState(registry.isLastGeneration()  &&  registry.isLastGeneration());  [CE]  cannot  find  symbol  ParchetActualState  [FE]                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  ParchetActualState.checkState(registry.isLastGeneration()  &&  registry.isLastGeneration());  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	ParchetActualState.checkState(registry.isLastGeneration()  &&  registry.isLastGeneration());	  ParchetActualState.checkState(registry.isLastGeneration());    	non-compiled	[CE]  cannot  find  symbol  ParchetActualState	227	None	replace
542	[BUG]  [BUGGY]  ParchetActualState.checkState(registry.isLastGeneration()  &&  resolved);  [CE]  cannot  find  symbol  ParchetActualState  [FE]                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  ParchetActualState.checkState(registry.isLastGeneration()  &&  resolved);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	ParchetActualState.checkState(registry.isLastGeneration()  &&  resolved);	  ParchetActualState.checkState(registry.isLastGeneration());    	non-compiled	[CE]  cannot  find  symbol  ParchetActualState	227	None	replace
543	[BUG]  [BUGGY]  ParchetActualState.checkState(registry.isFirstGeneration());  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  ParchetActualState.checkState(registry.isFirstGeneration());  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	ParchetActualState.checkState(registry.isFirstGeneration());	  ParchetActualState.checkState(registry.isLastGeneration());    	non-compiled	[CE]  cannot  find  symbol	227	None	replace
544	[BUG]  [BUGGY]  ParchetActualState.checkState(registry.isLastGeneration()  &&  registry.isFirstGeneration());  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  ParchetActualState.checkState(registry.isLastGeneration()  &&  registry.isFirstGeneration());  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	ParchetActualState.checkState(registry.isLastGeneration()  &&  registry.isFirstGeneration());	  ParchetActualState.checkState(registry.isLastGeneration());    	non-compiled	[CE]  cannot  find  symbol	227	None	replace
545	[BUG]  [BUGGY]  PropertyActual  propertyActual  =  getPropertyActual();  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  PropertyActual  propertyActual  =  getPropertyActual();  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	PropertyActual  propertyActual  =  getPropertyActual();	  if(propertyContinuations!=    null)    {    finishPropertyActual();    }    else    {    getPropertyContinuations().addAll(propertyContinuations);    }    	non-compiled	[CE]  cannot  find  symbol	213	None	replace
546	[BUG]  [BUGGY]  Status.checkState(registry!=  null);  [CE]  cannot  find  symbol  Status  [FE]                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Status.checkState(registry!=  null);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Status.checkState(registry!=  null);	  Status.checkState(validator!=    null);    	non-compiled	[CE]  cannot  find  symbol  Status	30	None	replace
547	[BUG]  [BUGGY]  Status.checkState(resolved!=  null);  [CE]  incomparable  types:  boolean  and  <null>  [FE]                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Status.checkState(resolved!=  null);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Status.checkState(resolved!=  null);	  Status.checkState(validator!=    null);    	non-compiled	[CE]  incomparable  types:  boolean  and  <null>	30	None	replace
548	[BUG]  [BUGGY]  Status.checkState(registry  ==  null);  [CE]  cannot  find  symbol  Status  [FE]                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Status.checkState(registry  ==  null);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Status.checkState(registry  ==  null);	  Status.checkState(validator!=    null);    	non-compiled	[CE]  cannot  find  symbol  Status	30	None	replace
549	[BUG]  [BUGGY]  Status.checkState(validator  ==  null);  [CE]  cannot  find  symbol  Status  [FE]                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Status.checkState(validator  ==  null);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Status.checkState(validator  ==  null);	  Status.checkState(validator!=    null);    	non-compiled	[CE]  cannot  find  symbol  Status	30	None	replace
550	[BUG]  [BUGGY]  Status.checkState(resolved  ==  null);  [CE]  incomparable  types:  boolean  and  <null>  [FE]                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Status.checkState(resolved  ==  null);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Status.checkState(resolved  ==  null);	  Status.checkState(validator!=    null);    	non-compiled	[CE]  incomparable  types:  boolean  and  <null>	30	None	replace
551	[BUG]  [BUGGY]  Status.checkState(register!=  null);  [CE]  cannot  find  symbol  register  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Status.checkState(register!=  null);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Status.checkState(register!=  null);	  Status.checkState(validator!=    null);    	non-compiled	[CE]  cannot  find  symbol  register	30	None	replace
552	[BUG]  [BUGGY]  registry.finishPropertyGeneration();  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  registry.finishPropertyGeneration();  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	registry.finishPropertyGeneration();	  predicate.finishPropertyGeneration();    	non-compiled	[CE]  cannot  find  symbol	141	None	replace
553	[BUG]  [BUGGY]  Predicates.finishPropertyGeneration();  [CE]  cannot  find  symbol  Predicates  [FE]                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Predicates.finishPropertyGeneration();  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Predicates.finishPropertyGeneration();	  predicate.finishPropertyGeneration();    	non-compiled	[CE]  cannot  find  symbol  Predicates	141	None	replace
554	[BUG]  [BUGGY]  Predicate  validator.finishPropertyGeneration();  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Predicate  validator.finishPropertyGeneration();  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Predicate  validator.finishPropertyGeneration();	  predicate.finishPropertyGeneration();    	non-compiled	[CE]  ';'  expected	141	None	replace
555	[BUG]  [BUGGY]  t.finishPropertyGeneration();  [CE]  cannot  find  symbol  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  t.finishPropertyGeneration();  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	t.finishPropertyGeneration();	  predicate.finishPropertyGeneration();    	non-compiled	[CE]  cannot  find  symbol	141	None	replace
556	[BUG]  [BUGGY]  Predicate.finishPropertyGeneration();  [CE]  cannot  find  symbol  [FE]                            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Predicate.finishPropertyGeneration();  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Predicate.finishPropertyGeneration();	  predicate.finishPropertyGeneration();    	non-compiled	[CE]  cannot  find  symbol	141	None	replace
557	[BUG]  [BUGGY]  validator.finishPropertyGeneration();  [CE]  cannot  find  symbol  [FE]                              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  validator.finishPropertyGeneration();  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	validator.finishPropertyGeneration();	  predicate.finishPropertyGeneration();    	non-compiled	[CE]  cannot  find  symbol	141	None	replace
558	[BUG]  [BUGGY]  Predicate  validator  =  registry.getValue(enclosing);  [CE]  cannot  find  symbol  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Predicate  validator  =  registry.getValue(enclosing);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Predicate  validator  =  registry.getValue(enclosing);	          Predicate    validator    =    enclosing.getValue();    	non-compiled	[CE]  cannot  find  symbol	20	None	replace
559	[BUG]  [BUGGY]  Predicate  validator  =  registry.getValue(enclosing).getValue();  [CE]  cannot  find  symbol  [FE]                            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Predicate  validator  =  registry.getValue(enclosing).getValue();  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Predicate  validator  =  registry.getValue(enclosing).getValue();	          Predicate    validator    =    enclosing.getValue();    	non-compiled	[CE]  cannot  find  symbol	20	None	replace
560	[BUG]  [BUGGY]  Predicate  validator  =  this.enclosing.getValue();  [CE]  cannot  find  symbol  enclosing  [FE]                              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Predicate  validator  =  this.enclosing.getValue();  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Predicate  validator  =  this.enclosing.getValue();	          Predicate    validator    =    enclosing.getValue();    	non-compiled	[CE]  cannot  find  symbol  enclosing	20	None	replace
561	[BUG]  [BUGGY]  Predicate  validator  =  enclosing,  registry.getValue();  [CE]  ';'  expected  [FE]                                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Predicate  validator  =  enclosing,  registry.getValue();  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Predicate  validator  =  enclosing,  registry.getValue();	          Predicate    validator    =    enclosing.getValue();    	non-compiled	[CE]  ';'  expected	20	None	replace
562	[BUG]  [BUGGY]  if(registry!=  null  &&  validator.isLastGeneration())  {  finishPropertyContinuations();  }  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(registry!=  null  &&  validator.isLastGeneration())  {  finishPropertyContinuations();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(registry!=  null  &&  validator.isLastGeneration())  {  finishPropertyContinuations();  }	  if(validator!=    null    &&    registry.isLastGeneration())    {    finishPropertyContinuations();    }    timeout    	non-compiled	[CE]  cannot  find  symbol	236	None	replace
563	[BUG]  [BUGGY]  timeout  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(registry!=  null  &&  registry.isLastGeneration())  {  finishPropertyContinuations();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	add	if(registry!=  null  &&  registry.isLastGeneration())  {  finishPropertyContinuations();  }	  if(validator!=    null    &&    registry.isLastGeneration())    {    finishPropertyContinuations();    }    timeout    	compilable	timeout	236	1	replace
564	[BUG]  [BUGGY]  if(registry!=  null  &&  registry.isLastGeneration())  {  finishPropertyContinuations();  }  timeout  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(registry!=  null  &&  registry.isLastGeneration())  {  finishPropertyContinuations();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(registry!=  null  &&  registry.isLastGeneration())  {  finishPropertyContinuations();  }	  if(validator!=    null    &&    registry.isLastGeneration())    {    finishPropertyContinuations();    }    timeout    	compilable	timeout	236	1	replace
565	[BUG]  [BUGGY]  validator!=  null  &&  registry.isLastGeneration())  {  finishPropertyContinuations();  }  [CE]  not  a  statement  [FE]                            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  validator!=  null  &&  registry.isLastGeneration())  {  finishPropertyContinuations();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	validator!=  null  &&  registry.isLastGeneration())  {  finishPropertyContinuations();  }	  if(validator!=    null    &&    registry.isLastGeneration())    {    finishPropertyContinuations();    }    timeout    	non-compiled	[CE]  not  a  statement	236	None	replace
566	[BUG]  [BUGGY]  validator!=  null  &&  registry.isLastGeneration())  {  handleTypeCycle(t);  [CE]  not  a  statement  [FE]                              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  validator!=  null  &&  registry.isLastGeneration())  {  handleTypeCycle(t);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	validator!=  null  &&  registry.isLastGeneration())  {  handleTypeCycle(t);	  if(validator!=    null    &&    registry.isLastGeneration())    {    finishPropertyContinuations();    }    timeout    	non-compiled	[CE]  not  a  statement	236	None	replace
567	[BUG]  [BUGGY]  if(registry!=  null  &&  validator.isLastGeneration())  {  startPropertyContinuations();  }  [CE]  cannot  find  symbol  [FE]                                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(registry!=  null  &&  validator.isLastGeneration())  {  startPropertyContinuations();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(registry!=  null  &&  validator.isLastGeneration())  {  startPropertyContinuations();  }	  if(validator!=    null    &&    registry.isLastGeneration())    {    finishPropertyContinuations();    }    timeout    	non-compiled	[CE]  cannot  find  symbol	236	None	replace
568	[BUG]  [BUGGY]  validator!=  null  &&  registry.isLastGeneration())  {  handlePropertyContinuations();  }  [CE]  not  a  statement  [FE]                                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  validator!=  null  &&  registry.isLastGeneration())  {  handlePropertyContinuations();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	validator!=  null  &&  registry.isLastGeneration())  {  handlePropertyContinuations();  }	  if(validator!=    null    &&    registry.isLastGeneration())    {    finishPropertyContinuations();    }    timeout    	non-compiled	[CE]  not  a  statement	236	None	replace
569	[BUG]  [BUGGY]  Predicate  validator  =  getValueForAnnotations(t,  type);  [CE]  cannot  find  symbol  type  [FE]                              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Predicate  validator  =  getValueForAnnotations(t,  type);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Predicate  validator  =  getValueForAnnotations(t,  type);	          Predicate    validator    =    getValueForAnnotations(t);    	non-compiled	[CE]  cannot  find  symbol  type	22	None	replace
570	[BUG]  [BUGGY]  Predicate  validator  =  getValueForAnnotations(registry);  [CE]  cannot  find  symbol  [FE]                                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Predicate  validator  =  getValueForAnnotations(registry);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Predicate  validator  =  getValueForAnnotations(registry);	          Predicate    validator    =    getValueForAnnotations(t);    	non-compiled	[CE]  cannot  find  symbol	22	None	replace
571	[BUG]  [BUGGY]  Predicate  validator  =  getValueForAnnotations(t,  registry);  [CE]  cannot  find  symbol  [FE]                                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Predicate  validator  =  getValueForAnnotations(t,  registry);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Predicate  validator  =  getValueForAnnotations(t,  registry);	          Predicate    validator    =    getValueForAnnotations(t);    	non-compiled	[CE]  cannot  find  symbol	22	None	replace
572	[BUG]  [BUGGY]  Predicate  validator  =  getValueForAnnotations(t,  propertyNode);  [CE]  cannot  find  symbol  propertyNode  [FE]                                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Predicate  validator  =  getValueForAnnotations(t,  propertyNode);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Predicate  validator  =  getValueForAnnotations(t,  propertyNode);	          Predicate    validator    =    getValueForAnnotations(t);    	non-compiled	[CE]  cannot  find  symbol  propertyNode	22	None	replace
573	[BUG]  [BUGGY]  Predicate  validator  =  getValueForAnnotations(t,  resolved);  [CE]  cannot  find  symbol  [FE]                                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Predicate  validator  =  getValueForAnnotations(t,  resolved);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Predicate  validator  =  getValueForAnnotations(t,  resolved);	          Predicate    validator    =    getValueForAnnotations(t);    	non-compiled	[CE]  cannot  find  symbol	22	None	replace
574	[BUG]  [BUGGY]  AssertionFailedError  t  =  resolveViaProperties(t,  enclosing);  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  AssertionFailedError  t  =  resolveViaProperties(t,  enclosing);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	AssertionFailedError  t  =  resolveViaProperties(t,  enclosing);	  if(resolved)    {    finishPropertyContinuations();    }    If(resolved)    {    finishPropertyContinuations();    }    	non-compiled	[CE]  cannot  find  symbol	37	None	replace
575	[BUG]  [BUGGY]  ensurePropertyContinuations(propertyContinuations);  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  ensurePropertyContinuations(propertyContinuations);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	ensurePropertyContinuations(propertyContinuations);	  if(propertyContinuations!=    null)    {    finishProperty();    }    else    {    getPropertyContinuations().addAll(propertyContinuations);    }    	non-compiled	[CE]  cannot  find  symbol	124	None	replace
576	[BUG]  [BUGGY]  PropertyContinuations  <  null)  {  finishPropertyContinuations();  }  else  {  Registry.isLastGeneration()?  getReferencedType()  :  this;  }  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  PropertyContinuations  <  null)  {  finishPropertyContinuations();  }  else  {  Registry.isLastGeneration()?  getReferencedType()  :  this;  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	PropertyContinuations  <  null)  {  finishPropertyContinuations();  }  else  {  Registry.isLastGeneration()?  getReferencedType()  :  this;  }	  if(propertyContinuations!=    null)    {    finishPropertyContinuations();    }    else    {    Registry.isLastGeneration()?    getReferencedType()    :    this;    }    	non-compiled	[CE]  illegal  start  of  type	217	None	replace
577	[BUG]  [BUGGY]  PropertyContinuations  <  null)  {  finishPropertyContinuations();  }  else  {  registry.isLastGeneration()?  getReferencedType()  :  this;  }  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  PropertyContinuations  <  null)  {  finishPropertyContinuations();  }  else  {  registry.isLastGeneration()?  getReferencedType()  :  this;  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	PropertyContinuations  <  null)  {  finishPropertyContinuations();  }  else  {  registry.isLastGeneration()?  getReferencedType()  :  this;  }	  if(propertyContinuations!=    null)    {    finishPropertyContinuations();    }    else    {    Registry.isLastGeneration()?    getReferencedType()    :    this;    }    	non-compiled	[CE]  illegal  start  of  type	217	None	replace
578	[BUG]  [BUGGY]  PropertyContinuations  <  null)  {  finishPropertyContinuations();  }  else  {  Registry.isLastGeneration()?  getReferencedType()  :  this;  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  PropertyContinuations  <  null)  {  finishPropertyContinuations();  }  else  {  Registry.isLastGeneration()?  getReferencedType()  :  this;  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	PropertyContinuations  <  null)  {  finishPropertyContinuations();  }  else  {  Registry.isLastGeneration()?  getReferencedType()  :  this;	  if(propertyContinuations!=    null)    {    finishPropertyContinuations();    }    else    {    Registry.isLastGeneration()?    getReferencedType()    :    this;    }    	non-compiled	[CE]  illegal  start  of  type	217	None	replace
579	[BUG]  [BUGGY]  Parchet.checkState(registry.isLastGeneration()?  getReferencedType()  :  false);  [CE]  cannot  find  symbol  Parchet  [FE]              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Parchet.checkState(registry.isLastGeneration()?  getReferencedType()  :  false);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Parchet.checkState(registry.isLastGeneration()?  getReferencedType()  :  false);	  Parchet.checkState(registry.isLastGeneration()?    getReferencedType()    :    this);    	non-compiled	[CE]  cannot  find  symbol  Parchet	63	None	replace
580	[BUG]  [BUGGY]  Parchet.checkState(registry.isLastGeneration()?  getReferencedType()  :  this,  resolved);  [CE]  cannot  find  symbol  Parchet  [FE]                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Parchet.checkState(registry.isLastGeneration()?  getReferencedType()  :  this,  resolved);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Parchet.checkState(registry.isLastGeneration()?  getReferencedType()  :  this,  resolved);	  Parchet.checkState(registry.isLastGeneration()?    getReferencedType()    :    this);    	non-compiled	[CE]  cannot  find  symbol  Parchet	63	None	replace
581	[BUG]  [BUGGY]  Parchet.checkState(registry.isFirstGeneration()?  getReferencedType()  :  this);  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Parchet.checkState(registry.isFirstGeneration()?  getReferencedType()  :  this);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Parchet.checkState(registry.isFirstGeneration()?  getReferencedType()  :  this);	  Parchet.checkState(registry.isLastGeneration()?    getReferencedType()    :    this);    	non-compiled	[CE]  cannot  find  symbol	63	None	replace
582	[BUG]  [BUGGY]  Parchet.checkNotNull(forAnnotations);  [CE]  cannot  find  symbol  forAnnotations  [FE]                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Parchet.checkNotNull(forAnnotations);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Parchet.checkNotNull(forAnnotations);	  Parchet.checkNotNull(propertyContinuations);    	non-compiled	[CE]  cannot  find  symbol  forAnnotations	88	None	replace
583	[BUG]  [BUGGY]  Parchet.checkNotNull(registry,  propertyContinuations);  [CE]  cannot  find  symbol  Parchet  [FE]                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Parchet.checkNotNull(registry,  propertyContinuations);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Parchet.checkNotNull(registry,  propertyContinuations);	  Parchet.checkNotNull(propertyContinuations);    	non-compiled	[CE]  cannot  find  symbol  Parchet	88	None	replace
584	[BUG]  [BUGGY]  Parchet.checkNotNull(resolved);  [CE]  cannot  find  symbol  Parchet  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Parchet.checkNotNull(resolved);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Parchet.checkNotNull(resolved);	  Parchet.checkNotNull(propertyContinuations);    	non-compiled	[CE]  cannot  find  symbol  Parchet	88	None	replace
585	[BUG]  [BUGGY]  if(validator!=  null)  {  finishPropropertyContinuations();  }  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(validator!=  null)  {  finishPropropertyContinuations();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(validator!=  null)  {  finishPropropertyContinuations();  }	  if(validator!=    null)    {    finishPropertyContinuations();    }    if(validator!=    null)    {    finishPropropertyContinuations();    }    	non-compiled	[CE]  cannot  find  symbol	255	None	replace
586	[BUG]  [BUGGY]  if(resolved)  {  finishPropropertyContinuations();  }  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(resolved)  {  finishPropropertyContinuations();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(resolved)  {  finishPropropertyContinuations();  }	  if(validator!=    null)    {    finishPropertyContinuations();    }    if(validator!=    null)    {    finishPropropertyContinuations();    }    	non-compiled	[CE]  cannot  find  symbol	255	None	replace
587	[BUG]  [BUGGY]  if(validator  ==  null)  {  finishPropropertyContinuations();  }  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(validator  ==  null)  {  finishPropropertyContinuations();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(validator  ==  null)  {  finishPropropertyContinuations();  }	  if(validator!=    null)    {    finishPropertyContinuations();    }    if(validator!=    null)    {    finishPropropertyContinuations();    }    	non-compiled	[CE]  cannot  find  symbol	255	None	replace
588	[BUG]  [BUGGY]  if(validator!=  null)  {  finishPropropertyAnnotations();  }  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(validator!=  null)  {  finishPropropertyAnnotations();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(validator!=  null)  {  finishPropropertyAnnotations();  }	  if(validator!=    null)    {    finishPropertyContinuations();    }    if(validator!=    null)    {    finishPropropertyContinuations();    }    	non-compiled	[CE]  cannot  find  symbol	255	None	replace
589	[BUG]  [BUGGY]  if(validator!=  null)  {  finishPropropertyFields();  }  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(validator!=  null)  {  finishPropropertyFields();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(validator!=  null)  {  finishPropropertyFields();  }	  if(validator!=    null)    {    finishPropertyContinuations();    }    if(validator!=    null)    {    finishPropropertyContinuations();    }    	non-compiled	[CE]  cannot  find  symbol	255	None	replace
590	[BUG]  [BUGGY]  PropertyValue  validator  =  validatePropertyContinuations();  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  PropertyValue  validator  =  validatePropertyContinuations();  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	PropertyValue  validator  =  validatePropertyContinuations();	  if(validator!=    null)    {    finishPropertyContinuations();    }    if(validator!=    null)    {    finishPropropertyContinuations();    }    	non-compiled	[CE]  cannot  find  symbol	255	None	replace
591	[BUG]  [BUGGY]  if(propertyContinuations!=  null)  {  startPropertyContinuations();  }  else  {  propertyContinuations.add(propertyNode);  }  [CE]  cannot  find  symbol  [FE]                            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(propertyContinuations!=  null)  {  startPropertyContinuations();  }  else  {  propertyContinuations.add(propertyNode);  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations!=  null)  {  startPropertyContinuations();  }  else  {  propertyContinuations.add(propertyNode);  }	  if(propertyContinuations!=    null)    {    finishPropertyContinuations();    }    else    {    propertyContinuations.add(propertyNode);    }    	non-compiled	[CE]  cannot  find  symbol	71	None	replace
592	[BUG]  [BUGGY]  if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  else  {  propertyContinuations.add(property);  }  [CE]  cannot  find  symbol  property  [FE]                              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  else  {  propertyContinuations.add(property);  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  else  {  propertyContinuations.add(property);  }	  if(propertyContinuations!=    null)    {    finishPropertyContinuations();    }    else    {    propertyContinuations.add(propertyNode);    }    	non-compiled	[CE]  cannot  find  symbol  property	71	None	replace
593	[BUG]  [BUGGY]  if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  else  {  propertyContinuations.add(propertyType);  }  [CE]  cannot  find  symbol  propertyType  [FE]                                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  else  {  propertyContinuations.add(propertyType);  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  else  {  propertyContinuations.add(propertyType);  }	  if(propertyContinuations!=    null)    {    finishPropertyContinuations();    }    else    {    propertyContinuations.add(propertyNode);    }    	non-compiled	[CE]  cannot  find  symbol  propertyType	71	None	replace
594	[BUG]  [BUGGY]  luate(registry,  enclosing)  {  startPropertyContinuations();  }  else  {  registry.isLastGeneration()?  getReferencedType()  :  null;  }  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  luate(registry,  enclosing)  {  startPropertyContinuations();  }  else  {  registry.isLastGeneration()?  getReferencedType()  :  null;  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	luate(registry,  enclosing)  {  startPropertyContinuations();  }  else  {  registry.isLastGeneration()?  getReferencedType()  :  null;  }	  luate(registry,    resolved)    {    finishPropertyContinuations();    }    else    {    registry.isLastGeneration()?    getReferencedType()    :    null;    }    	non-compiled	[CE]  ';'  expected	167	None	replace
595	[BUG]  [BUGGY]  luate(registry,  propertyNode)  {  finishPropertyContinuations();  }  else  {  registry.isLastGeneration()?  getReferencedType()  :  null;  }  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  luate(registry,  propertyNode)  {  finishPropertyContinuations();  }  else  {  registry.isLastGeneration()?  getReferencedType()  :  null;  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	luate(registry,  propertyNode)  {  finishPropertyContinuations();  }  else  {  registry.isLastGeneration()?  getReferencedType()  :  null;  }	  luate(registry,    resolved)    {    finishPropertyContinuations();    }    else    {    registry.isLastGeneration()?    getReferencedType()    :    null;    }    	non-compiled	[CE]  ';'  expected	167	None	replace
596	[BUG]  [BUGGY]  luate(registry,  enclosing)  {  getPropertyContinuations();  }  else  {  registry.isLastGeneration()?  getReferencedType()  :  null;  }  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  luate(registry,  enclosing)  {  getPropertyContinuations();  }  else  {  registry.isLastGeneration()?  getReferencedType()  :  null;  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	luate(registry,  enclosing)  {  getPropertyContinuations();  }  else  {  registry.isLastGeneration()?  getReferencedType()  :  null;  }	  luate(registry,    resolved)    {    finishPropertyContinuations();    }    else    {    registry.isLastGeneration()?    getReferencedType()    :    null;    }    	non-compiled	[CE]  ';'  expected	167	None	replace
597	[BUG]  [BUGGY]  luate(registry,  type)  {  finishPropertyContinuations();  }  else  {  registry.isLastGeneration()?  getReferencedType()  :  null;  }  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  luate(registry,  type)  {  finishPropertyContinuations();  }  else  {  registry.isLastGeneration()?  getReferencedType()  :  null;  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	luate(registry,  type)  {  finishPropertyContinuations();  }  else  {  registry.isLastGeneration()?  getReferencedType()  :  null;  }	  luate(registry,    resolved)    {    finishPropertyContinuations();    }    else    {    registry.isLastGeneration()?    getReferencedType()    :    null;    }    	non-compiled	[CE]  ';'  expected	167	None	replace
598	[BUG]  [BUGGY]  luate(registry,  true)  {  finishPropertyContinuations();  }  else  {  registry.isLastGeneration()?  getReferencedType()  :  null;  }  [CE]  ';'  expected  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  luate(registry,  true)  {  finishPropertyContinuations();  }  else  {  registry.isLastGeneration()?  getReferencedType()  :  null;  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	luate(registry,  true)  {  finishPropertyContinuations();  }  else  {  registry.isLastGeneration()?  getReferencedType()  :  null;  }	  luate(registry,    resolved)    {    finishPropertyContinuations();    }    else    {    registry.isLastGeneration()?    getReferencedType()    :    null;    }    	non-compiled	[CE]  ';'  expected	167	None	replace
599	[BUG]  [BUGGY]  Predicates.checkArgument(resolved);  handleTypeCycle(t);  [CE]  cannot  find  symbol  Predicates  [FE]                            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Predicates.checkArgument(resolved);  handleTypeCycle(t);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Predicates.checkArgument(resolved);  handleTypeCycle(t);	  Predicates.checkArgument(detectImplicitPrototypeCycle());    handleTypeCycle(t);    	non-compiled	[CE]  cannot  find  symbol  Predicates	202	None	replace
600	[BUG]  [BUGGY]  Predicates.checkArgument(detectImplicitTypeCycle());  handleTypeCycle(t);  [CE]  cannot  find  symbol  [FE]                              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Predicates.checkArgument(detectImplicitTypeCycle());  handleTypeCycle(t);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Predicates.checkArgument(detectImplicitTypeCycle());  handleTypeCycle(t);	  Predicates.checkArgument(detectImplicitPrototypeCycle());    handleTypeCycle(t);    	non-compiled	[CE]  cannot  find  symbol	202	None	replace
601	[BUG]  [BUGGY]  Predicates.checkArgument(!detectImplicitPrototypeCycle());  handleTypeCycle(t);  [CE]  cannot  find  symbol  Predicates  [FE]                                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Predicates.checkArgument(!detectImplicitPrototypeCycle());  handleTypeCycle(t);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Predicates.checkArgument(!detectImplicitPrototypeCycle());  handleTypeCycle(t);	  Predicates.checkArgument(detectImplicitPrototypeCycle());    handleTypeCycle(t);    	non-compiled	[CE]  cannot  find  symbol  Predicates	202	None	replace
602	[BUG]  [BUGGY]  Predicates.checkArgument(!resolved);  handleTypeCycle(t);  [CE]  cannot  find  symbol  Predicates  [FE]                                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Predicates.checkArgument(!resolved);  handleTypeCycle(t);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Predicates.checkArgument(!resolved);  handleTypeCycle(t);	  Predicates.checkArgument(detectImplicitPrototypeCycle());    handleTypeCycle(t);    	non-compiled	[CE]  cannot  find  symbol  Predicates	202	None	replace
603	[BUG]  [BUGGY]  Predicates.checkArgument(detectImplicitPrototype());  handleTypeCycle(t);  [CE]  cannot  find  symbol  [FE]                                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Predicates.checkArgument(detectImplicitPrototype());  handleTypeCycle(t);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Predicates.checkArgument(detectImplicitPrototype());  handleTypeCycle(t);	  Predicates.checkArgument(detectImplicitPrototypeCycle());    handleTypeCycle(t);    	non-compiled	[CE]  cannot  find  symbol	202	None	replace
604	[BUG]  [BUGGY]  ensurePropertyContinuations()  ||  resolveViaRegistry.isLastGeneration();  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  ensurePropertyContinuations()  ||  resolveViaRegistry.isLastGeneration();  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	ensurePropertyContinuations()  ||  resolveViaRegistry.isLastGeneration();	  ensurePropertyContinuations()    &&    resolveViaRegistry.isLastGeneration();    	non-compiled	[CE]  not  a  statement	19	None	replace
605	[BUG]  [BUGGY]  ensurePropertyContinuations()  &&  resolveViaRegistry.isFirstGeneration();  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  ensurePropertyContinuations()  &&  resolveViaRegistry.isFirstGeneration();  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	ensurePropertyContinuations()  &&  resolveViaRegistry.isFirstGeneration();	  ensurePropertyContinuations()    &&    resolveViaRegistry.isLastGeneration();    	non-compiled	[CE]  not  a  statement	19	None	replace
606	[BUG]  [BUGGY]  ensurePropertyContinuations()  &&  registry.isFirstGeneration();  [CE]  not  a  statement  [FE]                            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  ensurePropertyContinuations()  &&  registry.isFirstGeneration();  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	ensurePropertyContinuations()  &&  registry.isFirstGeneration();	  ensurePropertyContinuations()    &&    resolveViaRegistry.isLastGeneration();    	non-compiled	[CE]  not  a  statement	19	None	replace
607	[BUG]  [BUGGY]  ensurePropertyContinuations()  &&  super.isLastGeneration();  [CE]  not  a  statement  [FE]                              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  ensurePropertyContinuations()  &&  super.isLastGeneration();  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	ensurePropertyContinuations()  &&  super.isLastGeneration();	  ensurePropertyContinuations()    &&    resolveViaRegistry.isLastGeneration();    	non-compiled	[CE]  not  a  statement	19	None	replace
608	[BUG]  [BUGGY]  Predicate  validator  =  resolveViaRegistry(t,  enclosing,  registry);  [CE]  method  resolveViaRegistry  in  class  NamedType  cannot  be  applied  to  given  types;  [FE]                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Predicate  validator  =  resolveViaRegistry(t,  enclosing,  registry);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Predicate  validator  =  resolveViaRegistry(t,  enclosing,  registry);	  Predicate    validator    =    resolveViaRegistry(t,    enclosing);    	non-compiled	[CE]  method  resolveViaRegistry  in  class  NamedType  cannot  be  applied  to  given  types;	87	None	replace
609	[BUG]  [BUGGY]  Predicate  validator  =  resolveViaRegistry(t,  enclosing,  propertyNode);  [CE]  cannot  find  symbol  propertyNode  [FE]                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Predicate  validator  =  resolveViaRegistry(t,  enclosing,  propertyNode);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Predicate  validator  =  resolveViaRegistry(t,  enclosing,  propertyNode);	  Predicate    validator    =    resolveViaRegistry(t,    enclosing);    	non-compiled	[CE]  cannot  find  symbol  propertyNode	87	None	replace
610	[BUG]  [BUGGY]  Predicate  validator  =  resolveViaRegistry(t,  enclosing,  type);  [CE]  cannot  find  symbol  type  [FE]                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Predicate  validator  =  resolveViaRegistry(t,  enclosing,  type);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Predicate  validator  =  resolveViaRegistry(t,  enclosing,  type);	  Predicate    validator    =    resolveViaRegistry(t,    enclosing);    	non-compiled	[CE]  cannot  find  symbol  type	87	None	replace
611	[BUG]  [BUGGY]  Predicate  validator  =  resolveViaRegistry(t,  registry);  [CE]  method  resolveViaRegistry  in  class  NamedType  cannot  be  applied  to  given  types;  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Predicate  validator  =  resolveViaRegistry(t,  registry);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Predicate  validator  =  resolveViaRegistry(t,  registry);	  Predicate    validator    =    resolveViaRegistry(t,    enclosing);    	non-compiled	[CE]  method  resolveViaRegistry  in  class  NamedType  cannot  be  applied  to  given  types;	87	None	replace
612	[BUG]  [BUGGY]  Predicate  validator  =  resolveViaRegistry(t,  propertyNode,  enclosing);  [CE]  cannot  find  symbol  propertyNode  [FE]                            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Predicate  validator  =  resolveViaRegistry(t,  propertyNode,  enclosing);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Predicate  validator  =  resolveViaRegistry(t,  propertyNode,  enclosing);	  Predicate    validator    =    resolveViaRegistry(t,    enclosing);    	non-compiled	[CE]  cannot  find  symbol  propertyNode	87	None	replace
613	[BUG]  [BUGGY]  Predicate  validator  =  resolveViaRegistry(t,  registry,  enclosing);  [CE]  method  resolveViaRegistry  in  class  NamedType  cannot  be  applied  to  given  types;  [FE]                              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Predicate  validator  =  resolveViaRegistry(t,  registry,  enclosing);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Predicate  validator  =  resolveViaRegistry(t,  registry,  enclosing);	  Predicate    validator    =    resolveViaRegistry(t,    enclosing);    	non-compiled	[CE]  method  resolveViaRegistry  in  class  NamedType  cannot  be  applied  to  given  types;	87	None	replace
614	[BUG]  [BUGGY]  Predicate  validator  =  resolveViaRegistry(t,  enclosing,  documentation);  [CE]  cannot  find  symbol  documentation  [FE]                                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Predicate  validator  =  resolveViaRegistry(t,  enclosing,  documentation);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Predicate  validator  =  resolveViaRegistry(t,  enclosing,  documentation);	  Predicate    validator    =    resolveViaRegistry(t,    enclosing);    	non-compiled	[CE]  cannot  find  symbol  documentation	87	None	replace
615	[BUG]  [BUGGY]  Parchet.checkState(resolved  ||  forAnnotations)  {  finishPropertyContinuations();  }  else  {  registry.isLastGeneration()  :  this;  }  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Parchet.checkState(resolved  ||  forAnnotations)  {  finishPropertyContinuations();  }  else  {  registry.isLastGeneration()  :  this;  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Parchet.checkState(resolved  ||  forAnnotations)  {  finishPropertyContinuations();  }  else  {  registry.isLastGeneration()  :  this;  }	  Parchet.checkState(resolved    ||    resolved)    {    finishPropertyContinuations();    }    else    {    registry.isLastGeneration()    :    this;    }    	non-compiled	[CE]  ';'  expected	105	None	replace
616	[BUG]  [BUGGY]  Parchet.checkState(resolved  &&  resolved)  {  finishPropertyContinuations();  }  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Parchet.checkState(resolved  &&  resolved)  {  finishPropertyContinuations();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Parchet.checkState(resolved  &&  resolved)  {  finishPropertyContinuations();  }	  Parchet.checkState(resolved    ||    resolved)    {    finishPropertyContinuations();    }    else    {    registry.isLastGeneration()    :    this;    }    	non-compiled	[CE]  ';'  expected	105	None	replace
617	[BUG]  [BUGGY]  Parchet.checkState(resolved  ||  enclosing)  {  finishPropertyContinuations();  }  else  {  registry.isLastGeneration()  :  this;  }  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Parchet.checkState(resolved  ||  enclosing)  {  finishPropertyContinuations();  }  else  {  registry.isLastGeneration()  :  this;  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Parchet.checkState(resolved  ||  enclosing)  {  finishPropertyContinuations();  }  else  {  registry.isLastGeneration()  :  this;  }	  Parchet.checkState(resolved    ||    resolved)    {    finishPropertyContinuations();    }    else    {    registry.isLastGeneration()    :    this;    }    	non-compiled	[CE]  ';'  expected	105	None	replace
618	[BUG]  [BUGGY]  Parchet.checkState(resolved  ||  registry.isLastGeneration())  {  finishPropertyContinuations();  }  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Parchet.checkState(resolved  ||  registry.isLastGeneration())  {  finishPropertyContinuations();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Parchet.checkState(resolved  ||  registry.isLastGeneration())  {  finishPropertyContinuations();  }	  Parchet.checkState(resolved    ||    resolved)    {    finishPropertyContinuations();    }    else    {    registry.isLastGeneration()    :    this;    }    	non-compiled	[CE]  ';'  expected	105	None	replace
619	[BUG]  [BUGGY]  Parchet.checkState(resolved  &&  resolved)  {  finishPropertyContinuations();  }  else  {  registry.isLastGeneration()  :  this;  }  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Parchet.checkState(resolved  &&  resolved)  {  finishPropertyContinuations();  }  else  {  registry.isLastGeneration()  :  this;  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Parchet.checkState(resolved  &&  resolved)  {  finishPropertyContinuations();  }  else  {  registry.isLastGeneration()  :  this;  }	  Parchet.checkState(resolved    ||    resolved)    {    finishPropertyContinuations();    }    else    {    registry.isLastGeneration()    :    this;    }    	non-compiled	[CE]  ';'  expected	105	None	replace
620	[BUG]  [BUGGY]  Parchet.checkState(resolved  ||  getReferencedType()  ==  null)  {  finishPropertyContinuations();  }  [CE]  ';'  expected  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Parchet.checkState(resolved  ||  getReferencedType()  ==  null)  {  finishPropertyContinuations();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Parchet.checkState(resolved  ||  getReferencedType()  ==  null)  {  finishPropertyContinuations();  }	  Parchet.checkState(resolved    ||    resolved)    {    finishPropertyContinuations();    }    else    {    registry.isLastGeneration()    :    this;    }    	non-compiled	[CE]  ';'  expected	105	None	replace
621	[BUG]  [BUGGY]  Parchet.checkState(resolved  ||  resolved)  {  finishPropertyContinuations();  }  [CE]  ';'  expected  [FE]                            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Parchet.checkState(resolved  ||  resolved)  {  finishPropertyContinuations();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Parchet.checkState(resolved  ||  resolved)  {  finishPropertyContinuations();  }	  Parchet.checkState(resolved    ||    resolved)    {    finishPropertyContinuations();    }    else    {    registry.isLastGeneration()    :    this;    }    	non-compiled	[CE]  ';'  expected	105	None	replace
622	[BUG]  [BUGGY]  Parchet.checkState(registry.isLastGeneration()?  getReferencedType()  :  null;  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Parchet.checkState(registry.isLastGeneration()?  getReferencedType()  :  null;  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Parchet.checkState(registry.isLastGeneration()?  getReferencedType()  :  null;	  Parchet.checkState(registry.isLastGeneration()?    getReferencedType()    :    this;    	non-compiled	[CE]  ')'  expected	65	None	replace
623	[BUG]  [BUGGY]  Parchet.checkState(registry.isFirstGeneration()?  getReferencedType()  :  this;  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Parchet.checkState(registry.isFirstGeneration()?  getReferencedType()  :  this;  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Parchet.checkState(registry.isFirstGeneration()?  getReferencedType()  :  this;	  Parchet.checkState(registry.isLastGeneration()?    getReferencedType()    :    this;    	non-compiled	[CE]  ')'  expected	65	None	replace
624	[BUG]  [BUGGY]  Parchet.checkState(registry.isLastGeneration()?  getType()  :  this;  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Parchet.checkState(registry.isLastGeneration()?  getType()  :  this;  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Parchet.checkState(registry.isLastGeneration()?  getType()  :  this;	  Parchet.checkState(registry.isLastGeneration()?    getReferencedType()    :    this;    	non-compiled	[CE]  ')'  expected	65	None	replace
625	[BUG]  [BUGGY]  Parchet.checkState(registry.isLastGeneration()?  getPropertyType()  :  this;  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Parchet.checkState(registry.isLastGeneration()?  getPropertyType()  :  this;  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Parchet.checkState(registry.isLastGeneration()?  getPropertyType()  :  this;	  Parchet.checkState(registry.isLastGeneration()?    getReferencedType()    :    this;    	non-compiled	[CE]  ')'  expected	65	None	replace
626	[BUG]  [BUGGY]  Parchet.checkState(registry.isLastGeneration()?  getReferencedType()  :  false;  [CE]  ')'  expected  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Parchet.checkState(registry.isLastGeneration()?  getReferencedType()  :  false;  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Parchet.checkState(registry.isLastGeneration()?  getReferencedType()  :  false;	  Parchet.checkState(registry.isLastGeneration()?    getReferencedType()    :    this;    	non-compiled	[CE]  ')'  expected	65	None	replace
627	[BUG]  [BUGGY]  registry.isLastGeneration()  :  null;  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  registry.isLastGeneration()  :  null;  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	registry.isLastGeneration()  :  null;	  registry.isLastGeneration()    :    this;    	non-compiled	[CE]  ';'  expected	94	None	replace
628	[BUG]  [BUGGY]  registry.isLastGeneration()  :  getReferencedType();  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  registry.isLastGeneration()  :  getReferencedType();  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	registry.isLastGeneration()  :  getReferencedType();	  registry.isLastGeneration()    :    this;    	non-compiled	[CE]  ';'  expected	94	None	replace
629	[BUG]  [BUGGY]  registry.isFirstGeneration()  :  this;  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  registry.isFirstGeneration()  :  this;  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	registry.isFirstGeneration()  :  this;	  registry.isLastGeneration()    :    this;    	non-compiled	[CE]  ';'  expected	94	None	replace
630	[BUG]  [BUGGY]  ensurePropertyContinuations()  &&  propertyNode  ==  null;  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  ensurePropertyContinuations()  &&  propertyNode  ==  null;  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	ensurePropertyContinuations()  &&  propertyNode  ==  null;	  ensurePropertyContinuations()    &&    propertyNode!=    null;    	non-compiled	[CE]  not  a  statement	170	None	replace
631	[BUG]  [BUGGY]  ensurePropertyContinuations()  ||  propertyNode!=  null;  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  ensurePropertyContinuations()  ||  propertyNode!=  null;  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	ensurePropertyContinuations()  ||  propertyNode!=  null;	  ensurePropertyContinuations()    &&    propertyNode!=    null;    	non-compiled	[CE]  not  a  statement	170	None	replace
632	[BUG]  [BUGGY]  ensurePropertyContinuations()  &&  this.propertyNode!=  null;  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  ensurePropertyContinuations()  &&  this.propertyNode!=  null;  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	ensurePropertyContinuations()  &&  this.propertyNode!=  null;	  ensurePropertyContinuations()    &&    propertyNode!=    null;    	non-compiled	[CE]  not  a  statement	170	None	replace
633	[BUG]  [BUGGY]  ensurePropertyContinuations()  &&  propertyNode  >=  null;  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  ensurePropertyContinuations()  &&  propertyNode  >=  null;  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	ensurePropertyContinuations()  &&  propertyNode  >=  null;	  ensurePropertyContinuations()    &&    propertyNode!=    null;    	non-compiled	[CE]  not  a  statement	170	None	replace
634	[BUG]  [BUGGY]  ensurePropertyContinuations()  &&  properties!=  null;  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  ensurePropertyContinuations()  &&  properties!=  null;  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	ensurePropertyContinuations()  &&  properties!=  null;	  ensurePropertyContinuations()    &&    propertyNode!=    null;    	non-compiled	[CE]  not  a  statement	170	None	replace
635	[BUG]  [BUGGY]  Predicates.checkNotNull(forAnnotations);  [CE]  cannot  find  symbol  forAnnotations  [FE]                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Predicates.checkNotNull(forAnnotations);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Predicates.checkNotNull(forAnnotations);	  Predicates.checkNotNull(propertyContinuations);    	non-compiled	[CE]  cannot  find  symbol  forAnnotations	89	None	replace
636	[BUG]  [BUGGY]  Predicates.checkNotNull(validator);  [CE]  cannot  find  symbol  Predicates  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Predicates.checkNotNull(validator);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Predicates.checkNotNull(validator);	  Predicates.checkNotNull(propertyContinuations);    	non-compiled	[CE]  cannot  find  symbol  Predicates	89	None	replace
637	[BUG]  [BUGGY]  Predicates.checkNotNull(propertyContinuations,  validator);  [CE]  cannot  find  symbol  Predicates  [FE]                            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Predicates.checkNotNull(propertyContinuations,  validator);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Predicates.checkNotNull(propertyContinuations,  validator);	  Predicates.checkNotNull(propertyContinuations);    	non-compiled	[CE]  cannot  find  symbol  Predicates	89	None	replace
638	[BUG]  [BUGGY]  Predicates.checkNotNull(resolved);  [CE]  cannot  find  symbol  Predicates  [FE]                              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Predicates.checkNotNull(resolved);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Predicates.checkNotNull(resolved);	  Predicates.checkNotNull(propertyContinuations);    	non-compiled	[CE]  cannot  find  symbol  Predicates	89	None	replace
639	[BUG]  [BUGGY]  validatePropertyContinuations();  }  else  {  registry.isLastGeneration()  :  null;  }  [CE]  [FE]                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  validatePropertyContinuations();  }  else  {  registry.isLastGeneration()  :  null;  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	validatePropertyContinuations();  }  else  {  registry.isLastGeneration()  :  null;  }	  validatePropertyContinuations();    }    else    {    registry.isLastGeneration()    :    this;    }    	non-compiled	[CE]  	106	None	replace
640	[BUG]  [BUGGY]  Annotations  inferred  =  forAnnotations();  }  else  {  registry.isLastGeneration()  :  this;  }  [CE]  [FE]                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Annotations  inferred  =  forAnnotations();  }  else  {  registry.isLastGeneration()  :  this;  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Annotations  inferred  =  forAnnotations();  }  else  {  registry.isLastGeneration()  :  this;  }	  Annotations    inferred    =    finishPropertyContinuations();    }    else    {    registry.isLastGeneration()    :    this;    }    	non-compiled	[CE]  	244	None	replace
641	[BUG]  [BUGGY]  Annotations  inferred  =  getReferencedType();  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Annotations  inferred  =  getReferencedType();  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Annotations  inferred  =  getReferencedType();	  Annotations    inferred    =    finishPropertyContinuations();    }    else    {    registry.isLastGeneration()    :    this;    }    	non-compiled	[CE]  cannot  find  symbol	244	None	replace
642	[BUG]  [BUGGY]  Annotations  inferred  =  registry.isLastGeneration()?  getReferencedType()  :  this;  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Annotations  inferred  =  registry.isLastGeneration()?  getReferencedType()  :  this;  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Annotations  inferred  =  registry.isLastGeneration()?  getReferencedType()  :  this;	  Annotations    inferred    =    finishPropertyContinuations();    }    else    {    registry.isLastGeneration()    :    this;    }    	non-compiled	[CE]  cannot  find  symbol	244	None	replace
643	[BUG]  [BUGGY]  Annotations  inferred  =  getReferencedType();  }  else  {  registry.isLastGeneration()  :  this;  }  [CE]  [FE]                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Annotations  inferred  =  getReferencedType();  }  else  {  registry.isLastGeneration()  :  this;  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Annotations  inferred  =  getReferencedType();  }  else  {  registry.isLastGeneration()  :  this;  }	  Annotations    inferred    =    finishPropertyContinuations();    }    else    {    registry.isLastGeneration()    :    this;    }    	non-compiled	[CE]  	244	None	replace
644	[BUG]  [BUGGY]  Annotations  inferred  =  getPropertyContinuations();  }  else  {  registry.isLastGeneration()  :  this;  }  [CE]  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Annotations  inferred  =  getPropertyContinuations();  }  else  {  registry.isLastGeneration()  :  this;  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Annotations  inferred  =  getPropertyContinuations();  }  else  {  registry.isLastGeneration()  :  this;  }	  Annotations    inferred    =    finishPropertyContinuations();    }    else    {    registry.isLastGeneration()    :    this;    }    	non-compiled	[CE]  	244	None	replace
645	[BUG]  [BUGGY]  Annotations  inferred  =  getPropertyContinuations();  [CE]  cannot  find  symbol  [FE]                            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Annotations  inferred  =  getPropertyContinuations();  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Annotations  inferred  =  getPropertyContinuations();	  Annotations    inferred    =    finishPropertyContinuations();    }    else    {    registry.isLastGeneration()    :    this;    }    	non-compiled	[CE]  cannot  find  symbol	244	None	replace
646	[BUG]  [BUGGY]  if(resolved)  {  finishPropertyContinuations();  }  else  {  registry.isFirstGeneration()  :  this;  }  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(resolved)  {  finishPropertyContinuations();  }  else  {  registry.isFirstGeneration()  :  this;  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(resolved)  {  finishPropertyContinuations();  }  else  {  registry.isFirstGeneration()  :  this;  }	  if(validator    ==    null)    {    finishPropertyContinuations();    }    else    {    registry.isFirstGeneration()    :    this;    }    	non-compiled	[CE]  ';'  expected	134	None	replace
647	[BUG]  [BUGGY]  if(validator  ==  null)  {  startPropertyContinuations();  }  else  {  registry.isFirstGeneration()  :  this;  }  [CE]  ';'  expected  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(validator  ==  null)  {  startPropertyContinuations();  }  else  {  registry.isFirstGeneration()  :  this;  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(validator  ==  null)  {  startPropertyContinuations();  }  else  {  registry.isFirstGeneration()  :  this;  }	  if(validator    ==    null)    {    finishPropertyContinuations();    }    else    {    registry.isFirstGeneration()    :    this;    }    	non-compiled	[CE]  ';'  expected	134	None	replace
648	[BUG]  [BUGGY]  if(validator  ==  null)  {  finishPropertyGenerations();  }  else  {  registry.isFirstGeneration()  :  this;  }  [CE]  ';'  expected  [FE]                            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(validator  ==  null)  {  finishPropertyGenerations();  }  else  {  registry.isFirstGeneration()  :  this;  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(validator  ==  null)  {  finishPropertyGenerations();  }  else  {  registry.isFirstGeneration()  :  this;  }	  if(validator    ==    null)    {    finishPropertyContinuations();    }    else    {    registry.isFirstGeneration()    :    this;    }    	non-compiled	[CE]  ';'  expected	134	None	replace
649	[BUG]  [BUGGY]  Parchet.checkState(resolved)  {  finishPropertyInternal();  }  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Parchet.checkState(resolved)  {  finishPropertyInternal();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Parchet.checkState(resolved)  {  finishPropertyInternal();  }	  if(resolved)    {    finishPropertyInternal();    }    	non-compiled	[CE]  ';'  expected	130	None	replace
650	[BUG]  [BUGGY]  Parchet.GetProperty(resolved)  {  finishPropertyInternal();  }  [CE]  ';'  expected  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Parchet.GetProperty(resolved)  {  finishPropertyInternal();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Parchet.GetProperty(resolved)  {  finishPropertyInternal();  }	  if(resolved)    {    finishPropertyInternal();    }    	non-compiled	[CE]  ';'  expected	130	None	replace
651	[BUG]  [BUGGY]  Parchet.GetProperty(resolved,  t)  {  finishPropertyInternal();  }  [CE]  ';'  expected  [FE]                            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Parchet.GetProperty(resolved,  t)  {  finishPropertyInternal();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Parchet.GetProperty(resolved,  t)  {  finishPropertyInternal();  }	  if(resolved)    {    finishPropertyInternal();    }    	non-compiled	[CE]  ';'  expected	130	None	replace
652	[BUG]  [BUGGY]  Parchet.getInstance().finishPropertyInternal();  [CE]  cannot  find  symbol  Parchet  [FE]                              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Parchet.getInstance().finishPropertyInternal();  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Parchet.getInstance().finishPropertyInternal();	  if(resolved)    {    finishPropertyInternal();    }    	non-compiled	[CE]  cannot  find  symbol  Parchet	130	None	replace
653	[BUG]  [BUGGY]  Parchet.GetProperty(resolved,  propertyNode)  {  finishPropertyInternal();  }  [CE]  ';'  expected  [FE]                                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Parchet.GetProperty(resolved,  propertyNode)  {  finishPropertyInternal();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Parchet.GetProperty(resolved,  propertyNode)  {  finishPropertyInternal();  }	  if(resolved)    {    finishPropertyInternal();    }    	non-compiled	[CE]  ';'  expected	130	None	replace
654	[BUG]  [BUGGY]  if(propertyContinuations!=  null)  {  startPropertyActual();  }  else  {  propertyContinuations.add(propertyName);  }  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(propertyContinuations!=  null)  {  startPropertyActual();  }  else  {  propertyContinuations.add(propertyName);  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations!=  null)  {  startPropertyActual();  }  else  {  propertyContinuations.add(propertyName);  }	  if(propertyContinuations!=    null)    {    finishPropertyActual();    }    else    {    propertyContinuations.add(propertyName);    }    	non-compiled	[CE]  cannot  find  symbol	226	None	replace
655	[BUG]  [BUGGY]  PropertyActual  propertyContinuations  =  getPropertyActual();  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  PropertyActual  propertyContinuations  =  getPropertyActual();  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	PropertyActual  propertyContinuations  =  getPropertyActual();	  if(propertyContinuations!=    null)    {    finishPropertyActual();    }    else    {    propertyContinuations.add(propertyName);    }    	non-compiled	[CE]  cannot  find  symbol	226	None	replace
656	[BUG]  [BUGGY]  luate(registry,  enclosing)  {  finishPropertyContinuations();  }  else  {  registry.islastGeneration()?  getReferencedType()  :  null;  }  [CE]  ';'  expected  [FE]                              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  luate(registry,  enclosing)  {  finishPropertyContinuations();  }  else  {  registry.islastGeneration()?  getReferencedType()  :  null;  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	luate(registry,  enclosing)  {  finishPropertyContinuations();  }  else  {  registry.islastGeneration()?  getReferencedType()  :  null;  }	  luate(registry,    resolved)    {    finishPropertyContinuations();    }    else    {    registry.islastGeneration()?    getReferencedType()    :    null;    }    	non-compiled	[CE]  ';'  expected	184	None	replace
657	[BUG]  [BUGGY]  luate(registry,  enclosing)  {  startPropertyContinuations();  }  else  {  registry.islastGeneration()?  getReferencedType()  :  null;  }  [CE]  ';'  expected  [FE]                                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  luate(registry,  enclosing)  {  startPropertyContinuations();  }  else  {  registry.islastGeneration()?  getReferencedType()  :  null;  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	luate(registry,  enclosing)  {  startPropertyContinuations();  }  else  {  registry.islastGeneration()?  getReferencedType()  :  null;  }	  luate(registry,    resolved)    {    finishPropertyContinuations();    }    else    {    registry.islastGeneration()?    getReferencedType()    :    null;    }    	non-compiled	[CE]  ';'  expected	184	None	replace
658	[BUG]  [BUGGY]  luate(registry,  validated)  {  finishPropertyContinuations();  }  else  {  registry.islastGeneration()?  getReferencedType()  :  null;  }  [CE]  ';'  expected  [FE]                                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  luate(registry,  validated)  {  finishPropertyContinuations();  }  else  {  registry.islastGeneration()?  getReferencedType()  :  null;  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	luate(registry,  validated)  {  finishPropertyContinuations();  }  else  {  registry.islastGeneration()?  getReferencedType()  :  null;  }	  luate(registry,    resolved)    {    finishPropertyContinuations();    }    else    {    registry.islastGeneration()?    getReferencedType()    :    null;    }    	non-compiled	[CE]  ';'  expected	184	None	replace
659	[BUG]  [BUGGY]  luate(registry,  type)  {  finishPropertyContinuations();  }  else  {  registry.islastGeneration()?  getReferencedType()  :  null;  }  [CE]  ';'  expected  [FE]                                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  luate(registry,  type)  {  finishPropertyContinuations();  }  else  {  registry.islastGeneration()?  getReferencedType()  :  null;  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	luate(registry,  type)  {  finishPropertyContinuations();  }  else  {  registry.islastGeneration()?  getReferencedType()  :  null;  }	  luate(registry,    resolved)    {    finishPropertyContinuations();    }    else    {    registry.islastGeneration()?    getReferencedType()    :    null;    }    	non-compiled	[CE]  ';'  expected	184	None	replace
660	[BUG]  [BUGGY]  luate(registry,  true)  {  finishPropertyContinuations();  }  else  {  registry.islastGeneration()?  getReferencedType()  :  null;  }  [CE]  ';'  expected  [FE]                                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  luate(registry,  true)  {  finishPropertyContinuations();  }  else  {  registry.islastGeneration()?  getReferencedType()  :  null;  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	luate(registry,  true)  {  finishPropertyContinuations();  }  else  {  registry.islastGeneration()?  getReferencedType()  :  null;  }	  luate(registry,    resolved)    {    finishPropertyContinuations();    }    else    {    registry.islastGeneration()?    getReferencedType()    :    null;    }    	non-compiled	[CE]  ';'  expected	184	None	replace
661	[BUG]  [BUGGY]  if(forAnnotations!=  null)  {  finishPropertyValues();  }  else  {  forAnnotations  =  Collections.emptyList();  }  [CE]  cannot  find  symbol  forAnnotations  [FE]                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(forAnnotations!=  null)  {  finishPropertyValues();  }  else  {  forAnnotations  =  Collections.emptyList();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(forAnnotations!=  null)  {  finishPropertyValues();  }  else  {  forAnnotations  =  Collections.emptyList();  }	  if(propertyContinuations!=    null)    {    finishPropertyValues();    }    else    {    forAnnotations    =    Collections.emptyList();    }    	non-compiled	[CE]  cannot  find  symbol  forAnnotations	186	None	replace
662	[BUG]  [BUGGY]  if(forAnnotations!=  null)  {  finishPropertyValues();  }  else  {  forAnnotations  =  Collections.EMPTYList();  }  [CE]  cannot  find  symbol  forAnnotations  [FE]                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(forAnnotations!=  null)  {  finishPropertyValues();  }  else  {  forAnnotations  =  Collections.EMPTYList();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(forAnnotations!=  null)  {  finishPropertyValues();  }  else  {  forAnnotations  =  Collections.EMPTYList();  }	  if(propertyContinuations!=    null)    {    finishPropertyValues();    }    else    {    forAnnotations    =    Collections.emptyList();    }    	non-compiled	[CE]  cannot  find  symbol  forAnnotations	186	None	replace
663	[BUG]  [BUGGY]  if(forAnnotations  ==  null)  {  finishPropertyValues();  }  else  {  forAnnotations  =  Collections.emptyList();  }  [CE]  cannot  find  symbol  forAnnotations  [FE]                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(forAnnotations  ==  null)  {  finishPropertyValues();  }  else  {  forAnnotations  =  Collections.emptyList();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(forAnnotations  ==  null)  {  finishPropertyValues();  }  else  {  forAnnotations  =  Collections.emptyList();  }	  if(propertyContinuations!=    null)    {    finishPropertyValues();    }    else    {    forAnnotations    =    Collections.emptyList();    }    	non-compiled	[CE]  cannot  find  symbol  forAnnotations	186	None	replace
664	[BUG]  [BUGGY]  if(forAnnotations!=  null)  {  finishPropertyValues();  }  [CE]  cannot  find  symbol  forAnnotations  [FE]                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(forAnnotations!=  null)  {  finishPropertyValues();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(forAnnotations!=  null)  {  finishPropertyValues();  }	  if(propertyContinuations!=    null)    {    finishPropertyValues();    }    else    {    forAnnotations    =    Collections.emptyList();    }    	non-compiled	[CE]  cannot  find  symbol  forAnnotations	186	None	replace
665	[BUG]  [BUGGY]  if(forAnnotations!=  null)  {  startPropertyValues();  }  else  {  forAnnotations  =  Collections.emptyList();  }  [CE]  cannot  find  symbol  forAnnotations  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(forAnnotations!=  null)  {  startPropertyValues();  }  else  {  forAnnotations  =  Collections.emptyList();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(forAnnotations!=  null)  {  startPropertyValues();  }  else  {  forAnnotations  =  Collections.emptyList();  }	  if(propertyContinuations!=    null)    {    finishPropertyValues();    }    else    {    forAnnotations    =    Collections.emptyList();    }    	non-compiled	[CE]  cannot  find  symbol  forAnnotations	186	None	replace
666	[BUG]  [BUGGY]  if(forAnnotations!=  null)  {  finishPropertyValues();  }  else  {  forAnnotations  =  Collections.EMPTY_LIST;  }  [CE]  cannot  find  symbol  forAnnotations  [FE]                            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(forAnnotations!=  null)  {  finishPropertyValues();  }  else  {  forAnnotations  =  Collections.EMPTY_LIST;  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(forAnnotations!=  null)  {  finishPropertyValues();  }  else  {  forAnnotations  =  Collections.EMPTY_LIST;  }	  if(propertyContinuations!=    null)    {    finishPropertyValues();    }    else    {    forAnnotations    =    Collections.emptyList();    }    	non-compiled	[CE]  cannot  find  symbol  forAnnotations	186	None	replace
667	[BUG]  [BUGGY]  timeout  [FE]                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(propertyContinuations!=    null)    {    finishPropertyContinuations();    }    if(propertyContinuations  ==  null)  {  finishPropertyContinuations();  }  if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	add	if(propertyContinuations!=        null)        {        finishPropertyContinuations();        }        if(propertyContinuations    ==    null)    {    finishPropertyContinuations();    }    if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }	  timeout    	compilable	timeout	78	1	add
668	[BUG]  [BUGGY]  if(propertyContinuations!=    null)    {    finishPropertyContinuations();    }    if(propertyContinuations  ==  null)  {  finishPropertyContinuations();  }  if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  timeout  [FE]                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(propertyContinuations!=    null)    {    finishPropertyContinuations();    }    if(propertyContinuations  ==  null)  {  finishPropertyContinuations();  }  if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations!=        null)        {        finishPropertyContinuations();        }        if(propertyContinuations    ==    null)    {    finishPropertyContinuations();    }    if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }	  timeout    	compilable	timeout	78	1	add
669	[BUG]  [BUGGY]  timeout  [FE]                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(propertyContinuations!=    null)    {    finishPropertyContinuations();    }    if(propertyContinuations  ==  null)  {  finishPropertyContinuations();  }  if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  if(propertyContinuations  ==  null)  {  finishPropertyContinuations();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	add	if(propertyContinuations!=        null)        {        finishPropertyContinuations();        }        if(propertyContinuations    ==    null)    {    finishPropertyContinuations();    }    if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  if(propertyContinuations  ==  null)  {  finishPropertyContinuations();  }	  timeout    	compilable	timeout	78	1	add
670	[BUG]  [BUGGY]  if(propertyContinuations!=    null)    {    finishPropertyContinuations();    }    if(propertyContinuations  ==  null)  {  finishPropertyContinuations();  }  if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  if(propertyContinuations  ==  null)  {  finishPropertyContinuations();  }  timeout  [FE]                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(propertyContinuations!=    null)    {    finishPropertyContinuations();    }    if(propertyContinuations  ==  null)  {  finishPropertyContinuations();  }  if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  if(propertyContinuations  ==  null)  {  finishPropertyContinuations();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations!=        null)        {        finishPropertyContinuations();        }        if(propertyContinuations    ==    null)    {    finishPropertyContinuations();    }    if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  if(propertyContinuations  ==  null)  {  finishPropertyContinuations();  }	  timeout    	compilable	timeout	78	1	add
671	[BUG]  [BUGGY]  if(propertyContinuations!=    null)    {    finishPropertyContinuations();    }    if(propertyContinuations  ==  null)  {  finishPropertyContinuations();  }  if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  if(propertyContinuations  ==  null)  {  finishPropertyContinu  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(propertyContinuations!=    null)    {    finishPropertyContinuations();    }    if(propertyContinuations  ==  null)  {  finishPropertyContinuations();  }  if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  if(propertyContinuations  ==  null)  {  finishPropertyContinu  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations!=        null)        {        finishPropertyContinuations();        }        if(propertyContinuations    ==    null)    {    finishPropertyContinuations();    }    if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  if(propertyContinuations  ==  null)  {  finishPropertyContinu	  timeout    	non-compiled	[CE]  ';'  expected	78	None	add
672	[BUG]  [BUGGY]  if(propertyContinuations!=    null)    {    finishPropertyContinuations();    }    if(propertyContinuations  ==  null)  {  finishPropertyContinuations();  }  if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  if(propertyContinuations!=  null)  {  finishPropertyContinu  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(propertyContinuations!=    null)    {    finishPropertyContinuations();    }    if(propertyContinuations  ==  null)  {  finishPropertyContinuations();  }  if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  if(propertyContinuations!=  null)  {  finishPropertyContinu  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations!=        null)        {        finishPropertyContinuations();        }        if(propertyContinuations    ==    null)    {    finishPropertyContinuations();    }    if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  if(propertyContinuations!=  null)  {  finishPropertyContinu	  timeout    	non-compiled	[CE]  ';'  expected	78	None	add
673	[BUG]  [BUGGY]  if(propertyContinuations!=    null)    {    finishPropertyContinuations();    }    if(propertyContinuations  ==  null)  {  finishPropertyContinuations();  }  if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  if(propertyContinuations  ==  null)  {  finishPropertyContinuations();  }  if(propertyContinuations!=  null)  {  finishPropertyContinu  [CE]  ';'  expected  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(propertyContinuations!=    null)    {    finishPropertyContinuations();    }    if(propertyContinuations  ==  null)  {  finishPropertyContinuations();  }  if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  if(propertyContinuations  ==  null)  {  finishPropertyContinuations();  }  if(propertyContinuations!=  null)  {  finishPropertyContinu  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations!=        null)        {        finishPropertyContinuations();        }        if(propertyContinuations    ==    null)    {    finishPropertyContinuations();    }    if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  if(propertyContinuations  ==  null)  {  finishPropertyContinuations();  }  if(propertyContinuations!=  null)  {  finishPropertyContinu	  timeout    	non-compiled	[CE]  ';'  expected	78	None	add
674	[BUG]  [BUGGY]  if(propertyContinuations!=    null)    {    finishPropertyContinuations();    }    if(propertyContinuations  ==  null)  {  finishPropertyContinuations();  }  if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  if(propertyContinuations  ==  null)  {  finishProperty  [CE]  ';'  expected  [FE]                            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(propertyContinuations!=    null)    {    finishPropertyContinuations();    }    if(propertyContinuations  ==  null)  {  finishPropertyContinuations();  }  if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  if(propertyContinuations  ==  null)  {  finishProperty  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations!=        null)        {        finishPropertyContinuations();        }        if(propertyContinuations    ==    null)    {    finishPropertyContinuations();    }    if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  if(propertyContinuations  ==  null)  {  finishProperty	  timeout    	non-compiled	[CE]  ';'  expected	78	None	add
675	[BUG]  [BUGGY]  if(propertyContinuations!=    null)    {    finishPropertyContinuations();    }    if(propertyContinuations  ==  null)  {  finishPropertyContinuations();  }  if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  if(propertyContinuations  ==  null)  {  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(propertyContinuations!=    null)    {    finishPropertyContinuations();    }    if(propertyContinuations  ==  null)  {  finishPropertyContinuations();  }  if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  if(propertyContinuations  ==  null)  {  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations!=        null)        {        finishPropertyContinuations();        }        if(propertyContinuations    ==    null)    {    finishPropertyContinuations();    }    if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  if(propertyContinuations  ==  null)  {	  timeout    	non-compiled	[CE]  illegal  start  of  expression	78	None	add
676	[BUG]  [BUGGY]  if(propertyContinuations!=    null)    {    finishPropertyContinuations();    }    if(propertyContinuations  ==  null)  {  finishPropertyContinuations();  }  if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  if(propertyContinuations!=  null)  {  finishProperty  [CE]  ';'  expected  [FE]                                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(propertyContinuations!=    null)    {    finishPropertyContinuations();    }    if(propertyContinuations  ==  null)  {  finishPropertyContinuations();  }  if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  if(propertyContinuations!=  null)  {  finishProperty  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations!=        null)        {        finishPropertyContinuations();        }        if(propertyContinuations    ==    null)    {    finishPropertyContinuations();    }    if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  if(propertyContinuations!=  null)  {  finishProperty	  timeout    	non-compiled	[CE]  ';'  expected	78	None	add
677	[BUG]  [BUGGY]  ensurePropertyContinuations()  ||  registry.isLastGeneration();  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  ensurePropertyContinuations()  ||  registry.isLastGeneration();  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	ensurePropertyContinuations()  ||  registry.isLastGeneration();	  ensurePropertyContinuations()    &&    registry.isLastGeneration();    	non-compiled	[CE]  not  a  statement	14	None	replace
678	[BUG]  [BUGGY]  ensurePropertyContinuations()  &&  registry.isEnabled(this);  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  ensurePropertyContinuations()  &&  registry.isEnabled(this);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	ensurePropertyContinuations()  &&  registry.isEnabled(this);	  ensurePropertyContinuations()    &&    registry.isLastGeneration();    	non-compiled	[CE]  not  a  statement	14	None	replace
679	[BUG]  [BUGGY]  ensurePropertyContinuations()  &&  registry.isEnclosingGeneration();  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  ensurePropertyContinuations()  &&  registry.isEnclosingGeneration();  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	ensurePropertyContinuations()  &&  registry.isEnclosingGeneration();	  ensurePropertyContinuations()    &&    registry.isLastGeneration();    	non-compiled	[CE]  not  a  statement	14	None	replace
680	[BUG]  [BUGGY]  ensurePropertyContinuations()  &&  registry.isLocal();  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  ensurePropertyContinuations()  &&  registry.isLocal();  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	ensurePropertyContinuations()  &&  registry.isLocal();	  ensurePropertyContinuations()    &&    registry.isLastGeneration();    	non-compiled	[CE]  not  a  statement	14	None	replace
681	[BUG]  [BUGGY]  Status.checkState(this.forAnnotations  ==  null);  [CE]  cannot  find  symbol  forAnnotations  [FE]                            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Status.checkState(this.forAnnotations  ==  null);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Status.checkState(this.forAnnotations  ==  null);	  Status.checkState(propertyContinuations    ==    null);    	non-compiled	[CE]  cannot  find  symbol  forAnnotations	114	None	replace
682	[BUG]  [BUGGY]  Status.checkState(this.propertyContinuations  ==  null);  [CE]  cannot  find  symbol  Status  [FE]                              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Status.checkState(this.propertyContinuations  ==  null);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Status.checkState(this.propertyContinuations  ==  null);	  Status.checkState(propertyContinuations    ==    null);    	non-compiled	[CE]  cannot  find  symbol  Status	114	None	replace
683	[BUG]  [BUGGY]  Parchet.checkState(registry.isLastGeneration()  ||  registry.isLastGeneration());  [CE]  cannot  find  symbol  Parchet  [FE]                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Parchet.checkState(registry.isLastGeneration()  ||  registry.isLastGeneration());  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Parchet.checkState(registry.isLastGeneration()  ||  registry.isLastGeneration());	  Parchet.checkState(resolved    ||    registry.isLastGeneration());    	non-compiled	[CE]  cannot  find  symbol  Parchet	107	None	replace
684	[BUG]  [BUGGY]  Parchet.checkState(registry.isLastGeneration()  ||  resolved.isLastGeneration());  [CE]  boolean  cannot  be  dereferenced  [FE]                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Parchet.checkState(registry.isLastGeneration()  ||  resolved.isLastGeneration());  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Parchet.checkState(registry.isLastGeneration()  ||  resolved.isLastGeneration());	  Parchet.checkState(resolved    ||    registry.isLastGeneration());    	non-compiled	[CE]  boolean  cannot  be  dereferenced	107	None	replace
685	[BUG]  [BUGGY]  Parchet.checkState(registry.isFirstGeneration()  ||  registry.isLastGeneration());  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Parchet.checkState(registry.isFirstGeneration()  ||  registry.isLastGeneration());  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Parchet.checkState(registry.isFirstGeneration()  ||  registry.isLastGeneration());	  Parchet.checkState(resolved    ||    registry.isLastGeneration());    	non-compiled	[CE]  cannot  find  symbol	107	None	replace
686	[BUG]  [BUGGY]  Parchet.checkState(resolved  &&  registry.isLastGeneration());  [CE]  cannot  find  symbol  Parchet  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Parchet.checkState(resolved  &&  registry.isLastGeneration());  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Parchet.checkState(resolved  &&  registry.isLastGeneration());	  Parchet.checkState(resolved    ||    registry.isLastGeneration());    	non-compiled	[CE]  cannot  find  symbol  Parchet	107	None	replace
687	[BUG]  [BUGGY]  Parchet.checkState(registry.isLastGeneration()  ||  resolver.isLastGeneration());  [CE]  cannot  find  symbol  resolver  [FE]                            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Parchet.checkState(registry.isLastGeneration()  ||  resolver.isLastGeneration());  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Parchet.checkState(registry.isLastGeneration()  ||  resolver.isLastGeneration());	  Parchet.checkState(resolved    ||    registry.isLastGeneration());    	non-compiled	[CE]  cannot  find  symbol  resolver	107	None	replace
688	[BUG]  [BUGGY]  if(validator  ==  null  &&  validator.isConstructor())  {  finishPropertyContinuations();  }  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(validator  ==  null  &&  validator.isConstructor())  {  finishPropertyContinuations();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(validator  ==  null  &&  validator.isConstructor())  {  finishPropertyContinuations();  }	  if(validator!=    null    &&    validator.isConstructor())    {    finishPropertyContinuations();    }    	non-compiled	[CE]  cannot  find  symbol	207	None	replace
689	[BUG]  [BUGGY]  if(validator!=  null  &&  validator.isConstructor())  {  startPropertyContinuations();  }  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(validator!=  null  &&  validator.isConstructor())  {  startPropertyContinuations();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(validator!=  null  &&  validator.isConstructor())  {  startPropertyContinuations();  }	  if(validator!=    null    &&    validator.isConstructor())    {    finishPropertyContinuations();    }    	non-compiled	[CE]  cannot  find  symbol	207	None	replace
690	[BUG]  [BUGGY]  ensureConstructor(validator!=  null  &&  validator.isConstructor())  {  finishPropertyContinuations();  }  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  ensureConstructor(validator!=  null  &&  validator.isConstructor())  {  finishPropertyContinuations();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	ensureConstructor(validator!=  null  &&  validator.isConstructor())  {  finishPropertyContinuations();  }	  if(validator!=    null    &&    validator.isConstructor())    {    finishPropertyContinuations();    }    	non-compiled	[CE]  ';'  expected	207	None	replace
691	[BUG]  [BUGGY]  if(validator!=  null  &&  validater.isConstructor())  {  finishPropertyContinuations();  }  [CE]  cannot  find  symbol  validater  [FE]                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(validator!=  null  &&  validater.isConstructor())  {  finishPropertyContinuations();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(validator!=  null  &&  validater.isConstructor())  {  finishPropertyContinuations();  }	  if(validator!=    null    &&    validator.isConstructor())    {    finishPropertyContinuations();    }    	non-compiled	[CE]  cannot  find  symbol  validater	207	None	replace
692	[BUG]  [BUGGY]  if(validator!=  null  ||  validator.isConstructor())  {  finishPropertyContinuations();  }  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(validator!=  null  ||  validator.isConstructor())  {  finishPropertyContinuations();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(validator!=  null  ||  validator.isConstructor())  {  finishPropertyContinuations();  }	  if(validator!=    null    &&    validator.isConstructor())    {    finishPropertyContinuations();    }    	non-compiled	[CE]  cannot  find  symbol	207	None	replace
693	[BUG]  [BUGGY]  Status.checkState(validator!=  null  &&  validator.isConstructor());  finishPropertyContinuations();  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Status.checkState(validator!=  null  &&  validator.isConstructor());  finishPropertyContinuations();  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Status.checkState(validator!=  null  &&  validator.isConstructor());  finishPropertyContinuations();	  if(validator!=    null    &&    validator.isConstructor())    {    finishPropertyContinuations();    }    	non-compiled	[CE]  cannot  find  symbol	207	None	replace
694	[BUG]  [BUGGY]  Status.checkState(registry.isLastGeneration()?  getReferencedType()  :  this);  [CE]  cannot  find  symbol  Status  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Status.checkState(registry.isLastGeneration()?  getReferencedType()  :  this);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Status.checkState(registry.isLastGeneration()?  getReferencedType()  :  this);	  Status.checkState(registry.isLastGeneration()?    getReferencedType()    :    null);    	non-compiled	[CE]  cannot  find  symbol  Status	74	None	replace
695	[BUG]  [BUGGY]  Status.checkState(registry.isLastGeneration()?  getReferencedType()  :  null,  resolved);  [CE]  cannot  find  symbol  Status  [FE]                            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Status.checkState(registry.isLastGeneration()?  getReferencedType()  :  null,  resolved);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Status.checkState(registry.isLastGeneration()?  getReferencedType()  :  null,  resolved);	  Status.checkState(registry.isLastGeneration()?    getReferencedType()    :    null);    	non-compiled	[CE]  cannot  find  symbol  Status	74	None	replace
696	[BUG]  [BUGGY]  Status.checkState(registry.isLastGeneration()?  getReferencedType()  :  null,  this);  [CE]  cannot  find  symbol  Status  [FE]                              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Status.checkState(registry.isLastGeneration()?  getReferencedType()  :  null,  this);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Status.checkState(registry.isLastGeneration()?  getReferencedType()  :  null,  this);	  Status.checkState(registry.isLastGeneration()?    getReferencedType()    :    null);    	non-compiled	[CE]  cannot  find  symbol  Status	74	None	replace
697	[BUG]  [BUGGY]  Status.checkState(registry.isLastGeneration()?  getReferencedType()  :  null,  registry);  [CE]  cannot  find  symbol  Status  [FE]                                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Status.checkState(registry.isLastGeneration()?  getReferencedType()  :  null,  registry);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Status.checkState(registry.isLastGeneration()?  getReferencedType()  :  null,  registry);	  Status.checkState(registry.isLastGeneration()?    getReferencedType()    :    null);    	non-compiled	[CE]  cannot  find  symbol  Status	74	None	replace
698	[BUG]  [BUGGY]  Status.checkState(registry.isFirstGeneration()?  getReferencedType()  :  null);  [CE]  cannot  find  symbol  [FE]                                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Status.checkState(registry.isFirstGeneration()?  getReferencedType()  :  null);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Status.checkState(registry.isFirstGeneration()?  getReferencedType()  :  null);	  Status.checkState(registry.isLastGeneration()?    getReferencedType()    :    null);    	non-compiled	[CE]  cannot  find  symbol	74	None	replace
699	[BUG]  [BUGGY]  Status.checkState(registry.isLastGeneration()?  getReferencedType()  :  null,  true);  [CE]  cannot  find  symbol  Status  [FE]                                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Status.checkState(registry.isLastGeneration()?  getReferencedType()  :  null,  true);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Status.checkState(registry.isLastGeneration()?  getReferencedType()  :  null,  true);	  Status.checkState(registry.isLastGeneration()?    getReferencedType()    :    null);    	non-compiled	[CE]  cannot  find  symbol  Status	74	None	replace
700	[BUG]  [BUGGY]  propertyValues!=  null)  {  finishPropertyValues();  }  else  {  getPropertyContinuations().addAll(propertyContinuations);  }  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  propertyValues!=  null)  {  finishPropertyValues();  }  else  {  getPropertyContinuations().addAll(propertyContinuations);  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	propertyValues!=  null)  {  finishPropertyValues();  }  else  {  getPropertyContinuations().addAll(propertyContinuations);  }	  if(propertyContinuations!=    null)    {    finishPropertyValues();    }    else    {    getPropertyContinuations().addAll(propertyContinuations);    }    	non-compiled	[CE]  not  a  statement	212	None	replace
701	[BUG]  [BUGGY]  PropertyValues  <  null)  {  finishPropertyValues();  }  else  {  getPropertyContinuations().addAll(propertyContinuations);  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  PropertyValues  <  null)  {  finishPropertyValues();  }  else  {  getPropertyContinuations().addAll(propertyContinuations);  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	PropertyValues  <  null)  {  finishPropertyValues();  }  else  {  getPropertyContinuations().addAll(propertyContinuations);  }	  if(propertyContinuations!=    null)    {    finishPropertyValues();    }    else    {    getPropertyContinuations().addAll(propertyContinuations);    }    	non-compiled	[CE]  illegal  start  of  type	212	None	replace
702	[BUG]  [BUGGY]  propertyValues!=  null)  {  getPropertyValues();  }  else  {  getPropertyContinuations().addAll(propertyContinuations);  }  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  propertyValues!=  null)  {  getPropertyValues();  }  else  {  getPropertyContinuations().addAll(propertyContinuations);  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	propertyValues!=  null)  {  getPropertyValues();  }  else  {  getPropertyContinuations().addAll(propertyContinuations);  }	  if(propertyContinuations!=    null)    {    finishPropertyValues();    }    else    {    getPropertyContinuations().addAll(propertyContinuations);    }    	non-compiled	[CE]  not  a  statement	212	None	replace
703	[BUG]  [BUGGY]  propertyValues!=  null)  {  getPropertyValues().addAll(propertyContinuations);  }  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  propertyValues!=  null)  {  getPropertyValues().addAll(propertyContinuations);  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	propertyValues!=  null)  {  getPropertyValues().addAll(propertyContinuations);  }	  if(propertyContinuations!=    null)    {    finishPropertyValues();    }    else    {    getPropertyContinuations().addAll(propertyContinuations);    }    	non-compiled	[CE]  not  a  statement	212	None	replace
704	[BUG]  [BUGGY]  propertyValues!=  null)  {  finishPropertyValues();  }  else  {  getPropertyContinuations().addAll(property);  }  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  propertyValues!=  null)  {  finishPropertyValues();  }  else  {  getPropertyContinuations().addAll(property);  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	propertyValues!=  null)  {  finishPropertyValues();  }  else  {  getPropertyContinuations().addAll(property);  }	  if(propertyContinuations!=    null)    {    finishPropertyValues();    }    else    {    getPropertyContinuations().addAll(propertyContinuations);    }    	non-compiled	[CE]  not  a  statement	212	None	replace
705	[BUG]  [BUGGY]  BundlePropertyContinuations  registry  =  getBundlePropertyContinuations(propertyName,  enclosing);  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  BundlePropertyContinuations  registry  =  getBundlePropertyContinuations(propertyName,  enclosing);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	BundlePropertyContinuations  registry  =  getBundlePropertyContinuations(propertyName,  enclosing);	  BundlePropertyContinuations    registry    =    getBundlePropertyContinuations(propertyName);    	non-compiled	[CE]  cannot  find  symbol	104	None	replace
706	[BUG]  [BUGGY]  BundlePropertyContinuations  registry  =  getBundlePropertyContinuations(propertyName,  resolved);  [CE]  cannot  find  symbol  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  BundlePropertyContinuations  registry  =  getBundlePropertyContinuations(propertyName,  resolved);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	BundlePropertyContinuations  registry  =  getBundlePropertyContinuations(propertyName,  resolved);	  BundlePropertyContinuations    registry    =    getBundlePropertyContinuations(propertyName);    	non-compiled	[CE]  cannot  find  symbol	104	None	replace
707	[BUG]  [BUGGY]  BundlePropertyContinuations  propertyContinuations  =  getBundlePropertyContinuations(propertyName);  [CE]  cannot  find  symbol  [FE]                            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  BundlePropertyContinuations  propertyContinuations  =  getBundlePropertyContinuations(propertyName);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	BundlePropertyContinuations  propertyContinuations  =  getBundlePropertyContinuations(propertyName);	  BundlePropertyContinuations    registry    =    getBundlePropertyContinuations(propertyName);    	non-compiled	[CE]  cannot  find  symbol	104	None	replace
708	[BUG]  [BUGGY]  BundlePropertyContinuations  registry  =  getBundlePropertyContinuations(propertyName,  propertyNode);  [CE]  cannot  find  symbol  [FE]                              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  BundlePropertyContinuations  registry  =  getBundlePropertyContinuations(propertyName,  propertyNode);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	BundlePropertyContinuations  registry  =  getBundlePropertyContinuations(propertyName,  propertyNode);	  BundlePropertyContinuations    registry    =    getBundlePropertyContinuations(propertyName);    	non-compiled	[CE]  cannot  find  symbol	104	None	replace
709	[BUG]  [BUGGY]  BundlePropertyContinuations  registry  =  getBundlePropertyContinuations(propertyName,  ref);  [CE]  cannot  find  symbol  [FE]                                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  BundlePropertyContinuations  registry  =  getBundlePropertyContinuations(propertyName,  ref);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	BundlePropertyContinuations  registry  =  getBundlePropertyContinuations(propertyName,  ref);	  BundlePropertyContinuations    registry    =    getBundlePropertyContinuations(propertyName);    	non-compiled	[CE]  cannot  find  symbol	104	None	replace
710	[BUG]  [BUGGY]  BundlePropertyContinuations  registry  =  getBundlePropertyContinuations(propertyName,  reference);  [CE]  cannot  find  symbol  [FE]                                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  BundlePropertyContinuations  registry  =  getBundlePropertyContinuations(propertyName,  reference);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	BundlePropertyContinuations  registry  =  getBundlePropertyContinuations(propertyName,  reference);	  BundlePropertyContinuations    registry    =    getBundlePropertyContinuations(propertyName);    	non-compiled	[CE]  cannot  find  symbol	104	None	replace
711	[BUG]  [BUGGY]  BundlePropertyContinuations  registry  =  getBundlePropertyContinuations(propertyName,  true);  [CE]  cannot  find  symbol  [FE]                                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  BundlePropertyContinuations  registry  =  getBundlePropertyContinuations(propertyName,  true);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	BundlePropertyContinuations  registry  =  getBundlePropertyContinuations(propertyName,  true);	  BundlePropertyContinuations    registry    =    getBundlePropertyContinuations(propertyName);    	non-compiled	[CE]  cannot  find  symbol	104	None	replace
712	[BUG]  [BUGGY]  timeout  [FE]              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(validator!=    null)    {    finishPropertyContinuations();    }    if(validator  ==  null)  {  finishPropertyContinuations();  }  if(validator!=  null)  {  finishPropertyContinuations();  }  if(validator  ==  null)  {  finishPropertyContinuations();  }  if(validator  ==  null)  {  finishPropertyContinuations();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	add	if(validator!=        null)        {        finishPropertyContinuations();        }        if(validator    ==    null)    {    finishPropertyContinuations();    }    if(validator!=  null)  {  finishPropertyContinuations();  }  if(validator  ==  null)  {  finishPropertyContinuations();  }  if(validator  ==  null)  {  finishPropertyContinuations();  }	  timeout    	compilable	timeout	52	1	add
713	[BUG]  [BUGGY]  if(validator!=    null)    {    finishPropertyContinuations();    }    if(validator  ==  null)  {  finishPropertyContinuations();  }  if(validator!=  null)  {  finishPropertyContinuations();  }  if(validator  ==  null)  {  finishPropertyContinuations();  }  if(validator  ==  null)  {  finishPropertyContinuations();  }  timeout  [FE]              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(validator!=    null)    {    finishPropertyContinuations();    }    if(validator  ==  null)  {  finishPropertyContinuations();  }  if(validator!=  null)  {  finishPropertyContinuations();  }  if(validator  ==  null)  {  finishPropertyContinuations();  }  if(validator  ==  null)  {  finishPropertyContinuations();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(validator!=        null)        {        finishPropertyContinuations();        }        if(validator    ==    null)    {    finishPropertyContinuations();    }    if(validator!=  null)  {  finishPropertyContinuations();  }  if(validator  ==  null)  {  finishPropertyContinuations();  }  if(validator  ==  null)  {  finishPropertyContinuations();  }	  timeout    	compilable	timeout	52	1	add
714	[BUG]  [BUGGY]  timeout  [FE]                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(validator!=    null)    {    finishPropertyContinuations();    }    if(validator  ==  null)  {  finishPropertyContinuations();  }  if(validator!=  null)  {  finishPropertyContinuations();  }  if(validator  ==  null)  {  finishPropertyContinuations();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	add	if(validator!=        null)        {        finishPropertyContinuations();        }        if(validator    ==    null)    {    finishPropertyContinuations();    }    if(validator!=  null)  {  finishPropertyContinuations();  }  if(validator  ==  null)  {  finishPropertyContinuations();  }	  timeout    	compilable	timeout	52	1	add
715	[BUG]  [BUGGY]  if(validator!=    null)    {    finishPropertyContinuations();    }    if(validator  ==  null)  {  finishPropertyContinuations();  }  if(validator!=  null)  {  finishPropertyContinuations();  }  if(validator  ==  null)  {  finishPropertyContinuations();  }  timeout  [FE]                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(validator!=    null)    {    finishPropertyContinuations();    }    if(validator  ==  null)  {  finishPropertyContinuations();  }  if(validator!=  null)  {  finishPropertyContinuations();  }  if(validator  ==  null)  {  finishPropertyContinuations();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(validator!=        null)        {        finishPropertyContinuations();        }        if(validator    ==    null)    {    finishPropertyContinuations();    }    if(validator!=  null)  {  finishPropertyContinuations();  }  if(validator  ==  null)  {  finishPropertyContinuations();  }	  timeout    	compilable	timeout	52	1	add
716	[BUG]  [BUGGY]  timeout  [FE]                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(validator!=    null)    {    finishPropertyContinuations();    }    if(validator  ==  null)  {  finishPropertyContinuations();  }  if(validator!=  null)  {  finishPropertyContinuations();  }  if(validator!=  null)  {  finishPropertyContinuations();  }  if(validator  ==  null)  {  finishPropertyContinuations();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	add	if(validator!=        null)        {        finishPropertyContinuations();        }        if(validator    ==    null)    {    finishPropertyContinuations();    }    if(validator!=  null)  {  finishPropertyContinuations();  }  if(validator!=  null)  {  finishPropertyContinuations();  }  if(validator  ==  null)  {  finishPropertyContinuations();  }	  timeout    	compilable	timeout	52	1	add
717	[BUG]  [BUGGY]  if(validator!=    null)    {    finishPropertyContinuations();    }    if(validator  ==  null)  {  finishPropertyContinuations();  }  if(validator!=  null)  {  finishPropertyContinuations();  }  if(validator!=  null)  {  finishPropertyContinuations();  }  if(validator  ==  null)  {  finishPropertyContinuations();  }  timeout  [FE]                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(validator!=    null)    {    finishPropertyContinuations();    }    if(validator  ==  null)  {  finishPropertyContinuations();  }  if(validator!=  null)  {  finishPropertyContinuations();  }  if(validator!=  null)  {  finishPropertyContinuations();  }  if(validator  ==  null)  {  finishPropertyContinuations();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(validator!=        null)        {        finishPropertyContinuations();        }        if(validator    ==    null)    {    finishPropertyContinuations();    }    if(validator!=  null)  {  finishPropertyContinuations();  }  if(validator!=  null)  {  finishPropertyContinuations();  }  if(validator  ==  null)  {  finishPropertyContinuations();  }	  timeout    	compilable	timeout	52	1	add
718	[BUG]  [BUGGY]  timeout  [FE]                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(validator!=    null)    {    finishPropertyContinuations();    }    if(validator  ==  null)  {  finishPropertyContinuations();  }  if(validator!=  null)  {  finishPropertyContinuations();  }  if(validator  ==  null)  {  finishPropertyContinuations();  }  if(validator!=  null)  {  finishPropertyContinuations();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	add	if(validator!=        null)        {        finishPropertyContinuations();        }        if(validator    ==    null)    {    finishPropertyContinuations();    }    if(validator!=  null)  {  finishPropertyContinuations();  }  if(validator  ==  null)  {  finishPropertyContinuations();  }  if(validator!=  null)  {  finishPropertyContinuations();  }	  timeout    	compilable	timeout	52	1	add
719	[BUG]  [BUGGY]  if(validator!=    null)    {    finishPropertyContinuations();    }    if(validator  ==  null)  {  finishPropertyContinuations();  }  if(validator!=  null)  {  finishPropertyContinuations();  }  if(validator  ==  null)  {  finishPropertyContinuations();  }  if(validator!=  null)  {  finishPropertyContinuations();  }  timeout  [FE]                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(validator!=    null)    {    finishPropertyContinuations();    }    if(validator  ==  null)  {  finishPropertyContinuations();  }  if(validator!=  null)  {  finishPropertyContinuations();  }  if(validator  ==  null)  {  finishPropertyContinuations();  }  if(validator!=  null)  {  finishPropertyContinuations();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(validator!=        null)        {        finishPropertyContinuations();        }        if(validator    ==    null)    {    finishPropertyContinuations();    }    if(validator!=  null)  {  finishPropertyContinuations();  }  if(validator  ==  null)  {  finishPropertyContinuations();  }  if(validator!=  null)  {  finishPropertyContinuations();  }	  timeout    	compilable	timeout	52	1	add
720	[BUG]  [BUGGY]  timeout  [FE]                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(validator!=    null)    {    finishPropertyContinuations();    }    if(validator  ==  null)  {  finishPropertyContinuations();  }  if(validator  ==  null)  {  finishPropertyContinuations();  }  if(validator!=  null)  {  finishPropertyContinuations();  }  if(validator  ==  null)  {  finishPropertyContinuations();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	add	if(validator!=        null)        {        finishPropertyContinuations();        }        if(validator    ==    null)    {    finishPropertyContinuations();    }    if(validator  ==  null)  {  finishPropertyContinuations();  }  if(validator!=  null)  {  finishPropertyContinuations();  }  if(validator  ==  null)  {  finishPropertyContinuations();  }	  timeout    	compilable	timeout	52	1	add
721	[BUG]  [BUGGY]  if(validator!=    null)    {    finishPropertyContinuations();    }    if(validator  ==  null)  {  finishPropertyContinuations();  }  if(validator  ==  null)  {  finishPropertyContinuations();  }  if(validator!=  null)  {  finishPropertyContinuations();  }  if(validator  ==  null)  {  finishPropertyContinuations();  }  timeout  [FE]                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(validator!=    null)    {    finishPropertyContinuations();    }    if(validator  ==  null)  {  finishPropertyContinuations();  }  if(validator  ==  null)  {  finishPropertyContinuations();  }  if(validator!=  null)  {  finishPropertyContinuations();  }  if(validator  ==  null)  {  finishPropertyContinuations();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(validator!=        null)        {        finishPropertyContinuations();        }        if(validator    ==    null)    {    finishPropertyContinuations();    }    if(validator  ==  null)  {  finishPropertyContinuations();  }  if(validator!=  null)  {  finishPropertyContinuations();  }  if(validator  ==  null)  {  finishPropertyContinuations();  }	  timeout    	compilable	timeout	52	1	add
722	[BUG]  [BUGGY]  if(validator!=    null)    {    finishPropertyContinuations();    }    if(validator  ==  null)  {  finishPropertyContinuations();  }  if(validator!=  null)  {  finishPropertyContinuations();  }  if(validator  ==  null)  {  finishPropertyContinuations();  }  if(validator  ==  null)  {  startPropertyContinuations();  }  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(validator!=    null)    {    finishPropertyContinuations();    }    if(validator  ==  null)  {  finishPropertyContinuations();  }  if(validator!=  null)  {  finishPropertyContinuations();  }  if(validator  ==  null)  {  finishPropertyContinuations();  }  if(validator  ==  null)  {  startPropertyContinuations();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(validator!=        null)        {        finishPropertyContinuations();        }        if(validator    ==    null)    {    finishPropertyContinuations();    }    if(validator!=  null)  {  finishPropertyContinuations();  }  if(validator  ==  null)  {  finishPropertyContinuations();  }  if(validator  ==  null)  {  startPropertyContinuations();  }	  timeout    	non-compiled	[CE]  cannot  find  symbol	52	None	add
723	[BUG]  [BUGGY]  timeout  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(validator!=    null)    {    finishPropertyContinuations();    }    if(validator  ==  null)  {  finishPropertyContinuations();  }  if(validator!=  null)  {  finishPropertyContinuations();  }  if(validator!=  null)  {  finishPropertyContinuations();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	add	if(validator!=        null)        {        finishPropertyContinuations();        }        if(validator    ==    null)    {    finishPropertyContinuations();    }    if(validator!=  null)  {  finishPropertyContinuations();  }  if(validator!=  null)  {  finishPropertyContinuations();  }	  timeout    	compilable	timeout	52	1	add
724	[BUG]  [BUGGY]  if(validator!=    null)    {    finishPropertyContinuations();    }    if(validator  ==  null)  {  finishPropertyContinuations();  }  if(validator!=  null)  {  finishPropertyContinuations();  }  if(validator!=  null)  {  finishPropertyContinuations();  }  timeout  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(validator!=    null)    {    finishPropertyContinuations();    }    if(validator  ==  null)  {  finishPropertyContinuations();  }  if(validator!=  null)  {  finishPropertyContinuations();  }  if(validator!=  null)  {  finishPropertyContinuations();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(validator!=        null)        {        finishPropertyContinuations();        }        if(validator    ==    null)    {    finishPropertyContinuations();    }    if(validator!=  null)  {  finishPropertyContinuations();  }  if(validator!=  null)  {  finishPropertyContinuations();  }	  timeout    	compilable	timeout	52	1	add
725	[BUG]  [BUGGY]  timeout  [FE]                            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(validator!=    null)    {    finishPropertyContinuations();    }    if(validator  ==  null)  {  finishPropertyContinuations();  }  if(validator  ==  null)  {  finishPropertyContinuations();  }  if(validator  ==  null)  {  finishPropertyContinuations();  }  if(validator  ==  null)  {  finishPropertyContinuations();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	add	if(validator!=        null)        {        finishPropertyContinuations();        }        if(validator    ==    null)    {    finishPropertyContinuations();    }    if(validator  ==  null)  {  finishPropertyContinuations();  }  if(validator  ==  null)  {  finishPropertyContinuations();  }  if(validator  ==  null)  {  finishPropertyContinuations();  }	  timeout    	compilable	timeout	52	1	add
726	[BUG]  [BUGGY]  if(validator!=    null)    {    finishPropertyContinuations();    }    if(validator  ==  null)  {  finishPropertyContinuations();  }  if(validator  ==  null)  {  finishPropertyContinuations();  }  if(validator  ==  null)  {  finishPropertyContinuations();  }  if(validator  ==  null)  {  finishPropertyContinuations();  }  timeout  [FE]                            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(validator!=    null)    {    finishPropertyContinuations();    }    if(validator  ==  null)  {  finishPropertyContinuations();  }  if(validator  ==  null)  {  finishPropertyContinuations();  }  if(validator  ==  null)  {  finishPropertyContinuations();  }  if(validator  ==  null)  {  finishPropertyContinuations();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(validator!=        null)        {        finishPropertyContinuations();        }        if(validator    ==    null)    {    finishPropertyContinuations();    }    if(validator  ==  null)  {  finishPropertyContinuations();  }  if(validator  ==  null)  {  finishPropertyContinuations();  }  if(validator  ==  null)  {  finishPropertyContinuations();  }	  timeout    	compilable	timeout	52	1	add
727	[BUG]  [BUGGY]  if(validator  ==  null)  {  finishPropertyInferred();  }  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(validator  ==  null)  {  finishPropertyInferred();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(validator  ==  null)  {  finishPropertyInferred();  }	  if(validator!=    null)    {    finishPropertyInferred();    }    	non-compiled	[CE]  cannot  find  symbol	159	None	replace
728	[BUG]  [BUGGY]  Parchet.checkState(validator!=  null);  finishPropertyInferred();  [CE]  cannot  find  symbol  Parchet  [FE]                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Parchet.checkState(validator!=  null);  finishPropertyInferred();  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Parchet.checkState(validator!=  null);  finishPropertyInferred();	  if(validator!=    null)    {    finishPropertyInferred();    }    	non-compiled	[CE]  cannot  find  symbol  Parchet	159	None	replace
729	[BUG]  [BUGGY]  if(validator!=  null)  {  startPropertyInferred();  }  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(validator!=  null)  {  startPropertyInferred();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(validator!=  null)  {  startPropertyInferred();  }	  if(validator!=    null)    {    finishPropertyInferred();    }    	non-compiled	[CE]  cannot  find  symbol	159	None	replace
730	[BUG]  [BUGGY]  Parchet.GetPropertyInferred(validator,  t);  [CE]  cannot  find  symbol  Parchet  [FE]                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Parchet.GetPropertyInferred(validator,  t);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Parchet.GetPropertyInferred(validator,  t);	  if(validator!=    null)    {    finishPropertyInferred();    }    	non-compiled	[CE]  cannot  find  symbol  Parchet	159	None	replace
731	[BUG]  [BUGGY]  PropertyContinuations  propertyContinuations  =  getPropertyContinuations();  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  PropertyContinuations  propertyContinuations  =  getPropertyContinuations();  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	PropertyContinuations  propertyContinuations  =  getPropertyContinuations();	  if(propertyContinuations!=    null)    {    startPropertyContinuations();    }    else    {    propertyContinuations.add(propertyName);    }    	non-compiled	[CE]  cannot  find  symbol	68	None	replace
732	[BUG]  [BUGGY]  if(propertyContinuations!=  null)  {  startPropertyConfig();  }  else  {  propertyContinuations.add(propertyName);  }  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(propertyContinuations!=  null)  {  startPropertyConfig();  }  else  {  propertyContinuations.add(propertyName);  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations!=  null)  {  startPropertyConfig();  }  else  {  propertyContinuations.add(propertyName);  }	  if(propertyContinuations!=    null)    {    startPropertyContinuations();    }    else    {    propertyContinuations.add(propertyName);    }    	non-compiled	[CE]  cannot  find  symbol	68	None	replace
733	[BUG]  [BUGGY]  if(propertyContinuations!=  null)  {  startPropertyContinuations();  }  else  {  properties.add(propertyName);  }  [CE]  cannot  find  symbol  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(propertyContinuations!=  null)  {  startPropertyContinuations();  }  else  {  properties.add(propertyName);  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations!=  null)  {  startPropertyContinuations();  }  else  {  properties.add(propertyName);  }	  if(propertyContinuations!=    null)    {    startPropertyContinuations();    }    else    {    propertyContinuations.add(propertyName);    }    	non-compiled	[CE]  cannot  find  symbol	68	None	replace
734	[BUG]  [BUGGY]  if(propertyContinuations!=  null)  {  startPropertyContinuations();  }  else  {  propertyContinuations.remove(propertyName);  }  [CE]  cannot  find  symbol  [FE]                            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(propertyContinuations!=  null)  {  startPropertyContinuations();  }  else  {  propertyContinuations.remove(propertyName);  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations!=  null)  {  startPropertyContinuations();  }  else  {  propertyContinuations.remove(propertyName);  }	  if(propertyContinuations!=    null)    {    startPropertyContinuations();    }    else    {    propertyContinuations.add(propertyName);    }    	non-compiled	[CE]  cannot  find  symbol	68	None	replace
735	[BUG]  [BUGGY]  PropertyContinuations  <  PropertyContinuation>  finishPropertyContinuations(t);  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  PropertyContinuations  <  PropertyContinuation>  finishPropertyContinuations(t);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	PropertyContinuations  <  PropertyContinuation>  finishPropertyContinuations(t);	  PropertyContinuations    <    PropertyContinuation>    finishPropertyContinuations();    	non-compiled	[CE]  ';'  expected	112	None	replace
736	[BUG]  [BUGGY]  PropertyContinuations  <  PropertyContinuation>  finishPropertyContinuations(t,  propertyNode);  [CE]  ';'  expected  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  PropertyContinuations  <  PropertyContinuation>  finishPropertyContinuations(t,  propertyNode);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	PropertyContinuations  <  PropertyContinuation>  finishPropertyContinuations(t,  propertyNode);	  PropertyContinuations    <    PropertyContinuation>    finishPropertyContinuations();    	non-compiled	[CE]  ';'  expected	112	None	replace
737	[BUG]  [BUGGY]  PropertyContinuations  <  PropertyContinuation>  finishPropertyContinuations(t,  enclosing);  [CE]  ';'  expected  [FE]                            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  PropertyContinuations  <  PropertyContinuation>  finishPropertyContinuations(t,  enclosing);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	PropertyContinuations  <  PropertyContinuation>  finishPropertyContinuations(t,  enclosing);	  PropertyContinuations    <    PropertyContinuation>    finishPropertyContinuations();    	non-compiled	[CE]  ';'  expected	112	None	replace
738	[BUG]  [BUGGY]  Status.checkState(this.forAnnotations!=  null);  [CE]  cannot  find  symbol  forAnnotations  [FE]                                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Status.checkState(this.forAnnotations!=  null);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Status.checkState(this.forAnnotations!=  null);	  Status.checkState(propertyContinuations!=    null);    	non-compiled	[CE]  cannot  find  symbol  forAnnotations	116	None	replace
739	[BUG]  [BUGGY]  Status.checkState(this.propertyContinuations!=  null);  [CE]  cannot  find  symbol  Status  [FE]                                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Status.checkState(this.propertyContinuations!=  null);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Status.checkState(this.propertyContinuations!=  null);	  Status.checkState(propertyContinuations!=    null);    	non-compiled	[CE]  cannot  find  symbol  Status	116	None	replace
740	[BUG]  [BUGGY]  Status.checkState(propertyContinuations!=  null,  forAnnotations);  [CE]  cannot  find  symbol  forAnnotations  [FE]                                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Status.checkState(propertyContinuations!=  null,  forAnnotations);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Status.checkState(propertyContinuations!=  null,  forAnnotations);	  Status.checkState(propertyContinuations!=    null);    	non-compiled	[CE]  cannot  find  symbol  forAnnotations	116	None	replace
741	[BUG]  [BUGGY]  if(propertyContinuations  ==  null)  {  finishPropertyInferred();  }  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(propertyContinuations  ==  null)  {  finishPropertyInferred();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations  ==  null)  {  finishPropertyInferred();  }	  if(propertyContinuations!=    null)    {    finishPropertyInferred();    }    	non-compiled	[CE]  cannot  find  symbol	136	None	replace
742	[BUG]  [BUGGY]  if(propertyContinuations!=  null)  {  startPropertyInferred();  }  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(propertyContinuations!=  null)  {  startPropertyInferred();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations!=  null)  {  startPropertyInferred();  }	  if(propertyContinuations!=    null)    {    finishPropertyInferred();    }    	non-compiled	[CE]  cannot  find  symbol	136	None	replace
743	[BUG]  [BUGGY]  timeout  [FE]                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(propertyContinuations!=  null  &&  propertyContinuations.size()  >  1)  {  finishPropertyContinuations();  }  if(propertyContinuations!=  null  &&  propertyContinuations.size()  >  1)  {  finishPropertyContinuations();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	add	if(propertyContinuations!=    null    &&    propertyContinuations.size()    >    1)    {    finishPropertyContinuations();    }    if(propertyContinuations!=  null  &&  propertyContinuations.size()  >  1)  {  finishPropertyContinuations();  }	  timeout    	compilable	timeout	258	1	add
744	[BUG]  [BUGGY]  if(propertyContinuations!=  null  &&  propertyContinuations.size()  >  1)  {  finishPropertyContinuations();  }  if(propertyContinuations!=  null  &&  propertyContinuations.size()  >  1)  {  finishPropertyContinuations();  }  timeout  [FE]                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(propertyContinuations!=  null  &&  propertyContinuations.size()  >  1)  {  finishPropertyContinuations();  }  if(propertyContinuations!=  null  &&  propertyContinuations.size()  >  1)  {  finishPropertyContinuations();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations!=    null    &&    propertyContinuations.size()    >    1)    {    finishPropertyContinuations();    }    if(propertyContinuations!=  null  &&  propertyContinuations.size()  >  1)  {  finishPropertyContinuations();  }	  timeout    	compilable	timeout	258	1	add
745	[BUG]  [BUGGY]  timeout  [FE]                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(propertyContinuations!=  null  &&  propertyContinuations.size()  >  1)  {  finishPropertyContinuations();  }  if(propertyContinuations  ==  null  &&  propertyContinuations.size()  >  1)  {  finishPropertyContinuations();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	add	if(propertyContinuations!=    null    &&    propertyContinuations.size()    >    1)    {    finishPropertyContinuations();    }    if(propertyContinuations  ==  null  &&  propertyContinuations.size()  >  1)  {  finishPropertyContinuations();  }	  timeout    	compilable	timeout	258	1	add
746	[BUG]  [BUGGY]  if(propertyContinuations!=  null  &&  propertyContinuations.size()  >  1)  {  finishPropertyContinuations();  }  if(propertyContinuations  ==  null  &&  propertyContinuations.size()  >  1)  {  finishPropertyContinuations();  }  timeout  [FE]                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(propertyContinuations!=  null  &&  propertyContinuations.size()  >  1)  {  finishPropertyContinuations();  }  if(propertyContinuations  ==  null  &&  propertyContinuations.size()  >  1)  {  finishPropertyContinuations();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations!=    null    &&    propertyContinuations.size()    >    1)    {    finishPropertyContinuations();    }    if(propertyContinuations  ==  null  &&  propertyContinuations.size()  >  1)  {  finishPropertyContinuations();  }	  timeout    	compilable	timeout	258	1	add
747	[BUG]  [BUGGY]  if(propertyContinuations!=  null  &&  propertyContinuations.size()  >  1)  {  finishPropertyContinuations();  }  if(propertyContinuations!=  null  &&  propertyContinuations.size()  >  1)  {  startPropertyContinuations();  }  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(propertyContinuations!=  null  &&  propertyContinuations.size()  >  1)  {  finishPropertyContinuations();  }  if(propertyContinuations!=  null  &&  propertyContinuations.size()  >  1)  {  startPropertyContinuations();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations!=    null    &&    propertyContinuations.size()    >    1)    {    finishPropertyContinuations();    }    if(propertyContinuations!=  null  &&  propertyContinuations.size()  >  1)  {  startPropertyContinuations();  }	  timeout    	non-compiled	[CE]  cannot  find  symbol	258	None	add
748	[BUG]  [BUGGY]  if(propertyContinuations!=  null  &&  propertyContinuations.size()  >  1)  {  finishPropertyContinuations();  }  if(propertyContinuations  >=  null  &&  propertyContinuations.size()  >  1)  {  finishPropertyContinuations();  }  [CE]  bad  operand  types  for  binary  operator  '>='  [FE]                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(propertyContinuations!=  null  &&  propertyContinuations.size()  >  1)  {  finishPropertyContinuations();  }  if(propertyContinuations  >=  null  &&  propertyContinuations.size()  >  1)  {  finishPropertyContinuations();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations!=    null    &&    propertyContinuations.size()    >    1)    {    finishPropertyContinuations();    }    if(propertyContinuations  >=  null  &&  propertyContinuations.size()  >  1)  {  finishPropertyContinuations();  }	  timeout    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>='	258	None	add
749	[BUG]  [BUGGY]  if(propertyContinuations!=  null  &&  propertyContinuations.size()  >  1)  {  finishPropertyContinuations();  }  If(propertyContinuations!=  null  &&  propertyContinuations.size()  >  1)  {  finishPropertyContinuations();  }  [CE]  ';'  expected  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(propertyContinuations!=  null  &&  propertyContinuations.size()  >  1)  {  finishPropertyContinuations();  }  If(propertyContinuations!=  null  &&  propertyContinuations.size()  >  1)  {  finishPropertyContinuations();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations!=    null    &&    propertyContinuations.size()    >    1)    {    finishPropertyContinuations();    }    If(propertyContinuations!=  null  &&  propertyContinuations.size()  >  1)  {  finishPropertyContinuations();  }	  timeout    	non-compiled	[CE]  ';'  expected	258	None	add
750	[BUG]  [BUGGY]  if(propertyContinuations!=  null  &&  propertyContinuations.size()  >  1)  {  finishPropertyContinuations();  }  if(propertyContinuations!=  null  &&  propertiesContinuations.size()  >  1)  {  finishPropertyContinuations();  }  [CE]  cannot  find  symbol  propertiesContinuations  [FE]                            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(propertyContinuations!=  null  &&  propertyContinuations.size()  >  1)  {  finishPropertyContinuations();  }  if(propertyContinuations!=  null  &&  propertiesContinuations.size()  >  1)  {  finishPropertyContinuations();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations!=    null    &&    propertyContinuations.size()    >    1)    {    finishPropertyContinuations();    }    if(propertyContinuations!=  null  &&  propertiesContinuations.size()  >  1)  {  finishPropertyContinuations();  }	  timeout    	non-compiled	[CE]  cannot  find  symbol  propertiesContinuations	258	None	add
751	[BUG]  [BUGGY]  if(propertyContinuations!=  null  &&  propertyContinuations.size()  >  1)  {  finishPropertyContinuations();  }  if(propertyContinuations  >>  null  &&  propertyContinuations.size()  >  1)  {  finishPropertyContinuations();  }  [CE]  bad  operand  types  for  binary  operator  '>>'  [FE]                              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(propertyContinuations!=  null  &&  propertyContinuations.size()  >  1)  {  finishPropertyContinuations();  }  if(propertyContinuations  >>  null  &&  propertyContinuations.size()  >  1)  {  finishPropertyContinuations();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations!=    null    &&    propertyContinuations.size()    >    1)    {    finishPropertyContinuations();    }    if(propertyContinuations  >>  null  &&  propertyContinuations.size()  >  1)  {  finishPropertyContinuations();  }	  timeout    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>>'	258	None	add
752	[BUG]  [BUGGY]  if(forAnnotations!=  null)  {  finishPropertyGeneration();  }  else  {  forAnnotations  =  Collections.emptyList();  }  [CE]  cannot  find  symbol  forAnnotations  [FE]                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(forAnnotations!=  null)  {  finishPropertyGeneration();  }  else  {  forAnnotations  =  Collections.emptyList();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(forAnnotations!=  null)  {  finishPropertyGeneration();  }  else  {  forAnnotations  =  Collections.emptyList();  }	  if(propertyContinuations!=    null)    {    finishPropertyGeneration();    }    else    {    forAnnotations    =    Collections.emptyList();    }    	non-compiled	[CE]  cannot  find  symbol  forAnnotations	251	None	replace
753	[BUG]  [BUGGY]  if(forAnnotations!=  null)  {  finishPropertyGeneration();  }  else  {  forAnnotations  =  Collections.EMPTYList();  }  [CE]  cannot  find  symbol  forAnnotations  [FE]                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(forAnnotations!=  null)  {  finishPropertyGeneration();  }  else  {  forAnnotations  =  Collections.EMPTYList();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(forAnnotations!=  null)  {  finishPropertyGeneration();  }  else  {  forAnnotations  =  Collections.EMPTYList();  }	  if(propertyContinuations!=    null)    {    finishPropertyGeneration();    }    else    {    forAnnotations    =    Collections.emptyList();    }    	non-compiled	[CE]  cannot  find  symbol  forAnnotations	251	None	replace
754	[BUG]  [BUGGY]  if(forAnnotations  ==  null)  {  finishPropertyGeneration();  }  else  {  forAnnotations  =  Collections.emptyList();  }  [CE]  cannot  find  symbol  forAnnotations  [FE]                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(forAnnotations  ==  null)  {  finishPropertyGeneration();  }  else  {  forAnnotations  =  Collections.emptyList();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(forAnnotations  ==  null)  {  finishPropertyGeneration();  }  else  {  forAnnotations  =  Collections.emptyList();  }	  if(propertyContinuations!=    null)    {    finishPropertyGeneration();    }    else    {    forAnnotations    =    Collections.emptyList();    }    	non-compiled	[CE]  cannot  find  symbol  forAnnotations	251	None	replace
755	[BUG]  [BUGGY]  if(forAnnotations!=  null)  {  startPropertyGeneration();  }  else  {  forAnnotations  =  Collections.emptyList();  }  [CE]  cannot  find  symbol  forAnnotations  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(forAnnotations!=  null)  {  startPropertyGeneration();  }  else  {  forAnnotations  =  Collections.emptyList();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(forAnnotations!=  null)  {  startPropertyGeneration();  }  else  {  forAnnotations  =  Collections.emptyList();  }	  if(propertyContinuations!=    null)    {    finishPropertyGeneration();    }    else    {    forAnnotations    =    Collections.emptyList();    }    	non-compiled	[CE]  cannot  find  symbol  forAnnotations	251	None	replace
756	[BUG]  [BUGGY]  ForAnnotations  <  null)  {  finishPropertyGeneration();  }  else  {  forAnnotations  =  Collections.emptyList();  }  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  ForAnnotations  <  null)  {  finishPropertyGeneration();  }  else  {  forAnnotations  =  Collections.emptyList();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	ForAnnotations  <  null)  {  finishPropertyGeneration();  }  else  {  forAnnotations  =  Collections.emptyList();  }	  if(propertyContinuations!=    null)    {    finishPropertyGeneration();    }    else    {    forAnnotations    =    Collections.emptyList();    }    	non-compiled	[CE]  illegal  start  of  type	251	None	replace
757	[BUG]  [BUGGY]  if(forAnnotations!=  null)  {  finishPropertyGeneration();  }  [CE]  cannot  find  symbol  forAnnotations  [FE]                              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(forAnnotations!=  null)  {  finishPropertyGeneration();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(forAnnotations!=  null)  {  finishPropertyGeneration();  }	  if(propertyContinuations!=    null)    {    finishPropertyGeneration();    }    else    {    forAnnotations    =    Collections.emptyList();    }    	non-compiled	[CE]  cannot  find  symbol  forAnnotations	251	None	replace
758	[BUG]  [BUGGY]  Annotation  <?>  propertyContinuations  =  registry.getPropertyType(propertyName,  reference);  [CE]  cannot  find  symbol  [FE]                              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Annotation  <?>  propertyContinuations  =  registry.getPropertyType(propertyName,  reference);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Annotation  <?>  propertyContinuations  =  registry.getPropertyType(propertyName,  reference);	  Annotation    <?>    propertyContinuations    =    registry.getPropertyType(propertyName);    	non-compiled	[CE]  cannot  find  symbol	198	None	replace
759	[BUG]  [BUGGY]  Annotation  <?>  propertyContinuations  =  registry.getPropertyType(propertyName,  false);  [CE]  cannot  find  symbol  [FE]                                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Annotation  <?>  propertyContinuations  =  registry.getPropertyType(propertyName,  false);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Annotation  <?>  propertyContinuations  =  registry.getPropertyType(propertyName,  false);	  Annotation    <?>    propertyContinuations    =    registry.getPropertyType(propertyName);    	non-compiled	[CE]  cannot  find  symbol	198	None	replace
760	[BUG]  [BUGGY]  Annotation  <?>  propertyContinuations  =  registry.getPropertyType(propertyName,  enclosing);  [CE]  cannot  find  symbol  [FE]                                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Annotation  <?>  propertyContinuations  =  registry.getPropertyType(propertyName,  enclosing);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Annotation  <?>  propertyContinuations  =  registry.getPropertyType(propertyName,  enclosing);	  Annotation    <?>    propertyContinuations    =    registry.getPropertyType(propertyName);    	non-compiled	[CE]  cannot  find  symbol	198	None	replace
761	[BUG]  [BUGGY]  Annotation  <?>  propertyContinuations  =  this.registry.getPropertyType(propertyName);  [CE]  cannot  find  symbol  [FE]                                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Annotation  <?>  propertyContinuations  =  this.registry.getPropertyType(propertyName);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Annotation  <?>  propertyContinuations  =  this.registry.getPropertyType(propertyName);	  Annotation    <?>    propertyContinuations    =    registry.getPropertyType(propertyName);    	non-compiled	[CE]  cannot  find  symbol	198	None	replace
762	[BUG]  [BUGGY]  Annotation  <?>  propertyContinuations  =  registry.getPropertyType(propertyName,  resolved);  [CE]  cannot  find  symbol  [FE]                                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Annotation  <?>  propertyContinuations  =  registry.getPropertyType(propertyName,  resolved);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Annotation  <?>  propertyContinuations  =  registry.getPropertyType(propertyName,  resolved);	  Annotation    <?>    propertyContinuations    =    registry.getPropertyType(propertyName);    	non-compiled	[CE]  cannot  find  symbol	198	None	replace
763	[BUG]  [BUGGY]  Annotation  <?>  propertyContinuations  =  registry.getPropertyType(propertyName,  true);  [CE]  cannot  find  symbol  [FE]                                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Annotation  <?>  propertyContinuations  =  registry.getPropertyType(propertyName,  true);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Annotation  <?>  propertyContinuations  =  registry.getPropertyType(propertyName,  true);	  Annotation    <?>    propertyContinuations    =    registry.getPropertyType(propertyName);    	non-compiled	[CE]  cannot  find  symbol	198	None	replace
764	[BUG]  [BUGGY]  timeout  [FE]            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(validator!=    null)    {    finishPropertyContinuations();    }    if(validator!=  null)  {  finishPropertyContinuations();  }  if(validator!=  null)  {  finishPropertyContinuations();  }  if(validator!=  null)  {  finishPropertyContinuations();  }  if(validator!=  null)  {  finishPropertyContinuations();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	add	if(validator!=        null)        {        finishPropertyContinuations();        }        if(validator!=    null)    {    finishPropertyContinuations();    }    if(validator!=  null)  {  finishPropertyContinuations();  }  if(validator!=  null)  {  finishPropertyContinuations();  }  if(validator!=  null)  {  finishPropertyContinuations();  }	  timeout    	compilable	timeout	50	1	add
765	[BUG]  [BUGGY]  if(validator!=    null)    {    finishPropertyContinuations();    }    if(validator!=  null)  {  finishPropertyContinuations();  }  if(validator!=  null)  {  finishPropertyContinuations();  }  if(validator!=  null)  {  finishPropertyContinuations();  }  if(validator!=  null)  {  finishPropertyContinuations();  }  timeout  [FE]            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(validator!=    null)    {    finishPropertyContinuations();    }    if(validator!=  null)  {  finishPropertyContinuations();  }  if(validator!=  null)  {  finishPropertyContinuations();  }  if(validator!=  null)  {  finishPropertyContinuations();  }  if(validator!=  null)  {  finishPropertyContinuations();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(validator!=        null)        {        finishPropertyContinuations();        }        if(validator!=    null)    {    finishPropertyContinuations();    }    if(validator!=  null)  {  finishPropertyContinuations();  }  if(validator!=  null)  {  finishPropertyContinuations();  }  if(validator!=  null)  {  finishPropertyContinuations();  }	  timeout    	compilable	timeout	50	1	add
766	[BUG]  [BUGGY]  timeout  [FE]              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(validator!=    null)    {    finishPropertyContinuations();    }    if(validator!=  null)  {  finishPropertyContinuations();  }  if(validator!=  null)  {  finishPropertyContinuations();  }  if(validator!=  null)  {  finishPropertyContinuations();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	add	if(validator!=        null)        {        finishPropertyContinuations();        }        if(validator!=    null)    {    finishPropertyContinuations();    }    if(validator!=  null)  {  finishPropertyContinuations();  }  if(validator!=  null)  {  finishPropertyContinuations();  }	  timeout    	compilable	timeout	50	1	add
767	[BUG]  [BUGGY]  if(validator!=    null)    {    finishPropertyContinuations();    }    if(validator!=  null)  {  finishPropertyContinuations();  }  if(validator!=  null)  {  finishPropertyContinuations();  }  if(validator!=  null)  {  finishPropertyContinuations();  }  timeout  [FE]              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(validator!=    null)    {    finishPropertyContinuations();    }    if(validator!=  null)  {  finishPropertyContinuations();  }  if(validator!=  null)  {  finishPropertyContinuations();  }  if(validator!=  null)  {  finishPropertyContinuations();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(validator!=        null)        {        finishPropertyContinuations();        }        if(validator!=    null)    {    finishPropertyContinuations();    }    if(validator!=  null)  {  finishPropertyContinuations();  }  if(validator!=  null)  {  finishPropertyContinuations();  }	  timeout    	compilable	timeout	50	1	add
768	[BUG]  [BUGGY]  timeout  [FE]                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(validator!=    null)    {    finishPropertyContinuations();    }    if(validator!=  null)  {  finishPropertyContinuations();  }  if(validator  ==  null)  {  finishPropertyContinuations();  }  if(validator!=  null)  {  finishPropertyContinuations();  }  if(validator!=  null)  {  finishPropertyContinuations();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	add	if(validator!=        null)        {        finishPropertyContinuations();        }        if(validator!=    null)    {    finishPropertyContinuations();    }    if(validator  ==  null)  {  finishPropertyContinuations();  }  if(validator!=  null)  {  finishPropertyContinuations();  }  if(validator!=  null)  {  finishPropertyContinuations();  }	  timeout    	compilable	timeout	50	1	add
769	[BUG]  [BUGGY]  if(validator!=    null)    {    finishPropertyContinuations();    }    if(validator!=  null)  {  finishPropertyContinuations();  }  if(validator  ==  null)  {  finishPropertyContinuations();  }  if(validator!=  null)  {  finishPropertyContinuations();  }  if(validator!=  null)  {  finishPropertyContinuations();  }  timeout  [FE]                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(validator!=    null)    {    finishPropertyContinuations();    }    if(validator!=  null)  {  finishPropertyContinuations();  }  if(validator  ==  null)  {  finishPropertyContinuations();  }  if(validator!=  null)  {  finishPropertyContinuations();  }  if(validator!=  null)  {  finishPropertyContinuations();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(validator!=        null)        {        finishPropertyContinuations();        }        if(validator!=    null)    {    finishPropertyContinuations();    }    if(validator  ==  null)  {  finishPropertyContinuations();  }  if(validator!=  null)  {  finishPropertyContinuations();  }  if(validator!=  null)  {  finishPropertyContinuations();  }	  timeout    	compilable	timeout	50	1	add
770	[BUG]  [BUGGY]  timeout  [FE]                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(validator!=    null)    {    finishPropertyContinuations();    }    if(validator!=  null)  {  finishPropertyContinuations();  }  if(validator!=  null)  {  finishPropertyContinuations();  }  if(validator  ==  null)  {  finishPropertyContinuations();  }  if(validator!=  null)  {  finishPropertyContinuations();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	add	if(validator!=        null)        {        finishPropertyContinuations();        }        if(validator!=    null)    {    finishPropertyContinuations();    }    if(validator!=  null)  {  finishPropertyContinuations();  }  if(validator  ==  null)  {  finishPropertyContinuations();  }  if(validator!=  null)  {  finishPropertyContinuations();  }	  timeout    	compilable	timeout	50	1	add
771	[BUG]  [BUGGY]  if(validator!=    null)    {    finishPropertyContinuations();    }    if(validator!=  null)  {  finishPropertyContinuations();  }  if(validator!=  null)  {  finishPropertyContinuations();  }  if(validator  ==  null)  {  finishPropertyContinuations();  }  if(validator!=  null)  {  finishPropertyContinuations();  }  timeout  [FE]                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(validator!=    null)    {    finishPropertyContinuations();    }    if(validator!=  null)  {  finishPropertyContinuations();  }  if(validator!=  null)  {  finishPropertyContinuations();  }  if(validator  ==  null)  {  finishPropertyContinuations();  }  if(validator!=  null)  {  finishPropertyContinuations();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(validator!=        null)        {        finishPropertyContinuations();        }        if(validator!=    null)    {    finishPropertyContinuations();    }    if(validator!=  null)  {  finishPropertyContinuations();  }  if(validator  ==  null)  {  finishPropertyContinuations();  }  if(validator!=  null)  {  finishPropertyContinuations();  }	  timeout    	compilable	timeout	50	1	add
772	[BUG]  [BUGGY]  timeout  [FE]                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(validator!=    null)    {    finishPropertyContinuations();    }    if(validator!=  null)  {  finishPropertyContinuations();  }  if(validator!=  null)  {  finishPropertyContinuations();  }  if(validator!=  null)  {  finishPropertyContinuations();  }  if(validator  ==  null)  {  finishPropertyContinuations();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	add	if(validator!=        null)        {        finishPropertyContinuations();        }        if(validator!=    null)    {    finishPropertyContinuations();    }    if(validator!=  null)  {  finishPropertyContinuations();  }  if(validator!=  null)  {  finishPropertyContinuations();  }  if(validator  ==  null)  {  finishPropertyContinuations();  }	  timeout    	compilable	timeout	50	1	add
773	[BUG]  [BUGGY]  if(validator!=    null)    {    finishPropertyContinuations();    }    if(validator!=  null)  {  finishPropertyContinuations();  }  if(validator!=  null)  {  finishPropertyContinuations();  }  if(validator!=  null)  {  finishPropertyContinuations();  }  if(validator  ==  null)  {  finishPropertyContinuations();  }  timeout  [FE]                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(validator!=    null)    {    finishPropertyContinuations();    }    if(validator!=  null)  {  finishPropertyContinuations();  }  if(validator!=  null)  {  finishPropertyContinuations();  }  if(validator!=  null)  {  finishPropertyContinuations();  }  if(validator  ==  null)  {  finishPropertyContinuations();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(validator!=        null)        {        finishPropertyContinuations();        }        if(validator!=    null)    {    finishPropertyContinuations();    }    if(validator!=  null)  {  finishPropertyContinuations();  }  if(validator!=  null)  {  finishPropertyContinuations();  }  if(validator  ==  null)  {  finishPropertyContinuations();  }	  timeout    	compilable	timeout	50	1	add
774	[BUG]  [BUGGY]  if(validator!=    null)    {    finishPropertyContinuations();    }    if(validator!=  null)  {  finishPropertyContinuations();  }  if(validator!=  null)  {  finishPropertyContinuations();  }  if(validator!=  null)  {  finishPropertyContinuations();  }  if(validator!=  null)  {  startPropertyContinuations();  }  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(validator!=    null)    {    finishPropertyContinuations();    }    if(validator!=  null)  {  finishPropertyContinuations();  }  if(validator!=  null)  {  finishPropertyContinuations();  }  if(validator!=  null)  {  finishPropertyContinuations();  }  if(validator!=  null)  {  startPropertyContinuations();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(validator!=        null)        {        finishPropertyContinuations();        }        if(validator!=    null)    {    finishPropertyContinuations();    }    if(validator!=  null)  {  finishPropertyContinuations();  }  if(validator!=  null)  {  finishPropertyContinuations();  }  if(validator!=  null)  {  startPropertyContinuations();  }	  timeout    	non-compiled	[CE]  cannot  find  symbol	50	None	add
775	[BUG]  [BUGGY]  if(validator!=    null)    {    finishPropertyContinuations();    }    if(validator!=  null)  {  finishPropertyContinuations();  }  if(validator!=  null)  {  finishPropertyContinuations();  }  if(validator!=  null)  {  finishPropertyContinuations();  }  if(validator!=  null)  {  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(validator!=    null)    {    finishPropertyContinuations();    }    if(validator!=  null)  {  finishPropertyContinuations();  }  if(validator!=  null)  {  finishPropertyContinuations();  }  if(validator!=  null)  {  finishPropertyContinuations();  }  if(validator!=  null)  {  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(validator!=        null)        {        finishPropertyContinuations();        }        if(validator!=    null)    {    finishPropertyContinuations();    }    if(validator!=  null)  {  finishPropertyContinuations();  }  if(validator!=  null)  {  finishPropertyContinuations();  }  if(validator!=  null)  {	  timeout    	non-compiled	[CE]  illegal  start  of  expression	50	None	add
776	[BUG]  [BUGGY]  if(validator!=    null)    {    finishPropertyContinuations();    }    if(validator!=  null)  {  finishPropertyContinuations();  }  if(validator!=  null)  {  startPropertyContinuations();  }  if(validator!=  null)  {  finishPropertyContinuations();  }  if(validator!=  null)  {  finishPropertyContinuations();  }  [CE]  cannot  find  symbol  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(validator!=    null)    {    finishPropertyContinuations();    }    if(validator!=  null)  {  finishPropertyContinuations();  }  if(validator!=  null)  {  startPropertyContinuations();  }  if(validator!=  null)  {  finishPropertyContinuations();  }  if(validator!=  null)  {  finishPropertyContinuations();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(validator!=        null)        {        finishPropertyContinuations();        }        if(validator!=    null)    {    finishPropertyContinuations();    }    if(validator!=  null)  {  startPropertyContinuations();  }  if(validator!=  null)  {  finishPropertyContinuations();  }  if(validator!=  null)  {  finishPropertyContinuations();  }	  timeout    	non-compiled	[CE]  cannot  find  symbol	50	None	add
777	[BUG]  [BUGGY]  Parchet.checkState(resolved  ||  forAnnotations)  {  finishPropertyContinuations();  }  else  {  Registry.isLastGeneration()  :  this;  }  [CE]  ';'  expected  [FE]                            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Parchet.checkState(resolved  ||  forAnnotations)  {  finishPropertyContinuations();  }  else  {  Registry.isLastGeneration()  :  this;  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Parchet.checkState(resolved  ||  forAnnotations)  {  finishPropertyContinuations();  }  else  {  Registry.isLastGeneration()  :  this;  }	  Parchet.checkState(resolved    ||    resolved)    {    finishPropertyContinuations();    }    else    {    Registry.isLastGeneration()    :    this;    }    	non-compiled	[CE]  ';'  expected	111	None	replace
778	[BUG]  [BUGGY]  Parchet.checkState(resolved  ||  enclosing)  {  finishPropertyContinuations();  }  else  {  Registry.isLastGeneration()  :  this;  }  [CE]  ';'  expected  [FE]                              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Parchet.checkState(resolved  ||  enclosing)  {  finishPropertyContinuations();  }  else  {  Registry.isLastGeneration()  :  this;  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Parchet.checkState(resolved  ||  enclosing)  {  finishPropertyContinuations();  }  else  {  Registry.isLastGeneration()  :  this;  }	  Parchet.checkState(resolved    ||    resolved)    {    finishPropertyContinuations();    }    else    {    Registry.isLastGeneration()    :    this;    }    	non-compiled	[CE]  ';'  expected	111	None	replace
779	[BUG]  [BUGGY]  Parchet.checkState(resolved  &&  resolved)  {  finishPropertyContinuations();  }  else  {  Registry.isLastGeneration()  :  this;  }  [CE]  ';'  expected  [FE]                                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Parchet.checkState(resolved  &&  resolved)  {  finishPropertyContinuations();  }  else  {  Registry.isLastGeneration()  :  this;  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Parchet.checkState(resolved  &&  resolved)  {  finishPropertyContinuations();  }  else  {  Registry.isLastGeneration()  :  this;  }	  Parchet.checkState(resolved    ||    resolved)    {    finishPropertyContinuations();    }    else    {    Registry.isLastGeneration()    :    this;    }    	non-compiled	[CE]  ';'  expected	111	None	replace
780	[BUG]  [BUGGY]  Parchet.checkState(resolved  ||!resolved)  {  finishPropertyContinuations();  }  else  {  Registry.isLastGeneration()  :  this;  }  [CE]  ';'  expected  [FE]                                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Parchet.checkState(resolved  ||!resolved)  {  finishPropertyContinuations();  }  else  {  Registry.isLastGeneration()  :  this;  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Parchet.checkState(resolved  ||!resolved)  {  finishPropertyContinuations();  }  else  {  Registry.isLastGeneration()  :  this;  }	  Parchet.checkState(resolved    ||    resolved)    {    finishPropertyContinuations();    }    else    {    Registry.isLastGeneration()    :    this;    }    	non-compiled	[CE]  ';'  expected	111	None	replace
781	[BUG]  [BUGGY]  Parchet.checkState(resolved  ||  registry.isLastGeneration())  {  finishPropertyContinuations();  }  else  {  Registry.isLastGeneration()  :  this;  }  [CE]  ';'  expected  [FE]                                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Parchet.checkState(resolved  ||  registry.isLastGeneration())  {  finishPropertyContinuations();  }  else  {  Registry.isLastGeneration()  :  this;  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Parchet.checkState(resolved  ||  registry.isLastGeneration())  {  finishPropertyContinuations();  }  else  {  Registry.isLastGeneration()  :  this;  }	  Parchet.checkState(resolved    ||    resolved)    {    finishPropertyContinuations();    }    else    {    Registry.isLastGeneration()    :    this;    }    	non-compiled	[CE]  ';'  expected	111	None	replace
782	[BUG]  [BUGGY]  Parchet.checkState(resolved  ||  getReferencedType()  ==  null)  {  finishPropertyContinuations();  }  else  {  Registry.isLastGeneration()  :  this;  }  [CE]  ';'  expected  [FE]                                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Parchet.checkState(resolved  ||  getReferencedType()  ==  null)  {  finishPropertyContinuations();  }  else  {  Registry.isLastGeneration()  :  this;  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Parchet.checkState(resolved  ||  getReferencedType()  ==  null)  {  finishPropertyContinuations();  }  else  {  Registry.isLastGeneration()  :  this;  }	  Parchet.checkState(resolved    ||    resolved)    {    finishPropertyContinuations();    }    else    {    Registry.isLastGeneration()    :    this;    }    	non-compiled	[CE]  ';'  expected	111	None	replace
783	[BUG]  [BUGGY]  ensurePropertyContinuations(),  registry.isLastGeneration(),  resolved);  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  ensurePropertyContinuations(),  registry.isLastGeneration(),  resolved);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	ensurePropertyContinuations(),  registry.isLastGeneration(),  resolved);	  ensurePropertyContinuations(),    registry.isLastGeneration());    	non-compiled	[CE]  ';'  expected	18	None	replace
784	[BUG]  [BUGGY]  ensurePropertyContinuations(),  registry.isEnabled(this);  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  ensurePropertyContinuations(),  registry.isEnabled(this);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	ensurePropertyContinuations(),  registry.isEnabled(this);	  ensurePropertyContinuations(),    registry.isLastGeneration());    	non-compiled	[CE]  ';'  expected	18	None	replace
785	[BUG]  [BUGGY]  ensurePropertyContinuations(),  registry.isReferencedType());  [CE]  ';'  expected  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  ensurePropertyContinuations(),  registry.isReferencedType());  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	ensurePropertyContinuations(),  registry.isReferencedType());	  ensurePropertyContinuations(),    registry.isLastGeneration());    	non-compiled	[CE]  ';'  expected	18	None	replace
786	[BUG]  [BUGGY]  ensurePropertyContinuations(),  registry.isFirstGeneration());  [CE]  ';'  expected  [FE]                            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  ensurePropertyContinuations(),  registry.isFirstGeneration());  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	ensurePropertyContinuations(),  registry.isFirstGeneration());	  ensurePropertyContinuations(),    registry.isLastGeneration());    	non-compiled	[CE]  ';'  expected	18	None	replace
787	[BUG]  [BUGGY]  ensurePropertyContinuations(),  registry.isLastGeneration()?  getReferencedType()  :  null);  [CE]  ';'  expected  [FE]                              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  ensurePropertyContinuations(),  registry.isLastGeneration()?  getReferencedType()  :  null);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	ensurePropertyContinuations(),  registry.isLastGeneration()?  getReferencedType()  :  null);	  ensurePropertyContinuations(),    registry.isLastGeneration());    	non-compiled	[CE]  ';'  expected	18	None	replace
788	[BUG]  [BUGGY]  ensurePropertyContinuations(),  registry.isLastGeneration()?  getReferencedType()  :  this);  [CE]  ';'  expected  [FE]                                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  ensurePropertyContinuations(),  registry.isLastGeneration()?  getReferencedType()  :  this);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	ensurePropertyContinuations(),  registry.isLastGeneration()?  getReferencedType()  :  this);	  ensurePropertyContinuations(),    registry.isLastGeneration());    	non-compiled	[CE]  ';'  expected	18	None	replace
789	[BUG]  [BUGGY]  Predicate  validator  =  getValueForAnnotations(enclosing,  registry);  [CE]  cannot  find  symbol  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Predicate  validator  =  getValueForAnnotations(enclosing,  registry);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Predicate  validator  =  getValueForAnnotations(enclosing,  registry);	          Predicate    validator    =    getValueForAnnotations(enclosing);    	non-compiled	[CE]  cannot  find  symbol	178	None	replace
790	[BUG]  [BUGGY]  Predicate  validator  =  getValueForAnnotations(enclosing,  type);  [CE]  cannot  find  symbol  type  [FE]                            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Predicate  validator  =  getValueForAnnotations(enclosing,  type);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Predicate  validator  =  getValueForAnnotations(enclosing,  type);	          Predicate    validator    =    getValueForAnnotations(enclosing);    	non-compiled	[CE]  cannot  find  symbol  type	178	None	replace
791	[BUG]  [BUGGY]  Predicate  validator  =  getValueForAnnotations(enclosing,  propertyNode);  [CE]  cannot  find  symbol  propertyNode  [FE]                              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Predicate  validator  =  getValueForAnnotations(enclosing,  propertyNode);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Predicate  validator  =  getValueForAnnotations(enclosing,  propertyNode);	          Predicate    validator    =    getValueForAnnotations(enclosing);    	non-compiled	[CE]  cannot  find  symbol  propertyNode	178	None	replace
792	[BUG]  [BUGGY]  Predicate  validator  =  getValueForAnnotations(enclosing,  t);  [CE]  cannot  find  symbol  [FE]                                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Predicate  validator  =  getValueForAnnotations(enclosing,  t);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Predicate  validator  =  getValueForAnnotations(enclosing,  t);	          Predicate    validator    =    getValueForAnnotations(enclosing);    	non-compiled	[CE]  cannot  find  symbol	178	None	replace
793	[BUG]  [BUGGY]  Predicate  validator  =  getValueForAnnotations(enclosing,  serialVersionUID);  [CE]  cannot  find  symbol  [FE]                                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Predicate  validator  =  getValueForAnnotations(enclosing,  serialVersionUID);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Predicate  validator  =  getValueForAnnotations(enclosing,  serialVersionUID);	          Predicate    validator    =    getValueForAnnotations(enclosing);    	non-compiled	[CE]  cannot  find  symbol	178	None	replace
794	[BUG]  [BUGGY]  Predicate  validator  =  getValueForAnnotations(enclosing,  true);  [CE]  cannot  find  symbol  [FE]                                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Predicate  validator  =  getValueForAnnotations(enclosing,  true);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Predicate  validator  =  getValueForAnnotations(enclosing,  true);	          Predicate    validator    =    getValueForAnnotations(enclosing);    	non-compiled	[CE]  cannot  find  symbol	178	None	replace
795	[BUG]  [BUGGY]  timeout  [FE]                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  resolveViaProperties(t,  enclosing);  resolveViaProperties(t,  enclosing);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	add	resolveViaProperties(t,    enclosing);    resolveViaProperties(t,  enclosing);	  timeout    	compilable	timeout	85	1	add
796	[BUG]  [BUGGY]  resolveViaProperties(t,  enclosing);  resolveViaProperties(t,  enclosing);  timeout  [FE]                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  resolveViaProperties(t,  enclosing);  resolveViaProperties(t,  enclosing);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	resolveViaProperties(t,    enclosing);    resolveViaProperties(t,  enclosing);	  timeout    	compilable	timeout	85	1	add
797	[BUG]  [BUGGY]  resolveViaProperties(t,  enclosing);  if(enclosing!=  null)  {  resolveViaProperties(t,  enclosing);  }  else  {  registry.isLastGeneration()?  getReferencedType()  :  this;  }  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  resolveViaProperties(t,  enclosing);  if(enclosing!=  null)  {  resolveViaProperties(t,  enclosing);  }  else  {  registry.isLastGeneration()?  getReferencedType()  :  this;  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	resolveViaProperties(t,    enclosing);    if(enclosing!=  null)  {  resolveViaProperties(t,  enclosing);  }  else  {  registry.isLastGeneration()?  getReferencedType()  :  this;  }	  timeout    	non-compiled	[CE]  not  a  statement	85	None	add
798	[BUG]  [BUGGY]  resolveViaProperties(t,  enclosing);  if(type!=  null)  {  resolveViaProperties(t,  enclosing);  }  else  {  registry.isLastGeneration()?  getReferencedType()  :  this;  }  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  resolveViaProperties(t,  enclosing);  if(type!=  null)  {  resolveViaProperties(t,  enclosing);  }  else  {  registry.isLastGeneration()?  getReferencedType()  :  this;  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	resolveViaProperties(t,    enclosing);    if(type!=  null)  {  resolveViaProperties(t,  enclosing);  }  else  {  registry.isLastGeneration()?  getReferencedType()  :  this;  }	  timeout    	non-compiled	[CE]  not  a  statement	85	None	add
799	[BUG]  [BUGGY]  timeout  [FE]                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  resolveViaProperties(t,  enclosing);  if(enclosing!=  null)  {  resolveViaProperties(t,  enclosing);  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	add	resolveViaProperties(t,    enclosing);    if(enclosing!=  null)  {  resolveViaProperties(t,  enclosing);  }	  timeout    	compilable	timeout	85	1	add
800	[BUG]  [BUGGY]  resolveViaProperties(t,  enclosing);  if(enclosing!=  null)  {  resolveViaProperties(t,  enclosing);  }  timeout  [FE]                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  resolveViaProperties(t,  enclosing);  if(enclosing!=  null)  {  resolveViaProperties(t,  enclosing);  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	resolveViaProperties(t,    enclosing);    if(enclosing!=  null)  {  resolveViaProperties(t,  enclosing);  }	  timeout    	compilable	timeout	85	1	add
801	[BUG]  [BUGGY]  resolveViaProperties(t,  enclosing);  if(enclosing!=  null)  {  resolveViaProperties(t,  enclosing);  }  else  {  registry.isLastGeneration()?  getInferredType()  :  this;  }  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  resolveViaProperties(t,  enclosing);  if(enclosing!=  null)  {  resolveViaProperties(t,  enclosing);  }  else  {  registry.isLastGeneration()?  getInferredType()  :  this;  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	resolveViaProperties(t,    enclosing);    if(enclosing!=  null)  {  resolveViaProperties(t,  enclosing);  }  else  {  registry.isLastGeneration()?  getInferredType()  :  this;  }	  timeout    	non-compiled	[CE]  not  a  statement	85	None	add
802	[BUG]  [BUGGY]  resolveViaProperties(t,  enclosing);  if(enclosing!=  null)  {  resolveViaProperties(t,  enclosing);  }  else  {  registry.isLastGeneration()  :  this;  }  [CE]  ';'  expected  [FE]                            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  resolveViaProperties(t,  enclosing);  if(enclosing!=  null)  {  resolveViaProperties(t,  enclosing);  }  else  {  registry.isLastGeneration()  :  this;  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	resolveViaProperties(t,    enclosing);    if(enclosing!=  null)  {  resolveViaProperties(t,  enclosing);  }  else  {  registry.isLastGeneration()  :  this;  }	  timeout    	non-compiled	[CE]  ';'  expected	85	None	add
803	[BUG]  [BUGGY]  resolveViaProperties(t,  enclosing);  if(enclosing!=  null)  {  resolveViaProperties(t,  enclosing);  }  else  {  registry.isLastGeneration()?  getType()  :  this;  }  [CE]  not  a  statement  [FE]                              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  resolveViaProperties(t,  enclosing);  if(enclosing!=  null)  {  resolveViaProperties(t,  enclosing);  }  else  {  registry.isLastGeneration()?  getType()  :  this;  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	resolveViaProperties(t,    enclosing);    if(enclosing!=  null)  {  resolveViaProperties(t,  enclosing);  }  else  {  registry.isLastGeneration()?  getType()  :  this;  }	  timeout    	non-compiled	[CE]  not  a  statement	85	None	add
804	[BUG]  [BUGGY]  if(propertyContinuations  ==  null)  {  finishPropertyContinuations();  }  else  {  forAnnotations  =  Lists.emptyList();  }  [CE]  cannot  find  symbol  forAnnotations  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(propertyContinuations  ==  null)  {  finishPropertyContinuations();  }  else  {  forAnnotations  =  Lists.emptyList();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations  ==  null)  {  finishPropertyContinuations();  }  else  {  forAnnotations  =  Lists.emptyList();  }	  if(propertyContinuations!=    null)    {    finishPropertyContinuations();    }    else    {    forAnnotations    =    Lists.emptyList();    }    	non-compiled	[CE]  cannot  find  symbol  forAnnotations	6	None	replace
805	[BUG]  [BUGGY]  if(propertyContinuations!=  null)  {  startPropertyContinuations();  }  else  {  forAnnotations  =  Lists.emptyList();  }  [CE]  cannot  find  symbol  [FE]                            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(propertyContinuations!=  null)  {  startPropertyContinuations();  }  else  {  forAnnotations  =  Lists.emptyList();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations!=  null)  {  startPropertyContinuations();  }  else  {  forAnnotations  =  Lists.emptyList();  }	  if(propertyContinuations!=    null)    {    finishPropertyContinuations();    }    else    {    forAnnotations    =    Lists.emptyList();    }    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
806	[BUG]  [BUGGY]  forAnnotations  =  Lists.emptyList();  [CE]  cannot  find  symbol  forAnnotations  [FE]                              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  forAnnotations  =  Lists.emptyList();  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	forAnnotations  =  Lists.emptyList();	  if(propertyContinuations!=    null)    {    finishPropertyContinuations();    }    else    {    forAnnotations    =    Lists.emptyList();    }    	non-compiled	[CE]  cannot  find  symbol  forAnnotations	6	None	replace
807	[BUG]  [BUGGY]  if(propertyContinuations  ==  null)  {  startPropertyContinuations();  }  else  {  forAnnotations  =  Lists.emptyList();  }  [CE]  cannot  find  symbol  [FE]                                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(propertyContinuations  ==  null)  {  startPropertyContinuations();  }  else  {  forAnnotations  =  Lists.emptyList();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations  ==  null)  {  startPropertyContinuations();  }  else  {  forAnnotations  =  Lists.emptyList();  }	  if(propertyContinuations!=    null)    {    finishPropertyContinuations();    }    else    {    forAnnotations    =    Lists.emptyList();    }    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
808	[BUG]  [BUGGY]  propertyContinuations  =  Lists.emptyList();  [CE]  cannot  find  symbol  [FE]                                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  propertyContinuations  =  Lists.emptyList();  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	propertyContinuations  =  Lists.emptyList();	  if(propertyContinuations!=    null)    {    finishPropertyContinuations();    }    else    {    forAnnotations    =    Lists.emptyList();    }    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
809	[BUG]  [BUGGY]  if(propertyContinuations!=  null)  {  finishPropertyAnnotations();  }  else  {  forAnnotations  =  Lists.emptyList();  }  [CE]  cannot  find  symbol  [FE]                                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(propertyContinuations!=  null)  {  finishPropertyAnnotations();  }  else  {  forAnnotations  =  Lists.emptyList();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations!=  null)  {  finishPropertyAnnotations();  }  else  {  forAnnotations  =  Lists.emptyList();  }	  if(propertyContinuations!=    null)    {    finishPropertyContinuations();    }    else    {    forAnnotations    =    Lists.emptyList();    }    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
810	[BUG]  [BUGGY]  PropertyNode[]  propertyContinuations  =  getProperties();  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  PropertyNode[]  propertyContinuations  =  getProperties();  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	PropertyNode[]  propertyContinuations  =  getProperties();	  if(propertyContinuations    ==    null)    {    finishPropertyContinuations();    }    if(propertyContinuations    ==    null)    {    finishPropertyContinuations();    }    timeout    	non-compiled	[CE]  cannot  find  symbol	42	None	replace
811	[BUG]  [BUGGY]  validator!=  null?  registry.isLastGeneration()  :  this;  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  validator!=  null?  registry.isLastGeneration()  :  this;  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	validator!=  null?  registry.isLastGeneration()  :  this;	  if(validator!=    null)    {    finishPropertyGenerations();    }    else    {    registry.isLastGeneration()    :    this;    }    	non-compiled	[CE]  not  a  statement	93	None	replace
812	[BUG]  [BUGGY]  validator!=  null  &&  validator.isLastGeneration();  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  validator!=  null  &&  validator.isLastGeneration();  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	validator!=  null  &&  validator.isLastGeneration();	  if(validator!=    null)    {    finishPropertyGenerations();    }    else    {    registry.isLastGeneration()    :    this;    }    	non-compiled	[CE]  not  a  statement	93	None	replace
813	[BUG]  [BUGGY]  Status.checkState(propertyContinuations!=  null  ||  propertyContinuations.size()  >  0)  {  finishPropertyContinuations();  }  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Status.checkState(propertyContinuations!=  null  ||  propertyContinuations.size()  >  0)  {  finishPropertyContinuations();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Status.checkState(propertyContinuations!=  null  ||  propertyContinuations.size()  >  0)  {  finishPropertyContinuations();  }	  if(propertyContinuations!=    null    &&    propertyContinuations.size()    >    0)    {    finishPropertyContinuations();    }    timeout    	non-compiled	[CE]  ';'  expected	257	None	replace
814	[BUG]  [BUGGY]  Status.checkState(propertyContinuations!=  null  &&  propertyContinuations.size()  >  0);  [CE]  cannot  find  symbol  Status  [FE]                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Status.checkState(propertyContinuations!=  null  &&  propertyContinuations.size()  >  0);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Status.checkState(propertyContinuations!=  null  &&  propertyContinuations.size()  >  0);	  if(propertyContinuations!=    null    &&    propertyContinuations.size()    >    0)    {    finishPropertyContinuations();    }    timeout    	non-compiled	[CE]  cannot  find  symbol  Status	257	None	replace
815	[BUG]  [BUGGY]  Status.checkState(propertyContinuations!=  null  ||  propertyContinuations.size()  >  0);  [CE]  cannot  find  symbol  Status  [FE]                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Status.checkState(propertyContinuations!=  null  ||  propertyContinuations.size()  >  0);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Status.checkState(propertyContinuations!=  null  ||  propertyContinuations.size()  >  0);	  if(propertyContinuations!=    null    &&    propertyContinuations.size()    >    0)    {    finishPropertyContinuations();    }    timeout    	non-compiled	[CE]  cannot  find  symbol  Status	257	None	replace
816	[BUG]  [BUGGY]  final  PropertyContinuations  <  Node>  propertyContinuations  =  propertyContinuations.size();  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  final  PropertyContinuations  <  Node>  propertyContinuations  =  propertyContinuations.size();  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	final  PropertyContinuations  <  Node>  propertyContinuations  =  propertyContinuations.size();	  if(propertyContinuations!=    null    &&    propertyContinuations.size()    >    0)    {    finishPropertyContinuations();    }    timeout    	non-compiled	[CE]  cannot  find  symbol	257	None	replace
817	[BUG]  [BUGGY]  Status.checkState(propertyContinuations!=  null  ||  propertyContinuations.size()  >  0)  {  startPropertyContinuations();  }  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Status.checkState(propertyContinuations!=  null  ||  propertyContinuations.size()  >  0)  {  startPropertyContinuations();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Status.checkState(propertyContinuations!=  null  ||  propertyContinuations.size()  >  0)  {  startPropertyContinuations();  }	  if(propertyContinuations!=    null    &&    propertyContinuations.size()    >    0)    {    finishPropertyContinuations();    }    timeout    	non-compiled	[CE]  ';'  expected	257	None	replace
818	[BUG]  [BUGGY]  Status.checkState(propertyContinuations!=  null  ||  propertyContinuations.size()  >  0)  {  finishPropertyContinuations();  [CE]  ';'  expected  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Status.checkState(propertyContinuations!=  null  ||  propertyContinuations.size()  >  0)  {  finishPropertyContinuations();  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Status.checkState(propertyContinuations!=  null  ||  propertyContinuations.size()  >  0)  {  finishPropertyContinuations();	  if(propertyContinuations!=    null    &&    propertyContinuations.size()    >    0)    {    finishPropertyContinuations();    }    timeout    	non-compiled	[CE]  ';'  expected	257	None	replace
819	[BUG]  [BUGGY]  if(propertyContinuations!=  null)  {  startPropertyGeneration();  }  else  {  getPropertyContinuations().addAll(propertyContinuations);  }  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(propertyContinuations!=  null)  {  startPropertyGeneration();  }  else  {  getPropertyContinuations().addAll(propertyContinuations);  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations!=  null)  {  startPropertyGeneration();  }  else  {  getPropertyContinuations().addAll(propertyContinuations);  }	  if(propertyContinuations!=    null)    {    finishPropertyGeneration();    }    else    {    getPropertyContinuations().addAll(propertyContinuations);    }    	non-compiled	[CE]  cannot  find  symbol	121	None	replace
820	[BUG]  [BUGGY]  if(propertyContinuations!=  null)  {  finishPropertyGeneration();  }  else  {  getPropertyContinuations().removeAll(propertyContinuations);  }  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(propertyContinuations!=  null)  {  finishPropertyGeneration();  }  else  {  getPropertyContinuations().removeAll(propertyContinuations);  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations!=  null)  {  finishPropertyGeneration();  }  else  {  getPropertyContinuations().removeAll(propertyContinuations);  }	  if(propertyContinuations!=    null)    {    finishPropertyGeneration();    }    else    {    getPropertyContinuations().addAll(propertyContinuations);    }    	non-compiled	[CE]  cannot  find  symbol	121	None	replace
821	[BUG]  [BUGGY]  if(propertyContinuations!=  null)  {  finishPropertyGeneration();  }  else  {  getPropertyContinuations().addAll(properties);  }  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(propertyContinuations!=  null)  {  finishPropertyGeneration();  }  else  {  getPropertyContinuations().addAll(properties);  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations!=  null)  {  finishPropertyGeneration();  }  else  {  getPropertyContinuations().addAll(properties);  }	  if(propertyContinuations!=    null)    {    finishPropertyGeneration();    }    else    {    getPropertyContinuations().addAll(propertyContinuations);    }    	non-compiled	[CE]  cannot  find  symbol	121	None	replace
822	[BUG]  [BUGGY]  if(propertyContinuations!=  null)  {  finishPropertyGeneration();  }  else  {  getPropertyContinuations().addAll(resolved);  }  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(propertyContinuations!=  null)  {  finishPropertyGeneration();  }  else  {  getPropertyContinuations().addAll(resolved);  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations!=  null)  {  finishPropertyGeneration();  }  else  {  getPropertyContinuations().addAll(resolved);  }	  if(propertyContinuations!=    null)    {    finishPropertyGeneration();    }    else    {    getPropertyContinuations().addAll(propertyContinuations);    }    	non-compiled	[CE]  cannot  find  symbol	121	None	replace
823	[BUG]  [BUGGY]  if(propertyContinuations!=  null)  {  finishPropertyGeneration();  }  else  {  getPropertyContinuations().addAll(enclosing);  }  [CE]  cannot  find  symbol  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(propertyContinuations!=  null)  {  finishPropertyGeneration();  }  else  {  getPropertyContinuations().addAll(enclosing);  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations!=  null)  {  finishPropertyGeneration();  }  else  {  getPropertyContinuations().addAll(enclosing);  }	  if(propertyContinuations!=    null)    {    finishPropertyGeneration();    }    else    {    getPropertyContinuations().addAll(propertyContinuations);    }    	non-compiled	[CE]  cannot  find  symbol	121	None	replace
824	[BUG]  [BUGGY]  Registry.isLastGeneration()?  getReferencedType()  :  Collections.emptyList();  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Registry.isLastGeneration()?  getReferencedType()  :  Collections.emptyList();  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Registry.isLastGeneration()?  getReferencedType()  :  Collections.emptyList();	  Registry.isLastGeneration()?    getReferencedType()    :    this;    	non-compiled	[CE]  not  a  statement	8	None	replace
825	[BUG]  [BUGGY]  Registry.isLastGeneration()?  getReferencedType()  :  Collections.EMPTY_LIST;  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Registry.isLastGeneration()?  getReferencedType()  :  Collections.EMPTY_LIST;  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Registry.isLastGeneration()?  getReferencedType()  :  Collections.EMPTY_LIST;	  Registry.isLastGeneration()?    getReferencedType()    :    this;    	non-compiled	[CE]  not  a  statement	8	None	replace
826	[BUG]  [BUGGY]  Registry.isLastGeneration()?  getReferencedType()  :  Collections.EMPTY_STRING;  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Registry.isLastGeneration()?  getReferencedType()  :  Collections.EMPTY_STRING;  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Registry.isLastGeneration()?  getReferencedType()  :  Collections.EMPTY_STRING;	  Registry.isLastGeneration()?    getReferencedType()    :    this;    	non-compiled	[CE]  not  a  statement	8	None	replace
827	[BUG]  [BUGGY]  Registry.isLastGeneration()?  getType()  :  this;  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Registry.isLastGeneration()?  getType()  :  this;  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Registry.isLastGeneration()?  getType()  :  this;	  Registry.isLastGeneration()?    getReferencedType()    :    this;    	non-compiled	[CE]  not  a  statement	8	None	replace
828	[BUG]  [BUGGY]  if(validator!=  null)  {  startPropertyContinuations();  }  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(validator!=  null)  {  startPropertyContinuations();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(validator!=  null)  {  startPropertyContinuations();  }	  if(validator!=    null)    {    finishPropertyContinuations();    }    if(validator!=    null)    {    startPropertyContinuations();    }    	non-compiled	[CE]  cannot  find  symbol	54	None	replace
829	[BUG]  [BUGGY]  if(validator!=  null)  {  finishPropertyPropertyContinuations();  }  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(validator!=  null)  {  finishPropertyPropertyContinuations();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(validator!=  null)  {  finishPropertyPropertyContinuations();  }	  if(validator!=    null)    {    finishPropertyContinuations();    }    if(validator!=    null)    {    startPropertyContinuations();    }    	non-compiled	[CE]  cannot  find  symbol	54	None	replace
830	[BUG]  [BUGGY]  if(resolved)  {  startPropertyContinuations();  }  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(resolved)  {  startPropertyContinuations();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(resolved)  {  startPropertyContinuations();  }	  if(validator!=    null)    {    finishPropertyContinuations();    }    if(validator!=    null)    {    startPropertyContinuations();    }    	non-compiled	[CE]  cannot  find  symbol	54	None	replace
831	[BUG]  [BUGGY]  PropertyValue[]  propertyContinuations  =  validateProperties(t,  enclosing);  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  PropertyValue[]  propertyContinuations  =  validateProperties(t,  enclosing);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	PropertyValue[]  propertyContinuations  =  validateProperties(t,  enclosing);	  if(validator!=    null)    {    finishPropertyContinuations();    }    if(validator!=    null)    {    startPropertyContinuations();    }    	non-compiled	[CE]  cannot  find  symbol	54	None	replace
832	[BUG]  [BUGGY]  PropertyGeneratedPropertyGenerated();  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  PropertyGeneratedPropertyGenerated();  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	PropertyGeneratedPropertyGenerated();	  if(propertyContinuations!=    null)    {    finishPropertyGenerated();    }    else    {    propertyContinuations.add(propertyName);    }    	non-compiled	[CE]  cannot  find  symbol	152	None	replace
833	[BUG]  [BUGGY]  PropertyGenerated();  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  PropertyGenerated();  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	PropertyGenerated();	  if(propertyContinuations!=    null)    {    finishPropertyGenerated();    }    else    {    propertyContinuations.add(propertyName);    }    	non-compiled	[CE]  cannot  find  symbol	152	None	replace
834	[BUG]  [BUGGY]  PropertyPropertyGenerated();  [CE]  cannot  find  symbol  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  PropertyPropertyGenerated();  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	PropertyPropertyGenerated();	  if(propertyContinuations!=    null)    {    finishPropertyGenerated();    }    else    {    propertyContinuations.add(propertyName);    }    	non-compiled	[CE]  cannot  find  symbol	152	None	replace
835	[BUG]  [BUGGY]  if(validator!=  null  &&  validator.getPropertyType()  ==  PropertyType.PROPERTY)  {  finishPropertyContinuations();  }  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(validator!=  null  &&  validator.getPropertyType()  ==  PropertyType.PROPERTY)  {  finishPropertyContinuations();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(validator!=  null  &&  validator.getPropertyType()  ==  PropertyType.PROPERTY)  {  finishPropertyContinuations();  }	  if(validator!=    null    &&    validator.getPropertyType()!=    PropertyType.PROPERTY)    {    finishPropertyContinuations();    }    	non-compiled	[CE]  cannot  find  symbol	211	None	replace
836	[BUG]  [BUGGY]  if(validator  ==  null  &&  validator.getPropertyType()!=  PropertyType.PROPERTY)  {  finishPropertyContinuations();  }  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(validator  ==  null  &&  validator.getPropertyType()!=  PropertyType.PROPERTY)  {  finishPropertyContinuations();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(validator  ==  null  &&  validator.getPropertyType()!=  PropertyType.PROPERTY)  {  finishPropertyContinuations();  }	  if(validator!=    null    &&    validator.getPropertyType()!=    PropertyType.PROPERTY)    {    finishPropertyContinuations();    }    	non-compiled	[CE]  cannot  find  symbol	211	None	replace
837	[BUG]  [BUGGY]  if(validator!=  null  &&  validater.getPropertyType()!=  PropertyType.PROPERTY)  {  finishPropertyContinuations();  }  [CE]  cannot  find  symbol  validater  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(validator!=  null  &&  validater.getPropertyType()!=  PropertyType.PROPERTY)  {  finishPropertyContinuations();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(validator!=  null  &&  validater.getPropertyType()!=  PropertyType.PROPERTY)  {  finishPropertyContinuations();  }	  if(validator!=    null    &&    validator.getPropertyType()!=    PropertyType.PROPERTY)    {    finishPropertyContinuations();    }    	non-compiled	[CE]  cannot  find  symbol  validater	211	None	replace
838	[BUG]  [BUGGY]  Status.checkState(validator!=  null  &&  validator.getPropertyType()!=  PropertyType.PROPERTY));  finishPropertyContinuations();  [CE]  ';'  expected  [FE]                            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Status.checkState(validator!=  null  &&  validator.getPropertyType()!=  PropertyType.PROPERTY));  finishPropertyContinuations();  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Status.checkState(validator!=  null  &&  validator.getPropertyType()!=  PropertyType.PROPERTY));  finishPropertyContinuations();	  if(validator!=    null    &&    validator.getPropertyType()!=    PropertyType.PROPERTY)    {    finishPropertyContinuations();    }    	non-compiled	[CE]  ';'  expected	211	None	replace
839	[BUG]  [BUGGY]  if(validator!=  null  &&  validator.getPropertyType()!=  PropertyType.PROPERTY)  {  startPropertyContinuations();  }  [CE]  cannot  find  symbol  [FE]                              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(validator!=  null  &&  validator.getPropertyType()!=  PropertyType.PROPERTY)  {  startPropertyContinuations();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(validator!=  null  &&  validator.getPropertyType()!=  PropertyType.PROPERTY)  {  startPropertyContinuations();  }	  if(validator!=    null    &&    validator.getPropertyType()!=    PropertyType.PROPERTY)    {    finishPropertyContinuations();    }    	non-compiled	[CE]  cannot  find  symbol	211	None	replace
840	[BUG]  [BUGGY]  PropertyType  validator  =  validator.getPropertyType();  [CE]  cannot  find  symbol  [FE]                                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  PropertyType  validator  =  validator.getPropertyType();  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	PropertyType  validator  =  validator.getPropertyType();	  if(validator!=    null    &&    validator.getPropertyType()!=    PropertyType.PROPERTY)    {    finishPropertyContinuations();    }    	non-compiled	[CE]  cannot  find  symbol	211	None	replace
841	[BUG]  [BUGGY]  StartPropertyContinuations  t  =  startPropertyContinuations();  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  StartPropertyContinuations  t  =  startPropertyContinuations();  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	StartPropertyContinuations  t  =  startPropertyContinuations();	  if(propertyContinuations!=    null)    {    startPropertyContinuations();    }    	non-compiled	[CE]  cannot  find  symbol	252	None	replace
842	[BUG]  [BUGGY]  StartPropertyContinuations();  [CE]  cannot  find  symbol  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  StartPropertyContinuations();  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	StartPropertyContinuations();	  if(propertyContinuations!=    null)    {    startPropertyContinuations();    }    	non-compiled	[CE]  cannot  find  symbol	252	None	replace
843	[BUG]  [BUGGY]  PropertyType  propertyContinuations  =  getPropertyContinuations();  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  PropertyType  propertyContinuations  =  getPropertyContinuations();  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	PropertyType  propertyContinuations  =  getPropertyContinuations();	  if(propertyContinuations!=    null)    {    finishPropertyType();    }    else    {    getPropertyContinuations().addAll(propertyContinuations);    }    	non-compiled	[CE]  cannot  find  symbol	122	None	replace
844	[BUG]  [BUGGY]  Status.checkState(registry.isLastGeneration(),  enclosing);  [CE]  cannot  find  symbol  Status  [FE]                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Status.checkState(registry.isLastGeneration(),  enclosing);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Status.checkState(registry.isLastGeneration(),  enclosing);	  Status.checkState(registry.isLastGeneration(),    resolved);    	non-compiled	[CE]  cannot  find  symbol  Status	12	None	replace
845	[BUG]  [BUGGY]  Status.checkState(resolved.isLastGeneration(),  registry);  [CE]  boolean  cannot  be  dereferenced  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Status.checkState(resolved.isLastGeneration(),  registry);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Status.checkState(resolved.isLastGeneration(),  registry);	  Status.checkState(registry.isLastGeneration(),    resolved);    	non-compiled	[CE]  boolean  cannot  be  dereferenced	12	None	replace
846	[BUG]  [BUGGY]  Status.checkState(registry.isLastGeneration(),  resolve);  [CE]  cannot  find  symbol  resolve  [FE]                            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Status.checkState(registry.isLastGeneration(),  resolve);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Status.checkState(registry.isLastGeneration(),  resolve);	  Status.checkState(registry.isLastGeneration(),    resolved);    	non-compiled	[CE]  cannot  find  symbol  resolve	12	None	replace
847	[BUG]  [BUGGY]  Status.checkState(registry.isLastGeneration(),  inferred);  [CE]  cannot  find  symbol  inferred  [FE]                              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Status.checkState(registry.isLastGeneration(),  inferred);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Status.checkState(registry.isLastGeneration(),  inferred);	  Status.checkState(registry.isLastGeneration(),    resolved);    	non-compiled	[CE]  cannot  find  symbol  inferred	12	None	replace
848	[BUG]  [BUGGY]  luate(registry,  enclosing)  {  finishPropertyContinuations();  }  else  {  registry.isLastGeneration()?  getReferencedType()  :  this;  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  luate(registry,  enclosing)  {  finishPropertyContinuations();  }  else  {  registry.isLastGeneration()?  getReferencedType()  :  this;  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	luate(registry,  enclosing)  {  finishPropertyContinuations();  }  else  {  registry.isLastGeneration()?  getReferencedType()  :  this;	  luate(registry,    resolved)    {    finishPropertyContinuations();    }    else    {    registry.isLastGeneration()?    getReferencedType()    :    this;    	non-compiled	[CE]  ';'  expected	165	None	replace
849	[BUG]  [BUGGY]  luate(registry,  enclosing)  {  startPropertyContinuations();  }  else  {  registry.isLastGeneration()?  getReferencedType()  :  this;  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  luate(registry,  enclosing)  {  startPropertyContinuations();  }  else  {  registry.isLastGeneration()?  getReferencedType()  :  this;  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	luate(registry,  enclosing)  {  startPropertyContinuations();  }  else  {  registry.isLastGeneration()?  getReferencedType()  :  this;	  luate(registry,    resolved)    {    finishPropertyContinuations();    }    else    {    registry.isLastGeneration()?    getReferencedType()    :    this;    	non-compiled	[CE]  ';'  expected	165	None	replace
850	[BUG]  [BUGGY]  luate(registry,  enclosing)  {  getPropertyContinuations();  }  else  {  registry.isLastGeneration()?  getReferencedType()  :  this;  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  luate(registry,  enclosing)  {  getPropertyContinuations();  }  else  {  registry.isLastGeneration()?  getReferencedType()  :  this;  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	luate(registry,  enclosing)  {  getPropertyContinuations();  }  else  {  registry.isLastGeneration()?  getReferencedType()  :  this;	  luate(registry,    resolved)    {    finishPropertyContinuations();    }    else    {    registry.isLastGeneration()?    getReferencedType()    :    this;    	non-compiled	[CE]  ';'  expected	165	None	replace
851	[BUG]  [BUGGY]  luate(registry,  validator)  {  finishPropertyContinuations();  }  else  {  registry.isLastGeneration()?  getReferencedType()  :  this;  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  luate(registry,  validator)  {  finishPropertyContinuations();  }  else  {  registry.isLastGeneration()?  getReferencedType()  :  this;  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	luate(registry,  validator)  {  finishPropertyContinuations();  }  else  {  registry.isLastGeneration()?  getReferencedType()  :  this;	  luate(registry,    resolved)    {    finishPropertyContinuations();    }    else    {    registry.isLastGeneration()?    getReferencedType()    :    this;    	non-compiled	[CE]  ';'  expected	165	None	replace
852	[BUG]  [BUGGY]  luate(registry,  false)  {  finishPropertyContinuations();  }  else  {  registry.isLastGeneration()?  getReferencedType()  :  this;  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  luate(registry,  false)  {  finishPropertyContinuations();  }  else  {  registry.isLastGeneration()?  getReferencedType()  :  this;  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	luate(registry,  false)  {  finishPropertyContinuations();  }  else  {  registry.isLastGeneration()?  getReferencedType()  :  this;	  luate(registry,    resolved)    {    finishPropertyContinuations();    }    else    {    registry.isLastGeneration()?    getReferencedType()    :    this;    	non-compiled	[CE]  ';'  expected	165	None	replace
853	[BUG]  [BUGGY]  if(validator  ==  null)  {  startPropertyGenerations();  }  else  {  registry.isLastGeneration()  :  this;  }  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(validator  ==  null)  {  startPropertyGenerations();  }  else  {  registry.isLastGeneration()  :  this;  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(validator  ==  null)  {  startPropertyGenerations();  }  else  {  registry.isLastGeneration()  :  this;  }	  if(validator!=    null)    {    startPropertyGenerations();    }    else    {    registry.isLastGeneration()    :    this;    }    	non-compiled	[CE]  ';'  expected	132	None	replace
854	[BUG]  [BUGGY]  if(validator!=  null)  {  startPropertyGenerations();  }  else  {  registry.isFirstGeneration()  :  this;  }  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(validator!=  null)  {  startPropertyGenerations();  }  else  {  registry.isFirstGeneration()  :  this;  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(validator!=  null)  {  startPropertyGenerations();  }  else  {  registry.isFirstGeneration()  :  this;  }	  if(validator!=    null)    {    startPropertyGenerations();    }    else    {    registry.isLastGeneration()    :    this;    }    	non-compiled	[CE]  ';'  expected	132	None	replace
855	[BUG]  [BUGGY]  propertyFields.add(propertyName);  [CE]  cannot  find  symbol  propertyName  [FE]                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  propertyFields.add(propertyName);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	propertyFields.add(propertyName);	  if(propertyContinuations!=    null)    {    finishPropertyFields();    }    else    {    propertyContinuations.add(propertyName);    }    	non-compiled	[CE]  cannot  find  symbol  propertyName	151	None	replace
856	[BUG]  [BUGGY]  propertyFields();  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  propertyFields();  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	propertyFields();	  if(propertyContinuations!=    null)    {    finishPropertyFields();    }    else    {    propertyContinuations.add(propertyName);    }    	non-compiled	[CE]  cannot  find  symbol	151	None	replace
857	[BUG]  [BUGGY]  PropertyFields  registry  =  propertyContinuations.get(propertyName);  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  PropertyFields  registry  =  propertyContinuations.get(propertyName);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	PropertyFields  registry  =  propertyContinuations.get(propertyName);	  if(propertyContinuations!=    null)    {    finishPropertyFields();    }    else    {    propertyContinuations.add(propertyName);    }    	non-compiled	[CE]  cannot  find  symbol	151	None	replace
858	[BUG]  [BUGGY]  propertyFields().add(propertyName);  [CE]  cannot  find  symbol  propertyName  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  propertyFields().add(propertyName);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	propertyFields().add(propertyName);	  if(propertyContinuations!=    null)    {    finishPropertyFields();    }    else    {    propertyContinuations.add(propertyName);    }    	non-compiled	[CE]  cannot  find  symbol  propertyName	151	None	replace
859	[BUG]  [BUGGY]  PropertyFields  registry  =  getPropertyFields();  [CE]  cannot  find  symbol  [FE]                            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  PropertyFields  registry  =  getPropertyFields();  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	PropertyFields  registry  =  getPropertyFields();	  if(propertyContinuations!=    null)    {    finishPropertyFields();    }    else    {    propertyContinuations.add(propertyName);    }    	non-compiled	[CE]  cannot  find  symbol	151	None	replace
860	[BUG]  [BUGGY]  PropertyContinuations  registry  =  getPropertyContinuations(propertyNode);  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  PropertyContinuations  registry  =  getPropertyContinuations(propertyNode);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	PropertyContinuations  registry  =  getPropertyContinuations(propertyNode);	  PropertyContinuations    registry    =    getPropertyContinuations();    	non-compiled	[CE]  cannot  find  symbol	103	None	replace
861	[BUG]  [BUGGY]  PropertyContinuations  registry  =  getPropertyContinuations(resolved);  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  PropertyContinuations  registry  =  getPropertyContinuations(resolved);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	PropertyContinuations  registry  =  getPropertyContinuations(resolved);	  PropertyContinuations    registry    =    getPropertyContinuations();    	non-compiled	[CE]  cannot  find  symbol	103	None	replace
862	[BUG]  [BUGGY]  PropertyContinuations  registry  =  getPropertyContinuations(propertyNamingStrategy);  [CE]  cannot  find  symbol  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  PropertyContinuations  registry  =  getPropertyContinuations(propertyNamingStrategy);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	PropertyContinuations  registry  =  getPropertyContinuations(propertyNamingStrategy);	  PropertyContinuations    registry    =    getPropertyContinuations();    	non-compiled	[CE]  cannot  find  symbol	103	None	replace
863	[BUG]  [BUGGY]  PropertyContinuations  registry  =  getPropertyContinuations(false);  [CE]  cannot  find  symbol  [FE]                            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  PropertyContinuations  registry  =  getPropertyContinuations(false);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	PropertyContinuations  registry  =  getPropertyContinuations(false);	  PropertyContinuations    registry    =    getPropertyContinuations();    	non-compiled	[CE]  cannot  find  symbol	103	None	replace
864	[BUG]  [BUGGY]  PropertyContinuations  registry  =  getPropertyContinuationsForType(propertyNode);  [CE]  cannot  find  symbol  [FE]                              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  PropertyContinuations  registry  =  getPropertyContinuationsForType(propertyNode);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	PropertyContinuations  registry  =  getPropertyContinuationsForType(propertyNode);	  PropertyContinuations    registry    =    getPropertyContinuations();    	non-compiled	[CE]  cannot  find  symbol	103	None	replace
865	[BUG]  [BUGGY]  if(enclosing!=  null)  {  resolveViaProperties(t,  enclosing);  }  else  {  registry.isLastGeneration()?  getReferencedType()  :  this;  }  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(enclosing!=  null)  {  resolveViaProperties(t,  enclosing);  }  else  {  registry.isLastGeneration()?  getReferencedType()  :  this;  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(enclosing!=  null)  {  resolveViaProperties(t,  enclosing);  }  else  {  registry.isLastGeneration()?  getReferencedType()  :  this;  }	  resolveViaProperties(t,    enclosing);    timeout    	non-compiled	[CE]  not  a  statement	86	None	replace
866	[BUG]  [BUGGY]  if(resolved)  {  resolveViaProperties(t,  enclosing);  }  else  {  registry.isLastGeneration()?  getReferencedType()  :  this;  }  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(resolved)  {  resolveViaProperties(t,  enclosing);  }  else  {  registry.isLastGeneration()?  getReferencedType()  :  this;  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(resolved)  {  resolveViaProperties(t,  enclosing);  }  else  {  registry.isLastGeneration()?  getReferencedType()  :  this;  }	  resolveViaProperties(t,    enclosing);    timeout    	non-compiled	[CE]  not  a  statement	86	None	replace
867	[BUG]  [BUGGY]  timeout  [FE]                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(resolved)  {  resolveViaProperties(t,  enclosing);  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	add	if(resolved)  {  resolveViaProperties(t,  enclosing);  }	  resolveViaProperties(t,    enclosing);    timeout    	compilable	timeout	86	1	replace
868	[BUG]  [BUGGY]  if(resolved)  {  resolveViaProperties(t,  enclosing);  }  timeout  [FE]                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(resolved)  {  resolveViaProperties(t,  enclosing);  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(resolved)  {  resolveViaProperties(t,  enclosing);  }	  resolveViaProperties(t,    enclosing);    timeout    	compilable	timeout	86	1	replace
869	[BUG]  [BUGGY]  timeout  [FE]                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(enclosing!=  null)  {  resolveViaProperties(t,  enclosing);  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	add	if(enclosing!=  null)  {  resolveViaProperties(t,  enclosing);  }	  resolveViaProperties(t,    enclosing);    timeout    	compilable	timeout	86	1	replace
870	[BUG]  [BUGGY]  if(enclosing!=  null)  {  resolveViaProperties(t,  enclosing);  }  timeout  [FE]                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(enclosing!=  null)  {  resolveViaProperties(t,  enclosing);  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(enclosing!=  null)  {  resolveViaProperties(t,  enclosing);  }	  resolveViaProperties(t,    enclosing);    timeout    	compilable	timeout	86	1	replace
871	[BUG]  [BUGGY]  if(enclosing  ==  null)  {  resolveViaProperties(t,  enclosing);  }  else  {  registry.isLastGeneration()?  getReferencedType()  :  this;  }  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(enclosing  ==  null)  {  resolveViaProperties(t,  enclosing);  }  else  {  registry.isLastGeneration()?  getReferencedType()  :  this;  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(enclosing  ==  null)  {  resolveViaProperties(t,  enclosing);  }  else  {  registry.isLastGeneration()?  getReferencedType()  :  this;  }	  resolveViaProperties(t,    enclosing);    timeout    	non-compiled	[CE]  not  a  statement	86	None	replace
872	[BUG]  [BUGGY]  if(resolved)  {  resolveViaProperties(t,  enclosing);  }  else  {  registry.isLastGeneration()?  getReferencedType()  :  null;  }  [CE]  not  a  statement  [FE]                            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(resolved)  {  resolveViaProperties(t,  enclosing);  }  else  {  registry.isLastGeneration()?  getReferencedType()  :  null;  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(resolved)  {  resolveViaProperties(t,  enclosing);  }  else  {  registry.isLastGeneration()?  getReferencedType()  :  null;  }	  resolveViaProperties(t,    enclosing);    timeout    	non-compiled	[CE]  not  a  statement	86	None	replace
873	[BUG]  [BUGGY]  if(!resolved)  {  resolveViaProperties(t,  enclosing);  timeout  =  System.currentTimeMillis();  }  [CE]  cannot  find  symbol  timeout  [FE]                              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(!resolved)  {  resolveViaProperties(t,  enclosing);  timeout  =  System.currentTimeMillis();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(!resolved)  {  resolveViaProperties(t,  enclosing);  timeout  =  System.currentTimeMillis();  }	  resolveViaProperties(t,    enclosing);    timeout    	non-compiled	[CE]  cannot  find  symbol  timeout	86	None	replace
874	[BUG]  [BUGGY]  Predicate  <?>  validator  =  this.forAnnotations;  [CE]  cannot  find  symbol  forAnnotations  [FE]              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Predicate  <?>  validator  =  this.forAnnotations;  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Predicate  <?>  validator  =  this.forAnnotations;	  if(validator!=    null)    {    finishPropertyContinuations();    }    if(validator    ==    null)    {    finishPropertyContinuations();    }    timeout    	non-compiled	[CE]  cannot  find  symbol  forAnnotations	53	None	replace
875	[BUG]  [BUGGY]  PropertyContinuations();  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  PropertyContinuations();  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	PropertyContinuations();	  if(validator!=    null)    {    finishPropertyContinuations();    }    if(validator    ==    null)    {    finishPropertyContinuations();    }    timeout    	non-compiled	[CE]  cannot  find  symbol	53	None	replace
876	[BUG]  [BUGGY]  Status.checkState(resolved);  [CE]  cannot  find  symbol  Status  [FE]                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Status.checkState(resolved);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Status.checkState(resolved);	  if(validator!=    null)    {    finishPropertyContinuations();    }    if(validator    ==    null)    {    finishPropertyContinuations();    }    timeout    	non-compiled	[CE]  cannot  find  symbol  Status	53	None	replace
877	[BUG]  [BUGGY]  timeout  [FE]                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(propertyContinuations    ==    null)    {    finishPropertyContinuations();    }    if(propertyContinuations  ==  null)  {  finishPropertyContinuations();  }  if(propertyContinuations  ==  null)  {  finishPropertyContinuations();  }  if(propertyContinuations  ==  null)  {  finishPropertyContinuations();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	add	if(propertyContinuations        ==        null)        {        finishPropertyContinuations();        }        if(propertyContinuations    ==    null)    {    finishPropertyContinuations();    }    if(propertyContinuations  ==  null)  {  finishPropertyContinuations();  }  if(propertyContinuations  ==  null)  {  finishPropertyContinuations();  }	  timeout    	compilable	timeout	41	1	add
878	[BUG]  [BUGGY]  if(propertyContinuations    ==    null)    {    finishPropertyContinuations();    }    if(propertyContinuations  ==  null)  {  finishPropertyContinuations();  }  if(propertyContinuations  ==  null)  {  finishPropertyContinuations();  }  if(propertyContinuations  ==  null)  {  finishPropertyContinuations();  }  timeout  [FE]                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(propertyContinuations    ==    null)    {    finishPropertyContinuations();    }    if(propertyContinuations  ==  null)  {  finishPropertyContinuations();  }  if(propertyContinuations  ==  null)  {  finishPropertyContinuations();  }  if(propertyContinuations  ==  null)  {  finishPropertyContinuations();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations        ==        null)        {        finishPropertyContinuations();        }        if(propertyContinuations    ==    null)    {    finishPropertyContinuations();    }    if(propertyContinuations  ==  null)  {  finishPropertyContinuations();  }  if(propertyContinuations  ==  null)  {  finishPropertyContinuations();  }	  timeout    	compilable	timeout	41	1	add
879	[BUG]  [BUGGY]  if(propertyContinuations    ==    null)    {    finishPropertyContinuations();    }    if(propertyContinuations  ==  null)  {  finishPropertyContinuations();  }  if(propertyContinuations  ==  null)  {  finishPropertyContinuations();  }  if(propertyContinuations  ==  null)  {  finishPropertyContinuations();  }  if(propertyContinuations  ==  null)  {  finishPropertyContinu  [CE]  ';'  expected  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(propertyContinuations    ==    null)    {    finishPropertyContinuations();    }    if(propertyContinuations  ==  null)  {  finishPropertyContinuations();  }  if(propertyContinuations  ==  null)  {  finishPropertyContinuations();  }  if(propertyContinuations  ==  null)  {  finishPropertyContinuations();  }  if(propertyContinuations  ==  null)  {  finishPropertyContinu  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations        ==        null)        {        finishPropertyContinuations();        }        if(propertyContinuations    ==    null)    {    finishPropertyContinuations();    }    if(propertyContinuations  ==  null)  {  finishPropertyContinuations();  }  if(propertyContinuations  ==  null)  {  finishPropertyContinuations();  }  if(propertyContinuations  ==  null)  {  finishPropertyContinu	  timeout    	non-compiled	[CE]  ';'  expected	41	None	add
880	[BUG]  [BUGGY]  if(propertyContinuations    ==    null)    {    finishPropertyContinuations();    }    if(propertyContinuations  ==  null)  {  finishPropertyContinuations();  }  if(propertyContinuations  ==  null)  {  finishPropertyContinuations();  }  if(propertyContinuations  ==  null)  {  finishPropertyContinuations();  }  if(propertyContinuations!=  null)  {  finishPropertyContinu  [CE]  ';'  expected  [FE]                            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(propertyContinuations    ==    null)    {    finishPropertyContinuations();    }    if(propertyContinuations  ==  null)  {  finishPropertyContinuations();  }  if(propertyContinuations  ==  null)  {  finishPropertyContinuations();  }  if(propertyContinuations  ==  null)  {  finishPropertyContinuations();  }  if(propertyContinuations!=  null)  {  finishPropertyContinu  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations        ==        null)        {        finishPropertyContinuations();        }        if(propertyContinuations    ==    null)    {    finishPropertyContinuations();    }    if(propertyContinuations  ==  null)  {  finishPropertyContinuations();  }  if(propertyContinuations  ==  null)  {  finishPropertyContinuations();  }  if(propertyContinuations!=  null)  {  finishPropertyContinu	  timeout    	non-compiled	[CE]  ';'  expected	41	None	add
881	[BUG]  [BUGGY]  if(propertyContinuations    ==    null)    {    finishPropertyContinuations();    }    if(propertyContinuations  ==  null)  {  finishPropertyContinuations();  }  if(propertyContinuations  ==  null)  {  finishPropertyContinuations();  }  if(propertyContinuations  ==  null)  {  finishPropertyContinuations();  }  if(propertyContinuations  ==  null)  {  finishProperty  [CE]  ';'  expected  [FE]                              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(propertyContinuations    ==    null)    {    finishPropertyContinuations();    }    if(propertyContinuations  ==  null)  {  finishPropertyContinuations();  }  if(propertyContinuations  ==  null)  {  finishPropertyContinuations();  }  if(propertyContinuations  ==  null)  {  finishPropertyContinuations();  }  if(propertyContinuations  ==  null)  {  finishProperty  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations        ==        null)        {        finishPropertyContinuations();        }        if(propertyContinuations    ==    null)    {    finishPropertyContinuations();    }    if(propertyContinuations  ==  null)  {  finishPropertyContinuations();  }  if(propertyContinuations  ==  null)  {  finishPropertyContinuations();  }  if(propertyContinuations  ==  null)  {  finishProperty	  timeout    	non-compiled	[CE]  ';'  expected	41	None	add
882	[BUG]  [BUGGY]  if(propertyContinuations    ==    null)    {    finishPropertyContinuations();    }    if(propertyContinuations  ==  null)  {  finishPropertyContinuations();  }  if(propertyContinuations  ==  null)  {  finishPropertyContinuations();  }  if(propertyContinuations  ==  null)  {  finishPropertyContinuations();  }  if(propertyContinuations  ==  null)  {  [CE]  illegal  start  of  expression  [FE]                                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(propertyContinuations    ==    null)    {    finishPropertyContinuations();    }    if(propertyContinuations  ==  null)  {  finishPropertyContinuations();  }  if(propertyContinuations  ==  null)  {  finishPropertyContinuations();  }  if(propertyContinuations  ==  null)  {  finishPropertyContinuations();  }  if(propertyContinuations  ==  null)  {  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations        ==        null)        {        finishPropertyContinuations();        }        if(propertyContinuations    ==    null)    {    finishPropertyContinuations();    }    if(propertyContinuations  ==  null)  {  finishPropertyContinuations();  }  if(propertyContinuations  ==  null)  {  finishPropertyContinuations();  }  if(propertyContinuations  ==  null)  {	  timeout    	non-compiled	[CE]  illegal  start  of  expression	41	None	add
883	[BUG]  [BUGGY]  if(propertyContinuations    ==    null)    {    finishPropertyContinuations();    }    if(propertyContinuations  ==  null)  {  finishPropertyContinuations();  }  if(propertyContinuations  ==  null)  {  finishPropertyContinuations();  }  if(propertyContinuations  ==  null)  {  finishPropertyContinuations();  }  if(propertyContinuations  ==  null)  {  finishPropert  [CE]  ';'  expected  [FE]                                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(propertyContinuations    ==    null)    {    finishPropertyContinuations();    }    if(propertyContinuations  ==  null)  {  finishPropertyContinuations();  }  if(propertyContinuations  ==  null)  {  finishPropertyContinuations();  }  if(propertyContinuations  ==  null)  {  finishPropertyContinuations();  }  if(propertyContinuations  ==  null)  {  finishPropert  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations        ==        null)        {        finishPropertyContinuations();        }        if(propertyContinuations    ==    null)    {    finishPropertyContinuations();    }    if(propertyContinuations  ==  null)  {  finishPropertyContinuations();  }  if(propertyContinuations  ==  null)  {  finishPropertyContinuations();  }  if(propertyContinuations  ==  null)  {  finishPropert	  timeout    	non-compiled	[CE]  ';'  expected	41	None	add
884	[BUG]  [BUGGY]  if(propertyContinuations    ==    null)    {    finishPropertyContinuations();    }    if(propertyContinuations  ==  null)  {  finishPropertyContinuations();  }  if(propertyContinuations  ==  null)  {  finishPropertyContinuations();  }  if(propertyContinuations  ==  null)  {  finishPropertyContinuations();  }  if(propertyContinuations!=  null)  {  finishProperty  [CE]  ';'  expected  [FE]                                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(propertyContinuations    ==    null)    {    finishPropertyContinuations();    }    if(propertyContinuations  ==  null)  {  finishPropertyContinuations();  }  if(propertyContinuations  ==  null)  {  finishPropertyContinuations();  }  if(propertyContinuations  ==  null)  {  finishPropertyContinuations();  }  if(propertyContinuations!=  null)  {  finishProperty  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations        ==        null)        {        finishPropertyContinuations();        }        if(propertyContinuations    ==    null)    {    finishPropertyContinuations();    }    if(propertyContinuations  ==  null)  {  finishPropertyContinuations();  }  if(propertyContinuations  ==  null)  {  finishPropertyContinuations();  }  if(propertyContinuations!=  null)  {  finishProperty	  timeout    	non-compiled	[CE]  ';'  expected	41	None	add
885	[BUG]  [BUGGY]  timeout  [FE]                                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(propertyContinuations    ==    null)    {    finishPropertyContinuations();    }    if(propertyContinuations  ==  null)  {  finishPropertyContinuations();  }  if(propertyContinuations  ==  null)  {  finishPropertyContinuations();  }  if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	add	if(propertyContinuations        ==        null)        {        finishPropertyContinuations();        }        if(propertyContinuations    ==    null)    {    finishPropertyContinuations();    }    if(propertyContinuations  ==  null)  {  finishPropertyContinuations();  }  if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }	  timeout    	compilable	timeout	41	1	add
886	[BUG]  [BUGGY]  if(propertyContinuations    ==    null)    {    finishPropertyContinuations();    }    if(propertyContinuations  ==  null)  {  finishPropertyContinuations();  }  if(propertyContinuations  ==  null)  {  finishPropertyContinuations();  }  if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  timeout  [FE]                                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(propertyContinuations    ==    null)    {    finishPropertyContinuations();    }    if(propertyContinuations  ==  null)  {  finishPropertyContinuations();  }  if(propertyContinuations  ==  null)  {  finishPropertyContinuations();  }  if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations        ==        null)        {        finishPropertyContinuations();        }        if(propertyContinuations    ==    null)    {    finishPropertyContinuations();    }    if(propertyContinuations  ==  null)  {  finishPropertyContinuations();  }  if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }	  timeout    	compilable	timeout	41	1	add
887	[BUG]  [BUGGY]  timeout  [FE]                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Preconditions.checkState(!resolved);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	add	Preconditions.checkState(!resolved);	  Preconditions.checkState(resolved);    timeout    	compilable	timeout	221	1	replace
888	[BUG]  [BUGGY]  Preconditions.checkState(!resolved);  timeout  [FE]                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Preconditions.checkState(!resolved);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Preconditions.checkState(!resolved);	  Preconditions.checkState(resolved);    timeout    	compilable	timeout	221	1	replace
889	[BUG]  [BUGGY]  Preconditions.checkState(resolved!=  null);  [CE]  incomparable  types:  boolean  and  <null>  [FE]                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Preconditions.checkState(resolved!=  null);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Preconditions.checkState(resolved!=  null);	  Preconditions.checkState(resolved);    timeout    	non-compiled	[CE]  incomparable  types:  boolean  and  <null>	221	None	replace
890	[BUG]  [BUGGY]  Preconditions.checkState(resolved  ==  null);  [CE]  incomparable  types:  boolean  and  <null>  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Preconditions.checkState(resolved  ==  null);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Preconditions.checkState(resolved  ==  null);	  Preconditions.checkState(resolved);    timeout    	non-compiled	[CE]  incomparable  types:  boolean  and  <null>	221	None	replace
891	[BUG]  [BUGGY]  Preconditions.checkState(this.forAnnotations!=  resolved);  [CE]  cannot  find  symbol  forAnnotations  [FE]                            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Preconditions.checkState(this.forAnnotations!=  resolved);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Preconditions.checkState(this.forAnnotations!=  resolved);	  Preconditions.checkState(resolved);    timeout    	non-compiled	[CE]  cannot  find  symbol  forAnnotations	221	None	replace
892	[BUG]  [BUGGY]  Preconditions.checkState(this.forAnnotations  ==  resolved);  [CE]  cannot  find  symbol  forAnnotations  [FE]                              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Preconditions.checkState(this.forAnnotations  ==  resolved);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Preconditions.checkState(this.forAnnotations  ==  resolved);	  Preconditions.checkState(resolved);    timeout    	non-compiled	[CE]  cannot  find  symbol  forAnnotations	221	None	replace
893	[BUG]  [BUGGY]  Preconditions.checkState(resolved!=!forAnnotations);  [CE]  cannot  find  symbol  forAnnotations  [FE]                                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Preconditions.checkState(resolved!=!forAnnotations);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Preconditions.checkState(resolved!=!forAnnotations);	  Preconditions.checkState(resolved);    timeout    	non-compiled	[CE]  cannot  find  symbol  forAnnotations	221	None	replace
894	[BUG]  [BUGGY]  Parchet.getInstance().finishPropertyContinuations(t);  [CE]  cannot  find  symbol  Parchet  [FE]              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Parchet.getInstance().finishPropertyContinuations(t);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Parchet.getInstance().finishPropertyContinuations(t);	  Parchet.getInstance().finishPropertyContinuations();    	non-compiled	[CE]  cannot  find  symbol  Parchet	29	None	replace
895	[BUG]  [BUGGY]  Parchet.getInstance().finishPropertyContinuations(t,  enclosing);  [CE]  cannot  find  symbol  Parchet  [FE]                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Parchet.getInstance().finishPropertyContinuations(t,  enclosing);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Parchet.getInstance().finishPropertyContinuations(t,  enclosing);	  Parchet.getInstance().finishPropertyContinuations();    	non-compiled	[CE]  cannot  find  symbol  Parchet	29	None	replace
896	[BUG]  [BUGGY]  Parchet.getInstance().finishPropertyContinuations(t,  propertyNode);  [CE]  cannot  find  symbol  propertyNode  [FE]                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Parchet.getInstance().finishPropertyContinuations(t,  propertyNode);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Parchet.getInstance().finishPropertyContinuations(t,  propertyNode);	  Parchet.getInstance().finishPropertyContinuations();    	non-compiled	[CE]  cannot  find  symbol  propertyNode	29	None	replace
897	[BUG]  [BUGGY]  Parchet.getInstance().finishPropertyContinuations(t,  resolved);  [CE]  cannot  find  symbol  Parchet  [FE]                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Parchet.getInstance().finishPropertyContinuations(t,  resolved);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Parchet.getInstance().finishPropertyContinuations(t,  resolved);	  Parchet.getInstance().finishPropertyContinuations();    	non-compiled	[CE]  cannot  find  symbol  Parchet	29	None	replace
898	[BUG]  [BUGGY]  Parchet.getInstance().setPropertyContinuations(propertyContinuations);  [CE]  cannot  find  symbol  Parchet  [FE]                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Parchet.getInstance().setPropertyContinuations(propertyContinuations);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Parchet.getInstance().setPropertyContinuations(propertyContinuations);	  Parchet.getInstance().finishPropertyContinuations();    	non-compiled	[CE]  cannot  find  symbol  Parchet	29	None	replace
899	[BUG]  [BUGGY]  Parchet.getInstance().finishPropertyContinuations(propertyContinuations);  [CE]  cannot  find  symbol  Parchet  [FE]                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Parchet.getInstance().finishPropertyContinuations(propertyContinuations);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Parchet.getInstance().finishPropertyContinuations(propertyContinuations);	  Parchet.getInstance().finishPropertyContinuations();    	non-compiled	[CE]  cannot  find  symbol  Parchet	29	None	replace
900	[BUG]  [BUGGY]  luate(registry,  enclosing)  {  finishPropertyContinuations();  }  else  {  registry.islastGeneration()?  getReferencedType()  :  this;  }  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  luate(registry,  enclosing)  {  finishPropertyContinuations();  }  else  {  registry.islastGeneration()?  getReferencedType()  :  this;  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	luate(registry,  enclosing)  {  finishPropertyContinuations();  }  else  {  registry.islastGeneration()?  getReferencedType()  :  this;  }	  luate(registry,    resolved)    {    finishPropertyContinuations();    }    else    {    registry.islastGeneration()?    getReferencedType()    :    this;    }    	non-compiled	[CE]  ';'  expected	168	None	replace
901	[BUG]  [BUGGY]  luate(registry,  enclosing)  {  startPropertyContinuations();  }  else  {  registry.islastGeneration()?  getReferencedType()  :  this;  }  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  luate(registry,  enclosing)  {  startPropertyContinuations();  }  else  {  registry.islastGeneration()?  getReferencedType()  :  this;  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	luate(registry,  enclosing)  {  startPropertyContinuations();  }  else  {  registry.islastGeneration()?  getReferencedType()  :  this;  }	  luate(registry,    resolved)    {    finishPropertyContinuations();    }    else    {    registry.islastGeneration()?    getReferencedType()    :    this;    }    	non-compiled	[CE]  ';'  expected	168	None	replace
902	[BUG]  [BUGGY]  luate(registry,  validated)  {  finishPropertyContinuations();  }  else  {  registry.islastGeneration()?  getReferencedType()  :  this;  }  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  luate(registry,  validated)  {  finishPropertyContinuations();  }  else  {  registry.islastGeneration()?  getReferencedType()  :  this;  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	luate(registry,  validated)  {  finishPropertyContinuations();  }  else  {  registry.islastGeneration()?  getReferencedType()  :  this;  }	  luate(registry,    resolved)    {    finishPropertyContinuations();    }    else    {    registry.islastGeneration()?    getReferencedType()    :    this;    }    	non-compiled	[CE]  ';'  expected	168	None	replace
903	[BUG]  [BUGGY]  luate(registry,  enclosing)  {  getPropertyContinuations();  }  else  {  registry.islastGeneration()?  getReferencedType()  :  this;  }  [CE]  ';'  expected  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  luate(registry,  enclosing)  {  getPropertyContinuations();  }  else  {  registry.islastGeneration()?  getReferencedType()  :  this;  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	luate(registry,  enclosing)  {  getPropertyContinuations();  }  else  {  registry.islastGeneration()?  getReferencedType()  :  this;  }	  luate(registry,    resolved)    {    finishPropertyContinuations();    }    else    {    registry.islastGeneration()?    getReferencedType()    :    this;    }    	non-compiled	[CE]  ';'  expected	168	None	replace
904	[BUG]  [BUGGY]  luate(registry,  validator)  {  finishPropertyContinuations();  }  else  {  registry.islastGeneration()?  getReferencedType()  :  this;  }  [CE]  ';'  expected  [FE]                            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  luate(registry,  validator)  {  finishPropertyContinuations();  }  else  {  registry.islastGeneration()?  getReferencedType()  :  this;  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	luate(registry,  validator)  {  finishPropertyContinuations();  }  else  {  registry.islastGeneration()?  getReferencedType()  :  this;  }	  luate(registry,    resolved)    {    finishPropertyContinuations();    }    else    {    registry.islastGeneration()?    getReferencedType()    :    this;    }    	non-compiled	[CE]  ';'  expected	168	None	replace
905	[BUG]  [BUGGY]  Status.checkState(registry.isLastGeneration(),  getReferencedType(),  resolved);  [CE]  cannot  find  symbol  Status  [FE]                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Status.checkState(registry.isLastGeneration(),  getReferencedType(),  resolved);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Status.checkState(registry.isLastGeneration(),  getReferencedType(),  resolved);	  Status.checkState(registry.isLastGeneration(),    getReferencedType());    	non-compiled	[CE]  cannot  find  symbol  Status	11	None	replace
906	[BUG]  [BUGGY]  Status.checkState(registry.isLastGeneration(),  getReferencedType(),  forAnnotations);  [CE]  cannot  find  symbol  forAnnotations  [FE]                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Status.checkState(registry.isLastGeneration(),  getReferencedType(),  forAnnotations);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Status.checkState(registry.isLastGeneration(),  getReferencedType(),  forAnnotations);	  Status.checkState(registry.isLastGeneration(),    getReferencedType());    	non-compiled	[CE]  cannot  find  symbol  forAnnotations	11	None	replace
907	[BUG]  [BUGGY]  Status.checkState(registry.isLastGeneration(),  getReferencedType(),  propertyName);  [CE]  cannot  find  symbol  propertyName  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Status.checkState(registry.isLastGeneration(),  getReferencedType(),  propertyName);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Status.checkState(registry.isLastGeneration(),  getReferencedType(),  propertyName);	  Status.checkState(registry.isLastGeneration(),    getReferencedType());    	non-compiled	[CE]  cannot  find  symbol  propertyName	11	None	replace
908	[BUG]  [BUGGY]  Status.checkState(registry.isLastGeneration(),  getReferencedType(),  resolve);  [CE]  cannot  find  symbol  resolve  [FE]                            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Status.checkState(registry.isLastGeneration(),  getReferencedType(),  resolve);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Status.checkState(registry.isLastGeneration(),  getReferencedType(),  resolve);	  Status.checkState(registry.isLastGeneration(),    getReferencedType());    	non-compiled	[CE]  cannot  find  symbol  resolve	11	None	replace
909	[BUG]  [BUGGY]  Status.checkState(registry.isFirstGeneration(),  getReferencedType());  [CE]  cannot  find  symbol  [FE]                              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Status.checkState(registry.isFirstGeneration(),  getReferencedType());  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Status.checkState(registry.isFirstGeneration(),  getReferencedType());	  Status.checkState(registry.isLastGeneration(),    getReferencedType());    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
910	[BUG]  [BUGGY]  Status.checkState(registry.isLastGeneration(),  getReferencedType(),  this);  [CE]  cannot  find  symbol  Status  [FE]                                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Status.checkState(registry.isLastGeneration(),  getReferencedType(),  this);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Status.checkState(registry.isLastGeneration(),  getReferencedType(),  this);	  Status.checkState(registry.isLastGeneration(),    getReferencedType());    	non-compiled	[CE]  cannot  find  symbol  Status	11	None	replace
911	[BUG]  [BUGGY]  Annotation  <?>  propertyContinuations  =  registry.getPropertyContinuations(propertyName,  enclosing);  [CE]  cannot  find  symbol  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Annotation  <?>  propertyContinuations  =  registry.getPropertyContinuations(propertyName,  enclosing);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Annotation  <?>  propertyContinuations  =  registry.getPropertyContinuations(propertyName,  enclosing);	  Annotation    <?>    propertyContinuations    =    registry.getPropertyContinuations(propertyName);    	non-compiled	[CE]  cannot  find  symbol	196	None	replace
912	[BUG]  [BUGGY]  Annotation  <?>  propertyContinuations  =  registry.getPropertyContinuations(propertyName,  false);  [CE]  cannot  find  symbol  [FE]                            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Annotation  <?>  propertyContinuations  =  registry.getPropertyContinuations(propertyName,  false);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Annotation  <?>  propertyContinuations  =  registry.getPropertyContinuations(propertyName,  false);	  Annotation    <?>    propertyContinuations    =    registry.getPropertyContinuations(propertyName);    	non-compiled	[CE]  cannot  find  symbol	196	None	replace
913	[BUG]  [BUGGY]  Annotation  <?>  propertyContinuations  =  registry.getPropertyContinuations(propertyName,  resolved);  [CE]  cannot  find  symbol  [FE]                              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Annotation  <?>  propertyContinuations  =  registry.getPropertyContinuations(propertyName,  resolved);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Annotation  <?>  propertyContinuations  =  registry.getPropertyContinuations(propertyName,  resolved);	  Annotation    <?>    propertyContinuations    =    registry.getPropertyContinuations(propertyName);    	non-compiled	[CE]  cannot  find  symbol	196	None	replace
914	[BUG]  [BUGGY]  Annotation  <?>  propertyContinuations  =  registry.getPropertyContinuations(sourceName);  [CE]  cannot  find  symbol  [FE]                                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Annotation  <?>  propertyContinuations  =  registry.getPropertyContinuations(sourceName);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Annotation  <?>  propertyContinuations  =  registry.getPropertyContinuations(sourceName);	  Annotation    <?>    propertyContinuations    =    registry.getPropertyContinuations(propertyName);    	non-compiled	[CE]  cannot  find  symbol	196	None	replace
915	[BUG]  [BUGGY]  Annotation  <?>  propertyContinuations  =  registry.getPropertyContinuations(propertyName,  true);  [CE]  cannot  find  symbol  [FE]                                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Annotation  <?>  propertyContinuations  =  registry.getPropertyContinuations(propertyName,  true);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Annotation  <?>  propertyContinuations  =  registry.getPropertyContinuations(propertyName,  true);	  Annotation    <?>    propertyContinuations    =    registry.getPropertyContinuations(propertyName);    	non-compiled	[CE]  cannot  find  symbol	196	None	replace
916	[BUG]  [BUGGY]  Annotation  <?>  propertyContinuations  =  registry.getPropertyContinuations(propertyName,  reference);  [CE]  cannot  find  symbol  [FE]                                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Annotation  <?>  propertyContinuations  =  registry.getPropertyContinuations(propertyName,  reference);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Annotation  <?>  propertyContinuations  =  registry.getPropertyContinuations(propertyName,  reference);	  Annotation    <?>    propertyContinuations    =    registry.getPropertyContinuations(propertyName);    	non-compiled	[CE]  cannot  find  symbol	196	None	replace
917	[BUG]  [BUGGY]  Parchet.checkState(resolved)>  finishPropertyContinuations();  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Parchet.checkState(resolved)>  finishPropertyContinuations();  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Parchet.checkState(resolved)>  finishPropertyContinuations();	  if(resolved)    {    finishPropertyContinuations();    }    if(resolved)    <    finishPropertyContinuations();    }    	non-compiled	[CE]  not  a  statement	223	None	replace
918	[BUG]  [BUGGY]  Parchet.checkState(!resolved);  [CE]  cannot  find  symbol  Parchet  [FE]                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Parchet.checkState(!resolved);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Parchet.checkState(!resolved);	  if(resolved)    {    finishPropertyContinuations();    }    if(resolved)    <    finishPropertyContinuations();    }    	non-compiled	[CE]  cannot  find  symbol  Parchet	223	None	replace
919	[BUG]  [BUGGY]  Status.checkState(!resolved);  [CE]  cannot  find  symbol  Status  [FE]                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Status.checkState(!resolved);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Status.checkState(!resolved);	  if(resolved)    {    finishPropertyContinuations();    }    if(resolved)    <    finishPropertyContinuations();    }    	non-compiled	[CE]  cannot  find  symbol  Status	223	None	replace
920	[BUG]  [BUGGY]  timeout  [FE]                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(validator!=  null  &&  propertyContinuations  ==  null)  {  finishPropertyContinuations();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	add	if(validator!=  null  &&  propertyContinuations  ==  null)  {  finishPropertyContinuations();  }	  if(validator!=    null    &&    propertyNode    ==    null)    {    finishPropertyContinuations();    }    	compilable	timeout	208	1	replace
921	[BUG]  [BUGGY]  if(validator!=  null  &&  propertyContinuations  ==  null)  {  finishPropertyContinuations();  }  timeout  [FE]                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(validator!=  null  &&  propertyContinuations  ==  null)  {  finishPropertyContinuations();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(validator!=  null  &&  propertyContinuations  ==  null)  {  finishPropertyContinuations();  }	  if(validator!=    null    &&    propertyNode    ==    null)    {    finishPropertyContinuations();    }    	compilable	timeout	208	1	replace
922	[BUG]  [BUGGY]  if(validator!=  null  &&  forAnnotations  ==  null)  {  finishPropertyContinuations();  }  [CE]  cannot  find  symbol  forAnnotations  [FE]                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(validator!=  null  &&  forAnnotations  ==  null)  {  finishPropertyContinuations();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(validator!=  null  &&  forAnnotations  ==  null)  {  finishPropertyContinuations();  }	  if(validator!=    null    &&    propertyNode    ==    null)    {    finishPropertyContinuations();    }    	non-compiled	[CE]  cannot  find  symbol  forAnnotations	208	None	replace
923	[BUG]  [BUGGY]  timeout  [FE]                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(validator!=  null  &&  validator  ==  null)  {  finishPropertyContinuations();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	add	if(validator!=  null  &&  validator  ==  null)  {  finishPropertyContinuations();  }	  if(validator!=    null    &&    propertyNode    ==    null)    {    finishPropertyContinuations();    }    	compilable	timeout	208	1	replace
924	[BUG]  [BUGGY]  if(validator!=  null  &&  validator  ==  null)  {  finishPropertyContinuations();  }  timeout  [FE]                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(validator!=  null  &&  validator  ==  null)  {  finishPropertyContinuations();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(validator!=  null  &&  validator  ==  null)  {  finishPropertyContinuations();  }	  if(validator!=    null    &&    propertyNode    ==    null)    {    finishPropertyContinuations();    }    	compilable	timeout	208	1	replace
925	[BUG]  [BUGGY]  if(resolved  &&  propertyNode  ==  null)  {  finishPropertyContinuations();  }  [CE]  cannot  find  symbol  propertyNode  [FE]                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(resolved  &&  propertyNode  ==  null)  {  finishPropertyContinuations();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(resolved  &&  propertyNode  ==  null)  {  finishPropertyContinuations();  }	  if(validator!=    null    &&    propertyNode    ==    null)    {    finishPropertyContinuations();    }    	non-compiled	[CE]  cannot  find  symbol  propertyNode	208	None	replace
926	[BUG]  [BUGGY]  if(validator!=  null  &&  propertyProperties  ==  null)  {  finishPropertyContinuations();  }  [CE]  cannot  find  symbol  propertyProperties  [FE]                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(validator!=  null  &&  propertyProperties  ==  null)  {  finishPropertyContinuations();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(validator!=  null  &&  propertyProperties  ==  null)  {  finishPropertyContinuations();  }	  if(validator!=    null    &&    propertyNode    ==    null)    {    finishPropertyContinuations();    }    	non-compiled	[CE]  cannot  find  symbol  propertyProperties	208	None	replace
927	[BUG]  [BUGGY]  if(forAnnotations  ==  null)  {  startPropertyContinuations();  }  else  {  forAnnotations  =  Collections.emptyList();  }  [CE]  cannot  find  symbol  forAnnotations  [FE]                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(forAnnotations  ==  null)  {  startPropertyContinuations();  }  else  {  forAnnotations  =  Collections.emptyList();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(forAnnotations  ==  null)  {  startPropertyContinuations();  }  else  {  forAnnotations  =  Collections.emptyList();  }	  if(propertyContinuations    ==    null)    {    startPropertyContinuations();    }    else    {    forAnnotations    =    Collections.emptyList();    }    	non-compiled	[CE]  cannot  find  symbol  forAnnotations	3	None	replace
928	[BUG]  [BUGGY]  if(forAnnotations!=  null)  {  startPropertyContinuations();  }  else  {  forAnnotations  =  Collections.emptyList();  }  [CE]  cannot  find  symbol  forAnnotations  [FE]                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(forAnnotations!=  null)  {  startPropertyContinuations();  }  else  {  forAnnotations  =  Collections.emptyList();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(forAnnotations!=  null)  {  startPropertyContinuations();  }  else  {  forAnnotations  =  Collections.emptyList();  }	  if(propertyContinuations    ==    null)    {    startPropertyContinuations();    }    else    {    forAnnotations    =    Collections.emptyList();    }    	non-compiled	[CE]  cannot  find  symbol  forAnnotations	3	None	replace
929	[BUG]  [BUGGY]  if(forAnnotations  ==  null)  {  startPropertyContinuations();  }  else  {  forAnnotations  =  Collections.EMPTYList();  }  [CE]  cannot  find  symbol  forAnnotations  [FE]                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(forAnnotations  ==  null)  {  startPropertyContinuations();  }  else  {  forAnnotations  =  Collections.EMPTYList();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(forAnnotations  ==  null)  {  startPropertyContinuations();  }  else  {  forAnnotations  =  Collections.EMPTYList();  }	  if(propertyContinuations    ==    null)    {    startPropertyContinuations();    }    else    {    forAnnotations    =    Collections.emptyList();    }    	non-compiled	[CE]  cannot  find  symbol  forAnnotations	3	None	replace
930	[BUG]  [BUGGY]  if(forAnnotations  ==  null)  {  startPropertyContinuations();  }  [CE]  cannot  find  symbol  forAnnotations  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(forAnnotations  ==  null)  {  startPropertyContinuations();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(forAnnotations  ==  null)  {  startPropertyContinuations();  }	  if(propertyContinuations    ==    null)    {    startPropertyContinuations();    }    else    {    forAnnotations    =    Collections.emptyList();    }    	non-compiled	[CE]  cannot  find  symbol  forAnnotations	3	None	replace
931	[BUG]  [BUGGY]  if(forAnnotations  ==  null)  {  startPropertyContinuations();  }  else  {  forAnnotations  =  Lists.emptyList();  }  [CE]  cannot  find  symbol  forAnnotations  [FE]                            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(forAnnotations  ==  null)  {  startPropertyContinuations();  }  else  {  forAnnotations  =  Lists.emptyList();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(forAnnotations  ==  null)  {  startPropertyContinuations();  }  else  {  forAnnotations  =  Lists.emptyList();  }	  if(propertyContinuations    ==    null)    {    startPropertyContinuations();    }    else    {    forAnnotations    =    Collections.emptyList();    }    	non-compiled	[CE]  cannot  find  symbol  forAnnotations	3	None	replace
932	[BUG]  [BUGGY]  Parchet.checkState(registry.isLastGeneration(),  resolved);  [CE]  cannot  find  symbol  Parchet  [FE]                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Parchet.checkState(registry.isLastGeneration(),  resolved);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Parchet.checkState(registry.isLastGeneration(),  resolved);	  Parchet.checkState(registry.isLastGeneration());    	non-compiled	[CE]  cannot  find  symbol  Parchet	247	None	replace
933	[BUG]  [BUGGY]  Parchet.checkState(registry.isLastGeneration()  &&  registry.isLastGeneration());  [CE]  cannot  find  symbol  Parchet  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Parchet.checkState(registry.isLastGeneration()  &&  registry.isLastGeneration());  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Parchet.checkState(registry.isLastGeneration()  &&  registry.isLastGeneration());	  Parchet.checkState(registry.isLastGeneration());    	non-compiled	[CE]  cannot  find  symbol  Parchet	247	None	replace
934	[BUG]  [BUGGY]  Parchet.checkState(registry.isLastGeneration()?  registry.isLastGeneration()  :  registry.isLastGeneration());  [CE]  cannot  find  symbol  Parchet  [FE]                            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Parchet.checkState(registry.isLastGeneration()?  registry.isLastGeneration()  :  registry.isLastGeneration());  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Parchet.checkState(registry.isLastGeneration()?  registry.isLastGeneration()  :  registry.isLastGeneration());	  Parchet.checkState(registry.isLastGeneration());    	non-compiled	[CE]  cannot  find  symbol  Parchet	247	None	replace
935	[BUG]  [BUGGY]  Parchet.checkState(registry.isLastGeneration()  &&  resolved);  [CE]  cannot  find  symbol  Parchet  [FE]                              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Parchet.checkState(registry.isLastGeneration()  &&  resolved);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Parchet.checkState(registry.isLastGeneration()  &&  resolved);	  Parchet.checkState(registry.isLastGeneration());    	non-compiled	[CE]  cannot  find  symbol  Parchet	247	None	replace
936	[BUG]  [BUGGY]  Parchet.checkState(registry.isLastGeneration()?  registry.isLastGeneration()  :  registry.isFirstGeneration());  [CE]  cannot  find  symbol  [FE]                                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Parchet.checkState(registry.isLastGeneration()?  registry.isLastGeneration()  :  registry.isFirstGeneration());  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Parchet.checkState(registry.isLastGeneration()?  registry.isLastGeneration()  :  registry.isFirstGeneration());	  Parchet.checkState(registry.isLastGeneration());    	non-compiled	[CE]  cannot  find  symbol	247	None	replace
937	[BUG]  [BUGGY]  validator!=  null  &&  validator.getType()  ==  Token.FUNCTION)  {  finishPropertyContinuations();  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  validator!=  null  &&  validator.getType()  ==  Token.FUNCTION)  {  finishPropertyContinuations();  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	validator!=  null  &&  validator.getType()  ==  Token.FUNCTION)  {  finishPropertyContinuations();	  validator!=    null    &&    validator.getType()    ==    Token.FUNCTION)    {    finishPropertyContinuations();    }    else    {    registry.isLastGeneration()    :    this;    }    	non-compiled	[CE]  not  a  statement	95	None	replace
938	[BUG]  [BUGGY]  validator!=  null  &&  validator.getType()  ==  Token.FUNCTION)  {  finishPropertyContinuations();  }  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  validator!=  null  &&  validator.getType()  ==  Token.FUNCTION)  {  finishPropertyContinuations();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	validator!=  null  &&  validator.getType()  ==  Token.FUNCTION)  {  finishPropertyContinuations();  }	  validator!=    null    &&    validator.getType()    ==    Token.FUNCTION)    {    finishPropertyContinuations();    }    else    {    registry.isLastGeneration()    :    this;    }    	non-compiled	[CE]  not  a  statement	95	None	replace
939	[BUG]  [BUGGY]  Validator  validator!=  null  &&  validator.getType()  ==  Token.FUNCTION)  {  finishPropertyContinuations();  [CE]  ';'  expected  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Validator  validator!=  null  &&  validator.getType()  ==  Token.FUNCTION)  {  finishPropertyContinuations();  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Validator  validator!=  null  &&  validator.getType()  ==  Token.FUNCTION)  {  finishPropertyContinuations();	  validator!=    null    &&    validator.getType()    ==    Token.FUNCTION)    {    finishPropertyContinuations();    }    else    {    registry.isLastGeneration()    :    this;    }    	non-compiled	[CE]  ';'  expected	95	None	replace
940	[BUG]  [BUGGY]  Validator  <?>  validator!=  null  &&  validator.getType()  ==  Token.FUNCTION)  {  finishPropertyContinuations();  [CE]  ';'  expected  [FE]                            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Validator  <?>  validator!=  null  &&  validator.getType()  ==  Token.FUNCTION)  {  finishPropertyContinuations();  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Validator  <?>  validator!=  null  &&  validator.getType()  ==  Token.FUNCTION)  {  finishPropertyContinuations();	  validator!=    null    &&    validator.getType()    ==    Token.FUNCTION)    {    finishPropertyContinuations();    }    else    {    registry.isLastGeneration()    :    this;    }    	non-compiled	[CE]  ';'  expected	95	None	replace
941	[BUG]  [BUGGY]  Validator  <?>  validator!=  null  &&  validator.getType()  ==  Token.FUNCTION)  {  finishPropertyContinuations();  }  [CE]  ';'  expected  [FE]                              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Validator  <?>  validator!=  null  &&  validator.getType()  ==  Token.FUNCTION)  {  finishPropertyContinuations();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Validator  <?>  validator!=  null  &&  validator.getType()  ==  Token.FUNCTION)  {  finishPropertyContinuations();  }	  validator!=    null    &&    validator.getType()    ==    Token.FUNCTION)    {    finishPropertyContinuations();    }    else    {    registry.isLastGeneration()    :    this;    }    	non-compiled	[CE]  ';'  expected	95	None	replace
942	[BUG]  [BUGGY]  final  PropertyContinuations  <  PropertyContinuation>  startPropertyContinuations(propertyContinuations);  [CE]  ';'  expected  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  final  PropertyContinuations  <  PropertyContinuation>  startPropertyContinuations(propertyContinuations);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	final  PropertyContinuations  <  PropertyContinuation>  startPropertyContinuations(propertyContinuations);	  final    PropertyContinuations    <    PropertyContinuation>    startPropertyContinuations();    	non-compiled	[CE]  ';'  expected	113	None	replace
943	[BUG]  [BUGGY]  final  PropertyContinuations  <  PropertyContinuation>  startPropertyContinuations(registry);  [CE]  ';'  expected  [FE]                            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  final  PropertyContinuations  <  PropertyContinuation>  startPropertyContinuations(registry);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	final  PropertyContinuations  <  PropertyContinuation>  startPropertyContinuations(registry);	  final    PropertyContinuations    <    PropertyContinuation>    startPropertyContinuations();    	non-compiled	[CE]  ';'  expected	113	None	replace
944	[BUG]  [BUGGY]  final  PropertyContinuations  <  PropertyContinuation>  startPropertyContinuations(t);  [CE]  ';'  expected  [FE]                              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  final  PropertyContinuations  <  PropertyContinuation>  startPropertyContinuations(t);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	final  PropertyContinuations  <  PropertyContinuation>  startPropertyContinuations(t);	  final    PropertyContinuations    <    PropertyContinuation>    startPropertyContinuations();    	non-compiled	[CE]  ';'  expected	113	None	replace
945	[BUG]  [BUGGY]  final  PropertyContinuations  <  PropertyContinuation>  startPropertyContinuations().add(propertyContinuations);  [CE]  ';'  expected  [FE]                                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  final  PropertyContinuations  <  PropertyContinuation>  startPropertyContinuations().add(propertyContinuations);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	final  PropertyContinuations  <  PropertyContinuation>  startPropertyContinuations().add(propertyContinuations);	  final    PropertyContinuations    <    PropertyContinuation>    startPropertyContinuations();    	non-compiled	[CE]  ';'  expected	113	None	replace
946	[BUG]  [BUGGY]  if(resolved)  {  finishPropertyContinuations();  }  else  {  forAnnotations  =  Collections.emptyList();  }  [CE]  cannot  find  symbol  forAnnotations  [FE]                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(resolved)  {  finishPropertyContinuations();  }  else  {  forAnnotations  =  Collections.emptyList();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(resolved)  {  finishPropertyContinuations();  }  else  {  forAnnotations  =  Collections.emptyList();  }	  if(forAnnotations!=    null)    {    finishPropertyContinuations();    }    else    {    forAnnotations    =    Collections.emptyList();    }    	non-compiled	[CE]  cannot  find  symbol  forAnnotations	185	None	replace
947	[BUG]  [BUGGY]  ForAnnotations  <  null)  {  finishPropertyContinuations();  }  else  {  forAnnotations  =  Collections.emptyList();  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  ForAnnotations  <  null)  {  finishPropertyContinuations();  }  else  {  forAnnotations  =  Collections.emptyList();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	ForAnnotations  <  null)  {  finishPropertyContinuations();  }  else  {  forAnnotations  =  Collections.emptyList();  }	  if(forAnnotations!=    null)    {    finishPropertyContinuations();    }    else    {    forAnnotations    =    Collections.emptyList();    }    	non-compiled	[CE]  illegal  start  of  type	185	None	replace
948	[BUG]  [BUGGY]  ForAnnotations  {  null)  {  finishPropertyContinuations();  }  else  {  forAnnotations  =  Collections.emptyList();  }  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  ForAnnotations  {  null)  {  finishPropertyContinuations();  }  else  {  forAnnotations  =  Collections.emptyList();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	ForAnnotations  {  null)  {  finishPropertyContinuations();  }  else  {  forAnnotations  =  Collections.emptyList();  }	  if(forAnnotations!=    null)    {    finishPropertyContinuations();    }    else    {    forAnnotations    =    Collections.emptyList();    }    	non-compiled	[CE]  not  a  statement	185	None	replace
949	[BUG]  [BUGGY]  if(registry!=  null  &&  validator.isLastGeneration())  {  startPropertyContinuations();  }  else  {  registry.isLastGeneration()?  getReferencedType()  :  this;  }  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(registry!=  null  &&  validator.isLastGeneration())  {  startPropertyContinuations();  }  else  {  registry.isLastGeneration()?  getReferencedType()  :  this;  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(registry!=  null  &&  validator.isLastGeneration())  {  startPropertyContinuations();  }  else  {  registry.isLastGeneration()?  getReferencedType()  :  this;  }	  if(validator!=    null    &&    registry.isLastGeneration())    {    startPropertyContinuations();    }    else    {    registry.isLastGeneration()?    getReferencedType()    :    this;    }    	non-compiled	[CE]  not  a  statement	231	None	replace
950	[BUG]  [BUGGY]  if(registry!=  null  &&  validator.isLastGeneration())  {  startPropertyContinuations();  }  else  {  registry.isFirstGeneration()?  getReferencedType()  :  this;  }  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(registry!=  null  &&  validator.isLastGeneration())  {  startPropertyContinuations();  }  else  {  registry.isFirstGeneration()?  getReferencedType()  :  this;  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(registry!=  null  &&  validator.isLastGeneration())  {  startPropertyContinuations();  }  else  {  registry.isFirstGeneration()?  getReferencedType()  :  this;  }	  if(validator!=    null    &&    registry.isLastGeneration())    {    startPropertyContinuations();    }    else    {    registry.isLastGeneration()?    getReferencedType()    :    this;    }    	non-compiled	[CE]  not  a  statement	231	None	replace
951	[BUG]  [BUGGY]  Predicates.checkState(registry!=  null);  [CE]  cannot  find  symbol  Predicates  [FE]                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Predicates.checkState(registry!=  null);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Predicates.checkState(registry!=  null);	  Predicates.checkState(validator!=    null);    	non-compiled	[CE]  cannot  find  symbol  Predicates	140	None	replace
952	[BUG]  [BUGGY]  Predicates.checkState(validator  ==  null);  [CE]  cannot  find  symbol  Predicates  [FE]                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Predicates.checkState(validator  ==  null);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Predicates.checkState(validator  ==  null);	  Predicates.checkState(validator!=    null);    	non-compiled	[CE]  cannot  find  symbol  Predicates	140	None	replace
953	[BUG]  [BUGGY]  Predicates.checkState(this.validator!=  null);  [CE]  cannot  find  symbol  Predicates  [FE]                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Predicates.checkState(this.validator!=  null);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Predicates.checkState(this.validator!=  null);	  Predicates.checkState(validator!=    null);    	non-compiled	[CE]  cannot  find  symbol  Predicates	140	None	replace
954	[BUG]  [BUGGY]  Predicates.checkState(resolved!=  null);  [CE]  incomparable  types:  boolean  and  <null>  [FE]                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Predicates.checkState(resolved!=  null);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Predicates.checkState(resolved!=  null);	  Predicates.checkState(validator!=    null);    	non-compiled	[CE]  incomparable  types:  boolean  and  <null>	140	None	replace
955	[BUG]  [BUGGY]  Predicates.checkState(resolved  ==  null);  [CE]  incomparable  types:  boolean  and  <null>  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Predicates.checkState(resolved  ==  null);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Predicates.checkState(resolved  ==  null);	  Predicates.checkState(validator!=    null);    	non-compiled	[CE]  incomparable  types:  boolean  and  <null>	140	None	replace
956	[BUG]  [BUGGY]  Predicates.checkState(enclosing!=  null);  [CE]  cannot  find  symbol  Predicates  [FE]                            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Predicates.checkState(enclosing!=  null);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Predicates.checkState(enclosing!=  null);	  Predicates.checkState(validator!=    null);    	non-compiled	[CE]  cannot  find  symbol  Predicates	140	None	replace
957	[BUG]  [BUGGY]  if(validator  ==  null)  {  finishPropertyEnclosing();  }  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(validator  ==  null)  {  finishPropertyEnclosing();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(validator  ==  null)  {  finishPropertyEnclosing();  }	  if(validator!=    null)    {    finishPropertyEnclosing();    }    	non-compiled	[CE]  cannot  find  symbol	158	None	replace
958	[BUG]  [BUGGY]  finishPropertyEnclosing();  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  finishPropertyEnclosing();  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	finishPropertyEnclosing();	  if(validator!=    null)    {    finishPropertyEnclosing();    }    	non-compiled	[CE]  cannot  find  symbol	158	None	replace
959	[BUG]  [BUGGY]  if(validator!=  null)  {  startPropertyEnclosing();  }  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(validator!=  null)  {  startPropertyEnclosing();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(validator!=  null)  {  startPropertyEnclosing();  }	  if(validator!=    null)    {    finishPropertyEnclosing();    }    	non-compiled	[CE]  cannot  find  symbol	158	None	replace
960	[BUG]  [BUGGY]  PropertyEnclosing.finishPropertyEnclosing();  [CE]  cannot  find  symbol  PropertyEnclosing  [FE]                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  PropertyEnclosing.finishPropertyEnclosing();  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	PropertyEnclosing.finishPropertyEnclosing();	  if(validator!=    null)    {    finishPropertyEnclosing();    }    	non-compiled	[CE]  cannot  find  symbol  PropertyEnclosing	158	None	replace
961	[BUG]  [BUGGY]  Parchet.GetPropertyEnclosing(t,  validator);  [CE]  cannot  find  symbol  Parchet  [FE]                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Parchet.GetPropertyEnclosing(t,  validator);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Parchet.GetPropertyEnclosing(t,  validator);	  if(validator!=    null)    {    finishPropertyEnclosing();    }    	non-compiled	[CE]  cannot  find  symbol  Parchet	158	None	replace
962	[BUG]  [BUGGY]  Predicate  validator  =  getValue(),  registry.isLastGeneration());  [CE]  ';'  expected  [FE]                                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Predicate  validator  =  getValue(),  registry.isLastGeneration());  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Predicate  validator  =  getValue(),  registry.isLastGeneration());	          Predicate    validator    =    getValue();    	non-compiled	[CE]  ';'  expected	25	None	replace
963	[BUG]  [BUGGY]  Predicate  validator  =  getValue(),  registry);  [CE]  ';'  expected  [FE]                                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Predicate  validator  =  getValue(),  registry);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Predicate  validator  =  getValue(),  registry);	          Predicate    validator    =    getValue();    	non-compiled	[CE]  ';'  expected	25	None	replace
964	[BUG]  [BUGGY]  Predicate  validator  =  getValue().evaluate(registry);  [CE]  cannot  find  symbol  [FE]                                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Predicate  validator  =  getValue().evaluate(registry);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Predicate  validator  =  getValue().evaluate(registry);	          Predicate    validator    =    getValue();    	non-compiled	[CE]  cannot  find  symbol	25	None	replace
965	[BUG]  [BUGGY]  Predicate  validator  =  getValue().toString();  [CE]  cannot  find  symbol  [FE]                                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Predicate  validator  =  getValue().toString();  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Predicate  validator  =  getValue().toString();	          Predicate    validator    =    getValue();    	non-compiled	[CE]  cannot  find  symbol	25	None	replace
966	[BUG]  [BUGGY]  Predicate  validator  =  getValue(),  resolved);  [CE]  ';'  expected  [FE]                                            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Predicate  validator  =  getValue(),  resolved);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Predicate  validator  =  getValue(),  resolved);	          Predicate    validator    =    getValue();    	non-compiled	[CE]  ';'  expected	25	None	replace
967	[BUG]  [BUGGY]  Predicate  validator  =  getValue(),  registry;  [CE]  cannot  find  symbol  [FE]                                              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Predicate  validator  =  getValue(),  registry;  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Predicate  validator  =  getValue(),  registry;	          Predicate    validator    =    getValue();    	non-compiled	[CE]  cannot  find  symbol	25	None	replace
968	[BUG]  [BUGGY]  PropertyContinuation  propertyContinuations  =  enclosing.getPropertyContinuations();  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  PropertyContinuation  propertyContinuations  =  enclosing.getPropertyContinuations();  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	PropertyContinuation  propertyContinuations  =  enclosing.getPropertyContinuations();	  PropertyContinuation    propertyContinuations    =    registry.getPropertyContinuations();    	non-compiled	[CE]  cannot  find  symbol	146	None	replace
969	[BUG]  [BUGGY]  PropertyContinuation  propertyContinuations  =  registry.getPropertyContinuations(this.forAnnotations);  [CE]  cannot  find  symbol  forAnnotations  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  PropertyContinuation  propertyContinuations  =  registry.getPropertyContinuations(this.forAnnotations);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	PropertyContinuation  propertyContinuations  =  registry.getPropertyContinuations(this.forAnnotations);	  PropertyContinuation    propertyContinuations    =    registry.getPropertyContinuations();    	non-compiled	[CE]  cannot  find  symbol  forAnnotations	146	None	replace
970	[BUG]  [BUGGY]  PropertyContinuation  propertyContinuations  =  registry.getPropertyContinuations(false);  [CE]  cannot  find  symbol  [FE]                            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  PropertyContinuation  propertyContinuations  =  registry.getPropertyContinuations(false);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	PropertyContinuation  propertyContinuations  =  registry.getPropertyContinuations(false);	  PropertyContinuation    propertyContinuations    =    registry.getPropertyContinuations();    	non-compiled	[CE]  cannot  find  symbol	146	None	replace
971	[BUG]  [BUGGY]  luate(registry,  enclosing)  {  finishPropertyContinuations();  }  else  {  registry.isLastGeneration()?  getReferencedType()  :  null;  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  luate(registry,  enclosing)  {  finishPropertyContinuations();  }  else  {  registry.isLastGeneration()?  getReferencedType()  :  null;  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	luate(registry,  enclosing)  {  finishPropertyContinuations();  }  else  {  registry.isLastGeneration()?  getReferencedType()  :  null;	  luate(registry,    resolved)    {    finishPropertyContinuations();    }    else    {    registry.isLastGeneration()?    getReferencedType()    :    null;    	non-compiled	[CE]  ';'  expected	181	None	replace
972	[BUG]  [BUGGY]  luate(registry,  enclosing)  {  startPropertyContinuations();  }  else  {  registry.isLastGeneration()?  getReferencedType()  :  null;  [CE]  ';'  expected  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  luate(registry,  enclosing)  {  startPropertyContinuations();  }  else  {  registry.isLastGeneration()?  getReferencedType()  :  null;  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	luate(registry,  enclosing)  {  startPropertyContinuations();  }  else  {  registry.isLastGeneration()?  getReferencedType()  :  null;	  luate(registry,    resolved)    {    finishPropertyContinuations();    }    else    {    registry.isLastGeneration()?    getReferencedType()    :    null;    	non-compiled	[CE]  ';'  expected	181	None	replace
973	[BUG]  [BUGGY]  luate(registry,  enclosing)  {  getPropertyContinuations();  }  else  {  registry.isLastGeneration()?  getReferencedType()  :  null;  [CE]  ';'  expected  [FE]                            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  luate(registry,  enclosing)  {  getPropertyContinuations();  }  else  {  registry.isLastGeneration()?  getReferencedType()  :  null;  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	luate(registry,  enclosing)  {  getPropertyContinuations();  }  else  {  registry.isLastGeneration()?  getReferencedType()  :  null;	  luate(registry,    resolved)    {    finishPropertyContinuations();    }    else    {    registry.isLastGeneration()?    getReferencedType()    :    null;    	non-compiled	[CE]  ';'  expected	181	None	replace
974	[BUG]  [BUGGY]  luate(registry,  propertyNode)  {  finishPropertyContinuations();  }  else  {  registry.isLastGeneration()?  getReferencedType()  :  null;  [CE]  ';'  expected  [FE]                              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  luate(registry,  propertyNode)  {  finishPropertyContinuations();  }  else  {  registry.isLastGeneration()?  getReferencedType()  :  null;  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	luate(registry,  propertyNode)  {  finishPropertyContinuations();  }  else  {  registry.isLastGeneration()?  getReferencedType()  :  null;	  luate(registry,    resolved)    {    finishPropertyContinuations();    }    else    {    registry.isLastGeneration()?    getReferencedType()    :    null;    	non-compiled	[CE]  ';'  expected	181	None	replace
975	[BUG]  [BUGGY]  luate(registry,  type)  {  finishPropertyContinuations();  }  else  {  registry.isLastGeneration()?  getReferencedType()  :  null;  [CE]  ';'  expected  [FE]                                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  luate(registry,  type)  {  finishPropertyContinuations();  }  else  {  registry.isLastGeneration()?  getReferencedType()  :  null;  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	luate(registry,  type)  {  finishPropertyContinuations();  }  else  {  registry.isLastGeneration()?  getReferencedType()  :  null;	  luate(registry,    resolved)    {    finishPropertyContinuations();    }    else    {    registry.isLastGeneration()?    getReferencedType()    :    null;    	non-compiled	[CE]  ';'  expected	181	None	replace
976	[BUG]  [BUGGY]  validatePropertyAnnotations();  }  else  {  registry.isLastGeneration()  :  this;  }  [CE]  [FE]                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  validatePropertyAnnotations();  }  else  {  registry.isLastGeneration()  :  this;  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	validatePropertyAnnotations();  }  else  {  registry.isLastGeneration()  :  this;  }	  if(resolved)    {    finishPropertyAnnotations();    }    else    {    registry.isLastGeneration()    :    this;    }    	non-compiled	[CE]  	174	None	replace
977	[BUG]  [BUGGY]  luateAnnotations();  }  else  {  registry.isLastGeneration()  :  this;  }  [CE]  [FE]                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  luateAnnotations();  }  else  {  registry.isLastGeneration()  :  this;  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	luateAnnotations();  }  else  {  registry.isLastGeneration()  :  this;  }	  if(resolved)    {    finishPropertyAnnotations();    }    else    {    registry.isLastGeneration()    :    this;    }    	non-compiled	[CE]  	174	None	replace
978	[BUG]  [BUGGY]  validatePropertyAnnotations();  }  else  if(resolved)  {  registry.isLastGeneration()  :  this;  }  [CE]  [FE]                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  validatePropertyAnnotations();  }  else  if(resolved)  {  registry.isLastGeneration()  :  this;  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	validatePropertyAnnotations();  }  else  if(resolved)  {  registry.isLastGeneration()  :  this;  }	  if(resolved)    {    finishPropertyAnnotations();    }    else    {    registry.isLastGeneration()    :    this;    }    	non-compiled	[CE]  	174	None	replace
979	[BUG]  [BUGGY]  Annotations  prob  =  registry.isLastGeneration()?  getReferencedType()  :  this;  [CE]  cannot  find  symbol  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Annotations  prob  =  registry.isLastGeneration()?  getReferencedType()  :  this;  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Annotations  prob  =  registry.isLastGeneration()?  getReferencedType()  :  this;	  if(resolved)    {    finishPropertyAnnotations();    }    else    {    registry.isLastGeneration()    :    this;    }    	non-compiled	[CE]  cannot  find  symbol	174	None	replace
980	[BUG]  [BUGGY]  Annotations  prob  =  registry.getPropertyAnnotations();  }  else  {  registry.isLastGeneration()  :  this;  }  [CE]  [FE]                            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Annotations  prob  =  registry.getPropertyAnnotations();  }  else  {  registry.isLastGeneration()  :  this;  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Annotations  prob  =  registry.getPropertyAnnotations();  }  else  {  registry.isLastGeneration()  :  this;  }	  if(resolved)    {    finishPropertyAnnotations();    }    else    {    registry.isLastGeneration()    :    this;    }    	non-compiled	[CE]  	174	None	replace
981	[BUG]  [BUGGY]  Annotations  prob  =  registry.getPropertyAnnotations();  [CE]  cannot  find  symbol  [FE]                              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Annotations  prob  =  registry.getPropertyAnnotations();  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Annotations  prob  =  registry.getPropertyAnnotations();	  if(resolved)    {    finishPropertyAnnotations();    }    else    {    registry.isLastGeneration()    :    this;    }    	non-compiled	[CE]  cannot  find  symbol	174	None	replace
982	[BUG]  [BUGGY]  Predicate  validator  =  getValueForAnnotations(resolved,  registry);  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Predicate  validator  =  getValueForAnnotations(resolved,  registry);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Predicate  validator  =  getValueForAnnotations(resolved,  registry);	  Predicate    validator    =    getValueForAnnotations(resolved);    	non-compiled	[CE]  cannot  find  symbol	142	None	replace
983	[BUG]  [BUGGY]  Predicate  validator  =  getValueForAnnotations(resolved,  propertyNode);  [CE]  cannot  find  symbol  propertyNode  [FE]                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Predicate  validator  =  getValueForAnnotations(resolved,  propertyNode);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Predicate  validator  =  getValueForAnnotations(resolved,  propertyNode);	  Predicate    validator    =    getValueForAnnotations(resolved);    	non-compiled	[CE]  cannot  find  symbol  propertyNode	142	None	replace
984	[BUG]  [BUGGY]  Predicate  validator  =  getValueForAnnotations(resolved,  enclosing);  [CE]  cannot  find  symbol  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Predicate  validator  =  getValueForAnnotations(resolved,  enclosing);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Predicate  validator  =  getValueForAnnotations(resolved,  enclosing);	  Predicate    validator    =    getValueForAnnotations(resolved);    	non-compiled	[CE]  cannot  find  symbol	142	None	replace
985	[BUG]  [BUGGY]  Predicate  validator  =  getValueForAnnotations(type);  [CE]  cannot  find  symbol  type  [FE]                            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Predicate  validator  =  getValueForAnnotations(type);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Predicate  validator  =  getValueForAnnotations(type);	  Predicate    validator    =    getValueForAnnotations(resolved);    	non-compiled	[CE]  cannot  find  symbol  type	142	None	replace
986	[BUG]  [BUGGY]  Predicate  validator  =  getValueForAnnotations(t,  enclosing,  registry);  [CE]  cannot  find  symbol  [FE]                            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Predicate  validator  =  getValueForAnnotations(t,  enclosing,  registry);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Predicate  validator  =  getValueForAnnotations(t,  enclosing,  registry);	          Predicate    validator    =    getValueForAnnotations(t,    enclosing);    	non-compiled	[CE]  cannot  find  symbol	21	None	replace
987	[BUG]  [BUGGY]  Predicate  validator  =  getValueForAnnotations(t,  enclosing,  type);  [CE]  cannot  find  symbol  type  [FE]                              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Predicate  validator  =  getValueForAnnotations(t,  enclosing,  type);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Predicate  validator  =  getValueForAnnotations(t,  enclosing,  type);	          Predicate    validator    =    getValueForAnnotations(t,    enclosing);    	non-compiled	[CE]  cannot  find  symbol  type	21	None	replace
988	[BUG]  [BUGGY]  Predicate  validator  =  getValueForAnnotations(t,  enclosing,  propertyNode);  [CE]  cannot  find  symbol  propertyNode  [FE]                                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Predicate  validator  =  getValueForAnnotations(t,  enclosing,  propertyNode);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Predicate  validator  =  getValueForAnnotations(t,  enclosing,  propertyNode);	          Predicate    validator    =    getValueForAnnotations(t,    enclosing);    	non-compiled	[CE]  cannot  find  symbol  propertyNode	21	None	replace
989	[BUG]  [BUGGY]  ForAnnotations  {  null)  {  startPropertyContinuations();  }  else  {  forAnnotations  =  Collections.emptyList();  }  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  ForAnnotations  {  null)  {  startPropertyContinuations();  }  else  {  forAnnotations  =  Collections.emptyList();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	ForAnnotations  {  null)  {  startPropertyContinuations();  }  else  {  forAnnotations  =  Collections.emptyList();  }	  if(forAnnotations    ==    null)    {    finishPropertyContinuations();    }    else    {    forAnnotations    =    Collections.emptyList();    }    	non-compiled	[CE]  not  a  statement	249	None	replace
990	[BUG]  [BUGGY]  if(forAnnotations!=  null)  {  finishPropertyInferred();  }  else  {  forAnnotations  =  Collections.emptyList();  }  [CE]  cannot  find  symbol  forAnnotations  [FE]                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(forAnnotations!=  null)  {  finishPropertyInferred();  }  else  {  forAnnotations  =  Collections.emptyList();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(forAnnotations!=  null)  {  finishPropertyInferred();  }  else  {  forAnnotations  =  Collections.emptyList();  }	  if(propertyContinuations!=    null)    {    finishPropertyInferred();    }    else    {    forAnnotations    =    Collections.emptyList();    }    	non-compiled	[CE]  cannot  find  symbol  forAnnotations	188	None	replace
991	[BUG]  [BUGGY]  if(forAnnotations!=  null)  {  finishPropertyInferred();  }  else  {  forAnnotations  =  Collections.EMPTYList();  }  [CE]  cannot  find  symbol  forAnnotations  [FE]                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(forAnnotations!=  null)  {  finishPropertyInferred();  }  else  {  forAnnotations  =  Collections.EMPTYList();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(forAnnotations!=  null)  {  finishPropertyInferred();  }  else  {  forAnnotations  =  Collections.EMPTYList();  }	  if(propertyContinuations!=    null)    {    finishPropertyInferred();    }    else    {    forAnnotations    =    Collections.emptyList();    }    	non-compiled	[CE]  cannot  find  symbol  forAnnotations	188	None	replace
992	[BUG]  [BUGGY]  ForAnnotations  <  null)  {  finishPropertyInferred();  }  else  {  forAnnotations  =  Collections.emptyList();  }  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  ForAnnotations  <  null)  {  finishPropertyInferred();  }  else  {  forAnnotations  =  Collections.emptyList();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	ForAnnotations  <  null)  {  finishPropertyInferred();  }  else  {  forAnnotations  =  Collections.emptyList();  }	  if(propertyContinuations!=    null)    {    finishPropertyInferred();    }    else    {    forAnnotations    =    Collections.emptyList();    }    	non-compiled	[CE]  illegal  start  of  type	188	None	replace
993	[BUG]  [BUGGY]  forAnnotations!=  null)  {  finishPropertyInferred();  }  else  {  forAnnotations  =  Collections.emptyList();  }  [CE]  not  a  statement  [FE]                            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  forAnnotations!=  null)  {  finishPropertyInferred();  }  else  {  forAnnotations  =  Collections.emptyList();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	forAnnotations!=  null)  {  finishPropertyInferred();  }  else  {  forAnnotations  =  Collections.emptyList();  }	  if(propertyContinuations!=    null)    {    finishPropertyInferred();    }    else    {    forAnnotations    =    Collections.emptyList();    }    	non-compiled	[CE]  not  a  statement	188	None	replace
994	[BUG]  [BUGGY]  if(forAnnotations!=  null)  {  startPropertyInferred();  }  else  {  forAnnotations  =  Collections.emptyList();  }  [CE]  cannot  find  symbol  forAnnotations  [FE]                              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(forAnnotations!=  null)  {  startPropertyInferred();  }  else  {  forAnnotations  =  Collections.emptyList();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(forAnnotations!=  null)  {  startPropertyInferred();  }  else  {  forAnnotations  =  Collections.emptyList();  }	  if(propertyContinuations!=    null)    {    finishPropertyInferred();    }    else    {    forAnnotations    =    Collections.emptyList();    }    	non-compiled	[CE]  cannot  find  symbol  forAnnotations	188	None	replace
995	[BUG]  [BUGGY]  if(forAnnotations!=  null)  {  finishPropertyInferred();  }  else  {  forAnnotations  =  Lists.emptyList();  }  [CE]  cannot  find  symbol  forAnnotations  [FE]                                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(forAnnotations!=  null)  {  finishPropertyInferred();  }  else  {  forAnnotations  =  Lists.emptyList();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(forAnnotations!=  null)  {  finishPropertyInferred();  }  else  {  forAnnotations  =  Lists.emptyList();  }	  if(propertyContinuations!=    null)    {    finishPropertyInferred();    }    else    {    forAnnotations    =    Collections.emptyList();    }    	non-compiled	[CE]  cannot  find  symbol  forAnnotations	188	None	replace
996	[BUG]  [BUGGY]  propertyContinuations!=  null  &&  propertyContinuations.size()  >  0)  {  registry.isLastGeneration()?  getReferencedType()  :  this;  }  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  propertyContinuations!=  null  &&  propertyContinuations.size()  >  0)  {  registry.isLastGeneration()?  getReferencedType()  :  this;  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	propertyContinuations!=  null  &&  propertyContinuations.size()  >  0)  {  registry.isLastGeneration()?  getReferencedType()  :  this;  }	  propertyContinuations!=    null    &&    propertyContinuations.size()    >    0)    {    startPropertyContinuations();    }    else    {    registry.isLastGeneration()?    getReferencedType()    :    this;    }    	non-compiled	[CE]  not  a  statement	193	None	replace
997	[BUG]  [BUGGY]  validatePropertyContinuations(t,  forAnnotations);  [CE]  cannot  find  symbol  forAnnotations  [FE]                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  validatePropertyContinuations(t,  forAnnotations);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	validatePropertyContinuations(t,  forAnnotations);	  validatePropertyContinuations(t,    resolved);    	non-compiled	[CE]  cannot  find  symbol  forAnnotations	108	None	replace
998	[BUG]  [BUGGY]  validatePropertyContinuations(t,  properties);  [CE]  cannot  find  symbol  properties  [FE]                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  validatePropertyContinuations(t,  properties);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	validatePropertyContinuations(t,  properties);	  validatePropertyContinuations(t,    resolved);    	non-compiled	[CE]  cannot  find  symbol  properties	108	None	replace
999	[BUG]  [BUGGY]  Validate.notNull(resolved);  [CE]  cannot  find  symbol  Validate  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Validate.notNull(resolved);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Validate.notNull(resolved);	  validatePropertyContinuations(t,    resolved);    	non-compiled	[CE]  cannot  find  symbol  Validate	108	None	replace
1000	[BUG]  [BUGGY]  validatePropertyContinuations(t,  props);  [CE]  cannot  find  symbol  props  [FE]                            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  validatePropertyContinuations(t,  props);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	validatePropertyContinuations(t,  props);	  validatePropertyContinuations(t,    resolved);    	non-compiled	[CE]  cannot  find  symbol  props	108	None	replace
1001	[BUG]  [BUGGY]  validatePropertyContinuations(t,  registry);  [CE]  cannot  find  symbol  [FE]                              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  validatePropertyContinuations(t,  registry);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	validatePropertyContinuations(t,  registry);	  validatePropertyContinuations(t,    resolved);    	non-compiled	[CE]  cannot  find  symbol	108	None	replace
1002	[BUG]  [BUGGY]  Status.checkState(registry.isLastGeneration(),  handleTypeCycle);  [CE]  cannot  find  symbol  handleTypeCycle  [FE]                            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Status.checkState(registry.isLastGeneration(),  handleTypeCycle);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Status.checkState(registry.isLastGeneration(),  handleTypeCycle);	  Status.checkState(registry.isLastGeneration(),    resolveViaProperties);    	non-compiled	[CE]  cannot  find  symbol  handleTypeCycle	75	None	replace
1003	[BUG]  [BUGGY]  Status.checkState(registry.isLastGeneration(),  resolveType);  [CE]  cannot  find  symbol  resolveType  [FE]                              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Status.checkState(registry.isLastGeneration(),  resolveType);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Status.checkState(registry.isLastGeneration(),  resolveType);	  Status.checkState(registry.isLastGeneration(),    resolveViaProperties);    	non-compiled	[CE]  cannot  find  symbol  resolveType	75	None	replace
1004	[BUG]  [BUGGY]  Status.checkState(registry.isLastGeneration(),  this);  [CE]  cannot  find  symbol  Status  [FE]                                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Status.checkState(registry.isLastGeneration(),  this);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Status.checkState(registry.isLastGeneration(),  this);	  Status.checkState(registry.isLastGeneration(),    resolveViaProperties);    	non-compiled	[CE]  cannot  find  symbol  Status	75	None	replace
1005	[BUG]  [BUGGY]  final  PropertyContinuations  <  N>  propertyContinuations  =  getPropertyContinuations(propertyNode);  [CE]  cannot  find  symbol  [FE]                            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  final  PropertyContinuations  <  N>  propertyContinuations  =  getPropertyContinuations(propertyNode);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	final  PropertyContinuations  <  N>  propertyContinuations  =  getPropertyContinuations(propertyNode);	  final    PropertyContinuations    <    N>    propertyContinuations    =    getPropertyContinuations();    	non-compiled	[CE]  cannot  find  symbol	254	None	replace
1006	[BUG]  [BUGGY]  final  PropertyContinuations  <  N>  propertyContinuations  =  getPropertyContinuations(propertyName);  [CE]  cannot  find  symbol  [FE]                              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  final  PropertyContinuations  <  N>  propertyContinuations  =  getPropertyContinuations(propertyName);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	final  PropertyContinuations  <  N>  propertyContinuations  =  getPropertyContinuations(propertyName);	  final    PropertyContinuations    <    N>    propertyContinuations    =    getPropertyContinuations();    	non-compiled	[CE]  cannot  find  symbol	254	None	replace
1007	[BUG]  [BUGGY]  final  PropertyContinuations  <  N>  propertyContinuations  =  getPropertyContinuations(resolved);  [CE]  cannot  find  symbol  [FE]                                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  final  PropertyContinuations  <  N>  propertyContinuations  =  getPropertyContinuations(resolved);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	final  PropertyContinuations  <  N>  propertyContinuations  =  getPropertyContinuations(resolved);	  final    PropertyContinuations    <    N>    propertyContinuations    =    getPropertyContinuations();    	non-compiled	[CE]  cannot  find  symbol	254	None	replace
1008	[BUG]  [BUGGY]  final  PropertyContinuations  <  N>  propertyContinuations  =  getPropertyContinuations(registry);  [CE]  cannot  find  symbol  [FE]                                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  final  PropertyContinuations  <  N>  propertyContinuations  =  getPropertyContinuations(registry);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	final  PropertyContinuations  <  N>  propertyContinuations  =  getPropertyContinuations(registry);	  final    PropertyContinuations    <    N>    propertyContinuations    =    getPropertyContinuations();    	non-compiled	[CE]  cannot  find  symbol	254	None	replace
1009	[BUG]  [BUGGY]  final  PropertyContinuations  <  N>  propertyContinuations  =  getPropertyContinuations(property);  [CE]  cannot  find  symbol  [FE]                                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  final  PropertyContinuations  <  N>  propertyContinuations  =  getPropertyContinuations(property);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	final  PropertyContinuations  <  N>  propertyContinuations  =  getPropertyContinuations(property);	  final    PropertyContinuations    <    N>    propertyContinuations    =    getPropertyContinuations();    	non-compiled	[CE]  cannot  find  symbol	254	None	replace
1010	[BUG]  [BUGGY]  final  PropertyContinuations  <  N>  propertyContinuations  =  getPropertyContinuations(null);  [CE]  cannot  find  symbol  [FE]                                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  final  PropertyContinuations  <  N>  propertyContinuations  =  getPropertyContinuations(null);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	final  PropertyContinuations  <  N>  propertyContinuations  =  getPropertyContinuations(null);	  final    PropertyContinuations    <    N>    propertyContinuations    =    getPropertyContinuations();    	non-compiled	[CE]  cannot  find  symbol	254	None	replace
1011	[BUG]  [BUGGY]  Predicate  validator  =  getValidator(),  registry.isLastGeneration());  [CE]  ';'  expected  [FE]                                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Predicate  validator  =  getValidator(),  registry.isLastGeneration());  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Predicate  validator  =  getValidator(),  registry.isLastGeneration());	          Predicate    validator    =    getValidator();    	non-compiled	[CE]  ';'  expected	27	None	replace
1012	[BUG]  [BUGGY]  Predicate  validator  =  getValidator(registry);  [CE]  cannot  find  symbol  [FE]                                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Predicate  validator  =  getValidator(registry);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Predicate  validator  =  getValidator(registry);	          Predicate    validator    =    getValidator();    	non-compiled	[CE]  cannot  find  symbol	27	None	replace
1013	[BUG]  [BUGGY]  Predicate  validator  =  getValidator(),  registry);  [CE]  ';'  expected  [FE]                                            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Predicate  validator  =  getValidator(),  registry);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Predicate  validator  =  getValidator(),  registry);	          Predicate    validator    =    getValidator();    	non-compiled	[CE]  ';'  expected	27	None	replace
1014	[BUG]  [BUGGY]  Predicate  validator  =  getValidatorInstance();  [CE]  cannot  find  symbol  [FE]                                              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Predicate  validator  =  getValidatorInstance();  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Predicate  validator  =  getValidatorInstance();	          Predicate    validator    =    getValidator();    	non-compiled	[CE]  cannot  find  symbol	27	None	replace
1015	[BUG]  [BUGGY]  Predicate  validator  =  getValidator(),  resolved);  [CE]  ';'  expected  [FE]                                                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Predicate  validator  =  getValidator(),  resolved);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Predicate  validator  =  getValidator(),  resolved);	          Predicate    validator    =    getValidator();    	non-compiled	[CE]  ';'  expected	27	None	replace
1016	[BUG]  [BUGGY]  Predicate  validator  =  getValidator().evaluate(registry);  [CE]  cannot  find  symbol  [FE]                                                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Predicate  validator  =  getValidator().evaluate(registry);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Predicate  validator  =  getValidator().evaluate(registry);	          Predicate    validator    =    getValidator();    	non-compiled	[CE]  cannot  find  symbol	27	None	replace
1017	[BUG]  [BUGGY]  final  PropertyContinuations  <  Node>  propertyContinuations  =  getPropertyContinuations(propertyNode);  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  final  PropertyContinuations  <  Node>  propertyContinuations  =  getPropertyContinuations(propertyNode);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	final  PropertyContinuations  <  Node>  propertyContinuations  =  getPropertyContinuations(propertyNode);	  final    PropertyContinuations    <    Node>    propertyContinuations    =    getPropertyContinuations();    	non-compiled	[CE]  cannot  find  symbol	135	None	replace
1018	[BUG]  [BUGGY]  final  PropertyContinuations  <  Node>  propertyContinuations  =  getPropertyContinuations(resolved);  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  final  PropertyContinuations  <  Node>  propertyContinuations  =  getPropertyContinuations(resolved);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	final  PropertyContinuations  <  Node>  propertyContinuations  =  getPropertyContinuations(resolved);	  final    PropertyContinuations    <    Node>    propertyContinuations    =    getPropertyContinuations();    	non-compiled	[CE]  cannot  find  symbol	135	None	replace
1019	[BUG]  [BUGGY]  final  PropertyContinuations  <  Node>  propertyContinuations  =  getPropertyContinuations(registry);  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  final  PropertyContinuations  <  Node>  propertyContinuations  =  getPropertyContinuations(registry);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	final  PropertyContinuations  <  Node>  propertyContinuations  =  getPropertyContinuations(registry);	  final    PropertyContinuations    <    Node>    propertyContinuations    =    getPropertyContinuations();    	non-compiled	[CE]  cannot  find  symbol	135	None	replace
1020	[BUG]  [BUGGY]  final  PropertyContinuations  <  Node>  propertyContinuations  =  getPropertyContinuations(null);  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  final  PropertyContinuations  <  Node>  propertyContinuations  =  getPropertyContinuations(null);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	final  PropertyContinuations  <  Node>  propertyContinuations  =  getPropertyContinuations(null);	  final    PropertyContinuations    <    Node>    propertyContinuations    =    getPropertyContinuations();    	non-compiled	[CE]  cannot  find  symbol	135	None	replace
1021	[BUG]  [BUGGY]  final  PropertyContinuations  <  Node>  propertyContinuations  =  getReferencedPropertyContinuations();  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  final  PropertyContinuations  <  Node>  propertyContinuations  =  getReferencedPropertyContinuations();  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	final  PropertyContinuations  <  Node>  propertyContinuations  =  getReferencedPropertyContinuations();	  final    PropertyContinuations    <    Node>    propertyContinuations    =    getPropertyContinuations();    	non-compiled	[CE]  cannot  find  symbol	135	None	replace
1022	[BUG]  [BUGGY]  final  PropertyContinuations  <  Node>  propertyContinuations  =  getPropertyContinuations(propertyName);  [CE]  cannot  find  symbol  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  final  PropertyContinuations  <  Node>  propertyContinuations  =  getPropertyContinuations(propertyName);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	final  PropertyContinuations  <  Node>  propertyContinuations  =  getPropertyContinuations(propertyName);	  final    PropertyContinuations    <    Node>    propertyContinuations    =    getPropertyContinuations();    	non-compiled	[CE]  cannot  find  symbol	135	None	replace
1023	[BUG]  [BUGGY]  Annotation  <?>  propertyContinuations  =  registry.getPropertyContinuations(false);  [CE]  cannot  find  symbol  [FE]                                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Annotation  <?>  propertyContinuations  =  registry.getPropertyContinuations(false);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Annotation  <?>  propertyContinuations  =  registry.getPropertyContinuations(false);	  Annotation    <?>    propertyContinuations    =    registry.getPropertyContinuations();    	non-compiled	[CE]  cannot  find  symbol	200	None	replace
1024	[BUG]  [BUGGY]  Annotation  <?>  propertyContinuations  =  registry.getPropertyContinuations(this.forAnnotations);  [CE]  cannot  find  symbol  [FE]                                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Annotation  <?>  propertyContinuations  =  registry.getPropertyContinuations(this.forAnnotations);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Annotation  <?>  propertyContinuations  =  registry.getPropertyContinuations(this.forAnnotations);	  Annotation    <?>    propertyContinuations    =    registry.getPropertyContinuations();    	non-compiled	[CE]  cannot  find  symbol	200	None	replace
1025	[BUG]  [BUGGY]  Annotation  <?>  propertyContinuations  =  registry.getPropertyContinuations(propertyNode);  [CE]  cannot  find  symbol  [FE]                                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Annotation  <?>  propertyContinuations  =  registry.getPropertyContinuations(propertyNode);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Annotation  <?>  propertyContinuations  =  registry.getPropertyContinuations(propertyNode);	  Annotation    <?>    propertyContinuations    =    registry.getPropertyContinuations();    	non-compiled	[CE]  cannot  find  symbol	200	None	replace
1026	[BUG]  [BUGGY]  Annotation  <?>  propertyContinuations  =  registry.getPropertyContinuations(resolved);  [CE]  cannot  find  symbol  [FE]                                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Annotation  <?>  propertyContinuations  =  registry.getPropertyContinuations(resolved);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Annotation  <?>  propertyContinuations  =  registry.getPropertyContinuations(resolved);	  Annotation    <?>    propertyContinuations    =    registry.getPropertyContinuations();    	non-compiled	[CE]  cannot  find  symbol	200	None	replace
1027	[BUG]  [BUGGY]  Annotation  <?>  propertyContinuations  =  this.registry.getPropertyContinuations();  [CE]  cannot  find  symbol  [FE]                                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Annotation  <?>  propertyContinuations  =  this.registry.getPropertyContinuations();  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Annotation  <?>  propertyContinuations  =  this.registry.getPropertyContinuations();	  Annotation    <?>    propertyContinuations    =    registry.getPropertyContinuations();    	non-compiled	[CE]  cannot  find  symbol	200	None	replace
1028	[BUG]  [BUGGY]  if(forAnnotations!=  null)  {  finishPropertyAnnotations();  }  else  {  forAnnotations  =  Collections.emptyList();  }  [CE]  cannot  find  symbol  forAnnotations  [FE]                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(forAnnotations!=  null)  {  finishPropertyAnnotations();  }  else  {  forAnnotations  =  Collections.emptyList();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(forAnnotations!=  null)  {  finishPropertyAnnotations();  }  else  {  forAnnotations  =  Collections.emptyList();  }	  if(propertyContinuations!=    null)    {    finishPropertyAnnotations();    }    else    {    forAnnotations    =    Collections.emptyList();    }    	non-compiled	[CE]  cannot  find  symbol  forAnnotations	5	None	replace
1029	[BUG]  [BUGGY]  if(forAnnotations!=  null)  {  finishPropertyAnnotations();  }  else  {  forAnnotations  =  Collections.EMPTYList();  }  [CE]  cannot  find  symbol  forAnnotations  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(forAnnotations!=  null)  {  finishPropertyAnnotations();  }  else  {  forAnnotations  =  Collections.EMPTYList();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(forAnnotations!=  null)  {  finishPropertyAnnotations();  }  else  {  forAnnotations  =  Collections.EMPTYList();  }	  if(propertyContinuations!=    null)    {    finishPropertyAnnotations();    }    else    {    forAnnotations    =    Collections.emptyList();    }    	non-compiled	[CE]  cannot  find  symbol  forAnnotations	5	None	replace
1030	[BUG]  [BUGGY]  if(forAnnotations  ==  null)  {  finishPropertyAnnotations();  }  else  {  forAnnotations  =  Collections.emptyList();  }  [CE]  cannot  find  symbol  forAnnotations  [FE]                            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(forAnnotations  ==  null)  {  finishPropertyAnnotations();  }  else  {  forAnnotations  =  Collections.emptyList();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(forAnnotations  ==  null)  {  finishPropertyAnnotations();  }  else  {  forAnnotations  =  Collections.emptyList();  }	  if(propertyContinuations!=    null)    {    finishPropertyAnnotations();    }    else    {    forAnnotations    =    Collections.emptyList();    }    	non-compiled	[CE]  cannot  find  symbol  forAnnotations	5	None	replace
1031	[BUG]  [BUGGY]  ForAnnotations  <  null)  {  finishPropertyAnnotations();  }  else  {  forAnnotations  =  Collections.emptyList();  }  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  ForAnnotations  <  null)  {  finishPropertyAnnotations();  }  else  {  forAnnotations  =  Collections.emptyList();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	ForAnnotations  <  null)  {  finishPropertyAnnotations();  }  else  {  forAnnotations  =  Collections.emptyList();  }	  if(propertyContinuations!=    null)    {    finishPropertyAnnotations();    }    else    {    forAnnotations    =    Collections.emptyList();    }    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
1032	[BUG]  [BUGGY]  if(forAnnotations!=  null)  {  finishPropertyAnnotations();  }  [CE]  cannot  find  symbol  forAnnotations  [FE]                                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(forAnnotations!=  null)  {  finishPropertyAnnotations();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(forAnnotations!=  null)  {  finishPropertyAnnotations();  }	  if(propertyContinuations!=    null)    {    finishPropertyAnnotations();    }    else    {    forAnnotations    =    Collections.emptyList();    }    	non-compiled	[CE]  cannot  find  symbol  forAnnotations	5	None	replace
1033	[BUG]  [BUGGY]  propertyContinuations  =  registry.isLastGeneration()?  getReferencedType()  :  Collections.EMPTY_LIST;  [CE]  cannot  find  symbol  Collections  [FE]                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  propertyContinuations  =  registry.isLastGeneration()?  getReferencedType()  :  Collections.EMPTY_LIST;  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	propertyContinuations  =  registry.isLastGeneration()?  getReferencedType()  :  Collections.EMPTY_LIST;	  propertyContinuations    =    registry.isLastGeneration()?    getReferencedType()    :    this;    	non-compiled	[CE]  cannot  find  symbol  Collections	9	None	replace
1034	[BUG]  [BUGGY]  PropertyContinuations  t  =  registry.isLastGeneration()?  getReferencedType()  :  this;  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  PropertyContinuations  t  =  registry.isLastGeneration()?  getReferencedType()  :  this;  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	PropertyContinuations  t  =  registry.isLastGeneration()?  getReferencedType()  :  this;	  propertyContinuations    =    registry.isLastGeneration()?    getReferencedType()    :    this;    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
1035	[BUG]  [BUGGY]  propertyContinuations  =  registry.isLastGeneration()?  getReferencedType()  :  REFERRED_TYPE;  [CE]  cannot  find  symbol  REFERRED_TYPE  [FE]                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  propertyContinuations  =  registry.isLastGeneration()?  getReferencedType()  :  REFERRED_TYPE;  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	propertyContinuations  =  registry.isLastGeneration()?  getReferencedType()  :  REFERRED_TYPE;	  propertyContinuations    =    registry.isLastGeneration()?    getReferencedType()    :    this;    	non-compiled	[CE]  cannot  find  symbol  REFERRED_TYPE	9	None	replace
1036	[BUG]  [BUGGY]  propertyContinuations  =  registry.isLastGeneration()?  getReferencedType()  :  DEFAULT_TYPE;  [CE]  cannot  find  symbol  DEFAULT_TYPE  [FE]                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  propertyContinuations  =  registry.isLastGeneration()?  getReferencedType()  :  DEFAULT_TYPE;  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	propertyContinuations  =  registry.isLastGeneration()?  getReferencedType()  :  DEFAULT_TYPE;	  propertyContinuations    =    registry.isLastGeneration()?    getReferencedType()    :    this;    	non-compiled	[CE]  cannot  find  symbol  DEFAULT_TYPE	9	None	replace
1037	[BUG]  [BUGGY]  propertyContinuations  =  registry.isLastGeneration()?  getReferencedType()  :  Collections.emptyList();  [CE]  cannot  find  symbol  Collections  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  propertyContinuations  =  registry.isLastGeneration()?  getReferencedType()  :  Collections.emptyList();  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	propertyContinuations  =  registry.isLastGeneration()?  getReferencedType()  :  Collections.emptyList();	  propertyContinuations    =    registry.isLastGeneration()?    getReferencedType()    :    this;    	non-compiled	[CE]  cannot  find  symbol  Collections	9	None	replace
1038	[BUG]  [BUGGY]  Predicates.checkNotNull(enclosing,  registry);  [CE]  cannot  find  symbol  Predicates  [FE]                                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Predicates.checkNotNull(enclosing,  registry);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Predicates.checkNotNull(enclosing,  registry);	          Predicates.checkNotNull(enclosing);    	non-compiled	[CE]  cannot  find  symbol  Predicates	24	None	replace
1039	[BUG]  [BUGGY]  Predicates.checkNotNull(enclosing,  validator);  [CE]  cannot  find  symbol  Predicates  [FE]                                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Predicates.checkNotNull(enclosing,  validator);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Predicates.checkNotNull(enclosing,  validator);	          Predicates.checkNotNull(enclosing);    	non-compiled	[CE]  cannot  find  symbol  Predicates	24	None	replace
1040	[BUG]  [BUGGY]  if(validator  ==  null)  {  finishPropertyType();  }  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(validator  ==  null)  {  finishPropertyType();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(validator  ==  null)  {  finishPropertyType();  }	  if(validator!=    null)    {    finishPropertyType();    }    	non-compiled	[CE]  cannot  find  symbol	162	None	replace
1041	[BUG]  [BUGGY]  Parchet.GetPropertyType(validator,  t);  [CE]  cannot  find  symbol  Parchet  [FE]                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Parchet.GetPropertyType(validator,  t);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Parchet.GetPropertyType(validator,  t);	  if(validator!=    null)    {    finishPropertyType();    }    	non-compiled	[CE]  cannot  find  symbol  Parchet	162	None	replace
1042	[BUG]  [BUGGY]  Parchet.getInstance().finishPropertyType();  [CE]  cannot  find  symbol  Parchet  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Parchet.getInstance().finishPropertyType();  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Parchet.getInstance().finishPropertyType();	  if(validator!=    null)    {    finishPropertyType();    }    	non-compiled	[CE]  cannot  find  symbol  Parchet	162	None	replace
1043	[BUG]  [BUGGY]  Parchet.checkState(validator!=  null);  finishPropertyType();  [CE]  cannot  find  symbol  Parchet  [FE]                            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Parchet.checkState(validator!=  null);  finishPropertyType();  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Parchet.checkState(validator!=  null);  finishPropertyType();	  if(validator!=    null)    {    finishPropertyType();    }    	non-compiled	[CE]  cannot  find  symbol  Parchet	162	None	replace
1044	[BUG]  [BUGGY]  Parchet.GetPropertyType(validator);  [CE]  cannot  find  symbol  Parchet  [FE]                              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Parchet.GetPropertyType(validator);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Parchet.GetPropertyType(validator);	  if(validator!=    null)    {    finishPropertyType();    }    	non-compiled	[CE]  cannot  find  symbol  Parchet	162	None	replace
1045	[BUG]  [BUGGY]  if(forAnnotations!=  null)  {  startPropertyContinuations();  }  else  {  forAnnotations  =  Collections.EMPTYList();  }  [CE]  cannot  find  symbol  forAnnotations  [FE]                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(forAnnotations!=  null)  {  startPropertyContinuations();  }  else  {  forAnnotations  =  Collections.EMPTYList();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(forAnnotations!=  null)  {  startPropertyContinuations();  }  else  {  forAnnotations  =  Collections.EMPTYList();  }	  if(propertyContinuations!=    null)    {    startPropertyContinuations();    }    else    {    forAnnotations    =    Collections.emptyList();    }    	non-compiled	[CE]  cannot  find  symbol  forAnnotations	2	None	replace
1046	[BUG]  [BUGGY]  if(forAnnotations!=  null)  {  startPropertyContinuations();  }  [CE]  cannot  find  symbol  forAnnotations  [FE]                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(forAnnotations!=  null)  {  startPropertyContinuations();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(forAnnotations!=  null)  {  startPropertyContinuations();  }	  if(propertyContinuations!=    null)    {    startPropertyContinuations();    }    else    {    forAnnotations    =    Collections.emptyList();    }    	non-compiled	[CE]  cannot  find  symbol  forAnnotations	2	None	replace
1047	[BUG]  [BUGGY]  if(forAnnotations!=  null)  {  startPropertyContinuations();  }  else  {  forAnnotations  =  Lists.emptyList();  }  [CE]  cannot  find  symbol  forAnnotations  [FE]                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(forAnnotations!=  null)  {  startPropertyContinuations();  }  else  {  forAnnotations  =  Lists.emptyList();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(forAnnotations!=  null)  {  startPropertyContinuations();  }  else  {  forAnnotations  =  Lists.emptyList();  }	  if(propertyContinuations!=    null)    {    startPropertyContinuations();    }    else    {    forAnnotations    =    Collections.emptyList();    }    	non-compiled	[CE]  cannot  find  symbol  forAnnotations	2	None	replace
1048	[BUG]  [BUGGY]  Register.isFirstGeneration()  :  registry.isLastGeneration();  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Register.isFirstGeneration()  :  registry.isLastGeneration();  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Register.isFirstGeneration()  :  registry.isLastGeneration();	  Register.isLastGeneration()    :    registry.isLastGeneration();    	non-compiled	[CE]  ';'  expected	246	None	replace
1049	[BUG]  [BUGGY]  Register.isImmutableGeneration()  :  registry.isImmutableGeneration();  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Register.isImmutableGeneration()  :  registry.isImmutableGeneration();  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Register.isImmutableGeneration()  :  registry.isImmutableGeneration();	  Register.isLastGeneration()    :    registry.isLastGeneration();    	non-compiled	[CE]  ';'  expected	246	None	replace
1050	[BUG]  [BUGGY]  Register.isLastGeneration()  :  registry.getReferencedType();  [CE]  ';'  expected  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Register.isLastGeneration()  :  registry.getReferencedType();  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Register.isLastGeneration()  :  registry.getReferencedType();	  Register.isLastGeneration()    :    registry.isLastGeneration();    	non-compiled	[CE]  ';'  expected	246	None	replace
1051	[BUG]  [BUGGY]  Register.isLastGeneration()  :  registry.getNativeType(JSTypeNative.UNKNOWN_TYPE);  [CE]  ';'  expected  [FE]                            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Register.isLastGeneration()  :  registry.getNativeType(JSTypeNative.UNKNOWN_TYPE);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Register.isLastGeneration()  :  registry.getNativeType(JSTypeNative.UNKNOWN_TYPE);	  Register.isLastGeneration()    :    registry.isLastGeneration();    	non-compiled	[CE]  ';'  expected	246	None	replace
1052	[BUG]  [BUGGY]  Register.isLastGeneration()  :  registry.getNativeType(JSTypeNative.NO_TYPE);  [CE]  ';'  expected  [FE]                              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Register.isLastGeneration()  :  registry.getNativeType(JSTypeNative.NO_TYPE);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Register.isLastGeneration()  :  registry.getNativeType(JSTypeNative.NO_TYPE);	  Register.isLastGeneration()    :    registry.isLastGeneration();    	non-compiled	[CE]  ';'  expected	246	None	replace
1053	[BUG]  [BUGGY]  Register.isLastGeneration()  :  registry.getImplicitPrototype();  [CE]  ';'  expected  [FE]                                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Register.isLastGeneration()  :  registry.getImplicitPrototype();  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Register.isLastGeneration()  :  registry.getImplicitPrototype();	  Register.isLastGeneration()    :    registry.isLastGeneration();    	non-compiled	[CE]  ';'  expected	246	None	replace
1054	[BUG]  [BUGGY]  Predicates.checkNotNull(registry,  resolved);  [CE]  cannot  find  symbol  Predicates  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Predicates.checkNotNull(registry,  resolved);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Predicates.checkNotNull(registry,  resolved);	  Predicates.checkNotNull(registry);    	non-compiled	[CE]  cannot  find  symbol  Predicates	125	None	replace
1055	[BUG]  [BUGGY]  Predicates.checkArgument(registry.isLastGeneration());  [CE]  cannot  find  symbol  Predicates  [FE]                            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Predicates.checkArgument(registry.isLastGeneration());  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Predicates.checkArgument(registry.isLastGeneration());	  Predicates.checkNotNull(registry);    	non-compiled	[CE]  cannot  find  symbol  Predicates	125	None	replace
1056	[BUG]  [BUGGY]  Predicates.checkNotNull(registry,  validator);  [CE]  cannot  find  symbol  Predicates  [FE]                              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Predicates.checkNotNull(registry,  validator);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Predicates.checkNotNull(registry,  validator);	  Predicates.checkNotNull(registry);    	non-compiled	[CE]  cannot  find  symbol  Predicates	125	None	replace
1057	[BUG]  [BUGGY]  if(validator!=  null  &&  validator.getPropertyType()  ==  propertyType)  {  finishPropertyContinuations();  }  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(validator!=  null  &&  validator.getPropertyType()  ==  propertyType)  {  finishPropertyContinuations();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(validator!=  null  &&  validator.getPropertyType()  ==  propertyType)  {  finishPropertyContinuations();  }	  if(validator!=    null    &&    validator.getPropertyType()!=    propertyType)    {    finishPropertyContinuations();    }    	non-compiled	[CE]  cannot  find  symbol	209	None	replace
1058	[BUG]  [BUGGY]  if(validator  ==  null  &&  validator.getPropertyType()!=  propertyType)  {  finishPropertyContinuations();  }  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(validator  ==  null  &&  validator.getPropertyType()!=  propertyType)  {  finishPropertyContinuations();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(validator  ==  null  &&  validator.getPropertyType()!=  propertyType)  {  finishPropertyContinuations();  }	  if(validator!=    null    &&    validator.getPropertyType()!=    propertyType)    {    finishPropertyContinuations();    }    	non-compiled	[CE]  cannot  find  symbol	209	None	replace
1059	[BUG]  [BUGGY]  if(validator!=  null  &&  propertyType.getPropertyType()!=  validator)  {  finishPropertyContinuations();  }  [CE]  cannot  find  symbol  propertyType  [FE]                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(validator!=  null  &&  propertyType.getPropertyType()!=  validator)  {  finishPropertyContinuations();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(validator!=  null  &&  propertyType.getPropertyType()!=  validator)  {  finishPropertyContinuations();  }	  if(validator!=    null    &&    validator.getPropertyType()!=    propertyType)    {    finishPropertyContinuations();    }    	non-compiled	[CE]  cannot  find  symbol  propertyType	209	None	replace
1060	[BUG]  [BUGGY]  Status.checkState(validator!=  null  &&  validator.getPropertyType()!=  propertyType)  {  finishPropertyContinuations();  }  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Status.checkState(validator!=  null  &&  validator.getPropertyType()!=  propertyType)  {  finishPropertyContinuations();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Status.checkState(validator!=  null  &&  validator.getPropertyType()!=  propertyType)  {  finishPropertyContinuations();  }	  if(validator!=    null    &&    validator.getPropertyType()!=    propertyType)    {    finishPropertyContinuations();    }    	non-compiled	[CE]  ';'  expected	209	None	replace
1061	[BUG]  [BUGGY]  if(validator!=  null  &&  validator.getPropertyType()!=  type)  {  finishPropertyContinuations();  }  [CE]  cannot  find  symbol  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(validator!=  null  &&  validator.getPropertyType()!=  type)  {  finishPropertyContinuations();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(validator!=  null  &&  validator.getPropertyType()!=  type)  {  finishPropertyContinuations();  }	  if(validator!=    null    &&    validator.getPropertyType()!=    propertyType)    {    finishPropertyContinuations();    }    	non-compiled	[CE]  cannot  find  symbol	209	None	replace
1062	[BUG]  [BUGGY]  if(validator!=  null  &&  validatePropertyType.getPropertyType()!=  propertyType)  {  finishPropertyContinuations();  }  [CE]  cannot  find  symbol  validatePropertyType  [FE]                            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(validator!=  null  &&  validatePropertyType.getPropertyType()!=  propertyType)  {  finishPropertyContinuations();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(validator!=  null  &&  validatePropertyType.getPropertyType()!=  propertyType)  {  finishPropertyContinuations();  }	  if(validator!=    null    &&    validator.getPropertyType()!=    propertyType)    {    finishPropertyContinuations();    }    	non-compiled	[CE]  cannot  find  symbol  validatePropertyType	209	None	replace
1063	[BUG]  [BUGGY]  Status.checkState(registry.isLastGeneration()  ||  registry.isLastGeneration());  [CE]  cannot  find  symbol  Status  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Status.checkState(registry.isLastGeneration()  ||  registry.isLastGeneration());  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Status.checkState(registry.isLastGeneration()  ||  registry.isLastGeneration());	  Status.checkState(registry.isLastGeneration());    	non-compiled	[CE]  cannot  find  symbol  Status	13	None	replace
1064	[BUG]  [BUGGY]  Status.checkState(registry.isLastGeneration()  &&  registry.isLastGeneration());  [CE]  cannot  find  symbol  Status  [FE]                            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Status.checkState(registry.isLastGeneration()  &&  registry.isLastGeneration());  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Status.checkState(registry.isLastGeneration()  &&  registry.isLastGeneration());	  Status.checkState(registry.isLastGeneration());    	non-compiled	[CE]  cannot  find  symbol  Status	13	None	replace
1065	[BUG]  [BUGGY]  Status.checkState(registry.isLastGeneration()  &&  resolved);  [CE]  cannot  find  symbol  Status  [FE]                              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Status.checkState(registry.isLastGeneration()  &&  resolved);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Status.checkState(registry.isLastGeneration()  &&  resolved);	  Status.checkState(registry.isLastGeneration());    	non-compiled	[CE]  cannot  find  symbol  Status	13	None	replace
1066	[BUG]  [BUGGY]  Status.checkState(registry.isLastGeneration()  ||  registry.isFirstGeneration());  [CE]  cannot  find  symbol  [FE]                                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Status.checkState(registry.isLastGeneration()  ||  registry.isFirstGeneration());  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Status.checkState(registry.isLastGeneration()  ||  registry.isFirstGeneration());	  Status.checkState(registry.isLastGeneration());    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
1067	[BUG]  [BUGGY]  validator!=  null  &&  registry.isLastGeneration()?  getReferencedType()  :  null;  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  validator!=  null  &&  registry.isLastGeneration()?  getReferencedType()  :  null;  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	validator!=  null  &&  registry.isLastGeneration()?  getReferencedType()  :  null;	  validator!=    null    &&    registry.isLastGeneration()?    getReferencedType()    :    this;    	non-compiled	[CE]  not  a  statement	138	None	replace
1068	[BUG]  [BUGGY]  Validator  <?>  validator!=  null  &&  registry.isLastGeneration()?  getReferencedType()  :  this;  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Validator  <?>  validator!=  null  &&  registry.isLastGeneration()?  getReferencedType()  :  this;  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Validator  <?>  validator!=  null  &&  registry.isLastGeneration()?  getReferencedType()  :  this;	  validator!=    null    &&    registry.isLastGeneration()?    getReferencedType()    :    this;    	non-compiled	[CE]  ';'  expected	138	None	replace
1069	[BUG]  [BUGGY]  validator!=  null  &&  registry.isFirstGeneration()?  getReferencedType()  :  this;  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  validator!=  null  &&  registry.isFirstGeneration()?  getReferencedType()  :  this;  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	validator!=  null  &&  registry.isFirstGeneration()?  getReferencedType()  :  this;	  validator!=    null    &&    registry.isLastGeneration()?    getReferencedType()    :    this;    	non-compiled	[CE]  not  a  statement	138	None	replace
1070	[BUG]  [BUGGY]  Validator.notNull(registry.isLastGeneration()?  getReferencedType()  :  null);  [CE]  cannot  find  symbol  Validator  [FE]                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Validator.notNull(registry.isLastGeneration()?  getReferencedType()  :  null);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Validator.notNull(registry.isLastGeneration()?  getReferencedType()  :  null);	  validator!=    null    &&    registry.isLastGeneration()?    getReferencedType()    :    this;    	non-compiled	[CE]  cannot  find  symbol  Validator	138	None	replace
1071	[BUG]  [BUGGY]  t.handlePropertyType(t,  enclosing);  [CE]  cannot  find  symbol  [FE]                                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  t.handlePropertyType(t,  enclosing);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	t.handlePropertyType(t,  enclosing);	  aughtExceptionHandler.handlePropertyType(t,    enclosing);    	non-compiled	[CE]  cannot  find  symbol	199	None	replace
1072	[BUG]  [BUGGY]  masterExceptionHandler.handlePropertyType(t,  enclosing);  [CE]  cannot  find  symbol  masterExceptionHandler  [FE]                                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  masterExceptionHandler.handlePropertyType(t,  enclosing);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	masterExceptionHandler.handlePropertyType(t,  enclosing);	  aughtExceptionHandler.handlePropertyType(t,    enclosing);    	non-compiled	[CE]  cannot  find  symbol  masterExceptionHandler	199	None	replace
1073	[BUG]  [BUGGY]  assistExceptionHandler.handlePropertyType(t,  enclosing);  [CE]  cannot  find  symbol  assistExceptionHandler  [FE]                                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  assistExceptionHandler.handlePropertyType(t,  enclosing);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	assistExceptionHandler.handlePropertyType(t,  enclosing);	  aughtExceptionHandler.handlePropertyType(t,    enclosing);    	non-compiled	[CE]  cannot  find  symbol  assistExceptionHandler	199	None	replace
1074	[BUG]  [BUGGY]  InspectorHandler.handlePropertyType(t,  enclosing);  [CE]  cannot  find  symbol  InspectorHandler  [FE]                                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  InspectorHandler.handlePropertyType(t,  enclosing);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	InspectorHandler.handlePropertyType(t,  enclosing);	  aughtExceptionHandler.handlePropertyType(t,    enclosing);    	non-compiled	[CE]  cannot  find  symbol  InspectorHandler	199	None	replace
1075	[BUG]  [BUGGY]  owner.handlePropertyType(t,  enclosing);  [CE]  cannot  find  symbol  owner  [FE]                                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  owner.handlePropertyType(t,  enclosing);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	owner.handlePropertyType(t,  enclosing);	  aughtExceptionHandler.handlePropertyType(t,    enclosing);    	non-compiled	[CE]  cannot  find  symbol  owner	199	None	replace
1076	[BUG]  [BUGGY]  enclosing.handlePropertyType(t,  aughtExceptionHandler);  [CE]  cannot  find  symbol  aughtExceptionHandler  [FE]                                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  enclosing.handlePropertyType(t,  aughtExceptionHandler);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	enclosing.handlePropertyType(t,  aughtExceptionHandler);	  aughtExceptionHandler.handlePropertyType(t,    enclosing);    	non-compiled	[CE]  cannot  find  symbol  aughtExceptionHandler	199	None	replace
1077	[BUG]  [BUGGY]  enclosing.handlePropertyType(t,  enclosing);  [CE]  cannot  find  symbol  [FE]                                            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  enclosing.handlePropertyType(t,  enclosing);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	enclosing.handlePropertyType(t,  enclosing);	  aughtExceptionHandler.handlePropertyType(t,    enclosing);    	non-compiled	[CE]  cannot  find  symbol	199	None	replace
1078	[BUG]  [BUGGY]  Annotations  validator  =  registry.isLastGeneration()?  getReferencedType()  :  Collections.EMPTY_LIST;  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Annotations  validator  =  registry.isLastGeneration()?  getReferencedType()  :  Collections.EMPTY_LIST;  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Annotations  validator  =  registry.isLastGeneration()?  getReferencedType()  :  Collections.EMPTY_LIST;	  Annotations    validator    =    registry.isLastGeneration()?    getReferencedType()    :    this;    	non-compiled	[CE]  cannot  find  symbol	61	None	replace
1079	[BUG]  [BUGGY]  Annotations  validator  =  registry.isLastGeneration()?  getReferencedType()  :  REFERRED_TYPE;  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Annotations  validator  =  registry.isLastGeneration()?  getReferencedType()  :  REFERRED_TYPE;  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Annotations  validator  =  registry.isLastGeneration()?  getReferencedType()  :  REFERRED_TYPE;	  Annotations    validator    =    registry.isLastGeneration()?    getReferencedType()    :    this;    	non-compiled	[CE]  cannot  find  symbol	61	None	replace
1080	[BUG]  [BUGGY]  Annotations  validator  =  registry.isLastGeneration()?  getReferencedType()  :  DEFAULT_TYPE;  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Annotations  validator  =  registry.isLastGeneration()?  getReferencedType()  :  DEFAULT_TYPE;  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Annotations  validator  =  registry.isLastGeneration()?  getReferencedType()  :  DEFAULT_TYPE;	  Annotations    validator    =    registry.isLastGeneration()?    getReferencedType()    :    this;    	non-compiled	[CE]  cannot  find  symbol	61	None	replace
1081	[BUG]  [BUGGY]  Annotations  validator  =  registry.isLastGeneration()?  getReferencedType()  :  REFERD_TYPE;  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Annotations  validator  =  registry.isLastGeneration()?  getReferencedType()  :  REFERD_TYPE;  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Annotations  validator  =  registry.isLastGeneration()?  getReferencedType()  :  REFERD_TYPE;	  Annotations    validator    =    registry.isLastGeneration()?    getReferencedType()    :    this;    	non-compiled	[CE]  cannot  find  symbol	61	None	replace
1082	[BUG]  [BUGGY]  Annotations  validator  =  registry.isFirstGeneration()?  getReferencedType()  :  this;  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Annotations  validator  =  registry.isFirstGeneration()?  getReferencedType()  :  this;  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Annotations  validator  =  registry.isFirstGeneration()?  getReferencedType()  :  this;	  Annotations    validator    =    registry.isLastGeneration()?    getReferencedType()    :    this;    	non-compiled	[CE]  cannot  find  symbol	61	None	replace
1083	[BUG]  [BUGGY]  Parchet.checkState(resolved  ||  registry.isLastGeneration())  {  finishPropertyContinuations();  }  else  {  registry.isLastGeneration()  :  null;  }  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Parchet.checkState(resolved  ||  registry.isLastGeneration())  {  finishPropertyContinuations();  }  else  {  registry.isLastGeneration()  :  null;  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Parchet.checkState(resolved  ||  registry.isLastGeneration())  {  finishPropertyContinuations();  }  else  {  registry.isLastGeneration()  :  null;  }	  Parchet.checkState(resolved    ||    resolved)    {    finishPropertyContinuations();    }    else    {    registry.isLastGeneration()    :    null;    }    	non-compiled	[CE]  ';'  expected	109	None	replace
1084	[BUG]  [BUGGY]  Parchet.checkState(resolved  ||  forAnnotations)  {  finishPropertyContinuations();  }  else  {  registry.isLastGeneration()  :  null;  }  [CE]  ';'  expected  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Parchet.checkState(resolved  ||  forAnnotations)  {  finishPropertyContinuations();  }  else  {  registry.isLastGeneration()  :  null;  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Parchet.checkState(resolved  ||  forAnnotations)  {  finishPropertyContinuations();  }  else  {  registry.isLastGeneration()  :  null;  }	  Parchet.checkState(resolved    ||    resolved)    {    finishPropertyContinuations();    }    else    {    registry.isLastGeneration()    :    null;    }    	non-compiled	[CE]  ';'  expected	109	None	replace
1085	[BUG]  [BUGGY]  Parchet.checkState(resolved  ||  enclosing)  {  finishPropertyContinuations();  }  else  {  registry.isLastGeneration()  :  null;  }  [CE]  ';'  expected  [FE]                            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Parchet.checkState(resolved  ||  enclosing)  {  finishPropertyContinuations();  }  else  {  registry.isLastGeneration()  :  null;  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Parchet.checkState(resolved  ||  enclosing)  {  finishPropertyContinuations();  }  else  {  registry.isLastGeneration()  :  null;  }	  Parchet.checkState(resolved    ||    resolved)    {    finishPropertyContinuations();    }    else    {    registry.isLastGeneration()    :    null;    }    	non-compiled	[CE]  ';'  expected	109	None	replace
1086	[BUG]  [BUGGY]  Parchet.checkState(resolved  ||  enclosing)  {  finishPropertyContinuations();  }  [CE]  ';'  expected  [FE]                              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Parchet.checkState(resolved  ||  enclosing)  {  finishPropertyContinuations();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Parchet.checkState(resolved  ||  enclosing)  {  finishPropertyContinuations();  }	  Parchet.checkState(resolved    ||    resolved)    {    finishPropertyContinuations();    }    else    {    registry.isLastGeneration()    :    null;    }    	non-compiled	[CE]  ';'  expected	109	None	replace
1087	[BUG]  [BUGGY]  Parchet.checkState(resolved  &&  resolved)  {  finishPropertyContinuations();  }  else  {  registry.isLastGeneration()  :  null;  }  [CE]  ';'  expected  [FE]                                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Parchet.checkState(resolved  &&  resolved)  {  finishPropertyContinuations();  }  else  {  registry.isLastGeneration()  :  null;  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Parchet.checkState(resolved  &&  resolved)  {  finishPropertyContinuations();  }  else  {  registry.isLastGeneration()  :  null;  }	  Parchet.checkState(resolved    ||    resolved)    {    finishPropertyContinuations();    }    else    {    registry.isLastGeneration()    :    null;    }    	non-compiled	[CE]  ';'  expected	109	None	replace
1088	[BUG]  [BUGGY]  finishPropertyAnnotations();  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  finishPropertyAnnotations();  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	finishPropertyAnnotations();	  if(resolved)    {    finishPropertyAnnotations();    }    	non-compiled	[CE]  cannot  find  symbol	128	None	replace
1089	[BUG]  [BUGGY]  PropertyAnnotations  resolved  =  finishPropertyAnnotations();  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  PropertyAnnotations  resolved  =  finishPropertyAnnotations();  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	PropertyAnnotations  resolved  =  finishPropertyAnnotations();	  if(resolved)    {    finishPropertyAnnotations();    }    	non-compiled	[CE]  cannot  find  symbol	128	None	replace
1090	[BUG]  [BUGGY]  Annotations  registry  =  getPropertyAnnotations();  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Annotations  registry  =  getPropertyAnnotations();  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Annotations  registry  =  getPropertyAnnotations();	  if(resolved)    {    finishPropertyAnnotations();    }    	non-compiled	[CE]  cannot  find  symbol	128	None	replace
1091	[BUG]  [BUGGY]  Parchet.getInstance().finishPropertyAnnotations();  [CE]  cannot  find  symbol  Parchet  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Parchet.getInstance().finishPropertyAnnotations();  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Parchet.getInstance().finishPropertyAnnotations();	  if(resolved)    {    finishPropertyAnnotations();    }    	non-compiled	[CE]  cannot  find  symbol  Parchet	128	None	replace
1092	[BUG]  [BUGGY]  completePropertyAnnotations();  [CE]  cannot  find  symbol  [FE]                            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  completePropertyAnnotations();  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	completePropertyAnnotations();	  if(resolved)    {    finishPropertyAnnotations();    }    	non-compiled	[CE]  cannot  find  symbol	128	None	replace
1093	[BUG]  [BUGGY]  PropertyContinuation  <  NamedType>  propertyContinuations  =  registry.isLastGeneration()?  getReferencedType()  :  this;  [CE]  type  PropertyContinuation  does  not  take  parameters  [FE]              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  PropertyContinuation  <  NamedType>  propertyContinuations  =  registry.isLastGeneration()?  getReferencedType()  :  this;  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	PropertyContinuation  <  NamedType>  propertyContinuations  =  registry.isLastGeneration()?  getReferencedType()  :  this;	  propertyContinuations    ==    null)    {    finishPropertyContinuations();    }    else    {    registry.isLastGeneration()?    getReferencedType()    :    this;    }    	non-compiled	[CE]  type  PropertyContinuation  does  not  take  parameters	189	None	replace
1094	[BUG]  [BUGGY]  propertyContinuations  ==  null  &&  registry.isLastGeneration()?  getReferencedType()  :  this;  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  propertyContinuations  ==  null  &&  registry.isLastGeneration()?  getReferencedType()  :  this;  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	propertyContinuations  ==  null  &&  registry.isLastGeneration()?  getReferencedType()  :  this;	  propertyContinuations    ==    null)    {    finishPropertyContinuations();    }    else    {    registry.isLastGeneration()?    getReferencedType()    :    this;    }    	non-compiled	[CE]  not  a  statement	189	None	replace
1095	[BUG]  [BUGGY]  propertyContinuations!=  null)  {  finishPropertyContinuations();  }  else  {  registry.isLastGeneration()?  getReferencedType()  :  this;  }  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  propertyContinuations!=  null)  {  finishPropertyContinuations();  }  else  {  registry.isLastGeneration()?  getReferencedType()  :  this;  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	propertyContinuations!=  null)  {  finishPropertyContinuations();  }  else  {  registry.isLastGeneration()?  getReferencedType()  :  this;  }	  propertyContinuations    ==    null)    {    finishPropertyContinuations();    }    else    {    registry.isLastGeneration()?    getReferencedType()    :    this;    }    	non-compiled	[CE]  not  a  statement	189	None	replace
1096	[BUG]  [BUGGY]  propertyContinuations  ==  null)  {  finishPropertyContinuations();  }  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  propertyContinuations  ==  null)  {  finishPropertyContinuations();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	propertyContinuations  ==  null)  {  finishPropertyContinuations();  }	  propertyContinuations    ==    null)    {    finishPropertyContinuations();    }    else    {    registry.isLastGeneration()?    getReferencedType()    :    this;    }    	non-compiled	[CE]  not  a  statement	189	None	replace
1097	[BUG]  [BUGGY]  validator!=  null  &&  registry.isLastGeneration())  {  finishPropertyContinuations();  }  else  {  registry.isLastGeneration()  :  this;  }  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  validator!=  null  &&  registry.isLastGeneration())  {  finishPropertyContinuations();  }  else  {  registry.isLastGeneration()  :  this;  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	validator!=  null  &&  registry.isLastGeneration())  {  finishPropertyContinuations();  }  else  {  registry.isLastGeneration()  :  this;  }	  if(validator!=    null    &&    registry.isLastGeneration())    {    finishPropertyContinuations();    }    else    {    registry.isLastGeneration()    :    this;    }    	non-compiled	[CE]  not  a  statement	239	None	replace
1098	[BUG]  [BUGGY]  if(validator!=  null  &&  registry.isLastGeneration())  {  startPropertyContinuations();  }  else  {  registry.isLastGeneration()  :  this;  }  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(validator!=  null  &&  registry.isLastGeneration())  {  startPropertyContinuations();  }  else  {  registry.isLastGeneration()  :  this;  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(validator!=  null  &&  registry.isLastGeneration())  {  startPropertyContinuations();  }  else  {  registry.isLastGeneration()  :  this;  }	  if(validator!=    null    &&    registry.isLastGeneration())    {    finishPropertyContinuations();    }    else    {    registry.isLastGeneration()    :    this;    }    	non-compiled	[CE]  ';'  expected	239	None	replace
1099	[BUG]  [BUGGY]  if(validator!=  null  &&  registry.isFirstGeneration())  {  finishPropertyContinuations();  }  else  {  registry.isLastGeneration()  :  this;  }  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(validator!=  null  &&  registry.isFirstGeneration())  {  finishPropertyContinuations();  }  else  {  registry.isLastGeneration()  :  this;  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(validator!=  null  &&  registry.isFirstGeneration())  {  finishPropertyContinuations();  }  else  {  registry.isLastGeneration()  :  this;  }	  if(validator!=    null    &&    registry.isLastGeneration())    {    finishPropertyContinuations();    }    else    {    registry.isLastGeneration()    :    this;    }    	non-compiled	[CE]  ';'  expected	239	None	replace
1100	[BUG]  [BUGGY]  validator!=  null  &&  registry.isLastGeneration())  {  handlePropertyContinuations();  }  else  {  registry.isLastGeneration()  :  this;  }  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  validator!=  null  &&  registry.isLastGeneration())  {  handlePropertyContinuations();  }  else  {  registry.isLastGeneration()  :  this;  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	validator!=  null  &&  registry.isLastGeneration())  {  handlePropertyContinuations();  }  else  {  registry.isLastGeneration()  :  this;  }	  if(validator!=    null    &&    registry.isLastGeneration())    {    finishPropertyContinuations();    }    else    {    registry.isLastGeneration()    :    this;    }    	non-compiled	[CE]  not  a  statement	239	None	replace
1101	[BUG]  [BUGGY]  validator!=  null  &&  validater.isLastGeneration();  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  validator!=  null  &&  validater.isLastGeneration();  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	validator!=  null  &&  validater.isLastGeneration();	  if(validator!=    null)    {    finishPropertyGeneration();    }    else    {    registry.isLastGeneration()    :    this;    }    	non-compiled	[CE]  not  a  statement	240	None	replace
1102	[BUG]  [BUGGY]  PropertyContinuations  t  =  registry.isLastGeneration()?  getReferencedType()  :  null;  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  PropertyContinuations  t  =  registry.isLastGeneration()?  getReferencedType()  :  null;  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	PropertyContinuations  t  =  registry.isLastGeneration()?  getReferencedType()  :  null;	  propertyContinuations    =    registry.isLastGeneration()?    getReferencedType()    :    null;    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
1103	[BUG]  [BUGGY]  propertyContinuations  =  registry.isLastGeneration()?  getReferencedType()  :  type;  [CE]  cannot  find  symbol  type  [FE]                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  propertyContinuations  =  registry.isLastGeneration()?  getReferencedType()  :  type;  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	propertyContinuations  =  registry.isLastGeneration()?  getReferencedType()  :  type;	  propertyContinuations    =    registry.isLastGeneration()?    getReferencedType()    :    null;    	non-compiled	[CE]  cannot  find  symbol  type	10	None	replace
1104	[BUG]  [BUGGY]  propertyContinuations  =  registry.isLastGeneration()?  getReferencedType()  :  PropertyContinuation.DEFAULT;  [CE]  cannot  find  symbol  DEFAULT  [FE]                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  propertyContinuations  =  registry.isLastGeneration()?  getReferencedType()  :  PropertyContinuation.DEFAULT;  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	propertyContinuations  =  registry.isLastGeneration()?  getReferencedType()  :  PropertyContinuation.DEFAULT;	  propertyContinuations    =    registry.isLastGeneration()?    getReferencedType()    :    null;    	non-compiled	[CE]  cannot  find  symbol  DEFAULT	10	None	replace
1105	[BUG]  [BUGGY]  PropertyType  propertyContinuations  =  propertyContinuations.get(propertyName);  [CE]  cannot  find  symbol  [FE]                            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  PropertyType  propertyContinuations  =  propertyContinuations.get(propertyName);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	PropertyType  propertyContinuations  =  propertyContinuations.get(propertyName);	  if(propertyContinuations!=    null)    {    finishPropertyType();    }    else    {    propertyContinuations.add(propertyName);    }    	non-compiled	[CE]  cannot  find  symbol	155	None	replace
1106	[BUG]  [BUGGY]  PropertyType  propertyContinuations  =  propertyContinuations.add(propertyName);  [CE]  cannot  find  symbol  [FE]                              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  PropertyType  propertyContinuations  =  propertyContinuations.add(propertyName);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	PropertyType  propertyContinuations  =  propertyContinuations.add(propertyName);	  if(propertyContinuations!=    null)    {    finishPropertyType();    }    else    {    propertyContinuations.add(propertyName);    }    	non-compiled	[CE]  cannot  find  symbol	155	None	replace
1107	[BUG]  [BUGGY]  Parchet.checkState(resolved  ||  forAnnotations)  {  finishPropertyContinuations();  }  else  {  registry.isLastGeneration()  :  getReferencedType();  }  [CE]  ';'  expected  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Parchet.checkState(resolved  ||  forAnnotations)  {  finishPropertyContinuations();  }  else  {  registry.isLastGeneration()  :  getReferencedType();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Parchet.checkState(resolved  ||  forAnnotations)  {  finishPropertyContinuations();  }  else  {  registry.isLastGeneration()  :  getReferencedType();  }	  Parchet.checkState(resolved    ||    resolved)    {    finishPropertyContinuations();    }    else    {    registry.isLastGeneration()    :    getReferencedType();    }    	non-compiled	[CE]  ';'  expected	110	None	replace
1108	[BUG]  [BUGGY]  Parchet.checkState(resolved  ||  enclosing)  {  finishPropertyContinuations();  }  else  {  registry.isLastGeneration()  :  getReferencedType();  }  [CE]  ';'  expected  [FE]                            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Parchet.checkState(resolved  ||  enclosing)  {  finishPropertyContinuations();  }  else  {  registry.isLastGeneration()  :  getReferencedType();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Parchet.checkState(resolved  ||  enclosing)  {  finishPropertyContinuations();  }  else  {  registry.isLastGeneration()  :  getReferencedType();  }	  Parchet.checkState(resolved    ||    resolved)    {    finishPropertyContinuations();    }    else    {    registry.isLastGeneration()    :    getReferencedType();    }    	non-compiled	[CE]  ';'  expected	110	None	replace
1109	[BUG]  [BUGGY]  Parchet.checkState(resolved  ||  registry.isLastGeneration())  {  finishPropertyContinuations();  }  else  {  registry.isLastGeneration()  :  getReferencedType();  }  [CE]  ';'  expected  [FE]                              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Parchet.checkState(resolved  ||  registry.isLastGeneration())  {  finishPropertyContinuations();  }  else  {  registry.isLastGeneration()  :  getReferencedType();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Parchet.checkState(resolved  ||  registry.isLastGeneration())  {  finishPropertyContinuations();  }  else  {  registry.isLastGeneration()  :  getReferencedType();  }	  Parchet.checkState(resolved    ||    resolved)    {    finishPropertyContinuations();    }    else    {    registry.isLastGeneration()    :    getReferencedType();    }    	non-compiled	[CE]  ';'  expected	110	None	replace
1110	[BUG]  [BUGGY]  Parchet.checkState(resolved  ||  registry.isLastGeneration())  {  getReferencedType();  }  [CE]  ';'  expected  [FE]                                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Parchet.checkState(resolved  ||  registry.isLastGeneration())  {  getReferencedType();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Parchet.checkState(resolved  ||  registry.isLastGeneration())  {  getReferencedType();  }	  Parchet.checkState(resolved    ||    resolved)    {    finishPropertyContinuations();    }    else    {    registry.isLastGeneration()    :    getReferencedType();    }    	non-compiled	[CE]  ';'  expected	110	None	replace
1111	[BUG]  [BUGGY]  t.finishPropertyContinuations();  [CE]  cannot  find  symbol  [FE]                            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  t.finishPropertyContinuations();  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	t.finishPropertyContinuations();	  result.finishPropertyContinuations();    	non-compiled	[CE]  cannot  find  symbol	91	None	replace
1112	[BUG]  [BUGGY]  propertyContinuations.finishPropertyContinuations();  [CE]  cannot  find  symbol  [FE]                              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  propertyContinuations.finishPropertyContinuations();  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	propertyContinuations.finishPropertyContinuations();	  result.finishPropertyContinuations();    	non-compiled	[CE]  cannot  find  symbol	91	None	replace
1113	[BUG]  [BUGGY]  PropertyContinuations.finishPropertyContinuations();  [CE]  cannot  find  symbol  PropertyContinuations  [FE]                                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  PropertyContinuations.finishPropertyContinuations();  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	PropertyContinuations.finishPropertyContinuations();	  result.finishPropertyContinuations();    	non-compiled	[CE]  cannot  find  symbol  PropertyContinuations	91	None	replace
1114	[BUG]  [BUGGY]  enclosing.finishPropertyContinuations();  [CE]  cannot  find  symbol  [FE]                                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  enclosing.finishPropertyContinuations();  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	enclosing.finishPropertyContinuations();	  result.finishPropertyContinuations();    	non-compiled	[CE]  cannot  find  symbol	91	None	replace
1115	[BUG]  [BUGGY]  registry.finishPropertyContinuations();  [CE]  cannot  find  symbol  [FE]                                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  registry.finishPropertyContinuations();  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	registry.finishPropertyContinuations();	  result.finishPropertyContinuations();    	non-compiled	[CE]  cannot  find  symbol	91	None	replace
1116	[BUG]  [BUGGY]  owner.finishPropertyContinuations();  [CE]  cannot  find  symbol  owner  [FE]                                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  owner.finishPropertyContinuations();  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	owner.finishPropertyContinuations();	  result.finishPropertyContinuations();    	non-compiled	[CE]  cannot  find  symbol  owner	91	None	replace
1117	[BUG]  [BUGGY]  Annotations  condition  =  getPropertyContinuations(propertyNode);  [CE]  cannot  find  symbol  [FE]                            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Annotations  condition  =  getPropertyContinuations(propertyNode);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Annotations  condition  =  getPropertyContinuations(propertyNode);	  Annotations    condition    =    getPropertyContinuations();    	non-compiled	[CE]  cannot  find  symbol	197	None	replace
1118	[BUG]  [BUGGY]  Annotations  condition  =  getPropertyContinuations(registry);  [CE]  cannot  find  symbol  [FE]                              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Annotations  condition  =  getPropertyContinuations(registry);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Annotations  condition  =  getPropertyContinuations(registry);	  Annotations    condition    =    getPropertyContinuations();    	non-compiled	[CE]  cannot  find  symbol	197	None	replace
1119	[BUG]  [BUGGY]  Annotations  condition  =  getPropertyContinuations(resolved);  [CE]  cannot  find  symbol  [FE]                                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Annotations  condition  =  getPropertyContinuations(resolved);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Annotations  condition  =  getPropertyContinuations(resolved);	  Annotations    condition    =    getPropertyContinuations();    	non-compiled	[CE]  cannot  find  symbol	197	None	replace
1120	[BUG]  [BUGGY]  Annotations  condition  =  getPropertyContinuations(type);  [CE]  cannot  find  symbol  [FE]                                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Annotations  condition  =  getPropertyContinuations(type);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Annotations  condition  =  getPropertyContinuations(type);	  Annotations    condition    =    getPropertyContinuations();    	non-compiled	[CE]  cannot  find  symbol	197	None	replace
1121	[BUG]  [BUGGY]  Annotations  condition  =  getPropertyContinuations(nameNode);  [CE]  cannot  find  symbol  [FE]                                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Annotations  condition  =  getPropertyContinuations(nameNode);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Annotations  condition  =  getPropertyContinuations(nameNode);	  Annotations    condition    =    getPropertyContinuations();    	non-compiled	[CE]  cannot  find  symbol	197	None	replace
1122	[BUG]  [BUGGY]  Annotations  condition  =  getPropertyContinuations(),  propertyNode;  [CE]  cannot  find  symbol  [FE]                                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Annotations  condition  =  getPropertyContinuations(),  propertyNode;  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Annotations  condition  =  getPropertyContinuations(),  propertyNode;	  Annotations    condition    =    getPropertyContinuations();    	non-compiled	[CE]  cannot  find  symbol	197	None	replace
1123	[BUG]  [BUGGY]  Annotations  validator  =  registry.isFirstGeneration()?  getReferencedType()  :  null;  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Annotations  validator  =  registry.isFirstGeneration()?  getReferencedType()  :  null;  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Annotations  validator  =  registry.isFirstGeneration()?  getReferencedType()  :  null;	  Annotations    validator    =    registry.isLastGeneration()?    getReferencedType()    :    null;    	non-compiled	[CE]  cannot  find  symbol	73	None	replace
1124	[BUG]  [BUGGY]  Annotations  validator  =  registry.isLastGeneration()?  getReferencedType()  :  Collections.emptyList();  [CE]  cannot  find  symbol  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Annotations  validator  =  registry.isLastGeneration()?  getReferencedType()  :  Collections.emptyList();  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Annotations  validator  =  registry.isLastGeneration()?  getReferencedType()  :  Collections.emptyList();	  Annotations    validator    =    registry.isLastGeneration()?    getReferencedType()    :    null;    	non-compiled	[CE]  cannot  find  symbol	73	None	replace
1125	[BUG]  [BUGGY]  Annotations  validator  =  registry.isLastGeneration()?  getReferencedType()  :  DEFAULT;  [CE]  cannot  find  symbol  [FE]                            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Annotations  validator  =  registry.isLastGeneration()?  getReferencedType()  :  DEFAULT;  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Annotations  validator  =  registry.isLastGeneration()?  getReferencedType()  :  DEFAULT;	  Annotations    validator    =    registry.isLastGeneration()?    getReferencedType()    :    null;    	non-compiled	[CE]  cannot  find  symbol	73	None	replace
1126	[BUG]  [BUGGY]  Predicate  validator  =  resolveViaProperties(t,  enclosing,  registry);  [CE]  method  resolveViaProperties  in  class  NamedType  cannot  be  applied  to  given  types;  [FE]                              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Predicate  validator  =  resolveViaProperties(t,  enclosing,  registry);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Predicate  validator  =  resolveViaProperties(t,  enclosing,  registry);	  Predicate    validator    =    resolveViaProperties(t,    enclosing);    	non-compiled	[CE]  method  resolveViaProperties  in  class  NamedType  cannot  be  applied  to  given  types;	92	None	replace
1127	[BUG]  [BUGGY]  Predicate  validator  =  resolveViaProperties(t,  enclosing,  propertyNode);  [CE]  cannot  find  symbol  propertyNode  [FE]                                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Predicate  validator  =  resolveViaProperties(t,  enclosing,  propertyNode);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Predicate  validator  =  resolveViaProperties(t,  enclosing,  propertyNode);	  Predicate    validator    =    resolveViaProperties(t,    enclosing);    	non-compiled	[CE]  cannot  find  symbol  propertyNode	92	None	replace
1128	[BUG]  [BUGGY]  Predicate  validator  =  resolveViaProperties(t,  enclosing,  type);  [CE]  cannot  find  symbol  type  [FE]                                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Predicate  validator  =  resolveViaProperties(t,  enclosing,  type);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Predicate  validator  =  resolveViaProperties(t,  enclosing,  type);	  Predicate    validator    =    resolveViaProperties(t,    enclosing);    	non-compiled	[CE]  cannot  find  symbol  type	92	None	replace
1129	[BUG]  [BUGGY]  Predicate  validator  =  resolveViaValues(t,  enclosing);  [CE]  cannot  find  symbol  [FE]                                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Predicate  validator  =  resolveViaValues(t,  enclosing);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Predicate  validator  =  resolveViaValues(t,  enclosing);	  Predicate    validator    =    resolveViaProperties(t,    enclosing);    	non-compiled	[CE]  cannot  find  symbol	92	None	replace
1130	[BUG]  [BUGGY]  Predicate  validator  =  resolveViaStaticScope(t,  enclosing);  [CE]  cannot  find  symbol  [FE]                                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Predicate  validator  =  resolveViaStaticScope(t,  enclosing);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Predicate  validator  =  resolveViaStaticScope(t,  enclosing);	  Predicate    validator    =    resolveViaProperties(t,    enclosing);    	non-compiled	[CE]  cannot  find  symbol	92	None	replace
1131	[BUG]  [BUGGY]  Predicate  validator  =  resolveViaProperties(t,  propertyNode,  enclosing);  [CE]  cannot  find  symbol  propertyNode  [FE]                                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Predicate  validator  =  resolveViaProperties(t,  propertyNode,  enclosing);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Predicate  validator  =  resolveViaProperties(t,  propertyNode,  enclosing);	  Predicate    validator    =    resolveViaProperties(t,    enclosing);    	non-compiled	[CE]  cannot  find  symbol  propertyNode	92	None	replace
1132	[BUG]  [BUGGY]  registry.isLastGeneration()?  getReferencedType()  :  false;  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  registry.isLastGeneration()?  getReferencedType()  :  false;  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	registry.isLastGeneration()?  getReferencedType()  :  false;	  registry.isLastGeneration()?    getReferencedType()    :    this;    	non-compiled	[CE]  not  a  statement	7	None	replace
1133	[BUG]  [BUGGY]  registry.isLastGeneration()?  getReferencedType()  :  REFERRED_TYPE;  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  registry.isLastGeneration()?  getReferencedType()  :  REFERRED_TYPE;  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	registry.isLastGeneration()?  getReferencedType()  :  REFERRED_TYPE;	  registry.isLastGeneration()?    getReferencedType()    :    this;    	non-compiled	[CE]  not  a  statement	7	None	replace
1134	[BUG]  [BUGGY]  propertyContinuations  =  getPropertyContinuations(propertyNode);  [CE]  cannot  find  symbol  propertyNode  [FE]            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  propertyContinuations  =  getPropertyContinuations(propertyNode);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	propertyContinuations  =  getPropertyContinuations(propertyNode);	  propertyContinuations    =    getPropertyContinuations();    	non-compiled	[CE]  cannot  find  symbol  propertyNode	98	None	replace
1135	[BUG]  [BUGGY]  propertyContinuations  =  getPropertyContinuations(propertyName);  [CE]  cannot  find  symbol  propertyName  [FE]              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  propertyContinuations  =  getPropertyContinuations(propertyName);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	propertyContinuations  =  getPropertyContinuations(propertyName);	  propertyContinuations    =    getPropertyContinuations();    	non-compiled	[CE]  cannot  find  symbol  propertyName	98	None	replace
1136	[BUG]  [BUGGY]  PropertyContinuations  propertyContinuations  =  getPropertyContinuations(propertyNode);  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  PropertyContinuations  propertyContinuations  =  getPropertyContinuations(propertyNode);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	PropertyContinuations  propertyContinuations  =  getPropertyContinuations(propertyNode);	  propertyContinuations    =    getPropertyContinuations();    	non-compiled	[CE]  cannot  find  symbol	98	None	replace
1137	[BUG]  [BUGGY]  propertyContinuations  =  getPropertyContinuations(resolved);  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  propertyContinuations  =  getPropertyContinuations(resolved);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	propertyContinuations  =  getPropertyContinuations(resolved);	  propertyContinuations    =    getPropertyContinuations();    	non-compiled	[CE]  cannot  find  symbol	98	None	replace
1138	[BUG]  [BUGGY]  PropertyContinuations  propertyContinuations  =  getPropertyContinuations(propertyName);  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  PropertyContinuations  propertyContinuations  =  getPropertyContinuations(propertyName);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	PropertyContinuations  propertyContinuations  =  getPropertyContinuations(propertyName);	  propertyContinuations    =    getPropertyContinuations();    	non-compiled	[CE]  cannot  find  symbol	98	None	replace
1139	[BUG]  [BUGGY]  Parchet.checkState(validator  ==  null);  [CE]  cannot  find  symbol  Parchet  [FE]            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Parchet.checkState(validator  ==  null);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Parchet.checkState(validator  ==  null);	  Parchet.checkState(validator!=    null);    	non-compiled	[CE]  cannot  find  symbol  Parchet	28	None	replace
1140	[BUG]  [BUGGY]  Parchet.checkState(resolved!=  null);  [CE]  incomparable  types:  boolean  and  <null>  [FE]              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Parchet.checkState(resolved!=  null);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Parchet.checkState(resolved!=  null);	  Parchet.checkState(validator!=    null);    	non-compiled	[CE]  incomparable  types:  boolean  and  <null>	28	None	replace
1141	[BUG]  [BUGGY]  Parchet.checkState(registry  ==  null);  [CE]  cannot  find  symbol  Parchet  [FE]                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Parchet.checkState(registry  ==  null);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Parchet.checkState(registry  ==  null);	  Parchet.checkState(validator!=    null);    	non-compiled	[CE]  cannot  find  symbol  Parchet	28	None	replace
1142	[BUG]  [BUGGY]  Parchet.checkState(resolved  ==  null);  [CE]  incomparable  types:  boolean  and  <null>  [FE]                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Parchet.checkState(resolved  ==  null);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Parchet.checkState(resolved  ==  null);	  Parchet.checkState(validator!=    null);    	non-compiled	[CE]  incomparable  types:  boolean  and  <null>	28	None	replace
1143	[BUG]  [BUGGY]  Parchet.checkState(this.validator!=  null);  [CE]  cannot  find  symbol  Parchet  [FE]                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Parchet.checkState(this.validator!=  null);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Parchet.checkState(this.validator!=  null);	  Parchet.checkState(validator!=    null);    	non-compiled	[CE]  cannot  find  symbol  Parchet	28	None	replace
1144	[BUG]  [BUGGY]  ensurePropertyContinuations()  ||  registry.isLastGeneration());  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  ensurePropertyContinuations()  ||  registry.isLastGeneration());  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	ensurePropertyContinuations()  ||  registry.isLastGeneration());	  ensurePropertyContinuations()    &&    registry.isLastGeneration());    	non-compiled	[CE]  not  a  statement	16	None	replace
1145	[BUG]  [BUGGY]  ensurePropertyContinuations()  &&  registry.isFirstGeneration());  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  ensurePropertyContinuations()  &&  registry.isFirstGeneration());  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	ensurePropertyContinuations()  &&  registry.isFirstGeneration());	  ensurePropertyContinuations()    &&    registry.isLastGeneration());    	non-compiled	[CE]  not  a  statement	16	None	replace
1146	[BUG]  [BUGGY]  ensurePropertyContinuations()  &&  registry.isLastGeneration(),  resolved);  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  ensurePropertyContinuations()  &&  registry.isLastGeneration(),  resolved);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	ensurePropertyContinuations()  &&  registry.isLastGeneration(),  resolved);	  ensurePropertyContinuations()    &&    registry.isLastGeneration());    	non-compiled	[CE]  not  a  statement	16	None	replace
1147	[BUG]  [BUGGY]  if(forAnnotations!=  null)  {  finishPropertyList();  }  else  {  forAnnotations  =  Collections.emptyList();  }  [CE]  cannot  find  symbol  forAnnotations  [FE]                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(forAnnotations!=  null)  {  finishPropertyList();  }  else  {  forAnnotations  =  Collections.emptyList();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(forAnnotations!=  null)  {  finishPropertyList();  }  else  {  forAnnotations  =  Collections.emptyList();  }	  if(propertyContinuations!=    null)    {    finishPropertyList();    }    else    {    forAnnotations    =    Collections.emptyList();    }    	non-compiled	[CE]  cannot  find  symbol  forAnnotations	187	None	replace
1148	[BUG]  [BUGGY]  if(forAnnotations!=  null)  {  finishPropertyList();  }  [CE]  cannot  find  symbol  forAnnotations  [FE]                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(forAnnotations!=  null)  {  finishPropertyList();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(forAnnotations!=  null)  {  finishPropertyList();  }	  if(propertyContinuations!=    null)    {    finishPropertyList();    }    else    {    forAnnotations    =    Collections.emptyList();    }    	non-compiled	[CE]  cannot  find  symbol  forAnnotations	187	None	replace
1149	[BUG]  [BUGGY]  if(forAnnotations!=  null)  {  finishPropertyList();  }  else  {  forAnnotations  =  Collections.EMPTYList();  }  [CE]  cannot  find  symbol  forAnnotations  [FE]                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(forAnnotations!=  null)  {  finishPropertyList();  }  else  {  forAnnotations  =  Collections.EMPTYList();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(forAnnotations!=  null)  {  finishPropertyList();  }  else  {  forAnnotations  =  Collections.EMPTYList();  }	  if(propertyContinuations!=    null)    {    finishPropertyList();    }    else    {    forAnnotations    =    Collections.emptyList();    }    	non-compiled	[CE]  cannot  find  symbol  forAnnotations	187	None	replace
1150	[BUG]  [BUGGY]  if(forAnnotations  ==  null)  {  finishPropertyList();  }  else  {  forAnnotations  =  Collections.emptyList();  }  [CE]  cannot  find  symbol  forAnnotations  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(forAnnotations  ==  null)  {  finishPropertyList();  }  else  {  forAnnotations  =  Collections.emptyList();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(forAnnotations  ==  null)  {  finishPropertyList();  }  else  {  forAnnotations  =  Collections.emptyList();  }	  if(propertyContinuations!=    null)    {    finishPropertyList();    }    else    {    forAnnotations    =    Collections.emptyList();    }    	non-compiled	[CE]  cannot  find  symbol  forAnnotations	187	None	replace
1151	[BUG]  [BUGGY]  if(forAnnotations!=  null)  {  startPropertyList();  }  else  {  forAnnotations  =  Collections.emptyList();  }  [CE]  cannot  find  symbol  forAnnotations  [FE]                            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(forAnnotations!=  null)  {  startPropertyList();  }  else  {  forAnnotations  =  Collections.emptyList();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(forAnnotations!=  null)  {  startPropertyList();  }  else  {  forAnnotations  =  Collections.emptyList();  }	  if(propertyContinuations!=    null)    {    finishPropertyList();    }    else    {    forAnnotations    =    Collections.emptyList();    }    	non-compiled	[CE]  cannot  find  symbol  forAnnotations	187	None	replace
1152	[BUG]  [BUGGY]  if(forAnnotations!=  null)  {  finishPropertyList();  }  else  {  forAnnotations  =  Lists.emptyList();  }  [CE]  cannot  find  symbol  forAnnotations  [FE]                              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(forAnnotations!=  null)  {  finishPropertyList();  }  else  {  forAnnotations  =  Lists.emptyList();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(forAnnotations!=  null)  {  finishPropertyList();  }  else  {  forAnnotations  =  Lists.emptyList();  }	  if(propertyContinuations!=    null)    {    finishPropertyList();    }    else    {    forAnnotations    =    Collections.emptyList();    }    	non-compiled	[CE]  cannot  find  symbol  forAnnotations	187	None	replace
1153	[BUG]  [BUGGY]  if(validator!=  null  &&  resolveViaProperties()  &&  registry.isLastGeneration())  {  finishPropertyContinuations();  }  [CE]  method  resolveViaProperties  in  class  NamedType  cannot  be  applied  to  given  types;  [FE]            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(validator!=  null  &&  resolveViaProperties()  &&  registry.isLastGeneration())  {  finishPropertyContinuations();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(validator!=  null  &&  resolveViaProperties()  &&  registry.isLastGeneration())  {  finishPropertyContinuations();  }	  if(validator!=    null    &&    resolveViaProperties())    {    finishPropertyContinuations();    }    	non-compiled	[CE]  method  resolveViaProperties  in  class  NamedType  cannot  be  applied  to  given  types;	206	None	replace
1154	[BUG]  [BUGGY]  if(validator!=  null  &&  resolveViaProperties()  ||  registry.isLastGeneration())  {  finishPropertyContinuations();  }  [CE]  method  resolveViaProperties  in  class  NamedType  cannot  be  applied  to  given  types;  [FE]              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(validator!=  null  &&  resolveViaProperties()  ||  registry.isLastGeneration())  {  finishPropertyContinuations();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(validator!=  null  &&  resolveViaProperties()  ||  registry.isLastGeneration())  {  finishPropertyContinuations();  }	  if(validator!=    null    &&    resolveViaProperties())    {    finishPropertyContinuations();    }    	non-compiled	[CE]  method  resolveViaProperties  in  class  NamedType  cannot  be  applied  to  given  types;	206	None	replace
1155	[BUG]  [BUGGY]  if(resolved  &&  validator!=  null  &&  resolveViaProperties())  {  finishPropertyContinuations();  }  [CE]  method  resolveViaProperties  in  class  NamedType  cannot  be  applied  to  given  types;  [FE]                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(resolved  &&  validator!=  null  &&  resolveViaProperties())  {  finishPropertyContinuations();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(resolved  &&  validator!=  null  &&  resolveViaProperties())  {  finishPropertyContinuations();  }	  if(validator!=    null    &&    resolveViaProperties())    {    finishPropertyContinuations();    }    	non-compiled	[CE]  method  resolveViaProperties  in  class  NamedType  cannot  be  applied  to  given  types;	206	None	replace
1156	[BUG]  [BUGGY]  if(validator  ==  null  &&  resolveViaProperties())  {  finishPropertyContinuations();  }  [CE]  method  resolveViaProperties  in  class  NamedType  cannot  be  applied  to  given  types;  [FE]                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(validator  ==  null  &&  resolveViaProperties())  {  finishPropertyContinuations();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(validator  ==  null  &&  resolveViaProperties())  {  finishPropertyContinuations();  }	  if(validator!=    null    &&    resolveViaProperties())    {    finishPropertyContinuations();    }    	non-compiled	[CE]  method  resolveViaProperties  in  class  NamedType  cannot  be  applied  to  given  types;	206	None	replace
1157	[BUG]  [BUGGY]  if(validator!=  null  &&  resolveViaProperties()  &&  enclosing)  {  finishPropertyContinuations();  }  [CE]  method  resolveViaProperties  in  class  NamedType  cannot  be  applied  to  given  types;  [FE]                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(validator!=  null  &&  resolveViaProperties()  &&  enclosing)  {  finishPropertyContinuations();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(validator!=  null  &&  resolveViaProperties()  &&  enclosing)  {  finishPropertyContinuations();  }	  if(validator!=    null    &&    resolveViaProperties())    {    finishPropertyContinuations();    }    	non-compiled	[CE]  method  resolveViaProperties  in  class  NamedType  cannot  be  applied  to  given  types;	206	None	replace
1158	[BUG]  [BUGGY]  Status.checkState(validator!=  null  &&  resolveViaProperties());  [CE]  method  resolveViaProperties  in  class  NamedType  cannot  be  applied  to  given  types;  [FE]                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Status.checkState(validator!=  null  &&  resolveViaProperties());  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Status.checkState(validator!=  null  &&  resolveViaProperties());	  if(validator!=    null    &&    resolveViaProperties())    {    finishPropertyContinuations();    }    	non-compiled	[CE]  method  resolveViaProperties  in  class  NamedType  cannot  be  applied  to  given  types;	206	None	replace
1159	[BUG]  [BUGGY]  validator!=  null  &&  validator.hasReferencedType())  {  startPropertyGeneration();  }  else  {  registry.isLastGeneration()?  getReferencedType()  :  this;  }  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  validator!=  null  &&  validator.hasReferencedType())  {  startPropertyGeneration();  }  else  {  registry.isLastGeneration()?  getReferencedType()  :  this;  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	validator!=  null  &&  validator.hasReferencedType())  {  startPropertyGeneration();  }  else  {  registry.isLastGeneration()?  getReferencedType()  :  this;  }	  if(validator!=    null)    {    startPropertyGeneration();    }    else    {    registry.isLastGeneration()?    getReferencedType()    :    this;    }    	non-compiled	[CE]  not  a  statement	233	None	replace
1160	[BUG]  [BUGGY]  PropertyGeneration  validator  =  registry.isLastGeneration()?  getReferencedType()  :  this;  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  PropertyGeneration  validator  =  registry.isLastGeneration()?  getReferencedType()  :  this;  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	PropertyGeneration  validator  =  registry.isLastGeneration()?  getReferencedType()  :  this;	  if(validator!=    null)    {    startPropertyGeneration();    }    else    {    registry.isLastGeneration()?    getReferencedType()    :    this;    }    	non-compiled	[CE]  cannot  find  symbol	233	None	replace
1161	[BUG]  [BUGGY]  PropertyGeneration  validator  =  registry.isLastGeneration()?  getReferencedType()  :  null;  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  PropertyGeneration  validator  =  registry.isLastGeneration()?  getReferencedType()  :  null;  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	PropertyGeneration  validator  =  registry.isLastGeneration()?  getReferencedType()  :  null;	  if(validator!=    null)    {    startPropertyGeneration();    }    else    {    registry.isLastGeneration()?    getReferencedType()    :    this;    }    	non-compiled	[CE]  cannot  find  symbol	233	None	replace
1162	[BUG]  [BUGGY]  PropertyGeneration  validator  =  registry.getPropertyGeneration(resolved);  [CE]  cannot  find  symbol  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  PropertyGeneration  validator  =  registry.getPropertyGeneration(resolved);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	PropertyGeneration  validator  =  registry.getPropertyGeneration(resolved);	  if(validator!=    null)    {    startPropertyGeneration();    }    else    {    registry.isLastGeneration()?    getReferencedType()    :    this;    }    	non-compiled	[CE]  cannot  find  symbol	233	None	replace
1163	[BUG]  [BUGGY]  Parchet.checkState(registry.isFirstGeneration()?  getReferencedType()  :  null);  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Parchet.checkState(registry.isFirstGeneration()?  getReferencedType()  :  null);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Parchet.checkState(registry.isFirstGeneration()?  getReferencedType()  :  null);	  Parchet.checkState(registry.isLastGeneration()?    getReferencedType()    :    null);    	non-compiled	[CE]  cannot  find  symbol	64	None	replace
1164	[BUG]  [BUGGY]  Parchet.checkState(registry.isLastGeneration()?  getReferencedType()  :  null,  enclosing);  [CE]  cannot  find  symbol  Parchet  [FE]                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Parchet.checkState(registry.isLastGeneration()?  getReferencedType()  :  null,  enclosing);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Parchet.checkState(registry.isLastGeneration()?  getReferencedType()  :  null,  enclosing);	  Parchet.checkState(registry.isLastGeneration()?    getReferencedType()    :    null);    	non-compiled	[CE]  cannot  find  symbol  Parchet	64	None	replace
1165	[BUG]  [BUGGY]  if(validator!=  null)  {  finishPropertyGenerations();  }  else  {  registry.isFirstGeneration()  :  this;  }  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(validator!=  null)  {  finishPropertyGenerations();  }  else  {  registry.isFirstGeneration()  :  this;  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(validator!=  null)  {  finishPropertyGenerations();  }  else  {  registry.isFirstGeneration()  :  this;  }	  if(validator!=    null)    {    finishPropertyContinuations();    }    else    {    registry.isFirstGeneration()    :    this;    }    	non-compiled	[CE]  ';'  expected	96	None	replace
1166	[BUG]  [BUGGY]  if(validator!=  null)  {  finishPropertyType();  }  else  {  registry.isFirstGeneration()  :  this;  }  [CE]  ';'  expected  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(validator!=  null)  {  finishPropertyType();  }  else  {  registry.isFirstGeneration()  :  this;  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(validator!=  null)  {  finishPropertyType();  }  else  {  registry.isFirstGeneration()  :  this;  }	  if(validator!=    null)    {    finishPropertyContinuations();    }    else    {    registry.isFirstGeneration()    :    this;    }    	non-compiled	[CE]  ';'  expected	96	None	replace
1167	[BUG]  [BUGGY]  ensurePropertyContinuations(),  registry.isDefaultGeneration());  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  ensurePropertyContinuations(),  registry.isDefaultGeneration());  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	ensurePropertyContinuations(),  registry.isDefaultGeneration());	  ensurePropertyContinuations(),    registry.isLastGeneration());    	non-compiled	[CE]  ';'  expected	18	None	replace
1168	[BUG]  [BUGGY]  ensurePropertyContinuations(),  registry.isLastGeneration()  &&  getReferencedType()!=  null);  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  ensurePropertyContinuations(),  registry.isLastGeneration()  &&  getReferencedType()!=  null);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	ensurePropertyContinuations(),  registry.isLastGeneration()  &&  getReferencedType()!=  null);	  ensurePropertyContinuations(),    registry.isLastGeneration());    	non-compiled	[CE]  ';'  expected	18	None	replace
1169	[BUG]  [BUGGY]  BundlePropertyContinuations  registry  =  getBundlePropertyContinuations(sourceName);  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  BundlePropertyContinuations  registry  =  getBundlePropertyContinuations(sourceName);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	BundlePropertyContinuations  registry  =  getBundlePropertyContinuations(sourceName);	  BundlePropertyContinuations    registry    =    getBundlePropertyContinuations(propertyName);    	non-compiled	[CE]  cannot  find  symbol	104	None	replace
1170	[BUG]  [BUGGY]  validator!=  null  &&  validator.isConstructor()?  getReferencedType()  :  this;  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  validator!=  null  &&  validator.isConstructor()?  getReferencedType()  :  this;  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	validator!=  null  &&  validator.isConstructor()?  getReferencedType()  :  this;	  validator!=    null    &&    validator.isLastGeneration()?    getReferencedType()    :    this;    	non-compiled	[CE]  not  a  statement	139	None	replace
1171	[BUG]  [BUGGY]  validator!=  null  &&  validator.isLastGeneration()?  getReferencedType()  :  REFERENCED_TYPE;  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  validator!=  null  &&  validator.isLastGeneration()?  getReferencedType()  :  REFERENCED_TYPE;  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	validator!=  null  &&  validator.isLastGeneration()?  getReferencedType()  :  REFERENCED_TYPE;	  validator!=    null    &&    validator.isLastGeneration()?    getReferencedType()    :    this;    	non-compiled	[CE]  not  a  statement	139	None	replace
1172	[BUG]  [BUGGY]  PropertyContinuation  propertyContinuations  =  registry.isLastGeneration()?  getReferencedType()  :  REFERENCE_TYPE;  [CE]  cannot  find  symbol  REFERENCE_TYPE  [FE]                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  PropertyContinuation  propertyContinuations  =  registry.isLastGeneration()?  getReferencedType()  :  REFERENCE_TYPE;  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	PropertyContinuation  propertyContinuations  =  registry.isLastGeneration()?  getReferencedType()  :  REFERENCE_TYPE;	  PropertyContinuation    propertyContinuations    =    registry.isLastGeneration()?    getReferencedType()    :    this;    	non-compiled	[CE]  cannot  find  symbol  REFERENCE_TYPE	144	None	replace
1173	[BUG]  [BUGGY]  PropertyContinuation  propertyContinuations  =  registry.isLastGeneration()?  getReferencedType()  :  REFERENCED_TYPE;  [CE]  cannot  find  symbol  REFERENCED_TYPE  [FE]                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  PropertyContinuation  propertyContinuations  =  registry.isLastGeneration()?  getReferencedType()  :  REFERENCED_TYPE;  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	PropertyContinuation  propertyContinuations  =  registry.isLastGeneration()?  getReferencedType()  :  REFERENCED_TYPE;	  PropertyContinuation    propertyContinuations    =    registry.isLastGeneration()?    getReferencedType()    :    this;    	non-compiled	[CE]  cannot  find  symbol  REFERENCED_TYPE	144	None	replace
1174	[BUG]  [BUGGY]  PropertyContinuation  propertyContinuations  =  registry.isLastGeneration()?  getReferencedType()  :  ref;  [CE]  cannot  find  symbol  ref  [FE]                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  PropertyContinuation  propertyContinuations  =  registry.isLastGeneration()?  getReferencedType()  :  ref;  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	PropertyContinuation  propertyContinuations  =  registry.isLastGeneration()?  getReferencedType()  :  ref;	  PropertyContinuation    propertyContinuations    =    registry.isLastGeneration()?    getReferencedType()    :    this;    	non-compiled	[CE]  cannot  find  symbol  ref	144	None	replace
1175	[BUG]  [BUGGY]  Status.checkState(registry.isLastGeneration(),  propertyNode);  [CE]  cannot  find  symbol  propertyNode  [FE]                            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Status.checkState(registry.isLastGeneration(),  propertyNode);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Status.checkState(registry.isLastGeneration(),  propertyNode);	  Status.checkState(registry.isLastGeneration(),    resolveViaProperties);    	non-compiled	[CE]  cannot  find  symbol  propertyNode	75	None	replace
1176	[BUG]  [BUGGY]  Status.checkState(registry.isLastGeneration(),  registry.isLastGeneration());  [CE]  cannot  find  symbol  Status  [FE]                              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Status.checkState(registry.isLastGeneration(),  registry.isLastGeneration());  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Status.checkState(registry.isLastGeneration(),  registry.isLastGeneration());	  Status.checkState(registry.isLastGeneration(),    resolveViaProperties);    	non-compiled	[CE]  cannot  find  symbol  Status	75	None	replace
1177	[BUG]  [BUGGY]  if(validator!=  null  ||  registry.isLastGeneration())  {  finishPropertyInferred();  }  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(validator!=  null  ||  registry.isLastGeneration())  {  finishPropertyInferred();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(validator!=  null  ||  registry.isLastGeneration())  {  finishPropertyInferred();  }	  if(validator!=    null)    {    finishPropertyInferred();    }    	non-compiled	[CE]  cannot  find  symbol	159	None	replace
1178	[BUG]  [BUGGY]  if(validator!=  null  &&  registry.isLastGeneration())  {  finishPropertyInferred();  }  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(validator!=  null  &&  registry.isLastGeneration())  {  finishPropertyInferred();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(validator!=  null  &&  registry.isLastGeneration())  {  finishPropertyInferred();  }	  if(validator!=    null)    {    finishPropertyInferred();    }    	non-compiled	[CE]  cannot  find  symbol	159	None	replace
1179	[BUG]  [BUGGY]  if(validator!=  null  &&  validator.isConstructor())  {  finishPropertyInferred();  }  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(validator!=  null  &&  validator.isConstructor())  {  finishPropertyInferred();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(validator!=  null  &&  validator.isConstructor())  {  finishPropertyInferred();  }	  if(validator!=    null)    {    finishPropertyInferred();    }    	non-compiled	[CE]  cannot  find  symbol	159	None	replace
1180	[BUG]  [BUGGY]  if(validator!=  null  &&  registry.isLastGeneration())  {  startPropertyInferred();  }  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(validator!=  null  &&  registry.isLastGeneration())  {  startPropertyInferred();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(validator!=  null  &&  registry.isLastGeneration())  {  startPropertyInferred();  }	  if(validator!=    null)    {    finishPropertyInferred();    }    	non-compiled	[CE]  cannot  find  symbol	159	None	replace
1181	[BUG]  [BUGGY]  luate(resolved,  propertyNode)  {  finishPropertyContinuations();  }  else  {  registry.islastGeneration()?  getReferencedType()  :  null;  }  [CE]  ';'  expected  [FE]                              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  luate(resolved,  propertyNode)  {  finishPropertyContinuations();  }  else  {  registry.islastGeneration()?  getReferencedType()  :  null;  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	luate(resolved,  propertyNode)  {  finishPropertyContinuations();  }  else  {  registry.islastGeneration()?  getReferencedType()  :  null;  }	  luate(registry,    resolved)    {    finishPropertyContinuations();    }    else    {    registry.islastGeneration()?    getReferencedType()    :    null;    }    	non-compiled	[CE]  ';'  expected	184	None	replace
1182	[BUG]  [BUGGY]  luate(registry,  inferred)  {  finishPropertyContinuations();  }  else  {  registry.islastGeneration()?  getReferencedType()  :  null;  }  [CE]  ';'  expected  [FE]                                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  luate(registry,  inferred)  {  finishPropertyContinuations();  }  else  {  registry.islastGeneration()?  getReferencedType()  :  null;  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	luate(registry,  inferred)  {  finishPropertyContinuations();  }  else  {  registry.islastGeneration()?  getReferencedType()  :  null;  }	  luate(registry,    resolved)    {    finishPropertyContinuations();    }    else    {    registry.islastGeneration()?    getReferencedType()    :    null;    }    	non-compiled	[CE]  ';'  expected	184	None	replace
1183	[BUG]  [BUGGY]  luate(registry,  enclosing)  {  getPropertyContinuations();  }  else  {  registry.islastGeneration()?  getReferencedType()  :  null;  }  [CE]  ';'  expected  [FE]                                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  luate(registry,  enclosing)  {  getPropertyContinuations();  }  else  {  registry.islastGeneration()?  getReferencedType()  :  null;  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	luate(registry,  enclosing)  {  getPropertyContinuations();  }  else  {  registry.islastGeneration()?  getReferencedType()  :  null;  }	  luate(registry,    resolved)    {    finishPropertyContinuations();    }    else    {    registry.islastGeneration()?    getReferencedType()    :    null;    }    	non-compiled	[CE]  ';'  expected	184	None	replace
1184	[BUG]  [BUGGY]  if(propertyContinuations!=  null)  {  finishPropertyGeneration();  }  else  {  forAnnotations  =  Collections.EMPTYList();  }  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(propertyContinuations!=  null)  {  finishPropertyGeneration();  }  else  {  forAnnotations  =  Collections.EMPTYList();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations!=  null)  {  finishPropertyGeneration();  }  else  {  forAnnotations  =  Collections.EMPTYList();  }	  if(propertyContinuations!=    null)    {    finishPropertyGeneration();    }    else    {    forAnnotations    =    Collections.emptyList();    }    	non-compiled	[CE]  cannot  find  symbol	251	None	replace
1185	[BUG]  [BUGGY]  if(propertyContinuations  ==  null)  {  finishPropertyGeneration();  }  else  {  forAnnotations  =  Collections.emptyList();  }  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(propertyContinuations  ==  null)  {  finishPropertyGeneration();  }  else  {  forAnnotations  =  Collections.emptyList();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations  ==  null)  {  finishPropertyGeneration();  }  else  {  forAnnotations  =  Collections.emptyList();  }	  if(propertyContinuations!=    null)    {    finishPropertyGeneration();    }    else    {    forAnnotations    =    Collections.emptyList();    }    	non-compiled	[CE]  cannot  find  symbol	251	None	replace
1186	[BUG]  [BUGGY]  Annotations  inferred  =  resolveViaProperties(t,  enclosing);  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Annotations  inferred  =  resolveViaProperties(t,  enclosing);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Annotations  inferred  =  resolveViaProperties(t,  enclosing);	  Annotations    inferred    =    finishPropertyContinuations();    }    else    {    registry.isLastGeneration()    :    this;    }    	non-compiled	[CE]  cannot  find  symbol	244	None	replace
1187	[BUG]  [BUGGY]  Annotations  inferred  =  finishPropertyAnnotations();  }  else  {  registry.isLastGeneration()  :  this;  }  [CE]  [FE]                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Annotations  inferred  =  finishPropertyAnnotations();  }  else  {  registry.isLastGeneration()  :  this;  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Annotations  inferred  =  finishPropertyAnnotations();  }  else  {  registry.isLastGeneration()  :  this;  }	  Annotations    inferred    =    finishPropertyContinuations();    }    else    {    registry.isLastGeneration()    :    this;    }    	non-compiled	[CE]  	244	None	replace
1188	[BUG]  [BUGGY]  timeout  [FE]              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  propertyContinuations  =  Lists.newArrayList();  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	add	propertyContinuations  =  Lists.newArrayList();	  propertyContinuations    ==    null)    {    finishPropertyContinuations();    }    else    {    registry.isLastGeneration()?    getReferencedType()    :    this;    }    	compilable	timeout	189	1	replace
1189	[BUG]  [BUGGY]  propertyContinuations  =  Lists.newArrayList();  timeout  [FE]              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  propertyContinuations  =  Lists.newArrayList();  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	propertyContinuations  =  Lists.newArrayList();	  propertyContinuations    ==    null)    {    finishPropertyContinuations();    }    else    {    registry.isLastGeneration()?    getReferencedType()    :    this;    }    	compilable	timeout	189	1	replace
1190	[BUG]  [BUGGY]  Status.checkState(this,  propertyContinuations  ==  null);  [CE]  cannot  find  symbol  Status  [FE]                            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Status.checkState(this,  propertyContinuations  ==  null);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Status.checkState(this,  propertyContinuations  ==  null);	  Status.checkState(propertyContinuations    ==    null);    	non-compiled	[CE]  cannot  find  symbol  Status	114	None	replace
1191	[BUG]  [BUGGY]  luate(resolved,  propertyNode)  {  finishPropertyContinuations();  }  else  {  registry.isLastGeneration()?  getReferencedType()  :  this;  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  luate(resolved,  propertyNode)  {  finishPropertyContinuations();  }  else  {  registry.isLastGeneration()?  getReferencedType()  :  this;  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	luate(resolved,  propertyNode)  {  finishPropertyContinuations();  }  else  {  registry.isLastGeneration()?  getReferencedType()  :  this;	  luate(registry,    resolved)    {    finishPropertyContinuations();    }    else    {    registry.isLastGeneration()?    getReferencedType()    :    this;    	non-compiled	[CE]  ';'  expected	165	None	replace
1192	[BUG]  [BUGGY]  luate(registry,  inferred)  {  finishPropertyContinuations();  }  else  {  registry.isLastGeneration()?  getReferencedType()  :  this;  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  luate(registry,  inferred)  {  finishPropertyContinuations();  }  else  {  registry.isLastGeneration()?  getReferencedType()  :  this;  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	luate(registry,  inferred)  {  finishPropertyContinuations();  }  else  {  registry.isLastGeneration()?  getReferencedType()  :  this;	  luate(registry,    resolved)    {    finishPropertyContinuations();    }    else    {    registry.isLastGeneration()?    getReferencedType()    :    this;    	non-compiled	[CE]  ';'  expected	165	None	replace
1193	[BUG]  [BUGGY]  luate(registry,  enclosing)  {  startPropertyGeneration();  }  else  {  registry.isLastGeneration()?  getReferencedType()  :  this;  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  luate(registry,  enclosing)  {  startPropertyGeneration();  }  else  {  registry.isLastGeneration()?  getReferencedType()  :  this;  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	luate(registry,  enclosing)  {  startPropertyGeneration();  }  else  {  registry.isLastGeneration()?  getReferencedType()  :  this;	  luate(registry,    resolved)    {    finishPropertyContinuations();    }    else    {    registry.isLastGeneration()?    getReferencedType()    :    this;    	non-compiled	[CE]  ';'  expected	165	None	replace
1194	[BUG]  [BUGGY]  luate(registry,  enclosing)  {  startPropertyGenerations();  }  else  {  registry.isLastGeneration()?  getReferencedType()  :  this;  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  luate(registry,  enclosing)  {  startPropertyGenerations();  }  else  {  registry.isLastGeneration()?  getReferencedType()  :  this;  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	luate(registry,  enclosing)  {  startPropertyGenerations();  }  else  {  registry.isLastGeneration()?  getReferencedType()  :  this;	  luate(registry,    resolved)    {    finishPropertyContinuations();    }    else    {    registry.isLastGeneration()?    getReferencedType()    :    this;    	non-compiled	[CE]  ';'  expected	165	None	replace
1195	[BUG]  [BUGGY]  if(validator!=  null  &&  registry.isLastGeneration())  {  finishPropertyType();  }  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(validator!=  null  &&  registry.isLastGeneration())  {  finishPropertyType();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(validator!=  null  &&  registry.isLastGeneration())  {  finishPropertyType();  }	  if(validator!=    null)    {    finishPropertyType();    }    	non-compiled	[CE]  cannot  find  symbol	162	None	replace
1196	[BUG]  [BUGGY]  if(validator!=  null  ||  registry.isLastGeneration())  {  finishPropertyType();  }  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(validator!=  null  ||  registry.isLastGeneration())  {  finishPropertyType();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(validator!=  null  ||  registry.isLastGeneration())  {  finishPropertyType();  }	  if(validator!=    null)    {    finishPropertyType();    }    	non-compiled	[CE]  cannot  find  symbol	162	None	replace
1197	[BUG]  [BUGGY]  if(validator!=  null)  {  startPropertyType();  }  [CE]  cannot  find  symbol  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(validator!=  null)  {  startPropertyType();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(validator!=  null)  {  startPropertyType();  }	  if(validator!=    null)    {    finishPropertyType();    }    	non-compiled	[CE]  cannot  find  symbol	162	None	replace
1198	[BUG]  [BUGGY]  if(validator!=  null)  {  finishType();  }  [CE]  cannot  find  symbol  [FE]                            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(validator!=  null)  {  finishType();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(validator!=  null)  {  finishType();  }	  if(validator!=    null)    {    finishPropertyType();    }    	non-compiled	[CE]  cannot  find  symbol	162	None	replace
1199	[BUG]  [BUGGY]  if(validator!=  null  &&  validator.isConstructor())  {  finishPropertyType();  }  [CE]  cannot  find  symbol  [FE]                              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(validator!=  null  &&  validator.isConstructor())  {  finishPropertyType();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(validator!=  null  &&  validator.isConstructor())  {  finishPropertyType();  }	  if(validator!=    null)    {    finishPropertyType();    }    	non-compiled	[CE]  cannot  find  symbol	162	None	replace
1200	[BUG]  [BUGGY]  Predicates.checkState(validator!=  resolved)  {  finishPropertyContinuations();  }  [CE]  ';'  expected  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Predicates.checkState(validator!=  resolved)  {  finishPropertyContinuations();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Predicates.checkState(validator!=  resolved)  {  finishPropertyContinuations();  }	  Predicates.checkState(resolved)    {    finishPropertyContinuations();    }    	non-compiled	[CE]  ';'  expected	90	None	replace
1201	[BUG]  [BUGGY]  Predicates.checkState(validator  ==  resolved)  {  finishPropertyContinuations();  }  [CE]  ';'  expected  [FE]                            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Predicates.checkState(validator  ==  resolved)  {  finishPropertyContinuations();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Predicates.checkState(validator  ==  resolved)  {  finishPropertyContinuations();  }	  Predicates.checkState(resolved)    {    finishPropertyContinuations();    }    	non-compiled	[CE]  ';'  expected	90	None	replace
1202	[BUG]  [BUGGY]  Predicates.checkState(validator!=  null)  {  finishPropertyContinuations();  }  [CE]  ';'  expected  [FE]                              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Predicates.checkState(validator!=  null)  {  finishPropertyContinuations();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Predicates.checkState(validator!=  null)  {  finishPropertyContinuations();  }	  Predicates.checkState(resolved)    {    finishPropertyContinuations();    }    	non-compiled	[CE]  ';'  expected	90	None	replace
1203	[BUG]  [BUGGY]  if(propertyContinuations!=  null)  {  finishPropertyGenotations();  }  else  {  getPropertyContinuations().addAll(propertyContinuations);  }  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(propertyContinuations!=  null)  {  finishPropertyGenotations();  }  else  {  getPropertyContinuations().addAll(propertyContinuations);  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations!=  null)  {  finishPropertyGenotations();  }  else  {  getPropertyContinuations().addAll(propertyContinuations);  }	  if(propertyContinuations!=    null)    {    finishPropertyAnnotations();    }    else    {    getPropertyContinuations().addAll(propertyContinuations);    }    	non-compiled	[CE]  cannot  find  symbol	120	None	replace
1204	[BUG]  [BUGGY]  if(propertyAnnotations!=  null)  {  finishPropertyGenotations();  }  else  {  getPropertyContinuations().addAll(propertyContinuations);  }  [CE]  cannot  find  symbol  propertyAnnotations  [FE]                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(propertyAnnotations!=  null)  {  finishPropertyGenotations();  }  else  {  getPropertyContinuations().addAll(propertyContinuations);  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyAnnotations!=  null)  {  finishPropertyGenotations();  }  else  {  getPropertyContinuations().addAll(propertyContinuations);  }	  if(propertyContinuations!=    null)    {    finishPropertyAnnotations();    }    else    {    getPropertyContinuations().addAll(propertyContinuations);    }    	non-compiled	[CE]  cannot  find  symbol  propertyAnnotations	120	None	replace
1205	[BUG]  [BUGGY]  ParchetActualState.checkState(registry.isLastGeneration()?  registry.isLastGeneration()  :  null);  [CE]  cannot  find  symbol  ParchetActualState  [FE]            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  ParchetActualState.checkState(registry.isLastGeneration()?  registry.isLastGeneration()  :  null);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	ParchetActualState.checkState(registry.isLastGeneration()?  registry.isLastGeneration()  :  null);	  ParchetActualState.checkState(registry.isLastGeneration());    	non-compiled	[CE]  cannot  find  symbol  ParchetActualState	227	None	replace
1206	[BUG]  [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(this,  propertyNode);  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(this,  propertyNode);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	AssertionFailedError  t  =  new  AssertionFailedError(this,  propertyNode);	  if(resolved)    {    finishPropertyContinuations();    }    when(resolved)    {    finishPropertyContinuations();    }    	non-compiled	[CE]  cannot  find  symbol	38	None	replace
1207	[BUG]  [BUGGY]  AssertionFailedError  t  =  super.getReferencedType();  [CE]  cannot  find  symbol  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  AssertionFailedError  t  =  super.getReferencedType();  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	AssertionFailedError  t  =  super.getReferencedType();	  if(resolved)    {    finishPropertyContinuations();    }    when(resolved)    {    finishPropertyContinuations();    }    	non-compiled	[CE]  cannot  find  symbol	38	None	replace
1208	[BUG]  [BUGGY]  if(resolved)  {  finishPropertyGenerations();  }  [CE]  cannot  find  symbol  [FE]                            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(resolved)  {  finishPropertyGenerations();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(resolved)  {  finishPropertyGenerations();  }	  if(resolved)    {    finishPropertyContinuations();    }    when(resolved)    {    finishPropertyContinuations();    }    	non-compiled	[CE]  cannot  find  symbol	38	None	replace
1209	[BUG]  [BUGGY]  if(propertyContinuations!=  null)  {  startPropertyValues();  }  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(propertyContinuations!=  null)  {  startPropertyValues();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations!=  null)  {  startPropertyValues();  }	  if(propertyContinuations!=    null)    {    finishPropertyContinuations();    }    if(propertyContinuations!=    null)    {    startPropertyContinuations();    }    	non-compiled	[CE]  cannot  find  symbol	81	None	replace
1210	[BUG]  [BUGGY]  if(propertyContinuations!=  null)  {  startPropertyGenerations();  }  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(propertyContinuations!=  null)  {  startPropertyGenerations();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations!=  null)  {  startPropertyGenerations();  }	  if(propertyContinuations!=    null)    {    finishPropertyContinuations();    }    if(propertyContinuations!=    null)    {    startPropertyContinuations();    }    	non-compiled	[CE]  cannot  find  symbol	81	None	replace
1211	[BUG]  [BUGGY]  if(propertyContinuations!=  null)  {  startPropertyFields();  }  [CE]  cannot  find  symbol  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(propertyContinuations!=  null)  {  startPropertyFields();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations!=  null)  {  startPropertyFields();  }	  if(propertyContinuations!=    null)    {    finishPropertyContinuations();    }    if(propertyContinuations!=    null)    {    startPropertyContinuations();    }    	non-compiled	[CE]  cannot  find  symbol	81	None	replace
1212	[BUG]  [BUGGY]  if(propertyContinuations!=  null)  {  startPropertyAccuracy();  }  [CE]  cannot  find  symbol  [FE]                            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(propertyContinuations!=  null)  {  startPropertyAccuracy();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations!=  null)  {  startPropertyAccuracy();  }	  if(propertyContinuations!=    null)    {    finishPropertyContinuations();    }    if(propertyContinuations!=    null)    {    startPropertyContinuations();    }    	non-compiled	[CE]  cannot  find  symbol	81	None	replace
1213	[BUG]  [BUGGY]  Predicate  validator  =  getValidator(),  registry.isLastGeneration();  [CE]  ';'  expected  [FE]                                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Predicate  validator  =  getValidator(),  registry.isLastGeneration();  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Predicate  validator  =  getValidator(),  registry.isLastGeneration();	          Predicate    validator    =    getValidator();    	non-compiled	[CE]  ';'  expected	27	None	replace
1214	[BUG]  [BUGGY]  Predicate  validator  =  getValidatorForType(resolved);  [CE]  cannot  find  symbol  [FE]                                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Predicate  validator  =  getValidatorForType(resolved);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Predicate  validator  =  getValidatorForType(resolved);	          Predicate    validator    =    getValidator();    	non-compiled	[CE]  cannot  find  symbol	27	None	replace
1215	[BUG]  [BUGGY]  Predicate  validator  =  getValidator(registry,  enclosing);  [CE]  cannot  find  symbol  [FE]                                            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Predicate  validator  =  getValidator(registry,  enclosing);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Predicate  validator  =  getValidator(registry,  enclosing);	          Predicate    validator    =    getValidator();    	non-compiled	[CE]  cannot  find  symbol	27	None	replace
1216	[BUG]  [BUGGY]  if(propertyInferred!=  null)  {  finishPropertyInferred();  }  else  {  getPropertyContinuations().addAll(propertyInferred);  }  [CE]  cannot  find  symbol  propertyInferred  [FE]            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(propertyInferred!=  null)  {  finishPropertyInferred();  }  else  {  getPropertyContinuations().addAll(propertyInferred);  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyInferred!=  null)  {  finishPropertyInferred();  }  else  {  getPropertyContinuations().addAll(propertyInferred);  }	  if(propertyContinuations!=    null)    {    finishPropertyInferred();    }    else    {    getPropertyContinuations().addAll(propertyContinuations);    }    	non-compiled	[CE]  cannot  find  symbol  propertyInferred	118	None	replace
1217	[BUG]  [BUGGY]  if(propertyContinuations!=  null)  {  startPropertyInferred();  }  else  {  getPropertyContinuations().addAll(propertyContinuations);  }  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(propertyContinuations!=  null)  {  startPropertyInferred();  }  else  {  getPropertyContinuations().addAll(propertyContinuations);  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations!=  null)  {  startPropertyInferred();  }  else  {  getPropertyContinuations().addAll(propertyContinuations);  }	  if(propertyContinuations!=    null)    {    finishPropertyInferred();    }    else    {    getPropertyContinuations().addAll(propertyContinuations);    }    	non-compiled	[CE]  cannot  find  symbol	118	None	replace
1218	[BUG]  [BUGGY]  if(propertyContinuations  ==  null)  {  finishPropertyInferred();  }  else  {  getPropertyContinuations().addAll(propertyContinuations);  }  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(propertyContinuations  ==  null)  {  finishPropertyInferred();  }  else  {  getPropertyContinuations().addAll(propertyContinuations);  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations  ==  null)  {  finishPropertyInferred();  }  else  {  getPropertyContinuations().addAll(propertyContinuations);  }	  if(propertyContinuations!=    null)    {    finishPropertyInferred();    }    else    {    getPropertyContinuations().addAll(propertyContinuations);    }    	non-compiled	[CE]  cannot  find  symbol	118	None	replace
1219	[BUG]  [BUGGY]  Preconditions.checkState(propertyContinuations!=  null)  {  finishPropertyInferred();  }  else  {  getPropertyContinuations().addAll(propertyContinuations);  }  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Preconditions.checkState(propertyContinuations!=  null)  {  finishPropertyInferred();  }  else  {  getPropertyContinuations().addAll(propertyContinuations);  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Preconditions.checkState(propertyContinuations!=  null)  {  finishPropertyInferred();  }  else  {  getPropertyContinuations().addAll(propertyContinuations);  }	  if(propertyContinuations!=    null)    {    finishPropertyInferred();    }    else    {    getPropertyContinuations().addAll(propertyContinuations);    }    	non-compiled	[CE]  ';'  expected	118	None	replace
1220	[BUG]  [BUGGY]  if(propertyInferred!=  null)  {  finishPropertyInferred();  }  else  {  getPropertyContinuations().addAll(propertyEnclosing);  }  [CE]  cannot  find  symbol  propertyInferred  [FE]                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(propertyInferred!=  null)  {  finishPropertyInferred();  }  else  {  getPropertyContinuations().addAll(propertyEnclosing);  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyInferred!=  null)  {  finishPropertyInferred();  }  else  {  getPropertyContinuations().addAll(propertyEnclosing);  }	  if(propertyContinuations!=    null)    {    finishPropertyInferred();    }    else    {    getPropertyContinuations().addAll(propertyContinuations);    }    	non-compiled	[CE]  cannot  find  symbol  propertyInferred	118	None	replace
1221	[BUG]  [BUGGY]  if(propertyContinuations!=  null)  {  startPropertyActual();  }  else  {  getPropertyContinuations().addAll(propertyContinuations);  }  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(propertyContinuations!=  null)  {  startPropertyActual();  }  else  {  getPropertyContinuations().addAll(propertyContinuations);  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations!=  null)  {  startPropertyActual();  }  else  {  getPropertyContinuations().addAll(propertyContinuations);  }	  if(propertyContinuations!=    null)    {    finishPropertyActual();    }    else    {    getPropertyContinuations().addAll(propertyContinuations);    }    	non-compiled	[CE]  cannot  find  symbol	213	None	replace
1222	[BUG]  [BUGGY]  Preconditions.checkState(propertyContinuations!=  null)  {  finishPropertyActual();  }  else  {  getPropertyContinuations().addAll(propertyContinuations);  }  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Preconditions.checkState(propertyContinuations!=  null)  {  finishPropertyActual();  }  else  {  getPropertyContinuations().addAll(propertyContinuations);  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Preconditions.checkState(propertyContinuations!=  null)  {  finishPropertyActual();  }  else  {  getPropertyContinuations().addAll(propertyContinuations);  }	  if(propertyContinuations!=    null)    {    finishPropertyActual();    }    else    {    getPropertyContinuations().addAll(propertyContinuations);    }    	non-compiled	[CE]  ';'  expected	213	None	replace
1223	[BUG]  [BUGGY]  if(propertyContinuations!=  null)  {  finishInferredPropertyActual();  }  else  {  getPropertyContinuations().addAll(propertyContinuations);  }  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(propertyContinuations!=  null)  {  finishInferredPropertyActual();  }  else  {  getPropertyContinuations().addAll(propertyContinuations);  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations!=  null)  {  finishInferredPropertyActual();  }  else  {  getPropertyContinuations().addAll(propertyContinuations);  }	  if(propertyContinuations!=    null)    {    finishPropertyActual();    }    else    {    getPropertyContinuations().addAll(propertyContinuations);    }    	non-compiled	[CE]  cannot  find  symbol	213	None	replace
1224	[BUG]  [BUGGY]  if(propertyContinuations!=  null)  {  finishActual();  }  else  {  getPropertyContinuations().addAll(propertyContinuations);  }  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(propertyContinuations!=  null)  {  finishActual();  }  else  {  getPropertyContinuations().addAll(propertyContinuations);  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations!=  null)  {  finishActual();  }  else  {  getPropertyContinuations().addAll(propertyContinuations);  }	  if(propertyContinuations!=    null)    {    finishPropertyActual();    }    else    {    getPropertyContinuations().addAll(propertyContinuations);    }    	non-compiled	[CE]  cannot  find  symbol	213	None	replace
1225	[BUG]  [BUGGY]  if(propertyContinuations!=  null)  {  finishPropertyActual();  }  else  {  propertyContinuations().addAll(propertyContinuations);  }  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(propertyContinuations!=  null)  {  finishPropertyActual();  }  else  {  propertyContinuations().addAll(propertyContinuations);  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations!=  null)  {  finishPropertyActual();  }  else  {  propertyContinuations().addAll(propertyContinuations);  }	  if(propertyContinuations!=    null)    {    finishPropertyActual();    }    else    {    getPropertyContinuations().addAll(propertyContinuations);    }    	non-compiled	[CE]  cannot  find  symbol	213	None	replace
1226	[BUG]  [BUGGY]  if(propertyContinuations!=  null)  {  finishPropertyAnnotations();  }  else  {  forAnnotations  =  Collections.EMPTYList();  }  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(propertyContinuations!=  null)  {  finishPropertyAnnotations();  }  else  {  forAnnotations  =  Collections.EMPTYList();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations!=  null)  {  finishPropertyAnnotations();  }  else  {  forAnnotations  =  Collections.EMPTYList();  }	  if(propertyContinuations!=    null)    {    finishPropertyAnnotations();    }    else    {    forAnnotations    =    Collections.emptyList();    }    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
1227	[BUG]  [BUGGY]  if(propertyContinuations  ==  null)  {  finishPropertyAnnotations();  }  else  {  forAnnotations  =  Collections.EMPTYList();  }  [CE]  cannot  find  symbol  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(propertyContinuations  ==  null)  {  finishPropertyAnnotations();  }  else  {  forAnnotations  =  Collections.EMPTYList();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations  ==  null)  {  finishPropertyAnnotations();  }  else  {  forAnnotations  =  Collections.EMPTYList();  }	  if(propertyContinuations!=    null)    {    finishPropertyAnnotations();    }    else    {    forAnnotations    =    Collections.emptyList();    }    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
1228	[BUG]  [BUGGY]  if(forAnnotations!=  null)  {  finishPropropertyContinuations();  }  if(validator!=  null)  {  finishPropropertyContinuations();  }  [CE]  cannot  find  symbol  forAnnotations  [FE]            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(forAnnotations!=  null)  {  finishPropropertyContinuations();  }  if(validator!=  null)  {  finishPropropertyContinuations();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(forAnnotations!=  null)  {  finishPropropertyContinuations();  }  if(validator!=  null)  {  finishPropropertyContinuations();  }	  if(validator!=    null)    {    finishPropertyContinuations();    }    if(validator!=    null)    {    finishPropropertyContinuations();    }    	non-compiled	[CE]  cannot  find  symbol  forAnnotations	255	None	replace
1229	[BUG]  [BUGGY]  if(validator!=  null)  {  finishPropropertyGenerations();  }  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(validator!=  null)  {  finishPropropertyGenerations();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(validator!=  null)  {  finishPropropertyGenerations();  }	  if(validator!=    null)    {    finishPropertyContinuations();    }    if(validator!=    null)    {    finishPropropertyContinuations();    }    	non-compiled	[CE]  cannot  find  symbol	255	None	replace
1230	[BUG]  [BUGGY]  if(enclosing!=  null)  {  finishPropropertyContinuations();  }  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(enclosing!=  null)  {  finishPropropertyContinuations();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(enclosing!=  null)  {  finishPropropertyContinuations();  }	  if(validator!=    null)    {    finishPropertyContinuations();    }    if(validator!=    null)    {    finishPropropertyContinuations();    }    	non-compiled	[CE]  cannot  find  symbol	255	None	replace
1231	[BUG]  [BUGGY]  if(validator!=  null)  {  finishPropropertyProperties();  }  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(validator!=  null)  {  finishPropropertyProperties();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(validator!=  null)  {  finishPropropertyProperties();  }	  if(validator!=    null)    {    finishPropertyContinuations();    }    if(validator!=    null)    {    finishPropropertyContinuations();    }    	non-compiled	[CE]  cannot  find  symbol	255	None	replace
1232	[BUG]  [BUGGY]  luate(registry,  inferred)  {  finishPropertyContinuations();  }  else  {  registry.isFirstGeneration()?  getReferencedType()  :  this;  }  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  luate(registry,  inferred)  {  finishPropertyContinuations();  }  else  {  registry.isFirstGeneration()?  getReferencedType()  :  this;  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	luate(registry,  inferred)  {  finishPropertyContinuations();  }  else  {  registry.isFirstGeneration()?  getReferencedType()  :  this;  }	  luate(registry,    resolved)    {    finishPropertyContinuations();    }    else    {    registry.isFirstGeneration()?    getReferencedType()    :    this;    }    	non-compiled	[CE]  ';'  expected	166	None	replace
1233	[BUG]  [BUGGY]  luate(resolved,  propertyNode)  {  finishPropertyContinuations();  }  else  {  registry.isFirstGeneration()?  getReferencedType()  :  this;  }  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  luate(resolved,  propertyNode)  {  finishPropertyContinuations();  }  else  {  registry.isFirstGeneration()?  getReferencedType()  :  this;  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	luate(resolved,  propertyNode)  {  finishPropertyContinuations();  }  else  {  registry.isFirstGeneration()?  getReferencedType()  :  this;  }	  luate(registry,    resolved)    {    finishPropertyContinuations();    }    else    {    registry.isFirstGeneration()?    getReferencedType()    :    this;    }    	non-compiled	[CE]  ';'  expected	166	None	replace
1234	[BUG]  [BUGGY]  PropertyValues  propertyContinuations  =  propertyContinuations.get(propertyName);  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  PropertyValues  propertyContinuations  =  propertyContinuations.get(propertyName);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	PropertyValues  propertyContinuations  =  propertyContinuations.get(propertyName);	  if(propertyContinuations!=    null)    {    finishPropertyValues();    }    else    {    propertyContinuations.add(propertyName);    }    	non-compiled	[CE]  cannot  find  symbol	69	None	replace
1235	[BUG]  [BUGGY]  Predicates.checkNotNull(register);  [CE]  cannot  find  symbol  register  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Predicates.checkNotNull(register);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Predicates.checkNotNull(register);	  Predicates.checkNotNull(registry);    	non-compiled	[CE]  cannot  find  symbol  register	125	None	replace
1236	[BUG]  [BUGGY]  if(propertyNode!=  null)  {  finishPropertyNode();  }  [CE]  cannot  find  symbol  propertyNode  [FE]                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(propertyNode!=  null)  {  finishPropertyNode();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyNode!=  null)  {  finishPropertyNode();  }	  if(propertyContinuations!=    null)    {    finishPropertyContinuations();    }    If(propertyContinuations!=    null)    {    finishPropertyContinuations();    }    	non-compiled	[CE]  cannot  find  symbol  propertyNode	82	None	replace
1237	[BUG]  [BUGGY]  if(propertyNode!=  null)  {  finishPropertyAnnotations();  }  [CE]  cannot  find  symbol  propertyNode  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(propertyNode!=  null)  {  finishPropertyAnnotations();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyNode!=  null)  {  finishPropertyAnnotations();  }	  if(propertyContinuations!=    null)    {    finishPropertyContinuations();    }    If(propertyContinuations!=    null)    {    finishPropertyContinuations();    }    	non-compiled	[CE]  cannot  find  symbol  propertyNode	82	None	replace
1238	[BUG]  [BUGGY]  PropertyContinuations  <  PropertyContinuation>  startPropertyContinuations(propertyNode);  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  PropertyContinuations  <  PropertyContinuation>  startPropertyContinuations(propertyNode);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	PropertyContinuations  <  PropertyContinuation>  startPropertyContinuations(propertyNode);	  PropertyContinuations    <    PropertyContinuation>    startPropertyContinuations();    	non-compiled	[CE]  ';'  expected	117	None	replace
1239	[BUG]  [BUGGY]  PropertyContinuations  <  PropertyContinuation>  propertyContinuations();  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  PropertyContinuations  <  PropertyContinuation>  propertyContinuations();  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	PropertyContinuations  <  PropertyContinuation>  propertyContinuations();	  PropertyContinuations    <    PropertyContinuation>    startPropertyContinuations();    	non-compiled	[CE]  ';'  expected	117	None	replace
1240	[BUG]  [BUGGY]  if(propertyAnnotations!=  null)  {  startPropertyAnnotations();  }  else  {  forAnnotations  =  Collections.emptyList();  }  [CE]  cannot  find  symbol  propertyAnnotations  [FE]                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(propertyAnnotations!=  null)  {  startPropertyAnnotations();  }  else  {  forAnnotations  =  Collections.emptyList();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyAnnotations!=  null)  {  startPropertyAnnotations();  }  else  {  forAnnotations  =  Collections.emptyList();  }	  if(propertyContinuations!=    null)    {    startPropertyAnnotations();    }    else    {    forAnnotations    =    Collections.emptyList();    }    	non-compiled	[CE]  cannot  find  symbol  propertyAnnotations	250	None	replace
1241	[BUG]  [BUGGY]  if(propertyContinuations!=  null)  {  startInferredPropertyAnnotations();  }  else  {  forAnnotations  =  Collections.emptyList();  }  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(propertyContinuations!=  null)  {  startInferredPropertyAnnotations();  }  else  {  forAnnotations  =  Collections.emptyList();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations!=  null)  {  startInferredPropertyAnnotations();  }  else  {  forAnnotations  =  Collections.emptyList();  }	  if(propertyContinuations!=    null)    {    startPropertyAnnotations();    }    else    {    forAnnotations    =    Collections.emptyList();    }    	non-compiled	[CE]  cannot  find  symbol	250	None	replace
1242	[BUG]  [BUGGY]  if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  if(validator!=  null)  {  startPropertyContinuations();  }  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  if(validator!=  null)  {  startPropertyContinuations();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  if(validator!=  null)  {  startPropertyContinuations();  }	  if(validator!=    null)    {    finishPropertyContinuations();    }    if(validator!=    null)    {    startPropertyContinuations();    }    	non-compiled	[CE]  cannot  find  symbol	54	None	replace
1243	[BUG]  [BUGGY]  if(forAnnotations!=  null)  {  finishPropertyContinuations();  }  if(validator!=  null)  {  startPropertyContinuations();  }  [CE]  cannot  find  symbol  forAnnotations  [FE]                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(forAnnotations!=  null)  {  finishPropertyContinuations();  }  if(validator!=  null)  {  startPropertyContinuations();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(forAnnotations!=  null)  {  finishPropertyContinuations();  }  if(validator!=  null)  {  startPropertyContinuations();  }	  if(validator!=    null)    {    finishPropertyContinuations();    }    if(validator!=    null)    {    startPropertyContinuations();    }    	non-compiled	[CE]  cannot  find  symbol  forAnnotations	54	None	replace
1244	[BUG]  [BUGGY]  if(validator!=  null)  {  startPropertyGenerations();  }  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(validator!=  null)  {  startPropertyGenerations();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(validator!=  null)  {  startPropertyGenerations();  }	  if(validator!=    null)    {    finishPropertyContinuations();    }    if(validator!=    null)    {    startPropertyContinuations();    }    	non-compiled	[CE]  cannot  find  symbol	54	None	replace
1245	[BUG]  [BUGGY]  if(validator!=  null)  {  startPropertyGeneration();  }  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(validator!=  null)  {  startPropertyGeneration();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(validator!=  null)  {  startPropertyGeneration();  }	  if(validator!=    null)    {    finishPropertyContinuations();    }    if(validator!=    null)    {    startPropertyContinuations();    }    	non-compiled	[CE]  cannot  find  symbol	54	None	replace
1246	[BUG]  [BUGGY]  Validator  <  Object>  validator!=  null  &&  registry.isLastGeneration();  [CE]  ';'  expected  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Validator  <  Object>  validator!=  null  &&  registry.isLastGeneration();  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Validator  <  Object>  validator!=  null  &&  registry.isLastGeneration();	  validator!=    null    &&    registry.isLastGeneration();    	non-compiled	[CE]  ';'  expected	97	None	replace
1247	[BUG]  [BUGGY]  ensurePropertyContinuations()  &&  propertyNode.isLastGeneration();  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  ensurePropertyContinuations()  &&  propertyNode.isLastGeneration();  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	ensurePropertyContinuations()  &&  propertyNode.isLastGeneration();	  ensurePropertyContinuations()    &&    resolveViaRegistry.isLastGeneration();    	non-compiled	[CE]  not  a  statement	19	None	replace
1248	[BUG]  [BUGGY]  ensurePropertyContinuations()  &&  getReferencedType().isLastGeneration();  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  ensurePropertyContinuations()  &&  getReferencedType().isLastGeneration();  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	ensurePropertyContinuations()  &&  getReferencedType().isLastGeneration();	  ensurePropertyContinuations()    &&    resolveViaRegistry.isLastGeneration();    	non-compiled	[CE]  not  a  statement	19	None	replace
1249	[BUG]  [BUGGY]  if(validator!=  null  &&  registry.isFirstGeneration())  {  startPropertyContinuations();  }  else  {  registry.isLastGeneration()?  getReferencedType()  :  this;  }  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(validator!=  null  &&  registry.isFirstGeneration())  {  startPropertyContinuations();  }  else  {  registry.isLastGeneration()?  getReferencedType()  :  this;  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(validator!=  null  &&  registry.isFirstGeneration())  {  startPropertyContinuations();  }  else  {  registry.isLastGeneration()?  getReferencedType()  :  this;  }	  if(validator!=    null    &&    registry.isLastGeneration())    {    startPropertyContinuations();    }    else    {    registry.isLastGeneration()?    getReferencedType()    :    this;    }    	non-compiled	[CE]  not  a  statement	231	None	replace
1250	[BUG]  [BUGGY]  if(validator!=  null  &&  registry.isLastGeneration())  {  startReferencedType();  }  else  {  registry.isLastGeneration()?  getReferencedType()  :  this;  }  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(validator!=  null  &&  registry.isLastGeneration())  {  startReferencedType();  }  else  {  registry.isLastGeneration()?  getReferencedType()  :  this;  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(validator!=  null  &&  registry.isLastGeneration())  {  startReferencedType();  }  else  {  registry.isLastGeneration()?  getReferencedType()  :  this;  }	  if(validator!=    null    &&    registry.isLastGeneration())    {    startPropertyContinuations();    }    else    {    registry.isLastGeneration()?    getReferencedType()    :    this;    }    	non-compiled	[CE]  not  a  statement	231	None	replace
1251	[BUG]  [BUGGY]  if(resolved)  {  startPropertyAnnotations();  }  else  {  registry.isLastGeneration()  :  this;  }  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(resolved)  {  startPropertyAnnotations();  }  else  {  registry.isLastGeneration()  :  this;  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(resolved)  {  startPropertyAnnotations();  }  else  {  registry.isLastGeneration()  :  this;  }	  if(resolved)    {    finishPropertyAnnotations();    }    else    {    registry.isLastGeneration()    :    this;    }    	non-compiled	[CE]  ';'  expected	174	None	replace
1252	[BUG]  [BUGGY]  if(resolved)  {  finishInferredPropertyAnnotations();  }  else  {  registry.isLastGeneration()  :  this;  }  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(resolved)  {  finishInferredPropertyAnnotations();  }  else  {  registry.isLastGeneration()  :  this;  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(resolved)  {  finishInferredPropertyAnnotations();  }  else  {  registry.isLastGeneration()  :  this;  }	  if(resolved)    {    finishPropertyAnnotations();    }    else    {    registry.isLastGeneration()    :    this;    }    	non-compiled	[CE]  ';'  expected	174	None	replace
1253	[BUG]  [BUGGY]  if(resolved)  {  finishInferredAnnotations();  }  else  {  registry.isLastGeneration()  :  this;  }  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(resolved)  {  finishInferredAnnotations();  }  else  {  registry.isLastGeneration()  :  this;  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(resolved)  {  finishInferredAnnotations();  }  else  {  registry.isLastGeneration()  :  this;  }	  if(resolved)    {    finishPropertyAnnotations();    }    else    {    registry.isLastGeneration()    :    this;    }    	non-compiled	[CE]  ';'  expected	174	None	replace
1254	[BUG]  [BUGGY]  if(resolved)  {  finishPropertyAnnotations();  }  else  {  registry.isFirstGeneration()  :  this;  }  [CE]  ';'  expected  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(resolved)  {  finishPropertyAnnotations();  }  else  {  registry.isFirstGeneration()  :  this;  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(resolved)  {  finishPropertyAnnotations();  }  else  {  registry.isFirstGeneration()  :  this;  }	  if(resolved)    {    finishPropertyAnnotations();    }    else    {    registry.isLastGeneration()    :    this;    }    	non-compiled	[CE]  ';'  expected	174	None	replace
1255	[BUG]  [BUGGY]  if(resolved)  {  finishPropertyAnnotations();  }  else  {  registry.isLastGeneration()  :  null;  }  [CE]  ';'  expected  [FE]                            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(resolved)  {  finishPropertyAnnotations();  }  else  {  registry.isLastGeneration()  :  null;  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(resolved)  {  finishPropertyAnnotations();  }  else  {  registry.isLastGeneration()  :  null;  }	  if(resolved)    {    finishPropertyAnnotations();    }    else    {    registry.isLastGeneration()    :    this;    }    	non-compiled	[CE]  ';'  expected	174	None	replace
1256	[BUG]  [BUGGY]  PropertyContinuation  propertyContinuations  =  getPropertyContinuations(propertyName,  enclosing);  [CE]  cannot  find  symbol  propertyName  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  PropertyContinuation  propertyContinuations  =  getPropertyContinuations(propertyName,  enclosing);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	PropertyContinuation  propertyContinuations  =  getPropertyContinuations(propertyName,  enclosing);	  PropertyContinuation    propertyContinuations    =    getPropertyContinuations();    	non-compiled	[CE]  cannot  find  symbol  propertyName	147	None	replace
1257	[BUG]  [BUGGY]  Predicate  validator  =  getValueForType(registry);  [CE]  cannot  find  symbol  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Predicate  validator  =  getValueForType(registry);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Predicate  validator  =  getValueForType(registry);	          Predicate    validator    =    getValueForType(t);    	non-compiled	[CE]  cannot  find  symbol	237	None	replace
1258	[BUG]  [BUGGY]  Predicate  validator  =  getValueForType(t,  sourceName);  [CE]  cannot  find  symbol  [FE]                            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Predicate  validator  =  getValueForType(t,  sourceName);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Predicate  validator  =  getValueForType(t,  sourceName);	          Predicate    validator    =    getValueForType(t);    	non-compiled	[CE]  cannot  find  symbol	237	None	replace
1259	[BUG]  [BUGGY]  if(propertyFields!=  null)  {  finishPropertyFields();  }  else  {  propertyContinuations.add(propertyName);  }  [CE]  cannot  find  symbol  propertyFields  [FE]                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(propertyFields!=  null)  {  finishPropertyFields();  }  else  {  propertyContinuations.add(propertyName);  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyFields!=  null)  {  finishPropertyFields();  }  else  {  propertyContinuations.add(propertyName);  }	  if(propertyContinuations!=    null)    {    finishPropertyFields();    }    else    {    propertyContinuations.add(propertyName);    }    	non-compiled	[CE]  cannot  find  symbol  propertyFields	151	None	replace
1260	[BUG]  [BUGGY]  if(propertyContinuations!=  null)  {  startPropertyFields();  }  else  {  propertyContinuations.add(propertyName);  }  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(propertyContinuations!=  null)  {  startPropertyFields();  }  else  {  propertyContinuations.add(propertyName);  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations!=  null)  {  startPropertyFields();  }  else  {  propertyContinuations.add(propertyName);  }	  if(propertyContinuations!=    null)    {    finishPropertyFields();    }    else    {    propertyContinuations.add(propertyName);    }    	non-compiled	[CE]  cannot  find  symbol	151	None	replace
1261	[BUG]  [BUGGY]  Predicate  validator  =  getValueForAnnotations(enferred);  [CE]  cannot  find  symbol  enferred  [FE]                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Predicate  validator  =  getValueForAnnotations(enferred);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Predicate  validator  =  getValueForAnnotations(enferred);	  Predicate    validator    =    getValueForAnnotations(resolved);    	non-compiled	[CE]  cannot  find  symbol  enferred	142	None	replace
1262	[BUG]  [BUGGY]  Predicate  validator  =  getValueForAnnotations(inferred);  [CE]  cannot  find  symbol  inferred  [FE]                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Predicate  validator  =  getValueForAnnotations(inferred);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Predicate  validator  =  getValueForAnnotations(inferred);	  Predicate    validator    =    getValueForAnnotations(resolved);    	non-compiled	[CE]  cannot  find  symbol  inferred	142	None	replace
1263	[BUG]  [BUGGY]  if(propertyContinuations  ==  null)  {  finishPropertyValues();  }  else  {  propertyContinuations.add(propertyName);  }  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(propertyContinuations  ==  null)  {  finishPropertyValues();  }  else  {  propertyContinuations.add(propertyName);  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations  ==  null)  {  finishPropertyValues();  }  else  {  propertyContinuations.add(propertyName);  }	  if(propertyContinuations    ==    null)    {    finishPropertyContinuations();    }    else    {    propertyContinuations.add(propertyName);    }    	non-compiled	[CE]  cannot  find  symbol	224	None	replace
1264	[BUG]  [BUGGY]  if(propertyContinuations  ==  null)  {  finishPropertyInferred();  }  else  {  propertyContinuations.add(propertyName);  }  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(propertyContinuations  ==  null)  {  finishPropertyInferred();  }  else  {  propertyContinuations.add(propertyName);  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations  ==  null)  {  finishPropertyInferred();  }  else  {  propertyContinuations.add(propertyName);  }	  if(propertyContinuations    ==    null)    {    finishPropertyContinuations();    }    else    {    propertyContinuations.add(propertyName);    }    	non-compiled	[CE]  cannot  find  symbol	224	None	replace
1265	[BUG]  [BUGGY]  if(propertyContinuations  ==  null)  {  finishPropertyFields();  }  else  {  propertyContinuations.add(propertyName);  }  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(propertyContinuations  ==  null)  {  finishPropertyFields();  }  else  {  propertyContinuations.add(propertyName);  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations  ==  null)  {  finishPropertyFields();  }  else  {  propertyContinuations.add(propertyName);  }	  if(propertyContinuations    ==    null)    {    finishPropertyContinuations();    }    else    {    propertyContinuations.add(propertyName);    }    	non-compiled	[CE]  cannot  find  symbol	224	None	replace
1266	[BUG]  [BUGGY]  if(propertyContinuations  ==  null)  {  finishPropertyGenerated();  }  else  {  propertyContinuations.add(propertyName);  }  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(propertyContinuations  ==  null)  {  finishPropertyGenerated();  }  else  {  propertyContinuations.add(propertyName);  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations  ==  null)  {  finishPropertyGenerated();  }  else  {  propertyContinuations.add(propertyName);  }	  if(propertyContinuations    ==    null)    {    finishPropertyContinuations();    }    else    {    propertyContinuations.add(propertyName);    }    	non-compiled	[CE]  cannot  find  symbol	224	None	replace
1267	[BUG]  [BUGGY]  Parchet.checkState(registry.isLastGeneration()?  getReferencedType()  :  this,  enclosing);  [CE]  cannot  find  symbol  Parchet  [FE]              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Parchet.checkState(registry.isLastGeneration()?  getReferencedType()  :  this,  enclosing);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Parchet.checkState(registry.isLastGeneration()?  getReferencedType()  :  this,  enclosing);	  Parchet.checkState(registry.isLastGeneration()?    getReferencedType()    :    this);    	non-compiled	[CE]  cannot  find  symbol  Parchet	63	None	replace
1268	[BUG]  [BUGGY]  Parchet.checkState(registry.isLastGeneration()?  getReferencedType()  :  REFERENCED_TYPE);  [CE]  cannot  find  symbol  REFERENCED_TYPE  [FE]                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Parchet.checkState(registry.isLastGeneration()?  getReferencedType()  :  REFERENCED_TYPE);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Parchet.checkState(registry.isLastGeneration()?  getReferencedType()  :  REFERENCED_TYPE);	  Parchet.checkState(registry.isLastGeneration()?    getReferencedType()    :    this);    	non-compiled	[CE]  cannot  find  symbol  REFERENCED_TYPE	63	None	replace
1269	[BUG]  [BUGGY]  Predicates.handleTypeCycle(t);  [CE]  cannot  find  symbol  Predicates  [FE]                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Predicates.handleTypeCycle(t);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Predicates.handleTypeCycle(t);	  aughtExceptionHandler.handleTypeCycle(t);    	non-compiled	[CE]  cannot  find  symbol  Predicates	195	None	replace
1270	[BUG]  [BUGGY]  registry.handleTypeCycle(t);  [CE]  cannot  find  symbol  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  registry.handleTypeCycle(t);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	registry.handleTypeCycle(t);	  aughtExceptionHandler.handleTypeCycle(t);    	non-compiled	[CE]  cannot  find  symbol	195	None	replace
1271	[BUG]  [BUGGY]  n.handleTypeCycle(t);  [CE]  cannot  find  symbol  n  [FE]                            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  n.handleTypeCycle(t);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	n.handleTypeCycle(t);	  aughtExceptionHandler.handleTypeCycle(t);    	non-compiled	[CE]  cannot  find  symbol  n	195	None	replace
1272	[BUG]  [BUGGY]  if(enclosing!=  null)  {  aughtExceptionHandler.handleTypeCycle(t,  enclosing);  }  [CE]  cannot  find  symbol  aughtExceptionHandler  [FE]                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(enclosing!=  null)  {  aughtExceptionHandler.handleTypeCycle(t,  enclosing);  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(enclosing!=  null)  {  aughtExceptionHandler.handleTypeCycle(t,  enclosing);  }	  aughtExceptionHandler.handleTypeCycle(t,    enclosing);    	non-compiled	[CE]  cannot  find  symbol  aughtExceptionHandler	194	None	replace
1273	[BUG]  [BUGGY]  if(enclosing!=  null)  {  aughtExceptionHandler.handleTypeCycle(t,  enclosing);  }  else  {  registry.isLastGeneration()?  getReferencedType()  :  this;  }  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(enclosing!=  null)  {  aughtExceptionHandler.handleTypeCycle(t,  enclosing);  }  else  {  registry.isLastGeneration()?  getReferencedType()  :  this;  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(enclosing!=  null)  {  aughtExceptionHandler.handleTypeCycle(t,  enclosing);  }  else  {  registry.isLastGeneration()?  getReferencedType()  :  this;  }	  aughtExceptionHandler.handleTypeCycle(t,    enclosing);    	non-compiled	[CE]  not  a  statement	194	None	replace
1274	[BUG]  [BUGGY]  if(resolved)  {  aughtExceptionHandler.handleTypeCycle(t,  enclosing);  }  [CE]  cannot  find  symbol  aughtExceptionHandler  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(resolved)  {  aughtExceptionHandler.handleTypeCycle(t,  enclosing);  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(resolved)  {  aughtExceptionHandler.handleTypeCycle(t,  enclosing);  }	  aughtExceptionHandler.handleTypeCycle(t,    enclosing);    	non-compiled	[CE]  cannot  find  symbol  aughtExceptionHandler	194	None	replace
1275	[BUG]  [BUGGY]  if(enclosing  ==  null)  {  aughtExceptionHandler.handleTypeCycle(t,  enclosing);  }  [CE]  cannot  find  symbol  aughtExceptionHandler  [FE]                            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(enclosing  ==  null)  {  aughtExceptionHandler.handleTypeCycle(t,  enclosing);  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(enclosing  ==  null)  {  aughtExceptionHandler.handleTypeCycle(t,  enclosing);  }	  aughtExceptionHandler.handleTypeCycle(t,    enclosing);    	non-compiled	[CE]  cannot  find  symbol  aughtExceptionHandler	194	None	replace
1276	[BUG]  [BUGGY]  if(enclosing  ==  null)  {  aughtExceptionHandler.handleTypeCycle(t,  enclosing);  }  else  {  registry.isLastGeneration()?  getReferencedType()  :  this;  }  [CE]  not  a  statement  [FE]                              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(enclosing  ==  null)  {  aughtExceptionHandler.handleTypeCycle(t,  enclosing);  }  else  {  registry.isLastGeneration()?  getReferencedType()  :  this;  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(enclosing  ==  null)  {  aughtExceptionHandler.handleTypeCycle(t,  enclosing);  }  else  {  registry.isLastGeneration()?  getReferencedType()  :  this;  }	  aughtExceptionHandler.handleTypeCycle(t,    enclosing);    	non-compiled	[CE]  not  a  statement	194	None	replace
1277	[BUG]  [BUGGY]  ensurePropertyContinuations()  &&  registry.isInferred();  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  ensurePropertyContinuations()  &&  registry.isInferred();  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	ensurePropertyContinuations()  &&  registry.isInferred();	  ensurePropertyContinuations()    &&    registry.isLastGeneration();    	non-compiled	[CE]  not  a  statement	14	None	replace
1278	[BUG]  [BUGGY]  Parchet.checkState(resolved  ||!resolved)  {  finishPropertyContinuations();  }  else  {  registry.isLastGeneration()  :  null;  }  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Parchet.checkState(resolved  ||!resolved)  {  finishPropertyContinuations();  }  else  {  registry.isLastGeneration()  :  null;  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Parchet.checkState(resolved  ||!resolved)  {  finishPropertyContinuations();  }  else  {  registry.isLastGeneration()  :  null;  }	  Parchet.checkState(resolved    ||    resolved)    {    finishPropertyContinuations();    }    else    {    registry.isLastGeneration()    :    null;    }    	non-compiled	[CE]  ';'  expected	109	None	replace
1279	[BUG]  [BUGGY]  Predicate  validator  =  enclosing.findValueForAnnotations(sourceName);  [CE]  cannot  find  symbol  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Predicate  validator  =  enclosing.findValueForAnnotations(sourceName);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Predicate  validator  =  enclosing.findValueForAnnotations(sourceName);	          Predicate    validator    =    enclosing.getValue();    	non-compiled	[CE]  cannot  find  symbol	20	None	replace
1280	[BUG]  [BUGGY]  Predicate  validator  =  enclosing.findValue(sourceName);  [CE]  cannot  find  symbol  [FE]                            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Predicate  validator  =  enclosing.findValue(sourceName);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Predicate  validator  =  enclosing.findValue(sourceName);	          Predicate    validator    =    enclosing.getValue();    	non-compiled	[CE]  cannot  find  symbol	20	None	replace
1281	[BUG]  [BUGGY]  if(propertyContinuations!=  null)  {  startPropertyConuations();  }  else  {  propertyContinuations.add(propertyName);  }  [CE]  cannot  find  symbol  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(propertyContinuations!=  null)  {  startPropertyConuations();  }  else  {  propertyContinuations.add(propertyName);  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations!=  null)  {  startPropertyConuations();  }  else  {  propertyContinuations.add(propertyName);  }	  if(propertyContinuations!=    null)    {    finishPropertyConuations();    }    else    {    propertyContinuations.add(propertyName);    }    	non-compiled	[CE]  cannot  find  symbol	154	None	replace
1282	[BUG]  [BUGGY]  if(propertyContinuations  ==  null)  {  finishPropertyConuations();  }  else  {  propertyContinuations.add(propertyName);  }  [CE]  cannot  find  symbol  [FE]                            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(propertyContinuations  ==  null)  {  finishPropertyConuations();  }  else  {  propertyContinuations.add(propertyName);  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations  ==  null)  {  finishPropertyConuations();  }  else  {  propertyContinuations.add(propertyName);  }	  if(propertyContinuations!=    null)    {    finishPropertyConuations();    }    else    {    propertyContinuations.add(propertyName);    }    	non-compiled	[CE]  cannot  find  symbol	154	None	replace
1283	[BUG]  [BUGGY]  if(propertyContinuations!=  null)  {  finishPropertyConuations();  }  else  {  properties.add(propertyName);  }  [CE]  cannot  find  symbol  [FE]                              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(propertyContinuations!=  null)  {  finishPropertyConuations();  }  else  {  properties.add(propertyName);  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations!=  null)  {  finishPropertyConuations();  }  else  {  properties.add(propertyName);  }	  if(propertyContinuations!=    null)    {    finishPropertyConuations();    }    else    {    propertyContinuations.add(propertyName);    }    	non-compiled	[CE]  cannot  find  symbol	154	None	replace
1284	[BUG]  [BUGGY]  if(propertyContinuations!=  null)  {  finishPropertyInferredConuations();  }  else  {  propertyContinuations.add(propertyName);  }  [CE]  cannot  find  symbol  [FE]                                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(propertyContinuations!=  null)  {  finishPropertyInferredConuations();  }  else  {  propertyContinuations.add(propertyName);  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations!=  null)  {  finishPropertyInferredConuations();  }  else  {  propertyContinuations.add(propertyName);  }	  if(propertyContinuations!=    null)    {    finishPropertyConuations();    }    else    {    propertyContinuations.add(propertyName);    }    	non-compiled	[CE]  cannot  find  symbol	154	None	replace
1285	[BUG]  [BUGGY]  if(propertyContinuations!=  null)  {  finishPropertyConutions();  }  else  {  propertyContinuations.add(propertyName);  }  [CE]  cannot  find  symbol  [FE]                                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(propertyContinuations!=  null)  {  finishPropertyConutions();  }  else  {  propertyContinuations.add(propertyName);  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations!=  null)  {  finishPropertyConutions();  }  else  {  propertyContinuations.add(propertyName);  }	  if(propertyContinuations!=    null)    {    finishPropertyConuations();    }    else    {    propertyContinuations.add(propertyName);    }    	non-compiled	[CE]  cannot  find  symbol	154	None	replace
1286	[BUG]  [BUGGY]  if(propertyContinuations!=  null)  {  startPropertyList();  }  else  {  forAnnotations  =  Collections.emptyList();  }  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(propertyContinuations!=  null)  {  startPropertyList();  }  else  {  forAnnotations  =  Collections.emptyList();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations!=  null)  {  startPropertyList();  }  else  {  forAnnotations  =  Collections.emptyList();  }	  if(propertyContinuations!=    null)    {    startPropertyContinuations();    }    else    {    forAnnotations    =    Collections.emptyList();    }    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
1287	[BUG]  [BUGGY]  luate(resolved,  propertyNode)  {  finishPropertyContinuations();  }  else  {  registry.isLastGeneration()?  getReferencedType()  :  this;  }  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  luate(resolved,  propertyNode)  {  finishPropertyContinuations();  }  else  {  registry.isLastGeneration()?  getReferencedType()  :  this;  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	luate(resolved,  propertyNode)  {  finishPropertyContinuations();  }  else  {  registry.isLastGeneration()?  getReferencedType()  :  this;  }	  luate(registry,    resolved)    {    finishPropertyContinuations();    }    else    {    registry.isLastGeneration()?    getReferencedType()    :    this;    }    	non-compiled	[CE]  ';'  expected	164	None	replace
1288	[BUG]  [BUGGY]  luate(registry,  inferred)  {  finishPropertyContinuations();  }  else  {  registry.isLastGeneration()?  getReferencedType()  :  this;  }  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  luate(registry,  inferred)  {  finishPropertyContinuations();  }  else  {  registry.isLastGeneration()?  getReferencedType()  :  this;  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	luate(registry,  inferred)  {  finishPropertyContinuations();  }  else  {  registry.isLastGeneration()?  getReferencedType()  :  this;  }	  luate(registry,    resolved)    {    finishPropertyContinuations();    }    else    {    registry.isLastGeneration()?    getReferencedType()    :    this;    }    	non-compiled	[CE]  ';'  expected	164	None	replace
1289	[BUG]  [BUGGY]  luate(registry,  enclosing)  {  startPropertyGenerations();  }  else  {  registry.isLastGeneration()?  getReferencedType()  :  this;  }  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  luate(registry,  enclosing)  {  startPropertyGenerations();  }  else  {  registry.isLastGeneration()?  getReferencedType()  :  this;  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	luate(registry,  enclosing)  {  startPropertyGenerations();  }  else  {  registry.isLastGeneration()?  getReferencedType()  :  this;  }	  luate(registry,    resolved)    {    finishPropertyContinuations();    }    else    {    registry.isLastGeneration()?    getReferencedType()    :    this;    }    	non-compiled	[CE]  ';'  expected	164	None	replace
1290	[BUG]  [BUGGY]  if(validator!=  null  &&  resolveViaProperties())  {  finishPropertyPropertyContinuations();  }  [CE]  method  resolveViaProperties  in  class  NamedType  cannot  be  applied  to  given  types;  [FE]            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(validator!=  null  &&  resolveViaProperties())  {  finishPropertyPropertyContinuations();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(validator!=  null  &&  resolveViaProperties())  {  finishPropertyPropertyContinuations();  }	  if(validator!=    null    &&    resolveViaProperties())    {    finishPropertyContinuations();    }    	non-compiled	[CE]  method  resolveViaProperties  in  class  NamedType  cannot  be  applied  to  given  types;	206	None	replace
1291	[BUG]  [BUGGY]  if(validator!=  null  &&  resolveViaProperties())  {  finishPropertyFields();  }  [CE]  method  resolveViaProperties  in  class  NamedType  cannot  be  applied  to  given  types;  [FE]              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(validator!=  null  &&  resolveViaProperties())  {  finishPropertyFields();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(validator!=  null  &&  resolveViaProperties())  {  finishPropertyFields();  }	  if(validator!=    null    &&    resolveViaProperties())    {    finishPropertyContinuations();    }    	non-compiled	[CE]  method  resolveViaProperties  in  class  NamedType  cannot  be  applied  to  given  types;	206	None	replace
1292	[BUG]  [BUGGY]  if(validator!=  null)  {  finishPropertyStarts();  }  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(validator!=  null)  {  finishPropertyStarts();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(validator!=  null)  {  finishPropertyStarts();  }	  if(validator    ==    null)    {    finishPropertyContinuations();    }    timeout    	non-compiled	[CE]  cannot  find  symbol	157	None	replace
1293	[BUG]  [BUGGY]  Status.checkState(propertyContinuations!=  null,  resolved);  [CE]  cannot  find  symbol  Status  [FE]                                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Status.checkState(propertyContinuations!=  null,  resolved);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Status.checkState(propertyContinuations!=  null,  resolved);	  Status.checkState(propertyContinuations!=    null);    	non-compiled	[CE]  cannot  find  symbol  Status	116	None	replace
1294	[BUG]  [BUGGY]  propertyContinuations!=  null  &&  propertyContinuations.size()  >  0)  {  registry.isLastGeneration()?  getReferencedType()  :  this;  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  propertyContinuations!=  null  &&  propertyContinuations.size()  >  0)  {  registry.isLastGeneration()?  getReferencedType()  :  this;  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	propertyContinuations!=  null  &&  propertyContinuations.size()  >  0)  {  registry.isLastGeneration()?  getReferencedType()  :  this;	  propertyContinuations!=    null    &&    propertyContinuations.size()    >    0)    {    startPropertyContinuations();    }    else    {    registry.isLastGeneration()?    getReferencedType()    :    this;    }    	non-compiled	[CE]  not  a  statement	193	None	replace
1295	[BUG]  [BUGGY]  propertyContinuations!=  null  &&  propertyContinuations.size()  ==  0)  {  startPropertyContinuations();  }  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  propertyContinuations!=  null  &&  propertyContinuations.size()  ==  0)  {  startPropertyContinuations();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	propertyContinuations!=  null  &&  propertyContinuations.size()  ==  0)  {  startPropertyContinuations();  }	  propertyContinuations!=    null    &&    propertyContinuations.size()    >    0)    {    startPropertyContinuations();    }    else    {    registry.isLastGeneration()?    getReferencedType()    :    this;    }    	non-compiled	[CE]  not  a  statement	193	None	replace
1296	[BUG]  [BUGGY]  propertyContinuations  ==  null  &&  propertyContinuations.size()  >  0)  {  registry.isLastGeneration()?  getReferencedType()  :  this;  }  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  propertyContinuations  ==  null  &&  propertyContinuations.size()  >  0)  {  registry.isLastGeneration()?  getReferencedType()  :  this;  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	propertyContinuations  ==  null  &&  propertyContinuations.size()  >  0)  {  registry.isLastGeneration()?  getReferencedType()  :  this;  }	  propertyContinuations!=    null    &&    propertyContinuations.size()    >    0)    {    startPropertyContinuations();    }    else    {    registry.isLastGeneration()?    getReferencedType()    :    this;    }    	non-compiled	[CE]  not  a  statement	193	None	replace
1297	[BUG]  [BUGGY]  if(propertyNode  ==  null)  {  finishPropertyNode();  }  [CE]  cannot  find  symbol  propertyNode  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(propertyNode  ==  null)  {  finishPropertyNode();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyNode  ==  null)  {  finishPropertyNode();  }	  if(propertyContinuations    ==    null)    {    finishPropertyContinuations();    }    if(propertyContinuations!=    null)    {    finishPropertyContinuations();    }    timeout    	non-compiled	[CE]  cannot  find  symbol  propertyNode	44	None	replace
1298	[BUG]  [BUGGY]  if(propertyContinuations!=  null)  {  finishPropertyGeneration();  }  [CE]  cannot  find  symbol  [FE]                            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(propertyContinuations!=  null)  {  finishPropertyGeneration();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations!=  null)  {  finishPropertyGeneration();  }	  if(propertyContinuations    ==    null)    {    finishPropertyContinuations();    }    if(propertyContinuations!=    null)    {    finishPropertyContinuations();    }    timeout    	non-compiled	[CE]  cannot  find  symbol	44	None	replace
1299	[BUG]  [BUGGY]  if(propertyContinuations!=  null)  {  finishPropertyGenerations();  }  [CE]  cannot  find  symbol  [FE]                              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(propertyContinuations!=  null)  {  finishPropertyGenerations();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations!=  null)  {  finishPropertyGenerations();  }	  if(propertyContinuations    ==    null)    {    finishPropertyContinuations();    }    if(propertyContinuations!=    null)    {    finishPropertyContinuations();    }    timeout    	non-compiled	[CE]  cannot  find  symbol	44	None	replace
1300	[BUG]  [BUGGY]  luate(registry,  inferred)  {  finishPropertyContinuations();  }  else  {  Registry.isLastGeneration()?  getReferencedType()  :  null;  }  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  luate(registry,  inferred)  {  finishPropertyContinuations();  }  else  {  Registry.isLastGeneration()?  getReferencedType()  :  null;  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	luate(registry,  inferred)  {  finishPropertyContinuations();  }  else  {  Registry.isLastGeneration()?  getReferencedType()  :  null;  }	  luate(registry,    resolved)    {    finishPropertyContinuations();    }    else    {    Registry.isLastGeneration()?    getReferencedType()    :    null;    }    	non-compiled	[CE]  ';'  expected	180	None	replace
1301	[BUG]  [BUGGY]  timeout  [FE]                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Preconditions.checkState(propertyContinuations!=  null);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	add	Preconditions.checkState(propertyContinuations!=  null);	  if(propertyContinuations!=    null)    {    finishPropertyContinuations();    }    if(propertyContinuations    >=    null)    {    finishPropertyContinuations();    }    	compilable	timeout	80	1	replace
1302	[BUG]  [BUGGY]  Preconditions.checkState(propertyContinuations!=  null);  timeout  [FE]                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Preconditions.checkState(propertyContinuations!=  null);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Preconditions.checkState(propertyContinuations!=  null);	  if(propertyContinuations!=    null)    {    finishPropertyContinuations();    }    if(propertyContinuations    >=    null)    {    finishPropertyContinuations();    }    	compilable	timeout	80	1	replace
1303	[BUG]  [BUGGY]  Predicate  validator  =  getValueForAnnotations(register);  [CE]  cannot  find  symbol  register  [FE]                              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Predicate  validator  =  getValueForAnnotations(register);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Predicate  validator  =  getValueForAnnotations(register);	          Predicate    validator    =    getValueForAnnotations(t);    	non-compiled	[CE]  cannot  find  symbol  register	22	None	replace
1304	[BUG]  [BUGGY]  Parchet.checkNotNull(propertyContinuations,  enclosing);  [CE]  cannot  find  symbol  Parchet  [FE]                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Parchet.checkNotNull(propertyContinuations,  enclosing);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Parchet.checkNotNull(propertyContinuations,  enclosing);	  Parchet.checkNotNull(propertyContinuations);    	non-compiled	[CE]  cannot  find  symbol  Parchet	88	None	replace
1305	[BUG]  [BUGGY]  final  PropertyContinuations  <  N>  propertyContinuations  =  getPropertyContinuations(propertyNamingStrategy);  [CE]  cannot  find  symbol  [FE]                            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  final  PropertyContinuations  <  N>  propertyContinuations  =  getPropertyContinuations(propertyNamingStrategy);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	final  PropertyContinuations  <  N>  propertyContinuations  =  getPropertyContinuations(propertyNamingStrategy);	  final    PropertyContinuations    <    N>    propertyContinuations    =    getPropertyContinuations();    	non-compiled	[CE]  cannot  find  symbol	254	None	replace
1306	[BUG]  [BUGGY]  final  PropertyContinuations  <  N>  propertyContinuations  =  getReferencedPropertyContinuations();  [CE]  cannot  find  symbol  [FE]                              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  final  PropertyContinuations  <  N>  propertyContinuations  =  getReferencedPropertyContinuations();  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	final  PropertyContinuations  <  N>  propertyContinuations  =  getReferencedPropertyContinuations();	  final    PropertyContinuations    <    N>    propertyContinuations    =    getPropertyContinuations();    	non-compiled	[CE]  cannot  find  symbol	254	None	replace
1307	[BUG]  [BUGGY]  PropertyContinuation  propertyContinuations  =  Registry.isLastGeneration()?  getReferencedType()  :  this;  [CE]  cannot  find  symbol  Registry  [FE]                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  PropertyContinuation  propertyContinuations  =  Registry.isLastGeneration()?  getReferencedType()  :  this;  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	PropertyContinuation  propertyContinuations  =  Registry.isLastGeneration()?  getReferencedType()  :  this;	  if(propertyContinuations!=    null)    {    finishPropertyContinuations();    }    else    {    Registry.isLastGeneration()?    getReferencedType()    :    this;    }    	non-compiled	[CE]  cannot  find  symbol  Registry	217	None	replace
1308	[BUG]  [BUGGY]  PropertyContinuation  propertyContinuations  =  Registry.isLastGeneration()?  getReferencedType()  :  null;  [CE]  cannot  find  symbol  Registry  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  PropertyContinuation  propertyContinuations  =  Registry.isLastGeneration()?  getReferencedType()  :  null;  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	PropertyContinuation  propertyContinuations  =  Registry.isLastGeneration()?  getReferencedType()  :  null;	  if(propertyContinuations!=    null)    {    finishPropertyContinuations();    }    else    {    Registry.isLastGeneration()?    getReferencedType()    :    this;    }    	non-compiled	[CE]  cannot  find  symbol  Registry	217	None	replace
1309	[BUG]  [BUGGY]  Predicates.checkState(register!=  null);  [CE]  cannot  find  symbol  register  [FE]                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Predicates.checkState(register!=  null);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Predicates.checkState(register!=  null);	  Predicates.checkState(validator!=    null);    	non-compiled	[CE]  cannot  find  symbol  register	140	None	replace
1310	[BUG]  [BUGGY]  Predicates.checkState(compiler!=  null);  [CE]  cannot  find  symbol  compiler  [FE]                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Predicates.checkState(compiler!=  null);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Predicates.checkState(compiler!=  null);	  Predicates.checkState(validator!=    null);    	non-compiled	[CE]  cannot  find  symbol  compiler	140	None	replace
1311	[BUG]  [BUGGY]  luate(resolved,  propertyNode)  {  finishPropertyContinuations();  }  else  {  registry.islastGeneration()?  getReferencedType()  :  this;  }  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  luate(resolved,  propertyNode)  {  finishPropertyContinuations();  }  else  {  registry.islastGeneration()?  getReferencedType()  :  this;  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	luate(resolved,  propertyNode)  {  finishPropertyContinuations();  }  else  {  registry.islastGeneration()?  getReferencedType()  :  this;  }	  luate(registry,    resolved)    {    finishPropertyContinuations();    }    else    {    registry.islastGeneration()?    getReferencedType()    :    this;    }    	non-compiled	[CE]  ';'  expected	168	None	replace
1312	[BUG]  [BUGGY]  luate(registry,  inferred)  {  finishPropertyContinuations();  }  else  {  registry.islastGeneration()?  getReferencedType()  :  this;  }  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  luate(registry,  inferred)  {  finishPropertyContinuations();  }  else  {  registry.islastGeneration()?  getReferencedType()  :  this;  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	luate(registry,  inferred)  {  finishPropertyContinuations();  }  else  {  registry.islastGeneration()?  getReferencedType()  :  this;  }	  luate(registry,    resolved)    {    finishPropertyContinuations();    }    else    {    registry.islastGeneration()?    getReferencedType()    :    this;    }    	non-compiled	[CE]  ';'  expected	168	None	replace
1313	[BUG]  [BUGGY]  luate(registry,  enclosing)  {  startPropertyGenerations();  }  else  {  registry.islastGeneration()?  getReferencedType()  :  this;  }  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  luate(registry,  enclosing)  {  startPropertyGenerations();  }  else  {  registry.islastGeneration()?  getReferencedType()  :  this;  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	luate(registry,  enclosing)  {  startPropertyGenerations();  }  else  {  registry.islastGeneration()?  getReferencedType()  :  this;  }	  luate(registry,    resolved)    {    finishPropertyContinuations();    }    else    {    registry.islastGeneration()?    getReferencedType()    :    this;    }    	non-compiled	[CE]  ';'  expected	168	None	replace
1314	[BUG]  [BUGGY]  if(validator!=  null  &&  validator.isImplicitPrototype())  {  finishPropertyContinuations();  }  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(validator!=  null  &&  validator.isImplicitPrototype())  {  finishPropertyContinuations();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(validator!=  null  &&  validator.isImplicitPrototype())  {  finishPropertyContinuations();  }	  if(validator!=    null    &&    validator.isConstructor())    {    finishPropertyContinuations();    }    	non-compiled	[CE]  cannot  find  symbol	207	None	replace
1315	[BUG]  [BUGGY]  if(validator!=  null  &&  validator.isPropertyType())  {  finishPropertyContinuations();  }  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(validator!=  null  &&  validator.isPropertyType())  {  finishPropertyContinuations();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(validator!=  null  &&  validator.isPropertyType())  {  finishPropertyContinuations();  }	  if(validator!=    null    &&    validator.isConstructor())    {    finishPropertyContinuations();    }    	non-compiled	[CE]  cannot  find  symbol	207	None	replace
1316	[BUG]  [BUGGY]  PropertyNode  propertyNode  =  propertyContinuations.get(propertyName);  [CE]  cannot  find  symbol  [FE]                            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  PropertyNode  propertyNode  =  propertyContinuations.get(propertyName);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	PropertyNode  propertyNode  =  propertyContinuations.get(propertyName);	  if(propertyContinuations!=    null)    {    finishPropertyType();    }    else    {    propertyContinuations.add(propertyName);    }    	non-compiled	[CE]  cannot  find  symbol	155	None	replace
1317	[BUG]  [BUGGY]  PropertyType  propertyContinuations  =  propertyContinuations.getPropertyType(propertyName);  [CE]  cannot  find  symbol  [FE]                              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  PropertyType  propertyContinuations  =  propertyContinuations.getPropertyType(propertyName);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	PropertyType  propertyContinuations  =  propertyContinuations.getPropertyType(propertyName);	  if(propertyContinuations!=    null)    {    finishPropertyType();    }    else    {    propertyContinuations.add(propertyName);    }    	non-compiled	[CE]  cannot  find  symbol	155	None	replace
1318	[BUG]  [BUGGY]  PropertyRegistry  registry  =  propertyContinuations.get(propertyName);  [CE]  cannot  find  symbol  [FE]                                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  PropertyRegistry  registry  =  propertyContinuations.get(propertyName);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	PropertyRegistry  registry  =  propertyContinuations.get(propertyName);	  if(propertyContinuations!=    null)    {    finishPropertyType();    }    else    {    propertyContinuations.add(propertyName);    }    	non-compiled	[CE]  cannot  find  symbol	155	None	replace
1319	[BUG]  [BUGGY]  Parchet.getInstance().finishPropertyContinuations(propertyNode);  [CE]  cannot  find  symbol  propertyNode  [FE]              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Parchet.getInstance().finishPropertyContinuations(propertyNode);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Parchet.getInstance().finishPropertyContinuations(propertyNode);	  Parchet.getInstance().finishPropertyContinuations();    	non-compiled	[CE]  cannot  find  symbol  propertyNode	29	None	replace
1320	[BUG]  [BUGGY]  Parchet.getInstance().finishPropertyTypeContinuations();  [CE]  cannot  find  symbol  Parchet  [FE]                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Parchet.getInstance().finishPropertyTypeContinuations();  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Parchet.getInstance().finishPropertyTypeContinuations();	  Parchet.getInstance().finishPropertyContinuations();    	non-compiled	[CE]  cannot  find  symbol  Parchet	29	None	replace
1321	[BUG]  [BUGGY]  if(propertyContinuations    ==    null)    {    finishPropertyContinuations();    }    if(propertyContinuations  ==  null)  {  finishPropertyContinuations();  }  if(propertyContinuations  ==  null)  {  finishPropertyContinuations();  }  if(propertyContinuations  ==  null)  {  finishPropertyContinuations();  }  if(propertyContinu  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(propertyContinuations    ==    null)    {    finishPropertyContinuations();    }    if(propertyContinuations  ==  null)  {  finishPropertyContinuations();  }  if(propertyContinuations  ==  null)  {  finishPropertyContinuations();  }  if(propertyContinuations  ==  null)  {  finishPropertyContinuations();  }  if(propertyContinu  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations        ==        null)        {        finishPropertyContinuations();        }        if(propertyContinuations    ==    null)    {    finishPropertyContinuations();    }    if(propertyContinuations  ==  null)  {  finishPropertyContinuations();  }  if(propertyContinuations  ==  null)  {  finishPropertyContinuations();  }  if(propertyContinu	  timeout    	non-compiled	[CE]  ')'  expected	41	None	add
1322	[BUG]  [BUGGY]  if(propertyContinuations    ==    null)    {    finishPropertyContinuations();    }    if(propertyContinuations  ==  null)  {  finishPropertyContinuations();  }  if(propertyContinuations  ==  null)  {  finishPropertyContinuations();  }  if(propertyContinuations  ==  null)  {  finishPropertyContinuations();  }  if(propertyContinuations  ==  null)  {  finish  [CE]  ';'  expected  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(propertyContinuations    ==    null)    {    finishPropertyContinuations();    }    if(propertyContinuations  ==  null)  {  finishPropertyContinuations();  }  if(propertyContinuations  ==  null)  {  finishPropertyContinuations();  }  if(propertyContinuations  ==  null)  {  finishPropertyContinuations();  }  if(propertyContinuations  ==  null)  {  finish  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations        ==        null)        {        finishPropertyContinuations();        }        if(propertyContinuations    ==    null)    {    finishPropertyContinuations();    }    if(propertyContinuations  ==  null)  {  finishPropertyContinuations();  }  if(propertyContinuations  ==  null)  {  finishPropertyContinuations();  }  if(propertyContinuations  ==  null)  {  finish	  timeout    	non-compiled	[CE]  ';'  expected	41	None	add
1323	[BUG]  [BUGGY]  if(propertyContinuations    ==    null)    {    finishPropertyContinuations();    }    if(propertyContinuations  ==  null)  {  finishPropertyContinuations();  }  if(propertyContinuations  ==  null)  {  finishPropertyContinuations();  }  if(propertyContinuations  ==  null)  {  finishPropertyContinuations();  }  if(propertyContinuations  ==  null)  {  finishPro  [CE]  ';'  expected  [FE]                            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(propertyContinuations    ==    null)    {    finishPropertyContinuations();    }    if(propertyContinuations  ==  null)  {  finishPropertyContinuations();  }  if(propertyContinuations  ==  null)  {  finishPropertyContinuations();  }  if(propertyContinuations  ==  null)  {  finishPropertyContinuations();  }  if(propertyContinuations  ==  null)  {  finishPro  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations        ==        null)        {        finishPropertyContinuations();        }        if(propertyContinuations    ==    null)    {    finishPropertyContinuations();    }    if(propertyContinuations  ==  null)  {  finishPropertyContinuations();  }  if(propertyContinuations  ==  null)  {  finishPropertyContinuations();  }  if(propertyContinuations  ==  null)  {  finishPro	  timeout    	non-compiled	[CE]  ';'  expected	41	None	add
1324	[BUG]  [BUGGY]  if(propertyContinuations    ==    null)    {    finishPropertyContinuations();    }    if(propertyContinuations  ==  null)  {  finishPropertyContinuations();  }  if(propertyContinuations  ==  null)  {  finishPropertyContinuations();  }  if(propertyContinuations  ==  null)  {  finishPropertyContinuations();  }  if(propertyContinuations  ==  null)  {  finishProper  [CE]  ';'  expected  [FE]                              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(propertyContinuations    ==    null)    {    finishPropertyContinuations();    }    if(propertyContinuations  ==  null)  {  finishPropertyContinuations();  }  if(propertyContinuations  ==  null)  {  finishPropertyContinuations();  }  if(propertyContinuations  ==  null)  {  finishPropertyContinuations();  }  if(propertyContinuations  ==  null)  {  finishProper  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations        ==        null)        {        finishPropertyContinuations();        }        if(propertyContinuations    ==    null)    {    finishPropertyContinuations();    }    if(propertyContinuations  ==  null)  {  finishPropertyContinuations();  }  if(propertyContinuations  ==  null)  {  finishPropertyContinuations();  }  if(propertyContinuations  ==  null)  {  finishProper	  timeout    	non-compiled	[CE]  ';'  expected	41	None	add
1325	[BUG]  [BUGGY]  GenericScope  <  JSType>  registry  =  getReferencedScope();  [CE]  cannot  find  symbol  [FE]                                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  GenericScope  <  JSType>  registry  =  getReferencedScope();  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	GenericScope  <  JSType>  registry  =  getReferencedScope();	          GenericScope    <    JSType>    registry    =    getRegistry();    	non-compiled	[CE]  cannot  find  symbol	26	None	replace
1326	[BUG]  [BUGGY]  GenericScope  <  JSType>  registry  =  getOwnScope();  [CE]  cannot  find  symbol  [FE]                                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  GenericScope  <  JSType>  registry  =  getOwnScope();  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	GenericScope  <  JSType>  registry  =  getOwnScope();	          GenericScope    <    JSType>    registry    =    getRegistry();    	non-compiled	[CE]  cannot  find  symbol	26	None	replace
1327	[BUG]  [BUGGY]  GenericScope  <  JSType>  registry  =  getPropertyRegistry();  [CE]  cannot  find  symbol  [FE]                                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  GenericScope  <  JSType>  registry  =  getPropertyRegistry();  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	GenericScope  <  JSType>  registry  =  getPropertyRegistry();	          GenericScope    <    JSType>    registry    =    getRegistry();    	non-compiled	[CE]  cannot  find  symbol	26	None	replace
1328	[BUG]  [BUGGY]  if(validator!=  null  &&  propertyName  ==  null)  {  finishPropertyContinuations();  }  [CE]  cannot  find  symbol  propertyName  [FE]                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(validator!=  null  &&  propertyName  ==  null)  {  finishPropertyContinuations();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(validator!=  null  &&  propertyName  ==  null)  {  finishPropertyContinuations();  }	  if(validator!=    null    &&    propertyNode    ==    null)    {    finishPropertyContinuations();    }    	non-compiled	[CE]  cannot  find  symbol  propertyName	208	None	replace
1329	[BUG]  [BUGGY]  if(validator!=  null  &&  propertyNamingStrategy  ==  null)  {  finishPropertyContinuations();  }  [CE]  cannot  find  symbol  propertyNamingStrategy  [FE]                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(validator!=  null  &&  propertyNamingStrategy  ==  null)  {  finishPropertyContinuations();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(validator!=  null  &&  propertyNamingStrategy  ==  null)  {  finishPropertyContinuations();  }	  if(validator!=    null    &&    propertyNode    ==    null)    {    finishPropertyContinuations();    }    	non-compiled	[CE]  cannot  find  symbol  propertyNamingStrategy	208	None	replace
1330	[BUG]  [BUGGY]  if(validator  ==  null  &&  propertyNode  ==  null)  {  finishPropertyContinuations();  }  [CE]  cannot  find  symbol  propertyNode  [FE]                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(validator  ==  null  &&  propertyNode  ==  null)  {  finishPropertyContinuations();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(validator  ==  null  &&  propertyNode  ==  null)  {  finishPropertyContinuations();  }	  if(validator!=    null    &&    propertyNode    ==    null)    {    finishPropertyContinuations();    }    	non-compiled	[CE]  cannot  find  symbol  propertyNode	208	None	replace
1331	[BUG]  [BUGGY]  PropertyGeneration  propertyContinuations  =  propertyContinuations.get(propertyName);  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  PropertyGeneration  propertyContinuations  =  propertyContinuations.get(propertyName);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	PropertyGeneration  propertyContinuations  =  propertyContinuations.get(propertyName);	  if(propertyContinuations!=    null)    {    finishPropertyGeneration();    }    else    {    propertyContinuations.add(propertyName);    }    	non-compiled	[CE]  cannot  find  symbol	225	None	replace
1332	[BUG]  [BUGGY]  PropertyGeneration  <  Property>  propertyContinuations  =  propertyContinuations.get(propertyName);  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  PropertyGeneration  <  Property>  propertyContinuations  =  propertyContinuations.get(propertyName);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	PropertyGeneration  <  Property>  propertyContinuations  =  propertyContinuations.get(propertyName);	  if(propertyContinuations!=    null)    {    finishPropertyGeneration();    }    else    {    propertyContinuations.add(propertyName);    }    	non-compiled	[CE]  cannot  find  symbol	225	None	replace
1333	[BUG]  [BUGGY]  inferred  &&  resolved)  {  finishPropertyContinuations();  }  else  {  registry.isLastGeneration()  :  this;  }  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  inferred  &&  resolved)  {  finishPropertyContinuations();  }  else  {  registry.isLastGeneration()  :  this;  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	inferred  &&  resolved)  {  finishPropertyContinuations();  }  else  {  registry.isLastGeneration()  :  this;  }	  aughtExceptionHandler    &&    resolved)    {    finishPropertyContinuations();    }    else    {    registry.isLastGeneration()    :    this;    }    	non-compiled	[CE]  not  a  statement	243	None	replace
1334	[BUG]  [BUGGY]  inferred)  {  finishPropertyContinuations();  }  else  {  registry.isLastGeneration()  :  this;  }  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  inferred)  {  finishPropertyContinuations();  }  else  {  registry.isLastGeneration()  :  this;  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	inferred)  {  finishPropertyContinuations();  }  else  {  registry.isLastGeneration()  :  this;  }	  aughtExceptionHandler    &&    resolved)    {    finishPropertyContinuations();    }    else    {    registry.isLastGeneration()    :    this;    }    	non-compiled	[CE]  not  a  statement	243	None	replace
1335	[BUG]  [BUGGY]  if(type  ==  null)  {  finishPropertyContinuations();  }  [CE]  cannot  find  symbol  type  [FE]                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(type  ==  null)  {  finishPropertyContinuations();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(type  ==  null)  {  finishPropertyContinuations();  }	  if(validator!=    null)    {    finishPropertyContinuations();    }    if(validator    >=    null)    {    finishPropertyContinuations();    }    	non-compiled	[CE]  cannot  find  symbol  type	56	None	replace
1336	[BUG]  [BUGGY]  if(type  ==  null)  {  finishPropertyType();  }  [CE]  cannot  find  symbol  type  [FE]                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(type  ==  null)  {  finishPropertyType();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(type  ==  null)  {  finishPropertyType();  }	  if(validator!=    null)    {    finishPropertyContinuations();    }    if(validator    >=    null)    {    finishPropertyContinuations();    }    	non-compiled	[CE]  cannot  find  symbol  type	56	None	replace
1337	[BUG]  [BUGGY]  Predicates.checkNotNull(propertyName);  [CE]  cannot  find  symbol  propertyName  [FE]                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Predicates.checkNotNull(propertyName);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Predicates.checkNotNull(propertyName);	  if(validator!=    null)    {    finishPropertyContinuations();    }    if(validator    >=    null)    {    finishPropertyContinuations();    }    	non-compiled	[CE]  cannot  find  symbol  propertyName	56	None	replace
1338	[BUG]  [BUGGY]  if(propertyContinuations!=  null)  {  startPropertyGenerator();  }  else  {  getPropertyContinuations().addAll(propertyContinuations);  }  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(propertyContinuations!=  null)  {  startPropertyGenerator();  }  else  {  getPropertyContinuations().addAll(propertyContinuations);  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations!=  null)  {  startPropertyGenerator();  }  else  {  getPropertyContinuations().addAll(propertyContinuations);  }	  if(propertyContinuations!=    null)    {    finishPropertyGenerator();    }    else    {    getPropertyContinuations().addAll(propertyContinuations);    }    	non-compiled	[CE]  cannot  find  symbol	214	None	replace
1339	[BUG]  [BUGGY]  if(propertyContinuations  ==  null)  {  finishPropertyGenerator();  }  else  {  getPropertyContinuations().addAll(propertyContinuations);  }  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(propertyContinuations  ==  null)  {  finishPropertyGenerator();  }  else  {  getPropertyContinuations().addAll(propertyContinuations);  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations  ==  null)  {  finishPropertyGenerator();  }  else  {  getPropertyContinuations().addAll(propertyContinuations);  }	  if(propertyContinuations!=    null)    {    finishPropertyGenerator();    }    else    {    getPropertyContinuations().addAll(propertyContinuations);    }    	non-compiled	[CE]  cannot  find  symbol	214	None	replace
1340	[BUG]  [BUGGY]  if(propertyContinuations!=  null)  {  finishGenerator();  }  else  {  getPropertyContinuations().addAll(propertyContinuations);  }  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(propertyContinuations!=  null)  {  finishGenerator();  }  else  {  getPropertyContinuations().addAll(propertyContinuations);  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations!=  null)  {  finishGenerator();  }  else  {  getPropertyContinuations().addAll(propertyContinuations);  }	  if(propertyContinuations!=    null)    {    finishPropertyGenerator();    }    else    {    getPropertyContinuations().addAll(propertyContinuations);    }    	non-compiled	[CE]  cannot  find  symbol	214	None	replace
1341	[BUG]  [BUGGY]  if(propertyContinuations!=  null)  {  finishPropertyGenerator();  }  else  {  getPropertyContinuations().addAll(properties);  }  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(propertyContinuations!=  null)  {  finishPropertyGenerator();  }  else  {  getPropertyContinuations().addAll(properties);  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations!=  null)  {  finishPropertyGenerator();  }  else  {  getPropertyContinuations().addAll(properties);  }	  if(propertyContinuations!=    null)    {    finishPropertyGenerator();    }    else    {    getPropertyContinuations().addAll(propertyContinuations);    }    	non-compiled	[CE]  cannot  find  symbol	214	None	replace
1342	[BUG]  [BUGGY]  if(propertyContinuations!=  null)  {  finishPropertyGenerator();  }  else  {  propertyContinuations().addAll(propertyContinuations);  }  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(propertyContinuations!=  null)  {  finishPropertyGenerator();  }  else  {  propertyContinuations().addAll(propertyContinuations);  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations!=  null)  {  finishPropertyGenerator();  }  else  {  propertyContinuations().addAll(propertyContinuations);  }	  if(propertyContinuations!=    null)    {    finishPropertyGenerator();    }    else    {    getPropertyContinuations().addAll(propertyContinuations);    }    	non-compiled	[CE]  cannot  find  symbol	214	None	replace
1343	[BUG]  [BUGGY]  if(propertyContinuations!=  null)  {  finishPropertyGenerator();  }  else  {  getPropertyContinuations().removeAll(propertyContinuations);  }  [CE]  cannot  find  symbol  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(propertyContinuations!=  null)  {  finishPropertyGenerator();  }  else  {  getPropertyContinuations().removeAll(propertyContinuations);  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations!=  null)  {  finishPropertyGenerator();  }  else  {  getPropertyContinuations().removeAll(propertyContinuations);  }	  if(propertyContinuations!=    null)    {    finishPropertyGenerator();    }    else    {    getPropertyContinuations().addAll(propertyContinuations);    }    	non-compiled	[CE]  cannot  find  symbol	214	None	replace
1344	[BUG]  [BUGGY]  if(enferred)  {  finishPropertyContinuations();  }  else  {  forAnnotations  =  Collections.emptyList();  }  [CE]  cannot  find  symbol  enferred  [FE]                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(enferred)  {  finishPropertyContinuations();  }  else  {  forAnnotations  =  Collections.emptyList();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(enferred)  {  finishPropertyContinuations();  }  else  {  forAnnotations  =  Collections.emptyList();  }	  if(forAnnotations!=    null)    {    finishPropertyContinuations();    }    else    {    forAnnotations    =    Collections.emptyList();    }    	non-compiled	[CE]  cannot  find  symbol  enferred	185	None	replace
1345	[BUG]  [BUGGY]  resolved  =  finishPropertyAnnotations(propertyNode);  [CE]  cannot  find  symbol  propertyNode  [FE]                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  resolved  =  finishPropertyAnnotations(propertyNode);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	resolved  =  finishPropertyAnnotations(propertyNode);	  resolved    =    finishPropertyContinuations();    	non-compiled	[CE]  cannot  find  symbol  propertyNode	218	None	replace
1346	[BUG]  [BUGGY]  resolved  =  resolvePropertyContinuations();  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  resolved  =  resolvePropertyContinuations();  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	resolved  =  resolvePropertyContinuations();	  resolved    =    finishPropertyContinuations();    	non-compiled	[CE]  cannot  find  symbol	218	None	replace
1347	[BUG]  [BUGGY]  resolved  =  finishPropertyAnnotations(t);  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  resolved  =  finishPropertyAnnotations(t);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	resolved  =  finishPropertyAnnotations(t);	  resolved    =    finishPropertyContinuations();    	non-compiled	[CE]  cannot  find  symbol	218	None	replace
1348	[BUG]  [BUGGY]  if(validator!=  null  &&  registry.isLastGeneration())  {  finishPropertyContinuations();  }  if(validator!=  null  &&  Registry.isLastGeneration())  {  finishPropertyContinuations();  }  [CE]  cannot  find  symbol  Registry  [FE]                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(validator!=  null  &&  registry.isLastGeneration())  {  finishPropertyContinuations();  }  if(validator!=  null  &&  Registry.isLastGeneration())  {  finishPropertyContinuations();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(validator!=    null    &&    registry.isLastGeneration())    {    finishPropertyContinuations();    }    if(validator!=  null  &&  Registry.isLastGeneration())  {  finishPropertyContinuations();  }	  timeout    	non-compiled	[CE]  cannot  find  symbol  Registry	235	None	add
1349	[BUG]  [BUGGY]  if(resolved)  {  startPropertyGeneration();  }  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(resolved)  {  startPropertyGeneration();  }  [BUGGY]    null)  {  finishPropertyContinuations();  }  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(resolved)  {  startPropertyGeneration();  }	  if(validator!=    null)    {    finishPropertyContinuations();    }    if(validator    	non-compiled	[CE]  cannot  find  symbol	58	None	replace
1350	[BUG]  [BUGGY]  Predicate  <?>  propertyNode  =  getPropertyNode(propertyName);  [CE]  cannot  find  symbol  propertyName  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Predicate  <?>  propertyNode  =  getPropertyNode(propertyName);  [BUGGY]    null)  {  finishPropertyContinuations();  }  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Predicate  <?>  propertyNode  =  getPropertyNode(propertyName);	  if(validator!=    null)    {    finishPropertyContinuations();    }    if(validator    	non-compiled	[CE]  cannot  find  symbol  propertyName	58	None	replace
1351	[BUG]  [BUGGY]  Predicate  <?>  propertyNode  =  getPropertyNode();  [CE]  method  getPropertyNode  in  class  ObjectType  cannot  be  applied  to  given  types;  [FE]                            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Predicate  <?>  propertyNode  =  getPropertyNode();  [BUGGY]    null)  {  finishPropertyContinuations();  }  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Predicate  <?>  propertyNode  =  getPropertyNode();	  if(validator!=    null)    {    finishPropertyContinuations();    }    if(validator    	non-compiled	[CE]  method  getPropertyNode  in  class  ObjectType  cannot  be  applied  to  given  types;	58	None	replace
1352	[BUG]  [BUGGY]  Predicate  <?>  registry  =  getRegistry();  [CE]  cannot  find  symbol  [FE]                              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Predicate  <?>  registry  =  getRegistry();  [BUGGY]    null)  {  finishPropertyContinuations();  }  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Predicate  <?>  registry  =  getRegistry();	  if(validator!=    null)    {    finishPropertyContinuations();    }    if(validator    	non-compiled	[CE]  cannot  find  symbol	58	None	replace
1353	[BUG]  [BUGGY]  Parchet.checkState(registered  ||  registry.isLastGeneration());  [CE]  cannot  find  symbol  registered  [FE]                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Parchet.checkState(registered  ||  registry.isLastGeneration());  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Parchet.checkState(registered  ||  registry.isLastGeneration());	  Parchet.checkState(resolved    ||    registry.isLastGeneration());    	non-compiled	[CE]  cannot  find  symbol  registered	107	None	replace
1354	[BUG]  [BUGGY]  Parchet.checkState(registry.isLastGeneration()  ||  resolved);  [CE]  cannot  find  symbol  Parchet  [FE]                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Parchet.checkState(registry.isLastGeneration()  ||  resolved);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Parchet.checkState(registry.isLastGeneration()  ||  resolved);	  Parchet.checkState(resolved    ||    registry.isLastGeneration());    	non-compiled	[CE]  cannot  find  symbol  Parchet	107	None	replace
1355	[BUG]  [BUGGY]  Parchet.checkState(resolved  ||  registry.isLastGeneration(),  enclosing);  [CE]  cannot  find  symbol  Parchet  [FE]                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Parchet.checkState(resolved  ||  registry.isLastGeneration(),  enclosing);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Parchet.checkState(resolved  ||  registry.isLastGeneration(),  enclosing);	  Parchet.checkState(resolved    ||    registry.isLastGeneration());    	non-compiled	[CE]  cannot  find  symbol  Parchet	107	None	replace
1356	[BUG]  [BUGGY]  if(propertyContinuations!=  null)  {  finishPropertyValues();  }  else  {  forAnnotations  =  Collections.EMPTYList();  }  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(propertyContinuations!=  null)  {  finishPropertyValues();  }  else  {  forAnnotations  =  Collections.EMPTYList();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations!=  null)  {  finishPropertyValues();  }  else  {  forAnnotations  =  Collections.EMPTYList();  }	  if(propertyContinuations!=    null)    {    finishPropertyValues();    }    else    {    forAnnotations    =    Collections.emptyList();    }    	non-compiled	[CE]  cannot  find  symbol	186	None	replace
1357	[BUG]  [BUGGY]  if(propertyContinuations  ==  null)  {  finishPropertyValues();  }  else  {  forAnnotations  =  Collections.emptyList();  }  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(propertyContinuations  ==  null)  {  finishPropertyValues();  }  else  {  forAnnotations  =  Collections.emptyList();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations  ==  null)  {  finishPropertyValues();  }  else  {  forAnnotations  =  Collections.emptyList();  }	  if(propertyContinuations!=    null)    {    finishPropertyValues();    }    else    {    forAnnotations    =    Collections.emptyList();    }    	non-compiled	[CE]  cannot  find  symbol	186	None	replace
1358	[BUG]  [BUGGY]  if(propertyContinuations!=  null)  {  startPropertyValues();  }  else  {  forAnnotations  =  Collections.emptyList();  }  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(propertyContinuations!=  null)  {  startPropertyValues();  }  else  {  forAnnotations  =  Collections.emptyList();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations!=  null)  {  startPropertyValues();  }  else  {  forAnnotations  =  Collections.emptyList();  }	  if(propertyContinuations!=    null)    {    finishPropertyValues();    }    else    {    forAnnotations    =    Collections.emptyList();    }    	non-compiled	[CE]  cannot  find  symbol	186	None	replace
1359	[BUG]  [BUGGY]  luate(resolved,  propertyNode)  {  finishPropertyContinuations();  }  else  {  register.isLastGeneration()?  getReferencedType()  :  null;  }  [CE]  ';'  expected  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  luate(resolved,  propertyNode)  {  finishPropertyContinuations();  }  else  {  register.isLastGeneration()?  getReferencedType()  :  null;  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	luate(resolved,  propertyNode)  {  finishPropertyContinuations();  }  else  {  register.isLastGeneration()?  getReferencedType()  :  null;  }	  luate(registry,    resolved)    {    finishPropertyContinuations();    }    else    {    register.isLastGeneration()?    getReferencedType()    :    null;    }    	non-compiled	[CE]  ';'  expected	182	None	replace
1360	[BUG]  [BUGGY]  luate(registry,  enclosing)  {  getPropertyContinuations();  }  else  {  register.isLastGeneration()?  getReferencedType()  :  null;  }  [CE]  ';'  expected  [FE]                            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  luate(registry,  enclosing)  {  getPropertyContinuations();  }  else  {  register.isLastGeneration()?  getReferencedType()  :  null;  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	luate(registry,  enclosing)  {  getPropertyContinuations();  }  else  {  register.isLastGeneration()?  getReferencedType()  :  null;  }	  luate(registry,    resolved)    {    finishPropertyContinuations();    }    else    {    register.isLastGeneration()?    getReferencedType()    :    null;    }    	non-compiled	[CE]  ';'  expected	182	None	replace
1361	[BUG]  [BUGGY]  predicate.setPropertyGeneration(validator);  [CE]  cannot  find  symbol  predicate  [FE]                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  predicate.setPropertyGeneration(validator);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	predicate.setPropertyGeneration(validator);	  predicate.finishPropertyGeneration();    	non-compiled	[CE]  cannot  find  symbol  predicate	141	None	replace
1362	[BUG]  [BUGGY]  predicate.validatePropertyGeneration();  [CE]  cannot  find  symbol  predicate  [FE]                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  predicate.validatePropertyGeneration();  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	predicate.validatePropertyGeneration();	  predicate.finishPropertyGeneration();    	non-compiled	[CE]  cannot  find  symbol  predicate	141	None	replace
1363	[BUG]  [BUGGY]  Preconditions.checkState(propertyContinuations!=  null  &&  propertyContinuations.size()  >  1)  {  finishPropertyContinuations();  }  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Preconditions.checkState(propertyContinuations!=  null  &&  propertyContinuations.size()  >  1)  {  finishPropertyContinuations();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Preconditions.checkState(propertyContinuations!=  null  &&  propertyContinuations.size()  >  1)  {  finishPropertyContinuations();  }	  if(propertyContinuations!=    null    &&    propertyContinuations.size()    >    1)    {    finishPropertyContinuations();    }    timeout    	non-compiled	[CE]  ';'  expected	259	None	replace
1364	[BUG]  [BUGGY]  if(propertyContinuations!=  null  &&  propertyContinuations.size()  >  0)  {  startPropertyContinuations();  }  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(propertyContinuations!=  null  &&  propertyContinuations.size()  >  0)  {  startPropertyContinuations();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations!=  null  &&  propertyContinuations.size()  >  0)  {  startPropertyContinuations();  }	  if(propertyContinuations!=    null    &&    propertyContinuations.size()    >    1)    {    finishPropertyContinuations();    }    timeout    	non-compiled	[CE]  cannot  find  symbol	259	None	replace
1365	[BUG]  [BUGGY]  if(propertyContinuations!=  null  &&  propertyContinuations.size()  >  0)  {  startPropertyGeneration();  }  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(propertyContinuations!=  null  &&  propertyContinuations.size()  >  0)  {  startPropertyGeneration();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations!=  null  &&  propertyContinuations.size()  >  0)  {  startPropertyGeneration();  }	  if(propertyContinuations!=    null    &&    propertyContinuations.size()    >    1)    {    finishPropertyContinuations();    }    timeout    	non-compiled	[CE]  cannot  find  symbol	259	None	replace
1366	[BUG]  [BUGGY]  if(propertyContinuations!=  null  &&  propertyContinuations.size()  >  0)  {  endPropertyContinuations();  }  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(propertyContinuations!=  null  &&  propertyContinuations.size()  >  0)  {  endPropertyContinuations();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations!=  null  &&  propertyContinuations.size()  >  0)  {  endPropertyContinuations();  }	  if(propertyContinuations!=    null    &&    propertyContinuations.size()    >    1)    {    finishPropertyContinuations();    }    timeout    	non-compiled	[CE]  cannot  find  symbol	259	None	replace
1367	[BUG]  [BUGGY]  if(propertyContinuations!=  null  &&  propertyContinuations.size()  >  0)  {  handlePropertyContinuations();  }  [CE]  cannot  find  symbol  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(propertyContinuations!=  null  &&  propertyContinuations.size()  >  0)  {  handlePropertyContinuations();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations!=  null  &&  propertyContinuations.size()  >  0)  {  handlePropertyContinuations();  }	  if(propertyContinuations!=    null    &&    propertyContinuations.size()    >    1)    {    finishPropertyContinuations();    }    timeout    	non-compiled	[CE]  cannot  find  symbol	259	None	replace
1368	[BUG]  [BUGGY]  if(propertyContinuations!=  null)  {  startProperty();  }  else  {  getPropertyContinuations().addAll(propertyContinuations);  }  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(propertyContinuations!=  null)  {  startProperty();  }  else  {  getPropertyContinuations().addAll(propertyContinuations);  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations!=  null)  {  startProperty();  }  else  {  getPropertyContinuations().addAll(propertyContinuations);  }	  if(propertyContinuations!=    null)    {    finishProperty();    }    else    {    getPropertyContinuations().addAll(propertyContinuations);    }    	non-compiled	[CE]  cannot  find  symbol	124	None	replace
1369	[BUG]  [BUGGY]  if(propertyContinuations!=  null)  {  finishProperty();  }  else  {  propertyContinuations().addAll(propertyContinuations);  }  [CE]  cannot  find  symbol  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(propertyContinuations!=  null)  {  finishProperty();  }  else  {  propertyContinuations().addAll(propertyContinuations);  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations!=  null)  {  finishProperty();  }  else  {  propertyContinuations().addAll(propertyContinuations);  }	  if(propertyContinuations!=    null)    {    finishProperty();    }    else    {    getPropertyContinuations().addAll(propertyContinuations);    }    	non-compiled	[CE]  cannot  find  symbol	124	None	replace
1370	[BUG]  [BUGGY]  if(propertyContinuations!=  null)  {  finishProperty();  }  else  {  getPropertyContinuations().removeAll(propertyContinuations);  }  [CE]  cannot  find  symbol  [FE]                            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(propertyContinuations!=  null)  {  finishProperty();  }  else  {  getPropertyContinuations().removeAll(propertyContinuations);  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations!=  null)  {  finishProperty();  }  else  {  getPropertyContinuations().removeAll(propertyContinuations);  }	  if(propertyContinuations!=    null)    {    finishProperty();    }    else    {    getPropertyContinuations().addAll(propertyContinuations);    }    	non-compiled	[CE]  cannot  find  symbol	124	None	replace
1371	[BUG]  [BUGGY]  if(propertyContinuations!=  null)  {  finishProperty();  }  else  {  getPropertyContinuations().addAll(properties);  }  [CE]  cannot  find  symbol  [FE]                              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(propertyContinuations!=  null)  {  finishProperty();  }  else  {  getPropertyContinuations().addAll(properties);  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations!=  null)  {  finishProperty();  }  else  {  getPropertyContinuations().addAll(properties);  }	  if(propertyContinuations!=    null)    {    finishProperty();    }    else    {    getPropertyContinuations().addAll(propertyContinuations);    }    	non-compiled	[CE]  cannot  find  symbol	124	None	replace
1372	[BUG]  [BUGGY]  if(validator!=    null)    {    finishPropertyContinuations();    }    if(validator  ==  null)  {  finishPropertyContinuations();  }  if(validator!=  null)  {  finishPropertyContinuations();  }  if(validator!=  null)  {  finishPropertyContinuations();  }  if(validator  ==  null)  {  finishPropertyContinu  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(validator!=    null)    {    finishPropertyContinuations();    }    if(validator  ==  null)  {  finishPropertyContinuations();  }  if(validator!=  null)  {  finishPropertyContinuations();  }  if(validator!=  null)  {  finishPropertyContinuations();  }  if(validator  ==  null)  {  finishPropertyContinu  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(validator!=        null)        {        finishPropertyContinuations();        }        if(validator    ==    null)    {    finishPropertyContinuations();    }    if(validator!=  null)  {  finishPropertyContinuations();  }  if(validator!=  null)  {  finishPropertyContinuations();  }  if(validator  ==  null)  {  finishPropertyContinu	  timeout    	non-compiled	[CE]  ';'  expected	52	None	add
1373	[BUG]  [BUGGY]  timeout  [FE]                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(validator!=    null)    {    finishPropertyContinuations();    }    if(validator  ==  null)  {  finishPropertyContinuations();  }  if(validator!=  null)  {  finishPropertyContinuations();  }  if(validator!=  null)  {  finishPropertyContinuations();  }  if(validator!=  null)  {  finishPropertyContinuations();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	add	if(validator!=        null)        {        finishPropertyContinuations();        }        if(validator    ==    null)    {    finishPropertyContinuations();    }    if(validator!=  null)  {  finishPropertyContinuations();  }  if(validator!=  null)  {  finishPropertyContinuations();  }  if(validator!=  null)  {  finishPropertyContinuations();  }	  timeout    	compilable	timeout	52	1	add
1374	[BUG]  [BUGGY]  if(validator!=    null)    {    finishPropertyContinuations();    }    if(validator  ==  null)  {  finishPropertyContinuations();  }  if(validator!=  null)  {  finishPropertyContinuations();  }  if(validator!=  null)  {  finishPropertyContinuations();  }  if(validator!=  null)  {  finishPropertyContinuations();  }  timeout  [FE]                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(validator!=    null)    {    finishPropertyContinuations();    }    if(validator  ==  null)  {  finishPropertyContinuations();  }  if(validator!=  null)  {  finishPropertyContinuations();  }  if(validator!=  null)  {  finishPropertyContinuations();  }  if(validator!=  null)  {  finishPropertyContinuations();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(validator!=        null)        {        finishPropertyContinuations();        }        if(validator    ==    null)    {    finishPropertyContinuations();    }    if(validator!=  null)  {  finishPropertyContinuations();  }  if(validator!=  null)  {  finishPropertyContinuations();  }  if(validator!=  null)  {  finishPropertyContinuations();  }	  timeout    	compilable	timeout	52	1	add
1375	[BUG]  [BUGGY]  if(validator!=    null)    {    finishPropertyContinuations();    }    if(validator  ==  null)  {  finishPropertyContinuations();  }  if(validator!=  null)  {  finishPropertyContinuations();  }  if(validator!=  null)  {  finishPropertyContinuations();  }  if(validator  ==  null)  {  finishPropertyContinuations()  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(validator!=    null)    {    finishPropertyContinuations();    }    if(validator  ==  null)  {  finishPropertyContinuations();  }  if(validator!=  null)  {  finishPropertyContinuations();  }  if(validator!=  null)  {  finishPropertyContinuations();  }  if(validator  ==  null)  {  finishPropertyContinuations()  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(validator!=        null)        {        finishPropertyContinuations();        }        if(validator    ==    null)    {    finishPropertyContinuations();    }    if(validator!=  null)  {  finishPropertyContinuations();  }  if(validator!=  null)  {  finishPropertyContinuations();  }  if(validator  ==  null)  {  finishPropertyContinuations()	  timeout    	non-compiled	[CE]  ';'  expected	52	None	add
1376	[BUG]  [BUGGY]  Register.isLastGeneration()  :  registry.getLastGeneration();  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Register.isLastGeneration()  :  registry.getLastGeneration();  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Register.isLastGeneration()  :  registry.getLastGeneration();	  Register.isLastGeneration()    :    registry.isLastGeneration();    	non-compiled	[CE]  ';'  expected	246	None	replace
1377	[BUG]  [BUGGY]  Register.isLastGeneration()  :  registry.getFirstGeneration();  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Register.isLastGeneration()  :  registry.getFirstGeneration();  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Register.isLastGeneration()  :  registry.getFirstGeneration();	  Register.isLastGeneration()    :    registry.isLastGeneration();    	non-compiled	[CE]  ';'  expected	246	None	replace
1378	[BUG]  [BUGGY]  Register.isLastGeneration()  :  registry.getNativeObjectType(JSTypeNative.UNKNOWN_TYPE);  [CE]  ';'  expected  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Register.isLastGeneration()  :  registry.getNativeObjectType(JSTypeNative.UNKNOWN_TYPE);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Register.isLastGeneration()  :  registry.getNativeObjectType(JSTypeNative.UNKNOWN_TYPE);	  Register.isLastGeneration()    :    registry.isLastGeneration();    	non-compiled	[CE]  ';'  expected	246	None	replace
1379	[BUG]  [BUGGY]  Register.isLastGeneration()  :  registry.getNativeObjectType(JSTypeNative.NO_TYPE);  [CE]  ';'  expected  [FE]                            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Register.isLastGeneration()  :  registry.getNativeObjectType(JSTypeNative.NO_TYPE);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Register.isLastGeneration()  :  registry.getNativeObjectType(JSTypeNative.NO_TYPE);	  Register.isLastGeneration()    :    registry.isLastGeneration();    	non-compiled	[CE]  ';'  expected	246	None	replace
1380	[BUG]  [BUGGY]  Annotations  condition  =  getPropertyContinuations(propertyNamingStrategy);  [CE]  cannot  find  symbol  [FE]                            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Annotations  condition  =  getPropertyContinuations(propertyNamingStrategy);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Annotations  condition  =  getPropertyContinuations(propertyNamingStrategy);	  Annotations    condition    =    getPropertyContinuations();    	non-compiled	[CE]  cannot  find  symbol	197	None	replace
1381	[BUG]  [BUGGY]  Annotations  condition  =  getPropertyContinuationsForType(propertyNode);  [CE]  cannot  find  symbol  [FE]                              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Annotations  condition  =  getPropertyContinuationsForType(propertyNode);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Annotations  condition  =  getPropertyContinuationsForType(propertyNode);	  Annotations    condition    =    getPropertyContinuations();    	non-compiled	[CE]  cannot  find  symbol	197	None	replace
1382	[BUG]  [BUGGY]  propertyContinuations!=  null  &&  propertyContinuations.size()  ==  0)  {  finishPropertyContinuations();  }  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  propertyContinuations!=  null  &&  propertyContinuations.size()  ==  0)  {  finishPropertyContinuations();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	propertyContinuations!=  null  &&  propertyContinuations.size()  ==  0)  {  finishPropertyContinuations();  }	  propertyContinuations!=    null    &&    propertyContinuations.size()    >    0)    {    finishPropertyContinuations();    }    	non-compiled	[CE]  not  a  statement	192	None	replace
1383	[BUG]  [BUGGY]  Registry.isLastGeneration()?  getReferencedType()  :  REFERENCE_TYPE;  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Registry.isLastGeneration()?  getReferencedType()  :  REFERENCE_TYPE;  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Registry.isLastGeneration()?  getReferencedType()  :  REFERENCE_TYPE;	  Registry.isLastGeneration()?    getReferencedType()    :    this;    	non-compiled	[CE]  not  a  statement	8	None	replace
1384	[BUG]  [BUGGY]  Registry.isLastGeneration()?  getReferencedType()  :  DEFAULT_TYPE;  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Registry.isLastGeneration()?  getReferencedType()  :  DEFAULT_TYPE;  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Registry.isLastGeneration()?  getReferencedType()  :  DEFAULT_TYPE;	  Registry.isLastGeneration()?    getReferencedType()    :    this;    	non-compiled	[CE]  not  a  statement	8	None	replace
1385	[BUG]  [BUGGY]  Registry.isLastGeneration()?  getReferencedType()  :  registry.getNativeType(UNKNOWN_TYPE);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Registry.isLastGeneration()?  getReferencedType()  :  registry.getNativeType(UNKNOWN_TYPE);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Registry.isLastGeneration()?  getReferencedType()  :  registry.getNativeType(UNKNOWN_TYPE);	  Registry.isLastGeneration()?    getReferencedType()    :    this;    	non-compiled	[CE]  not  a  statement	8	None	replace
1386	[BUG]  [BUGGY]  Registry.isLastGeneration()?  getReferencedType()  :  REFERENCED_TYPE;  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Registry.isLastGeneration()?  getReferencedType()  :  REFERENCED_TYPE;  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Registry.isLastGeneration()?  getReferencedType()  :  REFERENCED_TYPE;	  Registry.isLastGeneration()?    getReferencedType()    :    this;    	non-compiled	[CE]  not  a  statement	8	None	replace
1387	[BUG]  [BUGGY]  Parchet.checkState(resolved  ||!resolved)  {  finishPropertyContinuations();  }  else  {  registry.isLastGeneration()  :  getReferencedType();  }  [CE]  ';'  expected  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Parchet.checkState(resolved  ||!resolved)  {  finishPropertyContinuations();  }  else  {  registry.isLastGeneration()  :  getReferencedType();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Parchet.checkState(resolved  ||!resolved)  {  finishPropertyContinuations();  }  else  {  registry.isLastGeneration()  :  getReferencedType();  }	  Parchet.checkState(resolved    ||    resolved)    {    finishPropertyContinuations();    }    else    {    registry.isLastGeneration()    :    getReferencedType();    }    	non-compiled	[CE]  ';'  expected	110	None	replace
1388	[BUG]  [BUGGY]  if(validator  ==  null)  {  finishPropertyGeneration();  }  else  {  registry.isLastGeneration()  :  this;  }  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(validator  ==  null)  {  finishPropertyGeneration();  }  else  {  registry.isLastGeneration()  :  this;  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(validator  ==  null)  {  finishPropertyGeneration();  }  else  {  registry.isLastGeneration()  :  this;  }	  if(validator!=    null)    {    finishPropertyGeneration();    }    else    {    registry.isLastGeneration()    :    this;    }    	non-compiled	[CE]  ';'  expected	240	None	replace
1389	[BUG]  [BUGGY]  validator!=  null  &&  validator.getType()  ==  Token.FUNCTION)  {  finishPropertyGeneration();  }  else  {  registry.isLastGeneration()  :  this;  }  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  validator!=  null  &&  validator.getType()  ==  Token.FUNCTION)  {  finishPropertyGeneration();  }  else  {  registry.isLastGeneration()  :  this;  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	validator!=  null  &&  validator.getType()  ==  Token.FUNCTION)  {  finishPropertyGeneration();  }  else  {  registry.isLastGeneration()  :  this;  }	  if(validator!=    null)    {    finishPropertyGeneration();    }    else    {    registry.isLastGeneration()    :    this;    }    	non-compiled	[CE]  not  a  statement	240	None	replace
1390	[BUG]  [BUGGY]  Annotations  inferred  =  resolveViaRegistry(t,  enclosing,  properties);  [CE]  cannot  find  symbol  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Annotations  inferred  =  resolveViaRegistry(t,  enclosing,  properties);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Annotations  inferred  =  resolveViaRegistry(t,  enclosing,  properties);	  Annotations    inferred    =    resolveViaRegistry(t,    enclosing);    	non-compiled	[CE]  cannot  find  symbol	177	None	replace
1391	[BUG]  [BUGGY]  if(resolved)  {  startPropertyGenerations();  }  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(resolved)  {  startPropertyGenerations();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(resolved)  {  startPropertyGenerations();  }	  if(resolved)    {    finishPropertyContinuations();    }    if(resolved)    {    startPropertyContinuations();    }    	non-compiled	[CE]  cannot  find  symbol	36	None	replace
1392	[BUG]  [BUGGY]  timeout  [FE]                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(!resolved)  {  finishPropertyContinuations();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	add	if(!resolved)  {  finishPropertyContinuations();  }	  if(resolved)    {    finishPropertyContinuations();    }    if(resolved)    {    startPropertyContinuations();    }    	compilable	timeout	36	1	replace
1393	[BUG]  [BUGGY]  if(!resolved)  {  finishPropertyContinuations();  }  timeout  [FE]                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(!resolved)  {  finishPropertyContinuations();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(!resolved)  {  finishPropertyContinuations();  }	  if(resolved)    {    finishPropertyContinuations();    }    if(resolved)    {    startPropertyContinuations();    }    	compilable	timeout	36	1	replace
1394	[BUG]  [BUGGY]  if(resolved)  {  startPropertyAnnotations();  }  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(resolved)  {  startPropertyAnnotations();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(resolved)  {  startPropertyAnnotations();  }	  if(resolved)    {    finishPropertyContinuations();    }    if(resolved)    {    startPropertyContinuations();    }    	non-compiled	[CE]  cannot  find  symbol	36	None	replace
1395	[BUG]  [BUGGY]  if(resolved)  {  startPropertyInferred();  }  [CE]  cannot  find  symbol  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(resolved)  {  startPropertyInferred();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(resolved)  {  startPropertyInferred();  }	  if(resolved)    {    finishPropertyContinuations();    }    if(resolved)    {    startPropertyContinuations();    }    	non-compiled	[CE]  cannot  find  symbol	36	None	replace
1396	[BUG]  [BUGGY]  Parchet.checkNotNull(register);  [CE]  cannot  find  symbol  register  [FE]                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Parchet.checkNotNull(register);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Parchet.checkNotNull(register);	  Parchet.checkNotNull(validator);    	non-compiled	[CE]  cannot  find  symbol  register	32	None	replace
1397	[BUG]  [BUGGY]  if(propertyContinuations  ==  null)  {  finishPropertyAnnotations();  }  else  {  propertyContinuations.add(propertyName);  }  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(propertyContinuations  ==  null)  {  finishPropertyAnnotations();  }  else  {  propertyContinuations.add(propertyName);  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations  ==  null)  {  finishPropertyAnnotations();  }  else  {  propertyContinuations.add(propertyName);  }	  if(propertyContinuations!=    null)    {    finishPropertyAnnotations();    }    else    {    propertyContinuations.add(propertyName);    }    	non-compiled	[CE]  cannot  find  symbol	153	None	replace
1398	[BUG]  [BUGGY]  if(propertyContinuations!=  null)  {  finishPropertyAnnotations();  }  else  {  properties.add(propertyName);  }  [CE]  cannot  find  symbol  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(propertyContinuations!=  null)  {  finishPropertyAnnotations();  }  else  {  properties.add(propertyName);  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations!=  null)  {  finishPropertyAnnotations();  }  else  {  properties.add(propertyName);  }	  if(propertyContinuations!=    null)    {    finishPropertyAnnotations();    }    else    {    propertyContinuations.add(propertyName);    }    	non-compiled	[CE]  cannot  find  symbol	153	None	replace
1399	[BUG]  [BUGGY]  PropertyContinuations  registry  =  getPropertyContinuations(property);  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  PropertyContinuations  registry  =  getPropertyContinuations(property);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	PropertyContinuations  registry  =  getPropertyContinuations(property);	  PropertyContinuations    registry    =    getPropertyContinuations();    	non-compiled	[CE]  cannot  find  symbol	103	None	replace
1400	[BUG]  [BUGGY]  if(validator!=  null)  {  startPropertyGenerations();  }  else  {  registry.isLastGeneration()?  getReferencedType()  :  this;  }  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(validator!=  null)  {  startPropertyGenerations();  }  else  {  registry.isLastGeneration()?  getReferencedType()  :  this;  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(validator!=  null)  {  startPropertyGenerations();  }  else  {  registry.isLastGeneration()?  getReferencedType()  :  this;  }	  if(validator!=    null)    {    startPropertyContinuations();    }    else    {    registry.isLastGeneration()?    getReferencedType()    :    this;    }    	non-compiled	[CE]  not  a  statement	234	None	replace
1401	[BUG]  [BUGGY]  if(validator!=  null)  {  startPropertyType();  }  else  {  registry.isLastGeneration()?  getReferencedType()  :  this;  }  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(validator!=  null)  {  startPropertyType();  }  else  {  registry.isLastGeneration()?  getReferencedType()  :  this;  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(validator!=  null)  {  startPropertyType();  }  else  {  registry.isLastGeneration()?  getReferencedType()  :  this;  }	  if(validator!=    null)    {    startPropertyContinuations();    }    else    {    registry.isLastGeneration()?    getReferencedType()    :    this;    }    	non-compiled	[CE]  not  a  statement	234	None	replace
1402	[BUG]  [BUGGY]  if(validator!=  null)  {  startPropertyStatement();  }  else  {  registry.isLastGeneration()?  getReferencedType()  :  this;  }  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(validator!=  null)  {  startPropertyStatement();  }  else  {  registry.isLastGeneration()?  getReferencedType()  :  this;  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(validator!=  null)  {  startPropertyStatement();  }  else  {  registry.isLastGeneration()?  getReferencedType()  :  this;  }	  if(validator!=    null)    {    startPropertyContinuations();    }    else    {    registry.isLastGeneration()?    getReferencedType()    :    this;    }    	non-compiled	[CE]  not  a  statement	234	None	replace
1403	[BUG]  [BUGGY]  timeout  [FE]                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Preconditions.checkState(resolved);  Preconditions.checkState(resolved);Preconditions.checkState(resolved);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	add	Preconditions.checkState(resolved);    Preconditions.checkState(resolved);Preconditions.checkState(resolved);	  timeout    	compilable	timeout	220	1	add
1404	[BUG]  [BUGGY]  Preconditions.checkState(resolved);  Preconditions.checkState(resolved);Preconditions.checkState(resolved);  timeout  [FE]                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Preconditions.checkState(resolved);  Preconditions.checkState(resolved);Preconditions.checkState(resolved);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Preconditions.checkState(resolved);    Preconditions.checkState(resolved);Preconditions.checkState(resolved);	  timeout    	compilable	timeout	220	1	add
1405	[BUG]  [BUGGY]  timeout  [FE]                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Preconditions.checkState(resolved);  Preconditions.checkState(resolved);  }  else  {  Preconditions.checkState(resolved);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	add	Preconditions.checkState(resolved);    Preconditions.checkState(resolved);  }  else  {  Preconditions.checkState(resolved);	  timeout    	compilable	timeout	220	1	add
1406	[BUG]  [BUGGY]  Preconditions.checkState(resolved);  Preconditions.checkState(resolved);  }  else  {  Preconditions.checkState(resolved);  timeout  [FE]                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Preconditions.checkState(resolved);  Preconditions.checkState(resolved);  }  else  {  Preconditions.checkState(resolved);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Preconditions.checkState(resolved);    Preconditions.checkState(resolved);  }  else  {  Preconditions.checkState(resolved);	  timeout    	compilable	timeout	220	1	add
1407	[BUG]  [BUGGY]  Preconditions.checkState(resolved);  Preconditions.checkState(resolved);  this.validator  =  getReferencedType();  [CE]  incompatible  types  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Preconditions.checkState(resolved);  Preconditions.checkState(resolved);  this.validator  =  getReferencedType();  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Preconditions.checkState(resolved);    Preconditions.checkState(resolved);  this.validator  =  getReferencedType();	  timeout    	non-compiled	[CE]  incompatible  types	220	None	add
1408	[BUG]  [BUGGY]  Preconditions.checkState(resolved);  preconditions.checkState(resolved);  [CE]  cannot  find  symbol  preconditions  [FE]                            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Preconditions.checkState(resolved);  preconditions.checkState(resolved);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Preconditions.checkState(resolved);    preconditions.checkState(resolved);	  timeout    	non-compiled	[CE]  cannot  find  symbol  preconditions	220	None	add
1409	[BUG]  [BUGGY]  Preconditions.checkState(resolved);  Preconditions.checkState(resolved);  this.validator  =  enclosing;  [CE]  incompatible  types  [FE]                              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Preconditions.checkState(resolved);  Preconditions.checkState(resolved);  this.validator  =  enclosing;  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Preconditions.checkState(resolved);    Preconditions.checkState(resolved);  this.validator  =  enclosing;	  timeout    	non-compiled	[CE]  incompatible  types	220	None	add
1410	[BUG]  [BUGGY]  timeout  [FE]                                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Preconditions.checkState(resolved);  Preconditions.checkState(resolved);  setReferencedType(null);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	add	Preconditions.checkState(resolved);    Preconditions.checkState(resolved);  setReferencedType(null);	  timeout    	compilable	timeout	220	1	add
1411	[BUG]  [BUGGY]  Preconditions.checkState(resolved);  Preconditions.checkState(resolved);  setReferencedType(null);  timeout  [FE]                                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Preconditions.checkState(resolved);  Preconditions.checkState(resolved);  setReferencedType(null);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Preconditions.checkState(resolved);    Preconditions.checkState(resolved);  setReferencedType(null);	  timeout    	compilable	timeout	220	1	add
1412	[BUG]  [BUGGY]  if(propertyNode  ==  null)  {  finishPropertyAnnotations();  }  [CE]  cannot  find  symbol  propertyNode  [FE]                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(propertyNode  ==  null)  {  finishPropertyAnnotations();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyNode  ==  null)  {  finishPropertyAnnotations();  }	  if(propertyContinuations    ==    null)    {    finishPropertyContinuations();    }    if(propertyContinuations    {    null)    {    finishPropertyContinuations();    }    	non-compiled	[CE]  cannot  find  symbol  propertyNode	163	None	replace
1413	[BUG]  [BUGGY]  validator!=  null  &&  validator.hasProperty(propertyName))  {  startPropertyGenerations();  }  else  {  registry.isLastGeneration()  :  this;  }  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  validator!=  null  &&  validator.hasProperty(propertyName))  {  startPropertyGenerations();  }  else  {  registry.isLastGeneration()  :  this;  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	validator!=  null  &&  validator.hasProperty(propertyName))  {  startPropertyGenerations();  }  else  {  registry.isLastGeneration()  :  this;  }	  if(validator!=    null)    {    startPropertyGenerations();    }    else    {    registry.isLastGeneration()    :    this;    }    	non-compiled	[CE]  not  a  statement	132	None	replace
1414	[BUG]  [BUGGY]  validator!=  null  &&  validator.getType()  ==  Token.FUNCTION)  {  startPropertyGenerations();  }  else  {  registry.isLastGeneration()  :  this;  }  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  validator!=  null  &&  validator.getType()  ==  Token.FUNCTION)  {  startPropertyGenerations();  }  else  {  registry.isLastGeneration()  :  this;  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	validator!=  null  &&  validator.getType()  ==  Token.FUNCTION)  {  startPropertyGenerations();  }  else  {  registry.isLastGeneration()  :  this;  }	  if(validator!=    null)    {    startPropertyGenerations();    }    else    {    registry.isLastGeneration()    :    this;    }    	non-compiled	[CE]  not  a  statement	132	None	replace
1415	[BUG]  [BUGGY]  if(validator!=  null)  {  registry.isLastGeneration()  :  this;  }  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(validator!=  null)  {  registry.isLastGeneration()  :  this;  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(validator!=  null)  {  registry.isLastGeneration()  :  this;  }	  if(validator!=    null)    {    startPropertyGenerations();    }    else    {    registry.isLastGeneration()    :    this;    }    	non-compiled	[CE]  ';'  expected	132	None	replace
1416	[BUG]  [BUGGY]  if(validator!=  null)  {  registry.isLastGeneration();  }  else  {  registry.isLastGeneration()  :  this;  }  [CE]  ';'  expected  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(validator!=  null)  {  registry.isLastGeneration();  }  else  {  registry.isLastGeneration()  :  this;  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(validator!=  null)  {  registry.isLastGeneration();  }  else  {  registry.isLastGeneration()  :  this;  }	  if(validator!=    null)    {    startPropertyGenerations();    }    else    {    registry.isLastGeneration()    :    this;    }    	non-compiled	[CE]  ';'  expected	132	None	replace
1417	[BUG]  [BUGGY]  if(validator!=  null)  {  finishPropertyAnnotations();  }  else  {  registry.isFirstGeneration()  :  this;  }  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(validator!=  null)  {  finishPropertyAnnotations();  }  else  {  registry.isFirstGeneration()  :  this;  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(validator!=  null)  {  finishPropertyAnnotations();  }  else  {  registry.isFirstGeneration()  :  this;  }	  if(validator    ==    null)    {    finishPropertyContinuations();    }    else    {    registry.isFirstGeneration()    :    this;    }    	non-compiled	[CE]  ';'  expected	134	None	replace
1418	[BUG]  [BUGGY]  if(validator!=  null)  {  finishProperty();  }  else  {  registry.isFirstGeneration()  :  this;  }  [CE]  ';'  expected  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(validator!=  null)  {  finishProperty();  }  else  {  registry.isFirstGeneration()  :  this;  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(validator!=  null)  {  finishProperty();  }  else  {  registry.isFirstGeneration()  :  this;  }	  if(validator    ==    null)    {    finishPropertyContinuations();    }    else    {    registry.isFirstGeneration()    :    this;    }    	non-compiled	[CE]  ';'  expected	134	None	replace
1419	[BUG]  [BUGGY]  Status.checkState(registry.isLastGeneration()?  getReferencedType()  :  null,  registry.isLastGeneration());  [CE]  cannot  find  symbol  Status  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Status.checkState(registry.isLastGeneration()?  getReferencedType()  :  null,  registry.isLastGeneration());  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Status.checkState(registry.isLastGeneration()?  getReferencedType()  :  null,  registry.isLastGeneration());	  Status.checkState(registry.isLastGeneration()?    getReferencedType()    :    null);    	non-compiled	[CE]  cannot  find  symbol  Status	74	None	replace
1420	[BUG]  [BUGGY]  Status.checkState(registry.isLastGeneration()?  getReferencedType()  :  null,  propertyNode);  [CE]  cannot  find  symbol  propertyNode  [FE]                            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Status.checkState(registry.isLastGeneration()?  getReferencedType()  :  null,  propertyNode);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Status.checkState(registry.isLastGeneration()?  getReferencedType()  :  null,  propertyNode);	  Status.checkState(registry.isLastGeneration()?    getReferencedType()    :    null);    	non-compiled	[CE]  cannot  find  symbol  propertyNode	74	None	replace
1421	[BUG]  [BUGGY]  if(propertyContinuations!=  null)  {  startPropertyAnnotations();  }  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(propertyContinuations!=  null)  {  startPropertyAnnotations();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations!=  null)  {  startPropertyAnnotations();  }	  if(propertyContinuations!=    null)    {    startPropertyContinuations();    }    	non-compiled	[CE]  cannot  find  symbol	252	None	replace
1422	[BUG]  [BUGGY]  if(propertyContinuations!=  null)  {  startPropertyConfig();  }  [CE]  cannot  find  symbol  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(propertyContinuations!=  null)  {  startPropertyConfig();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations!=  null)  {  startPropertyConfig();  }	  if(propertyContinuations!=    null)    {    startPropertyContinuations();    }    	non-compiled	[CE]  cannot  find  symbol	252	None	replace
1423	[BUG]  [BUGGY]  Annotations  validator  =  registry.isLastGeneration()?  getReferencedType()  :  type;  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Annotations  validator  =  registry.isLastGeneration()?  getReferencedType()  :  type;  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Annotations  validator  =  registry.isLastGeneration()?  getReferencedType()  :  type;	  Annotations    validator    =    registry.isLastGeneration()?    getReferencedType()    :    null;    	non-compiled	[CE]  cannot  find  symbol	73	None	replace
1424	[BUG]  [BUGGY]  Annotations  validator  =  registry.isLastGeneration()?  getReferencedType()  :  NodeUtil.getNativeType(JSTypeNative.NO_TYPE);  [CE]  cannot  find  symbol  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Annotations  validator  =  registry.isLastGeneration()?  getReferencedType()  :  NodeUtil.getNativeType(JSTypeNative.NO_TYPE);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Annotations  validator  =  registry.isLastGeneration()?  getReferencedType()  :  NodeUtil.getNativeType(JSTypeNative.NO_TYPE);	  Annotations    validator    =    registry.isLastGeneration()?    getReferencedType()    :    null;    	non-compiled	[CE]  cannot  find  symbol	73	None	replace
1425	[BUG]  [BUGGY]  Annotations  validator  =  registry.isLastGeneration()?  getReferencedType()  :  NodeUtil.getNativeType(UNKNOWN_TYPE);  [CE]  cannot  find  symbol  [FE]                            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Annotations  validator  =  registry.isLastGeneration()?  getReferencedType()  :  NodeUtil.getNativeType(UNKNOWN_TYPE);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Annotations  validator  =  registry.isLastGeneration()?  getReferencedType()  :  NodeUtil.getNativeType(UNKNOWN_TYPE);	  Annotations    validator    =    registry.isLastGeneration()?    getReferencedType()    :    null;    	non-compiled	[CE]  cannot  find  symbol	73	None	replace
1426	[BUG]  [BUGGY]  validator!=  null  &&  validator.getType()  ==  Token.FUNCTION)  {  startPropertyGeneration();  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  validator!=  null  &&  validator.getType()  ==  Token.FUNCTION)  {  startPropertyGeneration();  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	validator!=  null  &&  validator.getType()  ==  Token.FUNCTION)  {  startPropertyGeneration();	  validator!=    null    &&    validator.getType()    ==    Token.FUNCTION)    {    finishPropertyContinuations();    }    else    {    registry.isLastGeneration()    :    this;    }    	non-compiled	[CE]  not  a  statement	95	None	replace
1427	[BUG]  [BUGGY]  validator!=  null  &&  validator.getType()  ==  Token.FUNCTION)  {  startPropertyContinuations();  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  validator!=  null  &&  validator.getType()  ==  Token.FUNCTION)  {  startPropertyContinuations();  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	validator!=  null  &&  validator.getType()  ==  Token.FUNCTION)  {  startPropertyContinuations();	  validator!=    null    &&    validator.getType()    ==    Token.FUNCTION)    {    finishPropertyContinuations();    }    else    {    registry.isLastGeneration()    :    this;    }    	non-compiled	[CE]  not  a  statement	95	None	replace
1428	[BUG]  [BUGGY]  PropertyContinuations  <  PropertyContinuation>  endPropertyContinuations();  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  PropertyContinuations  <  PropertyContinuation>  endPropertyContinuations();  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	PropertyContinuations  <  PropertyContinuation>  endPropertyContinuations();	  PropertyContinuations    <    PropertyContinuation>    finishPropertyContinuations();    	non-compiled	[CE]  ';'  expected	112	None	replace
1429	[BUG]  [BUGGY]  PropertyContinuations  <  PropertyContinuation>  finishPropertyContinuations(propertyNode);  [CE]  ';'  expected  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  PropertyContinuations  <  PropertyContinuation>  finishPropertyContinuations(propertyNode);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	PropertyContinuations  <  PropertyContinuation>  finishPropertyContinuations(propertyNode);	  PropertyContinuations    <    PropertyContinuation>    finishPropertyContinuations();    	non-compiled	[CE]  ';'  expected	112	None	replace
1430	[BUG]  [BUGGY]  if(propertyContinuations!=  null)  {  handlePropertyInferred();  }  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(propertyContinuations!=  null)  {  handlePropertyInferred();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations!=  null)  {  handlePropertyInferred();  }	  if(propertyContinuations!=    null)    {    finishPropertyInferred();    }    	non-compiled	[CE]  cannot  find  symbol	136	None	replace
1431	[BUG]  [BUGGY]  if(propertyContinuations!=  null)  {  finishInferred();  }  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(propertyContinuations!=  null)  {  finishInferred();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations!=  null)  {  finishInferred();  }	  if(propertyContinuations!=    null)    {    finishPropertyInferred();    }    	non-compiled	[CE]  cannot  find  symbol	136	None	replace
1432	[BUG]  [BUGGY]  if(properties!=  null)  {  finishPropertyInferred();  }  [CE]  cannot  find  symbol  properties  [FE]                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(properties!=  null)  {  finishPropertyInferred();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(properties!=  null)  {  finishPropertyInferred();  }	  if(propertyContinuations!=    null)    {    finishPropertyInferred();    }    	non-compiled	[CE]  cannot  find  symbol  properties	136	None	replace
1433	[BUG]  [BUGGY]  if(propertyContinuations!=  null)  {  finishTypeInferred();  }  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(propertyContinuations!=  null)  {  finishTypeInferred();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations!=  null)  {  finishTypeInferred();  }	  if(propertyContinuations!=    null)    {    finishPropertyInferred();    }    	non-compiled	[CE]  cannot  find  symbol	136	None	replace
1434	[BUG]  [BUGGY]  validatePropertyContinuations();  }  else  {  registry.isFirstGeneration()  :  this;  }  [CE]  [FE]                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  validatePropertyContinuations();  }  else  {  registry.isFirstGeneration()  :  this;  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	validatePropertyContinuations();  }  else  {  registry.isFirstGeneration()  :  this;  }	  validatePropertyContinuations();    }    else    {    registry.isLastGeneration()    :    this;    }    	non-compiled	[CE]  	106	None	replace
1435	[BUG]  [BUGGY]  timeout  [FE]                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  propertyContinuations  =  new  java.util.ArrayList  <  PropertyContinuation>();  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	add	propertyContinuations  =  new  java.util.ArrayList  <  PropertyContinuation>();	  propertyContinuations    =    new    ArrayList    <    PropertyContinuation>();    	compilable	timeout	100	1	replace
1436	[BUG]  [BUGGY]  propertyContinuations  =  new  java.util.ArrayList  <  PropertyContinuation>();  timeout  [FE]                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  propertyContinuations  =  new  java.util.ArrayList  <  PropertyContinuation>();  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	propertyContinuations  =  new  java.util.ArrayList  <  PropertyContinuation>();	  propertyContinuations    =    new    ArrayList    <    PropertyContinuation>();    	compilable	timeout	100	1	replace
1437	[BUG]  [BUGGY]  propertyContinuations  =  new  TreeMap  <  PropertyContinuation>();  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  propertyContinuations  =  new  TreeMap  <  PropertyContinuation>();  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	propertyContinuations  =  new  TreeMap  <  PropertyContinuation>();	  propertyContinuations    =    new    ArrayList    <    PropertyContinuation>();    	non-compiled	[CE]  cannot  find  symbol	100	None	replace
1438	[BUG]  [BUGGY]  timeout  [FE]                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Preconditions.checkNotNull(propertyContinuations);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	add	Preconditions.checkNotNull(propertyContinuations);	  if(resolved)    {    finishPropertyContinuations();    }    if(resolved)    {    finishPropertyContinuations();    }    timeout    	compilable	timeout	35	1	replace
1439	[BUG]  [BUGGY]  Preconditions.checkNotNull(propertyContinuations);  timeout  [FE]                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Preconditions.checkNotNull(propertyContinuations);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Preconditions.checkNotNull(propertyContinuations);	  if(resolved)    {    finishPropertyContinuations();    }    if(resolved)    {    finishPropertyContinuations();    }    timeout    	compilable	timeout	35	1	replace
1440	[BUG]  [BUGGY]  propertyContinuations!=  null  &&  registry.isLastGeneration()?  getPropertyType()  :  this;  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  propertyContinuations!=  null  &&  registry.isLastGeneration()?  getPropertyType()  :  this;  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	propertyContinuations!=  null  &&  registry.isLastGeneration()?  getPropertyType()  :  this;	  propertyContinuations!=    null    &&    registry.isLastGeneration()?    getReferencedType()    :    this;    	non-compiled	[CE]  not  a  statement	191	None	replace
1441	[BUG]  [BUGGY]  propertyContinuations!=  null  &&  registry.isLastGeneration()?  getReferencedType()  :  REFERENCED_TYPE;  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  propertyContinuations!=  null  &&  registry.isLastGeneration()?  getReferencedType()  :  REFERENCED_TYPE;  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	propertyContinuations!=  null  &&  registry.isLastGeneration()?  getReferencedType()  :  REFERENCED_TYPE;	  propertyContinuations!=    null    &&    registry.isLastGeneration()?    getReferencedType()    :    this;    	non-compiled	[CE]  not  a  statement	191	None	replace
1442	[BUG]  [BUGGY]  Preconditions.checkState(propertyContinuations  ==  null)  {  finishPropertyContinuations();  }  [CE]  ';'  expected  [FE]                                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Preconditions.checkState(propertyContinuations  ==  null)  {  finishPropertyContinuations();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Preconditions.checkState(propertyContinuations  ==  null)  {  finishPropertyContinuations();  }	  if(propertyContinuations    ==    null)    {    finishPropertyContinuations();    }    if(propertyContinuations    >>    null)    {    finishPropertyContinuations();    }    	non-compiled	[CE]  ';'  expected	48	None	replace
1443	[BUG]  [BUGGY]  timeout  [FE]                                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Preconditions.checkState(propertyContinuations  ==  null);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	add	Preconditions.checkState(propertyContinuations  ==  null);	  if(propertyContinuations    ==    null)    {    finishPropertyContinuations();    }    if(propertyContinuations    >>    null)    {    finishPropertyContinuations();    }    	compilable	timeout	48	1	replace
1444	[BUG]  [BUGGY]  Preconditions.checkState(propertyContinuations  ==  null);  timeout  [FE]                                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Preconditions.checkState(propertyContinuations  ==  null);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Preconditions.checkState(propertyContinuations  ==  null);	  if(propertyContinuations    ==    null)    {    finishPropertyContinuations();    }    if(propertyContinuations    >>    null)    {    finishPropertyContinuations();    }    	compilable	timeout	48	1	replace
1445	[BUG]  [BUGGY]  if(validator!=    null)    {    finishPropertyContinuations();    }    if(validator!=  null)  {  finishPropertyContinuations();  }  if(validator!=  null)  {  finishPropertyContinuations();  }  if(validator!=  null)  {  finishPropertyContinuations();  }  if(validator!=  null)  {  finishPropertyContinu  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(validator!=    null)    {    finishPropertyContinuations();    }    if(validator!=  null)  {  finishPropertyContinuations();  }  if(validator!=  null)  {  finishPropertyContinuations();  }  if(validator!=  null)  {  finishPropertyContinuations();  }  if(validator!=  null)  {  finishPropertyContinu  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(validator!=        null)        {        finishPropertyContinuations();        }        if(validator!=    null)    {    finishPropertyContinuations();    }    if(validator!=  null)  {  finishPropertyContinuations();  }  if(validator!=  null)  {  finishPropertyContinuations();  }  if(validator!=  null)  {  finishPropertyContinu	  timeout    	non-compiled	[CE]  ';'  expected	50	None	add
1446	[BUG]  [BUGGY]  if(validator!=    null)    {    finishPropertyContinuations();    }    if(validator!=  null)  {  finishPropertyContinuations();  }  if(validator!=  null)  {  finishPropertyContinuations();  }  if(validator!=  null)  {  finishPropertyContinuations();  }  if(validator!=  null)  {  finishPropertyContinuations()  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(validator!=    null)    {    finishPropertyContinuations();    }    if(validator!=  null)  {  finishPropertyContinuations();  }  if(validator!=  null)  {  finishPropertyContinuations();  }  if(validator!=  null)  {  finishPropertyContinuations();  }  if(validator!=  null)  {  finishPropertyContinuations()  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(validator!=        null)        {        finishPropertyContinuations();        }        if(validator!=    null)    {    finishPropertyContinuations();    }    if(validator!=  null)  {  finishPropertyContinuations();  }  if(validator!=  null)  {  finishPropertyContinuations();  }  if(validator!=  null)  {  finishPropertyContinuations()	  timeout    	non-compiled	[CE]  ';'  expected	50	None	add
1447	[BUG]  [BUGGY]  if(validator!=    null)    {    finishPropertyContinuations();    }    if(validator!=  null)  {  finishPropertyContinuations();  }  if(validator!=  null)  {  finishPropertyContinuations();  }  if(validator!=  null)  {  finishPropertyContinuations();  }  if(validator!=  null)  {  finishProperty  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(validator!=    null)    {    finishPropertyContinuations();    }    if(validator!=  null)  {  finishPropertyContinuations();  }  if(validator!=  null)  {  finishPropertyContinuations();  }  if(validator!=  null)  {  finishPropertyContinuations();  }  if(validator!=  null)  {  finishProperty  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(validator!=        null)        {        finishPropertyContinuations();        }        if(validator!=    null)    {    finishPropertyContinuations();    }    if(validator!=  null)  {  finishPropertyContinuations();  }  if(validator!=  null)  {  finishPropertyContinuations();  }  if(validator!=  null)  {  finishProperty	  timeout    	non-compiled	[CE]  ';'  expected	50	None	add
1448	[BUG]  [BUGGY]  if(validator!=    null)    {    finishPropertyContinuations();    }    if(validator!=  null)  {  finishPropertyContinuations();  }  if(validator!=  null)  {  finishPropertyContinuations();  }  if(validator!=  null)  {  finishPropertyContinuations();  }  if(validator!=  null)  {  finishPropertyContinuations  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(validator!=    null)    {    finishPropertyContinuations();    }    if(validator!=  null)  {  finishPropertyContinuations();  }  if(validator!=  null)  {  finishPropertyContinuations();  }  if(validator!=  null)  {  finishPropertyContinuations();  }  if(validator!=  null)  {  finishPropertyContinuations  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(validator!=        null)        {        finishPropertyContinuations();        }        if(validator!=    null)    {    finishPropertyContinuations();    }    if(validator!=  null)  {  finishPropertyContinuations();  }  if(validator!=  null)  {  finishPropertyContinuations();  }  if(validator!=  null)  {  finishPropertyContinuations	  timeout    	non-compiled	[CE]  ';'  expected	50	None	add
1449	[BUG]  [BUGGY]  if(resolved)    {    finishPropertyContinuations();    }    if(resolved)  {  finishPropertyContinuations();  }  if(resolved)  {  finishPropertyContinuations();  }  if(resolved)  {  finishPropertyContinuations();  }  if(resolved)  {  finishPropertyContinuations();  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(resolved)    {    finishPropertyContinuations();    }    if(resolved)  {  finishPropertyContinuations();  }  if(resolved)  {  finishPropertyContinuations();  }  if(resolved)  {  finishPropertyContinuations();  }  if(resolved)  {  finishPropertyContinuations();  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(resolved)        {        finishPropertyContinuations();        }        if(resolved)    {    finishPropertyContinuations();    }    if(resolved)  {  finishPropertyContinuations();  }  if(resolved)  {  finishPropertyContinuations();  }  if(resolved)  {  finishPropertyContinuations();	  timeout    	non-compiled	[CE]  illegal  start  of  expression	34	None	add
1450	[BUG]  [BUGGY]  timeout  [FE]                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(propertyContinuations!=  null  ||  propertyContinuations.size()  >  0)  {  finishPropertyContinuations();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	add	if(propertyContinuations!=  null  ||  propertyContinuations.size()  >  0)  {  finishPropertyContinuations();  }	  if(propertyContinuations!=    null    &&    propertyContinuations.size()    >    0)    {    finishPropertyContinuations();    }    timeout    	compilable	timeout	257	1	replace
1451	[BUG]  [BUGGY]  if(propertyContinuations!=  null  ||  propertyContinuations.size()  >  0)  {  finishPropertyContinuations();  }  timeout  [FE]                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(propertyContinuations!=  null  ||  propertyContinuations.size()  >  0)  {  finishPropertyContinuations();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations!=  null  ||  propertyContinuations.size()  >  0)  {  finishPropertyContinuations();  }	  if(propertyContinuations!=    null    &&    propertyContinuations.size()    >    0)    {    finishPropertyContinuations();    }    timeout    	compilable	timeout	257	1	replace
1452	[BUG]  [BUGGY]  timeout  [FE]                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(propertyContinuations  ==  null  &&  propertyContinuations.size()  >  0)  {  finishPropertyContinuations();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	add	if(propertyContinuations  ==  null  &&  propertyContinuations.size()  >  0)  {  finishPropertyContinuations();  }	  if(propertyContinuations!=    null    &&    propertyContinuations.size()    >    0)    {    finishPropertyContinuations();    }    timeout    	compilable	timeout	257	1	replace
1453	[BUG]  [BUGGY]  if(propertyContinuations  ==  null  &&  propertyContinuations.size()  >  0)  {  finishPropertyContinuations();  }  timeout  [FE]                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(propertyContinuations  ==  null  &&  propertyContinuations.size()  >  0)  {  finishPropertyContinuations();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations  ==  null  &&  propertyContinuations.size()  >  0)  {  finishPropertyContinuations();  }	  if(propertyContinuations!=    null    &&    propertyContinuations.size()    >    0)    {    finishPropertyContinuations();    }    timeout    	compilable	timeout	257	1	replace
1454	[BUG]  [BUGGY]  Preconditions.checkState(propertyContinuations!=  null  &&  propertyContinuations.size()  >  0)  {  finishPropertyContinuations();  }  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Preconditions.checkState(propertyContinuations!=  null  &&  propertyContinuations.size()  >  0)  {  finishPropertyContinuations();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Preconditions.checkState(propertyContinuations!=  null  &&  propertyContinuations.size()  >  0)  {  finishPropertyContinuations();  }	  if(propertyContinuations!=    null    &&    propertyContinuations.size()    >    0)    {    finishPropertyContinuations();    }    timeout    	non-compiled	[CE]  ';'  expected	257	None	replace
1455	[BUG]  [BUGGY]  timeout  [FE]                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Preconditions.checkState(propertyContinuations!=  null  &&  propertyContinuations.size()  >  0);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	add	Preconditions.checkState(propertyContinuations!=  null  &&  propertyContinuations.size()  >  0);	  if(propertyContinuations!=    null    &&    propertyContinuations.size()    >    0)    {    finishPropertyContinuations();    }    timeout    	compilable	timeout	257	1	replace
1456	[BUG]  [BUGGY]  Preconditions.checkState(propertyContinuations!=  null  &&  propertyContinuations.size()  >  0);  timeout  [FE]                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Preconditions.checkState(propertyContinuations!=  null  &&  propertyContinuations.size()  >  0);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Preconditions.checkState(propertyContinuations!=  null  &&  propertyContinuations.size()  >  0);	  if(propertyContinuations!=    null    &&    propertyContinuations.size()    >    0)    {    finishPropertyContinuations();    }    timeout    	compilable	timeout	257	1	replace
1457	[BUG]  [BUGGY]  if(propertyContinuations  ==  null)  {  startPropertyGenerations();  }  [CE]  cannot  find  symbol  [FE]                            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(propertyContinuations  ==  null)  {  startPropertyGenerations();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations  ==  null)  {  startPropertyGenerations();  }	  if(propertyContinuations    ==    null)    {    finishPropertyContinuations();    }    if(propertyContinuations    ==    null)    {    startPropertyContinuations();    }    	non-compiled	[CE]  cannot  find  symbol	45	None	replace
1458	[BUG]  [BUGGY]  if(propertyContinuations!=  null)  {  finishPropertyList();  }  else  {  forAnnotations  =  Collections.EMPTYList();  }  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(propertyContinuations!=  null)  {  finishPropertyList();  }  else  {  forAnnotations  =  Collections.EMPTYList();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations!=  null)  {  finishPropertyList();  }  else  {  forAnnotations  =  Collections.EMPTYList();  }	  if(propertyContinuations!=    null)    {    finishPropertyList();    }    else    {    forAnnotations    =    Collections.emptyList();    }    	non-compiled	[CE]  cannot  find  symbol	187	None	replace
1459	[BUG]  [BUGGY]  if(propertyContinuations  ==  null)  {  finishPropertyList();  }  else  {  forAnnotations  =  Collections.emptyList();  }  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(propertyContinuations  ==  null)  {  finishPropertyList();  }  else  {  forAnnotations  =  Collections.emptyList();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations  ==  null)  {  finishPropertyList();  }  else  {  forAnnotations  =  Collections.emptyList();  }	  if(propertyContinuations!=    null)    {    finishPropertyList();    }    else    {    forAnnotations    =    Collections.emptyList();    }    	non-compiled	[CE]  cannot  find  symbol	187	None	replace
1460	[BUG]  [BUGGY]  validator!=  null  &&  registry.isLastGeneration()?  getReferencedType()  :  REFERENCED_TYPE;  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  validator!=  null  &&  registry.isLastGeneration()?  getReferencedType()  :  REFERENCED_TYPE;  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	validator!=  null  &&  registry.isLastGeneration()?  getReferencedType()  :  REFERENCED_TYPE;	  validator!=    null    &&    registry.isLastGeneration()?    getReferencedType()    :    this;    	non-compiled	[CE]  not  a  statement	138	None	replace
1461	[BUG]  [BUGGY]  validator!=  null  &&  registry.isLastGeneration()?  getReferencedType()  :  DEFAULT_TYPE;  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  validator!=  null  &&  registry.isLastGeneration()?  getReferencedType()  :  DEFAULT_TYPE;  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	validator!=  null  &&  registry.isLastGeneration()?  getReferencedType()  :  DEFAULT_TYPE;	  validator!=    null    &&    registry.isLastGeneration()?    getReferencedType()    :    this;    	non-compiled	[CE]  not  a  statement	138	None	replace
1462	[BUG]  [BUGGY]  Annotation  <?>  propertyContinuations  =  registry.getPropertyContinuations(propertyName,  inferred);  [CE]  cannot  find  symbol  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Annotation  <?>  propertyContinuations  =  registry.getPropertyContinuations(propertyName,  inferred);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Annotation  <?>  propertyContinuations  =  registry.getPropertyContinuations(propertyName,  inferred);	  Annotation    <?>    propertyContinuations    =    registry.getPropertyContinuations(propertyName);    	non-compiled	[CE]  cannot  find  symbol	196	None	replace
1463	[BUG]  [BUGGY]  Annotation  <?>  propertyContinuations  =  propertyNode.getPropertyContinuations(propertyName);  [CE]  cannot  find  symbol  [FE]                            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Annotation  <?>  propertyContinuations  =  propertyNode.getPropertyContinuations(propertyName);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Annotation  <?>  propertyContinuations  =  propertyNode.getPropertyContinuations(propertyName);	  Annotation    <?>    propertyContinuations    =    registry.getPropertyContinuations(propertyName);    	non-compiled	[CE]  cannot  find  symbol	196	None	replace
1464	[BUG]  [BUGGY]  Annotation  <?>  propertyContinuations  =  properties.getPropertyContinuations(propertyName);  [CE]  cannot  find  symbol  [FE]                              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Annotation  <?>  propertyContinuations  =  properties.getPropertyContinuations(propertyName);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Annotation  <?>  propertyContinuations  =  properties.getPropertyContinuations(propertyName);	  Annotation    <?>    propertyContinuations    =    registry.getPropertyContinuations(propertyName);    	non-compiled	[CE]  cannot  find  symbol	196	None	replace
1465	[BUG]  [BUGGY]  Annotation  <?>  propertyContinuations  =  registry.getPropertyContinuations(reference,  propertyName);  [CE]  cannot  find  symbol  [FE]                                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Annotation  <?>  propertyContinuations  =  registry.getPropertyContinuations(reference,  propertyName);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Annotation  <?>  propertyContinuations  =  registry.getPropertyContinuations(reference,  propertyName);	  Annotation    <?>    propertyContinuations    =    registry.getPropertyContinuations(propertyName);    	non-compiled	[CE]  cannot  find  symbol	196	None	replace
1466	[BUG]  [BUGGY]  propertyContinuations(propertyNode)  {  finishPropertyContinuations();  }  else  {  registry.isLastGeneration()?  getReferencedType()  :  this;  }  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  propertyContinuations(propertyNode)  {  finishPropertyContinuations();  }  else  {  registry.isLastGeneration()?  getReferencedType()  :  this;  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	propertyContinuations(propertyNode)  {  finishPropertyContinuations();  }  else  {  registry.isLastGeneration()?  getReferencedType()  :  this;  }	  propertyContinuations(resolved)    {    finishPropertyContinuations();    }    else    {    registry.isLastGeneration()?    getReferencedType()    :    this;    }    	non-compiled	[CE]  ';'  expected	60	None	replace
1467	[BUG]  [BUGGY]  propertyContinuations(resolved,  registry.isLastGeneration()?  getReferencedType()  :  this);  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  propertyContinuations(resolved,  registry.isLastGeneration()?  getReferencedType()  :  this);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	propertyContinuations(resolved,  registry.isLastGeneration()?  getReferencedType()  :  this);	  propertyContinuations(resolved)    {    finishPropertyContinuations();    }    else    {    registry.isLastGeneration()?    getReferencedType()    :    this;    }    	non-compiled	[CE]  cannot  find  symbol	60	None	replace
1468	[BUG]  [BUGGY]  propertyContinuations(resolved,  registry.isLastGeneration()?  getReferencedType()  :  this;  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  propertyContinuations(resolved,  registry.isLastGeneration()?  getReferencedType()  :  this;  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	propertyContinuations(resolved,  registry.isLastGeneration()?  getReferencedType()  :  this;	  propertyContinuations(resolved)    {    finishPropertyContinuations();    }    else    {    registry.isLastGeneration()?    getReferencedType()    :    this;    }    	non-compiled	[CE]  ')'  expected	60	None	replace
1469	[BUG]  [BUGGY]  validator!=  null  &&  validator.getPropertyType()!=  null)  {  finishPropertyGenerations();  }  else  {  registry.isLastGeneration()  :  this;  }  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  validator!=  null  &&  validator.getPropertyType()!=  null)  {  finishPropertyGenerations();  }  else  {  registry.isLastGeneration()  :  this;  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	validator!=  null  &&  validator.getPropertyType()!=  null)  {  finishPropertyGenerations();  }  else  {  registry.isLastGeneration()  :  this;  }	  if(validator!=    null)    {    finishPropertyGenerations();    }    else    {    registry.isLastGeneration()    :    this;    }    	non-compiled	[CE]  not  a  statement	93	None	replace
1470	[BUG]  [BUGGY]  ensurePropertyContinuations(t,  status);  [CE]  cannot  find  symbol  status  [FE]              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  ensurePropertyContinuations(t,  status);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	ensurePropertyContinuations(t,  status);	  ensurePropertyContinuations(t);    	non-compiled	[CE]  cannot  find  symbol  status	169	None	replace
1471	[BUG]  [BUGGY]  propertyContinuations.add(detectPropertyName);  [CE]  cannot  find  symbol  detectPropertyName  [FE]                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  propertyContinuations.add(detectPropertyName);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	propertyContinuations.add(detectPropertyName);	  propertyContinuations.add(propertyName);    	non-compiled	[CE]  cannot  find  symbol  detectPropertyName	67	None	replace
1472	[BUG]  [BUGGY]  timeout  [FE]                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  propertyContinuations.add(null);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	add	propertyContinuations.add(null);	  propertyContinuations.add(propertyName);    	compilable	timeout	67	1	replace
1473	[BUG]  [BUGGY]  propertyContinuations.add(null);  timeout  [FE]                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  propertyContinuations.add(null);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	propertyContinuations.add(null);	  propertyContinuations.add(propertyName);    	compilable	timeout	67	1	replace
1474	[BUG]  [BUGGY]  if(propertyContinuations!=  null  &&  propertyContinuations.size()  >  0)  {  finishPropertyContinuations();  }  if(propertyContinuations!=  null  &&  propertiesContinuations.size()  >  0)  {  finishPropertyContinuations();  }  [CE]  cannot  find  symbol  propertiesContinuations  [FE]                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(propertyContinuations!=  null  &&  propertyContinuations.size()  >  0)  {  finishPropertyContinuations();  }  if(propertyContinuations!=  null  &&  propertiesContinuations.size()  >  0)  {  finishPropertyContinuations();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations!=    null    &&    propertyContinuations.size()    >    0)    {    finishPropertyContinuations();    }    if(propertyContinuations!=  null  &&  propertiesContinuations.size()  >  0)  {  finishPropertyContinuations();  }	  timeout    	non-compiled	[CE]  cannot  find  symbol  propertiesContinuations	256	None	add
1475	[BUG]  [BUGGY]  if(propertyContinuations!=  null  &&  propertyContinuations.size()  >  0)  {  finishPropertyContinuations();  }  if(propertyContinuations!=  null  &&  propertyContinuations.size()  >  0)  {  endPropertyContinuations();  }  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(propertyContinuations!=  null  &&  propertyContinuations.size()  >  0)  {  finishPropertyContinuations();  }  if(propertyContinuations!=  null  &&  propertyContinuations.size()  >  0)  {  endPropertyContinuations();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations!=    null    &&    propertyContinuations.size()    >    0)    {    finishPropertyContinuations();    }    if(propertyContinuations!=  null  &&  propertyContinuations.size()  >  0)  {  endPropertyContinuations();  }	  timeout    	non-compiled	[CE]  cannot  find  symbol	256	None	add
1476	[BUG]  [BUGGY]  Preconditions.checkState(resolved  >=  false)  {  finishPropertyContinuations();  }  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Preconditions.checkState(resolved  >=  false)  {  finishPropertyContinuations();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Preconditions.checkState(resolved  >=  false)  {  finishPropertyContinuations();  }	  Preconditions.checkState(resolved)    {    finishPropertyContinuations();    }    	non-compiled	[CE]  ';'  expected	127	None	replace
1477	[BUG]  [BUGGY]  Preconditions.checkState(resolved)  {  handleTypeCycle(t);  }  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Preconditions.checkState(resolved)  {  handleTypeCycle(t);  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Preconditions.checkState(resolved)  {  handleTypeCycle(t);  }	  Preconditions.checkState(resolved)    {    finishPropertyContinuations();    }    	non-compiled	[CE]  ';'  expected	127	None	replace
1478	[BUG]  [BUGGY]  Preconditions.checkState(resolved)  {  handleInferredPropertyContinuations();  }  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Preconditions.checkState(resolved)  {  handleInferredPropertyContinuations();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Preconditions.checkState(resolved)  {  handleInferredPropertyContinuations();  }	  Preconditions.checkState(resolved)    {    finishPropertyContinuations();    }    	non-compiled	[CE]  ';'  expected	127	None	replace
1479	[BUG]  [BUGGY]  if(propertyContinuations!=  null)  {  startInferredPropertyGeneration();  }  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(propertyContinuations!=  null)  {  startInferredPropertyGeneration();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations!=  null)  {  startInferredPropertyGeneration();  }	  if(propertyContinuations!=    null)    {    startPropertyGeneration();    }    	non-compiled	[CE]  cannot  find  symbol	137	None	replace
1480	[BUG]  [BUGGY]  if(propertyContinuations!=  null)  {  startReference();  }  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(propertyContinuations!=  null)  {  startReference();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations!=  null)  {  startReference();  }	  if(propertyContinuations!=    null)    {    startPropertyGeneration();    }    	non-compiled	[CE]  cannot  find  symbol	137	None	replace
1481	[BUG]  [BUGGY]  if(propertyContinuations!=  null)  {  startTypeGeneration();  }  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(propertyContinuations!=  null)  {  startTypeGeneration();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations!=  null)  {  startTypeGeneration();  }	  if(propertyContinuations!=    null)    {    startPropertyGeneration();    }    	non-compiled	[CE]  cannot  find  symbol	137	None	replace
1482	[BUG]  [BUGGY]  if(propertyContinuations!=  null)  {  startGeneration();  }  [CE]  cannot  find  symbol  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(propertyContinuations!=  null)  {  startGeneration();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations!=  null)  {  startGeneration();  }	  if(propertyContinuations!=    null)    {    startPropertyGeneration();    }    	non-compiled	[CE]  cannot  find  symbol	137	None	replace
1483	[BUG]  [BUGGY]  if(registry!=  null)  {  startPropertyGeneration();  }  [CE]  cannot  find  symbol  [FE]                            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(registry!=  null)  {  startPropertyGeneration();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(registry!=  null)  {  startPropertyGeneration();  }	  if(propertyContinuations!=    null)    {    startPropertyGeneration();    }    	non-compiled	[CE]  cannot  find  symbol	137	None	replace
1484	[BUG]  [BUGGY]  if(validator!=  null  ||  registry.isLastGeneration())  {  finishPropertyEnclosing();  }  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(validator!=  null  ||  registry.isLastGeneration())  {  finishPropertyEnclosing();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(validator!=  null  ||  registry.isLastGeneration())  {  finishPropertyEnclosing();  }	  if(validator!=    null)    {    finishPropertyEnclosing();    }    	non-compiled	[CE]  cannot  find  symbol	158	None	replace
1485	[BUG]  [BUGGY]  if(validator!=  null  &&  registry.isLastGeneration())  {  finishPropertyEnclosing();  }  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(validator!=  null  &&  registry.isLastGeneration())  {  finishPropertyEnclosing();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(validator!=  null  &&  registry.isLastGeneration())  {  finishPropertyEnclosing();  }	  if(validator!=    null)    {    finishPropertyEnclosing();    }    	non-compiled	[CE]  cannot  find  symbol	158	None	replace
1486	[BUG]  [BUGGY]  if(validator!=  null)  {  handlePropertyEnclosing();  }  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(validator!=  null)  {  handlePropertyEnclosing();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(validator!=  null)  {  handlePropertyEnclosing();  }	  if(validator!=    null)    {    finishPropertyEnclosing();    }    	non-compiled	[CE]  cannot  find  symbol	158	None	replace
1487	[BUG]  [BUGGY]  if(validator!=  null  &&  registry.isLastGeneration())  {  startPropertyEnclosing();  }  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(validator!=  null  &&  registry.isLastGeneration())  {  startPropertyEnclosing();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(validator!=  null  &&  registry.isLastGeneration())  {  startPropertyEnclosing();  }	  if(validator!=    null)    {    finishPropertyEnclosing();    }    	non-compiled	[CE]  cannot  find  symbol	158	None	replace
1488	[BUG]  [BUGGY]  inferred  &&  resolved)  {  finishPropertyContinuations();  }  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  inferred  &&  resolved)  {  finishPropertyContinuations();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	inferred  &&  resolved)  {  finishPropertyContinuations();  }	  aughtExceptionHandler    &&    resolved)    {    finishPropertyContinuations();    }    	non-compiled	[CE]  not  a  statement	248	None	replace
1489	[BUG]  [BUGGY]  aughtExceptionHandler  &&  resolved)  {  finishPropertyAnnotations();  }  [CE]  not  a  statement  [FE]                            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  aughtExceptionHandler  &&  resolved)  {  finishPropertyAnnotations();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	aughtExceptionHandler  &&  resolved)  {  finishPropertyAnnotations();  }	  aughtExceptionHandler    &&    resolved)    {    finishPropertyContinuations();    }    	non-compiled	[CE]  not  a  statement	248	None	replace
1490	[BUG]  [BUGGY]  aughtExceptionHandler  &&  resolved)  {  finishPropertyAccuracy();  }  [CE]  not  a  statement  [FE]                              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  aughtExceptionHandler  &&  resolved)  {  finishPropertyAccuracy();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	aughtExceptionHandler  &&  resolved)  {  finishPropertyAccuracy();  }	  aughtExceptionHandler    &&    resolved)    {    finishPropertyContinuations();    }    	non-compiled	[CE]  not  a  statement	248	None	replace
1491	[BUG]  [BUGGY]  inferred  ||  resolved)  {  finishPropertyContinuations();  }  [CE]  not  a  statement  [FE]                                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  inferred  ||  resolved)  {  finishPropertyContinuations();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	inferred  ||  resolved)  {  finishPropertyContinuations();  }	  aughtExceptionHandler    &&    resolved)    {    finishPropertyContinuations();    }    	non-compiled	[CE]  not  a  statement	248	None	replace
1492	[BUG]  [BUGGY]  final  PropertyContinuations  <  PropertyContinuation>  finishPropertyContinuations(propertyNode);  [CE]  ';'  expected  [FE]                              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  final  PropertyContinuations  <  PropertyContinuation>  finishPropertyContinuations(propertyNode);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	final  PropertyContinuations  <  PropertyContinuation>  finishPropertyContinuations(propertyNode);	  final    PropertyContinuations    <    PropertyContinuation>    finishPropertyContinuations();    	non-compiled	[CE]  ';'  expected	115	None	replace
1493	[BUG]  [BUGGY]  final  PropertyContinuations  <  PropertyContinuation>  finishPropertyContinuations(t,  enclosing);  [CE]  ';'  expected  [FE]                                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  final  PropertyContinuations  <  PropertyContinuation>  finishPropertyContinuations(t,  enclosing);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	final  PropertyContinuations  <  PropertyContinuation>  finishPropertyContinuations(t,  enclosing);	  final    PropertyContinuations    <    PropertyContinuation>    finishPropertyContinuations();    	non-compiled	[CE]  ';'  expected	115	None	replace
1494	[BUG]  [BUGGY]  PropertyContinuation  propertyContinuations  =  registry.getPropertyContinuations(reference);  [CE]  cannot  find  symbol  [FE]                              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  PropertyContinuation  propertyContinuations  =  registry.getPropertyContinuations(reference);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	PropertyContinuation  propertyContinuations  =  registry.getPropertyContinuations(reference);	  PropertyContinuation    propertyContinuations    =    registry.getPropertyContinuations(propertyName);    	non-compiled	[CE]  cannot  find  symbol	149	None	replace
1495	[BUG]  [BUGGY]  PropertyContinuation  propertyContinuations  =  registry.getPropertyContinuations(referenced);  [CE]  cannot  find  symbol  referenced  [FE]                                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  PropertyContinuation  propertyContinuations  =  registry.getPropertyContinuations(referenced);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	PropertyContinuation  propertyContinuations  =  registry.getPropertyContinuations(referenced);	  PropertyContinuation    propertyContinuations    =    registry.getPropertyContinuations(propertyName);    	non-compiled	[CE]  cannot  find  symbol  referenced	149	None	replace
1496	[BUG]  [BUGGY]  Status.checkState(registry.isLastGeneration()?  getReferencedType()  :  registry.isLastGeneration());  [CE]  cannot  find  symbol  Status  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Status.checkState(registry.isLastGeneration()?  getReferencedType()  :  registry.isLastGeneration());  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Status.checkState(registry.isLastGeneration()?  getReferencedType()  :  registry.isLastGeneration());	  Status.checkState(registry.isLastGeneration());    	non-compiled	[CE]  cannot  find  symbol  Status	13	None	replace
1497	[BUG]  [BUGGY]  Status.checkState(registry.isLastGeneration()  &&  registry.isFirstGeneration());  [CE]  cannot  find  symbol  [FE]                            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Status.checkState(registry.isLastGeneration()  &&  registry.isFirstGeneration());  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Status.checkState(registry.isLastGeneration()  &&  registry.isFirstGeneration());	  Status.checkState(registry.isLastGeneration());    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
1498	[BUG]  [BUGGY]  propertyContinuations!=  null  &&  propertyContinuations.size()  >  0)  {  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  propertyContinuations!=  null  &&  propertyContinuations.size()  >  0)  {  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	propertyContinuations!=  null  &&  propertyContinuations.size()  >  0)  {	  propertyContinuations!=    null    &&    propertyContinuations.size()    >    0)    {    finishPropertyContinuations();    }    else    {    registry.isLastGeneration()?    getReferencedType()    :    this;    }    	non-compiled	[CE]  not  a  statement	190	None	replace
1499	[BUG]  [BUGGY]  propertyContinuations!=  null  &&  propertyContinuations.size()  >  0)  {  handleTypeCycle(t);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  propertyContinuations!=  null  &&  propertyContinuations.size()  >  0)  {  handleTypeCycle(t);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	propertyContinuations!=  null  &&  propertyContinuations.size()  >  0)  {  handleTypeCycle(t);	  propertyContinuations!=    null    &&    propertyContinuations.size()    >    0)    {    finishPropertyContinuations();    }    else    {    registry.isLastGeneration()?    getReferencedType()    :    this;    }    	non-compiled	[CE]  not  a  statement	190	None	replace
1500	[BUG]  [BUGGY]  Predicate  validator  =  getValueForAnnotations(t,  enclosing,  nameNode);  [CE]  cannot  find  symbol  nameNode  [FE]                            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Predicate  validator  =  getValueForAnnotations(t,  enclosing,  nameNode);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Predicate  validator  =  getValueForAnnotations(t,  enclosing,  nameNode);	          Predicate    validator    =    getValueForAnnotations(t,    enclosing);    	non-compiled	[CE]  cannot  find  symbol  nameNode	21	None	replace
1501	[BUG]  [BUGGY]  if(propertyContinuations!=  null)  {  finishPropertyInferred();  }  else  {  forAnnotations  =  Collections.EMPTYList();  }  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(propertyContinuations!=  null)  {  finishPropertyInferred();  }  else  {  forAnnotations  =  Collections.EMPTYList();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations!=  null)  {  finishPropertyInferred();  }  else  {  forAnnotations  =  Collections.EMPTYList();  }	  if(propertyContinuations!=    null)    {    finishPropertyInferred();    }    else    {    forAnnotations    =    Collections.emptyList();    }    	non-compiled	[CE]  cannot  find  symbol	188	None	replace
1502	[BUG]  [BUGGY]  if(propertyContinuations  ==  null)  {  finishPropertyInferred();  }  else  {  forAnnotations  =  Collections.emptyList();  }  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(propertyContinuations  ==  null)  {  finishPropertyInferred();  }  else  {  forAnnotations  =  Collections.emptyList();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations  ==  null)  {  finishPropertyInferred();  }  else  {  forAnnotations  =  Collections.emptyList();  }	  if(propertyContinuations!=    null)    {    finishPropertyInferred();    }    else    {    forAnnotations    =    Collections.emptyList();    }    	non-compiled	[CE]  cannot  find  symbol	188	None	replace
1503	[BUG]  [BUGGY]  if(propertyContinuations!=  null)  {  startPropertyInferred();  }  else  {  forAnnotations  =  Collections.emptyList();  }  [CE]  cannot  find  symbol  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(propertyContinuations!=  null)  {  startPropertyInferred();  }  else  {  forAnnotations  =  Collections.emptyList();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations!=  null)  {  startPropertyInferred();  }  else  {  forAnnotations  =  Collections.emptyList();  }	  if(propertyContinuations!=    null)    {    finishPropertyInferred();    }    else    {    forAnnotations    =    Collections.emptyList();    }    	non-compiled	[CE]  cannot  find  symbol	188	None	replace
1504	[BUG]  [BUGGY]  if(forAnnotations  ==  null)  {  finishPropertyInferred();  }  else  {  forAnnotations  =  Collections.emptyList();  }  [CE]  cannot  find  symbol  forAnnotations  [FE]                            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(forAnnotations  ==  null)  {  finishPropertyInferred();  }  else  {  forAnnotations  =  Collections.emptyList();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(forAnnotations  ==  null)  {  finishPropertyInferred();  }  else  {  forAnnotations  =  Collections.emptyList();  }	  if(propertyContinuations!=    null)    {    finishPropertyInferred();    }    else    {    forAnnotations    =    Collections.emptyList();    }    	non-compiled	[CE]  cannot  find  symbol  forAnnotations	188	None	replace
1505	[BUG]  [BUGGY]  if(registry!=  null  &&  registry.isLastGeneration())  {  startPropertyContinuations();  }  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(registry!=  null  &&  registry.isLastGeneration())  {  startPropertyContinuations();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(registry!=  null  &&  registry.isLastGeneration())  {  startPropertyContinuations();  }	  if(validator!=    null    &&    registry.isLastGeneration())    {    finishPropertyContinuations();    }    timeout    	non-compiled	[CE]  cannot  find  symbol	236	None	replace
1506	[BUG]  [BUGGY]  Predicates.checkState(registry.isLastGeneration());  [CE]  cannot  find  symbol  Predicates  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Predicates.checkState(registry.isLastGeneration());  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Predicates.checkState(registry.isLastGeneration());	  if(validator!=    null    &&    registry.isLastGeneration())    {    finishPropertyContinuations();    }    timeout    	non-compiled	[CE]  cannot  find  symbol  Predicates	236	None	replace
1507	[BUG]  [BUGGY]  if(registry!=  null  &&  registry.isLastGeneration())  {  handlePropertyContinuations();  }  [CE]  cannot  find  symbol  [FE]                            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(registry!=  null  &&  registry.isLastGeneration())  {  handlePropertyContinuations();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(registry!=  null  &&  registry.isLastGeneration())  {  handlePropertyContinuations();  }	  if(validator!=    null    &&    registry.isLastGeneration())    {    finishPropertyContinuations();    }    timeout    	non-compiled	[CE]  cannot  find  symbol	236	None	replace
1508	[BUG]  [BUGGY]  Annotations  propertyNode  =  registry.getPropertyNode(propertyName);  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Annotations  propertyNode  =  registry.getPropertyNode(propertyName);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Annotations  propertyNode  =  registry.getPropertyNode(propertyName);	  if(registry!=    null)    {    finishPropertyContinuations();    }    else    {    registry.isLastGeneration()    :    this;    }    	non-compiled	[CE]  cannot  find  symbol	241	None	replace
1509	[BUG]  [BUGGY]  PropertyRegistry  <?>  registry  =  getPropertyRegistry();  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  PropertyRegistry  <?>  registry  =  getPropertyRegistry();  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	PropertyRegistry  <?>  registry  =  getPropertyRegistry();	  if(registry!=    null)    {    finishPropertyContinuations();    }    else    {    registry.isLastGeneration()    :    this;    }    	non-compiled	[CE]  cannot  find  symbol	241	None	replace
1510	[BUG]  [BUGGY]  Annotations  propertyNode  =  registry.getPropertyNode();  [CE]  cannot  find  symbol  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Annotations  propertyNode  =  registry.getPropertyNode();  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Annotations  propertyNode  =  registry.getPropertyNode();	  if(registry!=    null)    {    finishPropertyContinuations();    }    else    {    registry.isLastGeneration()    :    this;    }    	non-compiled	[CE]  cannot  find  symbol	241	None	replace
1511	[BUG]  [BUGGY]  Annotations  propertyNode  =  registry.getPropertyNode(resolved);  [CE]  cannot  find  symbol  [FE]                            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Annotations  propertyNode  =  registry.getPropertyNode(resolved);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Annotations  propertyNode  =  registry.getPropertyNode(resolved);	  if(registry!=    null)    {    finishPropertyContinuations();    }    else    {    registry.isLastGeneration()    :    this;    }    	non-compiled	[CE]  cannot  find  symbol	241	None	replace
1512	[BUG]  [BUGGY]  ParchetState.checkNotNull(registry);  [CE]  cannot  find  symbol  ParchetState  [FE]                              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  ParchetState.checkNotNull(registry);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	ParchetState.checkNotNull(registry);	  if(registry!=    null)    {    finishPropertyContinuations();    }    else    {    registry.isLastGeneration()    :    this;    }    	non-compiled	[CE]  cannot  find  symbol  ParchetState	241	None	replace
1513	[BUG]  [BUGGY]  if(forAnnotations!=  null)  {  finishPropertyContinuations();  }  else  {  forAnnotations  =  Lists.emptyList();  }  [CE]  cannot  find  symbol  forAnnotations  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(forAnnotations!=  null)  {  finishPropertyContinuations();  }  else  {  forAnnotations  =  Lists.emptyList();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(forAnnotations!=  null)  {  finishPropertyContinuations();  }  else  {  forAnnotations  =  Lists.emptyList();  }	  if(propertyContinuations!=    null)    {    finishPropertyContinuations();    }    else    {    forAnnotations    =    Lists.emptyList();    }    	non-compiled	[CE]  cannot  find  symbol  forAnnotations	6	None	replace
1514	[BUG]  [BUGGY]  if(propertyContinuations!=  null)  {  finishPropertyValues();  }  else  {  forAnnotations  =  Lists.emptyList();  }  [CE]  cannot  find  symbol  [FE]                            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(propertyContinuations!=  null)  {  finishPropertyValues();  }  else  {  forAnnotations  =  Lists.emptyList();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations!=  null)  {  finishPropertyValues();  }  else  {  forAnnotations  =  Lists.emptyList();  }	  if(propertyContinuations!=    null)    {    finishPropertyContinuations();    }    else    {    forAnnotations    =    Lists.emptyList();    }    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
1515	[BUG]  [BUGGY]  if(propertyContinuations!=  null)  {  finishPropertyInferred();  }  else  {  forAnnotations  =  Lists.emptyList();  }  [CE]  cannot  find  symbol  [FE]                              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(propertyContinuations!=  null)  {  finishPropertyInferred();  }  else  {  forAnnotations  =  Lists.emptyList();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations!=  null)  {  finishPropertyInferred();  }  else  {  forAnnotations  =  Lists.emptyList();  }	  if(propertyContinuations!=    null)    {    finishPropertyContinuations();    }    else    {    forAnnotations    =    Lists.emptyList();    }    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
1516	[BUG]  [BUGGY]  if(propertyContinuations!=  null)  {  finishPropertyList();  }  else  {  forAnnotations  =  Lists.emptyList();  }  [CE]  cannot  find  symbol  [FE]                                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(propertyContinuations!=  null)  {  finishPropertyList();  }  else  {  forAnnotations  =  Lists.emptyList();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations!=  null)  {  finishPropertyList();  }  else  {  forAnnotations  =  Lists.emptyList();  }	  if(propertyContinuations!=    null)    {    finishPropertyContinuations();    }    else    {    forAnnotations    =    Lists.emptyList();    }    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
1517	[BUG]  [BUGGY]  Parchet.checkState(registry.isLastGeneration()?  getReferencedType()  :  registry.isLastGeneration());  [CE]  cannot  find  symbol  Parchet  [FE]                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Parchet.checkState(registry.isLastGeneration()?  getReferencedType()  :  registry.isLastGeneration());  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Parchet.checkState(registry.isLastGeneration()?  getReferencedType()  :  registry.isLastGeneration());	  Parchet.checkState(registry.isLastGeneration());    	non-compiled	[CE]  cannot  find  symbol  Parchet	247	None	replace
1518	[BUG]  [BUGGY]  Parchet.checkState(registry.isLastGeneration()?  registry.isLastGeneration()  :  null);  [CE]  cannot  find  symbol  Parchet  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Parchet.checkState(registry.isLastGeneration()?  registry.isLastGeneration()  :  null);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Parchet.checkState(registry.isLastGeneration()?  registry.isLastGeneration()  :  null);	  Parchet.checkState(registry.isLastGeneration());    	non-compiled	[CE]  cannot  find  symbol  Parchet	247	None	replace
1519	[BUG]  [BUGGY]  Parchet.checkState(registry.isLastGeneration()  &&  resolveViaProperties(t,  enclosing));  [CE]  'void'  type  not  allowed  here  [FE]                            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Parchet.checkState(registry.isLastGeneration()  &&  resolveViaProperties(t,  enclosing));  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Parchet.checkState(registry.isLastGeneration()  &&  resolveViaProperties(t,  enclosing));	  Parchet.checkState(registry.isLastGeneration());    	non-compiled	[CE]  'void'  type  not  allowed  here	247	None	replace
1520	[BUG]  [BUGGY]  luate(resolved,  propertyNode)  {  finishPropertyContinuations();  }  else  {  registry.isLastGeneration()?  getReferencedType()  :  null;  }  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  luate(resolved,  propertyNode)  {  finishPropertyContinuations();  }  else  {  registry.isLastGeneration()?  getReferencedType()  :  null;  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	luate(resolved,  propertyNode)  {  finishPropertyContinuations();  }  else  {  registry.isLastGeneration()?  getReferencedType()  :  null;  }	  luate(registry,    resolved)    {    finishPropertyContinuations();    }    else    {    registry.isLastGeneration()?    getReferencedType()    :    null;    }    	non-compiled	[CE]  ';'  expected	167	None	replace
1521	[BUG]  [BUGGY]  luate(registry,  inferred)  {  finishPropertyContinuations();  }  else  {  registry.isLastGeneration()?  getReferencedType()  :  null;  }  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  luate(registry,  inferred)  {  finishPropertyContinuations();  }  else  {  registry.isLastGeneration()?  getReferencedType()  :  null;  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	luate(registry,  inferred)  {  finishPropertyContinuations();  }  else  {  registry.isLastGeneration()?  getReferencedType()  :  null;  }	  luate(registry,    resolved)    {    finishPropertyContinuations();    }    else    {    registry.isLastGeneration()?    getReferencedType()    :    null;    }    	non-compiled	[CE]  ';'  expected	167	None	replace
1522	[BUG]  [BUGGY]  luate(registry,  enclosing)  {  startPropertyGenerations();  }  else  {  registry.isLastGeneration()?  getReferencedType()  :  null;  }  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  luate(registry,  enclosing)  {  startPropertyGenerations();  }  else  {  registry.isLastGeneration()?  getReferencedType()  :  null;  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	luate(registry,  enclosing)  {  startPropertyGenerations();  }  else  {  registry.isLastGeneration()?  getReferencedType()  :  null;  }	  luate(registry,    resolved)    {    finishPropertyContinuations();    }    else    {    registry.isLastGeneration()?    getReferencedType()    :    null;    }    	non-compiled	[CE]  ';'  expected	167	None	replace
1523	[BUG]  [BUGGY]  Predicate  validator  =  getValueType();  [CE]  cannot  find  symbol  [FE]                                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Predicate  validator  =  getValueType();  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Predicate  validator  =  getValueType();	          Predicate    validator    =    getValue();    	non-compiled	[CE]  cannot  find  symbol	25	None	replace
1524	[BUG]  [BUGGY]  Predicate  validator  =  getValue(registry);  [CE]  cannot  find  symbol  [FE]                                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Predicate  validator  =  getValue(registry);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Predicate  validator  =  getValue(registry);	          Predicate    validator    =    getValue();    	non-compiled	[CE]  cannot  find  symbol	25	None	replace
1525	[BUG]  [BUGGY]  Predicate  validator  =  getValueReference();  [CE]  cannot  find  symbol  [FE]                                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Predicate  validator  =  getValueReference();  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Predicate  validator  =  getValueReference();	          Predicate    validator    =    getValue();    	non-compiled	[CE]  cannot  find  symbol	25	None	replace
1526	[BUG]  [BUGGY]  Predicate  validator  =  getValue(),  registry.isLastGeneration();  [CE]  ';'  expected  [FE]                                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Predicate  validator  =  getValue(),  registry.isLastGeneration();  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Predicate  validator  =  getValue(),  registry.isLastGeneration();	          Predicate    validator    =    getValue();    	non-compiled	[CE]  ';'  expected	25	None	replace
1527	[BUG]  [BUGGY]  registry.isLastGeneration()?  getReferencedType()  :  type;  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  registry.isLastGeneration()?  getReferencedType()  :  type;  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	registry.isLastGeneration()?  getReferencedType()  :  type;	  registry.isLastGeneration()?    getReferencedType()    :    null;    	non-compiled	[CE]  not  a  statement	72	None	replace
1528	[BUG]  [BUGGY]  PropertyContinuation  propertyContinuations  =  registry.getPropertyContinuations(propertyName,  enclosing);  [CE]  cannot  find  symbol  propertyName  [FE]                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  PropertyContinuation  propertyContinuations  =  registry.getPropertyContinuations(propertyName,  enclosing);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	PropertyContinuation  propertyContinuations  =  registry.getPropertyContinuations(propertyName,  enclosing);	  PropertyContinuation    propertyContinuations    =    registry.getPropertyContinuations();    	non-compiled	[CE]  cannot  find  symbol  propertyName	146	None	replace
1529	[BUG]  [BUGGY]  PropertyContinuation  propertyContinuations  =  registry.getPropertyContinuations(propertyNamingStrategy);  [CE]  cannot  find  symbol  propertyNamingStrategy  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  PropertyContinuation  propertyContinuations  =  registry.getPropertyContinuations(propertyNamingStrategy);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	PropertyContinuation  propertyContinuations  =  registry.getPropertyContinuations(propertyNamingStrategy);	  PropertyContinuation    propertyContinuations    =    registry.getPropertyContinuations();    	non-compiled	[CE]  cannot  find  symbol  propertyNamingStrategy	146	None	replace
1530	[BUG]  [BUGGY]  PROPERTY.finishPropertyContinuations();  [CE]  cannot  find  symbol  PROPERTY  [FE]                            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  PROPERTY.finishPropertyContinuations();  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	PROPERTY.finishPropertyContinuations();	  result.finishPropertyContinuations();    	non-compiled	[CE]  cannot  find  symbol  PROPERTY	91	None	replace
1531	[BUG]  [BUGGY]  if(propertyContinuations  ==  null)  {  finishPropertyContinuations();  }  else  {  registry.isFirstGeneration()?  getReferencedType()  :  this;  }  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(propertyContinuations  ==  null)  {  finishPropertyContinuations();  }  else  {  registry.isFirstGeneration()?  getReferencedType()  :  this;  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations  ==  null)  {  finishPropertyContinuations();  }  else  {  registry.isFirstGeneration()?  getReferencedType()  :  this;  }	  if(propertyContinuations!=    null)    {    finishPropertyContinuations();    }    else    {    registry.isFirstGeneration()?    getReferencedType()    :    this;    }    	non-compiled	[CE]  not  a  statement	215	None	replace
1532	[BUG]  [BUGGY]  PropertyContinuations  <  null)  {  finishPropertyContinuations();  }  else  {  registry.isFirstGeneration()?  getReferencedType()  :  this;  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  PropertyContinuations  <  null)  {  finishPropertyContinuations();  }  else  {  registry.isFirstGeneration()?  getReferencedType()  :  this;  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	PropertyContinuations  <  null)  {  finishPropertyContinuations();  }  else  {  registry.isFirstGeneration()?  getReferencedType()  :  this;  }	  if(propertyContinuations!=    null)    {    finishPropertyContinuations();    }    else    {    registry.isFirstGeneration()?    getReferencedType()    :    this;    }    	non-compiled	[CE]  illegal  start  of  type	215	None	replace
1533	[BUG]  [BUGGY]  validator!=  null  &&  validator.hasProperty(propertyName))  {  startPropertyGeneration();  }  else  {  registry.isLastGeneration()  :  this;  }  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  validator!=  null  &&  validator.hasProperty(propertyName))  {  startPropertyGeneration();  }  else  {  registry.isLastGeneration()  :  this;  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	validator!=  null  &&  validator.hasProperty(propertyName))  {  startPropertyGeneration();  }  else  {  registry.isLastGeneration()  :  this;  }	  if(validator!=    null)    {    startPropertyGeneration();    }    else    {    registry.isLastGeneration()    :    this;    }    	non-compiled	[CE]  not  a  statement	242	None	replace
1534	[BUG]  [BUGGY]  if(validator!=  null)  {  startPropertyGeneration();  }  else  {  registry.isFirstGeneration()  :  this;  }  [CE]  ';'  expected  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(validator!=  null)  {  startPropertyGeneration();  }  else  {  registry.isFirstGeneration()  :  this;  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(validator!=  null)  {  startPropertyGeneration();  }  else  {  registry.isFirstGeneration()  :  this;  }	  if(validator!=    null)    {    startPropertyGeneration();    }    else    {    registry.isLastGeneration()    :    this;    }    	non-compiled	[CE]  ';'  expected	242	None	replace
1535	[BUG]  [BUGGY]  final  if(resolved)  {  finishPropertyInternal();  }  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  final  if(resolved)  {  finishPropertyInternal();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	final  if(resolved)  {  finishPropertyInternal();  }	  if(resolved)    {    finishPropertyInternal();    }    	non-compiled	[CE]  illegal  start  of  type	130	None	replace
1536	[BUG]  [BUGGY]  resolved  =  finishPropertyInternal();  [CE]  cannot  find  symbol  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  resolved  =  finishPropertyInternal();  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	resolved  =  finishPropertyInternal();	  if(resolved)    {    finishPropertyInternal();    }    	non-compiled	[CE]  cannot  find  symbol	130	None	replace
1537	[BUG]  [BUGGY]  PropertyInternal  t  =  getPropertyInternal();  [CE]  cannot  find  symbol  [FE]                            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  PropertyInternal  t  =  getPropertyInternal();  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	PropertyInternal  t  =  getPropertyInternal();	  if(resolved)    {    finishPropertyInternal();    }    	non-compiled	[CE]  cannot  find  symbol	130	None	replace
1538	[BUG]  [BUGGY]  if(resolved)  {  startPropertyInternal();  }  [CE]  cannot  find  symbol  [FE]                              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(resolved)  {  startPropertyInternal();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(resolved)  {  startPropertyInternal();  }	  if(resolved)    {    finishPropertyInternal();    }    	non-compiled	[CE]  cannot  find  symbol	130	None	replace
1539	[BUG]  [BUGGY]  PropertyInternal  t  =  finishPropertyInternal();  [CE]  cannot  find  symbol  [FE]                                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  PropertyInternal  t  =  finishPropertyInternal();  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	PropertyInternal  t  =  finishPropertyInternal();	  if(resolved)    {    finishPropertyInternal();    }    	non-compiled	[CE]  cannot  find  symbol	130	None	replace
1540	[BUG]  [BUGGY]  registry.isLastGeneration()?  getReferencedType()  :  REFERENCE_TYPE;  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  registry.isLastGeneration()?  getReferencedType()  :  REFERENCE_TYPE;  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	registry.isLastGeneration()?  getReferencedType()  :  REFERENCE_TYPE;	  registry.isLastGeneration()?    getReferencedType()    :    this;    	non-compiled	[CE]  not  a  statement	7	None	replace
1541	[BUG]  [BUGGY]  registry.isLastGeneration()?  getReferencedType()  :  REFERENCED_TYPE;  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  registry.isLastGeneration()?  getReferencedType()  :  REFERENCED_TYPE;  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	registry.isLastGeneration()?  getReferencedType()  :  REFERENCED_TYPE;	  registry.isLastGeneration()?    getReferencedType()    :    this;    	non-compiled	[CE]  not  a  statement	7	None	replace
1542	[BUG]  [BUGGY]  Preconditions.checkState(resolved)  {  startPropertyContinuations();  }  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Preconditions.checkState(resolved)  {  startPropertyContinuations();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Preconditions.checkState(resolved)  {  startPropertyContinuations();  }	  previously()    {    finishPropertyContinuations();    }    	non-compiled	[CE]  ';'  expected	219	None	replace
1543	[BUG]  [BUGGY]  if(propertyInferred!=  null)  {  finishPropertyInferred();  }  else  {  propertyContinuations.add(propertyName);  }  [CE]  cannot  find  symbol  propertyInferred  [FE]                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(propertyInferred!=  null)  {  finishPropertyInferred();  }  else  {  propertyContinuations.add(propertyName);  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyInferred!=  null)  {  finishPropertyInferred();  }  else  {  propertyContinuations.add(propertyName);  }	  if(propertyContinuations!=    null)    {    finishPropertyInferred();    }    else    {    propertyContinuations.add(propertyName);    }    	non-compiled	[CE]  cannot  find  symbol  propertyInferred	150	None	replace
1544	[BUG]  [BUGGY]  if(propertyContinuations!=  null)  {  startPropertyInferred();  }  else  {  propertyContinuations.add(propertyName);  }  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(propertyContinuations!=  null)  {  startPropertyInferred();  }  else  {  propertyContinuations.add(propertyName);  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations!=  null)  {  startPropertyInferred();  }  else  {  propertyContinuations.add(propertyName);  }	  if(propertyContinuations!=    null)    {    finishPropertyInferred();    }    else    {    propertyContinuations.add(propertyName);    }    	non-compiled	[CE]  cannot  find  symbol	150	None	replace
1545	[BUG]  [BUGGY]  Predicates.checkArgument(validator.detectImplicitPrototypeCycle());  [CE]  cannot  find  symbol  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Predicates.checkArgument(validator.detectImplicitPrototypeCycle());  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Predicates.checkArgument(validator.detectImplicitPrototypeCycle());	  Predicates.checkArgument(detectImplicitPrototypeCycle());    	non-compiled	[CE]  cannot  find  symbol	201	None	replace
1546	[BUG]  [BUGGY]  Predicates.checkArgument(validator.detectPrototypeCycle());  [CE]  cannot  find  symbol  [FE]                            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Predicates.checkArgument(validator.detectPrototypeCycle());  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Predicates.checkArgument(validator.detectPrototypeCycle());	  Predicates.checkArgument(detectImplicitPrototypeCycle());    	non-compiled	[CE]  cannot  find  symbol	201	None	replace
1547	[BUG]  [BUGGY]  Predicates.checkArgument(detectImplicitInternalCycle());  [CE]  cannot  find  symbol  [FE]                              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Predicates.checkArgument(detectImplicitInternalCycle());  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Predicates.checkArgument(detectImplicitInternalCycle());	  Predicates.checkArgument(detectImplicitPrototypeCycle());    	non-compiled	[CE]  cannot  find  symbol	201	None	replace
1548	[BUG]  [BUGGY]  Predicates.checkArgument(detectImplicitInternal());  [CE]  cannot  find  symbol  [FE]                                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Predicates.checkArgument(detectImplicitInternal());  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Predicates.checkArgument(detectImplicitInternal());	  Predicates.checkArgument(detectImplicitPrototypeCycle());    	non-compiled	[CE]  cannot  find  symbol	201	None	replace
1549	[BUG]  [BUGGY]  Predicates.checkArgument(resolved);  [CE]  cannot  find  symbol  Predicates  [FE]                                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Predicates.checkArgument(resolved);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Predicates.checkArgument(resolved);	  Predicates.checkArgument(detectImplicitPrototypeCycle());    	non-compiled	[CE]  cannot  find  symbol  Predicates	201	None	replace
1550	[BUG]  [BUGGY]  Parchet.checkState(registry.isLastGeneration()?  getReferencedType()  :  REFERENCED_TYPE;  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Parchet.checkState(registry.isLastGeneration()?  getReferencedType()  :  REFERENCED_TYPE;  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Parchet.checkState(registry.isLastGeneration()?  getReferencedType()  :  REFERENCED_TYPE;	  Parchet.checkState(registry.isLastGeneration()?    getReferencedType()    :    this;    	non-compiled	[CE]  ')'  expected	65	None	replace
1551	[BUG]  [BUGGY]  Parchet.checkState(registry.isLastGeneration()?  getInferredType()  :  this;  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Parchet.checkState(registry.isLastGeneration()?  getInferredType()  :  this;  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Parchet.checkState(registry.isLastGeneration()?  getInferredType()  :  this;	  Parchet.checkState(registry.isLastGeneration()?    getReferencedType()    :    this;    	non-compiled	[CE]  ')'  expected	65	None	replace
1552	[BUG]  [BUGGY]  if(resolved)  {  startInferredPropertyGenerations();  }  else  {  registry.isLastGeneration()  :  this;  }  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(resolved)  {  startInferredPropertyGenerations();  }  else  {  registry.isLastGeneration()  :  this;  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(resolved)  {  startInferredPropertyGenerations();  }  else  {  registry.isLastGeneration()  :  this;  }	  if(resolved)    {    startPropertyGenerations();    }    else    {    registry.isLastGeneration()    :    this;    }    	non-compiled	[CE]  ';'  expected	173	None	replace
1553	[BUG]  [BUGGY]  if(resolved)  {  startInferredProperties();  }  else  {  registry.isLastGeneration()  :  this;  }  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(resolved)  {  startInferredProperties();  }  else  {  registry.isLastGeneration()  :  this;  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(resolved)  {  startInferredProperties();  }  else  {  registry.isLastGeneration()  :  this;  }	  if(resolved)    {    startPropertyGenerations();    }    else    {    registry.isLastGeneration()    :    this;    }    	non-compiled	[CE]  ';'  expected	173	None	replace
1554	[BUG]  [BUGGY]  if(resolved)  {  startPropertyGenerations();  }  else  {  registry.isFirstGeneration()  :  this;  }  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(resolved)  {  startPropertyGenerations();  }  else  {  registry.isFirstGeneration()  :  this;  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(resolved)  {  startPropertyGenerations();  }  else  {  registry.isFirstGeneration()  :  this;  }	  if(resolved)    {    startPropertyGenerations();    }    else    {    registry.isLastGeneration()    :    this;    }    	non-compiled	[CE]  ';'  expected	173	None	replace
1555	[BUG]  [BUGGY]  if(resolved)  {  startPropertyGenerations();  }  else  {  registry.isLastGeneration()  :  null;  }  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(resolved)  {  startPropertyGenerations();  }  else  {  registry.isLastGeneration()  :  null;  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(resolved)  {  startPropertyGenerations();  }  else  {  registry.isLastGeneration()  :  null;  }	  if(resolved)    {    startPropertyGenerations();    }    else    {    registry.isLastGeneration()    :    this;    }    	non-compiled	[CE]  ';'  expected	173	None	replace
1556	[BUG]  [BUGGY]  if(resolved)  {  startPropertyGenerations();  }  else  {  registry.isLastGeneration()  :  getReferencedType();  }  [CE]  ';'  expected  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(resolved)  {  startPropertyGenerations();  }  else  {  registry.isLastGeneration()  :  getReferencedType();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(resolved)  {  startPropertyGenerations();  }  else  {  registry.isLastGeneration()  :  getReferencedType();  }	  if(resolved)    {    startPropertyGenerations();    }    else    {    registry.isLastGeneration()    :    this;    }    	non-compiled	[CE]  ';'  expected	173	None	replace
1557	[BUG]  [BUGGY]  if(propertyContinuations  ==  null)  {  finishPropertyContinuations();  }  else  {  propertyContinuations.add(resolved);  }  [CE]  no  suitable  method  found  for  add(boolean)  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(propertyContinuations  ==  null)  {  finishPropertyContinuations();  }  else  {  propertyContinuations.add(resolved);  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations  ==  null)  {  finishPropertyContinuations();  }  else  {  propertyContinuations.add(resolved);  }	  if(propertyContinuations!=    null)    {    finishPropertyContinuations();    }    else    {    propertyContinuations.add(resolved);    }    	non-compiled	[CE]  no  suitable  method  found  for  add(boolean)	70	None	replace
1558	[BUG]  [BUGGY]  if(propertyContinuations!=  null)  {  finishPropertyInferred();  }  else  {  propertyContinuations.add(resolved);  }  [CE]  cannot  find  symbol  [FE]                            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(propertyContinuations!=  null)  {  finishPropertyInferred();  }  else  {  propertyContinuations.add(resolved);  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations!=  null)  {  finishPropertyInferred();  }  else  {  propertyContinuations.add(resolved);  }	  if(propertyContinuations!=    null)    {    finishPropertyContinuations();    }    else    {    propertyContinuations.add(resolved);    }    	non-compiled	[CE]  cannot  find  symbol	70	None	replace
1559	[BUG]  [BUGGY]  if(propertyContinuations!=  null)  {  finishPropertyAnnotations();  }  else  {  propertyContinuations.add(resolved);  }  [CE]  cannot  find  symbol  [FE]                              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(propertyContinuations!=  null)  {  finishPropertyAnnotations();  }  else  {  propertyContinuations.add(resolved);  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations!=  null)  {  finishPropertyAnnotations();  }  else  {  propertyContinuations.add(resolved);  }	  if(propertyContinuations!=    null)    {    finishPropertyContinuations();    }    else    {    propertyContinuations.add(resolved);    }    	non-compiled	[CE]  cannot  find  symbol	70	None	replace
1560	[BUG]  [BUGGY]  if(propertyContinuations!=  null)  {  startPropertyGeneration();  }  else  {  propertyContinuations.add(resolved);  }  [CE]  cannot  find  symbol  [FE]                                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(propertyContinuations!=  null)  {  startPropertyGeneration();  }  else  {  propertyContinuations.add(resolved);  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations!=  null)  {  startPropertyGeneration();  }  else  {  propertyContinuations.add(resolved);  }	  if(propertyContinuations!=    null)    {    finishPropertyContinuations();    }    else    {    propertyContinuations.add(resolved);    }    	non-compiled	[CE]  cannot  find  symbol	70	None	replace
1561	[BUG]  [BUGGY]  luate(registry,  inferred)  {  finishPropertyContinuations();  }  else  {  registry.isFirstGeneration()?  getReferencedType()  :  null;  }  [CE]  ';'  expected  [FE]                            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  luate(registry,  inferred)  {  finishPropertyContinuations();  }  else  {  registry.isFirstGeneration()?  getReferencedType()  :  null;  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	luate(registry,  inferred)  {  finishPropertyContinuations();  }  else  {  registry.isFirstGeneration()?  getReferencedType()  :  null;  }	  luate(registry,    resolved)    {    finishPropertyContinuations();    }    else    {    registry.isFirstGeneration()?    getReferencedType()    :    null;    }    	non-compiled	[CE]  ';'  expected	183	None	replace
1562	[BUG]  [BUGGY]  luate(registry,  enclosing)  {  getPropertyContinuations();  }  else  {  registry.isFirstGeneration()?  getReferencedType()  :  null;  }  [CE]  ';'  expected  [FE]                              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  luate(registry,  enclosing)  {  getPropertyContinuations();  }  else  {  registry.isFirstGeneration()?  getReferencedType()  :  null;  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	luate(registry,  enclosing)  {  getPropertyContinuations();  }  else  {  registry.isFirstGeneration()?  getReferencedType()  :  null;  }	  luate(registry,    resolved)    {    finishPropertyContinuations();    }    else    {    registry.isFirstGeneration()?    getReferencedType()    :    null;    }    	non-compiled	[CE]  ';'  expected	183	None	replace
1563	[BUG]  [BUGGY]  luate(registry,  null)  {  finishPropertyContinuations();  }  else  {  registry.isFirstGeneration()?  getReferencedType()  :  null;  }  [CE]  ';'  expected  [FE]                                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  luate(registry,  null)  {  finishPropertyContinuations();  }  else  {  registry.isFirstGeneration()?  getReferencedType()  :  null;  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	luate(registry,  null)  {  finishPropertyContinuations();  }  else  {  registry.isFirstGeneration()?  getReferencedType()  :  null;  }	  luate(registry,    resolved)    {    finishPropertyContinuations();    }    else    {    registry.isFirstGeneration()?    getReferencedType()    :    null;    }    	non-compiled	[CE]  ';'  expected	183	None	replace
1564	[BUG]  [BUGGY]  Annotations  inferred  =  resolved?  getReferencedType()  :  this;  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Annotations  inferred  =  resolved?  getReferencedType()  :  this;  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Annotations  inferred  =  resolved?  getReferencedType()  :  this;	  if(resolved)    {    finishPropertyGenerations();    }    else    {    registry.isLastGeneration()    :    this;    }    	non-compiled	[CE]  cannot  find  symbol	172	None	replace
1565	[BUG]  [BUGGY]  Annotations  inferred  =  resolved?  getReferencedType()  :  registry.isLastGeneration();  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Annotations  inferred  =  resolved?  getReferencedType()  :  registry.isLastGeneration();  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Annotations  inferred  =  resolved?  getReferencedType()  :  registry.isLastGeneration();	  if(resolved)    {    finishPropertyGenerations();    }    else    {    registry.isLastGeneration()    :    this;    }    	non-compiled	[CE]  cannot  find  symbol	172	None	replace
1566	[BUG]  [BUGGY]  Annotations  inferred  =  resolved?  getReferencedType()  :  null;  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Annotations  inferred  =  resolved?  getReferencedType()  :  null;  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Annotations  inferred  =  resolved?  getReferencedType()  :  null;	  if(resolved)    {    finishPropertyGenerations();    }    else    {    registry.isLastGeneration()    :    this;    }    	non-compiled	[CE]  cannot  find  symbol	172	None	replace
1567	[BUG]  [BUGGY]  Predicates.checkState(resolved  ||  registry.isLastGeneration());  [CE]  cannot  find  symbol  Predicates  [FE]                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Predicates.checkState(resolved  ||  registry.isLastGeneration());  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Predicates.checkState(resolved  ||  registry.isLastGeneration());	  if(resolved)    {    finishPropertyGenerations();    }    else    {    registry.isLastGeneration()    :    this;    }    	non-compiled	[CE]  cannot  find  symbol  Predicates	172	None	replace
1568	[BUG]  [BUGGY]  Annotations  inferred  =  resolved  &&  registry.isLastGeneration();  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Annotations  inferred  =  resolved  &&  registry.isLastGeneration();  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Annotations  inferred  =  resolved  &&  registry.isLastGeneration();	  if(resolved)    {    finishPropertyGenerations();    }    else    {    registry.isLastGeneration()    :    this;    }    	non-compiled	[CE]  cannot  find  symbol	172	None	replace
1569	[BUG]  [BUGGY]  PropertyContinuation  propertyContinuations  =  registry.getReferencedType()?  getReferencedType()  :  null;  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  PropertyContinuation  propertyContinuations  =  registry.getReferencedType()?  getReferencedType()  :  null;  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	PropertyContinuation  propertyContinuations  =  registry.getReferencedType()?  getReferencedType()  :  null;	  PropertyContinuation    propertyContinuations    =    registry.isLastGeneration()?    getReferencedType()    :    null;    	non-compiled	[CE]  cannot  find  symbol	145	None	replace
1570	[BUG]  [BUGGY]  PropertyContinuation  propertyContinuations  =  registry.isLastGeneration()?  getReferencedType()  :  new  PropertyContinuation(registry);  [CE]  constructor  PropertyContinuation  in  class  PropertyContinuation  cannot  be  applied  to  given  types;  [FE]                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  PropertyContinuation  propertyContinuations  =  registry.isLastGeneration()?  getReferencedType()  :  new  PropertyContinuation(registry);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	PropertyContinuation  propertyContinuations  =  registry.isLastGeneration()?  getReferencedType()  :  new  PropertyContinuation(registry);	  PropertyContinuation    propertyContinuations    =    registry.isLastGeneration()?    getReferencedType()    :    null;    	non-compiled	[CE]  constructor  PropertyContinuation  in  class  PropertyContinuation  cannot  be  applied  to  given  types;	145	None	replace
1571	[BUG]  [BUGGY]  PropertyContinuation  propertyContinuations  =  registry.isLastGeneration()?  getReferencedType()  :  DEFAULT_PROPERTY;  [CE]  cannot  find  symbol  DEFAULT_PROPERTY  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  PropertyContinuation  propertyContinuations  =  registry.isLastGeneration()?  getReferencedType()  :  DEFAULT_PROPERTY;  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	PropertyContinuation  propertyContinuations  =  registry.isLastGeneration()?  getReferencedType()  :  DEFAULT_PROPERTY;	  PropertyContinuation    propertyContinuations    =    registry.isLastGeneration()?    getReferencedType()    :    null;    	non-compiled	[CE]  cannot  find  symbol  DEFAULT_PROPERTY	145	None	replace
1572	[BUG]  [BUGGY]  BundlePropertyContinuations  registry  =  getBundlePropertyContinuations(propertyNode,  validator);  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  BundlePropertyContinuations  registry  =  getBundlePropertyContinuations(propertyNode,  validator);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	BundlePropertyContinuations  registry  =  getBundlePropertyContinuations(propertyNode,  validator);	  BundlePropertyContinuations    registry    =    getBundlePropertyContinuations(propertyNode);    	non-compiled	[CE]  cannot  find  symbol	102	None	replace
1573	[BUG]  [BUGGY]  if(enclosing!=  null)  {  aughtExceptionHandler.handlePropertyType(t,  enclosing);  }  [CE]  cannot  find  symbol  aughtExceptionHandler  [FE]                                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(enclosing!=  null)  {  aughtExceptionHandler.handlePropertyType(t,  enclosing);  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(enclosing!=  null)  {  aughtExceptionHandler.handlePropertyType(t,  enclosing);  }	  aughtExceptionHandler.handlePropertyType(t,    enclosing);    	non-compiled	[CE]  cannot  find  symbol  aughtExceptionHandler	199	None	replace
1574	[BUG]  [BUGGY]  if(enclosing!=  null)  {  aughtExceptionHandler.handlePropertyType(t,  enclosing);  }  else  {  registry.isLastGeneration()?  getReferencedType()  :  this;  }  [CE]  not  a  statement  [FE]                                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(enclosing!=  null)  {  aughtExceptionHandler.handlePropertyType(t,  enclosing);  }  else  {  registry.isLastGeneration()?  getReferencedType()  :  this;  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(enclosing!=  null)  {  aughtExceptionHandler.handlePropertyType(t,  enclosing);  }  else  {  registry.isLastGeneration()?  getReferencedType()  :  this;  }	  aughtExceptionHandler.handlePropertyType(t,    enclosing);    	non-compiled	[CE]  not  a  statement	199	None	replace
1575	[BUG]  [BUGGY]  if(resolved)  {  aughtExceptionHandler.handlePropertyType(t,  enclosing);  }  [CE]  cannot  find  symbol  aughtExceptionHandler  [FE]                                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(resolved)  {  aughtExceptionHandler.handlePropertyType(t,  enclosing);  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(resolved)  {  aughtExceptionHandler.handlePropertyType(t,  enclosing);  }	  aughtExceptionHandler.handlePropertyType(t,    enclosing);    	non-compiled	[CE]  cannot  find  symbol  aughtExceptionHandler	199	None	replace
1576	[BUG]  [BUGGY]  if(enclosing  ==  null)  {  aughtExceptionHandler.handlePropertyType(t,  enclosing);  }  [CE]  cannot  find  symbol  aughtExceptionHandler  [FE]                                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(enclosing  ==  null)  {  aughtExceptionHandler.handlePropertyType(t,  enclosing);  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(enclosing  ==  null)  {  aughtExceptionHandler.handlePropertyType(t,  enclosing);  }	  aughtExceptionHandler.handlePropertyType(t,    enclosing);    	non-compiled	[CE]  cannot  find  symbol  aughtExceptionHandler	199	None	replace
1577	[BUG]  [BUGGY]  if(enclosing  ==  null)  {  aughtExceptionHandler.handlePropertyType(t,  enclosing);  }  else  {  registry.isLastGeneration()?  getReferencedType()  :  this;  }  [CE]  not  a  statement  [FE]                                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(enclosing  ==  null)  {  aughtExceptionHandler.handlePropertyType(t,  enclosing);  }  else  {  registry.isLastGeneration()?  getReferencedType()  :  this;  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(enclosing  ==  null)  {  aughtExceptionHandler.handlePropertyType(t,  enclosing);  }  else  {  registry.isLastGeneration()?  getReferencedType()  :  this;  }	  aughtExceptionHandler.handlePropertyType(t,    enclosing);    	non-compiled	[CE]  not  a  statement	199	None	replace
1578	[BUG]  [BUGGY]  Status.checkState(registry.isLastGeneration(),  getReferencedType(),  enclosing);  [CE]  cannot  find  symbol  Status  [FE]                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Status.checkState(registry.isLastGeneration(),  getReferencedType(),  enclosing);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Status.checkState(registry.isLastGeneration(),  getReferencedType(),  enclosing);	  Status.checkState(registry.isLastGeneration(),    getReferencedType());    	non-compiled	[CE]  cannot  find  symbol  Status	11	None	replace
1579	[BUG]  [BUGGY]  Status.checkState(registry.isLastGeneration(),  getReferencedType(),  inferred);  [CE]  cannot  find  symbol  inferred  [FE]                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Status.checkState(registry.isLastGeneration(),  getReferencedType(),  inferred);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Status.checkState(registry.isLastGeneration(),  getReferencedType(),  inferred);	  Status.checkState(registry.isLastGeneration(),    getReferencedType());    	non-compiled	[CE]  cannot  find  symbol  inferred	11	None	replace
1580	[BUG]  [BUGGY]  Status.checkState(registry.isLastGeneration(),  getReferencedType(),  propertyNode);  [CE]  cannot  find  symbol  propertyNode  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Status.checkState(registry.isLastGeneration(),  getReferencedType(),  propertyNode);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Status.checkState(registry.isLastGeneration(),  getReferencedType(),  propertyNode);	  Status.checkState(registry.isLastGeneration(),    getReferencedType());    	non-compiled	[CE]  cannot  find  symbol  propertyNode	11	None	replace
1581	[BUG]  [BUGGY]  if(validator  ==  null)  {  finishPropertyContinuations();  }  if(validator  ==  null)  {  finishPropertyContinuations();  System.err.println( "PropertyContinuations: "  +  propertyName);  }  [CE]  cannot  find  symbol  propertyName  [FE]            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(validator  ==  null)  {  finishPropertyContinuations();  }  if(validator  ==  null)  {  finishPropertyContinuations();  System.err.println( "PropertyContinuations: "  +  propertyName);  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(validator    ==    null)    {    finishPropertyContinuations();    }    if(validator  ==  null)  {  finishPropertyContinuations();  System.err.println( "PropertyContinuations: "  +  propertyName);  }	  timeout    	non-compiled	[CE]  cannot  find  symbol  propertyName	156	None	add
1582	[BUG]  [BUGGY]  if(validator  ==  null)  {  finishPropertyContinuations();  }  for(validator  ==  null)  {  finishPropertyContinuations();  }  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(validator  ==  null)  {  finishPropertyContinuations();  }  for(validator  ==  null)  {  finishPropertyContinuations();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(validator    ==    null)    {    finishPropertyContinuations();    }    for(validator  ==  null)  {  finishPropertyContinuations();  }	  timeout    	non-compiled	[CE]  not  a  statement	156	None	add
1583	[BUG]  [BUGGY]  propertyContinuations  =  registry.isFirstGeneration()?  getReferencedType()  :  null;  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  propertyContinuations  =  registry.isFirstGeneration()?  getReferencedType()  :  null;  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	propertyContinuations  =  registry.isFirstGeneration()?  getReferencedType()  :  null;	  propertyContinuations    =    registry.isLastGeneration()?    getReferencedType()    :    null;    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
1584	[BUG]  [BUGGY]  PropertyContinuations  propertyContinuations  =  registry.isLastGeneration()?  getReferencedType()  :  null;  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  PropertyContinuations  propertyContinuations  =  registry.isLastGeneration()?  getReferencedType()  :  null;  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	PropertyContinuations  propertyContinuations  =  registry.isLastGeneration()?  getReferencedType()  :  null;	  propertyContinuations    =    registry.isLastGeneration()?    getReferencedType()    :    null;    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
1585	[BUG]  [BUGGY]  propertyContinuations  =  registry.isLastGeneration()?  getReferencedType()  :  PropertyContinuation.EMPTY;  [CE]  cannot  find  symbol  EMPTY  [FE]                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  propertyContinuations  =  registry.isLastGeneration()?  getReferencedType()  :  PropertyContinuation.EMPTY;  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	propertyContinuations  =  registry.isLastGeneration()?  getReferencedType()  :  PropertyContinuation.EMPTY;	  propertyContinuations    =    registry.isLastGeneration()?    getReferencedType()    :    null;    	non-compiled	[CE]  cannot  find  symbol  EMPTY	10	None	replace
1586	[BUG]  [BUGGY]  if(validator!=  null  ||  registry.isLastGeneration())  {  finishPropertyInternal();  }  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(validator!=  null  ||  registry.isLastGeneration())  {  finishPropertyInternal();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(validator!=  null  ||  registry.isLastGeneration())  {  finishPropertyInternal();  }	  if(validator!=    null)    {    finishPropertyInternal();    }    	non-compiled	[CE]  cannot  find  symbol	160	None	replace
1587	[BUG]  [BUGGY]  if(validator!=  null  &&  registry.isLastGeneration())  {  finishPropertyInternal();  }  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(validator!=  null  &&  registry.isLastGeneration())  {  finishPropertyInternal();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(validator!=  null  &&  registry.isLastGeneration())  {  finishPropertyInternal();  }	  if(validator!=    null)    {    finishPropertyInternal();    }    	non-compiled	[CE]  cannot  find  symbol	160	None	replace
1588	[BUG]  [BUGGY]  if(validator!=  null  ||  registry.isLastGeneration())  {  startPropertyInternal();  }  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(validator!=  null  ||  registry.isLastGeneration())  {  startPropertyInternal();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(validator!=  null  ||  registry.isLastGeneration())  {  startPropertyInternal();  }	  if(validator!=    null)    {    finishPropertyInternal();    }    	non-compiled	[CE]  cannot  find  symbol	160	None	replace
1589	[BUG]  [BUGGY]  if(validator!=  null  &&  registry.isLastGeneration())  {  startPropertyInternal();  }  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(validator!=  null  &&  registry.isLastGeneration())  {  startPropertyInternal();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(validator!=  null  &&  registry.isLastGeneration())  {  startPropertyInternal();  }	  if(validator!=    null)    {    finishPropertyInternal();    }    	non-compiled	[CE]  cannot  find  symbol	160	None	replace
1590	[BUG]  [BUGGY]  final  PropertyContinuations  <  PropertyContinuation>  startPropertyContinuations(propertyNode);  [CE]  ';'  expected  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  final  PropertyContinuations  <  PropertyContinuation>  startPropertyContinuations(propertyNode);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	final  PropertyContinuations  <  PropertyContinuation>  startPropertyContinuations(propertyNode);	  final    PropertyContinuations    <    PropertyContinuation>    startPropertyContinuations();    	non-compiled	[CE]  ';'  expected	113	None	replace
1591	[BUG]  [BUGGY]  final  PropertyContinuations  <  PropertyContinuation>  startPropertyContinuations(resolved);  [CE]  ';'  expected  [FE]                            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  final  PropertyContinuations  <  PropertyContinuation>  startPropertyContinuations(resolved);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	final  PropertyContinuations  <  PropertyContinuation>  startPropertyContinuations(resolved);	  final    PropertyContinuations    <    PropertyContinuation>    startPropertyContinuations();    	non-compiled	[CE]  ';'  expected	113	None	replace
1592	[BUG]  [BUGGY]  final  PropertyContinuations  <  PropertyContinuation>  startProperties();  [CE]  ';'  expected  [FE]                              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  final  PropertyContinuations  <  PropertyContinuation>  startProperties();  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	final  PropertyContinuations  <  PropertyContinuation>  startProperties();	  final    PropertyContinuations    <    PropertyContinuation>    startPropertyContinuations();    	non-compiled	[CE]  ';'  expected	113	None	replace
1593	[BUG]  [BUGGY]  propertyContinuations  =  getPropertyContinuations(propertyNamingStrategy);  [CE]  cannot  find  symbol  propertyNamingStrategy  [FE]            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  propertyContinuations  =  getPropertyContinuations(propertyNamingStrategy);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	propertyContinuations  =  getPropertyContinuations(propertyNamingStrategy);	  propertyContinuations    =    getPropertyContinuations();    	non-compiled	[CE]  cannot  find  symbol  propertyNamingStrategy	98	None	replace
1594	[BUG]  [BUGGY]  PropertyActual  propertyContinuations  =  propertyContinuations.get(propertyName);  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  PropertyActual  propertyContinuations  =  propertyContinuations.get(propertyName);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	PropertyActual  propertyContinuations  =  propertyContinuations.get(propertyName);	  if(propertyContinuations!=    null)    {    finishPropertyActual();    }    else    {    propertyContinuations.add(propertyName);    }    	non-compiled	[CE]  cannot  find  symbol	226	None	replace
1595	[BUG]  [BUGGY]  if(propertyContinuations!=  null)  {  finishPropertyActual();  }  else  {  properties.add(propertyName);  }  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(propertyContinuations!=  null)  {  finishPropertyActual();  }  else  {  properties.add(propertyName);  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations!=  null)  {  finishPropertyActual();  }  else  {  properties.add(propertyName);  }	  if(propertyContinuations!=    null)    {    finishPropertyActual();    }    else    {    propertyContinuations.add(propertyName);    }    	non-compiled	[CE]  cannot  find  symbol	226	None	replace
1596	[BUG]  [BUGGY]  registry.setLastGeneration()  :  this;  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  registry.setLastGeneration()  :  this;  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	registry.setLastGeneration()  :  this;	  registry.isLastGeneration()    :    this;    	non-compiled	[CE]  ';'  expected	94	None	replace
1597	[BUG]  [BUGGY]  registry.setLastGeneration()  :  null;  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  registry.setLastGeneration()  :  null;  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	registry.setLastGeneration()  :  null;	  registry.isLastGeneration()    :    this;    	non-compiled	[CE]  ';'  expected	94	None	replace
1598	[BUG]  [BUGGY]  if(propertyContinuations  ==  null)  {  finishPropertyValues();  }  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(propertyContinuations  ==  null)  {  finishPropertyValues();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations  ==  null)  {  finishPropertyValues();  }	  if(propertyContinuations!=    null)    {    finishPropertyContinuations();    }    if(propertyContinuations    ==    null)    {    finishPropertyContinuations();    }    timeout    	non-compiled	[CE]  cannot  find  symbol	79	None	replace
1599	[BUG]  [BUGGY]  if(forAnnotations  ==  null)  {  finishPropropertyContinuations();  }  [CE]  cannot  find  symbol  forAnnotations  [FE]                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(forAnnotations  ==  null)  {  finishPropropertyContinuations();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(forAnnotations  ==  null)  {  finishPropropertyContinuations();  }	  if(propertyContinuations    ==    null)    {    finishPropertyContinuations();    }    if(propertyContinuations    ==    null)    {    finishPropropertyContinuations();    }    	non-compiled	[CE]  cannot  find  symbol  forAnnotations	238	None	replace
1600	[BUG]  [BUGGY]  if(propertyContinuations  ==  null)  {  finishPropropertyInferred();  }  [CE]  cannot  find  symbol  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(propertyContinuations  ==  null)  {  finishPropropertyInferred();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations  ==  null)  {  finishPropropertyInferred();  }	  if(propertyContinuations    ==    null)    {    finishPropertyContinuations();    }    if(propertyContinuations    ==    null)    {    finishPropropertyContinuations();    }    	non-compiled	[CE]  cannot  find  symbol	238	None	replace
1601	[BUG]  [BUGGY]  if(propertyContinuations!=  null)  {  finishPropropertyInferred();  }  [CE]  cannot  find  symbol  [FE]                            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(propertyContinuations!=  null)  {  finishPropropertyInferred();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations!=  null)  {  finishPropropertyInferred();  }	  if(propertyContinuations    ==    null)    {    finishPropertyContinuations();    }    if(propertyContinuations    ==    null)    {    finishPropropertyContinuations();    }    	non-compiled	[CE]  cannot  find  symbol	238	None	replace
1602	[BUG]  [BUGGY]  if(propertyContinuations  ==  null)  {  finishPropropertyGenerations();  }  [CE]  cannot  find  symbol  [FE]                              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(propertyContinuations  ==  null)  {  finishPropropertyGenerations();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations  ==  null)  {  finishPropropertyGenerations();  }	  if(propertyContinuations    ==    null)    {    finishPropertyContinuations();    }    if(propertyContinuations    ==    null)    {    finishPropropertyContinuations();    }    	non-compiled	[CE]  cannot  find  symbol	238	None	replace
1603	[BUG]  [BUGGY]  if(propertyContinuations!=  null)  {  finishPropropertyGenerations();  }  [CE]  cannot  find  symbol  [FE]                                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(propertyContinuations!=  null)  {  finishPropropertyGenerations();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations!=  null)  {  finishPropropertyGenerations();  }	  if(propertyContinuations    ==    null)    {    finishPropertyContinuations();    }    if(propertyContinuations    ==    null)    {    finishPropropertyContinuations();    }    	non-compiled	[CE]  cannot  find  symbol	238	None	replace
1604	[BUG]  [BUGGY]  if(propertyContinuations!=    null)    {    finishPropertyContinuations();    }    if(propertyContinuations  ==  null)  {  finishPropertyContinuations();  }  if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  if(propertyContinuations  ==  null)  {  finishPropert  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(propertyContinuations!=    null)    {    finishPropertyContinuations();    }    if(propertyContinuations  ==  null)  {  finishPropertyContinuations();  }  if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  if(propertyContinuations  ==  null)  {  finishPropert  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations!=        null)        {        finishPropertyContinuations();        }        if(propertyContinuations    ==    null)    {    finishPropertyContinuations();    }    if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  if(propertyContinuations  ==  null)  {  finishPropert	  timeout    	non-compiled	[CE]  ';'  expected	78	None	add
1605	[BUG]  [BUGGY]  if(propertyContinuations!=    null)    {    finishPropertyContinuations();    }    if(propertyContinuations  ==  null)  {  finishPropertyContinuations();  }  if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  if(propertyContinu  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(propertyContinuations!=    null)    {    finishPropertyContinuations();    }    if(propertyContinuations  ==  null)  {  finishPropertyContinuations();  }  if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  if(propertyContinu  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations!=        null)        {        finishPropertyContinuations();        }        if(propertyContinuations    ==    null)    {    finishPropertyContinuations();    }    if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  if(propertyContinu	  timeout    	non-compiled	[CE]  ')'  expected	78	None	add
1606	[BUG]  [BUGGY]  if(propertyContinuations!=    null)    {    finishPropertyContinuations();    }    if(propertyContinuations  ==  null)  {  finishPropertyContinuations();  }  if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  if(propertyContinuations  ==  null)  {  finish  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(propertyContinuations!=    null)    {    finishPropertyContinuations();    }    if(propertyContinuations  ==  null)  {  finishPropertyContinuations();  }  if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  if(propertyContinuations  ==  null)  {  finish  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations!=        null)        {        finishPropertyContinuations();        }        if(propertyContinuations    ==    null)    {    finishPropertyContinuations();    }    if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  if(propertyContinuations  ==  null)  {  finish	  timeout    	non-compiled	[CE]  ';'  expected	78	None	add
1607	[BUG]  [BUGGY]  if(propertyContinuations!=    null)    {    finishPropertyContinuations();    }    if(propertyContinuations  ==  null)  {  finishPropertyContinuations();  }  if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  if(propertyContinuations  ==  null)  {  finishPro  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(propertyContinuations!=    null)    {    finishPropertyContinuations();    }    if(propertyContinuations  ==  null)  {  finishPropertyContinuations();  }  if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  if(propertyContinuations  ==  null)  {  finishPro  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations!=        null)        {        finishPropertyContinuations();        }        if(propertyContinuations    ==    null)    {    finishPropertyContinuations();    }    if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  if(propertyContinuations  ==  null)  {  finishPro	  timeout    	non-compiled	[CE]  ';'  expected	78	None	add
1608	[BUG]  [BUGGY]  predicate.finishPropertyType(resolved,  propertyNode);  [CE]  cannot  find  symbol  propertyNode  [FE]                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  predicate.finishPropertyType(resolved,  propertyNode);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	predicate.finishPropertyType(resolved,  propertyNode);	  predicate.finishPropertyType(resolved);    	non-compiled	[CE]  cannot  find  symbol  propertyNode	143	None	replace
1609	[BUG]  [BUGGY]  predicate.finishPropertyType(resolved,  enclosing);  [CE]  cannot  find  symbol  predicate  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  predicate.finishPropertyType(resolved,  enclosing);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	predicate.finishPropertyType(resolved,  enclosing);	  predicate.finishPropertyType(resolved);    	non-compiled	[CE]  cannot  find  symbol  predicate	143	None	replace
1610	[BUG]  [BUGGY]  Parchet.checkState(validator!=  null);  finishPropertyAnnotations();  [CE]  cannot  find  symbol  Parchet  [FE]                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Parchet.checkState(validator!=  null);  finishPropertyAnnotations();  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Parchet.checkState(validator!=  null);  finishPropertyAnnotations();	  Parchet.checkState(validator!=    null);    finishPropertyContinuations();    	non-compiled	[CE]  cannot  find  symbol  Parchet	33	None	replace
1611	[BUG]  [BUGGY]  Parchet.checkState(validator!=  null);  finishPropertyGenerations();  [CE]  cannot  find  symbol  Parchet  [FE]                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Parchet.checkState(validator!=  null);  finishPropertyGenerations();  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Parchet.checkState(validator!=  null);  finishPropertyGenerations();	  Parchet.checkState(validator!=    null);    finishPropertyContinuations();    	non-compiled	[CE]  cannot  find  symbol  Parchet	33	None	replace
1612	[BUG]  [BUGGY]  Parchet.checkState(validator!=  null);  finishPropertyFields();  [CE]  cannot  find  symbol  Parchet  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Parchet.checkState(validator!=  null);  finishPropertyFields();  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Parchet.checkState(validator!=  null);  finishPropertyFields();	  Parchet.checkState(validator!=    null);    finishPropertyContinuations();    	non-compiled	[CE]  cannot  find  symbol  Parchet	33	None	replace
1613	[BUG]  [BUGGY]  Parchet.checkState(validator!=  null);  finishPropertyLines();  [CE]  cannot  find  symbol  Parchet  [FE]                            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Parchet.checkState(validator!=  null);  finishPropertyLines();  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Parchet.checkState(validator!=  null);  finishPropertyLines();	  Parchet.checkState(validator!=    null);    finishPropertyContinuations();    	non-compiled	[CE]  cannot  find  symbol  Parchet	33	None	replace
1614	[BUG]  [BUGGY]  if(resolved)  {  finishPropertyGenerations();  }  while(resolved)  {  finishPropertyContinuations();  }  [CE]  cannot  find  symbol  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(resolved)  {  finishPropertyGenerations();  }  while(resolved)  {  finishPropertyContinuations();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(resolved)  {  finishPropertyGenerations();  }  while(resolved)  {  finishPropertyContinuations();  }	  if(resolved)    {    finishPropertyContinuations();    }    while(resolved)    {    finishPropertyContinuations();    }    timeout    	non-compiled	[CE]  cannot  find  symbol	40	None	replace
1615	[BUG]  [BUGGY]  if(resolved)  {  finishPropertyInferred();  }  while(resolved)  {  finishPropertyInferred();  }  [CE]  cannot  find  symbol  [FE]                            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(resolved)  {  finishPropertyInferred();  }  while(resolved)  {  finishPropertyInferred();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(resolved)  {  finishPropertyInferred();  }  while(resolved)  {  finishPropertyInferred();  }	  if(resolved)    {    finishPropertyContinuations();    }    while(resolved)    {    finishPropertyContinuations();    }    timeout    	non-compiled	[CE]  cannot  find  symbol	40	None	replace
1616	[BUG]  [BUGGY]  if(resolved)  {  finishPropertyInferred();  }  while(resolved)  {  finishPropertyContinuations();  }  [CE]  cannot  find  symbol  [FE]                              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(resolved)  {  finishPropertyInferred();  }  while(resolved)  {  finishPropertyContinuations();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(resolved)  {  finishPropertyInferred();  }  while(resolved)  {  finishPropertyContinuations();  }	  if(resolved)    {    finishPropertyContinuations();    }    while(resolved)    {    finishPropertyContinuations();    }    timeout    	non-compiled	[CE]  cannot  find  symbol	40	None	replace
1617	[BUG]  [BUGGY]  final  PropertyContinuations  <  Node>  propertyContinuations  =  getPropertyContinuations(nameNode);  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  final  PropertyContinuations  <  Node>  propertyContinuations  =  getPropertyContinuations(nameNode);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	final  PropertyContinuations  <  Node>  propertyContinuations  =  getPropertyContinuations(nameNode);	  final    PropertyContinuations    <    Node>    propertyContinuations    =    getPropertyContinuations();    	non-compiled	[CE]  cannot  find  symbol	135	None	replace
1618	[BUG]  [BUGGY]  PropertyContinuation  <  NamedType>  propertyContinuations  =  register.isLastGeneration()?  getReferencedType()  :  this;  [CE]  type  PropertyContinuation  does  not  take  parameters  [FE]                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  PropertyContinuation  <  NamedType>  propertyContinuations  =  register.isLastGeneration()?  getReferencedType()  :  this;  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	PropertyContinuation  <  NamedType>  propertyContinuations  =  register.isLastGeneration()?  getReferencedType()  :  this;	  if(propertyContinuations!=    null)    {    finishPropertyContinuations();    }    else    {    register.isLastGeneration()?    getReferencedType()    :    this;    }    	non-compiled	[CE]  type  PropertyContinuation  does  not  take  parameters	216	None	replace
1619	[BUG]  [BUGGY]  PropertyContinuation  propertyContinuations  =  register.isLastGeneration()?  getReferencedType()  :  this;  [CE]  cannot  find  symbol  register  [FE]                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  PropertyContinuation  propertyContinuations  =  register.isLastGeneration()?  getReferencedType()  :  this;  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	PropertyContinuation  propertyContinuations  =  register.isLastGeneration()?  getReferencedType()  :  this;	  if(propertyContinuations!=    null)    {    finishPropertyContinuations();    }    else    {    register.isLastGeneration()?    getReferencedType()    :    this;    }    	non-compiled	[CE]  cannot  find  symbol  register	216	None	replace
1620	[BUG]  [BUGGY]  Predicates.checkState(validator.detectImplicitPrototypeCycle());  handleTypeCycle(t);  [CE]  cannot  find  symbol  [FE]                              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Predicates.checkState(validator.detectImplicitPrototypeCycle());  handleTypeCycle(t);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Predicates.checkState(validator.detectImplicitPrototypeCycle());  handleTypeCycle(t);	  Predicates.checkState(detectImplicitPrototypeCycle());    handleTypeCycle(t);    	non-compiled	[CE]  cannot  find  symbol	203	None	replace
1621	[BUG]  [BUGGY]  Predicates.checkState(validator.isLastGeneration());  handleTypeCycle(t);  [CE]  cannot  find  symbol  [FE]                                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Predicates.checkState(validator.isLastGeneration());  handleTypeCycle(t);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Predicates.checkState(validator.isLastGeneration());  handleTypeCycle(t);	  Predicates.checkState(detectImplicitPrototypeCycle());    handleTypeCycle(t);    	non-compiled	[CE]  cannot  find  symbol	203	None	replace
1622	[BUG]  [BUGGY]  Predicates.checkState(validator.isConstructor());  handleTypeCycle(t);  [CE]  cannot  find  symbol  [FE]                                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Predicates.checkState(validator.isConstructor());  handleTypeCycle(t);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Predicates.checkState(validator.isConstructor());  handleTypeCycle(t);	  Predicates.checkState(detectImplicitPrototypeCycle());    handleTypeCycle(t);    	non-compiled	[CE]  cannot  find  symbol	203	None	replace
1623	[BUG]  [BUGGY]  if(resolved)  {  finishPropertyStarts();  }  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(resolved)  {  finishPropertyStarts();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(resolved)  {  finishPropertyStarts();  }	  if(resolved)    {    finishPropertyContinuations();    }    if(resolved)    ==    finishPropertyContinuations();    }    	non-compiled	[CE]  cannot  find  symbol	222	None	replace
1624	[BUG]  [BUGGY]  propertyContinuations  =  new  TreeSet  <  PropertyContinuation>(propertyContinuations);  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  propertyContinuations  =  new  TreeSet  <  PropertyContinuation>(propertyContinuations);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	propertyContinuations  =  new  TreeSet  <  PropertyContinuation>(propertyContinuations);	  propertyContinuations    =    new    ArrayList    <    PropertyContinuation>(propertyContinuations);    	non-compiled	[CE]  cannot  find  symbol	101	None	replace
1625	[BUG]  [BUGGY]  propertyContinuations  =  new  ArrayList  <  PropertyContinuation>(propertyContinuations.length);  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  propertyContinuations  =  new  ArrayList  <  PropertyContinuation>(propertyContinuations.length);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	propertyContinuations  =  new  ArrayList  <  PropertyContinuation>(propertyContinuations.length);	  propertyContinuations    =    new    ArrayList    <    PropertyContinuation>(propertyContinuations);    	non-compiled	[CE]  cannot  find  symbol	101	None	replace
1626	[BUG]  [BUGGY]  Annotations  props  =  getPropertyContinuations(propertyNamingStrategy);  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Annotations  props  =  getPropertyContinuations(propertyNamingStrategy);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Annotations  props  =  getPropertyContinuations(propertyNamingStrategy);	  Annotations    props    =    getPropertyContinuations();    	non-compiled	[CE]  cannot  find  symbol	229	None	replace
1627	[BUG]  [BUGGY]  if(propertyContinuations!=  null)  {  startPropertyName();  }  else  {  propertyContinuations.add(propertyName);  }  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(propertyContinuations!=  null)  {  startPropertyName();  }  else  {  propertyContinuations.add(propertyName);  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations!=  null)  {  startPropertyName();  }  else  {  propertyContinuations.add(propertyName);  }	  if(propertyContinuations!=    null)    {    startPropertyContinuations();    }    else    {    propertyContinuations.add(propertyName);    }    	non-compiled	[CE]  cannot  find  symbol	68	None	replace
1628	[BUG]  [BUGGY]  if(propertyContinuations!=  null)  {  startPropertyGenerations();  }  else  {  propertyContinuations.add(propertyName);  }  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(propertyContinuations!=  null)  {  startPropertyGenerations();  }  else  {  propertyContinuations.add(propertyName);  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations!=  null)  {  startPropertyGenerations();  }  else  {  propertyContinuations.add(propertyName);  }	  if(propertyContinuations!=    null)    {    startPropertyContinuations();    }    else    {    propertyContinuations.add(propertyName);    }    	non-compiled	[CE]  cannot  find  symbol	68	None	replace
1629	[BUG]  [BUGGY]  if(propertyContinuations!=  null)  {  startPropertyType();  }  else  {  propertyContinuations.add(propertyName);  }  [CE]  cannot  find  symbol  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(propertyContinuations!=  null)  {  startPropertyType();  }  else  {  propertyContinuations.add(propertyName);  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations!=  null)  {  startPropertyType();  }  else  {  propertyContinuations.add(propertyName);  }	  if(propertyContinuations!=    null)    {    startPropertyContinuations();    }    else    {    propertyContinuations.add(propertyName);    }    	non-compiled	[CE]  cannot  find  symbol	68	None	replace
1630	[BUG]  [BUGGY]  if(propertyContinuations!=  null)  {  startPropertyReference();  }  else  {  propertyContinuations.add(propertyName);  }  [CE]  cannot  find  symbol  [FE]                            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(propertyContinuations!=  null)  {  startPropertyReference();  }  else  {  propertyContinuations.add(propertyName);  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations!=  null)  {  startPropertyReference();  }  else  {  propertyContinuations.add(propertyName);  }	  if(propertyContinuations!=    null)    {    startPropertyContinuations();    }    else    {    propertyContinuations.add(propertyName);    }    	non-compiled	[CE]  cannot  find  symbol	68	None	replace
1631	[BUG]  [BUGGY]  BundlePropertyContinuations  registry  =  getBundlePropertyContinuations(propertyNamingStrategy);  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  BundlePropertyContinuations  registry  =  getBundlePropertyContinuations(propertyNamingStrategy);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	BundlePropertyContinuations  registry  =  getBundlePropertyContinuations(propertyNamingStrategy);	  BundlePropertyContinuations    registry    =    getBundlePropertyContinuations();    	non-compiled	[CE]  cannot  find  symbol	99	None	replace
1632	[BUG]  [BUGGY]  BundlePropertyContinuations  registry  =  getBundlePropertyContinuations(property);  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  BundlePropertyContinuations  registry  =  getBundlePropertyContinuations(property);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	BundlePropertyContinuations  registry  =  getBundlePropertyContinuations(property);	  BundlePropertyContinuations    registry    =    getBundlePropertyContinuations();    	non-compiled	[CE]  cannot  find  symbol	99	None	replace
1633	[BUG]  [BUGGY]  Predicate  validator  =  resolveViaRegistry(t,  enclosing,  propertyName);  [CE]  cannot  find  symbol  propertyName  [FE]                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Predicate  validator  =  resolveViaRegistry(t,  enclosing,  propertyName);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Predicate  validator  =  resolveViaRegistry(t,  enclosing,  propertyName);	  Predicate    validator    =    resolveViaRegistry(t,    enclosing);    	non-compiled	[CE]  cannot  find  symbol  propertyName	87	None	replace
1634	[BUG]  [BUGGY]  Predicate  validator  =  resolveViaRegistry(t,  enclosing,  nameNode);  [CE]  cannot  find  symbol  nameNode  [FE]                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Predicate  validator  =  resolveViaRegistry(t,  enclosing,  nameNode);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Predicate  validator  =  resolveViaRegistry(t,  enclosing,  nameNode);	  Predicate    validator    =    resolveViaRegistry(t,    enclosing);    	non-compiled	[CE]  cannot  find  symbol  nameNode	87	None	replace
1635	[BUG]  [BUGGY]  Annotations  validator  =  registry.isLastGeneration()?  getReferencedType()  :  REFERENCE_TYPE;  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Annotations  validator  =  registry.isLastGeneration()?  getReferencedType()  :  REFERENCE_TYPE;  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Annotations  validator  =  registry.isLastGeneration()?  getReferencedType()  :  REFERENCE_TYPE;	  Annotations    validator    =    registry.isLastGeneration()?    getReferencedType()    :    this;    	non-compiled	[CE]  cannot  find  symbol	61	None	replace
1636	[BUG]  [BUGGY]  Annotations  validator  =  registry.isLastGeneration()?  getReferencedType()  :  REFERENCED_TYPE;  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Annotations  validator  =  registry.isLastGeneration()?  getReferencedType()  :  REFERENCED_TYPE;  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Annotations  validator  =  registry.isLastGeneration()?  getReferencedType()  :  REFERENCED_TYPE;	  Annotations    validator    =    registry.isLastGeneration()?    getReferencedType()    :    this;    	non-compiled	[CE]  cannot  find  symbol	61	None	replace
1637	[BUG]  [BUGGY]  Annotations  validator  =  registry.isLastGeneration()?  getReferencedType()  :  ref;  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Annotations  validator  =  registry.isLastGeneration()?  getReferencedType()  :  ref;  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Annotations  validator  =  registry.isLastGeneration()?  getReferencedType()  :  ref;	  Annotations    validator    =    registry.isLastGeneration()?    getReferencedType()    :    this;    	non-compiled	[CE]  cannot  find  symbol	61	None	replace
1638	[BUG]  [BUGGY]  forAnnotations  =  Lists.newArrayList();  [CE]  cannot  find  symbol  forAnnotations  [FE]                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  forAnnotations  =  Lists.newArrayList();  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	forAnnotations  =  Lists.newArrayList();	  forAnnotations    =    Collections.emptyList();    	non-compiled	[CE]  cannot  find  symbol  forAnnotations	4	None	replace
1639	[BUG]  [BUGGY]  if(propertyContinuations!=  null)  {  startPropertyContinuations();  }  else  {  forAnnotations  =  Collections.EMPTYList();  }  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(propertyContinuations!=  null)  {  startPropertyContinuations();  }  else  {  forAnnotations  =  Collections.EMPTYList();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations!=  null)  {  startPropertyContinuations();  }  else  {  forAnnotations  =  Collections.EMPTYList();  }	  if(propertyContinuations    ==    null)    {    startPropertyContinuations();    }    else    {    forAnnotations    =    Collections.emptyList();    }    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
1640	[BUG]  [BUGGY]  if(forAnnotations)  {  finishPropertyAnnotations();  }  [CE]  cannot  find  symbol  forAnnotations  [FE]                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(forAnnotations)  {  finishPropertyAnnotations();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(forAnnotations)  {  finishPropertyAnnotations();  }	  if(resolved)    {    finishPropertyAnnotations();    }    	non-compiled	[CE]  cannot  find  symbol  forAnnotations	128	None	replace
1641	[BUG]  [BUGGY]  PropertyAnnotations  registry  =  getPropertyAnnotations();  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  PropertyAnnotations  registry  =  getPropertyAnnotations();  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	PropertyAnnotations  registry  =  getPropertyAnnotations();	  if(resolved)    {    finishPropertyAnnotations();    }    	non-compiled	[CE]  cannot  find  symbol	128	None	replace
1642	[BUG]  [BUGGY]  if(validator!=  null  &&  propertyNode.getPropertyType()!=  PropertyType.PROPERTY)  {  finishPropertyContinuations();  }  [CE]  cannot  find  symbol  propertyNode  [FE]                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(validator!=  null  &&  propertyNode.getPropertyType()!=  PropertyType.PROPERTY)  {  finishPropertyContinuations();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(validator!=  null  &&  propertyNode.getPropertyType()!=  PropertyType.PROPERTY)  {  finishPropertyContinuations();  }	  if(validator!=    null    &&    validator.getPropertyType()!=    PropertyType.PROPERTY)    {    finishPropertyContinuations();    }    	non-compiled	[CE]  cannot  find  symbol  propertyNode	211	None	replace
1643	[BUG]  [BUGGY]  if(validator!=  null  &&  registry.getPropertyType()!=  PropertyType.PROPERTY)  {  finishPropertyContinuations();  }  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(validator!=  null  &&  registry.getPropertyType()!=  PropertyType.PROPERTY)  {  finishPropertyContinuations();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(validator!=  null  &&  registry.getPropertyType()!=  PropertyType.PROPERTY)  {  finishPropertyContinuations();  }	  if(validator!=    null    &&    validator.getPropertyType()!=    PropertyType.PROPERTY)    {    finishPropertyContinuations();    }    	non-compiled	[CE]  cannot  find  symbol	211	None	replace
1644	[BUG]  [BUGGY]  if(validator!=  null  &&  propertyContinuations.getPropertyType()!=  PropertyType.PROPERTY)  {  finishPropertyContinuations();  }  [CE]  cannot  find  symbol  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(validator!=  null  &&  propertyContinuations.getPropertyType()!=  PropertyType.PROPERTY)  {  finishPropertyContinuations();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(validator!=  null  &&  propertyContinuations.getPropertyType()!=  PropertyType.PROPERTY)  {  finishPropertyContinuations();  }	  if(validator!=    null    &&    validator.getPropertyType()!=    PropertyType.PROPERTY)    {    finishPropertyContinuations();    }    	non-compiled	[CE]  cannot  find  symbol	211	None	replace
1645	[BUG]  [BUGGY]  if(resolved)  {  startReference();  }  else  {  registry.isLastGeneration()  :  this;  }  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(resolved)  {  startReference();  }  else  {  registry.isLastGeneration()  :  this;  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(resolved)  {  startReference();  }  else  {  registry.isLastGeneration()  :  this;  }	  if(resolved)    {    startPropertyGeneration();    }    else    {    registry.isLastGeneration()    :    this;    }    	non-compiled	[CE]  ';'  expected	176	None	replace
1646	[BUG]  [BUGGY]  if(resolved)  {  startPropertyGeneration();  }  else  {  registry.isFirstGeneration()  :  this;  }  [CE]  ';'  expected  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(resolved)  {  startPropertyGeneration();  }  else  {  registry.isFirstGeneration()  :  this;  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(resolved)  {  startPropertyGeneration();  }  else  {  registry.isFirstGeneration()  :  this;  }	  if(resolved)    {    startPropertyGeneration();    }    else    {    registry.isLastGeneration()    :    this;    }    	non-compiled	[CE]  ';'  expected	176	None	replace
1647	[BUG]  [BUGGY]  if(resolved)  {  startPropertyGeneration();  }  else  {  registry.isLastGeneration()  :  null;  }  [CE]  ';'  expected  [FE]                            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(resolved)  {  startPropertyGeneration();  }  else  {  registry.isLastGeneration()  :  null;  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(resolved)  {  startPropertyGeneration();  }  else  {  registry.isLastGeneration()  :  null;  }	  if(resolved)    {    startPropertyGeneration();    }    else    {    registry.isLastGeneration()    :    this;    }    	non-compiled	[CE]  ';'  expected	176	None	replace
1648	[BUG]  [BUGGY]  if(resolved)  {  startPropertyGeneration();  }  else  {  registry.isLastGeneration()  :  getReferencedType();  }  [CE]  ';'  expected  [FE]                              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(resolved)  {  startPropertyGeneration();  }  else  {  registry.isLastGeneration()  :  getReferencedType();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(resolved)  {  startPropertyGeneration();  }  else  {  registry.isLastGeneration()  :  getReferencedType();  }	  if(resolved)    {    startPropertyGeneration();    }    else    {    registry.isLastGeneration()    :    this;    }    	non-compiled	[CE]  ';'  expected	176	None	replace
1649	[BUG]  [BUGGY]  if(resolved)  {  startPropertyGeneration();  }  else  {  Registry.isLastGeneration()  :  this;  }  [CE]  ';'  expected  [FE]                                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(resolved)  {  startPropertyGeneration();  }  else  {  Registry.isLastGeneration()  :  this;  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(resolved)  {  startPropertyGeneration();  }  else  {  Registry.isLastGeneration()  :  this;  }	  if(resolved)    {    startPropertyGeneration();    }    else    {    registry.isLastGeneration()    :    this;    }    	non-compiled	[CE]  ';'  expected	176	None	replace
1650	[BUG]  [BUGGY]  if(resolved)  {  startPropertyGeneration();  }  else  {  registry.getLastGeneration()  :  this;  }  [CE]  ';'  expected  [FE]                                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(resolved)  {  startPropertyGeneration();  }  else  {  registry.getLastGeneration()  :  this;  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(resolved)  {  startPropertyGeneration();  }  else  {  registry.getLastGeneration()  :  this;  }	  if(resolved)    {    startPropertyGeneration();    }    else    {    registry.isLastGeneration()    :    this;    }    	non-compiled	[CE]  ';'  expected	176	None	replace
1651	[BUG]  [BUGGY]  predicate.finishPropertyGenerations();  [CE]  cannot  find  symbol  predicate  [FE]                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  predicate.finishPropertyGenerations();  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	predicate.finishPropertyGenerations();	  if(validator!=    null)    {    finishPropertyGenerations();    }    else    {    registry.isLastGeneration()?    getReferencedType()    :    this;    }    	non-compiled	[CE]  cannot  find  symbol  predicate	232	None	replace
1652	[BUG]  [BUGGY]  validator!=  null  &&  registry.isLastGeneration());  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  validator!=  null  &&  registry.isLastGeneration());  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	validator!=  null  &&  registry.isLastGeneration());	  if(validator!=    null)    {    finishPropertyGenerations();    }    else    {    registry.isLastGeneration()?    getReferencedType()    :    this;    }    	non-compiled	[CE]  not  a  statement	232	None	replace
1653	[BUG]  [BUGGY]  PropertyGeneration  registry  =  getPropertyGeneration();  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  PropertyGeneration  registry  =  getPropertyGeneration();  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	PropertyGeneration  registry  =  getPropertyGeneration();	  if(propertyContinuations!=    null)    {    finishPropertyGeneration();    }    else    {    getPropertyContinuations().addAll(propertyContinuations);    }    	non-compiled	[CE]  cannot  find  symbol	121	None	replace
1654	[BUG]  [BUGGY]  if(propertyContinuations!=  null)  {  finishPropertyGeneration();  }  else  {  propertyContinuations().addAll(propertyContinuations);  }  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(propertyContinuations!=  null)  {  finishPropertyGeneration();  }  else  {  propertyContinuations().addAll(propertyContinuations);  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations!=  null)  {  finishPropertyGeneration();  }  else  {  propertyContinuations().addAll(propertyContinuations);  }	  if(propertyContinuations!=    null)    {    finishPropertyGeneration();    }    else    {    getPropertyContinuations().addAll(propertyContinuations);    }    	non-compiled	[CE]  cannot  find  symbol	121	None	replace
1655	[BUG]  [BUGGY]  if(propertyContinuations!=  null)  {  finishPropertyGeneration();  }  else  {  getPropertyContinuations().addAll(propertyCycles);  }  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(propertyContinuations!=  null)  {  finishPropertyGeneration();  }  else  {  getPropertyContinuations().addAll(propertyCycles);  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations!=  null)  {  finishPropertyGeneration();  }  else  {  getPropertyContinuations().addAll(propertyCycles);  }	  if(propertyContinuations!=    null)    {    finishPropertyGeneration();    }    else    {    getPropertyContinuations().addAll(propertyContinuations);    }    	non-compiled	[CE]  cannot  find  symbol	121	None	replace
1656	[BUG]  [BUGGY]  if(propertyContinuations!=  null)  {  startPropertyGenerated();  }  else  {  propertyContinuations.add(propertyName);  }  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(propertyContinuations!=  null)  {  startPropertyGenerated();  }  else  {  propertyContinuations.add(propertyName);  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations!=  null)  {  startPropertyGenerated();  }  else  {  propertyContinuations.add(propertyName);  }	  if(propertyContinuations!=    null)    {    finishPropertyGenerated();    }    else    {    propertyContinuations.add(propertyName);    }    	non-compiled	[CE]  cannot  find  symbol	152	None	replace
1657	[BUG]  [BUGGY]  PropertyGenerated  propertyContinuations  =  propertyContinuations.get(propertyName);  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  PropertyGenerated  propertyContinuations  =  propertyContinuations.get(propertyName);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	PropertyGenerated  propertyContinuations  =  propertyContinuations.get(propertyName);	  if(propertyContinuations!=    null)    {    finishPropertyGenerated();    }    else    {    propertyContinuations.add(propertyName);    }    	non-compiled	[CE]  cannot  find  symbol	152	None	replace
1658	[BUG]  [BUGGY]  PropertyNode  registry  =  propertyContinuations.get(propertyName);  [CE]  cannot  find  symbol  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  PropertyNode  registry  =  propertyContinuations.get(propertyName);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	PropertyNode  registry  =  propertyContinuations.get(propertyName);	  if(propertyContinuations!=    null)    {    finishPropertyGenerated();    }    else    {    propertyContinuations.add(propertyName);    }    	non-compiled	[CE]  cannot  find  symbol	152	None	replace
1659	[BUG]  [BUGGY]  if(propertyFields!=  null)  {  finishPropertyFields();  }  else  {  getPropertyContinuations().addAll(propertyContinuations);  }  [CE]  cannot  find  symbol  propertyFields  [FE]              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(propertyFields!=  null)  {  finishPropertyFields();  }  else  {  getPropertyContinuations().addAll(propertyContinuations);  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyFields!=  null)  {  finishPropertyFields();  }  else  {  getPropertyContinuations().addAll(propertyContinuations);  }	  if(propertyContinuations!=    null)    {    finishPropertyFields();    }    else    {    getPropertyContinuations().addAll(propertyContinuations);    }    	non-compiled	[CE]  cannot  find  symbol  propertyFields	119	None	replace
1660	[BUG]  [BUGGY]  Preconditions.checkState(propertyContinuations!=  null)  {  finishPropertyFields();  }  else  {  getPropertyContinuations().addAll(propertyContinuations);  }  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Preconditions.checkState(propertyContinuations!=  null)  {  finishPropertyFields();  }  else  {  getPropertyContinuations().addAll(propertyContinuations);  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Preconditions.checkState(propertyContinuations!=  null)  {  finishPropertyFields();  }  else  {  getPropertyContinuations().addAll(propertyContinuations);  }	  if(propertyContinuations!=    null)    {    finishPropertyFields();    }    else    {    getPropertyContinuations().addAll(propertyContinuations);    }    	non-compiled	[CE]  ';'  expected	119	None	replace
1661	[BUG]  [BUGGY]  if(propertyFields!=  null)  {  finishProperty();  }  else  {  getPropertyContinuations().addAll(propertyContinuations);  }  [CE]  cannot  find  symbol  propertyFields  [FE]                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(propertyFields!=  null)  {  finishProperty();  }  else  {  getPropertyContinuations().addAll(propertyContinuations);  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyFields!=  null)  {  finishProperty();  }  else  {  getPropertyContinuations().addAll(propertyContinuations);  }	  if(propertyContinuations!=    null)    {    finishPropertyFields();    }    else    {    getPropertyContinuations().addAll(propertyContinuations);    }    	non-compiled	[CE]  cannot  find  symbol  propertyFields	119	None	replace
1662	[BUG]  [BUGGY]  if(propertyFields!=  null)  {  finishPropertyGenerated();  }  else  {  getPropertyContinuations().addAll(propertyContinuations);  }  [CE]  cannot  find  symbol  propertyFields  [FE]                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(propertyFields!=  null)  {  finishPropertyGenerated();  }  else  {  getPropertyContinuations().addAll(propertyContinuations);  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyFields!=  null)  {  finishPropertyGenerated();  }  else  {  getPropertyContinuations().addAll(propertyContinuations);  }	  if(propertyContinuations!=    null)    {    finishPropertyFields();    }    else    {    getPropertyContinuations().addAll(propertyContinuations);    }    	non-compiled	[CE]  cannot  find  symbol  propertyFields	119	None	replace
1663	[BUG]  [BUGGY]  if(propertyFields!=  null)  {  finishPropertyGenerations();  }  else  {  getPropertyContinuations().addAll(propertyContinuations);  }  [CE]  cannot  find  symbol  propertyFields  [FE]                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(propertyFields!=  null)  {  finishPropertyGenerations();  }  else  {  getPropertyContinuations().addAll(propertyContinuations);  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyFields!=  null)  {  finishPropertyGenerations();  }  else  {  getPropertyContinuations().addAll(propertyContinuations);  }	  if(propertyContinuations!=    null)    {    finishPropertyFields();    }    else    {    getPropertyContinuations().addAll(propertyContinuations);    }    	non-compiled	[CE]  cannot  find  symbol  propertyFields	119	None	replace
1664	[BUG]  [BUGGY]  if(propertyFields!=  null)  {  finishPropertyFields();  }  else  {  getPropertyContinuations().addAll(propertyFunctions);  }  [CE]  cannot  find  symbol  propertyFields  [FE]                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(propertyFields!=  null)  {  finishPropertyFields();  }  else  {  getPropertyContinuations().addAll(propertyFunctions);  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyFields!=  null)  {  finishPropertyFields();  }  else  {  getPropertyContinuations().addAll(propertyFunctions);  }	  if(propertyContinuations!=    null)    {    finishPropertyFields();    }    else    {    getPropertyContinuations().addAll(propertyContinuations);    }    	non-compiled	[CE]  cannot  find  symbol  propertyFields	119	None	replace
1665	[BUG]  [BUGGY]  if(propertyContinuations!=  null)  {  finishPropertyInferred();  }  else  {  propertyContinuations.add(propertyNode);  }  [CE]  cannot  find  symbol  [FE]                            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(propertyContinuations!=  null)  {  finishPropertyInferred();  }  else  {  propertyContinuations.add(propertyNode);  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations!=  null)  {  finishPropertyInferred();  }  else  {  propertyContinuations.add(propertyNode);  }	  if(propertyContinuations!=    null)    {    finishPropertyContinuations();    }    else    {    propertyContinuations.add(propertyNode);    }    	non-compiled	[CE]  cannot  find  symbol	71	None	replace
1666	[BUG]  [BUGGY]  if(propertyContinuations!=  null)  {  finishPropertyValues();  }  else  {  propertyContinuations.add(propertyNode);  }  [CE]  cannot  find  symbol  [FE]                              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(propertyContinuations!=  null)  {  finishPropertyValues();  }  else  {  propertyContinuations.add(propertyNode);  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations!=  null)  {  finishPropertyValues();  }  else  {  propertyContinuations.add(propertyNode);  }	  if(propertyContinuations!=    null)    {    finishPropertyContinuations();    }    else    {    propertyContinuations.add(propertyNode);    }    	non-compiled	[CE]  cannot  find  symbol	71	None	replace
1667	[BUG]  [BUGGY]  if(propertyContinuations  ==  null)  {  finishPropertyContinuations();  }  else  {  propertyContinuations.add(propertyNode);  }  [CE]  cannot  find  symbol  propertyNode  [FE]                                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(propertyContinuations  ==  null)  {  finishPropertyContinuations();  }  else  {  propertyContinuations.add(propertyNode);  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations  ==  null)  {  finishPropertyContinuations();  }  else  {  propertyContinuations.add(propertyNode);  }	  if(propertyContinuations!=    null)    {    finishPropertyContinuations();    }    else    {    propertyContinuations.add(propertyNode);    }    	non-compiled	[CE]  cannot  find  symbol  propertyNode	71	None	replace
1668	[BUG]  [BUGGY]  if(propertyContinuations!=  null)  {  finishPropertyFields();  }  else  {  propertyContinuations.add(propertyNode);  }  [CE]  cannot  find  symbol  [FE]                                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(propertyContinuations!=  null)  {  finishPropertyFields();  }  else  {  propertyContinuations.add(propertyNode);  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations!=  null)  {  finishPropertyFields();  }  else  {  propertyContinuations.add(propertyNode);  }	  if(propertyContinuations!=    null)    {    finishPropertyContinuations();    }    else    {    propertyContinuations.add(propertyNode);    }    	non-compiled	[CE]  cannot  find  symbol	71	None	replace
1669	[BUG]  [BUGGY]  if(propertyContinuations!=  null)  {  finishPropertyGenerated();  }  else  {  propertyContinuations.add(propertyNode);  }  [CE]  cannot  find  symbol  [FE]                                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(propertyContinuations!=  null)  {  finishPropertyGenerated();  }  else  {  propertyContinuations.add(propertyNode);  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations!=  null)  {  finishPropertyGenerated();  }  else  {  propertyContinuations.add(propertyNode);  }	  if(propertyContinuations!=    null)    {    finishPropertyContinuations();    }    else    {    propertyContinuations.add(propertyNode);    }    	non-compiled	[CE]  cannot  find  symbol	71	None	replace
1670	[BUG]  [BUGGY]  if(propertyContinuations!=  null)  {  finishPropertyConuations();  }  else  {  propertyContinuations.add(propertyNode);  }  [CE]  cannot  find  symbol  [FE]                                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(propertyContinuations!=  null)  {  finishPropertyConuations();  }  else  {  propertyContinuations.add(propertyNode);  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations!=  null)  {  finishPropertyConuations();  }  else  {  propertyContinuations.add(propertyNode);  }	  if(propertyContinuations!=    null)    {    finishPropertyContinuations();    }    else    {    propertyContinuations.add(propertyNode);    }    	non-compiled	[CE]  cannot  find  symbol	71	None	replace
1671	[BUG]  [BUGGY]  Preconditions.checkState(resolved!=  forAnnotations);  [CE]  cannot  find  symbol  forAnnotations  [FE]                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Preconditions.checkState(resolved!=  forAnnotations);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Preconditions.checkState(resolved!=  forAnnotations);	  Preconditions.checkState(resolved);    timeout    	non-compiled	[CE]  cannot  find  symbol  forAnnotations	221	None	replace
1672	[BUG]  [BUGGY]  Preconditions.checkState(resolved!=  enclosing);  [CE]  incomparable  types:  boolean  and  StaticScope<JSType>  [FE]                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Preconditions.checkState(resolved!=  enclosing);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Preconditions.checkState(resolved!=  enclosing);	  Preconditions.checkState(resolved);    timeout    	non-compiled	[CE]  incomparable  types:  boolean  and  StaticScope<JSType>	221	None	replace
1673	[BUG]  [BUGGY]  Preconditions.checkState(resolved  ==!forAnnotations);  [CE]  cannot  find  symbol  forAnnotations  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Preconditions.checkState(resolved  ==!forAnnotations);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Preconditions.checkState(resolved  ==!forAnnotations);	  Preconditions.checkState(resolved);    timeout    	non-compiled	[CE]  cannot  find  symbol  forAnnotations	221	None	replace
1674	[BUG]  [BUGGY]  aughtExceptionHandler.handleTypeCycle(t,  resolveViaProperties);  [CE]  cannot  find  symbol  resolveViaProperties  [FE]              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  aughtExceptionHandler.handleTypeCycle(t,  resolveViaProperties);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	aughtExceptionHandler.handleTypeCycle(t,  resolveViaProperties);	  aughtExceptionHandler.handleTypeCycle(t,    propertyNode);    	non-compiled	[CE]  cannot  find  symbol  resolveViaProperties	228	None	replace
1675	[BUG]  [BUGGY]  aughtExceptionHandler.handleTypeCycle(t,  sourceName);  [CE]  cannot  find  symbol  aughtExceptionHandler  [FE]                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  aughtExceptionHandler.handleTypeCycle(t,  sourceName);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	aughtExceptionHandler.handleTypeCycle(t,  sourceName);	  aughtExceptionHandler.handleTypeCycle(t,    propertyNode);    	non-compiled	[CE]  cannot  find  symbol  aughtExceptionHandler	228	None	replace
1676	[BUG]  [BUGGY]  aughtExceptionHandler.handleTypeCycle(t,  reference);  [CE]  cannot  find  symbol  aughtExceptionHandler  [FE]                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  aughtExceptionHandler.handleTypeCycle(t,  reference);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	aughtExceptionHandler.handleTypeCycle(t,  reference);	  aughtExceptionHandler.handleTypeCycle(t,    propertyNode);    	non-compiled	[CE]  cannot  find  symbol  aughtExceptionHandler	228	None	replace
1677	[BUG]  [BUGGY]  if(!resolved)  {  if(validator!=  null)  {  finishPropertyContinuations();  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(!resolved)  {  if(validator!=  null)  {  finishPropertyContinuations();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(!resolved)  {  if(validator!=  null)  {  finishPropertyContinuations();  }	  if(validator!=    null)    {    finishPropertyContinuations();    }    if(validator!=    null)    {    finishPropertyContinuations();    }    timeout    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
1678	[BUG]  [BUGGY]  Parchet.checkState(resolved  ||!resolved)  {  finishPropertyContinuations();  }  else  {  registry.isLastGeneration()  :  this;  }  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Parchet.checkState(resolved  ||!resolved)  {  finishPropertyContinuations();  }  else  {  registry.isLastGeneration()  :  this;  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Parchet.checkState(resolved  ||!resolved)  {  finishPropertyContinuations();  }  else  {  registry.isLastGeneration()  :  this;  }	  Parchet.checkState(resolved    ||    resolved)    {    finishPropertyContinuations();    }    else    {    registry.isLastGeneration()    :    this;    }    	non-compiled	[CE]  ';'  expected	105	None	replace
1679	[BUG]  [BUGGY]  Parchet.checkState(resolved  ||  inferred)  {  finishPropertyContinuations();  }  else  {  registry.isLastGeneration()  :  this;  }  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Parchet.checkState(resolved  ||  inferred)  {  finishPropertyContinuations();  }  else  {  registry.isLastGeneration()  :  this;  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Parchet.checkState(resolved  ||  inferred)  {  finishPropertyContinuations();  }  else  {  registry.isLastGeneration()  :  this;  }	  Parchet.checkState(resolved    ||    resolved)    {    finishPropertyContinuations();    }    else    {    registry.isLastGeneration()    :    this;    }    	non-compiled	[CE]  ';'  expected	105	None	replace
1680	[BUG]  [BUGGY]  predicate.finishPropertyInferred();  }  else  {  registry.isLastGeneration()  :  this;  }  [CE]  [FE]                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  predicate.finishPropertyInferred();  }  else  {  registry.isLastGeneration()  :  this;  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	predicate.finishPropertyInferred();  }  else  {  registry.isLastGeneration()  :  this;  }	  if(resolved)    {    finishPropertyInferred();    }    else    {    registry.isLastGeneration()    :    this;    }    	non-compiled	[CE]  	175	None	replace
1681	[BUG]  [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError( "msg.no.properties ");  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError( "msg.no.properties ");  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	AssertionFailedError  t  =  new  AssertionFailedError( "msg.no.properties ");	  if(resolved)    {    finishPropertyContinuations();    }    If(resolved)    {    finishPropertyContinuations();    }    	non-compiled	[CE]  cannot  find  symbol	37	None	replace
1682	[BUG]  [BUGGY]  if(validator!=  null)  {  resolveViaProperties(t,  enclosing);  timeout  =  System.currentTimeMillis();  }  [CE]  cannot  find  symbol  timeout  [FE]                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(validator!=  null)  {  resolveViaProperties(t,  enclosing);  timeout  =  System.currentTimeMillis();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(validator!=  null)  {  resolveViaProperties(t,  enclosing);  timeout  =  System.currentTimeMillis();  }	  resolveViaProperties(t,    enclosing);    timeout    	non-compiled	[CE]  cannot  find  symbol  timeout	86	None	replace
1683	[BUG]  [BUGGY]  if(!resolved)  {  resolveViaProperties(t,  enclosing);  timeout++;  }  [CE]  cannot  find  symbol  timeout  [FE]                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(!resolved)  {  resolveViaProperties(t,  enclosing);  timeout++;  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(!resolved)  {  resolveViaProperties(t,  enclosing);  timeout++;  }	  resolveViaProperties(t,    enclosing);    timeout    	non-compiled	[CE]  cannot  find  symbol  timeout	86	None	replace
1684	[BUG]  [BUGGY]  if(validator!=  null)  {  resolveViaProperties(t,  enclosing);  timeout++;  }  [CE]  cannot  find  symbol  timeout  [FE]                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(validator!=  null)  {  resolveViaProperties(t,  enclosing);  timeout++;  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(validator!=  null)  {  resolveViaProperties(t,  enclosing);  timeout++;  }	  resolveViaProperties(t,    enclosing);    timeout    	non-compiled	[CE]  cannot  find  symbol  timeout	86	None	replace
1685	[BUG]  [BUGGY]  if(resolved)  {  resolveViaProperties(t,  enclosing);  timeout  =  System.currentTimeMillis();  }  [CE]  cannot  find  symbol  timeout  [FE]                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(resolved)  {  resolveViaProperties(t,  enclosing);  timeout  =  System.currentTimeMillis();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(resolved)  {  resolveViaProperties(t,  enclosing);  timeout  =  System.currentTimeMillis();  }	  resolveViaProperties(t,    enclosing);    timeout    	non-compiled	[CE]  cannot  find  symbol  timeout	86	None	replace
1686	[BUG]  [BUGGY]  timeout  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(!resolved)  {  resolveViaProperties(t,  enclosing);  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	add	if(!resolved)  {  resolveViaProperties(t,  enclosing);  }	  resolveViaProperties(t,    enclosing);    timeout    	compilable	timeout	86	1	replace
1687	[BUG]  [BUGGY]  if(!resolved)  {  resolveViaProperties(t,  enclosing);  }  timeout  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(!resolved)  {  resolveViaProperties(t,  enclosing);  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(!resolved)  {  resolveViaProperties(t,  enclosing);  }	  resolveViaProperties(t,    enclosing);    timeout    	compilable	timeout	86	1	replace
1688	[BUG]  [BUGGY]  ensurePropertyContinuations()  &&  registry.isLastGeneration()  &&  propertyNode!=  null);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  ensurePropertyContinuations()  &&  registry.isLastGeneration()  &&  propertyNode!=  null);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	ensurePropertyContinuations()  &&  registry.isLastGeneration()  &&  propertyNode!=  null);	  ensurePropertyContinuations()    &&    registry.isLastGeneration());    	non-compiled	[CE]  not  a  statement	16	None	replace
1689	[BUG]  [BUGGY]  Predicates.checkState(validator.isLastGeneration());  [CE]  cannot  find  symbol  [FE]                            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Predicates.checkState(validator.isLastGeneration());  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Predicates.checkState(validator.isLastGeneration());	  Predicates.checkState(detectImplicitPrototypeCycle());    	non-compiled	[CE]  cannot  find  symbol	126	None	replace
1690	[BUG]  [BUGGY]  Predicates.checkState(validator.getType()  ==  Token.NAME);  [CE]  cannot  find  symbol  [FE]                              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Predicates.checkState(validator.getType()  ==  Token.NAME);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Predicates.checkState(validator.getType()  ==  Token.NAME);	  Predicates.checkState(detectImplicitPrototypeCycle());    	non-compiled	[CE]  cannot  find  symbol	126	None	replace
1691	[BUG]  [BUGGY]  if(propertyContinuations!=    null)    {    finishPropertyContinuations();    }    if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  if(propertyContinuations  }  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(propertyContinuations!=    null)    {    finishPropertyContinuations();    }    if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  if(propertyContinuations  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations!=        null)        {        finishPropertyContinuations();        }        if(propertyContinuations!=    null)    {    finishPropertyContinuations();    }    if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  if(propertyContinuations  }	  timeout    	non-compiled	[CE]  ')'  expected	76	None	add
1692	[BUG]  [BUGGY]  if(propertyContinuations!=    null)    {    finishPropertyContinuations();    }    if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  if(propertyContinu  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(propertyContinuations!=    null)    {    finishPropertyContinuations();    }    if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  if(propertyContinu  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations!=        null)        {        finishPropertyContinuations();        }        if(propertyContinuations!=    null)    {    finishPropertyContinuations();    }    if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  if(propertyContinu	  timeout    	non-compiled	[CE]  ')'  expected	76	None	add
1693	[BUG]  [BUGGY]  if(propertyContinuations!=    null)    {    finishPropertyContinuations();    }    if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  if(property  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(propertyContinuations!=    null)    {    finishPropertyContinuations();    }    if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  if(property  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations!=        null)        {        finishPropertyContinuations();        }        if(propertyContinuations!=    null)    {    finishPropertyContinuations();    }    if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  if(property	  timeout    	non-compiled	[CE]  ')'  expected	76	None	add
1694	[BUG]  [BUGGY]  if(propertyContinuations!=    null)    {    finishPropertyContinuations();    }    if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  if(propertyContinuations!=  null)  {  finish  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(propertyContinuations!=    null)    {    finishPropertyContinuations();    }    if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  if(propertyContinuations!=  null)  {  finish  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations!=        null)        {        finishPropertyContinuations();        }        if(propertyContinuations!=    null)    {    finishPropertyContinuations();    }    if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  if(propertyContinuations!=  null)  {  finish	  timeout    	non-compiled	[CE]  ';'  expected	76	None	add
1695	[BUG]  [BUGGY]  ensurePropertyContinuations()  &&  registry.isLastGeneration()?  getInferredType()  :  this;  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  ensurePropertyContinuations()  &&  registry.isLastGeneration()?  getInferredType()  :  this;  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	ensurePropertyContinuations()  &&  registry.isLastGeneration()?  getInferredType()  :  this;	  ensurePropertyContinuations()    &&    registry.isLastGeneration()?    getReferencedType()    :    this;    	non-compiled	[CE]  not  a  statement	15	None	replace
1696	[BUG]  [BUGGY]  ensurePropertyContinuations()  &&  registry.isLocal()?  getReferencedType()  :  this;  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  ensurePropertyContinuations()  &&  registry.isLocal()?  getReferencedType()  :  this;  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	ensurePropertyContinuations()  &&  registry.isLocal()?  getReferencedType()  :  this;	  ensurePropertyContinuations()    &&    registry.isLastGeneration()?    getReferencedType()    :    this;    	non-compiled	[CE]  not  a  statement	15	None	replace
1697	[BUG]  [BUGGY]  if(validator!=  null  ||  registry.isLastGeneration())  {  finishPropertyFields();  }  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(validator!=  null  ||  registry.isLastGeneration())  {  finishPropertyFields();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(validator!=  null  ||  registry.isLastGeneration())  {  finishPropertyFields();  }	  if(validator!=    null)    {    finishPropertyFields();    }    	non-compiled	[CE]  cannot  find  symbol	161	None	replace
1698	[BUG]  [BUGGY]  if(validator!=  null  &&  registry.isLastGeneration())  {  finishPropertyFields();  }  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(validator!=  null  &&  registry.isLastGeneration())  {  finishPropertyFields();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(validator!=  null  &&  registry.isLastGeneration())  {  finishPropertyFields();  }	  if(validator!=    null)    {    finishPropertyFields();    }    	non-compiled	[CE]  cannot  find  symbol	161	None	replace
1699	[BUG]  [BUGGY]  if(registry!=  null)  {  finishPropertyFields();  }  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(registry!=  null)  {  finishPropertyFields();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(registry!=  null)  {  finishPropertyFields();  }	  if(validator!=    null)    {    finishPropertyFields();    }    	non-compiled	[CE]  cannot  find  symbol	161	None	replace
1700	[BUG]  [BUGGY]  if(validator!=  null  ||  registry.isLastGeneration())  {  startPropertyFields();  }  [CE]  cannot  find  symbol  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(validator!=  null  ||  registry.isLastGeneration())  {  startPropertyFields();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(validator!=  null  ||  registry.isLastGeneration())  {  startPropertyFields();  }	  if(validator!=    null)    {    finishPropertyFields();    }    	non-compiled	[CE]  cannot  find  symbol	161	None	replace
1701	[BUG]  [BUGGY]  propertyContinuations(resolved,  enclosing)  {  finishPropertyContinuations();  }  else  {  registry.isLastGeneration()?  getReferencedType()  :  this;  }  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  propertyContinuations(resolved,  enclosing)  {  finishPropertyContinuations();  }  else  {  registry.isLastGeneration()?  getReferencedType()  :  this;  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	propertyContinuations(resolved,  enclosing)  {  finishPropertyContinuations();  }  else  {  registry.isLastGeneration()?  getReferencedType()  :  this;  }	  propertyContinuations(resolved,    propertyNode)    {    finishPropertyContinuations();    }    else    {    registry.isLastGeneration()?    getReferencedType()    :    this;    }    	non-compiled	[CE]  ';'  expected	59	None	replace
1702	[BUG]  [BUGGY]  propertyContinuations(t,  resolved)  {  finishPropertyContinuations();  }  else  {  registry.isLastGeneration()?  getReferencedType()  :  this;  }  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  propertyContinuations(t,  resolved)  {  finishPropertyContinuations();  }  else  {  registry.isLastGeneration()?  getReferencedType()  :  this;  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	propertyContinuations(t,  resolved)  {  finishPropertyContinuations();  }  else  {  registry.isLastGeneration()?  getReferencedType()  :  this;  }	  propertyContinuations(resolved,    propertyNode)    {    finishPropertyContinuations();    }    else    {    registry.isLastGeneration()?    getReferencedType()    :    this;    }    	non-compiled	[CE]  ';'  expected	59	None	replace
1703	[BUG]  [BUGGY]  if(resolved)  {  propertyContinuations(resolved,  propertyNode)  {  finishPropertyContinuations();  }  else  {  registry.isLastGeneration()?  getReferencedType()  :  this;  }  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(resolved)  {  propertyContinuations(resolved,  propertyNode)  {  finishPropertyContinuations();  }  else  {  registry.isLastGeneration()?  getReferencedType()  :  this;  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(resolved)  {  propertyContinuations(resolved,  propertyNode)  {  finishPropertyContinuations();  }  else  {  registry.isLastGeneration()?  getReferencedType()  :  this;  }	  propertyContinuations(resolved,    propertyNode)    {    finishPropertyContinuations();    }    else    {    registry.isLastGeneration()?    getReferencedType()    :    this;    }    	non-compiled	[CE]  ';'  expected	59	None	replace
1704	[BUG]  [BUGGY]  propertyContinuations  =  registry.isLastGeneration()?  getReferencedType()  :  REFERENCE_TYPE;  [CE]  cannot  find  symbol  REFERENCE_TYPE  [FE]                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  propertyContinuations  =  registry.isLastGeneration()?  getReferencedType()  :  REFERENCE_TYPE;  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	propertyContinuations  =  registry.isLastGeneration()?  getReferencedType()  :  REFERENCE_TYPE;	  propertyContinuations    =    registry.isLastGeneration()?    getReferencedType()    :    this;    	non-compiled	[CE]  cannot  find  symbol  REFERENCE_TYPE	9	None	replace
1705	[BUG]  [BUGGY]  propertyContinuations  =  registry.isLastGeneration()?  getReferencedType()  :  REFERENCED_TYPE;  [CE]  cannot  find  symbol  REFERENCED_TYPE  [FE]                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  propertyContinuations  =  registry.isLastGeneration()?  getReferencedType()  :  REFERENCED_TYPE;  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	propertyContinuations  =  registry.isLastGeneration()?  getReferencedType()  :  REFERENCED_TYPE;	  propertyContinuations    =    registry.isLastGeneration()?    getReferencedType()    :    this;    	non-compiled	[CE]  cannot  find  symbol  REFERENCED_TYPE	9	None	replace
1706	[BUG]  [BUGGY]  propertyContinuations  =  registry.isLastGeneration()?  getReferencedType()  :  DEFAULT_PROPERTY;  [CE]  cannot  find  symbol  DEFAULT_PROPERTY  [FE]                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  propertyContinuations  =  registry.isLastGeneration()?  getReferencedType()  :  DEFAULT_PROPERTY;  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	propertyContinuations  =  registry.isLastGeneration()?  getReferencedType()  :  DEFAULT_PROPERTY;	  propertyContinuations    =    registry.isLastGeneration()?    getReferencedType()    :    this;    	non-compiled	[CE]  cannot  find  symbol  DEFAULT_PROPERTY	9	None	replace
1707	[BUG]  [BUGGY]  Annotation  <?>  propertyContinuations  =  properties.getPropertyType(propertyName);  [CE]  cannot  find  symbol  [FE]                              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Annotation  <?>  propertyContinuations  =  properties.getPropertyType(propertyName);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Annotation  <?>  propertyContinuations  =  properties.getPropertyType(propertyName);	  Annotation    <?>    propertyContinuations    =    registry.getPropertyType(propertyName);    	non-compiled	[CE]  cannot  find  symbol	198	None	replace
1708	[BUG]  [BUGGY]  Annotation  <?>  propertyContinuations  =  registry.getPropertyType(propertyName,  inferred);  [CE]  cannot  find  symbol  [FE]                                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Annotation  <?>  propertyContinuations  =  registry.getPropertyType(propertyName,  inferred);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Annotation  <?>  propertyContinuations  =  registry.getPropertyType(propertyName,  inferred);	  Annotation    <?>    propertyContinuations    =    registry.getPropertyType(propertyName);    	non-compiled	[CE]  cannot  find  symbol	198	None	replace
1709	[BUG]  [BUGGY]  Annotation  <?>  propertyContinuations  =  register.getPropertyType(propertyName);  [CE]  cannot  find  symbol  [FE]                                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Annotation  <?>  propertyContinuations  =  register.getPropertyType(propertyName);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Annotation  <?>  propertyContinuations  =  register.getPropertyType(propertyName);	  Annotation    <?>    propertyContinuations    =    registry.getPropertyType(propertyName);    	non-compiled	[CE]  cannot  find  symbol	198	None	replace
1710	[BUG]  [BUGGY]  Annotation  <?>  propertyContinuations  =  registry.findPropertyType(propertyName);  [CE]  cannot  find  symbol  [FE]                                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Annotation  <?>  propertyContinuations  =  registry.findPropertyType(propertyName);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Annotation  <?>  propertyContinuations  =  registry.findPropertyType(propertyName);	  Annotation    <?>    propertyContinuations    =    registry.getPropertyType(propertyName);    	non-compiled	[CE]  cannot  find  symbol	198	None	replace
1711	[BUG]  [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(propertyName);  [CE]  cannot  find  symbol  [FE]                            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(propertyName);  [BUGGY]    null)  {  finishPropertyContinuations();  }  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	AssertionFailedError  t  =  new  AssertionFailedError(propertyName);	  if(propertyContinuations!=    null)    {    finishPropertyContinuations();    }    if(propertyContinuations    	non-compiled	[CE]  cannot  find  symbol	84	None	replace
1712	[BUG]  [BUGGY]  if(propertyContinuations!=  null)  {  startPropertyValues();  }  else  {  getPropertyContinuations().addAll(propertyContinuations);  }  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(propertyContinuations!=  null)  {  startPropertyValues();  }  else  {  getPropertyContinuations().addAll(propertyContinuations);  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations!=  null)  {  startPropertyValues();  }  else  {  getPropertyContinuations().addAll(propertyContinuations);  }	  if(propertyContinuations!=    null)    {    finishPropertyValues();    }    else    {    getPropertyContinuations().addAll(propertyContinuations);    }    	non-compiled	[CE]  cannot  find  symbol	212	None	replace
1713	[BUG]  [BUGGY]  Preconditions.checkState(propertyContinuations!=  null)  {  finishPropertyValues();  }  else  {  getPropertyContinuations().addAll(propertyContinuations);  }  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Preconditions.checkState(propertyContinuations!=  null)  {  finishPropertyValues();  }  else  {  getPropertyContinuations().addAll(propertyContinuations);  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Preconditions.checkState(propertyContinuations!=  null)  {  finishPropertyValues();  }  else  {  getPropertyContinuations().addAll(propertyContinuations);  }	  if(propertyContinuations!=    null)    {    finishPropertyValues();    }    else    {    getPropertyContinuations().addAll(propertyContinuations);    }    	non-compiled	[CE]  ';'  expected	212	None	replace
1714	[BUG]  [BUGGY]  if(propertyContinuations!=  null)  {  finishPropertyTypeValues();  }  else  {  getPropertyContinuations().addAll(propertyContinuations);  }  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(propertyContinuations!=  null)  {  finishPropertyTypeValues();  }  else  {  getPropertyContinuations().addAll(propertyContinuations);  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations!=  null)  {  finishPropertyTypeValues();  }  else  {  getPropertyContinuations().addAll(propertyContinuations);  }	  if(propertyContinuations!=    null)    {    finishPropertyValues();    }    else    {    getPropertyContinuations().addAll(propertyContinuations);    }    	non-compiled	[CE]  cannot  find  symbol	212	None	replace
1715	[BUG]  [BUGGY]  if(propertyContinuations!=  null)  {  finishPropertyTypes();  }  else  {  getPropertyContinuations().addAll(propertyContinuations);  }  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(propertyContinuations!=  null)  {  finishPropertyTypes();  }  else  {  getPropertyContinuations().addAll(propertyContinuations);  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations!=  null)  {  finishPropertyTypes();  }  else  {  getPropertyContinuations().addAll(propertyContinuations);  }	  if(propertyContinuations!=    null)    {    finishPropertyValues();    }    else    {    getPropertyContinuations().addAll(propertyContinuations);    }    	non-compiled	[CE]  cannot  find  symbol	212	None	replace
1716	[BUG]  [BUGGY]  if(propertyContinuations!=  null)  {  finishPropertyValues();  }  else  {  getPropertyContinuations().addAll(properties);  }  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(propertyContinuations!=  null)  {  finishPropertyValues();  }  else  {  getPropertyContinuations().addAll(properties);  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations!=  null)  {  finishPropertyValues();  }  else  {  getPropertyContinuations().addAll(properties);  }	  if(propertyContinuations!=    null)    {    finishPropertyValues();    }    else    {    getPropertyContinuations().addAll(propertyContinuations);    }    	non-compiled	[CE]  cannot  find  symbol	212	None	replace
1717	[BUG]  [BUGGY]  if(propertyContinuations!=  null)  {  startPropertyType();  }  else  {  getPropertyContinuations().addAll(propertyContinuations);  }  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(propertyContinuations!=  null)  {  startPropertyType();  }  else  {  getPropertyContinuations().addAll(propertyContinuations);  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations!=  null)  {  startPropertyType();  }  else  {  getPropertyContinuations().addAll(propertyContinuations);  }	  if(propertyContinuations!=    null)    {    finishPropertyType();    }    else    {    getPropertyContinuations().addAll(propertyContinuations);    }    	non-compiled	[CE]  cannot  find  symbol	122	None	replace
1718	[BUG]  [BUGGY]  if(propertyContinuations!=  null)  {  finishType();  }  else  {  getPropertyContinuations().addAll(propertyContinuations);  }  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(propertyContinuations!=  null)  {  finishType();  }  else  {  getPropertyContinuations().addAll(propertyContinuations);  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations!=  null)  {  finishType();  }  else  {  getPropertyContinuations().addAll(propertyContinuations);  }	  if(propertyContinuations!=    null)    {    finishPropertyType();    }    else    {    getPropertyContinuations().addAll(propertyContinuations);    }    	non-compiled	[CE]  cannot  find  symbol	122	None	replace
1719	[BUG]  [BUGGY]  if(propertyContinuations!=  null)  {  finishPropertyType();  }  else  {  propertyContinuations().addAll(propertyContinuations);  }  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(propertyContinuations!=  null)  {  finishPropertyType();  }  else  {  propertyContinuations().addAll(propertyContinuations);  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations!=  null)  {  finishPropertyType();  }  else  {  propertyContinuations().addAll(propertyContinuations);  }	  if(propertyContinuations!=    null)    {    finishPropertyType();    }    else    {    getPropertyContinuations().addAll(propertyContinuations);    }    	non-compiled	[CE]  cannot  find  symbol	122	None	replace
1720	[BUG]  [BUGGY]  if(propertyContinuations!=  null)  {  finishPropertyType();  }  else  {  getPropertyContinuations().removeAll(propertyContinuations);  }  [CE]  cannot  find  symbol  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(propertyContinuations!=  null)  {  finishPropertyType();  }  else  {  getPropertyContinuations().removeAll(propertyContinuations);  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations!=  null)  {  finishPropertyType();  }  else  {  getPropertyContinuations().removeAll(propertyContinuations);  }	  if(propertyContinuations!=    null)    {    finishPropertyType();    }    else    {    getPropertyContinuations().addAll(propertyContinuations);    }    	non-compiled	[CE]  cannot  find  symbol	122	None	replace
1721	[BUG]  [BUGGY]  if(propertyContinuations!=  null)  {  finishPropertyType();  }  else  {  getPropertyContinuations().addAll(properties);  }  [CE]  cannot  find  symbol  [FE]                            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(propertyContinuations!=  null)  {  finishPropertyType();  }  else  {  getPropertyContinuations().addAll(properties);  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations!=  null)  {  finishPropertyType();  }  else  {  getPropertyContinuations().addAll(properties);  }	  if(propertyContinuations!=    null)    {    finishPropertyType();    }    else    {    getPropertyContinuations().addAll(propertyContinuations);    }    	non-compiled	[CE]  cannot  find  symbol	122	None	replace
1722	[BUG]  [BUGGY]  validator!=  null  &&  registry.isFirstGeneration())  {  finishPropertyContinuations();  }  else  {  registry.isLastGeneration()  :  this;  }  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  validator!=  null  &&  registry.isFirstGeneration())  {  finishPropertyContinuations();  }  else  {  registry.isLastGeneration()  :  this;  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	validator!=  null  &&  registry.isFirstGeneration())  {  finishPropertyContinuations();  }  else  {  registry.isLastGeneration()  :  this;  }	  if(validator!=    null    &&    registry.isLastGeneration())    {    finishPropertyContinuations();    }    else    {    registry.isLastGeneration()    :    this;    }    	non-compiled	[CE]  not  a  statement	239	None	replace
1723	[BUG]  [BUGGY]  if(validator!=  null  &&  registry.isLastGeneration())  {  handlePropertyContinuations();  }  else  {  registry.isLastGeneration()  :  this;  }  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(validator!=  null  &&  registry.isLastGeneration())  {  handlePropertyContinuations();  }  else  {  registry.isLastGeneration()  :  this;  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(validator!=  null  &&  registry.isLastGeneration())  {  handlePropertyContinuations();  }  else  {  registry.isLastGeneration()  :  this;  }	  if(validator!=    null    &&    registry.isLastGeneration())    {    finishPropertyContinuations();    }    else    {    registry.isLastGeneration()    :    this;    }    	non-compiled	[CE]  ';'  expected	239	None	replace
1724	[BUG]  [BUGGY]  timeout  [FE]                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(validator!=  null  &&  registry.isLastGeneration())  {  handleTypeCycle(t);  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	add	if(validator!=  null  &&  registry.isLastGeneration())  {  handleTypeCycle(t);  }	  if(validator!=    null    &&    registry.isLastGeneration())    {    finishPropertyContinuations();    }    else    {    registry.isLastGeneration()    :    this;    }    	compilable	timeout	239	1	replace
1725	[BUG]  [BUGGY]  if(validator!=  null  &&  registry.isLastGeneration())  {  handleTypeCycle(t);  }  timeout  [FE]                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(validator!=  null  &&  registry.isLastGeneration())  {  handleTypeCycle(t);  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(validator!=  null  &&  registry.isLastGeneration())  {  handleTypeCycle(t);  }	  if(validator!=    null    &&    registry.isLastGeneration())    {    finishPropertyContinuations();    }    else    {    registry.isLastGeneration()    :    this;    }    	compilable	timeout	239	1	replace
1726	[BUG]  [BUGGY]  Parchet.checkState(registry,  resolved  ||  registry.isLastGeneration()?  getReferencedType()  :  this);  [CE]  cannot  find  symbol  Parchet  [FE]                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Parchet.checkState(registry,  resolved  ||  registry.isLastGeneration()?  getReferencedType()  :  this);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Parchet.checkState(registry,  resolved  ||  registry.isLastGeneration()?  getReferencedType()  :  this);	  Parchet.checkState(resolved    ||    registry.isLastGeneration()?    getReferencedType()    :    this);    	non-compiled	[CE]  cannot  find  symbol  Parchet	62	None	replace
1727	[BUG]  [BUGGY]  luate(resolved,  propertyNode)  {  finishPropertyContinuations();  }  else  {  registry.isLastGeneration()?  getReferencedType()  :  null;  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  luate(resolved,  propertyNode)  {  finishPropertyContinuations();  }  else  {  registry.isLastGeneration()?  getReferencedType()  :  null;  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	luate(resolved,  propertyNode)  {  finishPropertyContinuations();  }  else  {  registry.isLastGeneration()?  getReferencedType()  :  null;	  luate(registry,    resolved)    {    finishPropertyContinuations();    }    else    {    registry.isLastGeneration()?    getReferencedType()    :    null;    	non-compiled	[CE]  ';'  expected	181	None	replace
1728	[BUG]  [BUGGY]  luate(registry,  null)  {  finishPropertyContinuations();  }  else  {  registry.isLastGeneration()?  getReferencedType()  :  null;  [CE]  ';'  expected  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  luate(registry,  null)  {  finishPropertyContinuations();  }  else  {  registry.isLastGeneration()?  getReferencedType()  :  null;  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	luate(registry,  null)  {  finishPropertyContinuations();  }  else  {  registry.isLastGeneration()?  getReferencedType()  :  null;	  luate(registry,    resolved)    {    finishPropertyContinuations();    }    else    {    registry.isLastGeneration()?    getReferencedType()    :    null;    	non-compiled	[CE]  ';'  expected	181	None	replace
1729	[BUG]  [BUGGY]  luate(registry,  enclosing)  {  startPropertyGeneration();  }  else  {  registry.isLastGeneration()?  getReferencedType()  :  null;  [CE]  ';'  expected  [FE]                            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  luate(registry,  enclosing)  {  startPropertyGeneration();  }  else  {  registry.isLastGeneration()?  getReferencedType()  :  null;  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	luate(registry,  enclosing)  {  startPropertyGeneration();  }  else  {  registry.isLastGeneration()?  getReferencedType()  :  null;	  luate(registry,    resolved)    {    finishPropertyContinuations();    }    else    {    registry.isLastGeneration()?    getReferencedType()    :    null;    	non-compiled	[CE]  ';'  expected	181	None	replace
1730	[BUG]  [BUGGY]  ensurePropertyContinuations(registry,  resolve);  [CE]  cannot  find  symbol  resolve  [FE]                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  ensurePropertyContinuations(registry,  resolve);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	ensurePropertyContinuations(registry,  resolve);	  ensurePropertyContinuations(registry);    	non-compiled	[CE]  cannot  find  symbol  resolve	171	None	replace
1731	[BUG]  [BUGGY]  ensurePropertyContinuations(registry,  validator);  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  ensurePropertyContinuations(registry,  validator);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	ensurePropertyContinuations(registry,  validator);	  ensurePropertyContinuations(registry);    	non-compiled	[CE]  cannot  find  symbol	171	None	replace
1732	[BUG]  [BUGGY]  ensurePropertyContinuations(registry,  properties);  [CE]  cannot  find  symbol  properties  [FE]                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  ensurePropertyContinuations(registry,  properties);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	ensurePropertyContinuations(registry,  properties);	  ensurePropertyContinuations(registry);    	non-compiled	[CE]  cannot  find  symbol  properties	171	None	replace
1733	[BUG]  [BUGGY]  if(validator!=  null  &&  registry.getPropertyType()!=  propertyType)  {  finishPropertyContinuations();  }  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(validator!=  null  &&  registry.getPropertyType()!=  propertyType)  {  finishPropertyContinuations();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(validator!=  null  &&  registry.getPropertyType()!=  propertyType)  {  finishPropertyContinuations();  }	  if(validator!=    null    &&    validator.getPropertyType()!=    propertyType)    {    finishPropertyContinuations();    }    	non-compiled	[CE]  cannot  find  symbol	209	None	replace
1734	[BUG]  [BUGGY]  if(validator!=  null  &&  validater.getPropertyType()!=  propertyType)  {  finishPropertyContinuations();  }  [CE]  cannot  find  symbol  validater  [FE]                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(validator!=  null  &&  validater.getPropertyType()!=  propertyType)  {  finishPropertyContinuations();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(validator!=  null  &&  validater.getPropertyType()!=  propertyType)  {  finishPropertyContinuations();  }	  if(validator!=    null    &&    validator.getPropertyType()!=    propertyType)    {    finishPropertyContinuations();    }    	non-compiled	[CE]  cannot  find  symbol  validater	209	None	replace
1735	[BUG]  [BUGGY]  if(validator!=  null  &&  validator.isReferenced())  {  finishPropertyContinuations();  }  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(validator!=  null  &&  validator.isReferenced())  {  finishPropertyContinuations();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(validator!=  null  &&  validator.isReferenced())  {  finishPropertyContinuations();  }	  if(validator!=    null    &&    validator.isProperty())    {    finishPropertyContinuations();    }    	non-compiled	[CE]  cannot  find  symbol	210	None	replace
1736	[BUG]  [BUGGY]  resolveViaProperties(t,  enclosing);  if(validator!=  null)  {  resolveViaProperties(t,  enclosing);  }  else  {  registry.isLastGeneration()?  getReferencedType()  :  this;  }  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  resolveViaProperties(t,  enclosing);  if(validator!=  null)  {  resolveViaProperties(t,  enclosing);  }  else  {  registry.isLastGeneration()?  getReferencedType()  :  this;  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	resolveViaProperties(t,    enclosing);    if(validator!=  null)  {  resolveViaProperties(t,  enclosing);  }  else  {  registry.isLastGeneration()?  getReferencedType()  :  this;  }	  timeout    	non-compiled	[CE]  not  a  statement	85	None	add
1737	[BUG]  [BUGGY]  timeout  [FE]                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  resolveViaProperties(t,  enclosing);  if(validator!=  null)  {  resolveViaProperties(t,  enclosing);  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	add	resolveViaProperties(t,    enclosing);    if(validator!=  null)  {  resolveViaProperties(t,  enclosing);  }	  timeout    	compilable	timeout	85	1	add
1738	[BUG]  [BUGGY]  resolveViaProperties(t,  enclosing);  if(validator!=  null)  {  resolveViaProperties(t,  enclosing);  }  timeout  [FE]                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  resolveViaProperties(t,  enclosing);  if(validator!=  null)  {  resolveViaProperties(t,  enclosing);  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	resolveViaProperties(t,    enclosing);    if(validator!=  null)  {  resolveViaProperties(t,  enclosing);  }	  timeout    	compilable	timeout	85	1	add
1739	[BUG]  [BUGGY]  resolveViaProperties(t,  enclosing);  if(validator  ==  null)  {  resolveViaProperties(t,  enclosing);  }  else  {  registry.isLastGeneration()?  getReferencedType()  :  this;  }  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  resolveViaProperties(t,  enclosing);  if(validator  ==  null)  {  resolveViaProperties(t,  enclosing);  }  else  {  registry.isLastGeneration()?  getReferencedType()  :  this;  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	resolveViaProperties(t,    enclosing);    if(validator  ==  null)  {  resolveViaProperties(t,  enclosing);  }  else  {  registry.isLastGeneration()?  getReferencedType()  :  this;  }	  timeout    	non-compiled	[CE]  not  a  statement	85	None	add
1740	[BUG]  [BUGGY]  resolveViaProperties(t,  enclosing);  if(type!=  null)  {  resolveViaProperties(t,  enclosing);  }  [CE]  cannot  find  symbol  type  [FE]                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  resolveViaProperties(t,  enclosing);  if(type!=  null)  {  resolveViaProperties(t,  enclosing);  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	resolveViaProperties(t,    enclosing);    if(type!=  null)  {  resolveViaProperties(t,  enclosing);  }	  timeout    	non-compiled	[CE]  cannot  find  symbol  type	85	None	add
1741	[BUG]  [BUGGY]  timeout  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  resolveViaProperties(t,  enclosing);  if(validator  ==  null)  {  resolveViaProperties(t,  enclosing);  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	add	resolveViaProperties(t,    enclosing);    if(validator  ==  null)  {  resolveViaProperties(t,  enclosing);  }	  timeout    	compilable	timeout	85	1	add
1742	[BUG]  [BUGGY]  resolveViaProperties(t,  enclosing);  if(validator  ==  null)  {  resolveViaProperties(t,  enclosing);  }  timeout  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  resolveViaProperties(t,  enclosing);  if(validator  ==  null)  {  resolveViaProperties(t,  enclosing);  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	resolveViaProperties(t,    enclosing);    if(validator  ==  null)  {  resolveViaProperties(t,  enclosing);  }	  timeout    	compilable	timeout	85	1	add
1743	[BUG]  [BUGGY]  resolveViaProperties(t,  enclosing);  if(type  ==  null)  {  resolveViaProperties(t,  enclosing);  }  [CE]  cannot  find  symbol  type  [FE]                            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  resolveViaProperties(t,  enclosing);  if(type  ==  null)  {  resolveViaProperties(t,  enclosing);  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	resolveViaProperties(t,    enclosing);    if(type  ==  null)  {  resolveViaProperties(t,  enclosing);  }	  timeout    	non-compiled	[CE]  cannot  find  symbol  type	85	None	add
1744	[BUG]  [BUGGY]  Predicates.checkNotNull(propertyContinuations,  enclosing);  [CE]  cannot  find  symbol  Predicates  [FE]                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Predicates.checkNotNull(propertyContinuations,  enclosing);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Predicates.checkNotNull(propertyContinuations,  enclosing);	  Predicates.checkNotNull(propertyContinuations);    	non-compiled	[CE]  cannot  find  symbol  Predicates	89	None	replace
1745	[BUG]  [BUGGY]  Register.isLastGeneration()?  getReferencedType()  :  REFERENCED_TYPE;  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Register.isLastGeneration()?  getReferencedType()  :  REFERENCED_TYPE;  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Register.isLastGeneration()?  getReferencedType()  :  REFERENCED_TYPE;	  Register.isLastGeneration()?    getReferencedType()    :    this;    	non-compiled	[CE]  not  a  statement	245	None	replace
1746	[BUG]  [BUGGY]  Register.isLastGeneration()?  getReferencedType()  :  registry.getNativeType(UNKNOWN_TYPE);  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Register.isLastGeneration()?  getReferencedType()  :  registry.getNativeType(UNKNOWN_TYPE);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Register.isLastGeneration()?  getReferencedType()  :  registry.getNativeType(UNKNOWN_TYPE);	  Register.isLastGeneration()?    getReferencedType()    :    this;    	non-compiled	[CE]  not  a  statement	245	None	replace
1747	[BUG]  [BUGGY]  Predicates.checkNotNull(registry,  enclosing);  [CE]  cannot  find  symbol  Predicates  [FE]                                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Predicates.checkNotNull(registry,  enclosing);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Predicates.checkNotNull(registry,  enclosing);	          Predicates.checkNotNull(enclosing);    	non-compiled	[CE]  cannot  find  symbol  Predicates	24	None	replace
1748	[BUG]  [BUGGY]  if(propertyContinuations    ==    null)    {    finishPropertyContinuations();    }    if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  if(propertyContinuations  ==  null)  {  finishPropertyContinuations();  }  if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  if(propertyContinu  [CE]  ')'  expected  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(propertyContinuations    ==    null)    {    finishPropertyContinuations();    }    if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  if(propertyContinuations  ==  null)  {  finishPropertyContinuations();  }  if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  if(propertyContinu  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations        ==        null)        {        finishPropertyContinuations();        }        if(propertyContinuations!=    null)    {    finishPropertyContinuations();    }    if(propertyContinuations  ==  null)  {  finishPropertyContinuations();  }  if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  if(propertyContinu	  timeout    	non-compiled	[CE]  ')'  expected	43	None	add
1749	[BUG]  [BUGGY]  if(propertyContinuations    ==    null)    {    finishPropertyContinuations();    }    if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  if(propertyContinuations  ==  null)  {  finishPropertyContinuations();  }  if(propertyContinuations  ==  null)  {  finishPropertyContinuations();  }  if(propertyContinuations!=  null)  {  finishProperty  [CE]  ';'  expected  [FE]                            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(propertyContinuations    ==    null)    {    finishPropertyContinuations();    }    if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  if(propertyContinuations  ==  null)  {  finishPropertyContinuations();  }  if(propertyContinuations  ==  null)  {  finishPropertyContinuations();  }  if(propertyContinuations!=  null)  {  finishProperty  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations        ==        null)        {        finishPropertyContinuations();        }        if(propertyContinuations!=    null)    {    finishPropertyContinuations();    }    if(propertyContinuations  ==  null)  {  finishPropertyContinuations();  }  if(propertyContinuations  ==  null)  {  finishPropertyContinuations();  }  if(propertyContinuations!=  null)  {  finishProperty	  timeout    	non-compiled	[CE]  ';'  expected	43	None	add
1750	[BUG]  [BUGGY]  if(propertyContinuations    ==    null)    {    finishPropertyContinuations();    }    if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  if(propertyContinuations  ==  null)  {  finishPropertyContinuations();  }  if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  if(propertyContinuations!=  null)  {  finish  [CE]  ';'  expected  [FE]                              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(propertyContinuations    ==    null)    {    finishPropertyContinuations();    }    if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  if(propertyContinuations  ==  null)  {  finishPropertyContinuations();  }  if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  if(propertyContinuations!=  null)  {  finish  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations        ==        null)        {        finishPropertyContinuations();        }        if(propertyContinuations!=    null)    {    finishPropertyContinuations();    }    if(propertyContinuations  ==  null)  {  finishPropertyContinuations();  }  if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  if(propertyContinuations!=  null)  {  finish	  timeout    	non-compiled	[CE]  ';'  expected	43	None	add
1751	[BUG]  [BUGGY]  if(propertyContinuations    ==    null)    {    finishPropertyContinuations();    }    if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  if(propertyContinuations  ==  null)  {  finishPropertyContinuations();  }  if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  if(propertyContinuations!=  null)  {  finishPro  [CE]  ';'  expected  [FE]                                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(propertyContinuations    ==    null)    {    finishPropertyContinuations();    }    if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  if(propertyContinuations  ==  null)  {  finishPropertyContinuations();  }  if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  if(propertyContinuations!=  null)  {  finishPro  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations        ==        null)        {        finishPropertyContinuations();        }        if(propertyContinuations!=    null)    {    finishPropertyContinuations();    }    if(propertyContinuations  ==  null)  {  finishPropertyContinuations();  }  if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  if(propertyContinuations!=  null)  {  finishPro	  timeout    	non-compiled	[CE]  ';'  expected	43	None	add
1752	[BUG]  [BUGGY]  if(propertyContinuations!=  null)  {  startPropertyGenerations();  }  else  {  getPropertyContinuations().addAll(propertyContinuations);  }  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(propertyContinuations!=  null)  {  startPropertyGenerations();  }  else  {  getPropertyContinuations().addAll(propertyContinuations);  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations!=  null)  {  startPropertyGenerations();  }  else  {  getPropertyContinuations().addAll(propertyContinuations);  }	  if(propertyContinuations!=    null)    {    finishPropertyGenerations();    }    else    {    getPropertyContinuations().addAll(propertyContinuations);    }    	non-compiled	[CE]  cannot  find  symbol	123	None	replace
1753	[BUG]  [BUGGY]  Preconditions.checkState(propertyContinuations!=  null)  {  finishPropertyGenerations();  }  else  {  getPropertyContinuations().addAll(propertyContinuations);  }  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Preconditions.checkState(propertyContinuations!=  null)  {  finishPropertyGenerations();  }  else  {  getPropertyContinuations().addAll(propertyContinuations);  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Preconditions.checkState(propertyContinuations!=  null)  {  finishPropertyGenerations();  }  else  {  getPropertyContinuations().addAll(propertyContinuations);  }	  if(propertyContinuations!=    null)    {    finishPropertyGenerations();    }    else    {    getPropertyContinuations().addAll(propertyContinuations);    }    	non-compiled	[CE]  ';'  expected	123	None	replace
1754	[BUG]  [BUGGY]  if(propertyContinuations!=  null)  {  finishPropertyGenerations();  }  else  {  getPropertyContinuations().addAll(properties);  }  [CE]  cannot  find  symbol  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(propertyContinuations!=  null)  {  finishPropertyGenerations();  }  else  {  getPropertyContinuations().addAll(properties);  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations!=  null)  {  finishPropertyGenerations();  }  else  {  getPropertyContinuations().addAll(properties);  }	  if(propertyContinuations!=    null)    {    finishPropertyGenerations();    }    else    {    getPropertyContinuations().addAll(propertyContinuations);    }    	non-compiled	[CE]  cannot  find  symbol	123	None	replace
1755	[BUG]  [BUGGY]  if(propertyContinuations!=  null)  {  finishPropertyGenerations();  }  else  {  propertyContinuations().addAll(propertyContinuations);  }  [CE]  cannot  find  symbol  [FE]                            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(propertyContinuations!=  null)  {  finishPropertyGenerations();  }  else  {  propertyContinuations().addAll(propertyContinuations);  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations!=  null)  {  finishPropertyGenerations();  }  else  {  propertyContinuations().addAll(propertyContinuations);  }	  if(propertyContinuations!=    null)    {    finishPropertyGenerations();    }    else    {    getPropertyContinuations().addAll(propertyContinuations);    }    	non-compiled	[CE]  cannot  find  symbol	123	None	replace
1756	[BUG]  [BUGGY]  if(propertyContinuations!=  null)  {  finishPropertyEntry();  }  else  {  getPropertyContinuations().addAll(propertyContinuations);  }  [CE]  cannot  find  symbol  [FE]                              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(propertyContinuations!=  null)  {  finishPropertyEntry();  }  else  {  getPropertyContinuations().addAll(propertyContinuations);  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations!=  null)  {  finishPropertyEntry();  }  else  {  getPropertyContinuations().addAll(propertyContinuations);  }	  if(propertyContinuations!=    null)    {    finishPropertyGenerations();    }    else    {    getPropertyContinuations().addAll(propertyContinuations);    }    	non-compiled	[CE]  cannot  find  symbol	123	None	replace
1757	[BUG]  [BUGGY]  Annotation  <?>  propertyContinuations  =  registry.getPropertyContinuations(propertyNamingStrategy);  [CE]  cannot  find  symbol  [FE]                                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Annotation  <?>  propertyContinuations  =  registry.getPropertyContinuations(propertyNamingStrategy);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Annotation  <?>  propertyContinuations  =  registry.getPropertyContinuations(propertyNamingStrategy);	  Annotation    <?>    propertyContinuations    =    registry.getPropertyContinuations();    	non-compiled	[CE]  cannot  find  symbol	200	None	replace
1758	[BUG]  [BUGGY]  Annotation  <?>  propertyContinuations  =  registry.findPropertyContinuations(propertyName);  [CE]  cannot  find  symbol  [FE]                                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Annotation  <?>  propertyContinuations  =  registry.findPropertyContinuations(propertyName);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Annotation  <?>  propertyContinuations  =  registry.findPropertyContinuations(propertyName);	  Annotation    <?>    propertyContinuations    =    registry.getPropertyContinuations();    	non-compiled	[CE]  cannot  find  symbol	200	None	replace
1759	[BUG]  [BUGGY]  Annotation  <?>  propertyContinuations  =  registry.getPropertyContinuations(type);  [CE]  cannot  find  symbol  [FE]                                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Annotation  <?>  propertyContinuations  =  registry.getPropertyContinuations(type);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Annotation  <?>  propertyContinuations  =  registry.getPropertyContinuations(type);	  Annotation    <?>    propertyContinuations    =    registry.getPropertyContinuations();    	non-compiled	[CE]  cannot  find  symbol	200	None	replace
1760	[BUG]  [BUGGY]  Status.checkState(status!=  null);  [CE]  cannot  find  symbol  status  [FE]                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Status.checkState(status!=  null);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Status.checkState(status!=  null);	  Status.checkState(validator!=    null);    	non-compiled	[CE]  cannot  find  symbol  status	30	None	replace
1761	[BUG]  [BUGGY]  final  if(resolved)  {  finishPropertyInferred();  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  final  if(resolved)  {  finishPropertyInferred();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	final  if(resolved)  {  finishPropertyInferred();  }	  if(resolved)    {    finishPropertyInferred();    }    	non-compiled	[CE]  illegal  start  of  type	129	None	replace
1762	[BUG]  [BUGGY]  resolved  =  finishPropertyInferred();  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  resolved  =  finishPropertyInferred();  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	resolved  =  finishPropertyInferred();	  if(resolved)    {    finishPropertyInferred();    }    	non-compiled	[CE]  cannot  find  symbol	129	None	replace
1763	[BUG]  [BUGGY]  PropertyInferred  t  =  finishPropertyInferred();  [CE]  cannot  find  symbol  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  PropertyInferred  t  =  finishPropertyInferred();  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	PropertyInferred  t  =  finishPropertyInferred();	  if(resolved)    {    finishPropertyInferred();    }    	non-compiled	[CE]  cannot  find  symbol	129	None	replace
1764	[BUG]  [BUGGY]  PropertyInferred  t  =  getPropertyInferred();  [CE]  cannot  find  symbol  [FE]                            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  PropertyInferred  t  =  getPropertyInferred();  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	PropertyInferred  t  =  getPropertyInferred();	  if(resolved)    {    finishPropertyInferred();    }    	non-compiled	[CE]  cannot  find  symbol	129	None	replace
1765	[BUG]  [BUGGY]  Annotations  inferred  =  resolvePropertyInferred();  [CE]  cannot  find  symbol  [FE]                              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Annotations  inferred  =  resolvePropertyInferred();  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Annotations  inferred  =  resolvePropertyInferred();	  if(resolved)    {    finishPropertyInferred();    }    	non-compiled	[CE]  cannot  find  symbol	129	None	replace
1766	[BUG]  [BUGGY]  Integer  inferred  =  resolveViaRegistry(t,  enclosing);  [CE]  incompatible  types  [FE]                                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Integer  inferred  =  resolveViaRegistry(t,  enclosing);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Integer  inferred  =  resolveViaRegistry(t,  enclosing);	          inferred    =    resolveViaRegistry(t,    enclosing);    	non-compiled	[CE]  incompatible  types	23	None	replace
1767	[BUG]  [BUGGY]  inferred  =  resolveViaRegistry(t,  propertyNode);  [CE]  cannot  find  symbol  inferred  [FE]                                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  inferred  =  resolveViaRegistry(t,  propertyNode);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	inferred  =  resolveViaRegistry(t,  propertyNode);	          inferred    =    resolveViaRegistry(t,    enclosing);    	non-compiled	[CE]  cannot  find  symbol  inferred	23	None	replace
1768	[BUG]  [BUGGY]  inferred  =  resolveViaRegistry(t,  enclosing,  propertyNode);  [CE]  cannot  find  symbol  inferred  [FE]                                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  inferred  =  resolveViaRegistry(t,  enclosing,  propertyNode);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	inferred  =  resolveViaRegistry(t,  enclosing,  propertyNode);	          inferred    =    resolveViaRegistry(t,    enclosing);    	non-compiled	[CE]  cannot  find  symbol  inferred	23	None	replace
1769	[BUG]  [BUGGY]  Parchet.checkState(validator!=  null  &&  registry.isLastGeneration());  [CE]  cannot  find  symbol  Parchet  [FE]            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Parchet.checkState(validator!=  null  &&  registry.isLastGeneration());  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Parchet.checkState(validator!=  null  &&  registry.isLastGeneration());	  Parchet.checkState(validator!=    null);    	non-compiled	[CE]  cannot  find  symbol  Parchet	28	None	replace
1770	[BUG]  [BUGGY]  Parchet.checkState(validator!=  null,  registry.isLastGeneration());  [CE]  cannot  find  symbol  Parchet  [FE]              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Parchet.checkState(validator!=  null,  registry.isLastGeneration());  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Parchet.checkState(validator!=  null,  registry.isLastGeneration());	  Parchet.checkState(validator!=    null);    	non-compiled	[CE]  cannot  find  symbol  Parchet	28	None	replace
1771	[BUG]  [BUGGY]  Parchet.checkState(register!=  null);  [CE]  cannot  find  symbol  register  [FE]                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Parchet.checkState(register!=  null);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Parchet.checkState(register!=  null);	  Parchet.checkState(validator!=    null);    	non-compiled	[CE]  cannot  find  symbol  register	28	None	replace
1772	[BUG]  [BUGGY]  ensurePropertyContinuations()  &&  registry.isLastGeneration()?  getReferencedType()  :  type;  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  ensurePropertyContinuations()  &&  registry.isLastGeneration()?  getReferencedType()  :  type;  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	ensurePropertyContinuations()  &&  registry.isLastGeneration()?  getReferencedType()  :  type;	  ensurePropertyContinuations()    &&    registry.isLastGeneration()?    getReferencedType()    :    null;    	non-compiled	[CE]  not  a  statement	17	None	replace
1773	[BUG]  [BUGGY]  ensurePropertyContinuations()  &&  registry.islastGeneration()?  getReferencedType()  :  null;  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  ensurePropertyContinuations()  &&  registry.islastGeneration()?  getReferencedType()  :  null;  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	ensurePropertyContinuations()  &&  registry.islastGeneration()?  getReferencedType()  :  null;	  ensurePropertyContinuations()    &&    registry.isLastGeneration()?    getReferencedType()    :    null;    	non-compiled	[CE]  not  a  statement	17	None	replace
1774	[BUG]  [BUGGY]  ensurePropertyContinuations()  &&  registry.isLocal()?  getReferencedType()  :  null;  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  ensurePropertyContinuations()  &&  registry.isLocal()?  getReferencedType()  :  null;  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	ensurePropertyContinuations()  &&  registry.isLocal()?  getReferencedType()  :  null;	  ensurePropertyContinuations()    &&    registry.isLastGeneration()?    getReferencedType()    :    null;    	non-compiled	[CE]  not  a  statement	17	None	replace
1775	[BUG]  [BUGGY]  ensurePropertyContinuations()  &&  registry!=  null;  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  ensurePropertyContinuations()  &&  registry!=  null;  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	ensurePropertyContinuations()  &&  registry!=  null;	  ensurePropertyContinuations()    &&    propertyNode!=    null;    	non-compiled	[CE]  not  a  statement	170	None	replace
1776	[BUG]  [BUGGY]  ensurePropertyContinuations()  &&  propertyName!=  null;  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  ensurePropertyContinuations()  &&  propertyName!=  null;  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	ensurePropertyContinuations()  &&  propertyName!=  null;	  ensurePropertyContinuations()    &&    propertyNode!=    null;    	non-compiled	[CE]  not  a  statement	170	None	replace
1777	[BUG]  [BUGGY]  ensurePropertyContinuations()  &&  propertiesNode!=  null;  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  ensurePropertyContinuations()  &&  propertiesNode!=  null;  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	ensurePropertyContinuations()  &&  propertiesNode!=  null;	  ensurePropertyContinuations()    &&    propertyNode!=    null;    	non-compiled	[CE]  not  a  statement	170	None	replace
1778	[BUG]  [BUGGY]  Predicates.checkArgument(validator.detectImplicitPrototypeCycle());  handleTypeCycle(t);  [CE]  cannot  find  symbol  [FE]                            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Predicates.checkArgument(validator.detectImplicitPrototypeCycle());  handleTypeCycle(t);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Predicates.checkArgument(validator.detectImplicitPrototypeCycle());  handleTypeCycle(t);	  Predicates.checkArgument(detectImplicitPrototypeCycle());    handleTypeCycle(t);    	non-compiled	[CE]  cannot  find  symbol	202	None	replace
1779	[BUG]  [BUGGY]  Predicates.checkArgument(validator.detectPrototypeCycle());  handleTypeCycle(t);  [CE]  cannot  find  symbol  [FE]                              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Predicates.checkArgument(validator.detectPrototypeCycle());  handleTypeCycle(t);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Predicates.checkArgument(validator.detectPrototypeCycle());  handleTypeCycle(t);	  Predicates.checkArgument(detectImplicitPrototypeCycle());    handleTypeCycle(t);    	non-compiled	[CE]  cannot  find  symbol	202	None	replace
1780	[BUG]  [BUGGY]  Predicates.checkArgument(detectTypeCycle());  handleTypeCycle(t);  [CE]  cannot  find  symbol  [FE]                                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Predicates.checkArgument(detectTypeCycle());  handleTypeCycle(t);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Predicates.checkArgument(detectTypeCycle());  handleTypeCycle(t);	  Predicates.checkArgument(detectImplicitPrototypeCycle());    handleTypeCycle(t);    	non-compiled	[CE]  cannot  find  symbol	202	None	replace
1781	[BUG]  [BUGGY]  Predicate  validator  =  registry.getValue(resolved);  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Predicate  validator  =  registry.getValue(resolved);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Predicate  validator  =  registry.getValue(resolved);	  if(validator!=    null    &&    registry.isLastGeneration())    {    finishPropertyContinuations();    }    else    {    registry.isLastGeneration()?    getReferencedType()    :    this;    }    	non-compiled	[CE]  cannot  find  symbol	230	None	replace
1782	[BUG]  [BUGGY]  validatePropertyContinuations(t,  status);  [CE]  cannot  find  symbol  status  [FE]                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  validatePropertyContinuations(t,  status);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	validatePropertyContinuations(t,  status);	  validatePropertyContinuations(t,    resolved);    	non-compiled	[CE]  cannot  find  symbol  status	108	None	replace
1783	[BUG]  [BUGGY]  Annotations  inferred  =  finishPropertyInferred();  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Annotations  inferred  =  finishPropertyInferred();  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Annotations  inferred  =  finishPropertyInferred();	  if(resolved)    {    finishPropertyInferred();    }    	non-compiled	[CE]  cannot  find  symbol	129	None	replace
1784	[BUG]  [BUGGY]  if(resolved)  {  handlePropertyInferred();  }  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(resolved)  {  handlePropertyInferred();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(resolved)  {  handlePropertyInferred();  }	  if(resolved)    {    finishPropertyInferred();    }    	non-compiled	[CE]  cannot  find  symbol	129	None	replace
1785	[BUG]  [BUGGY]  if(resolved)  {  finishTypeInferred();  }  [CE]  cannot  find  symbol  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(resolved)  {  finishTypeInferred();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(resolved)  {  finishTypeInferred();  }	  if(resolved)    {    finishPropertyInferred();    }    	non-compiled	[CE]  cannot  find  symbol	129	None	replace
1786	[BUG]  [BUGGY]  forcePropertyInferred(t,  enclosing);  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  forcePropertyInferred(t,  enclosing);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	forcePropertyInferred(t,  enclosing);	  if(resolved)    {    finishPropertyContinuations();    }    if(resolved)    <    finishPropertyContinuations();    }    	non-compiled	[CE]  cannot  find  symbol	223	None	replace
1787	[BUG]  [BUGGY]  timeout  [FE]                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Preconditions.checkArgument(!resolved);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	add	Preconditions.checkArgument(!resolved);	  if(resolved)    {    finishPropertyContinuations();    }    if(resolved)    <    finishPropertyContinuations();    }    	compilable	timeout	223	1	replace
1788	[BUG]  [BUGGY]  Preconditions.checkArgument(!resolved);  timeout  [FE]                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Preconditions.checkArgument(!resolved);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Preconditions.checkArgument(!resolved);	  if(resolved)    {    finishPropertyContinuations();    }    if(resolved)    <    finishPropertyContinuations();    }    	compilable	timeout	223	1	replace
1789	[BUG]  [BUGGY]  timeout  [FE]                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Preconditions.checkArgument(resolved);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	add	Preconditions.checkArgument(resolved);	  if(resolved)    {    finishPropertyContinuations();    }    if(resolved)    <    finishPropertyContinuations();    }    	compilable	timeout	223	1	replace
1790	[BUG]  [BUGGY]  Preconditions.checkArgument(resolved);  timeout  [FE]                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Preconditions.checkArgument(resolved);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Preconditions.checkArgument(resolved);	  if(resolved)    {    finishPropertyContinuations();    }    if(resolved)    <    finishPropertyContinuations();    }    	compilable	timeout	223	1	replace
1791	[BUG]  [BUGGY]  timeout  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Preconditions.checkState(resolved  ==  false);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	add	Preconditions.checkState(resolved  ==  false);	  if(resolved)    {    finishPropertyContinuations();    }    if(resolved)    <    finishPropertyContinuations();    }    	compilable	timeout	223	1	replace
1792	[BUG]  [BUGGY]  Preconditions.checkState(resolved  ==  false);  timeout  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Preconditions.checkState(resolved  ==  false);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Preconditions.checkState(resolved  ==  false);	  if(resolved)    {    finishPropertyContinuations();    }    if(resolved)    <    finishPropertyContinuations();    }    	compilable	timeout	223	1	replace
1793	[BUG]  [BUGGY]  luate(registry,  enclosing)  {  startPropertyContinuations();  }  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  luate(registry,  enclosing)  {  startPropertyContinuations();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	luate(registry,  enclosing)  {  startPropertyContinuations();  }	  luate(registry,    resolved)    {    finishPropertyContinuations();    }    else    {    registry.isLastGeneration()?    getReferencedType()    :    null;    }    	non-compiled	[CE]  ';'  expected	167	None	replace
1794	[BUG]  [BUGGY]  PropertyContinuations  <  PropertyContinuation>  propertyContinuations  =  getPropertyContinuations();  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  PropertyContinuations  <  PropertyContinuation>  propertyContinuations  =  getPropertyContinuations();  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	PropertyContinuations  <  PropertyContinuation>  propertyContinuations  =  getPropertyContinuations();	  PropertyContinuations    <    PropertyContinuation>    finishPropertyContinuations();    	non-compiled	[CE]  cannot  find  symbol	112	None	replace
1795	[BUG]  [BUGGY]  PropertyContinuations  <  PropertyContinuation>  propertyContinuations  =  new  PropertyContinuation  <  PropertyContinuation>();  [CE]  cannot  find  symbol  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  PropertyContinuations  <  PropertyContinuation>  propertyContinuations  =  new  PropertyContinuation  <  PropertyContinuation>();  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	PropertyContinuations  <  PropertyContinuation>  propertyContinuations  =  new  PropertyContinuation  <  PropertyContinuation>();	  PropertyContinuations    <    PropertyContinuation>    finishPropertyContinuations();    	non-compiled	[CE]  cannot  find  symbol	112	None	replace
1796	[BUG]  [BUGGY]  PropertyContinuations  <  PropertyContinuation>  propertyContinuations  =  super.getPropertyContinuations();  [CE]  cannot  find  symbol  [FE]                            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  PropertyContinuations  <  PropertyContinuation>  propertyContinuations  =  super.getPropertyContinuations();  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	PropertyContinuations  <  PropertyContinuation>  propertyContinuations  =  super.getPropertyContinuations();	  PropertyContinuations    <    PropertyContinuation>    finishPropertyContinuations();    	non-compiled	[CE]  cannot  find  symbol	112	None	replace
1797	[BUG]  [BUGGY]  PropertyContinuations  <  PropertyContinuation>  propertyContinuations  =  getPropertyContinuations(property);  [CE]  cannot  find  symbol  [FE]                              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  PropertyContinuations  <  PropertyContinuation>  propertyContinuations  =  getPropertyContinuations(property);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	PropertyContinuations  <  PropertyContinuation>  propertyContinuations  =  getPropertyContinuations(property);	  PropertyContinuations    <    PropertyContinuation>    finishPropertyContinuations();    	non-compiled	[CE]  cannot  find  symbol	112	None	replace
1798	[BUG]  [BUGGY]  PropertyContinuations  <  PropertyContinuation>  propertyContinuations  =  getPropertyContinuations(propertyNode);  [CE]  cannot  find  symbol  [FE]                                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  PropertyContinuations  <  PropertyContinuation>  propertyContinuations  =  getPropertyContinuations(propertyNode);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	PropertyContinuations  <  PropertyContinuation>  propertyContinuations  =  getPropertyContinuations(propertyNode);	  PropertyContinuations    <    PropertyContinuation>    finishPropertyContinuations();    	non-compiled	[CE]  cannot  find  symbol	112	None	replace
1799	[BUG]  [BUGGY]  PropertyContinuations  <  PropertyContinuation>  propertyContinuations  =  getPropertyContinuations(propertyName);  [CE]  cannot  find  symbol  [FE]                                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  PropertyContinuations  <  PropertyContinuation>  propertyContinuations  =  getPropertyContinuations(propertyName);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	PropertyContinuations  <  PropertyContinuation>  propertyContinuations  =  getPropertyContinuations(propertyName);	  PropertyContinuations    <    PropertyContinuation>    finishPropertyContinuations();    	non-compiled	[CE]  cannot  find  symbol	112	None	replace
1800	[BUG]  [BUGGY]  PropertyContinuations  <  PropertyContinuation>  propertyContinuations  =  getProperties();  [CE]  cannot  find  symbol  [FE]                                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  PropertyContinuations  <  PropertyContinuation>  propertyContinuations  =  getProperties();  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	PropertyContinuations  <  PropertyContinuation>  propertyContinuations  =  getProperties();	  PropertyContinuations    <    PropertyContinuation>    finishPropertyContinuations();    	non-compiled	[CE]  cannot  find  symbol	112	None	replace
1801	[BUG]  [BUGGY]  if(forAnnotations  ==  null)  {  finishPropertyContinuations();  }  [CE]  cannot  find  symbol  forAnnotations  [FE]                            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(forAnnotations  ==  null)  {  finishPropertyContinuations();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(forAnnotations  ==  null)  {  finishPropertyContinuations();  }	  if(propertyContinuations    ==    null)    {    finishPropertyContinuations();    }    if(propertyContinuations    ==    null)    {    startPropertyContinuations();    }    	non-compiled	[CE]  cannot  find  symbol  forAnnotations	45	None	replace
1802	[BUG]  [BUGGY]  Preconditions.checkState(resolved);  Preconditions.checkState(resolved);  t.getPropertyType(propertyName).setEnclosing(forAnnotations);  [CE]  cannot  find  symbol  forAnnotations  [FE]                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Preconditions.checkState(resolved);  Preconditions.checkState(resolved);  t.getPropertyType(propertyName).setEnclosing(forAnnotations);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Preconditions.checkState(resolved);    Preconditions.checkState(resolved);  t.getPropertyType(propertyName).setEnclosing(forAnnotations);	  timeout    	non-compiled	[CE]  cannot  find  symbol  forAnnotations	220	None	add
1803	[BUG]  [BUGGY]  Preconditions.checkState(resolved);  Preconditions.checkState(resolved);  t.getPropertyType(propertyName).setString(propertyName);  [CE]  cannot  find  symbol  propertyName  [FE]                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Preconditions.checkState(resolved);  Preconditions.checkState(resolved);  t.getPropertyType(propertyName).setString(propertyName);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Preconditions.checkState(resolved);    Preconditions.checkState(resolved);  t.getPropertyType(propertyName).setString(propertyName);	  timeout    	non-compiled	[CE]  cannot  find  symbol  propertyName	220	None	add
1804	[BUG]  [BUGGY]  Preconditions.checkState(resolved);  Preconditions.checkState(resolved);  t.getPropertyType(propertyName).setIsVisible(true);  [CE]  cannot  find  symbol  propertyName  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Preconditions.checkState(resolved);  Preconditions.checkState(resolved);  t.getPropertyType(propertyName).setIsVisible(true);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Preconditions.checkState(resolved);    Preconditions.checkState(resolved);  t.getPropertyType(propertyName).setIsVisible(true);	  timeout    	non-compiled	[CE]  cannot  find  symbol  propertyName	220	None	add
1805	[BUG]  [BUGGY]  Preconditions.checkState(resolved);  Preconditions.checkState(resolved);  t.getPropertyType(propertyName).setIsVisible(false);  [CE]  cannot  find  symbol  propertyName  [FE]                            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Preconditions.checkState(resolved);  Preconditions.checkState(resolved);  t.getPropertyType(propertyName).setIsVisible(false);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Preconditions.checkState(resolved);    Preconditions.checkState(resolved);  t.getPropertyType(propertyName).setIsVisible(false);	  timeout    	non-compiled	[CE]  cannot  find  symbol  propertyName	220	None	add
1806	[BUG]  [BUGGY]  master.handleTypeCycle(t);  [CE]  cannot  find  symbol  master  [FE]                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  master.handleTypeCycle(t);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	master.handleTypeCycle(t);	  aughtExceptionHandler.handleTypeCycle(t);    	non-compiled	[CE]  cannot  find  symbol  master	195	None	replace
1807	[BUG]  [BUGGY]  enableExceptionHandler(t);  [CE]  cannot  find  symbol  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  enableExceptionHandler(t);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	enableExceptionHandler(t);	  aughtExceptionHandler.handleTypeCycle(t);    	non-compiled	[CE]  cannot  find  symbol	195	None	replace
1808	[BUG]  [BUGGY]  Parchet.checkState(resolved  ||!forAnnotations)  {  finishPropertyContinuations();  }  else  {  registry.isLastGeneration()  :  getReferencedType();  }  [CE]  ';'  expected  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Parchet.checkState(resolved  ||!forAnnotations)  {  finishPropertyContinuations();  }  else  {  registry.isLastGeneration()  :  getReferencedType();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Parchet.checkState(resolved  ||!forAnnotations)  {  finishPropertyContinuations();  }  else  {  registry.isLastGeneration()  :  getReferencedType();  }	  Parchet.checkState(resolved    ||    resolved)    {    finishPropertyContinuations();    }    else    {    registry.isLastGeneration()    :    getReferencedType();    }    	non-compiled	[CE]  ';'  expected	110	None	replace
1809	[BUG]  [BUGGY]  if(propertyContinuations!=  null)  {  finishPropertyGeneration();  }  else  {  propertyContinuations.add(propertyNode);  }  [CE]  cannot  find  symbol  [FE]                            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(propertyContinuations!=  null)  {  finishPropertyGeneration();  }  else  {  propertyContinuations.add(propertyNode);  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations!=  null)  {  finishPropertyGeneration();  }  else  {  propertyContinuations.add(propertyNode);  }	  if(propertyContinuations!=    null)    {    finishPropertyContinuations();    }    else    {    propertyContinuations.add(propertyNode);    }    	non-compiled	[CE]  cannot  find  symbol	71	None	replace
1810	[BUG]  [BUGGY]  if(propertyContinuations!=  null)  {  finishPropertyAnnotations();  }  else  {  propertyContinuations.add(propertyNode);  }  [CE]  cannot  find  symbol  [FE]                              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(propertyContinuations!=  null)  {  finishPropertyAnnotations();  }  else  {  propertyContinuations.add(propertyNode);  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations!=  null)  {  finishPropertyAnnotations();  }  else  {  propertyContinuations.add(propertyNode);  }	  if(propertyContinuations!=    null)    {    finishPropertyContinuations();    }    else    {    propertyContinuations.add(propertyNode);    }    	non-compiled	[CE]  cannot  find  symbol	71	None	replace
1811	[BUG]  [BUGGY]  if(registry!=  null)  {  validatePropertyContinuations();  }  else  {  registry.isLastGeneration()  :  this;  }  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(registry!=  null)  {  validatePropertyContinuations();  }  else  {  registry.isLastGeneration()  :  this;  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(registry!=  null)  {  validatePropertyContinuations();  }  else  {  registry.isLastGeneration()  :  this;  }	  validatePropertyContinuations();    }    else    {    registry.isLastGeneration()    :    this;    }    	non-compiled	[CE]  ';'  expected	106	None	replace
1812	[BUG]  [BUGGY]  if(registry!=  null)  {  validatePropertyContinuations();  }  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(registry!=  null)  {  validatePropertyContinuations();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(registry!=  null)  {  validatePropertyContinuations();  }	  validatePropertyContinuations();    }    else    {    registry.isLastGeneration()    :    this;    }    	non-compiled	[CE]  cannot  find  symbol	106	None	replace
1813	[BUG]  [BUGGY]  aughtExceptionHandler  &&  resolved)  {  finishPropertyAnnotations();  }  else  {  registry.isLastGeneration()  :  this;  }  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  aughtExceptionHandler  &&  resolved)  {  finishPropertyAnnotations();  }  else  {  registry.isLastGeneration()  :  this;  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	aughtExceptionHandler  &&  resolved)  {  finishPropertyAnnotations();  }  else  {  registry.isLastGeneration()  :  this;  }	  if(resolved)    {    finishPropertyAnnotations();    }    else    {    registry.isLastGeneration()    :    this;    }    	non-compiled	[CE]  not  a  statement	174	None	replace
1814	[BUG]  [BUGGY]  Annotations  inferred  =  finishPropertyAnnotations();  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Annotations  inferred  =  finishPropertyAnnotations();  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Annotations  inferred  =  finishPropertyAnnotations();	  if(resolved)    {    finishPropertyAnnotations();    }    else    {    registry.isLastGeneration()    :    this;    }    	non-compiled	[CE]  cannot  find  symbol	174	None	replace
1815	[BUG]  [BUGGY]  aughtExceptionHandler.handleTypeAnnotations(t,  enclosing);  [CE]  cannot  find  symbol  aughtExceptionHandler  [FE]                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  aughtExceptionHandler.handleTypeAnnotations(t,  enclosing);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	aughtExceptionHandler.handleTypeAnnotations(t,  enclosing);	  if(resolved)    {    finishPropertyAnnotations();    }    else    {    registry.isLastGeneration()    :    this;    }    	non-compiled	[CE]  cannot  find  symbol  aughtExceptionHandler	174	None	replace
1816	[BUG]  [BUGGY]  aughtExceptionHandler  &&  resolved)  {  finishPropertyAnnotations();  }  else  {  registry.isLastGeneration()  :  this;  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  aughtExceptionHandler  &&  resolved)  {  finishPropertyAnnotations();  }  else  {  registry.isLastGeneration()  :  this;  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	aughtExceptionHandler  &&  resolved)  {  finishPropertyAnnotations();  }  else  {  registry.isLastGeneration()  :  this;	  if(resolved)    {    finishPropertyAnnotations();    }    else    {    registry.isLastGeneration()    :    this;    }    	non-compiled	[CE]  not  a  statement	174	None	replace
1817	[BUG]  [BUGGY]  Predicates.checkArgument(detectImplicitInternalCycle());  handleTypeCycle(t);  [CE]  cannot  find  symbol  [FE]                            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Predicates.checkArgument(detectImplicitInternalCycle());  handleTypeCycle(t);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Predicates.checkArgument(detectImplicitInternalCycle());  handleTypeCycle(t);	  Predicates.checkArgument(detectImplicitPrototypeCycle());    handleTypeCycle(t);    	non-compiled	[CE]  cannot  find  symbol	202	None	replace
1818	[BUG]  [BUGGY]  Predicates.checkArgument(detectPrototypeCycle());  handleTypeCycle(t);  [CE]  cannot  find  symbol  [FE]                              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Predicates.checkArgument(detectPrototypeCycle());  handleTypeCycle(t);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Predicates.checkArgument(detectPrototypeCycle());  handleTypeCycle(t);	  Predicates.checkArgument(detectImplicitPrototypeCycle());    handleTypeCycle(t);    	non-compiled	[CE]  cannot  find  symbol	202	None	replace
1819	[BUG]  [BUGGY]  Predicates.checkArgument(detectImplicitReferenceCycle());  handleTypeCycle(t);  [CE]  cannot  find  symbol  [FE]                                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Predicates.checkArgument(detectImplicitReferenceCycle());  handleTypeCycle(t);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Predicates.checkArgument(detectImplicitReferenceCycle());  handleTypeCycle(t);	  Predicates.checkArgument(detectImplicitPrototypeCycle());    handleTypeCycle(t);    	non-compiled	[CE]  cannot  find  symbol	202	None	replace
1820	[BUG]  [BUGGY]  inferred  =  resolveViaRegistry(t,  enclosing,  registry);  [CE]  cannot  find  symbol  inferred  [FE]                                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  inferred  =  resolveViaRegistry(t,  enclosing,  registry);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	inferred  =  resolveViaRegistry(t,  enclosing,  registry);	          inferred    =    resolveViaRegistry(t,    enclosing);    	non-compiled	[CE]  cannot  find  symbol  inferred	23	None	replace
1821	[BUG]  [BUGGY]  timeout  [FE]                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(enclosing!=  null)  {  finishPropertyContinuations();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	add	if(enclosing!=  null)  {  finishPropertyContinuations();  }	  if(propertyContinuations!=    null)    {    finishPropertyContinuations();    }    if(propertyContinuations    >=    null)    {    finishPropertyContinuations();    }    	compilable	timeout	80	1	replace
1822	[BUG]  [BUGGY]  if(enclosing!=  null)  {  finishPropertyContinuations();  }  timeout  [FE]                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(enclosing!=  null)  {  finishPropertyContinuations();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(enclosing!=  null)  {  finishPropertyContinuations();  }	  if(propertyContinuations!=    null)    {    finishPropertyContinuations();    }    if(propertyContinuations    >=    null)    {    finishPropertyContinuations();    }    	compilable	timeout	80	1	replace
1823	[BUG]  [BUGGY]  if(resolved)    {    finishPropertyContinuations();    }    if(resolved)  {  finishPropertyContinuations();  }  if(resolved)  {  finishPropertyContinuations();  }  if(resolved)  {  finishPropertyContinuations();  }  if(resolved)  {  finishPropertyContinuations();  }  if(resolved)  {  finishPropertyContinu  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(resolved)    {    finishPropertyContinuations();    }    if(resolved)  {  finishPropertyContinuations();  }  if(resolved)  {  finishPropertyContinuations();  }  if(resolved)  {  finishPropertyContinuations();  }  if(resolved)  {  finishPropertyContinuations();  }  if(resolved)  {  finishPropertyContinu  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(resolved)        {        finishPropertyContinuations();        }        if(resolved)    {    finishPropertyContinuations();    }    if(resolved)  {  finishPropertyContinuations();  }  if(resolved)  {  finishPropertyContinuations();  }  if(resolved)  {  finishPropertyContinuations();  }  if(resolved)  {  finishPropertyContinu	  timeout    	non-compiled	[CE]  ';'  expected	34	None	add
1824	[BUG]  [BUGGY]  if(resolved)    {    finishPropertyContinuations();    }    if(resolved)  {  finishPropertyContinuations();  }  if(resolved)  {  finishPropertyContinuations();  }  if(resolved)  {  finishPropertyContinuations();  }  if(resolved)  {  finishPropertyContinuations();  }  if(resolved)  {  finishProperty  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(resolved)    {    finishPropertyContinuations();    }    if(resolved)  {  finishPropertyContinuations();  }  if(resolved)  {  finishPropertyContinuations();  }  if(resolved)  {  finishPropertyContinuations();  }  if(resolved)  {  finishPropertyContinuations();  }  if(resolved)  {  finishProperty  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(resolved)        {        finishPropertyContinuations();        }        if(resolved)    {    finishPropertyContinuations();    }    if(resolved)  {  finishPropertyContinuations();  }  if(resolved)  {  finishPropertyContinuations();  }  if(resolved)  {  finishPropertyContinuations();  }  if(resolved)  {  finishProperty	  timeout    	non-compiled	[CE]  ';'  expected	34	None	add
1825	[BUG]  [BUGGY]  if(resolved)    {    finishPropertyContinuations();    }    if(resolved)  {  finishPropertyContinuations();  }  if(resolved)  {  finishPropertyContinuations();  }  if(resolved)  {  finishPropertyContinuations();  }  if(resolved)  {  finishPropertyContinuations();  }  if(resolved)  {  finishPropert  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(resolved)    {    finishPropertyContinuations();    }    if(resolved)  {  finishPropertyContinuations();  }  if(resolved)  {  finishPropertyContinuations();  }  if(resolved)  {  finishPropertyContinuations();  }  if(resolved)  {  finishPropertyContinuations();  }  if(resolved)  {  finishPropert  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(resolved)        {        finishPropertyContinuations();        }        if(resolved)    {    finishPropertyContinuations();    }    if(resolved)  {  finishPropertyContinuations();  }  if(resolved)  {  finishPropertyContinuations();  }  if(resolved)  {  finishPropertyContinuations();  }  if(resolved)  {  finishPropert	  timeout    	non-compiled	[CE]  ';'  expected	34	None	add
1826	[BUG]  [BUGGY]  Predicate  validator  =  resolveViaRegistry(t,  propertyNode);  [CE]  cannot  find  symbol  propertyNode  [FE]                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Predicate  validator  =  resolveViaRegistry(t,  propertyNode);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Predicate  validator  =  resolveViaRegistry(t,  propertyNode);	  Predicate    validator    =    resolveViaRegistry(t,    enclosing);    	non-compiled	[CE]  cannot  find  symbol  propertyNode	87	None	replace
1827	[BUG]  [BUGGY]  ensurePropertyContinuations()  &&  registry.isStartGeneration()?  getReferencedType()  :  this;  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  ensurePropertyContinuations()  &&  registry.isStartGeneration()?  getReferencedType()  :  this;  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	ensurePropertyContinuations()  &&  registry.isStartGeneration()?  getReferencedType()  :  this;	  ensurePropertyContinuations()    &&    registry.isLastGeneration()?    getReferencedType()    :    this;    	non-compiled	[CE]  not  a  statement	15	None	replace
1828	[BUG]  [BUGGY]  ensurePropertyContinuations()  &&  registry.isLastGeneration()?  getInstanceType()  :  this;  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  ensurePropertyContinuations()  &&  registry.isLastGeneration()?  getInstanceType()  :  this;  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	ensurePropertyContinuations()  &&  registry.isLastGeneration()?  getInstanceType()  :  this;	  ensurePropertyContinuations()    &&    registry.isLastGeneration()?    getReferencedType()    :    this;    	non-compiled	[CE]  not  a  statement	15	None	replace
1829	[BUG]  [BUGGY]  ensurePropertyContinuations()  &&  registry.isLastGeneration()?  getSimpleType()  :  this;  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  ensurePropertyContinuations()  &&  registry.isLastGeneration()?  getSimpleType()  :  this;  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	ensurePropertyContinuations()  &&  registry.isLastGeneration()?  getSimpleType()  :  this;	  ensurePropertyContinuations()    &&    registry.isLastGeneration()?    getReferencedType()    :    this;    	non-compiled	[CE]  not  a  statement	15	None	replace
1830	[BUG]  [BUGGY]  if(propertyContinuations!=  null)  {  startPropertyTypeContinuations();  }  else  {  propertyContinuations.add(propertyName);  }  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(propertyContinuations!=  null)  {  startPropertyTypeContinuations();  }  else  {  propertyContinuations.add(propertyName);  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations!=  null)  {  startPropertyTypeContinuations();  }  else  {  propertyContinuations.add(propertyName);  }	  if(propertyContinuations!=    null)    {    startPropertyContinuations();    }    else    {    propertyContinuations.add(propertyName);    }    	non-compiled	[CE]  cannot  find  symbol	68	None	replace
1831	[BUG]  [BUGGY]  if(propertyContinuations!=  null)  {  startPropertyActualValues();  }  else  {  propertyContinuations.add(propertyName);  }  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(propertyContinuations!=  null)  {  startPropertyActualValues();  }  else  {  propertyContinuations.add(propertyName);  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations!=  null)  {  startPropertyActualValues();  }  else  {  propertyContinuations.add(propertyName);  }	  if(propertyContinuations!=    null)    {    startPropertyContinuations();    }    else    {    propertyContinuations.add(propertyName);    }    	non-compiled	[CE]  cannot  find  symbol	68	None	replace
1832	[BUG]  [BUGGY]  if(propertyContinuations!=  null)  {  startPropertyGenerator();  }  else  {  propertyContinuations.add(propertyName);  }  [CE]  cannot  find  symbol  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(propertyContinuations!=  null)  {  startPropertyGenerator();  }  else  {  propertyContinuations.add(propertyName);  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations!=  null)  {  startPropertyGenerator();  }  else  {  propertyContinuations.add(propertyName);  }	  if(propertyContinuations!=    null)    {    startPropertyContinuations();    }    else    {    propertyContinuations.add(propertyName);    }    	non-compiled	[CE]  cannot  find  symbol	68	None	replace
1833	[BUG]  [BUGGY]  if(propertyContinuations!=  null)  {  propertyContinuations();  }  else  {  registry.isLastGeneration()?  getReferencedType()  :  this;  }  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(propertyContinuations!=  null)  {  propertyContinuations();  }  else  {  registry.isLastGeneration()?  getReferencedType()  :  this;  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations!=  null)  {  propertyContinuations();  }  else  {  registry.isLastGeneration()?  getReferencedType()  :  this;  }	  propertyContinuations();    	non-compiled	[CE]  not  a  statement	66	None	replace
1834	[BUG]  [BUGGY]  if(propertyContinuations!=  null)  {  propertyContinuations();  }  else  {  forAnnotations  =  Lists.newArrayList();  }  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(propertyContinuations!=  null)  {  propertyContinuations();  }  else  {  forAnnotations  =  Lists.newArrayList();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations!=  null)  {  propertyContinuations();  }  else  {  forAnnotations  =  Lists.newArrayList();  }	  propertyContinuations();    	non-compiled	[CE]  cannot  find  symbol	66	None	replace
1835	[BUG]  [BUGGY]  if(propertyContinuations!=  null)  {  propertyContinuations();  }  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(propertyContinuations!=  null)  {  propertyContinuations();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations!=  null)  {  propertyContinuations();  }	  propertyContinuations();    	non-compiled	[CE]  cannot  find  symbol	66	None	replace
1836	[BUG]  [BUGGY]  if(propertyContinuations!=  null)  {  propertyContinuations();  }  else  {  forAnnotations  =  Collections.emptyList();  }  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(propertyContinuations!=  null)  {  propertyContinuations();  }  else  {  forAnnotations  =  Collections.emptyList();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations!=  null)  {  propertyContinuations();  }  else  {  forAnnotations  =  Collections.emptyList();  }	  propertyContinuations();    	non-compiled	[CE]  cannot  find  symbol	66	None	replace
1837	[BUG]  [BUGGY]  if(propertyContinuations!=  null)  {  propertyContinuations();  }  else  {  forAnnotations  =  Collections.EMPTY_LIST;  }  [CE]  cannot  find  symbol  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(propertyContinuations!=  null)  {  propertyContinuations();  }  else  {  forAnnotations  =  Collections.EMPTY_LIST;  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations!=  null)  {  propertyContinuations();  }  else  {  forAnnotations  =  Collections.EMPTY_LIST;  }	  propertyContinuations();    	non-compiled	[CE]  cannot  find  symbol	66	None	replace
1838	[BUG]  [BUGGY]  Predicates.checkState(detectPrototypeCycle());  handleTypeCycle(t);  [CE]  cannot  find  symbol  [FE]                              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Predicates.checkState(detectPrototypeCycle());  handleTypeCycle(t);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Predicates.checkState(detectPrototypeCycle());  handleTypeCycle(t);	  Predicates.checkState(detectImplicitPrototypeCycle());    handleTypeCycle(t);    	non-compiled	[CE]  cannot  find  symbol	203	None	replace
1839	[BUG]  [BUGGY]  Predicates.checkState(detectImplicitInternalCycle());  handleTypeCycle(t);  [CE]  cannot  find  symbol  [FE]                                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Predicates.checkState(detectImplicitInternalCycle());  handleTypeCycle(t);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Predicates.checkState(detectImplicitInternalCycle());  handleTypeCycle(t);	  Predicates.checkState(detectImplicitPrototypeCycle());    handleTypeCycle(t);    	non-compiled	[CE]  cannot  find  symbol	203	None	replace
1840	[BUG]  [BUGGY]  if(forAnnotations)  {  finishPropertyContinuations();  }  [CE]  cannot  find  symbol  forAnnotations  [FE]                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(forAnnotations)  {  finishPropertyContinuations();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(forAnnotations)  {  finishPropertyContinuations();  }	  if(propertyContinuations    ==    null)    {    finishPropertyContinuations();    }    if(propertyContinuations    {    null)    {    finishPropertyContinuations();    }    	non-compiled	[CE]  cannot  find  symbol  forAnnotations	163	None	replace
1841	[BUG]  [BUGGY]  if(propertyContinuations  ==  null)  {  finishPropertyAnnotations();  }  [CE]  cannot  find  symbol  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(propertyContinuations  ==  null)  {  finishPropertyAnnotations();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations  ==  null)  {  finishPropertyAnnotations();  }	  if(propertyContinuations    ==    null)    {    finishPropertyContinuations();    }    if(propertyContinuations    {    null)    {    finishPropertyContinuations();    }    	non-compiled	[CE]  cannot  find  symbol	163	None	replace
1842	[BUG]  [BUGGY]  if(propertyContinuations  ==  null)  {  finishPropertyGeneration();  }  [CE]  cannot  find  symbol  [FE]                            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(propertyContinuations  ==  null)  {  finishPropertyGeneration();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations  ==  null)  {  finishPropertyGeneration();  }	  if(propertyContinuations    ==    null)    {    finishPropertyContinuations();    }    if(propertyContinuations    {    null)    {    finishPropertyContinuations();    }    	non-compiled	[CE]  cannot  find  symbol	163	None	replace
1843	[BUG]  [BUGGY]  timeout  [FE]                              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(enclosing  ==  null)  {  finishPropertyContinuations();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	add	if(enclosing  ==  null)  {  finishPropertyContinuations();  }	  if(propertyContinuations    ==    null)    {    finishPropertyContinuations();    }    if(propertyContinuations    {    null)    {    finishPropertyContinuations();    }    	compilable	timeout	163	1	replace
1844	[BUG]  [BUGGY]  if(enclosing  ==  null)  {  finishPropertyContinuations();  }  timeout  [FE]                              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(enclosing  ==  null)  {  finishPropertyContinuations();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(enclosing  ==  null)  {  finishPropertyContinuations();  }	  if(propertyContinuations    ==    null)    {    finishPropertyContinuations();    }    if(propertyContinuations    {    null)    {    finishPropertyContinuations();    }    	compilable	timeout	163	1	replace
1845	[BUG]  [BUGGY]  Parchet.checkArgument(validator!=  null);  [CE]  cannot  find  symbol  Parchet  [FE]                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Parchet.checkArgument(validator!=  null);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Parchet.checkArgument(validator!=  null);	  Parchet.checkNotNull(validator);    	non-compiled	[CE]  cannot  find  symbol  Parchet	32	None	replace
1846	[BUG]  [BUGGY]  if(validator!=    null)    {    finishPropertyContinuations();    }    if(validator!=  null)  {  finishPropertyContinuations();  }  if(validator!=  null)  {  finishPropertyContinuations();  }  if(validator!=  null)  {  finishPropertyContinuations();  }  if(validator!=  null)  {  finishPropertyContinuations();  }  if(validator!=  nu  [CE]  ')'  expected  [FE]            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(validator!=    null)    {    finishPropertyContinuations();    }    if(validator!=  null)  {  finishPropertyContinuations();  }  if(validator!=  null)  {  finishPropertyContinuations();  }  if(validator!=  null)  {  finishPropertyContinuations();  }  if(validator!=  null)  {  finishPropertyContinuations();  }  if(validator!=  nu  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(validator!=        null)        {        finishPropertyContinuations();        }        if(validator!=    null)    {    finishPropertyContinuations();    }    if(validator!=  null)  {  finishPropertyContinuations();  }  if(validator!=  null)  {  finishPropertyContinuations();  }  if(validator!=  null)  {  finishPropertyContinuations();  }  if(validator!=  nu	  timeout    	non-compiled	[CE]  ')'  expected	50	None	add
1847	[BUG]  [BUGGY]  if(validator!=    null)    {    finishPropertyContinuations();    }    if(validator!=  null)  {  finishPropertyContinuations();  }  if(validator!=  null)  {  finishPropertyContinuations();  }  if(validator!=  null)  {  finishPropertyContinuations();  }  if(validator  >=  null)  {  finishPropertyContinuations();  }  [CE]  bad  operand  types  for  binary  operator  '>='  [FE]              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(validator!=    null)    {    finishPropertyContinuations();    }    if(validator!=  null)  {  finishPropertyContinuations();  }  if(validator!=  null)  {  finishPropertyContinuations();  }  if(validator!=  null)  {  finishPropertyContinuations();  }  if(validator  >=  null)  {  finishPropertyContinuations();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(validator!=        null)        {        finishPropertyContinuations();        }        if(validator!=    null)    {    finishPropertyContinuations();    }    if(validator!=  null)  {  finishPropertyContinuations();  }  if(validator!=  null)  {  finishPropertyContinuations();  }  if(validator  >=  null)  {  finishPropertyContinuations();  }	  timeout    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>='	50	None	add
1848	[BUG]  [BUGGY]  if(propertyContinuations  ==  null)  {  finishPropertyContinuations();  }  else  {  Registry.isLastGeneration()?  getReferencedType()  :  this;  }  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(propertyContinuations  ==  null)  {  finishPropertyContinuations();  }  else  {  Registry.isLastGeneration()?  getReferencedType()  :  this;  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations  ==  null)  {  finishPropertyContinuations();  }  else  {  Registry.isLastGeneration()?  getReferencedType()  :  this;  }	  if(propertyContinuations!=    null)    {    finishPropertyContinuations();    }    else    {    Registry.isLastGeneration()?    getReferencedType()    :    this;    }    	non-compiled	[CE]  not  a  statement	217	None	replace
1849	[BUG]  [BUGGY]  if(propertyContinuations!=  null)  {  finishPropertyGenerations();  }  else  {  Registry.isLastGeneration()?  getReferencedType()  :  this;  }  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(propertyContinuations!=  null)  {  finishPropertyGenerations();  }  else  {  Registry.isLastGeneration()?  getReferencedType()  :  this;  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations!=  null)  {  finishPropertyGenerations();  }  else  {  Registry.isLastGeneration()?  getReferencedType()  :  this;  }	  if(propertyContinuations!=    null)    {    finishPropertyContinuations();    }    else    {    Registry.isLastGeneration()?    getReferencedType()    :    this;    }    	non-compiled	[CE]  not  a  statement	217	None	replace
1850	[BUG]  [BUGGY]  if(propertyContinuations!=  null)  {  finishPropertyGeneration();  }  else  {  Registry.isLastGeneration()?  getReferencedType()  :  this;  }  [CE]  not  a  statement  [FE]                            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(propertyContinuations!=  null)  {  finishPropertyGeneration();  }  else  {  Registry.isLastGeneration()?  getReferencedType()  :  this;  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations!=  null)  {  finishPropertyGeneration();  }  else  {  Registry.isLastGeneration()?  getReferencedType()  :  this;  }	  if(propertyContinuations!=    null)    {    finishPropertyContinuations();    }    else    {    Registry.isLastGeneration()?    getReferencedType()    :    this;    }    	non-compiled	[CE]  not  a  statement	217	None	replace
1851	[BUG]  [BUGGY]  if(validator!=  null  &&  propertyContinuations.isConstructor())  {  finishPropertyContinuations();  }  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(validator!=  null  &&  propertyContinuations.isConstructor())  {  finishPropertyContinuations();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(validator!=  null  &&  propertyContinuations.isConstructor())  {  finishPropertyContinuations();  }	  if(validator!=    null    &&    validator.isConstructor())    {    finishPropertyContinuations();    }    	non-compiled	[CE]  cannot  find  symbol	207	None	replace
1852	[BUG]  [BUGGY]  if(validator!=  null  &&  validator.hasProperty(propertyName))  {  finishPropertyContinuations();  }  [CE]  cannot  find  symbol  propertyName  [FE]                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(validator!=  null  &&  validator.hasProperty(propertyName))  {  finishPropertyContinuations();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(validator!=  null  &&  validator.hasProperty(propertyName))  {  finishPropertyContinuations();  }	  if(validator!=    null    &&    validator.isConstructor())    {    finishPropertyContinuations();    }    	non-compiled	[CE]  cannot  find  symbol  propertyName	207	None	replace
1853	[BUG]  [BUGGY]  if(validator!=  null  &&  propertyNode.isConstructor())  {  finishPropertyContinuations();  }  [CE]  cannot  find  symbol  propertyNode  [FE]                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(validator!=  null  &&  propertyNode.isConstructor())  {  finishPropertyContinuations();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(validator!=  null  &&  propertyNode.isConstructor())  {  finishPropertyContinuations();  }	  if(validator!=    null    &&    validator.isConstructor())    {    finishPropertyContinuations();    }    	non-compiled	[CE]  cannot  find  symbol  propertyNode	207	None	replace
1854	[BUG]  [BUGGY]  if(validator!=  null  &&  registry.isConstructor())  {  finishPropertyContinuations();  }  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(validator!=  null  &&  registry.isConstructor())  {  finishPropertyContinuations();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(validator!=  null  &&  registry.isConstructor())  {  finishPropertyContinuations();  }	  if(validator!=    null    &&    validator.isConstructor())    {    finishPropertyContinuations();    }    	non-compiled	[CE]  cannot  find  symbol	207	None	replace
1855	[BUG]  [BUGGY]  if(registry!=  null  &&  validator.isConstructor())  {  startPropertyContinuations();  }  else  {  registry.isLastGeneration()?  getReferencedType()  :  this;  }  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(registry!=  null  &&  validator.isConstructor())  {  startPropertyContinuations();  }  else  {  registry.isLastGeneration()?  getReferencedType()  :  this;  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(registry!=  null  &&  validator.isConstructor())  {  startPropertyContinuations();  }  else  {  registry.isLastGeneration()?  getReferencedType()  :  this;  }	  if(validator!=    null    &&    registry.isLastGeneration())    {    startPropertyContinuations();    }    else    {    registry.isLastGeneration()?    getReferencedType()    :    this;    }    	non-compiled	[CE]  not  a  statement	231	None	replace
1856	[BUG]  [BUGGY]  propertyContinuations  =  getPropertyContinuationsForType(propertyNode);  [CE]  cannot  find  symbol  propertyNode  [FE]            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  propertyContinuations  =  getPropertyContinuationsForType(propertyNode);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	propertyContinuations  =  getPropertyContinuationsForType(propertyNode);	  propertyContinuations    =    getPropertyContinuations();    	non-compiled	[CE]  cannot  find  symbol  propertyNode	98	None	replace
1857	[BUG]  [BUGGY]  propertyContinuations  =  getPropertyContinuations(propertyName,  enclosing);  [CE]  cannot  find  symbol  propertyName  [FE]              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  propertyContinuations  =  getPropertyContinuations(propertyName,  enclosing);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	propertyContinuations  =  getPropertyContinuations(propertyName,  enclosing);	  propertyContinuations    =    getPropertyContinuations();    	non-compiled	[CE]  cannot  find  symbol  propertyName	98	None	replace
1858	[BUG]  [BUGGY]  Preconditions.checkState(resolved  ==  getPropertyContinuations());  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Preconditions.checkState(resolved  ==  getPropertyContinuations());  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Preconditions.checkState(resolved  ==  getPropertyContinuations());	  Preconditions.checkState(resolved)    {    finishPropertyContinuations();    }    	non-compiled	[CE]  cannot  find  symbol	127	None	replace
1859	[BUG]  [BUGGY]  Preconditions.checkState(resolved  ==  propertyContinuations.size());  [CE]  incomparable  types:  boolean  and  int  [FE]                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Preconditions.checkState(resolved  ==  propertyContinuations.size());  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Preconditions.checkState(resolved  ==  propertyContinuations.size());	  Preconditions.checkState(resolved)    {    finishPropertyContinuations();    }    	non-compiled	[CE]  incomparable  types:  boolean  and  int	127	None	replace
1860	[BUG]  [BUGGY]  if(validator!=  null  &&  validatePropertyInferred())  {  finishPropertyInferred();  }  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(validator!=  null  &&  validatePropertyInferred())  {  finishPropertyInferred();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(validator!=  null  &&  validatePropertyInferred())  {  finishPropertyInferred();  }	  if(validator!=    null)    {    finishPropertyInferred();    }    	non-compiled	[CE]  cannot  find  symbol	159	None	replace
1861	[BUG]  [BUGGY]  if(validator!=  null  &&  validator.isPropertyInferred())  {  finishPropertyInferred();  }  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(validator!=  null  &&  validator.isPropertyInferred())  {  finishPropertyInferred();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(validator!=  null  &&  validator.isPropertyInferred())  {  finishPropertyInferred();  }	  if(validator!=    null)    {    finishPropertyInferred();    }    	non-compiled	[CE]  cannot  find  symbol	159	None	replace
1862	[BUG]  [BUGGY]  if(validator!=  null  &&  validator.canInfer())  {  finishPropertyInferred();  }  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(validator!=  null  &&  validator.canInfer())  {  finishPropertyInferred();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(validator!=  null  &&  validator.canInfer())  {  finishPropertyInferred();  }	  if(validator!=    null)    {    finishPropertyInferred();    }    	non-compiled	[CE]  cannot  find  symbol	159	None	replace
1863	[BUG]  [BUGGY]  if(validator!=  null  &&  registry.isLastGeneration())  {  finishPropertyGeneration();  }  else  {  registry.isLastGeneration()  :  this;  }  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(validator!=  null  &&  registry.isLastGeneration())  {  finishPropertyGeneration();  }  else  {  registry.isLastGeneration()  :  this;  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(validator!=  null  &&  registry.isLastGeneration())  {  finishPropertyGeneration();  }  else  {  registry.isLastGeneration()  :  this;  }	  if(validator!=    null)    {    finishPropertyGeneration();    }    else    {    registry.isLastGeneration()    :    this;    }    	non-compiled	[CE]  ';'  expected	240	None	replace
1864	[BUG]  [BUGGY]  if(validator!=  null  &&  registry.isLastGeneration())  {  startPropertyGeneration();  }  else  {  registry.isLastGeneration()  :  this;  }  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(validator!=  null  &&  registry.isLastGeneration())  {  startPropertyGeneration();  }  else  {  registry.isLastGeneration()  :  this;  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(validator!=  null  &&  registry.isLastGeneration())  {  startPropertyGeneration();  }  else  {  registry.isLastGeneration()  :  this;  }	  if(validator!=    null)    {    finishPropertyGeneration();    }    else    {    registry.isLastGeneration()    :    this;    }    	non-compiled	[CE]  ';'  expected	240	None	replace
1865	[BUG]  [BUGGY]  if(validator!=  null  &&  validator.isConstructor())  {  finishPropertyGeneration();  }  else  {  registry.isLastGeneration()  :  this;  }  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(validator!=  null  &&  validator.isConstructor())  {  finishPropertyGeneration();  }  else  {  registry.isLastGeneration()  :  this;  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(validator!=  null  &&  validator.isConstructor())  {  finishPropertyGeneration();  }  else  {  registry.isLastGeneration()  :  this;  }	  if(validator!=    null)    {    finishPropertyGeneration();    }    else    {    registry.isLastGeneration()    :    this;    }    	non-compiled	[CE]  ';'  expected	240	None	replace
1866	[BUG]  [BUGGY]  if(validator!=  null  &&  registry.isLastGeneration())  {  finishPropertyGeneration();  }  [CE]  cannot  find  symbol  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(validator!=  null  &&  registry.isLastGeneration())  {  finishPropertyGeneration();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(validator!=  null  &&  registry.isLastGeneration())  {  finishPropertyGeneration();  }	  if(validator!=    null)    {    finishPropertyGeneration();    }    else    {    registry.isLastGeneration()    :    this;    }    	non-compiled	[CE]  cannot  find  symbol	240	None	replace
1867	[BUG]  [BUGGY]  Annotations  inferred  =  resolveViaAnnotations(t,  enclosing);  [CE]  cannot  find  symbol  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Annotations  inferred  =  resolveViaAnnotations(t,  enclosing);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Annotations  inferred  =  resolveViaAnnotations(t,  enclosing);	  Annotations    inferred    =    resolveViaRegistry(t,    enclosing);    	non-compiled	[CE]  cannot  find  symbol	177	None	replace
1868	[BUG]  [BUGGY]  if(propertyAnnotations!=  null)  {  finishPropertyContinuations();  }  else  {  forAnnotations  =  Collections.emptyList();  }  [CE]  cannot  find  symbol  propertyAnnotations  [FE]                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(propertyAnnotations!=  null)  {  finishPropertyContinuations();  }  else  {  forAnnotations  =  Collections.emptyList();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyAnnotations!=  null)  {  finishPropertyContinuations();  }  else  {  forAnnotations  =  Collections.emptyList();  }	  if(forAnnotations!=    null)    {    finishPropertyContinuations();    }    else    {    forAnnotations    =    Collections.emptyList();    }    	non-compiled	[CE]  cannot  find  symbol  propertyAnnotations	185	None	replace
1869	[BUG]  [BUGGY]  if(forAnnotations!=  null)  {  finishPropertyContinuations();  }  else  {  forAnnotations  =  Collections.EMPTYList();  }  [CE]  cannot  find  symbol  forAnnotations  [FE]                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(forAnnotations!=  null)  {  finishPropertyContinuations();  }  else  {  forAnnotations  =  Collections.EMPTYList();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(forAnnotations!=  null)  {  finishPropertyContinuations();  }  else  {  forAnnotations  =  Collections.EMPTYList();  }	  if(forAnnotations!=    null)    {    finishPropertyContinuations();    }    else    {    forAnnotations    =    Collections.emptyList();    }    	non-compiled	[CE]  cannot  find  symbol  forAnnotations	185	None	replace
1870	[BUG]  [BUGGY]  Predicate  validator  =  registry.getValueForType(t.getValue());  [CE]  cannot  find  symbol  [FE]                                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Predicate  validator  =  registry.getValueForType(t.getValue());  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Predicate  validator  =  registry.getValueForType(t.getValue());	  Predicate    validator    =    t.getValue();    	non-compiled	[CE]  cannot  find  symbol	205	None	replace
1871	[BUG]  [BUGGY]  propertyContinuations!=  null  &&  registry.isLocal()?  getReferencedType()  :  this;  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  propertyContinuations!=  null  &&  registry.isLocal()?  getReferencedType()  :  this;  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	propertyContinuations!=  null  &&  registry.isLocal()?  getReferencedType()  :  this;	  propertyContinuations!=    null    &&    registry.isLastGeneration()?    getReferencedType()    :    this;    	non-compiled	[CE]  not  a  statement	191	None	replace
1872	[BUG]  [BUGGY]  propertyContinuations!=  null  &&  registry.isLastGeneration()?  getReferencedType()  :  new  PropertyContinuation(registry);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  propertyContinuations!=  null  &&  registry.isLastGeneration()?  getReferencedType()  :  new  PropertyContinuation(registry);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	propertyContinuations!=  null  &&  registry.isLastGeneration()?  getReferencedType()  :  new  PropertyContinuation(registry);	  propertyContinuations!=    null    &&    registry.isLastGeneration()?    getReferencedType()    :    this;    	non-compiled	[CE]  not  a  statement	191	None	replace
1873	[BUG]  [BUGGY]  if(validator  ==  null)  {  finishPropertyContinuations();  }  if(validator  ==  null)  {  finishPropropertyContinuations();  }  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(validator  ==  null)  {  finishPropertyContinuations();  }  if(validator  ==  null)  {  finishPropropertyContinuations();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(validator    ==    null)    {    finishPropertyContinuations();    }    if(validator  ==  null)  {  finishPropropertyContinuations();  }	  timeout    	non-compiled	[CE]  cannot  find  symbol	156	None	add
1874	[BUG]  [BUGGY]  if(validator  ==  null)  {  finishPropertyContinuations();  }  if(validator  {  null)  {  finishPropertyContinuations();  }  [CE]  ')'  expected  [FE]              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(validator  ==  null)  {  finishPropertyContinuations();  }  if(validator  {  null)  {  finishPropertyContinuations();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(validator    ==    null)    {    finishPropertyContinuations();    }    if(validator  {  null)  {  finishPropertyContinuations();  }	  timeout    	non-compiled	[CE]  ')'  expected	156	None	add
1875	[BUG]  [BUGGY]  if(validator!=  null  &&  validator.isPropertyEnclosing())  {  finishPropertyEnclosing();  }  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(validator!=  null  &&  validator.isPropertyEnclosing())  {  finishPropertyEnclosing();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(validator!=  null  &&  validator.isPropertyEnclosing())  {  finishPropertyEnclosing();  }	  if(validator!=    null)    {    finishPropertyEnclosing();    }    	non-compiled	[CE]  cannot  find  symbol	158	None	replace
1876	[BUG]  [BUGGY]  if(validator!=  null  &&  validator.isConstructor())  {  finishPropertyEnclosing();  }  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(validator!=  null  &&  validator.isConstructor())  {  finishPropertyEnclosing();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(validator!=  null  &&  validator.isConstructor())  {  finishPropertyEnclosing();  }	  if(validator!=    null)    {    finishPropertyEnclosing();    }    	non-compiled	[CE]  cannot  find  symbol	158	None	replace
1877	[BUG]  [BUGGY]  if(validator!=  null  &&  validatePropertyEnclosing!=  null)  {  finishPropertyEnclosing();  }  [CE]  cannot  find  symbol  validatePropertyEnclosing  [FE]                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(validator!=  null  &&  validatePropertyEnclosing!=  null)  {  finishPropertyEnclosing();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(validator!=  null  &&  validatePropertyEnclosing!=  null)  {  finishPropertyEnclosing();  }	  if(validator!=    null)    {    finishPropertyEnclosing();    }    	non-compiled	[CE]  cannot  find  symbol  validatePropertyEnclosing	158	None	replace
1878	[BUG]  [BUGGY]  if(validator!=  null  &&  validator.isEnclosing())  {  finishPropertyEnclosing();  }  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(validator!=  null  &&  validator.isEnclosing())  {  finishPropertyEnclosing();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(validator!=  null  &&  validator.isEnclosing())  {  finishPropertyEnclosing();  }	  if(validator!=    null)    {    finishPropertyEnclosing();    }    	non-compiled	[CE]  cannot  find  symbol	158	None	replace
1879	[BUG]  [BUGGY]  BundlePropertyContinuations  registry  =  getBundlePropertyContinuations(propertyNode,  propertyName);  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  BundlePropertyContinuations  registry  =  getBundlePropertyContinuations(propertyNode,  propertyName);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	BundlePropertyContinuations  registry  =  getBundlePropertyContinuations(propertyNode,  propertyName);	  BundlePropertyContinuations    registry    =    getBundlePropertyContinuations(propertyNode);    	non-compiled	[CE]  cannot  find  symbol	102	None	replace
1880	[BUG]  [BUGGY]  if(validator!=  null  &&  registry.isLastGeneration())  {  finishPropertyGenerations();  }  else  {  registry.isLastGeneration()  :  this;  }  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(validator!=  null  &&  registry.isLastGeneration())  {  finishPropertyGenerations();  }  else  {  registry.isLastGeneration()  :  this;  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(validator!=  null  &&  registry.isLastGeneration())  {  finishPropertyGenerations();  }  else  {  registry.isLastGeneration()  :  this;  }	  if(validator!=    null)    {    finishPropertyGenerations();    }    else    {    registry.isLastGeneration()    :    this;    }    	non-compiled	[CE]  ';'  expected	93	None	replace
1881	[BUG]  [BUGGY]  if(validator!=  null  &&  registry.isLastGeneration())  {  startPropertyGenerations();  }  else  {  registry.isLastGeneration()  :  this;  }  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(validator!=  null  &&  registry.isLastGeneration())  {  startPropertyGenerations();  }  else  {  registry.isLastGeneration()  :  this;  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(validator!=  null  &&  registry.isLastGeneration())  {  startPropertyGenerations();  }  else  {  registry.isLastGeneration()  :  this;  }	  if(validator!=    null)    {    finishPropertyGenerations();    }    else    {    registry.isLastGeneration()    :    this;    }    	non-compiled	[CE]  ';'  expected	93	None	replace
1882	[BUG]  [BUGGY]  if(validator!=  null  &&  validator.isConstructor())  {  finishPropertyGenerations();  }  else  {  registry.isLastGeneration()  :  this;  }  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(validator!=  null  &&  validator.isConstructor())  {  finishPropertyGenerations();  }  else  {  registry.isLastGeneration()  :  this;  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(validator!=  null  &&  validator.isConstructor())  {  finishPropertyGenerations();  }  else  {  registry.isLastGeneration()  :  this;  }	  if(validator!=    null)    {    finishPropertyGenerations();    }    else    {    registry.isLastGeneration()    :    this;    }    	non-compiled	[CE]  ';'  expected	93	None	replace
1883	[BUG]  [BUGGY]  if(validator!=  null  &&  registry.isLastGeneration())  {  finishPropertyGenerations();  }  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(validator!=  null  &&  registry.isLastGeneration())  {  finishPropertyGenerations();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(validator!=  null  &&  registry.isLastGeneration())  {  finishPropertyGenerations();  }	  if(validator!=    null)    {    finishPropertyGenerations();    }    else    {    registry.isLastGeneration()    :    this;    }    	non-compiled	[CE]  cannot  find  symbol	93	None	replace
1884	[BUG]  [BUGGY]  if(propertyContinuations!=  null)  {  finishPropertyGenerator();  }  [CE]  cannot  find  symbol  [FE]                            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(propertyContinuations!=  null)  {  finishPropertyGenerator();  }  [BUGGY]    null)  {  finishPropertyContinuations();  }  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations!=  null)  {  finishPropertyGenerator();  }	  if(propertyContinuations!=    null)    {    finishPropertyContinuations();    }    if(propertyContinuations    	non-compiled	[CE]  cannot  find  symbol	84	None	replace
1885	[BUG]  [BUGGY]  Predicate  validator  =  enclosing.findValueForType(propertyName,  t.getModule());  [CE]  cannot  find  symbol  propertyName  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Predicate  validator  =  enclosing.findValueForType(propertyName,  t.getModule());  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Predicate  validator  =  enclosing.findValueForType(propertyName,  t.getModule());	          Predicate    validator    =    enclosing.getValue();    	non-compiled	[CE]  cannot  find  symbol  propertyName	20	None	replace
1886	[BUG]  [BUGGY]  Predicate  validator  =  enclosing.declareValue(t,  enclosing.getValue());  [CE]  cannot  find  symbol  [FE]                            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Predicate  validator  =  enclosing.declareValue(t,  enclosing.getValue());  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Predicate  validator  =  enclosing.declareValue(t,  enclosing.getValue());	          Predicate    validator    =    enclosing.getValue();    	non-compiled	[CE]  cannot  find  symbol	20	None	replace
1887	[BUG]  [BUGGY]  Predicate  validator  =  enclosing.resolveValue(t,  enclosing.getValue());  [CE]  cannot  find  symbol  [FE]                              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Predicate  validator  =  enclosing.resolveValue(t,  enclosing.getValue());  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Predicate  validator  =  enclosing.resolveValue(t,  enclosing.getValue());	          Predicate    validator    =    enclosing.getValue();    	non-compiled	[CE]  cannot  find  symbol	20	None	replace
1888	[BUG]  [BUGGY]  Annotation  <?>  propertyContinuations  =  propertyNode.getPropertyType(propertyName);  [CE]  cannot  find  symbol  [FE]                              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Annotation  <?>  propertyContinuations  =  propertyNode.getPropertyType(propertyName);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Annotation  <?>  propertyContinuations  =  propertyNode.getPropertyType(propertyName);	  Annotation    <?>    propertyContinuations    =    registry.getPropertyType(propertyName);    	non-compiled	[CE]  cannot  find  symbol	198	None	replace
1889	[BUG]  [BUGGY]  Annotation  <?>  propertyContinuations  =  propertyNodes.getPropertyType(propertyName);  [CE]  cannot  find  symbol  [FE]                                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Annotation  <?>  propertyContinuations  =  propertyNodes.getPropertyType(propertyName);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Annotation  <?>  propertyContinuations  =  propertyNodes.getPropertyType(propertyName);	  Annotation    <?>    propertyContinuations    =    registry.getPropertyType(propertyName);    	non-compiled	[CE]  cannot  find  symbol	198	None	replace
1890	[BUG]  [BUGGY]  ensurePropertyContinuations(registry,  t);  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  ensurePropertyContinuations(registry,  t);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	ensurePropertyContinuations(registry,  t);	  ensurePropertyContinuations(registry);    	non-compiled	[CE]  cannot  find  symbol	171	None	replace
1891	[BUG]  [BUGGY]  ensurePropertyContinuations(registry,  status);  [CE]  cannot  find  symbol  status  [FE]                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  ensurePropertyContinuations(registry,  status);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	ensurePropertyContinuations(registry,  status);	  ensurePropertyContinuations(registry);    	non-compiled	[CE]  cannot  find  symbol  status	171	None	replace
1892	[BUG]  [BUGGY]  PropertyContinuations  registry  =  getPropertyContinuations(propertyName,  t);  [CE]  cannot  find  symbol  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  PropertyContinuations  registry  =  getPropertyContinuations(propertyName,  t);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	PropertyContinuations  registry  =  getPropertyContinuations(propertyName,  t);	  PropertyContinuations    registry    =    getPropertyContinuations(propertyName);    	non-compiled	[CE]  cannot  find  symbol	253	None	replace
1893	[BUG]  [BUGGY]  PropertyContinuations  registry  =  getPropertyContinuations(propertyName,  null);  [CE]  cannot  find  symbol  [FE]                            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  PropertyContinuations  registry  =  getPropertyContinuations(propertyName,  null);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	PropertyContinuations  registry  =  getPropertyContinuations(propertyName,  null);	  PropertyContinuations    registry    =    getPropertyContinuations(propertyName);    	non-compiled	[CE]  cannot  find  symbol	253	None	replace
1894	[BUG]  [BUGGY]  if(resolved)  {  handlePropertyInternal();  }  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(resolved)  {  handlePropertyInternal();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(resolved)  {  handlePropertyInternal();  }	  if(resolved)    {    finishPropertyInternal();    }    	non-compiled	[CE]  cannot  find  symbol	130	None	replace
1895	[BUG]  [BUGGY]  if(propertyContinuations!=  null)  {  startPropertyValues();  }  else  {  propertyContinuations.add(propertyName);  }  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(propertyContinuations!=  null)  {  startPropertyValues();  }  else  {  propertyContinuations.add(propertyName);  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations!=  null)  {  startPropertyValues();  }  else  {  propertyContinuations.add(propertyName);  }	  if(propertyContinuations!=    null)    {    finishPropertyValues();    }    else    {    propertyContinuations.add(propertyName);    }    	non-compiled	[CE]  cannot  find  symbol	69	None	replace
1896	[BUG]  [BUGGY]  Parchet.checkState(registry.isLastGeneration()?  getReferencedType()  :  null,  registry.isFirstGeneration());  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Parchet.checkState(registry.isLastGeneration()?  getReferencedType()  :  null,  registry.isFirstGeneration());  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Parchet.checkState(registry.isLastGeneration()?  getReferencedType()  :  null,  registry.isFirstGeneration());	  Parchet.checkState(registry.isLastGeneration()?    getReferencedType()    :    null);    	non-compiled	[CE]  cannot  find  symbol	64	None	replace
1897	[BUG]  [BUGGY]  Annotations  validator  =  registry.isLastGeneration()?  getReferencedType()  :  NodeUtil.getNativeType(JSTypeNative.UNKNOWN_TYPE);  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Annotations  validator  =  registry.isLastGeneration()?  getReferencedType()  :  NodeUtil.getNativeType(JSTypeNative.UNKNOWN_TYPE);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Annotations  validator  =  registry.isLastGeneration()?  getReferencedType()  :  NodeUtil.getNativeType(JSTypeNative.UNKNOWN_TYPE);	  Annotations    validator    =    registry.isLastGeneration()?    getReferencedType()    :    null;    	non-compiled	[CE]  cannot  find  symbol	73	None	replace
1898	[BUG]  [BUGGY]  Annotations  validator  =  registry.isLastGeneration()?  getReferencedType()  :  node;  [CE]  cannot  find  symbol  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Annotations  validator  =  registry.isLastGeneration()?  getReferencedType()  :  node;  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Annotations  validator  =  registry.isLastGeneration()?  getReferencedType()  :  node;	  Annotations    validator    =    registry.isLastGeneration()?    getReferencedType()    :    null;    	non-compiled	[CE]  cannot  find  symbol	73	None	replace
1899	[BUG]  [BUGGY]  if(resolved)    {    finishPropertyContinuations();    }    while(resolved)  {  finishPropertyContinuations();  }  if(resolved)  {  finishPropertyContinuations();  }  while(resolved)  {  finishPropropertyContinuations();  }  [CE]  cannot  find  symbol  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(resolved)    {    finishPropertyContinuations();    }    while(resolved)  {  finishPropertyContinuations();  }  if(resolved)  {  finishPropertyContinuations();  }  while(resolved)  {  finishPropropertyContinuations();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(resolved)        {        finishPropertyContinuations();        }        while(resolved)    {    finishPropertyContinuations();    }    if(resolved)  {  finishPropertyContinuations();  }  while(resolved)  {  finishPropropertyContinuations();  }	  timeout    	non-compiled	[CE]  cannot  find  symbol	39	None	add
1900	[BUG]  [BUGGY]  if(resolved)    {    finishPropertyContinuations();    }    while(resolved)  {  finishPropertyContinuations();  }  if(resolved)  {  finishPropertyContinuations();  while(resolved)  {  finishPropertyContinuations();  }  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(resolved)    {    finishPropertyContinuations();    }    while(resolved)  {  finishPropertyContinuations();  }  if(resolved)  {  finishPropertyContinuations();  while(resolved)  {  finishPropertyContinuations();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(resolved)        {        finishPropertyContinuations();        }        while(resolved)    {    finishPropertyContinuations();    }    if(resolved)  {  finishPropertyContinuations();  while(resolved)  {  finishPropertyContinuations();  }	  timeout    	non-compiled	[CE]  illegal  start  of  expression	39	None	add
1901	[BUG]  [BUGGY]  Predicate  validator  =  getValidator(t);  [CE]  cannot  find  symbol  [FE]                                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Predicate  validator  =  getValidator(t);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Predicate  validator  =  getValidator(t);	          Predicate    validator    =    getValidator();    	non-compiled	[CE]  cannot  find  symbol	27	None	replace
1902	[BUG]  [BUGGY]  Predicate  validator  =  getValidatorForType();  [CE]  cannot  find  symbol  [FE]                                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Predicate  validator  =  getValidatorForType();  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Predicate  validator  =  getValidatorForType();	          Predicate    validator    =    getValidator();    	non-compiled	[CE]  cannot  find  symbol	27	None	replace
1903	[BUG]  [BUGGY]  Predicate  validator  =  createValidator();  [CE]  cannot  find  symbol  [FE]                                            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Predicate  validator  =  createValidator();  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Predicate  validator  =  createValidator();	          Predicate    validator    =    getValidator();    	non-compiled	[CE]  cannot  find  symbol	27	None	replace
1904	[BUG]  [BUGGY]  Predicate  validator  =  getValidatorForType(t);  [CE]  cannot  find  symbol  [FE]                                              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Predicate  validator  =  getValidatorForType(t);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Predicate  validator  =  getValidatorForType(t);	          Predicate    validator    =    getValidator();    	non-compiled	[CE]  cannot  find  symbol	27	None	replace
1905	[BUG]  [BUGGY]  if(forAnnotations!=  null)  {  finishPropertyContinuations();  }  [CE]  cannot  find  symbol  forAnnotations  [FE]                                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(forAnnotations!=  null)  {  finishPropertyContinuations();  }  [BUGGY]    null)  {  finishPropertyContinuations();  }  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(forAnnotations!=  null)  {  finishPropertyContinuations();  }	  if(propertyContinuations    ==    null)    {    finishPropertyContinuations();    }    if(propertyContinuations    	non-compiled	[CE]  cannot  find  symbol  forAnnotations	49	None	replace
1906	[BUG]  [BUGGY]  if(forAnnotations  ==  null)  {  finishPropertyGeneration();  }  [CE]  cannot  find  symbol  forAnnotations  [FE]                                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(forAnnotations  ==  null)  {  finishPropertyGeneration();  }  [BUGGY]    null)  {  finishPropertyContinuations();  }  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(forAnnotations  ==  null)  {  finishPropertyGeneration();  }	  if(propertyContinuations    ==    null)    {    finishPropertyContinuations();    }    if(propertyContinuations    	non-compiled	[CE]  cannot  find  symbol  forAnnotations	49	None	replace
1907	[BUG]  [BUGGY]  Status.checkState(resolved,  propertyContinuations  ==  null);  [CE]  cannot  find  symbol  Status  [FE]                            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Status.checkState(resolved,  propertyContinuations  ==  null);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Status.checkState(resolved,  propertyContinuations  ==  null);	  Status.checkState(propertyContinuations    ==    null);    	non-compiled	[CE]  cannot  find  symbol  Status	114	None	replace
1908	[BUG]  [BUGGY]  Status.checkState(propertyContinuations  ==  null,  resolved);  [CE]  cannot  find  symbol  Status  [FE]                              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Status.checkState(propertyContinuations  ==  null,  resolved);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Status.checkState(propertyContinuations  ==  null,  resolved);	  Status.checkState(propertyContinuations    ==    null);    	non-compiled	[CE]  cannot  find  symbol  Status	114	None	replace
1909	[BUG]  [BUGGY]  Validator  <?>  validator!=  null  &&  validator.getType()  ==  Token.FUNCTION)  {  finishPropertyContinuations();  }  else  {  registry.isLastGeneration()  :  this;  }  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Validator  <?>  validator!=  null  &&  validator.getType()  ==  Token.FUNCTION)  {  finishPropertyContinuations();  }  else  {  registry.isLastGeneration()  :  this;  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Validator  <?>  validator!=  null  &&  validator.getType()  ==  Token.FUNCTION)  {  finishPropertyContinuations();  }  else  {  registry.isLastGeneration()  :  this;  }	  validator!=    null    &&    validator.getType()    ==    Token.FUNCTION)    {    finishPropertyContinuations();    }    else    {    registry.isLastGeneration()    :    this;    }    	non-compiled	[CE]  ';'  expected	95	None	replace
1910	[BUG]  [BUGGY]  if(propertyContinuations  ==  null)  {  finishPropropertyAnnotations();  }  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(propertyContinuations  ==  null)  {  finishPropropertyAnnotations();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations  ==  null)  {  finishPropropertyAnnotations();  }	  if(propertyContinuations    ==    null)    {    finishPropertyContinuations();    }    if(propertyContinuations    ==    null)    {    finishPropropertyContinuations();    }    	non-compiled	[CE]  cannot  find  symbol	238	None	replace
1911	[BUG]  [BUGGY]  if(forAnnotations  ==  null)  {  finishPropropertyEnclosing();  }  [CE]  cannot  find  symbol  forAnnotations  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(forAnnotations  ==  null)  {  finishPropropertyEnclosing();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(forAnnotations  ==  null)  {  finishPropropertyEnclosing();  }	  if(propertyContinuations    ==    null)    {    finishPropertyContinuations();    }    if(propertyContinuations    ==    null)    {    finishPropropertyContinuations();    }    	non-compiled	[CE]  cannot  find  symbol  forAnnotations	238	None	replace
1912	[BUG]  [BUGGY]  if(propertyContinuations  ==  null)  {  finishPropropertyAccuracy();  }  [CE]  cannot  find  symbol  [FE]                            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(propertyContinuations  ==  null)  {  finishPropropertyAccuracy();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations  ==  null)  {  finishPropropertyAccuracy();  }	  if(propertyContinuations    ==    null)    {    finishPropertyContinuations();    }    if(propertyContinuations    ==    null)    {    finishPropropertyContinuations();    }    	non-compiled	[CE]  cannot  find  symbol	238	None	replace
1913	[BUG]  [BUGGY]  if(forAnnotations  ==  null)  {  finishPropropertyStarts();  }  [CE]  cannot  find  symbol  forAnnotations  [FE]                              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(forAnnotations  ==  null)  {  finishPropropertyStarts();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(forAnnotations  ==  null)  {  finishPropropertyStarts();  }	  if(propertyContinuations    ==    null)    {    finishPropertyContinuations();    }    if(propertyContinuations    ==    null)    {    finishPropropertyContinuations();    }    	non-compiled	[CE]  cannot  find  symbol  forAnnotations	238	None	replace
1914	[BUG]  [BUGGY]  ensurePropertyContinuations(),  registry.isStartGeneration());  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  ensurePropertyContinuations(),  registry.isStartGeneration());  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	ensurePropertyContinuations(),  registry.isStartGeneration());	  ensurePropertyContinuations(),    registry.isLastGeneration());    	non-compiled	[CE]  ';'  expected	18	None	replace
1915	[BUG]  [BUGGY]  ensurePropertyContinuations(),  registry.isImplicitPrototypeGeneration());  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  ensurePropertyContinuations(),  registry.isImplicitPrototypeGeneration());  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	ensurePropertyContinuations(),  registry.isImplicitPrototypeGeneration());	  ensurePropertyContinuations(),    registry.isLastGeneration());    	non-compiled	[CE]  ';'  expected	18	None	replace
1916	[BUG]  [BUGGY]  ensurePropertyContinuations(),  registry.isLocal());  [CE]  ';'  expected  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  ensurePropertyContinuations(),  registry.isLocal());  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	ensurePropertyContinuations(),  registry.isLocal());	  ensurePropertyContinuations(),    registry.isLastGeneration());    	non-compiled	[CE]  ';'  expected	18	None	replace
1917	[BUG]  [BUGGY]  if(propertyContinuations!=    null)    {    finishPropertyContinuations();    }    if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  if(propertyContinuations  <  null)  {  finishPropertyContinu  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(propertyContinuations!=    null)    {    finishPropertyContinuations();    }    if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  if(propertyContinuations  <  null)  {  finishPropertyContinu  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations!=        null)        {        finishPropertyContinuations();        }        if(propertyContinuations!=    null)    {    finishPropertyContinuations();    }    if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  if(propertyContinuations  <  null)  {  finishPropertyContinu	  timeout    	non-compiled	[CE]  ';'  expected	76	None	add
1918	[BUG]  [BUGGY]  if(propertyContinuations!=    null)    {    finishPropertyContinuations();    }    if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  if(propertyContinuations  >=  null)  {  finishPropertyContinu  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(propertyContinuations!=    null)    {    finishPropertyContinuations();    }    if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  if(propertyContinuations  >=  null)  {  finishPropertyContinu  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations!=        null)        {        finishPropertyContinuations();        }        if(propertyContinuations!=    null)    {    finishPropertyContinuations();    }    if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  if(propertyContinuations  >=  null)  {  finishPropertyContinu	  timeout    	non-compiled	[CE]  ';'  expected	76	None	add
1919	[BUG]  [BUGGY]  if(propertyContinuations!=    null)    {    finishPropertyContinuations();    }    if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  if(propertyContinuations  >>  null)  {  finishPropertyContinu  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(propertyContinuations!=    null)    {    finishPropertyContinuations();    }    if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  if(propertyContinuations  >>  null)  {  finishPropertyContinu  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations!=        null)        {        finishPropertyContinuations();        }        if(propertyContinuations!=    null)    {    finishPropertyContinuations();    }    if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  if(propertyContinuations  >>  null)  {  finishPropertyContinu	  timeout    	non-compiled	[CE]  ';'  expected	76	None	add
1920	[BUG]  [BUGGY]  aughtExceptionHandler  &&  resolved)  {  finishPropertyInferred();  }  else  {  registry.isLastGeneration()  :  this;  }  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  aughtExceptionHandler  &&  resolved)  {  finishPropertyInferred();  }  else  {  registry.isLastGeneration()  :  this;  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	aughtExceptionHandler  &&  resolved)  {  finishPropertyInferred();  }  else  {  registry.isLastGeneration()  :  this;  }	  if(resolved)    {    finishPropertyInferred();    }    else    {    registry.isLastGeneration()    :    this;    }    	non-compiled	[CE]  not  a  statement	175	None	replace
1921	[BUG]  [BUGGY]  Annotations  <  Object>  inferred  =  finishPropertyInferred();  }  else  {  registry.isLastGeneration()  :  this;  }  [CE]  [FE]                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Annotations  <  Object>  inferred  =  finishPropertyInferred();  }  else  {  registry.isLastGeneration()  :  this;  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Annotations  <  Object>  inferred  =  finishPropertyInferred();  }  else  {  registry.isLastGeneration()  :  this;  }	  if(resolved)    {    finishPropertyInferred();    }    else    {    registry.isLastGeneration()    :    this;    }    	non-compiled	[CE]  	175	None	replace
1922	[BUG]  [BUGGY]  Annotations  <  Object>  inferred  =  resolvePropertyInferred();  }  else  {  registry.isLastGeneration()  :  this;  }  [CE]  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Annotations  <  Object>  inferred  =  resolvePropertyInferred();  }  else  {  registry.isLastGeneration()  :  this;  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Annotations  <  Object>  inferred  =  resolvePropertyInferred();  }  else  {  registry.isLastGeneration()  :  this;  }	  if(resolved)    {    finishPropertyInferred();    }    else    {    registry.isLastGeneration()    :    this;    }    	non-compiled	[CE]  	175	None	replace
1923	[BUG]  [BUGGY]  Annotations  <  Object>  inferred  =  finishPropertyInferred();  [CE]  cannot  find  symbol  [FE]                            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Annotations  <  Object>  inferred  =  finishPropertyInferred();  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Annotations  <  Object>  inferred  =  finishPropertyInferred();	  if(resolved)    {    finishPropertyInferred();    }    else    {    registry.isLastGeneration()    :    this;    }    	non-compiled	[CE]  cannot  find  symbol	175	None	replace
1924	[BUG]  [BUGGY]  Annotations  <  Object>  inferred  =  finishPropertyInferred();  registry.isLastGeneration()  :  this;  [CE]  ';'  expected  [FE]                              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Annotations  <  Object>  inferred  =  finishPropertyInferred();  registry.isLastGeneration()  :  this;  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Annotations  <  Object>  inferred  =  finishPropertyInferred();  registry.isLastGeneration()  :  this;	  if(resolved)    {    finishPropertyInferred();    }    else    {    registry.isLastGeneration()    :    this;    }    	non-compiled	[CE]  ';'  expected	175	None	replace
1925	[BUG]  [BUGGY]  Annotations  <  Object>  inferred  =  finishPropertyInferred();  }  else  {  registry.isLastGeneration()  :  this;  [CE]  ';'  expected  [FE]                                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Annotations  <  Object>  inferred  =  finishPropertyInferred();  }  else  {  registry.isLastGeneration()  :  this;  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Annotations  <  Object>  inferred  =  finishPropertyInferred();  }  else  {  registry.isLastGeneration()  :  this;	  if(resolved)    {    finishPropertyInferred();    }    else    {    registry.isLastGeneration()    :    this;    }    	non-compiled	[CE]  ';'  expected	175	None	replace
1926	[BUG]  [BUGGY]  Predicate  validator  =  getValueForType();  [CE]  cannot  find  symbol  [FE]                                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Predicate  validator  =  getValueForType();  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Predicate  validator  =  getValueForType();	          Predicate    validator    =    getValue();    	non-compiled	[CE]  cannot  find  symbol	25	None	replace
1927	[BUG]  [BUGGY]  Predicate  validator  =  getValueForType(propertyName);  [CE]  cannot  find  symbol  propertyName  [FE]                                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Predicate  validator  =  getValueForType(propertyName);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Predicate  validator  =  getValueForType(propertyName);	          Predicate    validator    =    getValue();    	non-compiled	[CE]  cannot  find  symbol  propertyName	25	None	replace
1928	[BUG]  [BUGGY]  Predicate  validator  =  getValue(t);  [CE]  cannot  find  symbol  [FE]                                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Predicate  validator  =  getValue(t);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Predicate  validator  =  getValue(t);	          Predicate    validator    =    getValue();    	non-compiled	[CE]  cannot  find  symbol	25	None	replace
1929	[BUG]  [BUGGY]  validator!=  null  &&  registry.isEnabled(Feature.FLUSH_PASSED_TO_STREAM);  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  validator!=  null  &&  registry.isEnabled(Feature.FLUSH_PASSED_TO_STREAM);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	validator!=  null  &&  registry.isEnabled(Feature.FLUSH_PASSED_TO_STREAM);	  validator!=    null    &&    registry.isLastGeneration();    	non-compiled	[CE]  not  a  statement	97	None	replace
1930	[BUG]  [BUGGY]  validator!=  null  &&  registry.isLocal();  [CE]  not  a  statement  [FE]                            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  validator!=  null  &&  registry.isLocal();  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	validator!=  null  &&  registry.isLocal();	  validator!=    null    &&    registry.isLastGeneration();    	non-compiled	[CE]  not  a  statement	97	None	replace
1931	[BUG]  [BUGGY]  validator!=  null  &&  registry.isEnabled(Feature.QUOTE_FIELD_NAMES);  [CE]  not  a  statement  [FE]                              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  validator!=  null  &&  registry.isEnabled(Feature.QUOTE_FIELD_NAMES);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	validator!=  null  &&  registry.isEnabled(Feature.QUOTE_FIELD_NAMES);	  validator!=    null    &&    registry.isLastGeneration();    	non-compiled	[CE]  not  a  statement	97	None	replace
1932	[BUG]  [BUGGY]  if(propertyContinuations!=  null)  {  endPropertyGenerated();  }  else  {  propertyContinuations.add(propertyName);  }  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(propertyContinuations!=  null)  {  endPropertyGenerated();  }  else  {  propertyContinuations.add(propertyName);  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations!=  null)  {  endPropertyGenerated();  }  else  {  propertyContinuations.add(propertyName);  }	  if(propertyContinuations!=    null)    {    finishPropertyGenerated();    }    else    {    propertyContinuations.add(propertyName);    }    	non-compiled	[CE]  cannot  find  symbol	152	None	replace
1933	[BUG]  [BUGGY]  PropertyContinuation  propertyContinuations  =  propertyContinuations.get(propertyName);  [CE]  cannot  find  symbol  propertyName  [FE]                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  PropertyContinuation  propertyContinuations  =  propertyContinuations.get(propertyName);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	PropertyContinuation  propertyContinuations  =  propertyContinuations.get(propertyName);	  if(propertyContinuations!=    null)    {    finishPropertyGenerated();    }    else    {    propertyContinuations.add(propertyName);    }    	non-compiled	[CE]  cannot  find  symbol  propertyName	152	None	replace
1934	[BUG]  [BUGGY]  if(propertyContinuations!=  null)  {  finishPropertyGenerator();  }  else  {  propertyContinuations.addAll(propertyContinuations);  }  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(propertyContinuations!=  null)  {  finishPropertyGenerator();  }  else  {  propertyContinuations.addAll(propertyContinuations);  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations!=  null)  {  finishPropertyGenerator();  }  else  {  propertyContinuations.addAll(propertyContinuations);  }	  if(propertyContinuations!=    null)    {    finishPropertyGenerator();    }    else    {    getPropertyContinuations().addAll(propertyContinuations);    }    	non-compiled	[CE]  cannot  find  symbol	214	None	replace
1935	[BUG]  [BUGGY]  if(propertyContinuations!=  null)  {  finishPropertyGenerator();  }  else  {  getPropertyContinuations().addAll(propertyContinuations,  propertyNode);  }  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(propertyContinuations!=  null)  {  finishPropertyGenerator();  }  else  {  getPropertyContinuations().addAll(propertyContinuations,  propertyNode);  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations!=  null)  {  finishPropertyGenerator();  }  else  {  getPropertyContinuations().addAll(propertyContinuations,  propertyNode);  }	  if(propertyContinuations!=    null)    {    finishPropertyGenerator();    }    else    {    getPropertyContinuations().addAll(propertyContinuations);    }    	non-compiled	[CE]  cannot  find  symbol	214	None	replace
1936	[BUG]  [BUGGY]  Predicates.checkArgument(!detectImplicitPrototypeCycle());  [CE]  cannot  find  symbol  Predicates  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Predicates.checkArgument(!detectImplicitPrototypeCycle());  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Predicates.checkArgument(!detectImplicitPrototypeCycle());	  Predicates.checkArgument(detectImplicitPrototypeCycle());    	non-compiled	[CE]  cannot  find  symbol  Predicates	201	None	replace
1937	[BUG]  [BUGGY]  Predicates.checkArgument(detectPrototypeCycle());  [CE]  cannot  find  symbol  [FE]                            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Predicates.checkArgument(detectPrototypeCycle());  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Predicates.checkArgument(detectPrototypeCycle());	  Predicates.checkArgument(detectImplicitPrototypeCycle());    	non-compiled	[CE]  cannot  find  symbol	201	None	replace
1938	[BUG]  [BUGGY]  Predicates.checkArgument(detectTypeCycle());  [CE]  cannot  find  symbol  [FE]                              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Predicates.checkArgument(detectTypeCycle());  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Predicates.checkArgument(detectTypeCycle());	  Predicates.checkArgument(detectImplicitPrototypeCycle());    	non-compiled	[CE]  cannot  find  symbol	201	None	replace
1939	[BUG]  [BUGGY]  Parchet.checkState(resolved  ||  registry.isLastGeneration())  {  finishPropertyContinuations();  }  else  {  registry.isLastGeneration()  :  this;  }  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Parchet.checkState(resolved  ||  registry.isLastGeneration())  {  finishPropertyContinuations();  }  else  {  registry.isLastGeneration()  :  this;  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Parchet.checkState(resolved  ||  registry.isLastGeneration())  {  finishPropertyContinuations();  }  else  {  registry.isLastGeneration()  :  this;  }	  Parchet.checkState(resolved    ||    resolved)    {    finishPropertyContinuations();    }    else    {    registry.isLastGeneration()    :    this;    }    	non-compiled	[CE]  ';'  expected	105	None	replace
1940	[BUG]  [BUGGY]  if(validator!=  null  &&  validator.isConstructor())  {  finishPropertyFields();  }  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(validator!=  null  &&  validator.isConstructor())  {  finishPropertyFields();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(validator!=  null  &&  validator.isConstructor())  {  finishPropertyFields();  }	  if(validator!=    null)    {    finishPropertyFields();    }    	non-compiled	[CE]  cannot  find  symbol	161	None	replace
1941	[BUG]  [BUGGY]  if(validator!=  null  &&  registry.isLastGeneration())  {  startPropertyFields();  }  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(validator!=  null  &&  registry.isLastGeneration())  {  startPropertyFields();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(validator!=  null  &&  registry.isLastGeneration())  {  startPropertyFields();  }	  if(validator!=    null)    {    finishPropertyFields();    }    	non-compiled	[CE]  cannot  find  symbol	161	None	replace
1942	[BUG]  [BUGGY]  if(validator!=  null  &&  validator.isProperty())  {  finishPropertyFields();  }  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(validator!=  null  &&  validator.isProperty())  {  finishPropertyFields();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(validator!=  null  &&  validator.isProperty())  {  finishPropertyFields();  }	  if(validator!=    null)    {    finishPropertyFields();    }    	non-compiled	[CE]  cannot  find  symbol	161	None	replace
1943	[BUG]  [BUGGY]  if(validator!=  null  &&  propertyNode  ==  null)  {  finishPropertyFields();  }  [CE]  cannot  find  symbol  propertyNode  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(validator!=  null  &&  propertyNode  ==  null)  {  finishPropertyFields();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(validator!=  null  &&  propertyNode  ==  null)  {  finishPropertyFields();  }	  if(validator!=    null)    {    finishPropertyFields();    }    	non-compiled	[CE]  cannot  find  symbol  propertyNode	161	None	replace
1944	[BUG]  [BUGGY]  if(propertyInferred!=  null)  {  finishPropertyInferred();  }  else  {  getPropertyContinuations().addAll(propertyContinuations);  }  [CE]  cannot  find  symbol  propertyInferred  [FE]            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(propertyInferred!=  null)  {  finishPropertyInferred();  }  else  {  getPropertyContinuations().addAll(propertyContinuations);  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyInferred!=  null)  {  finishPropertyInferred();  }  else  {  getPropertyContinuations().addAll(propertyContinuations);  }	  if(propertyContinuations!=    null)    {    finishPropertyInferred();    }    else    {    getPropertyContinuations().addAll(propertyContinuations);    }    	non-compiled	[CE]  cannot  find  symbol  propertyInferred	118	None	replace
1945	[BUG]  [BUGGY]  if(propertyContinuations!=  null)  {  finishPropertyInferred();  }  else  {  propertyContinuations.addAll(propertyContinuations);  }  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(propertyContinuations!=  null)  {  finishPropertyInferred();  }  else  {  propertyContinuations.addAll(propertyContinuations);  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations!=  null)  {  finishPropertyInferred();  }  else  {  propertyContinuations.addAll(propertyContinuations);  }	  if(propertyContinuations!=    null)    {    finishPropertyInferred();    }    else    {    getPropertyContinuations().addAll(propertyContinuations);    }    	non-compiled	[CE]  cannot  find  symbol	118	None	replace
1946	[BUG]  [BUGGY]  if(validator!=  null  &&  propertyType.getPropertyType()!=  propertyType)  {  finishPropertyContinuations();  }  [CE]  cannot  find  symbol  propertyType  [FE]                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(validator!=  null  &&  propertyType.getPropertyType()!=  propertyType)  {  finishPropertyContinuations();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(validator!=  null  &&  propertyType.getPropertyType()!=  propertyType)  {  finishPropertyContinuations();  }	  if(validator!=    null    &&    validator.getPropertyType()!=    propertyType)    {    finishPropertyContinuations();    }    	non-compiled	[CE]  cannot  find  symbol  propertyType	209	None	replace
1947	[BUG]  [BUGGY]  if(validator!=  null  &&  propertyType.getPropertyType()!=  propType)  {  finishPropertyContinuations();  }  [CE]  cannot  find  symbol  propertyType  [FE]                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(validator!=  null  &&  propertyType.getPropertyType()!=  propType)  {  finishPropertyContinuations();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(validator!=  null  &&  propertyType.getPropertyType()!=  propType)  {  finishPropertyContinuations();  }	  if(validator!=    null    &&    validator.getPropertyType()!=    propertyType)    {    finishPropertyContinuations();    }    	non-compiled	[CE]  cannot  find  symbol  propertyType	209	None	replace
1948	[BUG]  [BUGGY]  if(validator!=  null  &&  propertyType.isPropertyType())  {  finishPropertyContinuations();  }  [CE]  cannot  find  symbol  propertyType  [FE]                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(validator!=  null  &&  propertyType.isPropertyType())  {  finishPropertyContinuations();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(validator!=  null  &&  propertyType.isPropertyType())  {  finishPropertyContinuations();  }	  if(validator!=    null    &&    validator.getPropertyType()!=    propertyType)    {    finishPropertyContinuations();    }    	non-compiled	[CE]  cannot  find  symbol  propertyType	209	None	replace
1949	[BUG]  [BUGGY]  if(propertyContinuations    ==    null)    {    finishPropertyContinuations();    }    if(propertyContinuations  ==  null)  {  finishPropertyContinuations();  }  if(propertyContinuations  ==  null)  {  finishPropertyContinuations();  }  if(propertyContinuations  ==  null)  {  finishPropertyContinuations();  }  if(propertyContinuations  {  null)  {  finishPropertyContinu  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(propertyContinuations    ==    null)    {    finishPropertyContinuations();    }    if(propertyContinuations  ==  null)  {  finishPropertyContinuations();  }  if(propertyContinuations  ==  null)  {  finishPropertyContinuations();  }  if(propertyContinuations  ==  null)  {  finishPropertyContinuations();  }  if(propertyContinuations  {  null)  {  finishPropertyContinu  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations        ==        null)        {        finishPropertyContinuations();        }        if(propertyContinuations    ==    null)    {    finishPropertyContinuations();    }    if(propertyContinuations  ==  null)  {  finishPropertyContinuations();  }  if(propertyContinuations  ==  null)  {  finishPropertyContinuations();  }  if(propertyContinuations  {  null)  {  finishPropertyContinu	  timeout    	non-compiled	[CE]  ')'  expected	41	None	add
1950	[BUG]  [BUGGY]  if(propertyContinuations    ==    null)    {    finishPropertyContinuations();    }    if(propertyContinuations  ==  null)  {  finishPropertyContinuations();  }  if(propertyContinuations  ==  null)  {  finishPropertyContinuations();  }  if(propertyContinuations  ==  null)  {  finishPropertyContinuations();  }  if(propertyContinuations  ==  null)  {  finishPropertyContin  [CE]  ';'  expected  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(propertyContinuations    ==    null)    {    finishPropertyContinuations();    }    if(propertyContinuations  ==  null)  {  finishPropertyContinuations();  }  if(propertyContinuations  ==  null)  {  finishPropertyContinuations();  }  if(propertyContinuations  ==  null)  {  finishPropertyContinuations();  }  if(propertyContinuations  ==  null)  {  finishPropertyContin  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations        ==        null)        {        finishPropertyContinuations();        }        if(propertyContinuations    ==    null)    {    finishPropertyContinuations();    }    if(propertyContinuations  ==  null)  {  finishPropertyContinuations();  }  if(propertyContinuations  ==  null)  {  finishPropertyContinuations();  }  if(propertyContinuations  ==  null)  {  finishPropertyContin	  timeout    	non-compiled	[CE]  ';'  expected	41	None	add
1951	[BUG]  [BUGGY]  if(propertyContinuations    ==    null)    {    finishPropertyContinuations();    }    if(propertyContinuations  ==  null)  {  finishPropertyContinuations();  }  if(propertyContinuations  ==  null)  {  finishPropertyContinuations();  }  if(propertyContinuations  ==  null)  {  finishPropertyContinuations();  }  if(propertyContinuations  >=  null)  {  finishPropertyContinu  [CE]  ';'  expected  [FE]                            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(propertyContinuations    ==    null)    {    finishPropertyContinuations();    }    if(propertyContinuations  ==  null)  {  finishPropertyContinuations();  }  if(propertyContinuations  ==  null)  {  finishPropertyContinuations();  }  if(propertyContinuations  ==  null)  {  finishPropertyContinuations();  }  if(propertyContinuations  >=  null)  {  finishPropertyContinu  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations        ==        null)        {        finishPropertyContinuations();        }        if(propertyContinuations    ==    null)    {    finishPropertyContinuations();    }    if(propertyContinuations  ==  null)  {  finishPropertyContinuations();  }  if(propertyContinuations  ==  null)  {  finishPropertyContinuations();  }  if(propertyContinuations  >=  null)  {  finishPropertyContinu	  timeout    	non-compiled	[CE]  ';'  expected	41	None	add
1952	[BUG]  [BUGGY]  Predicates.checkNotNull(registry,  propertyContinuations);  [CE]  cannot  find  symbol  Predicates  [FE]                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Predicates.checkNotNull(registry,  propertyContinuations);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Predicates.checkNotNull(registry,  propertyContinuations);	  Predicates.checkNotNull(propertyContinuations);    	non-compiled	[CE]  cannot  find  symbol  Predicates	89	None	replace
1953	[BUG]  [BUGGY]  GenericScope  <  JSType>  registry  =  getCurrentScope();  [CE]  cannot  find  symbol  [FE]                                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  GenericScope  <  JSType>  registry  =  getCurrentScope();  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	GenericScope  <  JSType>  registry  =  getCurrentScope();	          GenericScope    <    JSType>    registry    =    getRegistry();    	non-compiled	[CE]  cannot  find  symbol	26	None	replace
1954	[BUG]  [BUGGY]  GenericScope  <  JSType>  registry  =  getRegistryForType();  [CE]  cannot  find  symbol  [FE]                                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  GenericScope  <  JSType>  registry  =  getRegistryForType();  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	GenericScope  <  JSType>  registry  =  getRegistryForType();	          GenericScope    <    JSType>    registry    =    getRegistry();    	non-compiled	[CE]  cannot  find  symbol	26	None	replace
1955	[BUG]  [BUGGY]  timeout  [FE]                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  resolveViaProperties(t,  enclosing);  if(detectImplicitPrototypeCycle())  {  resolveViaProperties(t,  enclosing);  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	add	resolveViaProperties(t,    enclosing);    if(detectImplicitPrototypeCycle())  {  resolveViaProperties(t,  enclosing);  }	  timeout    	compilable	timeout	85	1	add
1956	[BUG]  [BUGGY]  resolveViaProperties(t,  enclosing);  if(detectImplicitPrototypeCycle())  {  resolveViaProperties(t,  enclosing);  }  timeout  [FE]                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  resolveViaProperties(t,  enclosing);  if(detectImplicitPrototypeCycle())  {  resolveViaProperties(t,  enclosing);  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	resolveViaProperties(t,    enclosing);    if(detectImplicitPrototypeCycle())  {  resolveViaProperties(t,  enclosing);  }	  timeout    	compilable	timeout	85	1	add
1957	[BUG]  [BUGGY]  resolveViaProperties(t,  enclosing);  if(detectPrototypeCycle())  {  resolveViaProperties(t,  enclosing);  }  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  resolveViaProperties(t,  enclosing);  if(detectPrototypeCycle())  {  resolveViaProperties(t,  enclosing);  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	resolveViaProperties(t,    enclosing);    if(detectPrototypeCycle())  {  resolveViaProperties(t,  enclosing);  }	  timeout    	non-compiled	[CE]  cannot  find  symbol	85	None	add
1958	[BUG]  [BUGGY]  resolveViaProperties(t,  enclosing);  if(detectImplicitPrototypeCycle())  {  resolveViaProperties(t,  enclosing);  }  else  {  return  super.getReferencedType();  }  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  resolveViaProperties(t,  enclosing);  if(detectImplicitPrototypeCycle())  {  resolveViaProperties(t,  enclosing);  }  else  {  return  super.getReferencedType();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	resolveViaProperties(t,    enclosing);    if(detectImplicitPrototypeCycle())  {  resolveViaProperties(t,  enclosing);  }  else  {  return  super.getReferencedType();  }	  timeout    	non-compiled	[CE]  cannot  find  symbol	85	None	add
1959	[BUG]  [BUGGY]  resolveViaProperties(t,  enclosing);  if(detectPrototypeCycle())  {  resolveViaProperties(t,  enclosing);  }  else  {  propertyContinuations.add(this);  }  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  resolveViaProperties(t,  enclosing);  if(detectPrototypeCycle())  {  resolveViaProperties(t,  enclosing);  }  else  {  propertyContinuations.add(this);  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	resolveViaProperties(t,    enclosing);    if(detectPrototypeCycle())  {  resolveViaProperties(t,  enclosing);  }  else  {  propertyContinuations.add(this);  }	  timeout    	non-compiled	[CE]  cannot  find  symbol	85	None	add
1960	[BUG]  [BUGGY]  resolveViaProperties(t,  enclosing);  if(detectPrototypeCycle())  {  resolveViaProperties(t,  enclosing);  }  else  {  propertyContinuations.add(propertyName);  }  [CE]  cannot  find  symbol  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  resolveViaProperties(t,  enclosing);  if(detectPrototypeCycle())  {  resolveViaProperties(t,  enclosing);  }  else  {  propertyContinuations.add(propertyName);  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	resolveViaProperties(t,    enclosing);    if(detectPrototypeCycle())  {  resolveViaProperties(t,  enclosing);  }  else  {  propertyContinuations.add(propertyName);  }	  timeout    	non-compiled	[CE]  cannot  find  symbol	85	None	add
1961	[BUG]  [BUGGY]  propertyContinuations(propertyNode,  resolved)  {  startPropertyContinuations();  }  else  {  registry.isLastGeneration()?  getReferencedType()  :  this;  }  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  propertyContinuations(propertyNode,  resolved)  {  startPropertyContinuations();  }  else  {  registry.isLastGeneration()?  getReferencedType()  :  this;  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	propertyContinuations(propertyNode,  resolved)  {  startPropertyContinuations();  }  else  {  registry.isLastGeneration()?  getReferencedType()  :  this;  }	  propertyContinuations(resolved,    propertyNode)    {    finishPropertyContinuations();    }    else    {    registry.isLastGeneration()?    getReferencedType()    :    this;    }    	non-compiled	[CE]  ';'  expected	59	None	replace
1962	[BUG]  [BUGGY]  if(propertyNode!=  null)  {  propertyContinuations(resolved,  propertyNode)  {  finishPropertyContinuations();  }  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(propertyNode!=  null)  {  propertyContinuations(resolved,  propertyNode)  {  finishPropertyContinuations();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyNode!=  null)  {  propertyContinuations(resolved,  propertyNode)  {  finishPropertyContinuations();  }	  propertyContinuations(resolved,    propertyNode)    {    finishPropertyContinuations();    }    else    {    registry.isLastGeneration()?    getReferencedType()    :    this;    }    	non-compiled	[CE]  ';'  expected	59	None	replace
1963	[BUG]  [BUGGY]  Register.isImplicitPrototypeGeneration()  :  registry.isLastGeneration();  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Register.isImplicitPrototypeGeneration()  :  registry.isLastGeneration();  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Register.isImplicitPrototypeGeneration()  :  registry.isLastGeneration();	  Register.isLastGeneration()    :    registry.isLastGeneration();    	non-compiled	[CE]  ';'  expected	246	None	replace
1964	[BUG]  [BUGGY]  Register.isStatic()  :  registry.isLastGeneration();  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Register.isStatic()  :  registry.isLastGeneration();  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Register.isStatic()  :  registry.isLastGeneration();	  Register.isLastGeneration()    :    registry.isLastGeneration();    	non-compiled	[CE]  ';'  expected	246	None	replace
1965	[BUG]  [BUGGY]  Register.isLastGeneration()  :  registry.getNativeObjectValue(JSTypeNative.UNKNOWN_TYPE);  [CE]  ';'  expected  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Register.isLastGeneration()  :  registry.getNativeObjectValue(JSTypeNative.UNKNOWN_TYPE);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Register.isLastGeneration()  :  registry.getNativeObjectValue(JSTypeNative.UNKNOWN_TYPE);	  Register.isLastGeneration()    :    registry.isLastGeneration();    	non-compiled	[CE]  ';'  expected	246	None	replace
1966	[BUG]  [BUGGY]  Register.isLastGeneration()  :  registry.getRootGeneration();  [CE]  ';'  expected  [FE]                            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Register.isLastGeneration()  :  registry.getRootGeneration();  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Register.isLastGeneration()  :  registry.getRootGeneration();	  Register.isLastGeneration()    :    registry.isLastGeneration();    	non-compiled	[CE]  ';'  expected	246	None	replace
1967	[BUG]  [BUGGY]  PropertyContinuation  propertyContinuations  =  registry.isLastGeneration()?  getPropertyType()  :  null;  [CE]  method  getPropertyType  in  class  ObjectType  cannot  be  applied  to  given  types;  [FE]                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  PropertyContinuation  propertyContinuations  =  registry.isLastGeneration()?  getPropertyType()  :  null;  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	PropertyContinuation  propertyContinuations  =  registry.isLastGeneration()?  getPropertyType()  :  null;	  PropertyContinuation    propertyContinuations    =    registry.isLastGeneration()?    getReferencedType()    :    null;    	non-compiled	[CE]  method  getPropertyType  in  class  ObjectType  cannot  be  applied  to  given  types;	145	None	replace
1968	[BUG]  [BUGGY]  if(registry!=  null  &&  validator.isLastGeneration())  {  finishPropertyContinuations();  }  else  {  registry.isLastGeneration()  :  this;  }  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(registry!=  null  &&  validator.isLastGeneration())  {  finishPropertyContinuations();  }  else  {  registry.isLastGeneration()  :  this;  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(registry!=  null  &&  validator.isLastGeneration())  {  finishPropertyContinuations();  }  else  {  registry.isLastGeneration()  :  this;  }	  if(validator!=    null    &&    registry.isLastGeneration())    {    finishPropertyContinuations();    }    else    {    registry.isLastGeneration()    :    this;    }    	non-compiled	[CE]  ';'  expected	239	None	replace
1969	[BUG]  [BUGGY]  if(registry!=  null  &&  validator.isConstructor())  {  finishPropertyContinuations();  }  else  {  registry.isLastGeneration()  :  this;  }  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(registry!=  null  &&  validator.isConstructor())  {  finishPropertyContinuations();  }  else  {  registry.isLastGeneration()  :  this;  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(registry!=  null  &&  validator.isConstructor())  {  finishPropertyContinuations();  }  else  {  registry.isLastGeneration()  :  this;  }	  if(validator!=    null    &&    registry.isLastGeneration())    {    finishPropertyContinuations();    }    else    {    registry.isLastGeneration()    :    this;    }    	non-compiled	[CE]  ';'  expected	239	None	replace
1970	[BUG]  [BUGGY]  if(registered!=  null  &&  validator.isLastGeneration())  {  finishPropertyContinuations();  }  else  {  registry.isLastGeneration()  :  this;  }  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(registered!=  null  &&  validator.isLastGeneration())  {  finishPropertyContinuations();  }  else  {  registry.isLastGeneration()  :  this;  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(registered!=  null  &&  validator.isLastGeneration())  {  finishPropertyContinuations();  }  else  {  registry.isLastGeneration()  :  this;  }	  if(validator!=    null    &&    registry.isLastGeneration())    {    finishPropertyContinuations();    }    else    {    registry.isLastGeneration()    :    this;    }    	non-compiled	[CE]  ';'  expected	239	None	replace
1971	[BUG]  [BUGGY]  if(registry!=  null  &&  validator.isInstance())  {  finishPropertyContinuations();  }  else  {  registry.isLastGeneration()  :  this;  }  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(registry!=  null  &&  validator.isInstance())  {  finishPropertyContinuations();  }  else  {  registry.isLastGeneration()  :  this;  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(registry!=  null  &&  validator.isInstance())  {  finishPropertyContinuations();  }  else  {  registry.isLastGeneration()  :  this;  }	  if(validator!=    null    &&    registry.isLastGeneration())    {    finishPropertyContinuations();    }    else    {    registry.isLastGeneration()    :    this;    }    	non-compiled	[CE]  ';'  expected	239	None	replace
1972	[BUG]  [BUGGY]  Predicate  validator  =  resolveViaPrimitive(t,  enclosing);  [CE]  cannot  find  symbol  [FE]                              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Predicate  validator  =  resolveViaPrimitive(t,  enclosing);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Predicate  validator  =  resolveViaPrimitive(t,  enclosing);	  Predicate    validator    =    resolveViaProperties(t,    enclosing);    	non-compiled	[CE]  cannot  find  symbol	92	None	replace
1973	[BUG]  [BUGGY]  PropertyContinuations  registry  =  getPropertyContinuationsForType();  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  PropertyContinuations  registry  =  getPropertyContinuationsForType();  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	PropertyContinuations  registry  =  getPropertyContinuationsForType();	  PropertyContinuations    registry    =    getPropertyContinuations();    	non-compiled	[CE]  cannot  find  symbol	103	None	replace
1974	[BUG]  [BUGGY]  PropertyContinuations  registry  =  propertyContinuations.getPropertyContinuations();  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  PropertyContinuations  registry  =  propertyContinuations.getPropertyContinuations();  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	PropertyContinuations  registry  =  propertyContinuations.getPropertyContinuations();	  PropertyContinuations    registry    =    getPropertyContinuations();    	non-compiled	[CE]  cannot  find  symbol	103	None	replace
1975	[BUG]  [BUGGY]  Preconditions.checkArgument(resolved)  {  finishPropertyContinuations();  }  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Preconditions.checkArgument(resolved)  {  finishPropertyContinuations();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Preconditions.checkArgument(resolved)  {  finishPropertyContinuations();  }	  previously()    {    finishPropertyContinuations();    }    	non-compiled	[CE]  ';'  expected	219	None	replace
1976	[BUG]  [BUGGY]  Parchet.getInstance().finishPropertyAnnotations(t);  [CE]  cannot  find  symbol  Parchet  [FE]              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Parchet.getInstance().finishPropertyAnnotations(t);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Parchet.getInstance().finishPropertyAnnotations(t);	  Parchet.getInstance().finishPropertyContinuations();    	non-compiled	[CE]  cannot  find  symbol  Parchet	29	None	replace
1977	[BUG]  [BUGGY]  Parchet.getInstance().resolvePropertyContinuations(t);  [CE]  cannot  find  symbol  Parchet  [FE]                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Parchet.getInstance().resolvePropertyContinuations(t);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Parchet.getInstance().resolvePropertyContinuations(t);	  Parchet.getInstance().finishPropertyContinuations();    	non-compiled	[CE]  cannot  find  symbol  Parchet	29	None	replace
1978	[BUG]  [BUGGY]  if(propertyContinuations    ==    null)    {    finishPropertyContinuations();    }    if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  if(propertyContinuations  ==  null)  {  startPropertyContinuations();  }  if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  [CE]  cannot  find  symbol  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(propertyContinuations    ==    null)    {    finishPropertyContinuations();    }    if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  if(propertyContinuations  ==  null)  {  startPropertyContinuations();  }  if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations        ==        null)        {        finishPropertyContinuations();        }        if(propertyContinuations!=    null)    {    finishPropertyContinuations();    }    if(propertyContinuations  ==  null)  {  startPropertyContinuations();  }  if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }	  timeout    	non-compiled	[CE]  cannot  find  symbol	43	None	add
1979	[BUG]  [BUGGY]  if(propertyContinuations    ==    null)    {    finishPropertyContinuations();    }    if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  if(propertyContinuations  ==  null)  {  finishPropertyContinuations();  }  if(propertyContinuations  >>  null)  {  finishPropertyContinuations();  }  if(propertyContinuations!=  null)  {  finishPropertyContinu  [CE]  ';'  expected  [FE]                            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(propertyContinuations    ==    null)    {    finishPropertyContinuations();    }    if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  if(propertyContinuations  ==  null)  {  finishPropertyContinuations();  }  if(propertyContinuations  >>  null)  {  finishPropertyContinuations();  }  if(propertyContinuations!=  null)  {  finishPropertyContinu  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations        ==        null)        {        finishPropertyContinuations();        }        if(propertyContinuations!=    null)    {    finishPropertyContinuations();    }    if(propertyContinuations  ==  null)  {  finishPropertyContinuations();  }  if(propertyContinuations  >>  null)  {  finishPropertyContinuations();  }  if(propertyContinuations!=  null)  {  finishPropertyContinu	  timeout    	non-compiled	[CE]  ';'  expected	43	None	add
1980	[BUG]  [BUGGY]  if(propertyContinuations    ==    null)    {    finishPropertyContinuations();    }    if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  if(propertyContinuations  ==  null)  {  finishPropertyContinuations();  }  if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  if(propertyContinuations  >>  null)  {  finishPropertyContinu  [CE]  ';'  expected  [FE]                              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(propertyContinuations    ==    null)    {    finishPropertyContinuations();    }    if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  if(propertyContinuations  ==  null)  {  finishPropertyContinuations();  }  if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  if(propertyContinuations  >>  null)  {  finishPropertyContinu  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations        ==        null)        {        finishPropertyContinuations();        }        if(propertyContinuations!=    null)    {    finishPropertyContinuations();    }    if(propertyContinuations  ==  null)  {  finishPropertyContinuations();  }  if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  if(propertyContinuations  >>  null)  {  finishPropertyContinu	  timeout    	non-compiled	[CE]  ';'  expected	43	None	add
1981	[BUG]  [BUGGY]  if(propertyContinuations    ==    null)    {    finishPropertyContinuations();    }    if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  if(propertyContinuations  ==  null)  {  finishPropertyContinuations();  }  if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  if(propertyContinuations  >=  null)  {  finishPropertyContinu  [CE]  ';'  expected  [FE]                                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(propertyContinuations    ==    null)    {    finishPropertyContinuations();    }    if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  if(propertyContinuations  ==  null)  {  finishPropertyContinuations();  }  if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  if(propertyContinuations  >=  null)  {  finishPropertyContinu  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations        ==        null)        {        finishPropertyContinuations();        }        if(propertyContinuations!=    null)    {    finishPropertyContinuations();    }    if(propertyContinuations  ==  null)  {  finishPropertyContinuations();  }  if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  if(propertyContinuations  >=  null)  {  finishPropertyContinu	  timeout    	non-compiled	[CE]  ';'  expected	43	None	add
1982	[BUG]  [BUGGY]  if(forAnnotations  ==  null)  {  finishPropertyContinuations();  }  else  {  forAnnotations  =  Lists.emptyList();  }  [CE]  cannot  find  symbol  forAnnotations  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(forAnnotations  ==  null)  {  finishPropertyContinuations();  }  else  {  forAnnotations  =  Lists.emptyList();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(forAnnotations  ==  null)  {  finishPropertyContinuations();  }  else  {  forAnnotations  =  Lists.emptyList();  }	  if(propertyContinuations!=    null)    {    finishPropertyContinuations();    }    else    {    forAnnotations    =    Lists.emptyList();    }    	non-compiled	[CE]  cannot  find  symbol  forAnnotations	6	None	replace
1983	[BUG]  [BUGGY]  if(propertyContinuations!=  null)  {  startPropertyAnnotations();  }  else  {  forAnnotations  =  Lists.emptyList();  }  [CE]  cannot  find  symbol  [FE]                            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(propertyContinuations!=  null)  {  startPropertyAnnotations();  }  else  {  forAnnotations  =  Lists.emptyList();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations!=  null)  {  startPropertyAnnotations();  }  else  {  forAnnotations  =  Lists.emptyList();  }	  if(propertyContinuations!=    null)    {    finishPropertyContinuations();    }    else    {    forAnnotations    =    Lists.emptyList();    }    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
1984	[BUG]  [BUGGY]  if(propertyContinuations!=  null)  {  finishPropertyGeneration();  }  else  {  forAnnotations  =  Lists.emptyList();  }  [CE]  cannot  find  symbol  [FE]                              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(propertyContinuations!=  null)  {  finishPropertyGeneration();  }  else  {  forAnnotations  =  Lists.emptyList();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations!=  null)  {  finishPropertyGeneration();  }  else  {  forAnnotations  =  Lists.emptyList();  }	  if(propertyContinuations!=    null)    {    finishPropertyContinuations();    }    else    {    forAnnotations    =    Lists.emptyList();    }    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
1985	[BUG]  [BUGGY]  System.arraycopy(propertyContinuations,  0,  propertyContinuations,  1,  enclosing);  [CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;  [FE]                            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  System.arraycopy(propertyContinuations,  0,  propertyContinuations,  1,  enclosing);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	System.arraycopy(propertyContinuations,  0,  propertyContinuations,  1,  enclosing);	  result.finishPropertyContinuations();    	non-compiled	[CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;	91	None	replace
1986	[BUG]  [BUGGY]  PropertyContinuation  propertyContinuations  =  propertyNode.getPropertyContinuations();  [CE]  cannot  find  symbol  propertyNode  [FE]                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  PropertyContinuation  propertyContinuations  =  propertyNode.getPropertyContinuations();  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	PropertyContinuation  propertyContinuations  =  propertyNode.getPropertyContinuations();	  PropertyContinuation    propertyContinuations    =    registry.getPropertyContinuations();    	non-compiled	[CE]  cannot  find  symbol  propertyNode	146	None	replace
1987	[BUG]  [BUGGY]  PropertyContinuation  propertyContinuations  =  properties.getPropertyContinuations();  [CE]  cannot  find  symbol  properties  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  PropertyContinuation  propertyContinuations  =  properties.getPropertyContinuations();  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	PropertyContinuation  propertyContinuations  =  properties.getPropertyContinuations();	  PropertyContinuation    propertyContinuations    =    registry.getPropertyContinuations();    	non-compiled	[CE]  cannot  find  symbol  properties	146	None	replace
1988	[BUG]  [BUGGY]  PropertyContinuation  propertyContinuations  =  registry.getPropertyContinuationsForType(propertyName);  [CE]  cannot  find  symbol  propertyName  [FE]                            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  PropertyContinuation  propertyContinuations  =  registry.getPropertyContinuationsForType(propertyName);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	PropertyContinuation  propertyContinuations  =  registry.getPropertyContinuationsForType(propertyName);	  PropertyContinuation    propertyContinuations    =    registry.getPropertyContinuations();    	non-compiled	[CE]  cannot  find  symbol  propertyName	146	None	replace
1989	[BUG]  [BUGGY]  PropertyContinuation  propertyContinuations  =  this.registry.getPropertyContinuations();  [CE]  cannot  find  symbol  [FE]                              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  PropertyContinuation  propertyContinuations  =  this.registry.getPropertyContinuations();  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	PropertyContinuation  propertyContinuations  =  this.registry.getPropertyContinuations();	  PropertyContinuation    propertyContinuations    =    registry.getPropertyContinuations();    	non-compiled	[CE]  cannot  find  symbol	146	None	replace
1990	[BUG]  [BUGGY]  propertyContinuations  ==  null  &&  propertyContinuations.size()  >  0)  {  finishPropertyContinuations();  }  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  propertyContinuations  ==  null  &&  propertyContinuations.size()  >  0)  {  finishPropertyContinuations();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	propertyContinuations  ==  null  &&  propertyContinuations.size()  >  0)  {  finishPropertyContinuations();  }	  propertyContinuations!=    null    &&    propertyContinuations.size()    >    0)    {    finishPropertyContinuations();    }    else    {    registry.isLastGeneration()?    getReferencedType()    :    this;    }    	non-compiled	[CE]  not  a  statement	190	None	replace
1991	[BUG]  [BUGGY]  PropertyContinuations  propertyContinuations  =  registry.isLastGeneration()?  getReferencedType()  :  this;  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  PropertyContinuations  propertyContinuations  =  registry.isLastGeneration()?  getReferencedType()  :  this;  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	PropertyContinuations  propertyContinuations  =  registry.isLastGeneration()?  getReferencedType()  :  this;	  propertyContinuations    =    registry.isLastGeneration()?    getReferencedType()    :    null;    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
1992	[BUG]  [BUGGY]  Annotations  condition  =  getPropertyContinuationsForType();  [CE]  cannot  find  symbol  [FE]                            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Annotations  condition  =  getPropertyContinuationsForType();  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Annotations  condition  =  getPropertyContinuationsForType();	  Annotations    condition    =    getPropertyContinuations();    	non-compiled	[CE]  cannot  find  symbol	197	None	replace
1993	[BUG]  [BUGGY]  Annotations  condition  =  getPropertyContinuations().iterator().next();  [CE]  cannot  find  symbol  [FE]                              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Annotations  condition  =  getPropertyContinuations().iterator().next();  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Annotations  condition  =  getPropertyContinuations().iterator().next();	  Annotations    condition    =    getPropertyContinuations();    	non-compiled	[CE]  cannot  find  symbol	197	None	replace
1994	[BUG]  [BUGGY]  Predicate  validator  =  getValueForAnnotations(registry,  t,  enclosing);  [CE]  cannot  find  symbol  [FE]                            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Predicate  validator  =  getValueForAnnotations(registry,  t,  enclosing);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Predicate  validator  =  getValueForAnnotations(registry,  t,  enclosing);	          Predicate    validator    =    getValueForAnnotations(t,    enclosing);    	non-compiled	[CE]  cannot  find  symbol	21	None	replace
1995	[BUG]  [BUGGY]  luate(registry,  propertyNode)  {  finishPropertyContinuations();  }  else  {  registry.isFirstGeneration()?  getReferencedType()  :  this;  }  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  luate(registry,  propertyNode)  {  finishPropertyContinuations();  }  else  {  registry.isFirstGeneration()?  getReferencedType()  :  this;  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	luate(registry,  propertyNode)  {  finishPropertyContinuations();  }  else  {  registry.isFirstGeneration()?  getReferencedType()  :  this;  }	  luate(registry,    resolved)    {    finishPropertyContinuations();    }    else    {    registry.isFirstGeneration()?    getReferencedType()    :    this;    }    	non-compiled	[CE]  ';'  expected	166	None	replace
1996	[BUG]  [BUGGY]  registry.isLastGeneration()?  getSimpleType()  :  this;  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  registry.isLastGeneration()?  getSimpleType()  :  this;  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	registry.isLastGeneration()?  getSimpleType()  :  this;	  registry.isLastGeneration()?    getReferencedType()    :    this;    	non-compiled	[CE]  not  a  statement	7	None	replace
1997	[BUG]  [BUGGY]  registry.isLocal()?  getReferencedType()  :  this;  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  registry.isLocal()?  getReferencedType()  :  this;  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	registry.isLocal()?  getReferencedType()  :  this;	  registry.isLastGeneration()?    getReferencedType()    :    this;    	non-compiled	[CE]  not  a  statement	7	None	replace
1998	[BUG]  [BUGGY]  if(propertyContinuations  ==  null)  {  finishPropertyGeneration();  }  else  {  propertyContinuations.add(propertyName);  }  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(propertyContinuations  ==  null)  {  finishPropertyGeneration();  }  else  {  propertyContinuations.add(propertyName);  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations  ==  null)  {  finishPropertyGeneration();  }  else  {  propertyContinuations.add(propertyName);  }	  if(propertyContinuations    ==    null)    {    finishPropertyContinuations();    }    else    {    propertyContinuations.add(propertyName);    }    	non-compiled	[CE]  cannot  find  symbol	224	None	replace
1999	[BUG]  [BUGGY]  aughtExceptionHandler  &&  resolved)  {  finishPropertyGenerations();  }  else  {  registry.isLastGeneration()  :  this;  }  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  aughtExceptionHandler  &&  resolved)  {  finishPropertyGenerations();  }  else  {  registry.isLastGeneration()  :  this;  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	aughtExceptionHandler  &&  resolved)  {  finishPropertyGenerations();  }  else  {  registry.isLastGeneration()  :  this;  }	  if(resolved)    {    finishPropertyGenerations();    }    else    {    registry.isLastGeneration()    :    this;    }    	non-compiled	[CE]  not  a  statement	172	None	replace
2000	[BUG]  [BUGGY]  aughtExceptionHandler.handlePropertyGenerations(t,  propertyNode);  [CE]  cannot  find  symbol  propertyNode  [FE]                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  aughtExceptionHandler.handlePropertyGenerations(t,  propertyNode);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	aughtExceptionHandler.handlePropertyGenerations(t,  propertyNode);	  if(resolved)    {    finishPropertyGenerations();    }    else    {    registry.isLastGeneration()    :    this;    }    	non-compiled	[CE]  cannot  find  symbol  propertyNode	172	None	replace
2001	[BUG]  [BUGGY]  Predicates.checkNotNull(propertyNode);  [CE]  cannot  find  symbol  propertyNode  [FE]                                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Predicates.checkNotNull(propertyNode);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Predicates.checkNotNull(propertyNode);	          Predicates.checkNotNull(enclosing);    	non-compiled	[CE]  cannot  find  symbol  propertyNode	24	None	replace
2002	[BUG]  [BUGGY]  Predicates.checkArgument(!resolved);  [CE]  cannot  find  symbol  Predicates  [FE]                                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Predicates.checkArgument(!resolved);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Predicates.checkArgument(!resolved);	          Predicates.checkNotNull(enclosing);    	non-compiled	[CE]  cannot  find  symbol  Predicates	24	None	replace
2003	[BUG]  [BUGGY]  AssertionFailedError  t  =  propertyNode.getPropertyType(propertyName);  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  AssertionFailedError  t  =  propertyNode.getPropertyType(propertyName);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	AssertionFailedError  t  =  propertyNode.getPropertyType(propertyName);	  if(resolved)    {    finishPropertyContinuations();    }    If(resolved)    {    finishPropertyContinuations();    }    	non-compiled	[CE]  cannot  find  symbol	37	None	replace
2004	[BUG]  [BUGGY]  AssertionFailedError  t  =  propertyNode.getAssertionFailedError();  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  AssertionFailedError  t  =  propertyNode.getAssertionFailedError();  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	AssertionFailedError  t  =  propertyNode.getAssertionFailedError();	  if(resolved)    {    finishPropertyContinuations();    }    If(resolved)    {    finishPropertyContinuations();    }    	non-compiled	[CE]  cannot  find  symbol	37	None	replace
2005	[BUG]  [BUGGY]  AssertionFailedError  t  =  propertyNode.hasProperty(propertyName);  [CE]  cannot  find  symbol  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  AssertionFailedError  t  =  propertyNode.hasProperty(propertyName);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	AssertionFailedError  t  =  propertyNode.hasProperty(propertyName);	  if(resolved)    {    finishPropertyContinuations();    }    If(resolved)    {    finishPropertyContinuations();    }    	non-compiled	[CE]  cannot  find  symbol	37	None	replace
2006	[BUG]  [BUGGY]  AssertionFailedError  t  =  propertyNode.getPropertyType();  [CE]  cannot  find  symbol  [FE]                            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  AssertionFailedError  t  =  propertyNode.getPropertyType();  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	AssertionFailedError  t  =  propertyNode.getPropertyType();	  if(resolved)    {    finishPropertyContinuations();    }    If(resolved)    {    finishPropertyContinuations();    }    	non-compiled	[CE]  cannot  find  symbol	37	None	replace
2007	[BUG]  [BUGGY]  PropertyContinuation  propertyContinuations  =  registry.getPropertyContinuations(reference,  propertyName);  [CE]  cannot  find  symbol  propertyName  [FE]                              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  PropertyContinuation  propertyContinuations  =  registry.getPropertyContinuations(reference,  propertyName);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	PropertyContinuation  propertyContinuations  =  registry.getPropertyContinuations(reference,  propertyName);	  PropertyContinuation    propertyContinuations    =    registry.getPropertyContinuations(propertyName);    	non-compiled	[CE]  cannot  find  symbol  propertyName	149	None	replace
2008	[BUG]  [BUGGY]  PropertyContinuation  propertyContinuations  =  registry.getPropertyContinuations(propertyName,  reference);  [CE]  cannot  find  symbol  propertyName  [FE]                                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  PropertyContinuation  propertyContinuations  =  registry.getPropertyContinuations(propertyName,  reference);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	PropertyContinuation  propertyContinuations  =  registry.getPropertyContinuations(propertyName,  reference);	  PropertyContinuation    propertyContinuations    =    registry.getPropertyContinuations(propertyName);    	non-compiled	[CE]  cannot  find  symbol  propertyName	149	None	replace
2009	[BUG]  [BUGGY]  if(properties!=  null)  {  startPropertyContinuations();  }  [CE]  cannot  find  symbol  properties  [FE]                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(properties!=  null)  {  startPropertyContinuations();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(properties!=  null)  {  startPropertyContinuations();  }	  if(propertyContinuations!=    null)    {    startPropertyContinuations();    }    	non-compiled	[CE]  cannot  find  symbol  properties	252	None	replace
2010	[BUG]  [BUGGY]  if(propertyContinuations!=  null)  {  finishPropertyGeneration();  }  else  {  propertyContinuations.addAll(propertyContinuations);  }  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(propertyContinuations!=  null)  {  finishPropertyGeneration();  }  else  {  propertyContinuations.addAll(propertyContinuations);  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations!=  null)  {  finishPropertyGeneration();  }  else  {  propertyContinuations.addAll(propertyContinuations);  }	  if(propertyContinuations!=    null)    {    finishPropertyGeneration();    }    else    {    getPropertyContinuations().addAll(propertyContinuations);    }    	non-compiled	[CE]  cannot  find  symbol	121	None	replace
2011	[BUG]  [BUGGY]  if(propertyContinuations!=  null)  {  finishPropertyGeneration();  }  else  {  getPropertyContinuations().addAll(propertyContinuations,  propertyNode);  }  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(propertyContinuations!=  null)  {  finishPropertyGeneration();  }  else  {  getPropertyContinuations().addAll(propertyContinuations,  propertyNode);  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations!=  null)  {  finishPropertyGeneration();  }  else  {  getPropertyContinuations().addAll(propertyContinuations,  propertyNode);  }	  if(propertyContinuations!=    null)    {    finishPropertyGeneration();    }    else    {    getPropertyContinuations().addAll(propertyContinuations);    }    	non-compiled	[CE]  cannot  find  symbol	121	None	replace
2012	[BUG]  [BUGGY]  if(validator!=  null  &&  validator.isConstructor())  {  finishPropertyInternal();  }  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(validator!=  null  &&  validator.isConstructor())  {  finishPropertyInternal();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(validator!=  null  &&  validator.isConstructor())  {  finishPropertyInternal();  }	  if(validator!=    null)    {    finishPropertyInternal();    }    	non-compiled	[CE]  cannot  find  symbol	160	None	replace
2013	[BUG]  [BUGGY]  if(registry!=  null)  {  finishPropertyInternal();  }  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(registry!=  null)  {  finishPropertyInternal();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(registry!=  null)  {  finishPropertyInternal();  }	  if(validator!=    null)    {    finishPropertyInternal();    }    	non-compiled	[CE]  cannot  find  symbol	160	None	replace
2014	[BUG]  [BUGGY]  if(validator!=  null  &&  validatePropertyInternal())  {  finishPropertyInternal();  }  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(validator!=  null  &&  validatePropertyInternal())  {  finishPropertyInternal();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(validator!=  null  &&  validatePropertyInternal())  {  finishPropertyInternal();  }	  if(validator!=    null)    {    finishPropertyInternal();    }    	non-compiled	[CE]  cannot  find  symbol	160	None	replace
2015	[BUG]  [BUGGY]  final  PropertyGeneration  propertyContinuations  =  propertyContinuations.get(propertyName);  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  final  PropertyGeneration  propertyContinuations  =  propertyContinuations.get(propertyName);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	final  PropertyGeneration  propertyContinuations  =  propertyContinuations.get(propertyName);	  if(propertyContinuations!=    null)    {    finishPropertyGeneration();    }    else    {    propertyContinuations.add(propertyName);    }    	non-compiled	[CE]  cannot  find  symbol	225	None	replace
2016	[BUG]  [BUGGY]  validator!=  null  &&  registry.isLastGeneration()?  getSimpleType()  :  this;  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  validator!=  null  &&  registry.isLastGeneration()?  getSimpleType()  :  this;  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	validator!=  null  &&  registry.isLastGeneration()?  getSimpleType()  :  this;	  validator!=    null    &&    registry.isLastGeneration()?    getReferencedType()    :    this;    	non-compiled	[CE]  not  a  statement	138	None	replace
2017	[BUG]  [BUGGY]  validator!=  null  &&  registry.isLocal()?  getReferencedType()  :  this;  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  validator!=  null  &&  registry.isLocal()?  getReferencedType()  :  this;  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	validator!=  null  &&  registry.isLocal()?  getReferencedType()  :  this;	  validator!=    null    &&    registry.isLastGeneration()?    getReferencedType()    :    this;    	non-compiled	[CE]  not  a  statement	138	None	replace
2018	[BUG]  [BUGGY]  if(propertyContinuations!=    null)    {    finishPropertyContinuations();    }    if(propertyContinuations  ==  null)  {  finishPropertyContinuations();  }  if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  if(propertyContinuations  ==  null)  {  finishPropertyContinuations();  }  if(propertyContinuations  ==  null)  {  finishPropertyContinu  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(propertyContinuations!=    null)    {    finishPropertyContinuations();    }    if(propertyContinuations  ==  null)  {  finishPropertyContinuations();  }  if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  if(propertyContinuations  ==  null)  {  finishPropertyContinuations();  }  if(propertyContinuations  ==  null)  {  finishPropertyContinu  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations!=        null)        {        finishPropertyContinuations();        }        if(propertyContinuations    ==    null)    {    finishPropertyContinuations();    }    if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  if(propertyContinuations  ==  null)  {  finishPropertyContinuations();  }  if(propertyContinuations  ==  null)  {  finishPropertyContinu	  timeout    	non-compiled	[CE]  ';'  expected	78	None	add
2019	[BUG]  [BUGGY]  if(propertyContinuations!=    null)    {    finishPropertyContinuations();    }    if(propertyContinuations  ==  null)  {  finishPropertyContinuations();  }  if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  if(propertyContinuations  ==  null)  {  finishPropertyContinuations();  }  if(propertyContinuations  ==  null)  {  finishProperty  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(propertyContinuations!=    null)    {    finishPropertyContinuations();    }    if(propertyContinuations  ==  null)  {  finishPropertyContinuations();  }  if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  if(propertyContinuations  ==  null)  {  finishPropertyContinuations();  }  if(propertyContinuations  ==  null)  {  finishProperty  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations!=        null)        {        finishPropertyContinuations();        }        if(propertyContinuations    ==    null)    {    finishPropertyContinuations();    }    if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  if(propertyContinuations  ==  null)  {  finishPropertyContinuations();  }  if(propertyContinuations  ==  null)  {  finishProperty	  timeout    	non-compiled	[CE]  ';'  expected	78	None	add
2020	[BUG]  [BUGGY]  if(propertyContinuations!=    null)    {    finishPropertyContinuations();    }    if(propertyContinuations  ==  null)  {  finishPropertyContinuations();  }  if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  if(propertyContinuations  ==  null)  {  finishPropertyContinuations();  }  if(propertyContinuations  ==  null)  {  finishPropertyContin  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(propertyContinuations!=    null)    {    finishPropertyContinuations();    }    if(propertyContinuations  ==  null)  {  finishPropertyContinuations();  }  if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  if(propertyContinuations  ==  null)  {  finishPropertyContinuations();  }  if(propertyContinuations  ==  null)  {  finishPropertyContin  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations!=        null)        {        finishPropertyContinuations();        }        if(propertyContinuations    ==    null)    {    finishPropertyContinuations();    }    if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  if(propertyContinuations  ==  null)  {  finishPropertyContinuations();  }  if(propertyContinuations  ==  null)  {  finishPropertyContin	  timeout    	non-compiled	[CE]  ';'  expected	78	None	add
2021	[BUG]  [BUGGY]  timeout  [FE]                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(propertyContinuations!=    null)    {    finishPropertyContinuations();    }    if(propertyContinuations  ==  null)  {  finishPropertyContinuations();  }  if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  if(propertyContinuations  ==  null)  {  finishPropertyContinuations();  }  if(propertyContinuations  ==  null)  {  finishPropertyContinuations();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	add	if(propertyContinuations!=        null)        {        finishPropertyContinuations();        }        if(propertyContinuations    ==    null)    {    finishPropertyContinuations();    }    if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  if(propertyContinuations  ==  null)  {  finishPropertyContinuations();  }  if(propertyContinuations  ==  null)  {  finishPropertyContinuations();  }	  timeout    	compilable	timeout	78	1	add
2022	[BUG]  [BUGGY]  if(propertyContinuations!=    null)    {    finishPropertyContinuations();    }    if(propertyContinuations  ==  null)  {  finishPropertyContinuations();  }  if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  if(propertyContinuations  ==  null)  {  finishPropertyContinuations();  }  if(propertyContinuations  ==  null)  {  finishPropertyContinuations();  }  timeout  [FE]                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(propertyContinuations!=    null)    {    finishPropertyContinuations();    }    if(propertyContinuations  ==  null)  {  finishPropertyContinuations();  }  if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  if(propertyContinuations  ==  null)  {  finishPropertyContinuations();  }  if(propertyContinuations  ==  null)  {  finishPropertyContinuations();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations!=        null)        {        finishPropertyContinuations();        }        if(propertyContinuations    ==    null)    {    finishPropertyContinuations();    }    if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  if(propertyContinuations  ==  null)  {  finishPropertyContinuations();  }  if(propertyContinuations  ==  null)  {  finishPropertyContinuations();  }	  timeout    	compilable	timeout	78	1	add
2023	[BUG]  [BUGGY]  if(propertyContinuations!=    null)    {    finishPropertyContinuations();    }    if(propertyContinuations  ==  null)  {  finishPropertyContinuations();  }  if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  if(propertyContinuations  ==  null)  {  finishPropertyContinuations();  }  if(propertyContinuations  ==  null)  {  finishPropert  [CE]  ';'  expected  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(propertyContinuations!=    null)    {    finishPropertyContinuations();    }    if(propertyContinuations  ==  null)  {  finishPropertyContinuations();  }  if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  if(propertyContinuations  ==  null)  {  finishPropertyContinuations();  }  if(propertyContinuations  ==  null)  {  finishPropert  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations!=        null)        {        finishPropertyContinuations();        }        if(propertyContinuations    ==    null)    {    finishPropertyContinuations();    }    if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  if(propertyContinuations  ==  null)  {  finishPropertyContinuations();  }  if(propertyContinuations  ==  null)  {  finishPropert	  timeout    	non-compiled	[CE]  ';'  expected	78	None	add
2024	[BUG]  [BUGGY]  if(propertyContinuations!=    null)    {    finishPropertyContinuations();    }    if(propertyContinuations  ==  null)  {  finishPropertyContinuations();  }  if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  if(propertyContinuations  ==  null)  {  finishPropertyContinuations();  }  if(propertyContinuations  ==  null)  {  finishProper  [CE]  ';'  expected  [FE]                            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(propertyContinuations!=    null)    {    finishPropertyContinuations();    }    if(propertyContinuations  ==  null)  {  finishPropertyContinuations();  }  if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  if(propertyContinuations  ==  null)  {  finishPropertyContinuations();  }  if(propertyContinuations  ==  null)  {  finishProper  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations!=        null)        {        finishPropertyContinuations();        }        if(propertyContinuations    ==    null)    {    finishPropertyContinuations();    }    if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  if(propertyContinuations  ==  null)  {  finishPropertyContinuations();  }  if(propertyContinuations  ==  null)  {  finishProper	  timeout    	non-compiled	[CE]  ';'  expected	78	None	add
2025	[BUG]  [BUGGY]  if(propertyContinuations!=    null)    {    finishPropertyContinuations();    }    if(propertyContinuations  ==  null)  {  finishPropertyContinuations();  }  if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  if(propertyContinuations  ==  null)  {  finishPropertyContinuations();  }  if(propertyContinuations  >=  null)  {  finishPropertyContinu  [CE]  ';'  expected  [FE]                              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(propertyContinuations!=    null)    {    finishPropertyContinuations();    }    if(propertyContinuations  ==  null)  {  finishPropertyContinuations();  }  if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  if(propertyContinuations  ==  null)  {  finishPropertyContinuations();  }  if(propertyContinuations  >=  null)  {  finishPropertyContinu  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations!=        null)        {        finishPropertyContinuations();        }        if(propertyContinuations    ==    null)    {    finishPropertyContinuations();    }    if(propertyContinuations!=  null)  {  finishPropertyContinuations();  }  if(propertyContinuations  ==  null)  {  finishPropertyContinuations();  }  if(propertyContinuations  >=  null)  {  finishPropertyContinu	  timeout    	non-compiled	[CE]  ';'  expected	78	None	add
2026	[BUG]  [BUGGY]  Annotations  validator  =  this.registry.isLastGeneration()?  getReferencedType()  :  this;  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Annotations  validator  =  this.registry.isLastGeneration()?  getReferencedType()  :  this;  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Annotations  validator  =  this.registry.isLastGeneration()?  getReferencedType()  :  this;	  Annotations    validator    =    registry.isLastGeneration()?    getReferencedType()    :    this;    	non-compiled	[CE]  cannot  find  symbol	61	None	replace
2027	[BUG]  [BUGGY]  Annotations  validator  =  registry.isLastGeneration()?  getReferencedType()  :  DEFAULT_SYNTHETIC;  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Annotations  validator  =  registry.isLastGeneration()?  getReferencedType()  :  DEFAULT_SYNTHETIC;  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Annotations  validator  =  registry.isLastGeneration()?  getReferencedType()  :  DEFAULT_SYNTHETIC;	  Annotations    validator    =    registry.isLastGeneration()?    getReferencedType()    :    this;    	non-compiled	[CE]  cannot  find  symbol	61	None	replace
2028	[BUG]  [BUGGY]  Predicate  validator  =  getValueForType(t,  this);  [CE]  cannot  find  symbol  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Predicate  validator  =  getValueForType(t,  this);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Predicate  validator  =  getValueForType(t,  this);	          Predicate    validator    =    getValueForType(t);    	non-compiled	[CE]  cannot  find  symbol	237	None	replace
2029	[BUG]  [BUGGY]  if(propertyContinuations!=  null)  {  startPropertyFields();  }  else  {  getPropertyContinuations().addAll(propertyContinuations);  }  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(propertyContinuations!=  null)  {  startPropertyFields();  }  else  {  getPropertyContinuations().addAll(propertyContinuations);  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations!=  null)  {  startPropertyFields();  }  else  {  getPropertyContinuations().addAll(propertyContinuations);  }	  if(propertyContinuations!=    null)    {    finishPropertyFields();    }    else    {    getPropertyContinuations().addAll(propertyContinuations);    }    	non-compiled	[CE]  cannot  find  symbol	119	None	replace
2030	[BUG]  [BUGGY]  if(propertyFields!=  null)  {  finishPropertyGeneration();  }  else  {  getPropertyContinuations().addAll(propertyContinuations);  }  [CE]  cannot  find  symbol  propertyFields  [FE]                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(propertyFields!=  null)  {  finishPropertyGeneration();  }  else  {  getPropertyContinuations().addAll(propertyContinuations);  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyFields!=  null)  {  finishPropertyGeneration();  }  else  {  getPropertyContinuations().addAll(propertyContinuations);  }	  if(propertyContinuations!=    null)    {    finishPropertyFields();    }    else    {    getPropertyContinuations().addAll(propertyContinuations);    }    	non-compiled	[CE]  cannot  find  symbol  propertyFields	119	None	replace
2031	[BUG]  [BUGGY]  if(propertyContinuations!=  null)  {  finishPropertyFields();  }  else  {  propertyContinuations.addAll(propertyContinuations);  }  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(propertyContinuations!=  null)  {  finishPropertyFields();  }  else  {  propertyContinuations.addAll(propertyContinuations);  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations!=  null)  {  finishPropertyFields();  }  else  {  propertyContinuations.addAll(propertyContinuations);  }	  if(propertyContinuations!=    null)    {    finishPropertyFields();    }    else    {    getPropertyContinuations().addAll(propertyContinuations);    }    	non-compiled	[CE]  cannot  find  symbol	119	None	replace
2032	[BUG]  [BUGGY]  ParchetState.checkState(registry.isLastGeneration());  [CE]  cannot  find  symbol  ParchetState  [FE]                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  ParchetState.checkState(registry.isLastGeneration());  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	ParchetState.checkState(registry.isLastGeneration());	  if(validator!=    null)    {    finishPropertyGenerations();    }    else    {    registry.isLastGeneration()?    getReferencedType()    :    this;    }    	non-compiled	[CE]  cannot  find  symbol  ParchetState	232	None	replace
2033	[BUG]  [BUGGY]  ParchetState.checkState(registry.isLastGeneration()  ||  registry.isLastGeneration()?  getReferencedType()  :  this);  [CE]  cannot  find  symbol  ParchetState  [FE]                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  ParchetState.checkState(registry.isLastGeneration()  ||  registry.isLastGeneration()?  getReferencedType()  :  this);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	ParchetState.checkState(registry.isLastGeneration()  ||  registry.isLastGeneration()?  getReferencedType()  :  this);	  if(validator!=    null)    {    finishPropertyGenerations();    }    else    {    registry.isLastGeneration()?    getReferencedType()    :    this;    }    	non-compiled	[CE]  cannot  find  symbol  ParchetState	232	None	replace
2034	[BUG]  [BUGGY]  ParchetState.checkState(registry.isLastGeneration()  ||  registry.isLastGeneration()?  getReferencedType()  :  this;  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  ParchetState.checkState(registry.isLastGeneration()  ||  registry.isLastGeneration()?  getReferencedType()  :  this;  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	ParchetState.checkState(registry.isLastGeneration()  ||  registry.isLastGeneration()?  getReferencedType()  :  this;	  if(validator!=    null)    {    finishPropertyGenerations();    }    else    {    registry.isLastGeneration()?    getReferencedType()    :    this;    }    	non-compiled	[CE]  ')'  expected	232	None	replace
2035	[BUG]  [BUGGY]  Parchet.checkState(registry.isLastGeneration()  ||  registry.isLastGeneration()?  getReferencedType()  :  this;  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Parchet.checkState(registry.isLastGeneration()  ||  registry.isLastGeneration()?  getReferencedType()  :  this;  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Parchet.checkState(registry.isLastGeneration()  ||  registry.isLastGeneration()?  getReferencedType()  :  this;	  if(validator!=    null)    {    finishPropertyGenerations();    }    else    {    registry.isLastGeneration()?    getReferencedType()    :    this;    }    	non-compiled	[CE]  ')'  expected	232	None	replace
2036	[BUG]  [BUGGY]  if(propertyContinuations!=  null)  {  finishPropertyActual();  }  else  {  propertyContinuations.addAll(propertyContinuations);  }  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(propertyContinuations!=  null)  {  finishPropertyActual();  }  else  {  propertyContinuations.addAll(propertyContinuations);  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations!=  null)  {  finishPropertyActual();  }  else  {  propertyContinuations.addAll(propertyContinuations);  }	  if(propertyContinuations!=    null)    {    finishPropertyActual();    }    else    {    getPropertyContinuations().addAll(propertyContinuations);    }    	non-compiled	[CE]  cannot  find  symbol	213	None	replace
2037	[BUG]  [BUGGY]  if(propertyContinuations!=  null)  {  finishPropertyActual();  }  else  {  getPropertyContinuations().addAll(properties);  }  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(propertyContinuations!=  null)  {  finishPropertyActual();  }  else  {  getPropertyContinuations().addAll(properties);  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations!=  null)  {  finishPropertyActual();  }  else  {  getPropertyContinuations().addAll(properties);  }	  if(propertyContinuations!=    null)    {    finishPropertyActual();    }    else    {    getPropertyContinuations().addAll(propertyContinuations);    }    	non-compiled	[CE]  cannot  find  symbol	213	None	replace
2038	[BUG]  [BUGGY]  if(propertyContinuations!=  null)  {  finishBuilding();  }  else  {  getPropertyContinuations().addAll(propertyContinuations);  }  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(propertyContinuations!=  null)  {  finishBuilding();  }  else  {  getPropertyContinuations().addAll(propertyContinuations);  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations!=  null)  {  finishBuilding();  }  else  {  getPropertyContinuations().addAll(propertyContinuations);  }	  if(propertyContinuations!=    null)    {    finishPropertyActual();    }    else    {    getPropertyContinuations().addAll(propertyContinuations);    }    	non-compiled	[CE]  cannot  find  symbol	213	None	replace
2039	[BUG]  [BUGGY]  validator!=  null  &&  validator.isGeneration()?  getReferencedType()  :  this;  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  validator!=  null  &&  validator.isGeneration()?  getReferencedType()  :  this;  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	validator!=  null  &&  validator.isGeneration()?  getReferencedType()  :  this;	  validator!=    null    &&    validator.isLastGeneration()?    getReferencedType()    :    this;    	non-compiled	[CE]  not  a  statement	139	None	replace
2040	[BUG]  [BUGGY]  validator!=  null  &&  validator.isInstance()?  getReferencedType()  :  this;  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  validator!=  null  &&  validator.isInstance()?  getReferencedType()  :  this;  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	validator!=  null  &&  validator.isInstance()?  getReferencedType()  :  this;	  validator!=    null    &&    validator.isLastGeneration()?    getReferencedType()    :    this;    	non-compiled	[CE]  not  a  statement	139	None	replace
2041	[BUG]  [BUGGY]  validator!=  null  &&  validator.isFunction()?  getReferencedType()  :  this;  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  validator!=  null  &&  validator.isFunction()?  getReferencedType()  :  this;  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	validator!=  null  &&  validator.isFunction()?  getReferencedType()  :  this;	  validator!=    null    &&    validator.isLastGeneration()?    getReferencedType()    :    this;    	non-compiled	[CE]  not  a  statement	139	None	replace
2042	[BUG]  [BUGGY]  if(propertyContinuations!=  null)  {  finishProperty();  }  else  {  propertyContinuations.addAll(propertyContinuations);  }  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(propertyContinuations!=  null)  {  finishProperty();  }  else  {  propertyContinuations.addAll(propertyContinuations);  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations!=  null)  {  finishProperty();  }  else  {  propertyContinuations.addAll(propertyContinuations);  }	  if(propertyContinuations!=    null)    {    finishProperty();    }    else    {    getPropertyContinuations().addAll(propertyContinuations);    }    	non-compiled	[CE]  cannot  find  symbol	124	None	replace
2043	[BUG]  [BUGGY]  if(propertyContinuations!=  null)  {  finishProperty();  }  else  {  getPropertyContinuations().addAll(propertyContinuations,  propertyNode);  }  [CE]  cannot  find  symbol  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(propertyContinuations!=  null)  {  finishProperty();  }  else  {  getPropertyContinuations().addAll(propertyContinuations,  propertyNode);  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations!=  null)  {  finishProperty();  }  else  {  getPropertyContinuations().addAll(propertyContinuations,  propertyNode);  }	  if(propertyContinuations!=    null)    {    finishProperty();    }    else    {    getPropertyContinuations().addAll(propertyContinuations);    }    	non-compiled	[CE]  cannot  find  symbol	124	None	replace
2044	[BUG]  [BUGGY]  Predicates.checkArgument(registry!=  null);  [CE]  cannot  find  symbol  Predicates  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Predicates.checkArgument(registry!=  null);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Predicates.checkArgument(registry!=  null);	  Predicates.checkNotNull(registry);    	non-compiled	[CE]  cannot  find  symbol  Predicates	125	None	replace
2045	[BUG]  [BUGGY]  Parchet.checkState(registry.isConstructor()?  getReferencedType()  :  this;  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Parchet.checkState(registry.isConstructor()?  getReferencedType()  :  this;  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Parchet.checkState(registry.isConstructor()?  getReferencedType()  :  this;	  Parchet.checkState(registry.isLastGeneration()?    getReferencedType()    :    this;    	non-compiled	[CE]  ')'  expected	65	None	replace
2046	[BUG]  [BUGGY]  Parchet.checkState(registry.isStartGeneration()?  getReferencedType()  :  this;  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Parchet.checkState(registry.isStartGeneration()?  getReferencedType()  :  this;  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Parchet.checkState(registry.isStartGeneration()?  getReferencedType()  :  this;	  Parchet.checkState(registry.isLastGeneration()?    getReferencedType()    :    this;    	non-compiled	[CE]  ')'  expected	65	None	replace
2047	[BUG]  [BUGGY]  Parchet.checkState(registry.isInstance()?  getReferencedType()  :  this;  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Parchet.checkState(registry.isInstance()?  getReferencedType()  :  this;  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Parchet.checkState(registry.isInstance()?  getReferencedType()  :  this;	  Parchet.checkState(registry.isLastGeneration()?    getReferencedType()    :    this;    	non-compiled	[CE]  ')'  expected	65	None	replace
2048	[BUG]  [BUGGY]  if(registry!=  null)  {  finishPropertyContinuations();  }  else  {  registry.isFirstGeneration()  :  this;  }  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(registry!=  null)  {  finishPropertyContinuations();  }  else  {  registry.isFirstGeneration()  :  this;  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(registry!=  null)  {  finishPropertyContinuations();  }  else  {  registry.isFirstGeneration()  :  this;  }	  if(validator!=    null)    {    finishPropertyContinuations();    }    else    {    registry.isFirstGeneration()    :    this;    }    	non-compiled	[CE]  ';'  expected	96	None	replace
2049	[BUG]  [BUGGY]  if(validator!=  null  &&  registry.isFirstGeneration())  {  finishPropertyContinuations();  }  else  {  registry.isFirstGeneration()  :  this;  }  [CE]  ';'  expected  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(validator!=  null  &&  registry.isFirstGeneration())  {  finishPropertyContinuations();  }  else  {  registry.isFirstGeneration()  :  this;  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(validator!=  null  &&  registry.isFirstGeneration())  {  finishPropertyContinuations();  }  else  {  registry.isFirstGeneration()  :  this;  }	  if(validator!=    null)    {    finishPropertyContinuations();    }    else    {    registry.isFirstGeneration()    :    this;    }    	non-compiled	[CE]  ';'  expected	96	None	replace
2050	[BUG]  [BUGGY]  if(validator!=  null)  {  finishPropertyGeneration();  }  else  {  registry.isFirstGeneration()  :  this;  }  [CE]  ';'  expected  [FE]                            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(validator!=  null)  {  finishPropertyGeneration();  }  else  {  registry.isFirstGeneration()  :  this;  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(validator!=  null)  {  finishPropertyGeneration();  }  else  {  registry.isFirstGeneration()  :  this;  }	  if(validator!=    null)    {    finishPropertyContinuations();    }    else    {    registry.isFirstGeneration()    :    this;    }    	non-compiled	[CE]  ';'  expected	96	None	replace
2051	[BUG]  [BUGGY]  if(propertyContinuations!=  null  &&  propertyContinuations.size()  >  0)  {  finishPropertyInferred();  }  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(propertyContinuations!=  null  &&  propertyContinuations.size()  >  0)  {  finishPropertyInferred();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations!=  null  &&  propertyContinuations.size()  >  0)  {  finishPropertyInferred();  }	  if(propertyContinuations!=    null)    {    finishPropertyInferred();    }    	non-compiled	[CE]  cannot  find  symbol	136	None	replace
2052	[BUG]  [BUGGY]  if(propertyContinuations!=  null  &&  propertyContinuations.size()  >  1)  {  finishPropertyInferred();  }  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(propertyContinuations!=  null  &&  propertyContinuations.size()  >  1)  {  finishPropertyInferred();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations!=  null  &&  propertyContinuations.size()  >  1)  {  finishPropertyInferred();  }	  if(propertyContinuations!=    null)    {    finishPropertyInferred();    }    	non-compiled	[CE]  cannot  find  symbol	136	None	replace
2053	[BUG]  [BUGGY]  if(type!=  null)  {  finishPropertyContinuations();  }  [CE]  cannot  find  symbol  type  [FE]                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(type!=  null)  {  finishPropertyContinuations();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(type!=  null)  {  finishPropertyContinuations();  }	  if(validator!=    null)    {    finishPropertyContinuations();    }    if(validator    >=    null)    {    finishPropertyContinuations();    }    	non-compiled	[CE]  cannot  find  symbol  type	56	None	replace
2054	[BUG]  [BUGGY]  AssertionFailedError  t  =  getPropertyType(propertyName);  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  AssertionFailedError  t  =  getPropertyType(propertyName);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	AssertionFailedError  t  =  getPropertyType(propertyName);	  if(validator!=    null)    {    finishPropertyContinuations();    }    if(validator    >=    null)    {    finishPropertyContinuations();    }    	non-compiled	[CE]  cannot  find  symbol	56	None	replace
2055	[BUG]  [BUGGY]  if(type!=  null)  {  finishPropertyType();  }  [CE]  cannot  find  symbol  type  [FE]                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(type!=  null)  {  finishPropertyType();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(type!=  null)  {  finishPropertyType();  }	  if(validator!=    null)    {    finishPropertyContinuations();    }    if(validator    >=    null)    {    finishPropertyContinuations();    }    	non-compiled	[CE]  cannot  find  symbol  type	56	None	replace
2056	[BUG]  [BUGGY]  Parchet.checkState(validator!=  null  &&  validator.isConstructor());  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Parchet.checkState(validator!=  null  &&  validator.isConstructor());  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Parchet.checkState(validator!=  null  &&  validator.isConstructor());	  Parchet.checkState(validator!=    null);    	non-compiled	[CE]  cannot  find  symbol	28	None	replace
2057	[BUG]  [BUGGY]  if(validator!=  null  &&  validator.hasProperty(propertyName))  {  startPropertyGenerations();  }  else  {  registry.isLastGeneration()  :  this;  }  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(validator!=  null  &&  validator.hasProperty(propertyName))  {  startPropertyGenerations();  }  else  {  registry.isLastGeneration()  :  this;  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(validator!=  null  &&  validator.hasProperty(propertyName))  {  startPropertyGenerations();  }  else  {  registry.isLastGeneration()  :  this;  }	  if(validator!=    null)    {    startPropertyGenerations();    }    else    {    registry.isLastGeneration()    :    this;    }    	non-compiled	[CE]  ';'  expected	132	None	replace
2058	[BUG]  [BUGGY]  if(registry!=  null)  {  startPropertyGenerations();  }  else  {  registry.isLastGeneration()  :  this;  }  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(registry!=  null)  {  startPropertyGenerations();  }  else  {  registry.isLastGeneration()  :  this;  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(registry!=  null)  {  startPropertyGenerations();  }  else  {  registry.isLastGeneration()  :  this;  }	  if(validator!=    null)    {    startPropertyGenerations();    }    else    {    registry.isLastGeneration()    :    this;    }    	non-compiled	[CE]  ';'  expected	132	None	replace
2059	[BUG]  [BUGGY]  if(validator!=  null  &&  validator.isConstructor())  {  startPropertyGenerations();  }  else  {  registry.isLastGeneration()  :  this;  }  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(validator!=  null  &&  validator.isConstructor())  {  startPropertyGenerations();  }  else  {  registry.isLastGeneration()  :  this;  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(validator!=  null  &&  validator.isConstructor())  {  startPropertyGenerations();  }  else  {  registry.isLastGeneration()  :  this;  }	  if(validator!=    null)    {    startPropertyGenerations();    }    else    {    registry.isLastGeneration()    :    this;    }    	non-compiled	[CE]  ';'  expected	132	None	replace
2060	[BUG]  [BUGGY]  if(validator!=  null  &&  validator.isProperty())  {  startPropertyGenerations();  }  else  {  registry.isLastGeneration()  :  this;  }  [CE]  ';'  expected  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(validator!=  null  &&  validator.isProperty())  {  startPropertyGenerations();  }  else  {  registry.isLastGeneration()  :  this;  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(validator!=  null  &&  validator.isProperty())  {  startPropertyGenerations();  }  else  {  registry.isLastGeneration()  :  this;  }	  if(validator!=    null)    {    startPropertyGenerations();    }    else    {    registry.isLastGeneration()    :    this;    }    	non-compiled	[CE]  ';'  expected	132	None	replace
2061	[BUG]  [BUGGY]  if(validator!=  null  &&  propertyConfig.getPropertyType()!=  PropertyType.PROPERTY)  {  finishPropertyContinuations();  }  [CE]  cannot  find  symbol  propertyConfig  [FE]                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(validator!=  null  &&  propertyConfig.getPropertyType()!=  PropertyType.PROPERTY)  {  finishPropertyContinuations();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(validator!=  null  &&  propertyConfig.getPropertyType()!=  PropertyType.PROPERTY)  {  finishPropertyContinuations();  }	  if(validator!=    null    &&    validator.getPropertyType()!=    PropertyType.PROPERTY)    {    finishPropertyContinuations();    }    	non-compiled	[CE]  cannot  find  symbol  propertyConfig	211	None	replace
2062	[BUG]  [BUGGY]  if(propertyAnnotations!=  null)  {  finishPropertyAnnotations();  }  else  {  forAnnotations  =  Collections.emptyList();  }  [CE]  cannot  find  symbol  propertyAnnotations  [FE]                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(propertyAnnotations!=  null)  {  finishPropertyAnnotations();  }  else  {  forAnnotations  =  Collections.emptyList();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyAnnotations!=  null)  {  finishPropertyAnnotations();  }  else  {  forAnnotations  =  Collections.emptyList();  }	  if(propertyContinuations!=    null)    {    finishPropertyAnnotations();    }    else    {    forAnnotations    =    Collections.emptyList();    }    	non-compiled	[CE]  cannot  find  symbol  propertyAnnotations	5	None	replace
2063	[BUG]  [BUGGY]  luate(registry,  enclosing)  {  finishPropertyContinuations();  }  else  {  registry.isFirstGeneration()?  getReferencedType()  :  this;  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  luate(registry,  enclosing)  {  finishPropertyContinuations();  }  else  {  registry.isFirstGeneration()?  getReferencedType()  :  this;  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	luate(registry,  enclosing)  {  finishPropertyContinuations();  }  else  {  registry.isFirstGeneration()?  getReferencedType()  :  this;	  luate(registry,    resolved)    {    finishPropertyContinuations();    }    else    {    registry.isLastGeneration()?    getReferencedType()    :    this;    	non-compiled	[CE]  ';'  expected	165	None	replace
2064	[BUG]  [BUGGY]  propertyContinuations.add(markupPropertyName);  [CE]  cannot  find  symbol  markupPropertyName  [FE]                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  propertyContinuations.add(markupPropertyName);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	propertyContinuations.add(markupPropertyName);	  propertyContinuations.add(propertyName);    	non-compiled	[CE]  cannot  find  symbol  markupPropertyName	67	None	replace
2065	[BUG]  [BUGGY]  if(propertyContinuations!=  null)  {  finishBuildPropertyGenerations();  }  else  {  getPropertyContinuations().addAll(propertyContinuations);  }  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(propertyContinuations!=  null)  {  finishBuildPropertyGenerations();  }  else  {  getPropertyContinuations().addAll(propertyContinuations);  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations!=  null)  {  finishBuildPropertyGenerations();  }  else  {  getPropertyContinuations().addAll(propertyContinuations);  }	  if(propertyContinuations!=    null)    {    finishPropertyGenerations();    }    else    {    getPropertyContinuations().addAll(propertyContinuations);    }    	non-compiled	[CE]  cannot  find  symbol	123	None	replace
2066	[BUG]  [BUGGY]  if(propertyContinuations!=  null)  {  finishPropertyGenerations();  }  else  {  propertyContinuations.addAll(propertyContinuations);  }  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(propertyContinuations!=  null)  {  finishPropertyGenerations();  }  else  {  propertyContinuations.addAll(propertyContinuations);  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations!=  null)  {  finishPropertyGenerations();  }  else  {  propertyContinuations.addAll(propertyContinuations);  }	  if(propertyContinuations!=    null)    {    finishPropertyGenerations();    }    else    {    getPropertyContinuations().addAll(propertyContinuations);    }    	non-compiled	[CE]  cannot  find  symbol	123	None	replace
2067	[BUG]  [BUGGY]  if(propertyContinuations!=  null)  {  finishPropertyGenerations();  }  else  {  getPropertyContinuations().addAll(propertyContinuations,  propertyNode);  }  [CE]  cannot  find  symbol  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(propertyContinuations!=  null)  {  finishPropertyGenerations();  }  else  {  getPropertyContinuations().addAll(propertyContinuations,  propertyNode);  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations!=  null)  {  finishPropertyGenerations();  }  else  {  getPropertyContinuations().addAll(propertyContinuations,  propertyNode);  }	  if(propertyContinuations!=    null)    {    finishPropertyGenerations();    }    else    {    getPropertyContinuations().addAll(propertyContinuations);    }    	non-compiled	[CE]  cannot  find  symbol	123	None	replace
2068	[BUG]  [BUGGY]  if(propertyContinuations!=  null)  {  finishPropertyValues();  }  else  {  propertyContinuations.addAll(propertyContinuations);  }  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(propertyContinuations!=  null)  {  finishPropertyValues();  }  else  {  propertyContinuations.addAll(propertyContinuations);  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations!=  null)  {  finishPropertyValues();  }  else  {  propertyContinuations.addAll(propertyContinuations);  }	  if(propertyContinuations!=    null)    {    finishPropertyValues();    }    else    {    getPropertyContinuations().addAll(propertyContinuations);    }    	non-compiled	[CE]  cannot  find  symbol	212	None	replace
2069	[BUG]  [BUGGY]  Annotations  <  Object>  inferred  =  startPropertyGeneration();  }  else  {  registry.isLastGeneration()  :  this;  }  [CE]  [FE]                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Annotations  <  Object>  inferred  =  startPropertyGeneration();  }  else  {  registry.isLastGeneration()  :  this;  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Annotations  <  Object>  inferred  =  startPropertyGeneration();  }  else  {  registry.isLastGeneration()  :  this;  }	  if(resolved)    {    startPropertyGeneration();    }    else    {    registry.isLastGeneration()    :    this;    }    	non-compiled	[CE]  	176	None	replace
2070	[BUG]  [BUGGY]  Context.checkState(registry.isLastGeneration());  [CE]  cannot  find  symbol  Context  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Context.checkState(registry.isLastGeneration());  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Context.checkState(registry.isLastGeneration());	  if(resolved)    {    startPropertyGeneration();    }    else    {    registry.isLastGeneration()    :    this;    }    	non-compiled	[CE]  cannot  find  symbol  Context	176	None	replace
2071	[BUG]  [BUGGY]  if(resolved)  {  startPropertyGeneration();  }  else  {  registry.islastGeneration()  :  this;  }  [CE]  ';'  expected  [FE]                            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(resolved)  {  startPropertyGeneration();  }  else  {  registry.islastGeneration()  :  this;  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(resolved)  {  startPropertyGeneration();  }  else  {  registry.islastGeneration()  :  this;  }	  if(resolved)    {    startPropertyGeneration();    }    else    {    registry.isLastGeneration()    :    this;    }    	non-compiled	[CE]  ';'  expected	176	None	replace
2072	[BUG]  [BUGGY]  predicate.setPropertyGeneration(propertyNode);  [CE]  cannot  find  symbol  propertyNode  [FE]                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  predicate.setPropertyGeneration(propertyNode);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	predicate.setPropertyGeneration(propertyNode);	  predicate.finishPropertyGeneration();    	non-compiled	[CE]  cannot  find  symbol  propertyNode	141	None	replace
2073	[BUG]  [BUGGY]  predicate.setPropertyGeneration(propertyName);  [CE]  cannot  find  symbol  propertyName  [FE]                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  predicate.setPropertyGeneration(propertyName);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	predicate.setPropertyGeneration(propertyName);	  predicate.finishPropertyGeneration();    	non-compiled	[CE]  cannot  find  symbol  propertyName	141	None	replace
2074	[BUG]  [BUGGY]  ensurePropertyContinuations(t)&&  resolveViaRegistry.isLastGeneration();  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  ensurePropertyContinuations(t)&&  resolveViaRegistry.isLastGeneration();  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	ensurePropertyContinuations(t)&&  resolveViaRegistry.isLastGeneration();	  ensurePropertyContinuations()    &&    resolveViaRegistry.isLastGeneration();    	non-compiled	[CE]  not  a  statement	19	None	replace
2075	[BUG]  [BUGGY]  if(validator!=  null  &&  propertyNumber  ==  null)  {  finishPropertyContinuations();  }  [CE]  cannot  find  symbol  propertyNumber  [FE]                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(validator!=  null  &&  propertyNumber  ==  null)  {  finishPropertyContinuations();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(validator!=  null  &&  propertyNumber  ==  null)  {  finishPropertyContinuations();  }	  if(validator!=    null    &&    propertyNode    ==    null)    {    finishPropertyContinuations();    }    	non-compiled	[CE]  cannot  find  symbol  propertyNumber	208	None	replace
2076	[BUG]  [BUGGY]  timeout  [FE]                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(registry!=  null)  {  finishPropertyContinuations();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	add	if(registry!=  null)  {  finishPropertyContinuations();  }	  if(validator!=    null)    {    finishPropertyContinuations();    }    if(validator!=    null)    {    startPropertyContinuations();    }    	compilable	timeout	54	1	replace
2077	[BUG]  [BUGGY]  if(registry!=  null)  {  finishPropertyContinuations();  }  timeout  [FE]                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(registry!=  null)  {  finishPropertyContinuations();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(registry!=  null)  {  finishPropertyContinuations();  }	  if(validator!=    null)    {    finishPropertyContinuations();    }    if(validator!=    null)    {    startPropertyContinuations();    }    	compilable	timeout	54	1	replace
2078	[BUG]  [BUGGY]  if(validator!=  null)  {  startPropertyAnnotations();  }  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(validator!=  null)  {  startPropertyAnnotations();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(validator!=  null)  {  startPropertyAnnotations();  }	  if(validator!=    null)    {    finishPropertyContinuations();    }    if(validator!=    null)    {    startPropertyContinuations();    }    	non-compiled	[CE]  cannot  find  symbol	54	None	replace
2079	[BUG]  [BUGGY]  if(register!=  null)  {  finishPropertyContinuations();  }  [CE]  cannot  find  symbol  register  [FE]                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(register!=  null)  {  finishPropertyContinuations();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(register!=  null)  {  finishPropertyContinuations();  }	  if(validator!=    null)    {    finishPropertyContinuations();    }    if(validator!=    null)    {    startPropertyContinuations();    }    	non-compiled	[CE]  cannot  find  symbol  register	54	None	replace
2080	[BUG]  [BUGGY]  PropertyContinuation  propertyContinuations  =  getPropertyContinuationsForType(propertyNode);  [CE]  cannot  find  symbol  propertyNode  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  PropertyContinuation  propertyContinuations  =  getPropertyContinuationsForType(propertyNode);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	PropertyContinuation  propertyContinuations  =  getPropertyContinuationsForType(propertyNode);	  PropertyContinuation    propertyContinuations    =    getPropertyContinuations();    	non-compiled	[CE]  cannot  find  symbol  propertyNode	147	None	replace
2081	[BUG]  [BUGGY]  PropertyContinuation  propertyContinuations  =  getPropertyContinuationsForType(propertyName);  [CE]  cannot  find  symbol  propertyName  [FE]                            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  PropertyContinuation  propertyContinuations  =  getPropertyContinuationsForType(propertyName);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	PropertyContinuation  propertyContinuations  =  getPropertyContinuationsForType(propertyName);	  PropertyContinuation    propertyContinuations    =    getPropertyContinuations();    	non-compiled	[CE]  cannot  find  symbol  propertyName	147	None	replace
2082	[BUG]  [BUGGY]  Registry.isLastGeneration()?  getScope().getReferencedType()  :  this;  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Registry.isLastGeneration()?  getScope().getReferencedType()  :  this;  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Registry.isLastGeneration()?  getScope().getReferencedType()  :  this;	  Registry.isLastGeneration()?    getReferencedType()    :    this;    	non-compiled	[CE]  not  a  statement	8	None	replace
2083	[BUG]  [BUGGY]  Registry.isLastGeneration()?  getSimpleType()  :  this;  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Registry.isLastGeneration()?  getSimpleType()  :  this;  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Registry.isLastGeneration()?  getSimpleType()  :  this;	  Registry.isLastGeneration()?    getReferencedType()    :    this;    	non-compiled	[CE]  not  a  statement	8	None	replace
2084	[BUG]  [BUGGY]  Registry.isLastGeneration()?  getReferencedType()  :  registry.getNativeObjectType(JSTypeNative.UNKNOWN_TYPE);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Registry.isLastGeneration()?  getReferencedType()  :  registry.getNativeObjectType(JSTypeNative.UNKNOWN_TYPE);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Registry.isLastGeneration()?  getReferencedType()  :  registry.getNativeObjectType(JSTypeNative.UNKNOWN_TYPE);	  Registry.isLastGeneration()?    getReferencedType()    :    this;    	non-compiled	[CE]  not  a  statement	8	None	replace
2085	[BUG]  [BUGGY]  Registry.isLastGeneration()?  getReferencedType()  :  registry.getNativeObjectType(JSTypeNative.NO_TYPE);  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Registry.isLastGeneration()?  getReferencedType()  :  registry.getNativeObjectType(JSTypeNative.NO_TYPE);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Registry.isLastGeneration()?  getReferencedType()  :  registry.getNativeObjectType(JSTypeNative.NO_TYPE);	  Registry.isLastGeneration()?    getReferencedType()    :    this;    	non-compiled	[CE]  not  a  statement	8	None	replace
2086	[BUG]  [BUGGY]  final  PropertyContinuations  <  N>  propertyContinuations  =  getPropertyContinuationsForType(propertyNode);  [CE]  cannot  find  symbol  [FE]                            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  final  PropertyContinuations  <  N>  propertyContinuations  =  getPropertyContinuationsForType(propertyNode);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	final  PropertyContinuations  <  N>  propertyContinuations  =  getPropertyContinuationsForType(propertyNode);	  final    PropertyContinuations    <    N>    propertyContinuations    =    getPropertyContinuations();    	non-compiled	[CE]  cannot  find  symbol	254	None	replace
2087	[BUG]  [BUGGY]  final  PropertyContinuations  <  N>  propertyContinuations  =  getPropertyContinuationsForType();  [CE]  cannot  find  symbol  [FE]                              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  final  PropertyContinuations  <  N>  propertyContinuations  =  getPropertyContinuationsForType();  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	final  PropertyContinuations  <  N>  propertyContinuations  =  getPropertyContinuationsForType();	  final    PropertyContinuations    <    N>    propertyContinuations    =    getPropertyContinuations();    	non-compiled	[CE]  cannot  find  symbol	254	None	replace
2088	[BUG]  [BUGGY]  luate(registry,  enclosing)  {  finishPropertyContinuations();  }  else  {  register.isFirstGeneration()?  getReferencedType()  :  null;  }  [CE]  ';'  expected  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  luate(registry,  enclosing)  {  finishPropertyContinuations();  }  else  {  register.isFirstGeneration()?  getReferencedType()  :  null;  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	luate(registry,  enclosing)  {  finishPropertyContinuations();  }  else  {  register.isFirstGeneration()?  getReferencedType()  :  null;  }	  luate(registry,    resolved)    {    finishPropertyContinuations();    }    else    {    register.isLastGeneration()?    getReferencedType()    :    null;    }    	non-compiled	[CE]  ';'  expected	182	None	replace
2089	[BUG]  [BUGGY]  aughtExceptionHandler  &&  resolved)  {  finishPropertyGeneration();  }  else  {  registry.isLastGeneration()  :  this;  }  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  aughtExceptionHandler  &&  resolved)  {  finishPropertyGeneration();  }  else  {  registry.isLastGeneration()  :  this;  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	aughtExceptionHandler  &&  resolved)  {  finishPropertyGeneration();  }  else  {  registry.isLastGeneration()  :  this;  }	  aughtExceptionHandler    &&    resolved)    {    finishPropertyContinuations();    }    else    {    registry.isLastGeneration()    :    this;    }    	non-compiled	[CE]  not  a  statement	243	None	replace
2090	[BUG]  [BUGGY]  final  PropertyContinuations  <  PropertyContinuation>  propertyContinuations  =  getPropertyContinuations();  [CE]  cannot  find  symbol  [FE]                              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  final  PropertyContinuations  <  PropertyContinuation>  propertyContinuations  =  getPropertyContinuations();  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	final  PropertyContinuations  <  PropertyContinuation>  propertyContinuations  =  getPropertyContinuations();	  final    PropertyContinuations    <    PropertyContinuation>    finishPropertyContinuations();    	non-compiled	[CE]  cannot  find  symbol	115	None	replace
2091	[BUG]  [BUGGY]  final  PropertyContinuations  <  PropertyContinuation>  propertyContinuations  =  new  PropertyContinuation  <  PropertyContinuation>();  [CE]  cannot  find  symbol  [FE]                                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  final  PropertyContinuations  <  PropertyContinuation>  propertyContinuations  =  new  PropertyContinuation  <  PropertyContinuation>();  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	final  PropertyContinuations  <  PropertyContinuation>  propertyContinuations  =  new  PropertyContinuation  <  PropertyContinuation>();	  final    PropertyContinuations    <    PropertyContinuation>    finishPropertyContinuations();    	non-compiled	[CE]  cannot  find  symbol	115	None	replace
2092	[BUG]  [BUGGY]  final  PropertyContinuations  <  PropertyContinuation>  propertyContinuations  =  super.getPropertyContinuations();  [CE]  cannot  find  symbol  [FE]                                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  final  PropertyContinuations  <  PropertyContinuation>  propertyContinuations  =  super.getPropertyContinuations();  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	final  PropertyContinuations  <  PropertyContinuation>  propertyContinuations  =  super.getPropertyContinuations();	  final    PropertyContinuations    <    PropertyContinuation>    finishPropertyContinuations();    	non-compiled	[CE]  cannot  find  symbol	115	None	replace
2093	[BUG]  [BUGGY]  final  PropertyContinuations  <  PropertyContinuation>  propertyContinuations  =  getPropertyContinuations(propertyNode);  [CE]  cannot  find  symbol  [FE]                                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  final  PropertyContinuations  <  PropertyContinuation>  propertyContinuations  =  getPropertyContinuations(propertyNode);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	final  PropertyContinuations  <  PropertyContinuation>  propertyContinuations  =  getPropertyContinuations(propertyNode);	  final    PropertyContinuations    <    PropertyContinuation>    finishPropertyContinuations();    	non-compiled	[CE]  cannot  find  symbol	115	None	replace
2094	[BUG]  [BUGGY]  final  PropertyContinuations  <  PropertyContinuation>  propertyContinuations  =  getPropertyContinuations(property);  [CE]  cannot  find  symbol  [FE]                                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  final  PropertyContinuations  <  PropertyContinuation>  propertyContinuations  =  getPropertyContinuations(property);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	final  PropertyContinuations  <  PropertyContinuation>  propertyContinuations  =  getPropertyContinuations(property);	  final    PropertyContinuations    <    PropertyContinuation>    finishPropertyContinuations();    	non-compiled	[CE]  cannot  find  symbol	115	None	replace
2095	[BUG]  [BUGGY]  Annotations  inferred  =  forAnnotations?  getReferencedType()  :  finishPropertyContinuations();  }  else  {  registry.isLastGeneration()  :  this;  }  [CE]  [FE]                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Annotations  inferred  =  forAnnotations?  getReferencedType()  :  finishPropertyContinuations();  }  else  {  registry.isLastGeneration()  :  this;  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Annotations  inferred  =  forAnnotations?  getReferencedType()  :  finishPropertyContinuations();  }  else  {  registry.isLastGeneration()  :  this;  }	  Annotations    inferred    =    finishPropertyContinuations();    }    else    {    registry.isLastGeneration()    :    this;    }    	non-compiled	[CE]  	244	None	replace
2096	[BUG]  [BUGGY]  Annotations  inferred  =  getAnnotations();  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Annotations  inferred  =  getAnnotations();  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Annotations  inferred  =  getAnnotations();	  Annotations    inferred    =    finishPropertyContinuations();    }    else    {    registry.isLastGeneration()    :    this;    }    	non-compiled	[CE]  cannot  find  symbol	244	None	replace
2097	[BUG]  [BUGGY]  Annotations  inferred  =  this.forAnnotations?  getReferencedType()  :  finishPropertyContinuations();  }  else  {  registry.isLastGeneration()  :  this;  }  [CE]  [FE]                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Annotations  inferred  =  this.forAnnotations?  getReferencedType()  :  finishPropertyContinuations();  }  else  {  registry.isLastGeneration()  :  this;  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Annotations  inferred  =  this.forAnnotations?  getReferencedType()  :  finishPropertyContinuations();  }  else  {  registry.isLastGeneration()  :  this;  }	  Annotations    inferred    =    finishPropertyContinuations();    }    else    {    registry.isLastGeneration()    :    this;    }    	non-compiled	[CE]  	244	None	replace
2098	[BUG]  [BUGGY]  Annotations  inferred  =  getAnnotations();  }  else  {  registry.isLastGeneration()  :  this;  }  [CE]  [FE]                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Annotations  inferred  =  getAnnotations();  }  else  {  registry.isLastGeneration()  :  this;  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Annotations  inferred  =  getAnnotations();  }  else  {  registry.isLastGeneration()  :  this;  }	  Annotations    inferred    =    finishPropertyContinuations();    }    else    {    registry.isLastGeneration()    :    this;    }    	non-compiled	[CE]  	244	None	replace
2099	[BUG]  [BUGGY]  Annotations  inferred  =  getPropertyAnnotations();  }  else  {  registry.isLastGeneration()  :  this;  }  [CE]  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Annotations  inferred  =  getPropertyAnnotations();  }  else  {  registry.isLastGeneration()  :  this;  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Annotations  inferred  =  getPropertyAnnotations();  }  else  {  registry.isLastGeneration()  :  this;  }	  Annotations    inferred    =    finishPropertyContinuations();    }    else    {    registry.isLastGeneration()    :    this;    }    	non-compiled	[CE]  	244	None	replace
2100	[BUG]  [BUGGY]  Annotations  inferred  =  forAnnotations?  getReferencedType()  :  finishPropertyContinuations();  [CE]  cannot  find  symbol  [FE]                            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Annotations  inferred  =  forAnnotations?  getReferencedType()  :  finishPropertyContinuations();  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Annotations  inferred  =  forAnnotations?  getReferencedType()  :  finishPropertyContinuations();	  Annotations    inferred    =    finishPropertyContinuations();    }    else    {    registry.isLastGeneration()    :    this;    }    	non-compiled	[CE]  cannot  find  symbol	244	None	replace
2101	[BUG]  [BUGGY]  ParchetActualState.checkState(registry.isLastGeneration()?  getReferencedType()  :  registry.isLastGeneration());  [CE]  cannot  find  symbol  ParchetActualState  [FE]            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  ParchetActualState.checkState(registry.isLastGeneration()?  getReferencedType()  :  registry.isLastGeneration());  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	ParchetActualState.checkState(registry.isLastGeneration()?  getReferencedType()  :  registry.isLastGeneration());	  ParchetActualState.checkState(registry.isLastGeneration());    	non-compiled	[CE]  cannot  find  symbol  ParchetActualState	227	None	replace
2102	[BUG]  [BUGGY]  ParchetActualState.checkState(registry.isLastGeneration()?  registry.isLastGeneration()  :  registry.isLastGeneration());  [CE]  cannot  find  symbol  ParchetActualState  [FE]              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  ParchetActualState.checkState(registry.isLastGeneration()?  registry.isLastGeneration()  :  registry.isLastGeneration());  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	ParchetActualState.checkState(registry.isLastGeneration()?  registry.isLastGeneration()  :  registry.isLastGeneration());	  ParchetActualState.checkState(registry.isLastGeneration());    	non-compiled	[CE]  cannot  find  symbol  ParchetActualState	227	None	replace
2103	[BUG]  [BUGGY]  Predicates.checkState(validator!=  null,  registry.isLastGeneration());  [CE]  cannot  find  symbol  Predicates  [FE]                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Predicates.checkState(validator!=  null,  registry.isLastGeneration());  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Predicates.checkState(validator!=  null,  registry.isLastGeneration());	  Predicates.checkState(validator!=    null);    	non-compiled	[CE]  cannot  find  symbol  Predicates	140	None	replace
2104	[BUG]  [BUGGY]  Parchet.checkArgument(propertyContinuations!=  null);  [CE]  cannot  find  symbol  Parchet  [FE]                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Parchet.checkArgument(propertyContinuations!=  null);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Parchet.checkArgument(propertyContinuations!=  null);	  Parchet.checkNotNull(propertyContinuations);    	non-compiled	[CE]  cannot  find  symbol  Parchet	88	None	replace
2105	[BUG]  [BUGGY]  if(validator!=  null)  {  startPropertyContinuations();  }  else  {  registry.isFirstGeneration()  :  this;  }  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(validator!=  null)  {  startPropertyContinuations();  }  else  {  registry.isFirstGeneration()  :  this;  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(validator!=  null)  {  startPropertyContinuations();  }  else  {  registry.isFirstGeneration()  :  this;  }	  if(validator    ==    null)    {    finishPropertyContinuations();    }    else    {    registry.isFirstGeneration()    :    this;    }    	non-compiled	[CE]  ';'  expected	134	None	replace
2106	[BUG]  [BUGGY]  if(validator  ==  null)  {  startPropertyGeneration();  }  else  {  registry.isFirstGeneration()  :  this;  }  [CE]  ';'  expected  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(validator  ==  null)  {  startPropertyGeneration();  }  else  {  registry.isFirstGeneration()  :  this;  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(validator  ==  null)  {  startPropertyGeneration();  }  else  {  registry.isFirstGeneration()  :  this;  }	  if(validator    ==    null)    {    finishPropertyContinuations();    }    else    {    registry.isFirstGeneration()    :    this;    }    	non-compiled	[CE]  ';'  expected	134	None	replace
2107	[BUG]  [BUGGY]  Parchet.checkState(validator!=  null);  endPropertyContinuations();  [CE]  cannot  find  symbol  Parchet  [FE]                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Parchet.checkState(validator!=  null);  endPropertyContinuations();  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Parchet.checkState(validator!=  null);  endPropertyContinuations();	  Parchet.checkState(validator!=    null);    finishPropertyContinuations();    	non-compiled	[CE]  cannot  find  symbol  Parchet	33	None	replace
2108	[BUG]  [BUGGY]  if(registry!=  null)  {  startPropertyContinuations();  }  else  {  registry.isLastGeneration()?  getReferencedType()  :  this;  }  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(registry!=  null)  {  startPropertyContinuations();  }  else  {  registry.isLastGeneration()?  getReferencedType()  :  this;  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(registry!=  null)  {  startPropertyContinuations();  }  else  {  registry.isLastGeneration()?  getReferencedType()  :  this;  }	  if(validator!=    null)    {    startPropertyContinuations();    }    else    {    registry.isLastGeneration()?    getReferencedType()    :    this;    }    	non-compiled	[CE]  not  a  statement	234	None	replace
2109	[BUG]  [BUGGY]  if(validator  ==  null)  {  startPropertyContinuations();  }  else  {  registry.isLastGeneration()?  getReferencedType()  :  this;  }  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(validator  ==  null)  {  startPropertyContinuations();  }  else  {  registry.isLastGeneration()?  getReferencedType()  :  this;  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(validator  ==  null)  {  startPropertyContinuations();  }  else  {  registry.isLastGeneration()?  getReferencedType()  :  this;  }	  if(validator!=    null)    {    startPropertyContinuations();    }    else    {    registry.isLastGeneration()?    getReferencedType()    :    this;    }    	non-compiled	[CE]  not  a  statement	234	None	replace
2110	[BUG]  [BUGGY]  if(validator!=  null  &&  registry.isLastGeneration())  {  startPropertyContinuations();  }  [CE]  cannot  find  symbol  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(validator!=  null  &&  registry.isLastGeneration())  {  startPropertyContinuations();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(validator!=  null  &&  registry.isLastGeneration())  {  startPropertyContinuations();  }	  if(validator!=    null)    {    startPropertyContinuations();    }    else    {    registry.isLastGeneration()?    getReferencedType()    :    this;    }    	non-compiled	[CE]  cannot  find  symbol	234	None	replace
2111	[BUG]  [BUGGY]  luate(registry,  t)  {  finishPropertyContinuations();  }  else  {  registry.islastGeneration()?  getReferencedType()  :  null;  }  [CE]  ';'  expected  [FE]                              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  luate(registry,  t)  {  finishPropertyContinuations();  }  else  {  registry.islastGeneration()?  getReferencedType()  :  null;  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	luate(registry,  t)  {  finishPropertyContinuations();  }  else  {  registry.islastGeneration()?  getReferencedType()  :  null;  }	  luate(registry,    resolved)    {    finishPropertyContinuations();    }    else    {    registry.islastGeneration()?    getReferencedType()    :    null;    }    	non-compiled	[CE]  ';'  expected	184	None	replace
2112	[BUG]  [BUGGY]  Predicates.checkState(resolved  ==  getPropertyContinuations());  [CE]  cannot  find  symbol  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Predicates.checkState(resolved  ==  getPropertyContinuations());  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Predicates.checkState(resolved  ==  getPropertyContinuations());	  Predicates.checkState(resolved)    {    finishPropertyContinuations();    }    	non-compiled	[CE]  cannot  find  symbol	90	None	replace
2113	[BUG]  [BUGGY]  Predicates.checkState(resolved  ==  false);  [CE]  cannot  find  symbol  Predicates  [FE]                            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Predicates.checkState(resolved  ==  false);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Predicates.checkState(resolved  ==  false);	  Predicates.checkState(resolved)    {    finishPropertyContinuations();    }    	non-compiled	[CE]  cannot  find  symbol  Predicates	90	None	replace
2114	[BUG]  [BUGGY]  Predicates.checkState(resolved  ==!forAnnotations);  [CE]  cannot  find  symbol  forAnnotations  [FE]                              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Predicates.checkState(resolved  ==!forAnnotations);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Predicates.checkState(resolved  ==!forAnnotations);	  Predicates.checkState(resolved)    {    finishPropertyContinuations();    }    	non-compiled	[CE]  cannot  find  symbol  forAnnotations	90	None	replace
2115	[BUG]  [BUGGY]  Predicates.checkState(resolved  ==!propertyContinuations.isEmpty());  [CE]  cannot  find  symbol  Predicates  [FE]                                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Predicates.checkState(resolved  ==!propertyContinuations.isEmpty());  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Predicates.checkState(resolved  ==!propertyContinuations.isEmpty());	  Predicates.checkState(resolved)    {    finishPropertyContinuations();    }    	non-compiled	[CE]  cannot  find  symbol  Predicates	90	None	replace
2116	[BUG]  [BUGGY]  Annotation  <?>  propertyContinuations  =  propertyNode.getPropertyContinuations();  [CE]  cannot  find  symbol  [FE]                                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Annotation  <?>  propertyContinuations  =  propertyNode.getPropertyContinuations();  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Annotation  <?>  propertyContinuations  =  propertyNode.getPropertyContinuations();	  Annotation    <?>    propertyContinuations    =    registry.getPropertyContinuations();    	non-compiled	[CE]  cannot  find  symbol	200	None	replace
2117	[BUG]  [BUGGY]  Annotation  <?>  propertyContinuations  =  registry.getPropertyContinuationsForType(propertyName);  [CE]  cannot  find  symbol  [FE]                                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Annotation  <?>  propertyContinuations  =  registry.getPropertyContinuationsForType(propertyName);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Annotation  <?>  propertyContinuations  =  registry.getPropertyContinuationsForType(propertyName);	  Annotation    <?>    propertyContinuations    =    registry.getPropertyContinuations();    	non-compiled	[CE]  cannot  find  symbol	200	None	replace
2118	[BUG]  [BUGGY]  Status.checkState(registry.isLastGeneration(),  getReferencedType(),  t);  [CE]  cannot  find  symbol  Status  [FE]                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Status.checkState(registry.isLastGeneration(),  getReferencedType(),  t);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Status.checkState(registry.isLastGeneration(),  getReferencedType(),  t);	  Status.checkState(registry.isLastGeneration(),    getReferencedType());    	non-compiled	[CE]  cannot  find  symbol  Status	11	None	replace
2119	[BUG]  [BUGGY]  Status.checkState(registry.isLastGeneration(),  getReferencedType(),  type);  [CE]  cannot  find  symbol  type  [FE]                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Status.checkState(registry.isLastGeneration(),  getReferencedType(),  type);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Status.checkState(registry.isLastGeneration(),  getReferencedType(),  type);	  Status.checkState(registry.isLastGeneration(),    getReferencedType());    	non-compiled	[CE]  cannot  find  symbol  type	11	None	replace
2120	[BUG]  [BUGGY]  ensureType(propertyContinuations!=  null)  {  finishPropertyType();  }  else  {  getPropertyContinuations().addAll(propertyContinuations);  }  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  ensureType(propertyContinuations!=  null)  {  finishPropertyType();  }  else  {  getPropertyContinuations().addAll(propertyContinuations);  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	ensureType(propertyContinuations!=  null)  {  finishPropertyType();  }  else  {  getPropertyContinuations().addAll(propertyContinuations);  }	  if(propertyContinuations!=    null)    {    finishPropertyType();    }    else    {    getPropertyContinuations().addAll(propertyContinuations);    }    	non-compiled	[CE]  ';'  expected	122	None	replace
2121	[BUG]  [BUGGY]  if(propertyContinuations!=  null)  {  finishPropertyType();  }  else  {  propertyContinuations.addAll(propertyContinuations);  }  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(propertyContinuations!=  null)  {  finishPropertyType();  }  else  {  propertyContinuations.addAll(propertyContinuations);  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations!=  null)  {  finishPropertyType();  }  else  {  propertyContinuations.addAll(propertyContinuations);  }	  if(propertyContinuations!=    null)    {    finishPropertyType();    }    else    {    getPropertyContinuations().addAll(propertyContinuations);    }    	non-compiled	[CE]  cannot  find  symbol	122	None	replace
2122	[BUG]  [BUGGY]  if(propertyContinuations!=  null)  {  finishPropertyType();  }  else  {  getPropertyContinuations().addAll(propertyContinuations,  propertyNode);  }  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(propertyContinuations!=  null)  {  finishPropertyType();  }  else  {  getPropertyContinuations().addAll(propertyContinuations,  propertyNode);  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations!=  null)  {  finishPropertyType();  }  else  {  getPropertyContinuations().addAll(propertyContinuations,  propertyNode);  }	  if(propertyContinuations!=    null)    {    finishPropertyType();    }    else    {    getPropertyContinuations().addAll(propertyContinuations);    }    	non-compiled	[CE]  cannot  find  symbol	122	None	replace
2123	[BUG]  [BUGGY]  Annotations  props  =  getPropertyContinuationsForType(propertyNode);  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Annotations  props  =  getPropertyContinuationsForType(propertyNode);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Annotations  props  =  getPropertyContinuationsForType(propertyNode);	  Annotations    props    =    getPropertyContinuations();    	non-compiled	[CE]  cannot  find  symbol	229	None	replace
2124	[BUG]  [BUGGY]  Annotations  props  =  propertyContinuations.getPropertyAnnotations();  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Annotations  props  =  propertyContinuations.getPropertyAnnotations();  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Annotations  props  =  propertyContinuations.getPropertyAnnotations();	  Annotations    props    =    getPropertyContinuations();    	non-compiled	[CE]  cannot  find  symbol	229	None	replace
2125	[BUG]  [BUGGY]  if(validator  ==  null)  {  startPropertyGeneration();  }  else  {  registry.isLastGeneration()?  getReferencedType()  :  this;  }  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(validator  ==  null)  {  startPropertyGeneration();  }  else  {  registry.isLastGeneration()?  getReferencedType()  :  this;  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(validator  ==  null)  {  startPropertyGeneration();  }  else  {  registry.isLastGeneration()?  getReferencedType()  :  this;  }	  if(validator!=    null)    {    startPropertyGeneration();    }    else    {    registry.isLastGeneration()?    getReferencedType()    :    this;    }    	non-compiled	[CE]  not  a  statement	233	None	replace
2126	[BUG]  [BUGGY]  if(validator!=  null  &&  registry.isLastGeneration())  {  startPropertyGeneration();  }  else  {  registry.isLastGeneration()?  getReferencedType()  :  this;  }  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(validator!=  null  &&  registry.isLastGeneration())  {  startPropertyGeneration();  }  else  {  registry.isLastGeneration()?  getReferencedType()  :  this;  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(validator!=  null  &&  registry.isLastGeneration())  {  startPropertyGeneration();  }  else  {  registry.isLastGeneration()?  getReferencedType()  :  this;  }	  if(validator!=    null)    {    startPropertyGeneration();    }    else    {    registry.isLastGeneration()?    getReferencedType()    :    this;    }    	non-compiled	[CE]  not  a  statement	233	None	replace
2127	[BUG]  [BUGGY]  if(registry!=  null)  {  startPropertyGeneration();  }  else  {  registry.isLastGeneration()?  getReferencedType()  :  this;  }  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(registry!=  null)  {  startPropertyGeneration();  }  else  {  registry.isLastGeneration()?  getReferencedType()  :  this;  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(registry!=  null)  {  startPropertyGeneration();  }  else  {  registry.isLastGeneration()?  getReferencedType()  :  this;  }	  if(validator!=    null)    {    startPropertyGeneration();    }    else    {    registry.isLastGeneration()?    getReferencedType()    :    this;    }    	non-compiled	[CE]  not  a  statement	233	None	replace
2128	[BUG]  [BUGGY]  if(validator!=  null  &&  validator.isConstructor())  {  startPropertyGeneration();  }  else  {  registry.isLastGeneration()?  getReferencedType()  :  this;  }  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(validator!=  null  &&  validator.isConstructor())  {  startPropertyGeneration();  }  else  {  registry.isLastGeneration()?  getReferencedType()  :  this;  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(validator!=  null  &&  validator.isConstructor())  {  startPropertyGeneration();  }  else  {  registry.isLastGeneration()?  getReferencedType()  :  this;  }	  if(validator!=    null)    {    startPropertyGeneration();    }    else    {    registry.isLastGeneration()?    getReferencedType()    :    this;    }    	non-compiled	[CE]  not  a  statement	233	None	replace
2129	[BUG]  [BUGGY]  Status.checkState(validator!=  null,  registry.isLastGeneration());  [CE]  cannot  find  symbol  Status  [FE]                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Status.checkState(validator!=  null,  registry.isLastGeneration());  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Status.checkState(validator!=  null,  registry.isLastGeneration());	  Status.checkState(validator!=    null);    	non-compiled	[CE]  cannot  find  symbol  Status	30	None	replace
2130	[BUG]  [BUGGY]  Status.checkState(validator!=  null  &&  registry.isLastGeneration());  [CE]  cannot  find  symbol  Status  [FE]                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Status.checkState(validator!=  null  &&  registry.isLastGeneration());  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Status.checkState(validator!=  null  &&  registry.isLastGeneration());	  Status.checkState(validator!=    null);    	non-compiled	[CE]  cannot  find  symbol  Status	30	None	replace
2131	[BUG]  [BUGGY]  Status.checkState(this.validator!=  null);  [CE]  cannot  find  symbol  Status  [FE]                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Status.checkState(this.validator!=  null);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Status.checkState(this.validator!=  null);	  Status.checkState(validator!=    null);    	non-compiled	[CE]  cannot  find  symbol  Status	30	None	replace
2132	[BUG]  [BUGGY]  timeout  [FE]                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(propertyContinuations!=  null  &&  propertyContinuations.size()  >  2)  {  finishPropertyContinuations();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	add	if(propertyContinuations!=  null  &&  propertyContinuations.size()  >  2)  {  finishPropertyContinuations();  }	  if(propertyContinuations!=    null    &&    propertyContinuations.size()    >    0)    {    finishPropertyContinuations();    }    timeout    	compilable	timeout	257	1	replace
2133	[BUG]  [BUGGY]  if(propertyContinuations!=  null  &&  propertyContinuations.size()  >  2)  {  finishPropertyContinuations();  }  timeout  [FE]                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(propertyContinuations!=  null  &&  propertyContinuations.size()  >  2)  {  finishPropertyContinuations();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations!=  null  &&  propertyContinuations.size()  >  2)  {  finishPropertyContinuations();  }	  if(propertyContinuations!=    null    &&    propertyContinuations.size()    >    0)    {    finishPropertyContinuations();    }    timeout    	compilable	timeout	257	1	replace
2134	[BUG]  [BUGGY]  Register.isLastGeneration()?  getReferencedType()  :  registry.getNativeObjectType(JSTypeNative.UNKNOWN_TYPE);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Register.isLastGeneration()?  getReferencedType()  :  registry.getNativeObjectType(JSTypeNative.UNKNOWN_TYPE);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Register.isLastGeneration()?  getReferencedType()  :  registry.getNativeObjectType(JSTypeNative.UNKNOWN_TYPE);	  Register.isLastGeneration()?    getReferencedType()    :    this;    	non-compiled	[CE]  not  a  statement	245	None	replace
2135	[BUG]  [BUGGY]  Register.isLastGeneration()?  getReferencedType()  :  registry.resolveType(t,  enclosing);  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Register.isLastGeneration()?  getReferencedType()  :  registry.resolveType(t,  enclosing);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Register.isLastGeneration()?  getReferencedType()  :  registry.resolveType(t,  enclosing);	  Register.isLastGeneration()?    getReferencedType()    :    this;    	non-compiled	[CE]  not  a  statement	245	None	replace
2136	[BUG]  [BUGGY]  Register.isLastGeneration()?  getReferencedType()  :  Lists.newArrayList();  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Register.isLastGeneration()?  getReferencedType()  :  Lists.newArrayList();  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Register.isLastGeneration()?  getReferencedType()  :  Lists.newArrayList();	  Register.isLastGeneration()?    getReferencedType()    :    this;    	non-compiled	[CE]  not  a  statement	245	None	replace
2137	[BUG]  [BUGGY]  timeout  [FE]                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(detectImplicitPrototypeCycle())  {  resolveViaProperties(t,  enclosing);  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	add	if(detectImplicitPrototypeCycle())  {  resolveViaProperties(t,  enclosing);  }	  resolveViaProperties(t,    enclosing);    timeout    	compilable	timeout	86	1	replace
2138	[BUG]  [BUGGY]  if(detectImplicitPrototypeCycle())  {  resolveViaProperties(t,  enclosing);  }  timeout  [FE]                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(detectImplicitPrototypeCycle())  {  resolveViaProperties(t,  enclosing);  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(detectImplicitPrototypeCycle())  {  resolveViaProperties(t,  enclosing);  }	  resolveViaProperties(t,    enclosing);    timeout    	compilable	timeout	86	1	replace
2139	[BUG]  [BUGGY]  timeout  [FE]                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(validator!=  null)  {  resolveViaProperties(t,  enclosing);  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	add	if(validator!=  null)  {  resolveViaProperties(t,  enclosing);  }	  resolveViaProperties(t,    enclosing);    timeout    	compilable	timeout	86	1	replace
2140	[BUG]  [BUGGY]  if(validator!=  null)  {  resolveViaProperties(t,  enclosing);  }  timeout  [FE]                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(validator!=  null)  {  resolveViaProperties(t,  enclosing);  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(validator!=  null)  {  resolveViaProperties(t,  enclosing);  }	  resolveViaProperties(t,    enclosing);    timeout    	compilable	timeout	86	1	replace
2141	[BUG]  [BUGGY]  if(type!=  null)  {  resolveViaProperties(t,  enclosing);  timeout++;  }  [CE]  cannot  find  symbol  type  [FE]                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(type!=  null)  {  resolveViaProperties(t,  enclosing);  timeout++;  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(type!=  null)  {  resolveViaProperties(t,  enclosing);  timeout++;  }	  resolveViaProperties(t,    enclosing);    timeout    	non-compiled	[CE]  cannot  find  symbol  type	86	None	replace
2142	[BUG]  [BUGGY]  if(type!=  null)  {  resolveViaProperties(t,  enclosing);  timeout  =  System.currentTimeMillis();  }  [CE]  cannot  find  symbol  type  [FE]                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(type!=  null)  {  resolveViaProperties(t,  enclosing);  timeout  =  System.currentTimeMillis();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(type!=  null)  {  resolveViaProperties(t,  enclosing);  timeout  =  System.currentTimeMillis();  }	  resolveViaProperties(t,    enclosing);    timeout    	non-compiled	[CE]  cannot  find  symbol  type	86	None	replace
2143	[BUG]  [BUGGY]  if(type  ==  null)  {  resolveViaProperties(t,  enclosing);  timeout++;  }  [CE]  cannot  find  symbol  type  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(type  ==  null)  {  resolveViaProperties(t,  enclosing);  timeout++;  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(type  ==  null)  {  resolveViaProperties(t,  enclosing);  timeout++;  }	  resolveViaProperties(t,    enclosing);    timeout    	non-compiled	[CE]  cannot  find  symbol  type	86	None	replace
2144	[BUG]  [BUGGY]  if(type!=  null)  {  finishPropertyAnnotations();  }  [CE]  cannot  find  symbol  type  [FE]                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(type!=  null)  {  finishPropertyAnnotations();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(type!=  null)  {  finishPropertyAnnotations();  }	  if(validator!=    null)    {    finishPropertyContinuations();    }    if(validator    >>    null)    {    finishPropertyContinuations();    }    	non-compiled	[CE]  cannot  find  symbol  type	57	None	replace
2145	[BUG]  [BUGGY]  aughtExceptionHandler.handleTypeCycle(t,  registry);  [CE]  cannot  find  symbol  aughtExceptionHandler  [FE]              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  aughtExceptionHandler.handleTypeCycle(t,  registry);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	aughtExceptionHandler.handleTypeCycle(t,  registry);	  aughtExceptionHandler.handleTypeCycle(t,    propertyNode);    	non-compiled	[CE]  cannot  find  symbol  aughtExceptionHandler	228	None	replace
2146	[BUG]  [BUGGY]  aughtExceptionHandler.handleTypeCycle(t,  propertyName);  [CE]  cannot  find  symbol  propertyName  [FE]                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  aughtExceptionHandler.handleTypeCycle(t,  propertyName);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	aughtExceptionHandler.handleTypeCycle(t,  propertyName);	  aughtExceptionHandler.handleTypeCycle(t,    propertyNode);    	non-compiled	[CE]  cannot  find  symbol  propertyName	228	None	replace
2147	[BUG]  [BUGGY]  registry.isLocal()?  getReferencedType()  :  null;  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  registry.isLocal()?  getReferencedType()  :  null;  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	registry.isLocal()?  getReferencedType()  :  null;	  registry.isLastGeneration()?    getReferencedType()    :    null;    	non-compiled	[CE]  not  a  statement	72	None	replace
2148	[BUG]  [BUGGY]  registry.isLastGeneration()?  getSimpleType()  :  null;  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  registry.isLastGeneration()?  getSimpleType()  :  null;  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	registry.isLastGeneration()?  getSimpleType()  :  null;	  registry.isLastGeneration()?    getReferencedType()    :    null;    	non-compiled	[CE]  not  a  statement	72	None	replace
2149	[BUG]  [BUGGY]  if(validator!=    null)    {    finishPropertyContinuations();    }    if(validator  ==  null)  {  finishPropertyContinuations();  }  if(validator!=  null)  {  startPropertyContinuations();  }  if(validator  ==  null)  {  finishPropertyContinuations();  }  if(validator  ==  null)  {  finishPropertyContinuations();  }  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(validator!=    null)    {    finishPropertyContinuations();    }    if(validator  ==  null)  {  finishPropertyContinuations();  }  if(validator!=  null)  {  startPropertyContinuations();  }  if(validator  ==  null)  {  finishPropertyContinuations();  }  if(validator  ==  null)  {  finishPropertyContinuations();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(validator!=        null)        {        finishPropertyContinuations();        }        if(validator    ==    null)    {    finishPropertyContinuations();    }    if(validator!=  null)  {  startPropertyContinuations();  }  if(validator  ==  null)  {  finishPropertyContinuations();  }  if(validator  ==  null)  {  finishPropertyContinuations();  }	  timeout    	non-compiled	[CE]  cannot  find  symbol	52	None	add
2150	[BUG]  [BUGGY]  if(validator!=    null)    {    finishPropertyContinuations();    }    if(validator  ==  null)  {  finishPropertyContinuations();  }  if(validator!=  null)  {  finishPropertyContinuations();  }  if(validator  ==  null)  {  finishPropertyContinuations();  }  if(validator  ==  null)  {  finishPropertyContinuations()  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(validator!=    null)    {    finishPropertyContinuations();    }    if(validator  ==  null)  {  finishPropertyContinuations();  }  if(validator!=  null)  {  finishPropertyContinuations();  }  if(validator  ==  null)  {  finishPropertyContinuations();  }  if(validator  ==  null)  {  finishPropertyContinuations()  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(validator!=        null)        {        finishPropertyContinuations();        }        if(validator    ==    null)    {    finishPropertyContinuations();    }    if(validator!=  null)  {  finishPropertyContinuations();  }  if(validator  ==  null)  {  finishPropertyContinuations();  }  if(validator  ==  null)  {  finishPropertyContinuations()	  timeout    	non-compiled	[CE]  ';'  expected	52	None	add
2151	[BUG]  [BUGGY]  if(validator!=    null)    {    finishPropertyContinuations();    }    if(validator  ==  null)  {  finishPropertyContinuations();  }  if(validator  >=  null)  {  finishPropertyContinuations();  }  if(validator  ==  null)  {  finishPropertyContinuations();  }  if(validator  ==  null)  {  finishPropertyContinuations();  }  [CE]  bad  operand  types  for  binary  operator  '>='  [FE]                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(validator!=    null)    {    finishPropertyContinuations();    }    if(validator  ==  null)  {  finishPropertyContinuations();  }  if(validator  >=  null)  {  finishPropertyContinuations();  }  if(validator  ==  null)  {  finishPropertyContinuations();  }  if(validator  ==  null)  {  finishPropertyContinuations();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(validator!=        null)        {        finishPropertyContinuations();        }        if(validator    ==    null)    {    finishPropertyContinuations();    }    if(validator  >=  null)  {  finishPropertyContinuations();  }  if(validator  ==  null)  {  finishPropertyContinuations();  }  if(validator  ==  null)  {  finishPropertyContinuations();  }	  timeout    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>='	52	None	add
2152	[BUG]  [BUGGY]  if(validator!=    null)    {    finishPropertyContinuations();    }    if(validator  ==  null)  {  finishPropertyContinuations();  }  if(validator!=  null)  {  finishPropertyContinuations();  }  if(validator  ==  null)  {  finishPropertyContinuations();  }  if(validator  ==  null)  {  finishPropertyContinuations();  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(validator!=    null)    {    finishPropertyContinuations();    }    if(validator  ==  null)  {  finishPropertyContinuations();  }  if(validator!=  null)  {  finishPropertyContinuations();  }  if(validator  ==  null)  {  finishPropertyContinuations();  }  if(validator  ==  null)  {  finishPropertyContinuations();  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(validator!=        null)        {        finishPropertyContinuations();        }        if(validator    ==    null)    {    finishPropertyContinuations();    }    if(validator!=  null)  {  finishPropertyContinuations();  }  if(validator  ==  null)  {  finishPropertyContinuations();  }  if(validator  ==  null)  {  finishPropertyContinuations();	  timeout    	non-compiled	[CE]  illegal  start  of  expression	52	None	add
2153	[BUG]  [BUGGY]  if(validator!=    null)    {    finishPropertyContinuations();    }    if(validator  ==  null)  {  finishPropertyContinuations();  }  if(validator!=  null)  {  finishPropertyContinuations();  }  if(validator  ==  null)  {  startPropertyContinuations();  }  if(validator  ==  null)  {  finishPropertyContinuations();  }  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(validator!=    null)    {    finishPropertyContinuations();    }    if(validator  ==  null)  {  finishPropertyContinuations();  }  if(validator!=  null)  {  finishPropertyContinuations();  }  if(validator  ==  null)  {  startPropertyContinuations();  }  if(validator  ==  null)  {  finishPropertyContinuations();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(validator!=        null)        {        finishPropertyContinuations();        }        if(validator    ==    null)    {    finishPropertyContinuations();    }    if(validator!=  null)  {  finishPropertyContinuations();  }  if(validator  ==  null)  {  startPropertyContinuations();  }  if(validator  ==  null)  {  finishPropertyContinuations();  }	  timeout    	non-compiled	[CE]  cannot  find  symbol	52	None	add
2154	[BUG]  [BUGGY]  final  PropertyContinuations  <  Node>  propertyContinuations  =  getPropertyContinuationsForType(propertyNode);  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  final  PropertyContinuations  <  Node>  propertyContinuations  =  getPropertyContinuationsForType(propertyNode);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	final  PropertyContinuations  <  Node>  propertyContinuations  =  getPropertyContinuationsForType(propertyNode);	  final    PropertyContinuations    <    Node>    propertyContinuations    =    getPropertyContinuations();    	non-compiled	[CE]  cannot  find  symbol	135	None	replace
2155	[BUG]  [BUGGY]  final  PropertyContinuations  <  Node>  propertyContinuations  =  getPropertyContinuationsForScope();  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  final  PropertyContinuations  <  Node>  propertyContinuations  =  getPropertyContinuationsForScope();  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	final  PropertyContinuations  <  Node>  propertyContinuations  =  getPropertyContinuationsForScope();	  final    PropertyContinuations    <    Node>    propertyContinuations    =    getPropertyContinuations();    	non-compiled	[CE]  cannot  find  symbol	135	None	replace
2156	[BUG]  [BUGGY]  final  PropertyContinuations  <  Node>  propertyContinuations  =  getPropertyContinuationsForType();  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  final  PropertyContinuations  <  Node>  propertyContinuations  =  getPropertyContinuationsForType();  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	final  PropertyContinuations  <  Node>  propertyContinuations  =  getPropertyContinuationsForType();	  final    PropertyContinuations    <    Node>    propertyContinuations    =    getPropertyContinuations();    	non-compiled	[CE]  cannot  find  symbol	135	None	replace
2157	[BUG]  [BUGGY]  Parchet.checkState(resolved  ||  propertyNode  ==  null)  {  finishPropertyContinuations();  }  else  {  Registry.isLastGeneration()  :  this;  }  [CE]  ';'  expected  [FE]                            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Parchet.checkState(resolved  ||  propertyNode  ==  null)  {  finishPropertyContinuations();  }  else  {  Registry.isLastGeneration()  :  this;  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Parchet.checkState(resolved  ||  propertyNode  ==  null)  {  finishPropertyContinuations();  }  else  {  Registry.isLastGeneration()  :  this;  }	  Parchet.checkState(resolved    ||    resolved)    {    finishPropertyContinuations();    }    else    {    Registry.isLastGeneration()    :    this;    }    	non-compiled	[CE]  ';'  expected	111	None	replace
2158	[BUG]  [BUGGY]  Parchet.checkState(resolved  ||!resolved)  {  finishPropertyContinuations();  }  [CE]  ';'  expected  [FE]                              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Parchet.checkState(resolved  ||!resolved)  {  finishPropertyContinuations();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Parchet.checkState(resolved  ||!resolved)  {  finishPropertyContinuations();  }	  Parchet.checkState(resolved    ||    resolved)    {    finishPropertyContinuations();    }    else    {    Registry.isLastGeneration()    :    this;    }    	non-compiled	[CE]  ';'  expected	111	None	replace
2159	[BUG]  [BUGGY]  Preconditions.checkState(resolved!=  t);  [CE]  incomparable  types:  boolean  and  ErrorReporter  [FE]                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Preconditions.checkState(resolved!=  t);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Preconditions.checkState(resolved!=  t);	  Preconditions.checkState(resolved);    timeout    	non-compiled	[CE]  incomparable  types:  boolean  and  ErrorReporter	221	None	replace
2160	[BUG]  [BUGGY]  Preconditions.checkState(resolved  ==  t);  [CE]  incomparable  types:  boolean  and  ErrorReporter  [FE]                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Preconditions.checkState(resolved  ==  t);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Preconditions.checkState(resolved  ==  t);	  Preconditions.checkState(resolved);    timeout    	non-compiled	[CE]  incomparable  types:  boolean  and  ErrorReporter	221	None	replace
2161	[BUG]  [BUGGY]  Preconditions.checkArgument(resolved!=  null);  [CE]  incomparable  types:  boolean  and  <null>  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Preconditions.checkArgument(resolved!=  null);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Preconditions.checkArgument(resolved!=  null);	  Preconditions.checkState(resolved);    timeout    	non-compiled	[CE]  incomparable  types:  boolean  and  <null>	221	None	replace
2162	[BUG]  [BUGGY]  Preconditions.checkState(resolved!=  propertyNode);  [CE]  cannot  find  symbol  propertyNode  [FE]                            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Preconditions.checkState(resolved!=  propertyNode);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Preconditions.checkState(resolved!=  propertyNode);	  Preconditions.checkState(resolved);    timeout    	non-compiled	[CE]  cannot  find  symbol  propertyNode	221	None	replace
2163	[BUG]  [BUGGY]  Annotations  registry  =  getRegistry();  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Annotations  registry  =  getRegistry();  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Annotations  registry  =  getRegistry();	  if(resolved)    {    finishPropertyAnnotations();    }    	non-compiled	[CE]  cannot  find  symbol	128	None	replace
2164	[BUG]  [BUGGY]  predicate.setPropertyType(propertyName);  [CE]  cannot  find  symbol  propertyName  [FE]                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  predicate.setPropertyType(propertyName);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	predicate.setPropertyType(propertyName);	  predicate.finishPropertyType(resolved);    	non-compiled	[CE]  cannot  find  symbol  propertyName	143	None	replace
2165	[BUG]  [BUGGY]  predicate.finishPropertyType(propertyNode);  [CE]  cannot  find  symbol  propertyNode  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  predicate.finishPropertyType(propertyNode);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	predicate.finishPropertyType(propertyNode);	  predicate.finishPropertyType(resolved);    	non-compiled	[CE]  cannot  find  symbol  propertyNode	143	None	replace
2166	[BUG]  [BUGGY]  predicate.setPropertyType(resolved);  [CE]  cannot  find  symbol  predicate  [FE]                            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  predicate.setPropertyType(resolved);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	predicate.setPropertyType(resolved);	  predicate.finishPropertyType(resolved);    	non-compiled	[CE]  cannot  find  symbol  predicate	143	None	replace
2167	[BUG]  [BUGGY]  propertyContinuations!=  null  &&  propertyContinuations.size()  >  0)  {  finishPropertyContinuations();  }  else  {  registry.isFirstGeneration()?  getReferencedType()  :  this;  }  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  propertyContinuations!=  null  &&  propertyContinuations.size()  >  0)  {  finishPropertyContinuations();  }  else  {  registry.isFirstGeneration()?  getReferencedType()  :  this;  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	propertyContinuations!=  null  &&  propertyContinuations.size()  >  0)  {  finishPropertyContinuations();  }  else  {  registry.isFirstGeneration()?  getReferencedType()  :  this;  }	  if(propertyContinuations!=    null)    {    finishPropertyContinuations();    }    else    {    registry.isFirstGeneration()?    getReferencedType()    :    this;    }    	non-compiled	[CE]  not  a  statement	215	None	replace
2168	[BUG]  [BUGGY]  propertyContinuations!=  null  &&  propertyContinuations.size()  >  0)  {  startPropertyContinuations();  }  else  {  registry.isFirstGeneration()?  getReferencedType()  :  this;  }  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  propertyContinuations!=  null  &&  propertyContinuations.size()  >  0)  {  startPropertyContinuations();  }  else  {  registry.isFirstGeneration()?  getReferencedType()  :  this;  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	propertyContinuations!=  null  &&  propertyContinuations.size()  >  0)  {  startPropertyContinuations();  }  else  {  registry.isFirstGeneration()?  getReferencedType()  :  this;  }	  if(propertyContinuations!=    null)    {    finishPropertyContinuations();    }    else    {    registry.isFirstGeneration()?    getReferencedType()    :    this;    }    	non-compiled	[CE]  not  a  statement	215	None	replace
2169	[BUG]  [BUGGY]  For(propertyContinuations!=  null)  {  finishPropertyGeneration();  }  else  {  forAnnotations  =  Collections.emptyList();  }  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  For(propertyContinuations!=  null)  {  finishPropertyGeneration();  }  else  {  forAnnotations  =  Collections.emptyList();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	For(propertyContinuations!=  null)  {  finishPropertyGeneration();  }  else  {  forAnnotations  =  Collections.emptyList();  }	  if(propertyContinuations!=    null)    {    finishPropertyGeneration();    }    else    {    forAnnotations    =    Collections.emptyList();    }    	non-compiled	[CE]  ';'  expected	251	None	replace
2170	[BUG]  [BUGGY]  if(propertyContinuations  ==  null)  {  finishPropertyContinuations();  }  else  {  register.isLastGeneration()?  getReferencedType()  :  this;  }  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(propertyContinuations  ==  null)  {  finishPropertyContinuations();  }  else  {  register.isLastGeneration()?  getReferencedType()  :  this;  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations  ==  null)  {  finishPropertyContinuations();  }  else  {  register.isLastGeneration()?  getReferencedType()  :  this;  }	  if(propertyContinuations!=    null)    {    finishPropertyContinuations();    }    else    {    register.isLastGeneration()?    getReferencedType()    :    this;    }    	non-compiled	[CE]  not  a  statement	216	None	replace
2171	[BUG]  [BUGGY]  if(propertyContinuations!=  null)  {  startPropertyGeneration();  }  else  {  register.isLastGeneration()?  getReferencedType()  :  this;  }  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(propertyContinuations!=  null)  {  startPropertyGeneration();  }  else  {  register.isLastGeneration()?  getReferencedType()  :  this;  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations!=  null)  {  startPropertyGeneration();  }  else  {  register.isLastGeneration()?  getReferencedType()  :  this;  }	  if(propertyContinuations!=    null)    {    finishPropertyContinuations();    }    else    {    register.isLastGeneration()?    getReferencedType()    :    this;    }    	non-compiled	[CE]  not  a  statement	216	None	replace
2172	[BUG]  [BUGGY]  ObjectImplicitPrototypeCycle.handlePropertyType(t,  enclosing);  [CE]  cannot  find  symbol  ObjectImplicitPrototypeCycle  [FE]                                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  ObjectImplicitPrototypeCycle.handlePropertyType(t,  enclosing);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	ObjectImplicitPrototypeCycle.handlePropertyType(t,  enclosing);	  aughtExceptionHandler.handlePropertyType(t,    enclosing);    	non-compiled	[CE]  cannot  find  symbol  ObjectImplicitPrototypeCycle	199	None	replace
2173	[BUG]  [BUGGY]  JSType  type  =  t.handlePropertyType(t,  enclosing);  [CE]  cannot  find  symbol  [FE]                                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  JSType  type  =  t.handlePropertyType(t,  enclosing);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	JSType  type  =  t.handlePropertyType(t,  enclosing);	  aughtExceptionHandler.handlePropertyType(t,    enclosing);    	non-compiled	[CE]  cannot  find  symbol	199	None	replace
2174	[BUG]  [BUGGY]  JSType  type  =  t.getPropertyType(propertyName);  [CE]  cannot  find  symbol  propertyName  [FE]                                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  JSType  type  =  t.getPropertyType(propertyName);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	JSType  type  =  t.getPropertyType(propertyName);	  aughtExceptionHandler.handlePropertyType(t,    enclosing);    	non-compiled	[CE]  cannot  find  symbol  propertyName	199	None	replace
2175	[BUG]  [BUGGY]  enableExceptionHandler(t,  enclosing);  [CE]  cannot  find  symbol  [FE]                                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  enableExceptionHandler(t,  enclosing);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	enableExceptionHandler(t,  enclosing);	  aughtExceptionHandler.handlePropertyType(t,    enclosing);    	non-compiled	[CE]  cannot  find  symbol	199	None	replace
2176	[BUG]  [BUGGY]  assistExceptionHandler(t,  enclosing);  [CE]  cannot  find  symbol  [FE]                                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  assistExceptionHandler(t,  enclosing);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	assistExceptionHandler(t,  enclosing);	  aughtExceptionHandler.handlePropertyType(t,    enclosing);    	non-compiled	[CE]  cannot  find  symbol	199	None	replace
2177	[BUG]  [BUGGY]  JSType  type  =  t.handlePropertyType(propertyName,  enclosing);  [CE]  cannot  find  symbol  propertyName  [FE]                                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  JSType  type  =  t.handlePropertyType(propertyName,  enclosing);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	JSType  type  =  t.handlePropertyType(propertyName,  enclosing);	  aughtExceptionHandler.handlePropertyType(t,    enclosing);    	non-compiled	[CE]  cannot  find  symbol  propertyName	199	None	replace
2178	[BUG]  [BUGGY]  ensurePropertyContinuations()  &&  registry.isLastGeneration()  &&  propertyNode!=  null;  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  ensurePropertyContinuations()  &&  registry.isLastGeneration()  &&  propertyNode!=  null;  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	ensurePropertyContinuations()  &&  registry.isLastGeneration()  &&  propertyNode!=  null;	  ensurePropertyContinuations()    &&    propertyNode!=    null;    	non-compiled	[CE]  not  a  statement	170	None	replace
2179	[BUG]  [BUGGY]  if(validator!=  null  &&  propertyContinuations.isProperty())  {  finishPropertyContinuations();  }  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(validator!=  null  &&  propertyContinuations.isProperty())  {  finishPropertyContinuations();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(validator!=  null  &&  propertyContinuations.isProperty())  {  finishPropertyContinuations();  }	  if(validator!=    null    &&    validator.isProperty())    {    finishPropertyContinuations();    }    	non-compiled	[CE]  cannot  find  symbol	210	None	replace
2180	[BUG]  [BUGGY]  if(validator!=  null  &&  registry.isPropertyContinuations())  {  finishPropertyContinuations();  }  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(validator!=  null  &&  registry.isPropertyContinuations())  {  finishPropertyContinuations();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(validator!=  null  &&  registry.isPropertyContinuations())  {  finishPropertyContinuations();  }	  if(validator!=    null    &&    validator.isProperty())    {    finishPropertyContinuations();    }    	non-compiled	[CE]  cannot  find  symbol	210	None	replace
2181	[BUG]  [BUGGY]  if(validator!=  null  &&  propertyNode.isProperty())  {  finishPropertyContinuations();  }  [CE]  cannot  find  symbol  propertyNode  [FE]                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(validator!=  null  &&  propertyNode.isProperty())  {  finishPropertyContinuations();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(validator!=  null  &&  propertyNode.isProperty())  {  finishPropertyContinuations();  }	  if(validator!=    null    &&    validator.isProperty())    {    finishPropertyContinuations();    }    	non-compiled	[CE]  cannot  find  symbol  propertyNode	210	None	replace
2182	[BUG]  [BUGGY]  luate(registry,  enclosing)  {  finishPropertyContinuations();  }  else  {  registry.isFirstGeneration()?  getReferencedType()  :  null;  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  luate(registry,  enclosing)  {  finishPropertyContinuations();  }  else  {  registry.isFirstGeneration()?  getReferencedType()  :  null;  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	luate(registry,  enclosing)  {  finishPropertyContinuations();  }  else  {  registry.isFirstGeneration()?  getReferencedType()  :  null;	  luate(registry,    resolved)    {    finishPropertyContinuations();    }    else    {    registry.isLastGeneration()?    getReferencedType()    :    null;    	non-compiled	[CE]  ';'  expected	181	None	replace
2183	[BUG]  [BUGGY]  final  PropertyContinuations  <  PropertyContinuation>  propertyContinuations();  [CE]  ';'  expected  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  final  PropertyContinuations  <  PropertyContinuation>  propertyContinuations();  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	final  PropertyContinuations  <  PropertyContinuation>  propertyContinuations();	  final    PropertyContinuations    <    PropertyContinuation>    startPropertyContinuations();    	non-compiled	[CE]  ';'  expected	113	None	replace
2184	[BUG]  [BUGGY]  final  PropertyContinuations  <  PropertyContinuation>  propertyContinuations  =  startPropertyContinuations();  [CE]  cannot  find  symbol  [FE]                            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  final  PropertyContinuations  <  PropertyContinuation>  propertyContinuations  =  startPropertyContinuations();  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	final  PropertyContinuations  <  PropertyContinuation>  propertyContinuations  =  startPropertyContinuations();	  final    PropertyContinuations    <    PropertyContinuation>    startPropertyContinuations();    	non-compiled	[CE]  cannot  find  symbol	113	None	replace
2185	[BUG]  [BUGGY]  if(registry!=  null)  {  finishPropropertyContinuations();  }  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(registry!=  null)  {  finishPropropertyContinuations();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(registry!=  null)  {  finishPropropertyContinuations();  }	  if(validator!=    null)    {    finishPropertyContinuations();    }    if(validator!=    null)    {    finishPropropertyContinuations();    }    	non-compiled	[CE]  cannot  find  symbol	255	None	replace
2186	[BUG]  [BUGGY]  if(forAnnotations!=  null)  {  finishPropropertyContinuations();  }  [CE]  cannot  find  symbol  forAnnotations  [FE]              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(forAnnotations!=  null)  {  finishPropropertyContinuations();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(forAnnotations!=  null)  {  finishPropropertyContinuations();  }	  if(validator!=    null)    {    finishPropertyContinuations();    }    if(validator!=    null)    {    finishPropropertyContinuations();    }    	non-compiled	[CE]  cannot  find  symbol  forAnnotations	255	None	replace
2187	[BUG]  [BUGGY]  if(register!=  null)  {  finishPropropertyContinuations();  }  [CE]  cannot  find  symbol  register  [FE]                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(register!=  null)  {  finishPropropertyContinuations();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(register!=  null)  {  finishPropropertyContinuations();  }	  if(validator!=    null)    {    finishPropertyContinuations();    }    if(validator!=    null)    {    finishPropropertyContinuations();    }    	non-compiled	[CE]  cannot  find  symbol  register	255	None	replace
2188	[BUG]  [BUGGY]  if(validator!=  null  &&  validator.isPropertyType())  {  finishPropertyType();  }  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(validator!=  null  &&  validator.isPropertyType())  {  finishPropertyType();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(validator!=  null  &&  validator.isPropertyType())  {  finishPropertyType();  }	  if(validator!=    null)    {    finishPropertyType();    }    	non-compiled	[CE]  cannot  find  symbol	162	None	replace
2189	[BUG]  [BUGGY]  if(validator!=  null  &&  registry.isLastGeneration())  {  startPropertyType();  }  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(validator!=  null  &&  registry.isLastGeneration())  {  startPropertyType();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(validator!=  null  &&  registry.isLastGeneration())  {  startPropertyType();  }	  if(validator!=    null)    {    finishPropertyType();    }    	non-compiled	[CE]  cannot  find  symbol	162	None	replace
2190	[BUG]  [BUGGY]  if(validator!=  null  &&  validatePropertyType())  {  finishPropertyType();  }  [CE]  cannot  find  symbol  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(validator!=  null  &&  validatePropertyType())  {  finishPropertyType();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(validator!=  null  &&  validatePropertyType())  {  finishPropertyType();  }	  if(validator!=    null)    {    finishPropertyType();    }    	non-compiled	[CE]  cannot  find  symbol	162	None	replace
2191	[BUG]  [BUGGY]  if(validator!=  null  &&  validator.isProperty())  {  finishPropertyType();  }  [CE]  cannot  find  symbol  [FE]                            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(validator!=  null  &&  validator.isProperty())  {  finishPropertyType();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(validator!=  null  &&  validator.isProperty())  {  finishPropertyType();  }	  if(validator!=    null)    {    finishPropertyType();    }    	non-compiled	[CE]  cannot  find  symbol	162	None	replace
2192	[BUG]  [BUGGY]  Integer  propertyContinuations  =  getPropertyContinuations(propertyName);  [CE]  cannot  find  symbol  propertyName  [FE]                                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Integer  propertyContinuations  =  getPropertyContinuations(propertyName);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Integer  propertyContinuations  =  getPropertyContinuations(propertyName);	  if(propertyContinuations    ==    null)    {    finishPropertyContinuations();    }    if(propertyContinuations    >>    null)    {    finishPropertyContinuations();    }    	non-compiled	[CE]  cannot  find  symbol  propertyName	48	None	replace
2193	[BUG]  [BUGGY]  Integer  propertyContinuations  =  getPropertyContinuations();  [CE]  cannot  find  symbol  [FE]                                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Integer  propertyContinuations  =  getPropertyContinuations();  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Integer  propertyContinuations  =  getPropertyContinuations();	  if(propertyContinuations    ==    null)    {    finishPropertyContinuations();    }    if(propertyContinuations    >>    null)    {    finishPropertyContinuations();    }    	non-compiled	[CE]  cannot  find  symbol	48	None	replace
2194	[BUG]  [BUGGY]  PropertyContinuation  <  Object>  propertyContinuations  =  getPropertyContinuations(propertyNamingStrategy);  [CE]  type  PropertyContinuation  does  not  take  parameters  [FE]                            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  PropertyContinuation  <  Object>  propertyContinuations  =  getPropertyContinuations(propertyNamingStrategy);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	PropertyContinuation  <  Object>  propertyContinuations  =  getPropertyContinuations(propertyNamingStrategy);	  PropertyContinuation    <    Object>    propertyContinuations    =    getPropertyContinuations();    	non-compiled	[CE]  type  PropertyContinuation  does  not  take  parameters	148	None	replace
2195	[BUG]  [BUGGY]  PropertyContinuation  <  Object>  propertyContinuations  =  getPropertyContinuationsForType(propertyNode);  [CE]  type  PropertyContinuation  does  not  take  parameters  [FE]                              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  PropertyContinuation  <  Object>  propertyContinuations  =  getPropertyContinuationsForType(propertyNode);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	PropertyContinuation  <  Object>  propertyContinuations  =  getPropertyContinuationsForType(propertyNode);	  PropertyContinuation    <    Object>    propertyContinuations    =    getPropertyContinuations();    	non-compiled	[CE]  type  PropertyContinuation  does  not  take  parameters	148	None	replace
2196	[BUG]  [BUGGY]  if(validator!=  null  &&  validator.hasProperty(propertyName))  {  startPropertyGeneration();  }  else  {  registry.isLastGeneration()  :  this;  }  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(validator!=  null  &&  validator.hasProperty(propertyName))  {  startPropertyGeneration();  }  else  {  registry.isLastGeneration()  :  this;  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(validator!=  null  &&  validator.hasProperty(propertyName))  {  startPropertyGeneration();  }  else  {  registry.isLastGeneration()  :  this;  }	  if(validator!=    null)    {    startPropertyGeneration();    }    else    {    registry.isLastGeneration()    :    this;    }    	non-compiled	[CE]  ';'  expected	242	None	replace
2197	[BUG]  [BUGGY]  if(registry!=  null)  {  startPropertyGeneration();  }  else  {  registry.isLastGeneration()  :  this;  }  [CE]  ';'  expected  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(registry!=  null)  {  startPropertyGeneration();  }  else  {  registry.isLastGeneration()  :  this;  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(registry!=  null)  {  startPropertyGeneration();  }  else  {  registry.isLastGeneration()  :  this;  }	  if(validator!=    null)    {    startPropertyGeneration();    }    else    {    registry.isLastGeneration()    :    this;    }    	non-compiled	[CE]  ';'  expected	242	None	replace
2198	[BUG]  [BUGGY]  if(validator!=  null  &&  validator.isConstructor())  {  startPropertyGeneration();  }  else  {  registry.isLastGeneration()  :  this;  }  [CE]  ';'  expected  [FE]                            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(validator!=  null  &&  validator.isConstructor())  {  startPropertyGeneration();  }  else  {  registry.isLastGeneration()  :  this;  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(validator!=  null  &&  validator.isConstructor())  {  startPropertyGeneration();  }  else  {  registry.isLastGeneration()  :  this;  }	  if(validator!=    null)    {    startPropertyGeneration();    }    else    {    registry.isLastGeneration()    :    this;    }    	non-compiled	[CE]  ';'  expected	242	None	replace
2199	[BUG]  [BUGGY]  if(propertyContinuations!=  null)  {  endPropertyInferred();  }  else  {  propertyContinuations.add(propertyName);  }  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(propertyContinuations!=  null)  {  endPropertyInferred();  }  else  {  propertyContinuations.add(propertyName);  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations!=  null)  {  endPropertyInferred();  }  else  {  propertyContinuations.add(propertyName);  }	  if(propertyContinuations!=    null)    {    finishPropertyInferred();    }    else    {    propertyContinuations.add(propertyName);    }    	non-compiled	[CE]  cannot  find  symbol	150	None	replace
2200	[BUG]  [BUGGY]  Predicates.checkState(!detectImplicitPrototypeCycle());  [CE]  cannot  find  symbol  Predicates  [FE]                            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Predicates.checkState(!detectImplicitPrototypeCycle());  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Predicates.checkState(!detectImplicitPrototypeCycle());	  Predicates.checkState(detectImplicitPrototypeCycle());    	non-compiled	[CE]  cannot  find  symbol  Predicates	126	None	replace
2201	[BUG]  [BUGGY]  Predicates.checkState(detectTypeCycle());  [CE]  cannot  find  symbol  [FE]                              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Predicates.checkState(detectTypeCycle());  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Predicates.checkState(detectTypeCycle());	  Predicates.checkState(detectImplicitPrototypeCycle());    	non-compiled	[CE]  cannot  find  symbol	126	None	replace
2202	[BUG]  [BUGGY]  Predicates.checkState(detectImplicitInternalCycle());  [CE]  cannot  find  symbol  [FE]                                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Predicates.checkState(detectImplicitInternalCycle());  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Predicates.checkState(detectImplicitInternalCycle());	  Predicates.checkState(detectImplicitPrototypeCycle());    	non-compiled	[CE]  cannot  find  symbol	126	None	replace
2203	[BUG]  [BUGGY]  Predicates.checkState(detectPrototypeCycle());  [CE]  cannot  find  symbol  [FE]                                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Predicates.checkState(detectPrototypeCycle());  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Predicates.checkState(detectPrototypeCycle());	  Predicates.checkState(detectImplicitPrototypeCycle());    	non-compiled	[CE]  cannot  find  symbol	126	None	replace
2204	[BUG]  [BUGGY]  Annotations  propertyContinuations  =  getPropertyAnnotations();  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Annotations  propertyContinuations  =  getPropertyAnnotations();  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Annotations  propertyContinuations  =  getPropertyAnnotations();	  if(propertyContinuations!=    null)    {    finishPropertyAnnotations();    }    else    {    propertyContinuations.add(propertyName);    }    	non-compiled	[CE]  cannot  find  symbol	153	None	replace
2205	[BUG]  [BUGGY]  if(validator  ==  null)  {  finishPropertyAnnotations();  }  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(validator  ==  null)  {  finishPropertyAnnotations();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(validator  ==  null)  {  finishPropertyAnnotations();  }	  if(validator    ==    null)    {    finishPropertyContinuations();    }    timeout    	non-compiled	[CE]  cannot  find  symbol	157	None	replace
2206	[BUG]  [BUGGY]  ensurePropertyContinuations()  &&  registry.isLocal());  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  ensurePropertyContinuations()  &&  registry.isLocal());  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	ensurePropertyContinuations()  &&  registry.isLocal());	  ensurePropertyContinuations()    &&    registry.isLastGeneration());    	non-compiled	[CE]  not  a  statement	16	None	replace
2207	[BUG]  [BUGGY]  ensurePropertyContinuations()  &&  registry.isEnabled(JacksonImpl.class));  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  ensurePropertyContinuations()  &&  registry.isEnabled(JacksonImpl.class));  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	ensurePropertyContinuations()  &&  registry.isEnabled(JacksonImpl.class));	  ensurePropertyContinuations()    &&    registry.isLastGeneration());    	non-compiled	[CE]  not  a  statement	16	None	replace
2208	[BUG]  [BUGGY]  Validate.notNull(registry);  [CE]  cannot  find  symbol  Validate  [FE]                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Validate.notNull(registry);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Validate.notNull(registry);	  validatePropertyContinuations();    	non-compiled	[CE]  cannot  find  symbol  Validate	31	None	replace
2209	[BUG]  [BUGGY]  resolved  =  finishPropertyAnnotations(t,  propertyNode);  [CE]  cannot  find  symbol  propertyNode  [FE]                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  resolved  =  finishPropertyAnnotations(t,  propertyNode);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	resolved  =  finishPropertyAnnotations(t,  propertyNode);	  resolved    =    finishPropertyContinuations();    	non-compiled	[CE]  cannot  find  symbol  propertyNode	218	None	replace
2210	[BUG]  [BUGGY]  resolved  =  startPropertyContinuations();  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  resolved  =  startPropertyContinuations();  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	resolved  =  startPropertyContinuations();	  resolved    =    finishPropertyContinuations();    	non-compiled	[CE]  cannot  find  symbol	218	None	replace
2211	[BUG]  [BUGGY]  propertyContinuations  =  registry.isLastGeneration()?  getPropertyType()  :  this;  [CE]  method  getPropertyType  in  class  ObjectType  cannot  be  applied  to  given  types;  [FE]              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  propertyContinuations  =  registry.isLastGeneration()?  getPropertyType()  :  this;  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	propertyContinuations  =  registry.isLastGeneration()?  getPropertyType()  :  this;	  propertyContinuations    ==    null)    {    finishPropertyContinuations();    }    else    {    registry.isLastGeneration()?    getReferencedType()    :    this;    }    	non-compiled	[CE]  method  getPropertyType  in  class  ObjectType  cannot  be  applied  to  given  types;	189	None	replace
2212	[BUG]  [BUGGY]  timeout  [FE]                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(registry!=  null  &&  propertyContinuations.size()  >  0)  {  finishPropertyContinuations();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	add	if(registry!=  null  &&  propertyContinuations.size()  >  0)  {  finishPropertyContinuations();  }	  if(validator!=    null    &&    registry.isLastGeneration())    {    finishPropertyContinuations();    }    timeout    	compilable	timeout	236	1	replace
2213	[BUG]  [BUGGY]  if(registry!=  null  &&  propertyContinuations.size()  >  0)  {  finishPropertyContinuations();  }  timeout  [FE]                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(registry!=  null  &&  propertyContinuations.size()  >  0)  {  finishPropertyContinuations();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(registry!=  null  &&  propertyContinuations.size()  >  0)  {  finishPropertyContinuations();  }	  if(validator!=    null    &&    registry.isLastGeneration())    {    finishPropertyContinuations();    }    timeout    	compilable	timeout	236	1	replace
2214	[BUG]  [BUGGY]  if(registry!=  null  &&  propertyContinuations.isLastGeneration())  {  finishPropertyContinuations();  }  [CE]  cannot  find  symbol  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(registry!=  null  &&  propertyContinuations.isLastGeneration())  {  finishPropertyContinuations();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(registry!=  null  &&  propertyContinuations.isLastGeneration())  {  finishPropertyContinuations();  }	  if(validator!=    null    &&    registry.isLastGeneration())    {    finishPropertyContinuations();    }    timeout    	non-compiled	[CE]  cannot  find  symbol	236	None	replace
2215	[BUG]  [BUGGY]  if(register.isLastGeneration())  {  finishPropertyContinuations();  }  [CE]  cannot  find  symbol  register  [FE]                            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(register.isLastGeneration())  {  finishPropertyContinuations();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(register.isLastGeneration())  {  finishPropertyContinuations();  }	  if(validator!=    null    &&    registry.isLastGeneration())    {    finishPropertyContinuations();    }    timeout    	non-compiled	[CE]  cannot  find  symbol  register	236	None	replace
2216	[BUG]  [BUGGY]  if(registry!=  null  &&  registry.isFirstGeneration())  {  finishPropertyContinuations();  }  [CE]  cannot  find  symbol  [FE]                              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(registry!=  null  &&  registry.isFirstGeneration())  {  finishPropertyContinuations();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(registry!=  null  &&  registry.isFirstGeneration())  {  finishPropertyContinuations();  }	  if(validator!=    null    &&    registry.isLastGeneration())    {    finishPropertyContinuations();    }    timeout    	non-compiled	[CE]  cannot  find  symbol	236	None	replace
2217	[BUG]  [BUGGY]  Annotation  <?>  propertyContinuations  =  propertyNodes.getPropertyContinuations(propertyName);  [CE]  cannot  find  symbol  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Annotation  <?>  propertyContinuations  =  propertyNodes.getPropertyContinuations(propertyName);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Annotation  <?>  propertyContinuations  =  propertyNodes.getPropertyContinuations(propertyName);	  Annotation    <?>    propertyContinuations    =    registry.getPropertyContinuations(propertyName);    	non-compiled	[CE]  cannot  find  symbol	196	None	replace
2218	[BUG]  [BUGGY]  Annotation  <?>  propertyContinuations  =  this.registry.getPropertyContinuations(propertyName);  [CE]  cannot  find  symbol  [FE]                            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Annotation  <?>  propertyContinuations  =  this.registry.getPropertyContinuations(propertyName);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Annotation  <?>  propertyContinuations  =  this.registry.getPropertyContinuations(propertyName);	  Annotation    <?>    propertyContinuations    =    registry.getPropertyContinuations(propertyName);    	non-compiled	[CE]  cannot  find  symbol	196	None	replace
2219	[BUG]  [BUGGY]  BundlePropertyContinuations  registry  =  getBundlePropertyContinuations(propertyName,  sourceName);  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  BundlePropertyContinuations  registry  =  getBundlePropertyContinuations(propertyName,  sourceName);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	BundlePropertyContinuations  registry  =  getBundlePropertyContinuations(propertyName,  sourceName);	  BundlePropertyContinuations    registry    =    getBundlePropertyContinuations(propertyName);    	non-compiled	[CE]  cannot  find  symbol	104	None	replace
2220	[BUG]  [BUGGY]  propertyContinuations!=  null  &&  propertyContinuations.size()  >  1)  {  startPropertyContinuations();  }  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  propertyContinuations!=  null  &&  propertyContinuations.size()  >  1)  {  startPropertyContinuations();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	propertyContinuations!=  null  &&  propertyContinuations.size()  >  1)  {  startPropertyContinuations();  }	  propertyContinuations!=    null    &&    propertyContinuations.size()    >    0)    {    startPropertyContinuations();    }    else    {    registry.isLastGeneration()?    getReferencedType()    :    this;    }    	non-compiled	[CE]  not  a  statement	193	None	replace
2221	[BUG]  [BUGGY]  if(propertyAnnotations!=  null)  {  finishPropertyAnnotation();  }  else  {  getPropertyContinuations().addAll(propertyContinuations);  }  [CE]  cannot  find  symbol  propertyAnnotations  [FE]                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(propertyAnnotations!=  null)  {  finishPropertyAnnotation();  }  else  {  getPropertyContinuations().addAll(propertyContinuations);  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyAnnotations!=  null)  {  finishPropertyAnnotation();  }  else  {  getPropertyContinuations().addAll(propertyContinuations);  }	  if(propertyContinuations!=    null)    {    finishPropertyAnnotations();    }    else    {    getPropertyContinuations().addAll(propertyContinuations);    }    	non-compiled	[CE]  cannot  find  symbol  propertyAnnotations	120	None	replace
2222	[BUG]  [BUGGY]  Annotations  propertyAnnotations  =  getPropertyAnnotations();  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Annotations  propertyAnnotations  =  getPropertyAnnotations();  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Annotations  propertyAnnotations  =  getPropertyAnnotations();	  if(propertyContinuations!=    null)    {    finishPropertyAnnotations();    }    else    {    getPropertyContinuations().addAll(propertyContinuations);    }    	non-compiled	[CE]  cannot  find  symbol	120	None	replace
2223	[BUG]  [BUGGY]  if(propertyAnnotations!=  null)  {  finishPropertyAnnotations();  }  else  {  getPropertyContinuations().addAll(properties);  }  [CE]  cannot  find  symbol  propertyAnnotations  [FE]                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(propertyAnnotations!=  null)  {  finishPropertyAnnotations();  }  else  {  getPropertyContinuations().addAll(properties);  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyAnnotations!=  null)  {  finishPropertyAnnotations();  }  else  {  getPropertyContinuations().addAll(properties);  }	  if(propertyContinuations!=    null)    {    finishPropertyAnnotations();    }    else    {    getPropertyContinuations().addAll(propertyContinuations);    }    	non-compiled	[CE]  cannot  find  symbol  propertyAnnotations	120	None	replace
2224	[BUG]  [BUGGY]  if(propertyAnnotations!=  null)  {  finishPropertyAnnotations();  }  else  {  propertyContinuations.addAll(propertyContinuations);  }  [CE]  cannot  find  symbol  propertyAnnotations  [FE]                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(propertyAnnotations!=  null)  {  finishPropertyAnnotations();  }  else  {  propertyContinuations.addAll(propertyContinuations);  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyAnnotations!=  null)  {  finishPropertyAnnotations();  }  else  {  propertyContinuations.addAll(propertyContinuations);  }	  if(propertyContinuations!=    null)    {    finishPropertyAnnotations();    }    else    {    getPropertyContinuations().addAll(propertyContinuations);    }    	non-compiled	[CE]  cannot  find  symbol  propertyAnnotations	120	None	replace
2225	[BUG]  [BUGGY]  if(validator!=  null  &&  resolveViaProperties()  &&  propertyNode  ==  null)  {  finishPropertyContinuations();  }  [CE]  method  resolveViaProperties  in  class  NamedType  cannot  be  applied  to  given  types;  [FE]            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(validator!=  null  &&  resolveViaProperties()  &&  propertyNode  ==  null)  {  finishPropertyContinuations();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(validator!=  null  &&  resolveViaProperties()  &&  propertyNode  ==  null)  {  finishPropertyContinuations();  }	  if(validator!=    null    &&    resolveViaProperties())    {    finishPropertyContinuations();    }    	non-compiled	[CE]  method  resolveViaProperties  in  class  NamedType  cannot  be  applied  to  given  types;	206	None	replace
2226	[BUG]  [BUGGY]  if(validator!=  null  &&  resolveViaProperties()  &&  propertyNode!=  null)  {  finishPropertyContinuations();  }  [CE]  method  resolveViaProperties  in  class  NamedType  cannot  be  applied  to  given  types;  [FE]              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(validator!=  null  &&  resolveViaProperties()  &&  propertyNode!=  null)  {  finishPropertyContinuations();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(validator!=  null  &&  resolveViaProperties()  &&  propertyNode!=  null)  {  finishPropertyContinuations();  }	  if(validator!=    null    &&    resolveViaProperties())    {    finishPropertyContinuations();    }    	non-compiled	[CE]  method  resolveViaProperties  in  class  NamedType  cannot  be  applied  to  given  types;	206	None	replace
2227	[BUG]  [BUGGY]  if(validator!=  null  &&  resolveViaProperties()  &&  registry.isLastGeneration())  {  handleTypeCycle(t);  }  [CE]  method  resolveViaProperties  in  class  NamedType  cannot  be  applied  to  given  types;  [FE]                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(validator!=  null  &&  resolveViaProperties()  &&  registry.isLastGeneration())  {  handleTypeCycle(t);  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(validator!=  null  &&  resolveViaProperties()  &&  registry.isLastGeneration())  {  handleTypeCycle(t);  }	  if(validator!=    null    &&    resolveViaProperties())    {    finishPropertyContinuations();    }    	non-compiled	[CE]  method  resolveViaProperties  in  class  NamedType  cannot  be  applied  to  given  types;	206	None	replace
2228	[BUG]  [BUGGY]  if(validator!=  null  &&  resolveViaProperties()  &&  propertyNode  ==  registry)  {  finishPropertyContinuations();  }  [CE]  method  resolveViaProperties  in  class  NamedType  cannot  be  applied  to  given  types;  [FE]                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(validator!=  null  &&  resolveViaProperties()  &&  propertyNode  ==  registry)  {  finishPropertyContinuations();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(validator!=  null  &&  resolveViaProperties()  &&  propertyNode  ==  registry)  {  finishPropertyContinuations();  }	  if(validator!=    null    &&    resolveViaProperties())    {    finishPropertyContinuations();    }    	non-compiled	[CE]  method  resolveViaProperties  in  class  NamedType  cannot  be  applied  to  given  types;	206	None	replace
2229	[BUG]  [BUGGY]  propertyContinuations(registry,  resolved)  {  finishPropertyContinuations();  }  else  {  registry.isLastGeneration()?  getReferencedType()  :  this;  }  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  propertyContinuations(registry,  resolved)  {  finishPropertyContinuations();  }  else  {  registry.isLastGeneration()?  getReferencedType()  :  this;  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	propertyContinuations(registry,  resolved)  {  finishPropertyContinuations();  }  else  {  registry.isLastGeneration()?  getReferencedType()  :  this;  }	  propertyContinuations(resolved)    {    finishPropertyContinuations();    }    else    {    registry.isLastGeneration()?    getReferencedType()    :    this;    }    	non-compiled	[CE]  ';'  expected	60	None	replace
2230	[BUG]  [BUGGY]  ensurePropertyContinuations()  &&  registry.isFunctionDeclaration();  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  ensurePropertyContinuations()  &&  registry.isFunctionDeclaration();  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	ensurePropertyContinuations()  &&  registry.isFunctionDeclaration();	  ensurePropertyContinuations()    &&    registry.isLastGeneration();    	non-compiled	[CE]  not  a  statement	14	None	replace
2231	[BUG]  [BUGGY]  ensurePropertyContinuations()  &&  registry.isStatementBlock();  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  ensurePropertyContinuations()  &&  registry.isStatementBlock();  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	ensurePropertyContinuations()  &&  registry.isStatementBlock();	  ensurePropertyContinuations()    &&    registry.isLastGeneration();    	non-compiled	[CE]  not  a  statement	14	None	replace
2232	[BUG]  [BUGGY]  ensurePropertyContinuations()  &&  registry.isEnabled(StaticScope.NORMAL);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  ensurePropertyContinuations()  &&  registry.isEnabled(StaticScope.NORMAL);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	ensurePropertyContinuations()  &&  registry.isEnabled(StaticScope.NORMAL);	  ensurePropertyContinuations()    &&    registry.isLastGeneration();    	non-compiled	[CE]  not  a  statement	14	None	replace
2233	[BUG]  [BUGGY]  registry.report(JSError.make(t,  enclosing,  getReferencedType()));  [CE]  cannot  find  symbol  JSError  [FE]                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  registry.report(JSError.make(t,  enclosing,  getReferencedType()));  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	registry.report(JSError.make(t,  enclosing,  getReferencedType()));	  registry.isLastGeneration()    :    this;    	non-compiled	[CE]  cannot  find  symbol  JSError	94	None	replace
2234	[BUG]  [BUGGY]  registry.report(JSError.make(t,  enclosing,  UNKNOWN_EXPR_TYPE));  [CE]  cannot  find  symbol  UNKNOWN_EXPR_TYPE  [FE]                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  registry.report(JSError.make(t,  enclosing,  UNKNOWN_EXPR_TYPE));  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	registry.report(JSError.make(t,  enclosing,  UNKNOWN_EXPR_TYPE));	  registry.isLastGeneration()    :    this;    	non-compiled	[CE]  cannot  find  symbol  UNKNOWN_EXPR_TYPE	94	None	replace
2235	[BUG]  [BUGGY]  registry.report(JSError.make(t,  enclosing));  [CE]  cannot  find  symbol  JSError  [FE]                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  registry.report(JSError.make(t,  enclosing));  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	registry.report(JSError.make(t,  enclosing));	  registry.isLastGeneration()    :    this;    	non-compiled	[CE]  cannot  find  symbol  JSError	94	None	replace
2236	[BUG]  [BUGGY]  registry.report(JSError.make(t,  enclosing,  PROPERTY));  [CE]  cannot  find  symbol  PROPERTY  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  registry.report(JSError.make(t,  enclosing,  PROPERTY));  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	registry.report(JSError.make(t,  enclosing,  PROPERTY));	  registry.isLastGeneration()    :    this;    	non-compiled	[CE]  cannot  find  symbol  PROPERTY	94	None	replace
2237	[BUG]  [BUGGY]  Status.checkState(registry.isLastGeneration(),  t);  [CE]  cannot  find  symbol  Status  [FE]                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Status.checkState(registry.isLastGeneration(),  t);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Status.checkState(registry.isLastGeneration(),  t);	  Status.checkState(registry.isLastGeneration(),    resolved);    	non-compiled	[CE]  cannot  find  symbol  Status	12	None	replace
2238	[BUG]  [BUGGY]  Status.checkState(registry.isLastGeneration(),  handleTypeCycle(t,  resolved);  [CE]  ')'  expected  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Status.checkState(registry.isLastGeneration(),  handleTypeCycle(t,  resolved);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Status.checkState(registry.isLastGeneration(),  handleTypeCycle(t,  resolved);	  Status.checkState(registry.isLastGeneration(),    resolved);    	non-compiled	[CE]  ')'  expected	12	None	replace
2239	[BUG]  [BUGGY]  luate(registry,  propertyNode)  {  finishPropertyContinuations();  }  else  {  registry.islastGeneration()?  getReferencedType()  :  this;  }  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  luate(registry,  propertyNode)  {  finishPropertyContinuations();  }  else  {  registry.islastGeneration()?  getReferencedType()  :  this;  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	luate(registry,  propertyNode)  {  finishPropertyContinuations();  }  else  {  registry.islastGeneration()?  getReferencedType()  :  this;  }	  luate(registry,    resolved)    {    finishPropertyContinuations();    }    else    {    registry.islastGeneration()?    getReferencedType()    :    this;    }    	non-compiled	[CE]  ';'  expected	168	None	replace
2240	[BUG]  [BUGGY]  luate(registry,  t)  {  finishPropertyContinuations();  }  else  {  registry.islastGeneration()?  getReferencedType()  :  this;  }  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  luate(registry,  t)  {  finishPropertyContinuations();  }  else  {  registry.islastGeneration()?  getReferencedType()  :  this;  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	luate(registry,  t)  {  finishPropertyContinuations();  }  else  {  registry.islastGeneration()?  getReferencedType()  :  this;  }	  luate(registry,    resolved)    {    finishPropertyContinuations();    }    else    {    registry.islastGeneration()?    getReferencedType()    :    this;    }    	non-compiled	[CE]  ';'  expected	168	None	replace
2241	[BUG]  [BUGGY]  if(propertyContinuations!=  null  &&  propertyContinuations.size()  >  1)  {  startPropertyGeneration();  }  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(propertyContinuations!=  null  &&  propertyContinuations.size()  >  1)  {  startPropertyGeneration();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations!=  null  &&  propertyContinuations.size()  >  1)  {  startPropertyGeneration();  }	  if(propertyContinuations!=    null)    {    startPropertyGeneration();    }    	non-compiled	[CE]  cannot  find  symbol	137	None	replace
2242	[BUG]  [BUGGY]  if(propertyContinuations!=  null  ||  propertyContinuations.size()  ==  1)  {  startPropertyGeneration();  }  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(propertyContinuations!=  null  ||  propertyContinuations.size()  ==  1)  {  startPropertyGeneration();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations!=  null  ||  propertyContinuations.size()  ==  1)  {  startPropertyGeneration();  }	  if(propertyContinuations!=    null)    {    startPropertyGeneration();    }    	non-compiled	[CE]  cannot  find  symbol	137	None	replace
2243	[BUG]  [BUGGY]  if(propertyContinuations!=  null  ||  propertyContinuations.size()  ==  0)  {  startPropertyGeneration();  }  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(propertyContinuations!=  null  ||  propertyContinuations.size()  ==  0)  {  startPropertyGeneration();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations!=  null  ||  propertyContinuations.size()  ==  0)  {  startPropertyGeneration();  }	  if(propertyContinuations!=    null)    {    startPropertyGeneration();    }    	non-compiled	[CE]  cannot  find  symbol	137	None	replace
2244	[BUG]  [BUGGY]  if(propertyContinuations!=  null  &&  propertyContinuations.isEmpty())  {  startPropertyGeneration();  }  [CE]  cannot  find  symbol  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(propertyContinuations!=  null  &&  propertyContinuations.isEmpty())  {  startPropertyGeneration();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations!=  null  &&  propertyContinuations.isEmpty())  {  startPropertyGeneration();  }	  if(propertyContinuations!=    null)    {    startPropertyGeneration();    }    	non-compiled	[CE]  cannot  find  symbol	137	None	replace
2245	[BUG]  [BUGGY]  Predicate  validator  =  getValueForAnnotations(registered);  [CE]  cannot  find  symbol  registered  [FE]                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Predicate  validator  =  getValueForAnnotations(registered);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Predicate  validator  =  getValueForAnnotations(registered);	  Predicate    validator    =    getValueForAnnotations(resolved);    	non-compiled	[CE]  cannot  find  symbol  registered	142	None	replace
2246	[BUG]  [BUGGY]  if(propertyContinuations!=  null)  {  finishPropertyFields();  }  else  {  properties.add(propertyName);  }  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(propertyContinuations!=  null)  {  finishPropertyFields();  }  else  {  properties.add(propertyName);  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations!=  null)  {  finishPropertyFields();  }  else  {  properties.add(propertyName);  }	  if(propertyContinuations!=    null)    {    finishPropertyFields();    }    else    {    propertyContinuations.add(propertyName);    }    	non-compiled	[CE]  cannot  find  symbol	151	None	replace
2247	[BUG]  [BUGGY]  if(propertyContinuations!=  null)  {  startPropertyGenerator();  }  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(propertyContinuations!=  null)  {  startPropertyGenerator();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations!=  null)  {  startPropertyGenerator();  }	  if(propertyContinuations!=    null)    {    finishPropertyContinuations();    }    if(propertyContinuations!=    null)    {    startPropertyContinuations();    }    	non-compiled	[CE]  cannot  find  symbol	81	None	replace
2248	[BUG]  [BUGGY]  AssertionFailedError  t  =  getStaticScope().getNativeType(JSTypeNative.UNKNOWN_TYPE);  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  AssertionFailedError  t  =  getStaticScope().getNativeType(JSTypeNative.UNKNOWN_TYPE);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	AssertionFailedError  t  =  getStaticScope().getNativeType(JSTypeNative.UNKNOWN_TYPE);	  if(resolved)    {    finishPropertyContinuations();    }    when(resolved)    {    finishPropertyContinuations();    }    	non-compiled	[CE]  cannot  find  symbol	38	None	replace
2249	[BUG]  [BUGGY]  AssertionFailedError  t  =  getStaticScope().getNativeObjectType(JSTypeNative.UNKNOWN_TYPE);  [CE]  cannot  find  symbol  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  AssertionFailedError  t  =  getStaticScope().getNativeObjectType(JSTypeNative.UNKNOWN_TYPE);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	AssertionFailedError  t  =  getStaticScope().getNativeObjectType(JSTypeNative.UNKNOWN_TYPE);	  if(resolved)    {    finishPropertyContinuations();    }    when(resolved)    {    finishPropertyContinuations();    }    	non-compiled	[CE]  cannot  find  symbol	38	None	replace
2250	[BUG]  [BUGGY]  AssertionFailedError  t  =  getStaticScope().getNativeType(UNKNOWN_TYPE);  [CE]  cannot  find  symbol  [FE]                            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  AssertionFailedError  t  =  getStaticScope().getNativeType(UNKNOWN_TYPE);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	AssertionFailedError  t  =  getStaticScope().getNativeType(UNKNOWN_TYPE);	  if(resolved)    {    finishPropertyContinuations();    }    when(resolved)    {    finishPropertyContinuations();    }    	non-compiled	[CE]  cannot  find  symbol	38	None	replace
2251	[BUG]  [BUGGY]  timeout  [FE]                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Preconditions.checkState(resolved, "Property  resolved ");  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	add	Preconditions.checkState(resolved, "Property  resolved ");	  if(resolved)    {    finishPropertyContinuations();    }    if(resolved)    ==    finishPropertyContinuations();    }    	compilable	timeout	222	1	replace
2252	[BUG]  [BUGGY]  Preconditions.checkState(resolved, "Property  resolved ");  timeout  [FE]                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Preconditions.checkState(resolved, "Property  resolved ");  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Preconditions.checkState(resolved, "Property  resolved ");	  if(resolved)    {    finishPropertyContinuations();    }    if(resolved)    ==    finishPropertyContinuations();    }    	compilable	timeout	222	1	replace
2253	[BUG]  [BUGGY]  DeserializationExceptionHandler.handleTypeCycle(t,  enclosing);  [CE]  cannot  find  symbol  DeserializationExceptionHandler  [FE]                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  DeserializationExceptionHandler.handleTypeCycle(t,  enclosing);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	DeserializationExceptionHandler.handleTypeCycle(t,  enclosing);	  aughtExceptionHandler.handleTypeCycle(t,    enclosing);    	non-compiled	[CE]  cannot  find  symbol  DeserializationExceptionHandler	194	None	replace
2254	[BUG]  [BUGGY]  if(enclosing.isNative())  {  aughtExceptionHandler.handleTypeCycle(t,  enclosing);  }  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(enclosing.isNative())  {  aughtExceptionHandler.handleTypeCycle(t,  enclosing);  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(enclosing.isNative())  {  aughtExceptionHandler.handleTypeCycle(t,  enclosing);  }	  aughtExceptionHandler.handleTypeCycle(t,    enclosing);    	non-compiled	[CE]  cannot  find  symbol	194	None	replace
2255	[BUG]  [BUGGY]  ObjectImplicitExceptionHandler.handleTypeCycle(t,  enclosing);  [CE]  cannot  find  symbol  ObjectImplicitExceptionHandler  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  ObjectImplicitExceptionHandler.handleTypeCycle(t,  enclosing);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	ObjectImplicitExceptionHandler.handleTypeCycle(t,  enclosing);	  aughtExceptionHandler.handleTypeCycle(t,    enclosing);    	non-compiled	[CE]  cannot  find  symbol  ObjectImplicitExceptionHandler	194	None	replace
2256	[BUG]  [BUGGY]  Deserializer  <  Object>  deserializer  =  t.handleTypeCycle(t,  enclosing);  [CE]  cannot  find  symbol  [FE]                            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Deserializer  <  Object>  deserializer  =  t.handleTypeCycle(t,  enclosing);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Deserializer  <  Object>  deserializer  =  t.handleTypeCycle(t,  enclosing);	  aughtExceptionHandler.handleTypeCycle(t,    enclosing);    	non-compiled	[CE]  cannot  find  symbol	194	None	replace
2257	[BUG]  [BUGGY]  ObjectUtilities.handleTypeCycle(t,  enclosing);  [CE]  cannot  find  symbol  ObjectUtilities  [FE]                              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  ObjectUtilities.handleTypeCycle(t,  enclosing);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	ObjectUtilities.handleTypeCycle(t,  enclosing);	  aughtExceptionHandler.handleTypeCycle(t,    enclosing);    	non-compiled	[CE]  cannot  find  symbol  ObjectUtilities	194	None	replace
2258	[BUG]  [BUGGY]  Parchet.checkState(registry.isLastGeneration()?  getReferencedType()  :  this,  registry);  [CE]  cannot  find  symbol  Parchet  [FE]              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Parchet.checkState(registry.isLastGeneration()?  getReferencedType()  :  this,  registry);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Parchet.checkState(registry.isLastGeneration()?  getReferencedType()  :  this,  registry);	  Parchet.checkState(registry.isLastGeneration()?    getReferencedType()    :    this);    	non-compiled	[CE]  cannot  find  symbol  Parchet	63	None	replace
2259	[BUG]  [BUGGY]  Parchet.checkState(registry.isLastGeneration()?  getReferencedType()  :  this,  propertyNode);  [CE]  cannot  find  symbol  propertyNode  [FE]                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Parchet.checkState(registry.isLastGeneration()?  getReferencedType()  :  this,  propertyNode);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Parchet.checkState(registry.isLastGeneration()?  getReferencedType()  :  this,  propertyNode);	  Parchet.checkState(registry.isLastGeneration()?    getReferencedType()    :    this);    	non-compiled	[CE]  cannot  find  symbol  propertyNode	63	None	replace
2260	[BUG]  [BUGGY]  Parchet.checkState(registry.isLastGeneration()?  getReferencedType()  :  registry.this);  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Parchet.checkState(registry.isLastGeneration()?  getReferencedType()  :  registry.this);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Parchet.checkState(registry.isLastGeneration()?  getReferencedType()  :  registry.this);	  Parchet.checkState(registry.isLastGeneration()?    getReferencedType()    :    this);    	non-compiled	[CE]  cannot  find  symbol	63	None	replace
2261	[BUG]  [BUGGY]  if(forAnnotations)  {  startPropertyContinuations();  }  [CE]  cannot  find  symbol  forAnnotations  [FE]                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(forAnnotations)  {  startPropertyContinuations();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(forAnnotations)  {  startPropertyContinuations();  }	  if(resolved)    {    finishPropertyContinuations();    }    if(resolved)    {    startPropertyContinuations();    }    	non-compiled	[CE]  cannot  find  symbol  forAnnotations	36	None	replace
2262	[BUG]  [BUGGY]  Status.checkState(propertyContinuations!=  null  &&  registry.isLastGeneration());  [CE]  cannot  find  symbol  Status  [FE]                                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Status.checkState(propertyContinuations!=  null  &&  registry.isLastGeneration());  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Status.checkState(propertyContinuations!=  null  &&  registry.isLastGeneration());	  Status.checkState(propertyContinuations!=    null);    	non-compiled	[CE]  cannot  find  symbol  Status	116	None	replace
2263	[BUG]  [BUGGY]  Status.checkState(this,  propertyContinuations!=  null);  [CE]  cannot  find  symbol  Status  [FE]                                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Status.checkState(this,  propertyContinuations!=  null);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Status.checkState(this,  propertyContinuations!=  null);	  Status.checkState(propertyContinuations!=    null);    	non-compiled	[CE]  cannot  find  symbol  Status	116	None	replace
2264	[BUG]  [BUGGY]  Parchet.checkState(registry,  resolved  ||  registry.isLastGeneration());  [CE]  cannot  find  symbol  Parchet  [FE]                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Parchet.checkState(registry,  resolved  ||  registry.isLastGeneration());  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Parchet.checkState(registry,  resolved  ||  registry.isLastGeneration());	  Parchet.checkState(resolved    ||    registry.isLastGeneration());    	non-compiled	[CE]  cannot  find  symbol  Parchet	107	None	replace
2265	[BUG]  [BUGGY]  if(forAnnotations)  {  finishPropertyGeneration();  }  [CE]  cannot  find  symbol  forAnnotations  [FE]                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(forAnnotations)  {  finishPropertyGeneration();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(forAnnotations)  {  finishPropertyGeneration();  }	  if(resolved)    {    finishPropertyContinuations();    }    if(resolved)    {    finishPropertyContinuations();    }    timeout    	non-compiled	[CE]  cannot  find  symbol  forAnnotations	35	None	replace
2266	[BUG]  [BUGGY]  if(resolved)  {  finishPropertyGeneration();  }  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(resolved)  {  finishPropertyGeneration();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(resolved)  {  finishPropertyGeneration();  }	  if(resolved)    {    finishPropertyContinuations();    }    if(resolved)    {    finishPropertyContinuations();    }    timeout    	non-compiled	[CE]  cannot  find  symbol	35	None	replace
2267	[BUG]  [BUGGY]  if(forAnnotations)  {  finishPropertyContinuations();  }  while(resolved)  {  finishPropertyContinuations();  }  [CE]  cannot  find  symbol  forAnnotations  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(forAnnotations)  {  finishPropertyContinuations();  }  while(resolved)  {  finishPropertyContinuations();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(forAnnotations)  {  finishPropertyContinuations();  }  while(resolved)  {  finishPropertyContinuations();  }	  if(resolved)    {    finishPropertyContinuations();    }    while(resolved)    {    finishPropertyContinuations();    }    timeout    	non-compiled	[CE]  cannot  find  symbol  forAnnotations	40	None	replace
2268	[BUG]  [BUGGY]  if(resolved)  {  finishPropertyAnnotations();  }  while(resolved)  {  finishPropertyContinuations();  }  [CE]  cannot  find  symbol  [FE]                            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(resolved)  {  finishPropertyAnnotations();  }  while(resolved)  {  finishPropertyContinuations();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(resolved)  {  finishPropertyAnnotations();  }  while(resolved)  {  finishPropertyContinuations();  }	  if(resolved)    {    finishPropertyContinuations();    }    while(resolved)    {    finishPropertyContinuations();    }    timeout    	non-compiled	[CE]  cannot  find  symbol	40	None	replace
2269	[BUG]  [BUGGY]  timeout  [FE]                              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  while(resolved)  {  finishPropertyContinuations();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	add	while(resolved)  {  finishPropertyContinuations();  }	  if(resolved)    {    finishPropertyContinuations();    }    while(resolved)    {    finishPropertyContinuations();    }    timeout    	compilable	timeout	40	1	replace
2270	[BUG]  [BUGGY]  while(resolved)  {  finishPropertyContinuations();  }  timeout  [FE]                              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  while(resolved)  {  finishPropertyContinuations();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	while(resolved)  {  finishPropertyContinuations();  }	  if(resolved)    {    finishPropertyContinuations();    }    while(resolved)    {    finishPropertyContinuations();    }    timeout    	compilable	timeout	40	1	replace
2271	[BUG]  [BUGGY]  if(resolved)  {  finishPropertyInternal();  }  while(resolved)  {  finishPropertyContinuations();  }  [CE]  cannot  find  symbol  [FE]                                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(resolved)  {  finishPropertyInternal();  }  while(resolved)  {  finishPropertyContinuations();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(resolved)  {  finishPropertyInternal();  }  while(resolved)  {  finishPropertyContinuations();  }	  if(resolved)    {    finishPropertyContinuations();    }    while(resolved)    {    finishPropertyContinuations();    }    timeout    	non-compiled	[CE]  cannot  find  symbol	40	None	replace
2272	[BUG]  [BUGGY]  while(resolved)  {  finishPropertyContinuations();  [CE]  illegal  start  of  expression  [FE]                                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  while(resolved)  {  finishPropertyContinuations();  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	while(resolved)  {  finishPropertyContinuations();	  if(resolved)    {    finishPropertyContinuations();    }    while(resolved)    {    finishPropertyContinuations();    }    timeout    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
2273	[BUG]  [BUGGY]  if(resolved)  {  finishPropertyGeneration();  }  while(resolved)  {  finishPropertyContinuations();  }  [CE]  cannot  find  symbol  [FE]                                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(resolved)  {  finishPropertyGeneration();  }  while(resolved)  {  finishPropertyContinuations();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(resolved)  {  finishPropertyGeneration();  }  while(resolved)  {  finishPropertyContinuations();  }	  if(resolved)    {    finishPropertyContinuations();    }    while(resolved)    {    finishPropertyContinuations();    }    timeout    	non-compiled	[CE]  cannot  find  symbol	40	None	replace
2274	[BUG]  [BUGGY]  if(propertyContinuations!=  null)  {  finishPropertyAccuracy();  }  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(propertyContinuations!=  null)  {  finishPropertyAccuracy();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations!=  null)  {  finishPropertyAccuracy();  }	  if(propertyContinuations!=    null)    {    finishPropertyContinuations();    }    if(propertyContinuations!=    null)    {    finishPropertyContinuations();    }    timeout    	non-compiled	[CE]  cannot  find  symbol	77	None	replace
2275	[BUG]  [BUGGY]  ensurePropertyContinuations()  &&  registry.isConstructor()?  getReferencedType()  :  null;  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  ensurePropertyContinuations()  &&  registry.isConstructor()?  getReferencedType()  :  null;  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	ensurePropertyContinuations()  &&  registry.isConstructor()?  getReferencedType()  :  null;	  ensurePropertyContinuations()    &&    registry.isLastGeneration()?    getReferencedType()    :    null;    	non-compiled	[CE]  not  a  statement	17	None	replace
2276	[BUG]  [BUGGY]  ensurePropertyContinuations()  &&  registry.isLastGeneration()?  getReferencedType()  :  node;  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  ensurePropertyContinuations()  &&  registry.isLastGeneration()?  getReferencedType()  :  node;  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	ensurePropertyContinuations()  &&  registry.isLastGeneration()?  getReferencedType()  :  node;	  ensurePropertyContinuations()    &&    registry.isLastGeneration()?    getReferencedType()    :    null;    	non-compiled	[CE]  not  a  statement	17	None	replace
2277	[BUG]  [BUGGY]  if(registry!=  null  &&  validator.isLastGeneration())  {  finishPropertyContinuations();  }  else  {  registry.isLastGeneration()?  getReferencedType()  :  this;  }  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(registry!=  null  &&  validator.isLastGeneration())  {  finishPropertyContinuations();  }  else  {  registry.isLastGeneration()?  getReferencedType()  :  this;  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(registry!=  null  &&  validator.isLastGeneration())  {  finishPropertyContinuations();  }  else  {  registry.isLastGeneration()?  getReferencedType()  :  this;  }	  if(validator!=    null    &&    registry.isLastGeneration())    {    finishPropertyContinuations();    }    else    {    registry.isLastGeneration()?    getReferencedType()    :    this;    }    	non-compiled	[CE]  not  a  statement	230	None	replace
2278	[BUG]  [BUGGY]  if(registry!=  null  &&  validator.isConstructor())  {  finishPropertyContinuations();  }  else  {  registry.isLastGeneration()?  getReferencedType()  :  this;  }  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(registry!=  null  &&  validator.isConstructor())  {  finishPropertyContinuations();  }  else  {  registry.isLastGeneration()?  getReferencedType()  :  this;  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(registry!=  null  &&  validator.isConstructor())  {  finishPropertyContinuations();  }  else  {  registry.isLastGeneration()?  getReferencedType()  :  this;  }	  if(validator!=    null    &&    registry.isLastGeneration())    {    finishPropertyContinuations();    }    else    {    registry.isLastGeneration()?    getReferencedType()    :    this;    }    	non-compiled	[CE]  not  a  statement	230	None	replace
2279	[BUG]  [BUGGY]  Annotations  <  null)  {  finishPropertyContinuations();  }  else  {  forAnnotations  =  Collections.emptyList();  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Annotations  <  null)  {  finishPropertyContinuations();  }  else  {  forAnnotations  =  Collections.emptyList();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Annotations  <  null)  {  finishPropertyContinuations();  }  else  {  forAnnotations  =  Collections.emptyList();  }	  if(forAnnotations    ==    null)    {    finishPropertyContinuations();    }    else    {    forAnnotations    =    Collections.emptyList();    }    	non-compiled	[CE]  illegal  start  of  type	249	None	replace
2280	[BUG]  [BUGGY]  if(forAnnotations  ==  null)  {  finishPropertyActual();  }  else  {  forAnnotations  =  Collections.emptyList();  }  [CE]  cannot  find  symbol  forAnnotations  [FE]                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(forAnnotations  ==  null)  {  finishPropertyActual();  }  else  {  forAnnotations  =  Collections.emptyList();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(forAnnotations  ==  null)  {  finishPropertyActual();  }  else  {  forAnnotations  =  Collections.emptyList();  }	  if(forAnnotations    ==    null)    {    finishPropertyContinuations();    }    else    {    forAnnotations    =    Collections.emptyList();    }    	non-compiled	[CE]  cannot  find  symbol  forAnnotations	249	None	replace
2281	[BUG]  [BUGGY]  if(forAnnotations  ==  null)  {  finishPropertyContinuations();  }  else  {  forAnnotations  =  Collections.EMPTYList();  }  [CE]  cannot  find  symbol  forAnnotations  [FE]                    AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(forAnnotations  ==  null)  {  finishPropertyContinuations();  }  else  {  forAnnotations  =  Collections.EMPTYList();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(forAnnotations  ==  null)  {  finishPropertyContinuations();  }  else  {  forAnnotations  =  Collections.EMPTYList();  }	  if(forAnnotations    ==    null)    {    finishPropertyContinuations();    }    else    {    forAnnotations    =    Collections.emptyList();    }    	non-compiled	[CE]  cannot  find  symbol  forAnnotations	249	None	replace
2282	[BUG]  [BUGGY]  if(propertyContinuations!=  null)  {  finishPropertyValues();  }  else  {  propertyContinuations.add(resolved);  }  [CE]  cannot  find  symbol  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(propertyContinuations!=  null)  {  finishPropertyValues();  }  else  {  propertyContinuations.add(resolved);  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations!=  null)  {  finishPropertyValues();  }  else  {  propertyContinuations.add(resolved);  }	  if(propertyContinuations!=    null)    {    finishPropertyContinuations();    }    else    {    propertyContinuations.add(resolved);    }    	non-compiled	[CE]  cannot  find  symbol	70	None	replace
2283	[BUG]  [BUGGY]  if(propertyContinuations!=  null)  {  finishType();  }  else  {  propertyContinuations.add(propertyName);  }  [CE]  cannot  find  symbol  [FE]                            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(propertyContinuations!=  null)  {  finishType();  }  else  {  propertyContinuations.add(propertyName);  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations!=  null)  {  finishType();  }  else  {  propertyContinuations.add(propertyName);  }	  if(propertyContinuations!=    null)    {    finishPropertyType();    }    else    {    propertyContinuations.add(propertyName);    }    	non-compiled	[CE]  cannot  find  symbol	155	None	replace
2284	[BUG]  [BUGGY]  if(propertyContinuations!=  null)  {  finishPropertyType();  }  else  {  properties.add(propertyName);  }  [CE]  cannot  find  symbol  [FE]                              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(propertyContinuations!=  null)  {  finishPropertyType();  }  else  {  properties.add(propertyName);  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyContinuations!=  null)  {  finishPropertyType();  }  else  {  properties.add(propertyName);  }	  if(propertyContinuations!=    null)    {    finishPropertyType();    }    else    {    propertyContinuations.add(propertyName);    }    	non-compiled	[CE]  cannot  find  symbol	155	None	replace
2285	[BUG]  [BUGGY]  Parchet.checkState(resolved  ||  registry.isFirstGeneration())  {  finishPropertyContinuations();  }  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Parchet.checkState(resolved  ||  registry.isFirstGeneration())  {  finishPropertyContinuations();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Parchet.checkState(resolved  ||  registry.isFirstGeneration())  {  finishPropertyContinuations();  }	  Parchet.checkState(resolved    ||    resolved)    {    finishPropertyContinuations();    }    else    {    registry.isLastGeneration()    :    null;    }    	non-compiled	[CE]  ';'  expected	109	None	replace
2286	[BUG]  [BUGGY]  Parchet.checkState(resolved  ||  registry.isLastGeneration())  {  startPropertyContinuations();  }  [CE]  ';'  expected  [FE]                          AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Parchet.checkState(resolved  ||  registry.isLastGeneration())  {  startPropertyContinuations();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Parchet.checkState(resolved  ||  registry.isLastGeneration())  {  startPropertyContinuations();  }	  Parchet.checkState(resolved    ||    resolved)    {    finishPropertyContinuations();    }    else    {    registry.isLastGeneration()    :    null;    }    	non-compiled	[CE]  ';'  expected	109	None	replace
2287	[BUG]  [BUGGY]  Parchet.checkState(resolved  ||  propertyNode  ==  null)  {  finishPropertyContinuations();  }  [CE]  ';'  expected  [FE]                            AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  Parchet.checkState(resolved  ||  propertyNode  ==  null)  {  finishPropertyContinuations();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	Parchet.checkState(resolved  ||  propertyNode  ==  null)  {  finishPropertyContinuations();  }	  Parchet.checkState(resolved    ||    resolved)    {    finishPropertyContinuations();    }    else    {    registry.isLastGeneration()    :    null;    }    	non-compiled	[CE]  ';'  expected	109	None	replace
2288	[BUG]  [BUGGY]  if(propertyAnnotations  ==  null)  {  startPropertyAnnotations();  }  else  {  forAnnotations  =  Collections.emptyList();  }  [CE]  cannot  find  symbol  propertyAnnotations  [FE]                  AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(propertyAnnotations  ==  null)  {  startPropertyAnnotations();  }  else  {  forAnnotations  =  Collections.emptyList();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(propertyAnnotations  ==  null)  {  startPropertyAnnotations();  }  else  {  forAnnotations  =  Collections.emptyList();  }	  if(propertyContinuations!=    null)    {    startPropertyAnnotations();    }    else    {    forAnnotations    =    Collections.emptyList();    }    	non-compiled	[CE]  cannot  find  symbol  propertyAnnotations	250	None	replace
2289	[BUG]  [BUGGY]  if(validator!=  null  &&  registry.isLastGeneration())  {  finishPropertyContinuations();  }  if(validator!=  null  &&  registry.getLastGeneration())  {  finishPropertyContinuations();  }  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  if(validator!=  null  &&  registry.isLastGeneration())  {  finishPropertyContinuations();  }  if(validator!=  null  &&  registry.getLastGeneration())  {  finishPropertyContinuations();  }  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	if(validator!=    null    &&    registry.isLastGeneration())    {    finishPropertyContinuations();    }    if(validator!=  null  &&  registry.getLastGeneration())  {  finishPropertyContinuations();  }	  timeout    	non-compiled	[CE]  cannot  find  symbol	235	None	add
2290	[BUG]  [BUGGY]  BundlePropertyContinuations  registry  =  getBundlePropertyContinuationsForType(propertyNode);  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]          boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);      [BUGGY]  BundlePropertyContinuations  registry  =  getBundlePropertyContinuationsForType(propertyNode);  [BUGGY]      return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	196	196	3	replace	BundlePropertyContinuations  registry  =  getBundlePropertyContinuationsForType(propertyNode);	  BundlePropertyContinuations    registry    =    getBundlePropertyContinuations();    	non-compiled	[CE]  cannot  find  symbol	99	None	replace
