bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  return  false;  return  false;  [CE]  unreachable  statement  [FE]        AssertionFailedError    [CONTEXT]    public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;    [BUGGY]  return  false;  return  false;  [BUGGY]    }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	return    false;    return  false;	  timeout    	non-compiled	[CE]  unreachable  statement	1	None	add
2	[BUG]  [BUGGY]  return  false;  if(this.forAnnotations!=  forAnnotations)  {  forAnnotations  ignoreForwardReferencedTypes  =  this.ignoreForwardReferencedTypes;  if(ignoreForwardReferencedTypes  ==  null)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;    [BUGGY]  return  false;  if(this.forAnnotations!=  forAnnotations)  {  forAnnotations  ignoreForwardReferencedTypes  =  this.ignoreForwardReferencedTypes;  if(ignoreForwardReferencedTypes  ==  null)  {  return  false;  }  [BUGGY]    }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	return    false;    if(this.forAnnotations!=  forAnnotations)  {  forAnnotations  ignoreForwardReferencedTypes  =  this.ignoreForwardReferencedTypes;  if(ignoreForwardReferencedTypes  ==  null)  {  return  false;  }	  timeout    	non-compiled	[CE]  illegal  start  of  expression	1	None	add
3	[BUG]  [BUGGY]  return  false;  if(this.isResolved())  {  JSType  referencedType  =  validator.getReferencedType();  if(referencedType!=  null)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;    [BUGGY]  return  false;  if(this.isResolved())  {  JSType  referencedType  =  validator.getReferencedType();  if(referencedType!=  null)  {  return  false;  }  [BUGGY]    }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	return    false;    if(this.isResolved())  {  JSType  referencedType  =  validator.getReferencedType();  if(referencedType!=  null)  {  return  false;  }	  timeout    	non-compiled	[CE]  illegal  start  of  expression	1	None	add
4	[BUG]  [BUGGY]  return  false;  if(this.forAnnotations!=  forAnnotations)  {  forAnnotations  ignoreForwardReferencedTypes  =  getAnnotations();  if(ignoreForwardReferencedTypes  ==  null)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;    [BUGGY]  return  false;  if(this.forAnnotations!=  forAnnotations)  {  forAnnotations  ignoreForwardReferencedTypes  =  getAnnotations();  if(ignoreForwardReferencedTypes  ==  null)  {  return  false;  }  [BUGGY]    }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	return    false;    if(this.forAnnotations!=  forAnnotations)  {  forAnnotations  ignoreForwardReferencedTypes  =  getAnnotations();  if(ignoreForwardReferencedTypes  ==  null)  {  return  false;  }	  timeout    	non-compiled	[CE]  illegal  start  of  expression	1	None	add
5	[BUG]  [BUGGY]  return  false;  if(this.forAnnotations!=  forAnnotations)  {  forAnnotations  ignoreForwardReferencedTypes  =  this.ignoreForwardReferencedTypes;  if(ignoreForwardReferencedTypes!=  null)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;    [BUGGY]  return  false;  if(this.forAnnotations!=  forAnnotations)  {  forAnnotations  ignoreForwardReferencedTypes  =  this.ignoreForwardReferencedTypes;  if(ignoreForwardReferencedTypes!=  null)  {  return  false;  }  [BUGGY]    }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	return    false;    if(this.forAnnotations!=  forAnnotations)  {  forAnnotations  ignoreForwardReferencedTypes  =  this.ignoreForwardReferencedTypes;  if(ignoreForwardReferencedTypes!=  null)  {  return  false;  }	  timeout    	non-compiled	[CE]  illegal  start  of  expression	1	None	add
6	[BUG]  [BUGGY]  return  false;  if(this.forAnnotations!=  forAnnotations)  {  forAnnotations  ignoreForwardReferencedTypes  =  this.ignoreForwardReferencedTypes;  if(ignoreForwardReferencedTypes  >=  null)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]    public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;    [BUGGY]  return  false;  if(this.forAnnotations!=  forAnnotations)  {  forAnnotations  ignoreForwardReferencedTypes  =  this.ignoreForwardReferencedTypes;  if(ignoreForwardReferencedTypes  >=  null)  {  return  false;  }  [BUGGY]    }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	return    false;    if(this.forAnnotations!=  forAnnotations)  {  forAnnotations  ignoreForwardReferencedTypes  =  this.ignoreForwardReferencedTypes;  if(ignoreForwardReferencedTypes  >=  null)  {  return  false;  }	  timeout    	non-compiled	[CE]  illegal  start  of  expression	1	None	add
7	[BUG]  [BUGGY]  return  false;  if(this.forAnnotations!=  forAnnotations)  {  forAnnotations  ignoreForwardReferencedTypes  =  this.ignoreForwardReferencedTypes;  if(ignoreForwardReferencedTypes  ==  false)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError    [CONTEXT]    public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;    [BUGGY]  return  false;  if(this.forAnnotations!=  forAnnotations)  {  forAnnotations  ignoreForwardReferencedTypes  =  this.ignoreForwardReferencedTypes;  if(ignoreForwardReferencedTypes  ==  false)  {  return  false;  }  [BUGGY]    }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	return    false;    if(this.forAnnotations!=  forAnnotations)  {  forAnnotations  ignoreForwardReferencedTypes  =  this.ignoreForwardReferencedTypes;  if(ignoreForwardReferencedTypes  ==  false)  {  return  false;  }	  timeout    	non-compiled	[CE]  illegal  start  of  expression	1	None	add
8	[BUG]  [BUGGY]  return  false;  if(this.forAnnotations!=  forAnnotations)  {  forAnnotations  ignoreForwardReferencedTypes  =  this.ignoreForwardReferencedTypes;  if(ignoreForwardReferencedTypes  ==  null)  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError    [CONTEXT]    public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;    [BUGGY]  return  false;  if(this.forAnnotations!=  forAnnotations)  {  forAnnotations  ignoreForwardReferencedTypes  =  this.ignoreForwardReferencedTypes;  if(ignoreForwardReferencedTypes  ==  null)  {  return  true;  }  [BUGGY]    }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	return    false;    if(this.forAnnotations!=  forAnnotations)  {  forAnnotations  ignoreForwardReferencedTypes  =  this.ignoreForwardReferencedTypes;  if(ignoreForwardReferencedTypes  ==  null)  {  return  true;  }	  timeout    	non-compiled	[CE]  illegal  start  of  expression	1	None	add
9	[BUG]  [BUGGY]  if(this.forwardReferencedTypes!=  null)  {  return  false;  }  [CE]  cannot  find  symbol  forwardReferencedTypes  [FE]              AssertionFailedError    [CONTEXT]    public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;    [BUGGY]  if(this.forwardReferencedTypes!=  null)  {  return  false;  }  [BUGGY]    }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.forwardReferencedTypes!=  null)  {  return  false;  }	  if(this.forAnnotations!=    null)    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol  forwardReferencedTypes	5	None	replace
10	[BUG]  [BUGGY]  if(this.forType!=  null)  {  return  false;  }  [CE]  cannot  find  symbol  forType  [FE]                AssertionFailedError    [CONTEXT]    public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;    [BUGGY]  if(this.forType!=  null)  {  return  false;  }  [BUGGY]    }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.forType!=  null)  {  return  false;  }	  if(this.forAnnotations!=    null)    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol  forType	5	None	replace
11	[BUG]  [BUGGY]  if(this.propertyContinuations!=  null)  {  return  false;  }  [CE]  missing  return  statement  [FE]                  AssertionFailedError    [CONTEXT]    public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;    [BUGGY]  if(this.propertyContinuations!=  null)  {  return  false;  }  [BUGGY]    }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.propertyContinuations!=  null)  {  return  false;  }	  if(this.forAnnotations!=    null)    {    return    false;    }    	non-compiled	[CE]  missing  return  statement	5	None	replace
12	[BUG]  [BUGGY]  if(this.value!=  null)  {  return  false;  }  [CE]  cannot  find  symbol  value  [FE]                    AssertionFailedError    [CONTEXT]    public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;    [BUGGY]  if(this.value!=  null)  {  return  false;  }  [BUGGY]    }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.value!=  null)  {  return  false;  }	  if(this.forAnnotations!=    null)    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol  value	5	None	replace
13	[BUG]  [BUGGY]  if(this.forType  ==  null)  {  return  false;  }  [CE]  cannot  find  symbol  forType  [FE]                      AssertionFailedError    [CONTEXT]    public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;    [BUGGY]  if(this.forType  ==  null)  {  return  false;  }  [BUGGY]    }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.forType  ==  null)  {  return  false;  }	  if(this.forAnnotations!=    null)    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol  forType	5	None	replace
14	[BUG]  [BUGGY]  this.isResolved();  [CE]  missing  return  statement  [FE]                  AssertionFailedError    [CONTEXT]    public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;    [BUGGY]  this.isResolved();  [BUGGY]    }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	this.isResolved();	  if(!this.isResolved())    {    return    true;    }    	non-compiled	[CE]  missing  return  statement	7	None	replace
15	[BUG]  [BUGGY]  if(!this.isValidator())  {  return  true;  }  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError    [CONTEXT]    public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;    [BUGGY]  if(!this.isValidator())  {  return  true;  }  [BUGGY]    }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(!this.isValidator())  {  return  true;  }	  if(!this.isResolved())    {    return    true;    }    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
16	[BUG]  [BUGGY]  if(!this.isForwardDeclared())  {  return  false;  }  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError    [CONTEXT]    public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;    [BUGGY]  if(!this.isForwardDeclared())  {  return  false;  }  [BUGGY]    }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(!this.isForwardDeclared())  {  return  false;  }	  if(!this.isResolved())    {    return    true;    }    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
17	[BUG]  [BUGGY]  if(!this.isValidation())  {  return  true;  }  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError    [CONTEXT]    public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;    [BUGGY]  if(!this.isValidation())  {  return  true;  }  [BUGGY]    }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(!this.isValidation())  {  return  true;  }	  if(!this.isResolved())    {    return    true;    }    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
18	[BUG]  [BUGGY]  if(this.isForwardDeclared())  {  return  false;  }  [CE]  cannot  find  symbol  [FE]            AssertionFailedError    [CONTEXT]    public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;    [BUGGY]  if(this.isForwardDeclared())  {  return  false;  }  [BUGGY]    }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.isForwardDeclared())  {  return  false;  }	  if(this.isResolved())    {    return    true;    }    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
19	[BUG]  [BUGGY]  if(this.isForwardDeclared())  {  return  true;  }  [CE]  cannot  find  symbol  [FE]              AssertionFailedError    [CONTEXT]    public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;    [BUGGY]  if(this.isForwardDeclared())  {  return  true;  }  [BUGGY]    }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.isForwardDeclared())  {  return  true;  }	  if(this.isResolved())    {    return    true;    }    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
20	[BUG]  [BUGGY]  if(this.isInferred())  {  return  true;  }  [CE]  cannot  find  symbol  [FE]                AssertionFailedError    [CONTEXT]    public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;    [BUGGY]  if(this.isInferred())  {  return  true;  }  [BUGGY]    }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.isInferred())  {  return  true;  }	  if(this.isResolved())    {    return    true;    }    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
21	[BUG]  [BUGGY]  if(this.isInferred())  {  return  false;  }  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError    [CONTEXT]    public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;    [BUGGY]  if(this.isInferred())  {  return  false;  }  [BUGGY]    }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.isInferred())  {  return  false;  }	  if(this.isResolved())    {    return    true;    }    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
22	[BUG]  [BUGGY]  this.isForwardDeclared();  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError    [CONTEXT]    public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;    [BUGGY]  this.isForwardDeclared();  [BUGGY]    }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	this.isForwardDeclared();	  if(this.isResolved())    {    return    true;    }    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
23	[BUG]  [BUGGY]  return(this.isResolved()  &&  this.validator!=  null);  return(this.isResolved()  &&  this.validator!=  null);  [CE]  unreachable  statement  [FE]        AssertionFailedError    [CONTEXT]    public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;    [BUGGY]  return(this.isResolved()  &&  this.validator!=  null);  return(this.isResolved()  &&  this.validator!=  null);  [BUGGY]    }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	return(this.isResolved()    &&    this.validator!=    null);    return(this.isResolved()  &&  this.validator!=  null);	  timeout    	non-compiled	[CE]  unreachable  statement	10	None	add
24	[BUG]  [BUGGY]  return(this.isResolved()  &&  this.validator!=  null);  this.isResolved()  &&  this.validator!=  null);  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]    public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;    [BUGGY]  return(this.isResolved()  &&  this.validator!=  null);  this.isResolved()  &&  this.validator!=  null);  [BUGGY]    }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	return(this.isResolved()    &&    this.validator!=    null);    this.isResolved()  &&  this.validator!=  null);	  timeout    	non-compiled	[CE]  not  a  statement	10	None	add
25	[BUG]  [BUGGY]  return(this.isResolved()  &&  this.validator!=  null);  (this.isResolved()  &&  this.validator!=  null);  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]    public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;    [BUGGY]  return(this.isResolved()  &&  this.validator!=  null);  (this.isResolved()  &&  this.validator!=  null);  [BUGGY]    }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	return(this.isResolved()    &&    this.validator!=    null);    (this.isResolved()  &&  this.validator!=  null);	  timeout    	non-compiled	[CE]  not  a  statement	10	None	add
26	[BUG]  [BUGGY]  return(this.isResolved()  &&  this.validator!=  null);  if(this.isResolved()  &&  this.validator!=  null);  [CE]  unreachable  statement  [FE]              AssertionFailedError    [CONTEXT]    public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;    [BUGGY]  return(this.isResolved()  &&  this.validator!=  null);  if(this.isResolved()  &&  this.validator!=  null);  [BUGGY]    }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	return(this.isResolved()    &&    this.validator!=    null);    if(this.isResolved()  &&  this.validator!=  null);	  timeout    	non-compiled	[CE]  unreachable  statement	10	None	add
27	[BUG]  [BUGGY]  return(this.isResolved()  &&  this.validator!=  null);  if(this.isResolved()  &&  this.validator!=  null)  {  return(this.isResolved()  &&  this.validator!=  null);  }  [CE]  unreachable  statement  [FE]                AssertionFailedError    [CONTEXT]    public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;    [BUGGY]  return(this.isResolved()  &&  this.validator!=  null);  if(this.isResolved()  &&  this.validator!=  null)  {  return(this.isResolved()  &&  this.validator!=  null);  }  [BUGGY]    }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	return(this.isResolved()    &&    this.validator!=    null);    if(this.isResolved()  &&  this.validator!=  null)  {  return(this.isResolved()  &&  this.validator!=  null);  }	  timeout    	non-compiled	[CE]  unreachable  statement	10	None	add
28	[BUG]  [BUGGY]  return(this.isResolved()  &&  this.validator!=  null);  if(this.isResolved()  &&  this.validator!=  null);  }  else  {  return(this.isResolved()  &&  this.validator!=  null);  }  [CE]  'else'  without  'if'  [FE]                  AssertionFailedError    [CONTEXT]    public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;    [BUGGY]  return(this.isResolved()  &&  this.validator!=  null);  if(this.isResolved()  &&  this.validator!=  null);  }  else  {  return(this.isResolved()  &&  this.validator!=  null);  }  [BUGGY]    }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	return(this.isResolved()    &&    this.validator!=    null);    if(this.isResolved()  &&  this.validator!=  null);  }  else  {  return(this.isResolved()  &&  this.validator!=  null);  }	  timeout    	non-compiled	[CE]  'else'  without  'if'	10	None	add
29	[BUG]  [BUGGY]  return(this.isResolved()  &&  this.validator!=  null);  if(this.isResolved()  &&  this.validator!=  null)  {  return(this.isResolved()  &&  this.validator  ==  null);  }  [CE]  unreachable  statement  [FE]                    AssertionFailedError    [CONTEXT]    public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;    [BUGGY]  return(this.isResolved()  &&  this.validator!=  null);  if(this.isResolved()  &&  this.validator!=  null)  {  return(this.isResolved()  &&  this.validator  ==  null);  }  [BUGGY]    }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	return(this.isResolved()    &&    this.validator!=    null);    if(this.isResolved()  &&  this.validator!=  null)  {  return(this.isResolved()  &&  this.validator  ==  null);  }	  timeout    	non-compiled	[CE]  unreachable  statement	10	None	add
30	[BUG]  [BUGGY]  if(!this.isValidator())  {  return  false;  }  [CE]  cannot  find  symbol  [FE]                AssertionFailedError    [CONTEXT]    public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;    [BUGGY]  if(!this.isValidator())  {  return  false;  }  [BUGGY]    }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(!this.isValidator())  {  return  false;  }	  if(!this.isResolved())    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
31	[BUG]  [BUGGY]  if(this.value  ==  null)  {  return  false;  }  [CE]  cannot  find  symbol  value  [FE]        AssertionFailedError    [CONTEXT]    public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;    [BUGGY]  if(this.value  ==  null)  {  return  false;  }  [BUGGY]    }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.value  ==  null)  {  return  false;  }	  if(this.slotType!=    null)    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol  value	14	None	replace
32	[BUG]  [BUGGY]  if(this.validator!=  null)  {  return  false;  }  [CE]  missing  return  statement  [FE]          AssertionFailedError    [CONTEXT]    public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;    [BUGGY]  if(this.validator!=  null)  {  return  false;  }  [BUGGY]    }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.validator!=  null)  {  return  false;  }	  if(this.slotType!=    null)    {    return    false;    }    	non-compiled	[CE]  missing  return  statement	14	None	replace
33	[BUG]  [BUGGY]  if(this.referencedType!=  null)  {  return  false;  }  [CE]  referencedType  has  private  access  in  ProxyObjectType  [FE]            AssertionFailedError    [CONTEXT]    public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;    [BUGGY]  if(this.referencedType!=  null)  {  return  false;  }  [BUGGY]    }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.referencedType!=  null)  {  return  false;  }	  if(this.slotType!=    null)    {    return    false;    }    	non-compiled	[CE]  referencedType  has  private  access  in  ProxyObjectType	14	None	replace
34	[BUG]  [BUGGY]  if(validator!=  null)  {  return  false;  }  [CE]  missing  return  statement  [FE]              AssertionFailedError    [CONTEXT]    public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;    [BUGGY]  if(validator!=  null)  {  return  false;  }  [BUGGY]    }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(validator!=  null)  {  return  false;  }	  if(this.slotType!=    null)    {    return    false;    }    	non-compiled	[CE]  missing  return  statement	14	None	replace
35	[BUG]  [BUGGY]  this.isForwardDeclared())  {  return  false;  }  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]    public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;    [BUGGY]  this.isForwardDeclared())  {  return  false;  }  [BUGGY]    }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	this.isForwardDeclared())  {  return  false;  }	  if(this.isResolved())    {    return    false;    }    	non-compiled	[CE]  ';'  expected	3	None	replace
36	[BUG]  [BUGGY]  if(this.forwardReferencedTypes  ==  null)  {  return  false;  }  [CE]  cannot  find  symbol  forwardReferencedTypes  [FE]                    AssertionFailedError    [CONTEXT]    public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;    [BUGGY]  if(this.forwardReferencedTypes  ==  null)  {  return  false;  }  [BUGGY]    }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.forwardReferencedTypes  ==  null)  {  return  false;  }	  if(this.forAnnotations    ==    null)    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol  forwardReferencedTypes	8	None	replace
37	[BUG]  [BUGGY]  if(this.propertyContinuations  ==  null)  {  return  false;  }  [CE]  missing  return  statement  [FE]                      AssertionFailedError    [CONTEXT]    public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;    [BUGGY]  if(this.propertyContinuations  ==  null)  {  return  false;  }  [BUGGY]    }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.propertyContinuations  ==  null)  {  return  false;  }	  if(this.forAnnotations    ==    null)    {    return    false;    }    	non-compiled	[CE]  missing  return  statement	8	None	replace
38	[BUG]  [BUGGY]  if(this.isResolved())  {  return  super.setValidator(validator);  }  [CE]  missing  return  statement  [FE]          AssertionFailedError    [CONTEXT]    public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;    [BUGGY]  if(this.isResolved())  {  return  super.setValidator(validator);  }  [BUGGY]    }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.isResolved())  {  return  super.setValidator(validator);  }	  return    super.setValidator(validator);    timeout    	non-compiled	[CE]  missing  return  statement	13	None	replace
39	[BUG]  [BUGGY]  if(this.validator!=  null)  {  return  super.setValidator(validator);  }  [CE]  missing  return  statement  [FE]            AssertionFailedError    [CONTEXT]    public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;    [BUGGY]  if(this.validator!=  null)  {  return  super.setValidator(validator);  }  [BUGGY]    }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.validator!=  null)  {  return  super.setValidator(validator);  }	  return    super.setValidator(validator);    timeout    	non-compiled	[CE]  missing  return  statement	13	None	replace
40	[BUG]  [BUGGY]  return  super.setValidator(validator,  this.forAnnotations);  [CE]  cannot  find  symbol  forAnnotations  [FE]              AssertionFailedError    [CONTEXT]    public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;    [BUGGY]  return  super.setValidator(validator,  this.forAnnotations);  [BUGGY]    }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	return  super.setValidator(validator,  this.forAnnotations);	  return    super.setValidator(validator);    timeout    	non-compiled	[CE]  cannot  find  symbol  forAnnotations	13	None	replace
41	[BUG]  [BUGGY]  if(this.validator!=  null)  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;  }  [CE]  missing  return  statement  [FE]                AssertionFailedError    [CONTEXT]    public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;    [BUGGY]  if(this.validator!=  null)  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;  }  [BUGGY]    }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.validator!=  null)  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;  }	  return    super.setValidator(validator);    timeout    	non-compiled	[CE]  missing  return  statement	13	None	replace
42	[BUG]  [BUGGY]  if(this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;  }  [CE]  missing  return  statement  [FE]                  AssertionFailedError    [CONTEXT]    public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;    [BUGGY]  if(this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;  }  [BUGGY]    }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;  }	  return    super.setValidator(validator);    timeout    	non-compiled	[CE]  missing  return  statement	13	None	replace
43	[BUG]  [BUGGY]  if(this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.resolved  =  true;  }  [CE]  resolved  has  private  access  in  JSType  [FE]                    AssertionFailedError    [CONTEXT]    public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;    [BUGGY]  if(this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.resolved  =  true;  }  [BUGGY]    }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.resolved  =  true;  }	  return    super.setValidator(validator);    timeout    	non-compiled	[CE]  resolved  has  private  access  in  JSType	13	None	replace
44	[BUG]  [BUGGY]  if(this.forAnnotations!=  forAnnotations)  {  return  false;  }  [CE]  cannot  find  symbol  forAnnotations  [FE]        AssertionFailedError    [CONTEXT]    public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;    [BUGGY]  if(this.forAnnotations!=  forAnnotations)  {  return  false;  }  [BUGGY]    }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.forAnnotations!=  forAnnotations)  {  return  false;  }	  return    false;    timeout    	non-compiled	[CE]  cannot  find  symbol  forAnnotations	2	None	replace
45	[BUG]  [BUGGY]  if(this.forAnnotations!=  validator)  {  return  false;  }  [CE]  cannot  find  symbol  forAnnotations  [FE]          AssertionFailedError    [CONTEXT]    public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;    [BUGGY]  if(this.forAnnotations!=  validator)  {  return  false;  }  [BUGGY]    }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.forAnnotations!=  validator)  {  return  false;  }	  return    false;    timeout    	non-compiled	[CE]  cannot  find  symbol  forAnnotations	2	None	replace
46	[BUG]  [BUGGY]  if(this.slotType.equals(validator))  {  return  false;  }  [CE]  cannot  find  symbol  slotType  [FE]            AssertionFailedError    [CONTEXT]    public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;    [BUGGY]  if(this.slotType.equals(validator))  {  return  false;  }  [BUGGY]    }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.slotType.equals(validator))  {  return  false;  }	  return    false;    timeout    	non-compiled	[CE]  cannot  find  symbol  slotType	2	None	replace
47	[BUG]  [BUGGY]  return  super.setValidator(validator);  return  super.setValidator(validator);  [CE]  unreachable  statement  [FE]          AssertionFailedError    [CONTEXT]    public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;    [BUGGY]  return  super.setValidator(validator);  return  super.setValidator(validator);  [BUGGY]    }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	return    super.setValidator(validator);    return  super.setValidator(validator);	  timeout    	non-compiled	[CE]  unreachable  statement	12	None	add
48	[BUG]  [BUGGY]  return  super.setValidator(validator);  if(this.isResolved())  {  Predicate  <  JSType>  property  =  this.referencedType.getProperty(propertyName);  if(property!=  null)  {  return  super.setValidator(property);  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;    [BUGGY]  return  super.setValidator(validator);  if(this.isResolved())  {  Predicate  <  JSType>  property  =  this.referencedType.getProperty(propertyName);  if(property!=  null)  {  return  super.setValidator(property);  }  [BUGGY]    }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	return    super.setValidator(validator);    if(this.isResolved())  {  Predicate  <  JSType>  property  =  this.referencedType.getProperty(propertyName);  if(property!=  null)  {  return  super.setValidator(property);  }	  timeout    	non-compiled	[CE]  illegal  start  of  expression	12	None	add
49	[BUG]  [BUGGY]  return  super.setValidator(validator);  if(this.isResolved())  {  Predicate  <  JSType>  property  =  this.referencedType.getProperty(propertyName);  if(property  ==  null)  {  return  super.setValidator(property);  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;    [BUGGY]  return  super.setValidator(validator);  if(this.isResolved())  {  Predicate  <  JSType>  property  =  this.referencedType.getProperty(propertyName);  if(property  ==  null)  {  return  super.setValidator(property);  }  [BUGGY]    }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	return    super.setValidator(validator);    if(this.isResolved())  {  Predicate  <  JSType>  property  =  this.referencedType.getProperty(propertyName);  if(property  ==  null)  {  return  super.setValidator(property);  }	  timeout    	non-compiled	[CE]  illegal  start  of  expression	12	None	add
50	[BUG]  [BUGGY]  return  super.setValidator(validator);  if(this.isResolved())  {  return  super.setValidator(validator);  }  [CE]  unreachable  statement  [FE]                AssertionFailedError    [CONTEXT]    public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;    [BUGGY]  return  super.setValidator(validator);  if(this.isResolved())  {  return  super.setValidator(validator);  }  [BUGGY]    }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	return    super.setValidator(validator);    if(this.isResolved())  {  return  super.setValidator(validator);  }	  timeout    	non-compiled	[CE]  unreachable  statement	12	None	add
51	[BUG]  [BUGGY]  return  super.setValidator(validator);  if(this.isResolved())  {  Predicate  <  JSType>  property  =  this.referencedType.getProperty(propertyName);  if(property!=  null)  {  return  super.setValidator(validator);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]    public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;    [BUGGY]  return  super.setValidator(validator);  if(this.isResolved())  {  Predicate  <  JSType>  property  =  this.referencedType.getProperty(propertyName);  if(property!=  null)  {  return  super.setValidator(validator);  }  [BUGGY]    }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	return    super.setValidator(validator);    if(this.isResolved())  {  Predicate  <  JSType>  property  =  this.referencedType.getProperty(propertyName);  if(property!=  null)  {  return  super.setValidator(validator);  }	  timeout    	non-compiled	[CE]  illegal  start  of  expression	12	None	add
52	[BUG]  [BUGGY]  return  super.setValidator(validator);  if(this.isResolved())  {  Predicate  <  JSType>  validator  =  this.validator;  if(validator!=  null)  {  return  super.setValidator(validator);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError    [CONTEXT]    public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;    [BUGGY]  return  super.setValidator(validator);  if(this.isResolved())  {  Predicate  <  JSType>  validator  =  this.validator;  if(validator!=  null)  {  return  super.setValidator(validator);  }  [BUGGY]    }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	return    super.setValidator(validator);    if(this.isResolved())  {  Predicate  <  JSType>  validator  =  this.validator;  if(validator!=  null)  {  return  super.setValidator(validator);  }	  timeout    	non-compiled	[CE]  illegal  start  of  expression	12	None	add
53	[BUG]  [BUGGY]  return  super.setValidator(validator);  if(this.isResolved())  {  for(JSType  referencedType  :  this.referencedTypes)  {  return  super.setValidator(referencedType);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError    [CONTEXT]    public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;    [BUGGY]  return  super.setValidator(validator);  if(this.isResolved())  {  for(JSType  referencedType  :  this.referencedTypes)  {  return  super.setValidator(referencedType);  }  [BUGGY]    }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	return    super.setValidator(validator);    if(this.isResolved())  {  for(JSType  referencedType  :  this.referencedTypes)  {  return  super.setValidator(referencedType);  }	  timeout    	non-compiled	[CE]  illegal  start  of  expression	12	None	add
54	[BUG]  [BUGGY]  timeout  [FE]        AssertionFailedError    [CONTEXT]    public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;    [BUGGY]  return(this.isResolved()  ||  this.validator!=  null);  [BUGGY]    }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	add	return(this.isResolved()  ||  this.validator!=  null);	  return(this.isResolved()    &&    this.validator!=    null);    timeout    	compilable	timeout	11	1	replace
55	[BUG]  [BUGGY]  return(this.isResolved()  ||  this.validator!=  null);  timeout  [FE]        AssertionFailedError    [CONTEXT]    public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;    [BUGGY]  return(this.isResolved()  ||  this.validator!=  null);  [BUGGY]    }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	return(this.isResolved()  ||  this.validator!=  null);	  return(this.isResolved()    &&    this.validator!=    null);    timeout    	compilable	timeout	11	1	replace
56	[BUG]  [BUGGY]  timeout  [FE]          AssertionFailedError    [CONTEXT]    public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;    [BUGGY]  return(this.isResolved()  &&  validator!=  null);  [BUGGY]    }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	add	return(this.isResolved()  &&  validator!=  null);	  return(this.isResolved()    &&    this.validator!=    null);    timeout    	compilable	timeout	11	1	replace
57	[BUG]  [BUGGY]  return(this.isResolved()  &&  validator!=  null);  timeout  [FE]          AssertionFailedError    [CONTEXT]    public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;    [BUGGY]  return(this.isResolved()  &&  validator!=  null);  [BUGGY]    }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	return(this.isResolved()  &&  validator!=  null);	  return(this.isResolved()    &&    this.validator!=    null);    timeout    	compilable	timeout	11	1	replace
58	[BUG]  [BUGGY]  if(this.isResolved())  {  return(this.isResolved()  &&  this.validator!=  null);  }  [CE]  missing  return  statement  [FE]            AssertionFailedError    [CONTEXT]    public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;    [BUGGY]  if(this.isResolved())  {  return(this.isResolved()  &&  this.validator!=  null);  }  [BUGGY]    }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.isResolved())  {  return(this.isResolved()  &&  this.validator!=  null);  }	  return(this.isResolved()    &&    this.validator!=    null);    timeout    	non-compiled	[CE]  missing  return  statement	11	None	replace
59	[BUG]  [BUGGY]  timeout  [FE]              AssertionFailedError    [CONTEXT]    public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;    [BUGGY]  return(this.isResolved()  &&  this.validator  ==  null);  [BUGGY]    }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	add	return(this.isResolved()  &&  this.validator  ==  null);	  return(this.isResolved()    &&    this.validator!=    null);    timeout    	compilable	timeout	11	1	replace
60	[BUG]  [BUGGY]  return(this.isResolved()  &&  this.validator  ==  null);  timeout  [FE]              AssertionFailedError    [CONTEXT]    public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;    [BUGGY]  return(this.isResolved()  &&  this.validator  ==  null);  [BUGGY]    }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	return(this.isResolved()  &&  this.validator  ==  null);	  return(this.isResolved()    &&    this.validator!=    null);    timeout    	compilable	timeout	11	1	replace
61	[BUG]  [BUGGY]  timeout  [FE]                AssertionFailedError    [CONTEXT]    public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;    [BUGGY]  return(this.isResolved()  &&  validator  ==  null);  [BUGGY]    }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	add	return(this.isResolved()  &&  validator  ==  null);	  return(this.isResolved()    &&    this.validator!=    null);    timeout    	compilable	timeout	11	1	replace
62	[BUG]  [BUGGY]  return(this.isResolved()  &&  validator  ==  null);  timeout  [FE]                AssertionFailedError    [CONTEXT]    public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;    [BUGGY]  return(this.isResolved()  &&  validator  ==  null);  [BUGGY]    }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	return(this.isResolved()  &&  validator  ==  null);	  return(this.isResolved()    &&    this.validator!=    null);    timeout    	compilable	timeout	11	1	replace
63	[BUG]  [BUGGY]  if(this.isResolved())  {  return(this.isResolved()  &&  validator!=  null);  }  [CE]  missing  return  statement  [FE]                  AssertionFailedError    [CONTEXT]    public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;    [BUGGY]  if(this.isResolved())  {  return(this.isResolved()  &&  validator!=  null);  }  [BUGGY]    }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.isResolved())  {  return(this.isResolved()  &&  validator!=  null);  }	  return(this.isResolved()    &&    this.validator!=    null);    timeout    	non-compiled	[CE]  missing  return  statement	11	None	replace
64	[BUG]  [BUGGY]  if(this.isResolved())  {  Predicate  <  JSType>  referencedType  =  validator.getReferencedType();  if(referencedType!=  null)  {  return  referencedType.setValidator(value);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError    [CONTEXT]    public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;    [BUGGY]  if(this.isResolved())  {  Predicate  <  JSType>  referencedType  =  validator.getReferencedType();  if(referencedType!=  null)  {  return  referencedType.setValidator(value);  }  [BUGGY]    }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.isResolved())  {  Predicate  <  JSType>  referencedType  =  validator.getReferencedType();  if(referencedType!=  null)  {  return  referencedType.setValidator(value);  }	      	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
65	[BUG]  [BUGGY]  if(this.isResolved())  {  Predicate  <  JSType>  referencedType  =  validator.getReferencedType();  if(referencedType!=  null)  {  return  referencedType.setValidator(validator);  }  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError    [CONTEXT]    public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;    [BUGGY]  if(this.isResolved())  {  Predicate  <  JSType>  referencedType  =  validator.getReferencedType();  if(referencedType!=  null)  {  return  referencedType.setValidator(validator);  }  [BUGGY]    }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.isResolved())  {  Predicate  <  JSType>  referencedType  =  validator.getReferencedType();  if(referencedType!=  null)  {  return  referencedType.setValidator(validator);  }	      	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
66	[BUG]  [BUGGY]  if(this.isResolved())  {  Predicate  <  JSType>  referencedType  =  validator.getReferencedType();  if(referencedType  ==  null)  {  return  referencedType.setValidator(value);  }  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError    [CONTEXT]    public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;    [BUGGY]  if(this.isResolved())  {  Predicate  <  JSType>  referencedType  =  validator.getReferencedType();  if(referencedType  ==  null)  {  return  referencedType.setValidator(value);  }  [BUGGY]    }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.isResolved())  {  Predicate  <  JSType>  referencedType  =  validator.getReferencedType();  if(referencedType  ==  null)  {  return  referencedType.setValidator(value);  }	      	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
67	[BUG]  [BUGGY]  if(this.isResolved())  {  Predicate  <  JSType>  referencedType  =  validator.getReferencedType();  if(referencedType  ==  null)  {  return  referencedType.setValidator(validator);  }  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError    [CONTEXT]    public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;    [BUGGY]  if(this.isResolved())  {  Predicate  <  JSType>  referencedType  =  validator.getReferencedType();  if(referencedType  ==  null)  {  return  referencedType.setValidator(validator);  }  [BUGGY]    }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.isResolved())  {  Predicate  <  JSType>  referencedType  =  validator.getReferencedType();  if(referencedType  ==  null)  {  return  referencedType.setValidator(validator);  }	      	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
68	[BUG]  [BUGGY]  if(this.isResolved())  {  Predicate  <  JSType>  referencedType  =  validator.getReferencedType();  if(referencedType!=  null)  {  return  referencedType.setValidator(referencedType);  }  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError    [CONTEXT]    public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;    [BUGGY]  if(this.isResolved())  {  Predicate  <  JSType>  referencedType  =  validator.getReferencedType();  if(referencedType!=  null)  {  return  referencedType.setValidator(referencedType);  }  [BUGGY]    }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.isResolved())  {  Predicate  <  JSType>  referencedType  =  validator.getReferencedType();  if(referencedType!=  null)  {  return  referencedType.setValidator(referencedType);  }	      	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
69	[BUG]  [BUGGY]  if(this.isResolved())  {  Predicate  <  JSType>  validator  =  this.referencedType.setValidator(validator);  if(validator!=  null)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                                AssertionFailedError    [CONTEXT]    public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;    [BUGGY]  if(this.isResolved())  {  Predicate  <  JSType>  validator  =  this.referencedType.setValidator(validator);  if(validator!=  null)  {  return  false;  }  [BUGGY]    }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.isResolved())  {  Predicate  <  JSType>  validator  =  this.referencedType.setValidator(validator);  if(validator!=  null)  {  return  false;  }	      	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
70	[BUG]  [BUGGY]  if(this.isResolved())  {  Predicate  <  JSType>  validator  =  this.referencedType.getValidator();  if(validator!=  null)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                                  AssertionFailedError    [CONTEXT]    public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;    [BUGGY]  if(this.isResolved())  {  Predicate  <  JSType>  validator  =  this.referencedType.getValidator();  if(validator!=  null)  {  return  false;  }  [BUGGY]    }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.isResolved())  {  Predicate  <  JSType>  validator  =  this.referencedType.getValidator();  if(validator!=  null)  {  return  false;  }	      	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
71	[BUG]  [BUGGY]  return(this.isResolved()  &&  this.validator!=  null);  Return(this.isResolved()  &&  this.validator!=  null);  [CE]  cannot  find  symbol  [FE]        AssertionFailedError    [CONTEXT]    public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;    [BUGGY]  return(this.isResolved()  &&  this.validator!=  null);  Return(this.isResolved()  &&  this.validator!=  null);  [BUGGY]    }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	return(this.isResolved()    &&    this.validator!=    null);    Return(this.isResolved()  &&  this.validator!=  null);	  timeout    	non-compiled	[CE]  cannot  find  symbol	10	None	add
72	[BUG]  [BUGGY]  if(this.forAnnotations!=  null)  {  return  true;  }  [CE]  cannot  find  symbol  forAnnotations  [FE]              AssertionFailedError    [CONTEXT]    public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;    [BUGGY]  if(this.forAnnotations!=  null)  {  return  true;  }  [BUGGY]    }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.forAnnotations!=  null)  {  return  true;  }	  if(this.forAnnotations!=    null)    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol  forAnnotations	5	None	replace
73	[BUG]  [BUGGY]  if(this.forAnonymousTypes!=  null)  {  return  false;  }  [CE]  cannot  find  symbol  forAnonymousTypes  [FE]                AssertionFailedError    [CONTEXT]    public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;    [BUGGY]  if(this.forAnonymousTypes!=  null)  {  return  false;  }  [BUGGY]    }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.forAnonymousTypes!=  null)  {  return  false;  }	  if(this.forAnnotations!=    null)    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol  forAnonymousTypes	5	None	replace
74	[BUG]  [BUGGY]  this.isForwardDeclared())  {  return  true;  }  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]    public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;    [BUGGY]  this.isForwardDeclared())  {  return  true;  }  [BUGGY]    }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	this.isForwardDeclared())  {  return  true;  }	  if(this.isResolved())    {    return    true;    }    	non-compiled	[CE]  ';'  expected	4	None	replace
75	[BUG]  [BUGGY]  if(this.isValidator())  {  return  true;  }  [CE]  cannot  find  symbol  [FE]              AssertionFailedError    [CONTEXT]    public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;    [BUGGY]  if(this.isValidator())  {  return  true;  }  [BUGGY]    }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.isValidator())  {  return  true;  }	  if(this.isResolved())    {    return    true;    }    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
76	[BUG]  [BUGGY]  if(this.isReferenced())  {  return  false;  }  [CE]  cannot  find  symbol  [FE]                AssertionFailedError    [CONTEXT]    public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;    [BUGGY]  if(this.isReferenced())  {  return  false;  }  [BUGGY]    }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.isReferenced())  {  return  false;  }	  if(this.isResolved())    {    return    true;    }    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
77	[BUG]  [BUGGY]  return  super.setValidator(validator);  if(this.isResolved())  {  Predicate  <?>  property  =  this.referencedType.getProperty(propertyName);  if(property!=  null)  {  return  super.setValidator(validator);  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;    [BUGGY]  return  super.setValidator(validator);  if(this.isResolved())  {  Predicate  <?>  property  =  this.referencedType.getProperty(propertyName);  if(property!=  null)  {  return  super.setValidator(validator);  }  [BUGGY]    }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	return    super.setValidator(validator);    if(this.isResolved())  {  Predicate  <?>  property  =  this.referencedType.getProperty(propertyName);  if(property!=  null)  {  return  super.setValidator(validator);  }	  timeout    	non-compiled	[CE]  illegal  start  of  expression	12	None	add
78	[BUG]  [BUGGY]  return  super.setValidator(validator);  if(this.isResolved())  {  Predicate  <  JSType>  property  =  this.getProperty(propertyName);  if(property!=  null)  {  return  super.setValidator(property);  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;    [BUGGY]  return  super.setValidator(validator);  if(this.isResolved())  {  Predicate  <  JSType>  property  =  this.getProperty(propertyName);  if(property!=  null)  {  return  super.setValidator(property);  }  [BUGGY]    }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	return    super.setValidator(validator);    if(this.isResolved())  {  Predicate  <  JSType>  property  =  this.getProperty(propertyName);  if(property!=  null)  {  return  super.setValidator(property);  }	  timeout    	non-compiled	[CE]  illegal  start  of  expression	12	None	add
79	[BUG]  [BUGGY]  return  super.setValidator(validator);  if(this.isResolved())  {  return  super.setValidator(validator);  }  else  {  return  super.setValidator(validator);  }  [CE]  unreachable  statement  [FE]              AssertionFailedError    [CONTEXT]    public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;    [BUGGY]  return  super.setValidator(validator);  if(this.isResolved())  {  return  super.setValidator(validator);  }  else  {  return  super.setValidator(validator);  }  [BUGGY]    }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	return    super.setValidator(validator);    if(this.isResolved())  {  return  super.setValidator(validator);  }  else  {  return  super.setValidator(validator);  }	  timeout    	non-compiled	[CE]  unreachable  statement	12	None	add
80	[BUG]  [BUGGY]  return  super.setValidator(validator);  if(this.isResolved())  {  Predicate  <?>  property  =  this.referencedType.getProperty(propertyName);  if(property!=  null)  {  return  super.setValidator(property);  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;    [BUGGY]  return  super.setValidator(validator);  if(this.isResolved())  {  Predicate  <?>  property  =  this.referencedType.getProperty(propertyName);  if(property!=  null)  {  return  super.setValidator(property);  }  [BUGGY]    }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	return    super.setValidator(validator);    if(this.isResolved())  {  Predicate  <?>  property  =  this.referencedType.getProperty(propertyName);  if(property!=  null)  {  return  super.setValidator(property);  }	  timeout    	non-compiled	[CE]  illegal  start  of  expression	12	None	add
81	[BUG]  [BUGGY]  return  super.setValidator(validator);  if(this.isResolved())  {  Predicate  <?>  property  =  this.referencedType.getProperty(propertyName);  if(property!=  null)  {  return  super.setValidator(value);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]    public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;    [BUGGY]  return  super.setValidator(validator);  if(this.isResolved())  {  Predicate  <?>  property  =  this.referencedType.getProperty(propertyName);  if(property!=  null)  {  return  super.setValidator(value);  }  [BUGGY]    }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	return    super.setValidator(validator);    if(this.isResolved())  {  Predicate  <?>  property  =  this.referencedType.getProperty(propertyName);  if(property!=  null)  {  return  super.setValidator(value);  }	  timeout    	non-compiled	[CE]  illegal  start  of  expression	12	None	add
82	[BUG]  [BUGGY]  if(this.isValidator())  {  return  false;  }  [CE]  cannot  find  symbol  [FE]                AssertionFailedError    [CONTEXT]    public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;    [BUGGY]  if(this.isValidator())  {  return  false;  }  [BUGGY]    }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.isValidator())  {  return  false;  }	  if(!this.isResolved())    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
83	[BUG]  [BUGGY]  if(isForwardDeclared())  {  return  false;  }  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError    [CONTEXT]    public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;    [BUGGY]  if(isForwardDeclared())  {  return  false;  }  [BUGGY]    }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(isForwardDeclared())  {  return  false;  }	  if(!this.isResolved())    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
84	[BUG]  [BUGGY]  return  false;  if(!this.forAnnotations)  {  forAnnotations  ignoreForwardReferencedTypes  =  this.ignoreForwardReferencedTypes;  if(ignoreForwardReferencedTypes)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;    [BUGGY]  return  false;  if(!this.forAnnotations)  {  forAnnotations  ignoreForwardReferencedTypes  =  this.ignoreForwardReferencedTypes;  if(ignoreForwardReferencedTypes)  {  return  false;  }  [BUGGY]    }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	return    false;    if(!this.forAnnotations)  {  forAnnotations  ignoreForwardReferencedTypes  =  this.ignoreForwardReferencedTypes;  if(ignoreForwardReferencedTypes)  {  return  false;  }	  timeout    	non-compiled	[CE]  illegal  start  of  expression	1	None	add
85	[BUG]  [BUGGY]  return  false;  if(!this.forAnnotations)  {  forAnnotations  ignoreForwardReferencedTypes  =  this.ignoreForwardReferencedTypes;  if(ignoreForwardReferencedTypes)  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;    [BUGGY]  return  false;  if(!this.forAnnotations)  {  forAnnotations  ignoreForwardReferencedTypes  =  this.ignoreForwardReferencedTypes;  if(ignoreForwardReferencedTypes)  {  return  true;  }  [BUGGY]    }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	return    false;    if(!this.forAnnotations)  {  forAnnotations  ignoreForwardReferencedTypes  =  this.ignoreForwardReferencedTypes;  if(ignoreForwardReferencedTypes)  {  return  true;  }	  timeout    	non-compiled	[CE]  illegal  start  of  expression	1	None	add
86	[BUG]  [BUGGY]  return  false;  if(!this.forAnnotations)  {  forAnnotations  ignoreForwardReferencedTypes  =  this.ignoreForwardReferencedTypes;  if(isForwardDeclared)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;    [BUGGY]  return  false;  if(!this.forAnnotations)  {  forAnnotations  ignoreForwardReferencedTypes  =  this.ignoreForwardReferencedTypes;  if(isForwardDeclared)  {  return  false;  }  [BUGGY]    }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	return    false;    if(!this.forAnnotations)  {  forAnnotations  ignoreForwardReferencedTypes  =  this.ignoreForwardReferencedTypes;  if(isForwardDeclared)  {  return  false;  }	  timeout    	non-compiled	[CE]  illegal  start  of  expression	1	None	add
87	[BUG]  [BUGGY]  return  false;  if(this.isResolved())  {  JSType  referencedType  =  getReferencedType(referenced);  if(referencedType!=  null)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;    [BUGGY]  return  false;  if(this.isResolved())  {  JSType  referencedType  =  getReferencedType(referenced);  if(referencedType!=  null)  {  return  false;  }  [BUGGY]    }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	return    false;    if(this.isResolved())  {  JSType  referencedType  =  getReferencedType(referenced);  if(referencedType!=  null)  {  return  false;  }	  timeout    	non-compiled	[CE]  illegal  start  of  expression	1	None	add
88	[BUG]  [BUGGY]  return  false;  if(this.isResolved())  {  JSType  referencedType  =  getReferencedType(reference);  if(referencedType!=  null)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;    [BUGGY]  return  false;  if(this.isResolved())  {  JSType  referencedType  =  getReferencedType(reference);  if(referencedType!=  null)  {  return  false;  }  [BUGGY]    }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	return    false;    if(this.isResolved())  {  JSType  referencedType  =  getReferencedType(reference);  if(referencedType!=  null)  {  return  false;  }	  timeout    	non-compiled	[CE]  illegal  start  of  expression	1	None	add
89	[BUG]  [BUGGY]  return  false;  if(!this.forAnnotations)  {  forAnnotations  ignoreForwardReferencedTypes  =  this.ignoreForwardReferencedTypes;  if(isForwardDeclared)  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]    public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;    [BUGGY]  return  false;  if(!this.forAnnotations)  {  forAnnotations  ignoreForwardReferencedTypes  =  this.ignoreForwardReferencedTypes;  if(isForwardDeclared)  {  return  true;  }  [BUGGY]    }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	return    false;    if(!this.forAnnotations)  {  forAnnotations  ignoreForwardReferencedTypes  =  this.ignoreForwardReferencedTypes;  if(isForwardDeclared)  {  return  true;  }	  timeout    	non-compiled	[CE]  illegal  start  of  expression	1	None	add
90	[BUG]  [BUGGY]  return  false;  if(this.isResolved())  {  JSType  referencedType  =  getReferencedType(referenced);  if(referencedType  ==  null)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError    [CONTEXT]    public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;    [BUGGY]  return  false;  if(this.isResolved())  {  JSType  referencedType  =  getReferencedType(referenced);  if(referencedType  ==  null)  {  return  false;  }  [BUGGY]    }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	return    false;    if(this.isResolved())  {  JSType  referencedType  =  getReferencedType(referenced);  if(referencedType  ==  null)  {  return  false;  }	  timeout    	non-compiled	[CE]  illegal  start  of  expression	1	None	add
91	[BUG]  [BUGGY]  if(value!=  null)  {  return  false;  }  [CE]  cannot  find  symbol  value  [FE]        AssertionFailedError    [CONTEXT]    public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;    [BUGGY]  if(value!=  null)  {  return  false;  }  [BUGGY]    }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(value!=  null)  {  return  false;  }	  if(this.slotType!=    null)    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol  value	14	None	replace
92	[BUG]  [BUGGY]  if(validator  ==  null)  {  return  false;  }  [CE]  missing  return  statement  [FE]                    AssertionFailedError    [CONTEXT]    public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;    [BUGGY]  if(validator  ==  null)  {  return  false;  }  [BUGGY]    }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(validator  ==  null)  {  return  false;  }	  if(this.forAnnotations    ==    null)    {    return    false;    }    	non-compiled	[CE]  missing  return  statement	8	None	replace
93	[BUG]  [BUGGY]  if(this.forAnonymousTypes  ==  null)  {  return  false;  }  [CE]  cannot  find  symbol  forAnonymousTypes  [FE]                      AssertionFailedError    [CONTEXT]    public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;    [BUGGY]  if(this.forAnonymousTypes  ==  null)  {  return  false;  }  [BUGGY]    }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.forAnonymousTypes  ==  null)  {  return  false;  }	  if(this.forAnnotations    ==    null)    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol  forAnonymousTypes	8	None	replace
94	[BUG]  [BUGGY]  timeout  [FE]          AssertionFailedError    [CONTEXT]    public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;    [BUGGY]  return  super.setValidator(this.validator);  [BUGGY]    }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	add	return  super.setValidator(this.validator);	  return    super.setValidator(validator);    timeout    	compilable	timeout	13	1	replace
95	[BUG]  [BUGGY]  return  super.setValidator(this.validator);  timeout  [FE]          AssertionFailedError    [CONTEXT]    public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;    [BUGGY]  return  super.setValidator(this.validator);  [BUGGY]    }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	return  super.setValidator(this.validator);	  return    super.setValidator(validator);    timeout    	compilable	timeout	13	1	replace
96	[BUG]  [BUGGY]  if(this.isResolved())  {  return  super.setValidator(validator);  }  else  {  Predicate  <  JSType>  referencedType  =  this.referencedType.getReferencedType();  if(referencedType!=  null)  {  return  reference  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]    public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;    [BUGGY]  if(this.isResolved())  {  return  super.setValidator(validator);  }  else  {  Predicate  <  JSType>  referencedType  =  this.referencedType.getReferencedType();  if(referencedType!=  null)  {  return  reference  [BUGGY]    }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.isResolved())  {  return  super.setValidator(validator);  }  else  {  Predicate  <  JSType>  referencedType  =  this.referencedType.getReferencedType();  if(referencedType!=  null)  {  return  reference	  return    super.setValidator(validator);    timeout    	non-compiled	[CE]  ';'  expected	13	None	replace
97	[BUG]  [BUGGY]  if(this.validator!=  null)  {  return  super.setValidator(validator);  }  else  {  Predicate  <  JSType>  property  =  this.referencedTypes.get(reference);  if(property.isResolved())  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;    [BUGGY]  if(this.validator!=  null)  {  return  super.setValidator(validator);  }  else  {  Predicate  <  JSType>  property  =  this.referencedTypes.get(reference);  if(property.isResolved())  {  return  true;  }  [BUGGY]    }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.validator!=  null)  {  return  super.setValidator(validator);  }  else  {  Predicate  <  JSType>  property  =  this.referencedTypes.get(reference);  if(property.isResolved())  {  return  true;  }	  return    super.setValidator(validator);    timeout    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
98	[BUG]  [BUGGY]  if(this.isResolved())  {  return  false;  }  else  {  Predicate  <  JSType>  propertyNode  =  this.referencedTypes.get(reference);  if(propertyNode!=  propertyNode)  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;    [BUGGY]  if(this.isResolved())  {  return  false;  }  else  {  Predicate  <  JSType>  propertyNode  =  this.referencedTypes.get(reference);  if(propertyNode!=  propertyNode)  {  return  true;  }  [BUGGY]    }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.isResolved())  {  return  false;  }  else  {  Predicate  <  JSType>  propertyNode  =  this.referencedTypes.get(reference);  if(propertyNode!=  propertyNode)  {  return  true;  }	  return    false;    timeout    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
99	[BUG]  [BUGGY]  if(this.isResolved())  {  return  false;  }  else  {  Predicate  <  JSType>  propertyNode  =  this.referencedTypes.get(reference);  if(propertyNode!=  null)  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;    [BUGGY]  if(this.isResolved())  {  return  false;  }  else  {  Predicate  <  JSType>  propertyNode  =  this.referencedTypes.get(reference);  if(propertyNode!=  null)  {  return  true;  }  [BUGGY]    }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.isResolved())  {  return  false;  }  else  {  Predicate  <  JSType>  propertyNode  =  this.referencedTypes.get(reference);  if(propertyNode!=  null)  {  return  true;  }	  return    false;    timeout    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
100	[BUG]  [BUGGY]  if(this.isResolved())  {  return  false;  }  else  {  Predicate  <  JSType>  referencedType  =  this.referencedTypes.get(reference);  if(referencedType!=  null)  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;    [BUGGY]  if(this.isResolved())  {  return  false;  }  else  {  Predicate  <  JSType>  referencedType  =  this.referencedTypes.get(reference);  if(referencedType!=  null)  {  return  true;  }  [BUGGY]    }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.isResolved())  {  return  false;  }  else  {  Predicate  <  JSType>  referencedType  =  this.referencedTypes.get(reference);  if(referencedType!=  null)  {  return  true;  }	  return    false;    timeout    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
101	[BUG]  [BUGGY]  if(this.isResolved())  {  return  false;  }  else  {  Predicate  <  JSType>  referencedType  =  getReferencedType(reference);  if(referencedType!=  null)  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;    [BUGGY]  if(this.isResolved())  {  return  false;  }  else  {  Predicate  <  JSType>  referencedType  =  getReferencedType(reference);  if(referencedType!=  null)  {  return  true;  }  [BUGGY]    }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.isResolved())  {  return  false;  }  else  {  Predicate  <  JSType>  referencedType  =  getReferencedType(reference);  if(referencedType!=  null)  {  return  true;  }	  return    false;    timeout    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
102	[BUG]  [BUGGY]  if(this.isResolved())  {  return  false;  }  else  {  Predicate  <  JSType>  property  =  this.referencedTypes.get(reference);  if(property!=  null)  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;    [BUGGY]  if(this.isResolved())  {  return  false;  }  else  {  Predicate  <  JSType>  property  =  this.referencedTypes.get(reference);  if(property!=  null)  {  return  true;  }  [BUGGY]    }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.isResolved())  {  return  false;  }  else  {  Predicate  <  JSType>  property  =  this.referencedTypes.get(reference);  if(property!=  null)  {  return  true;  }	  return    false;    timeout    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
103	[BUG]  [BUGGY]  if(!this.isForwardDeclared())  {  return  true;  }  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError    [CONTEXT]    public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;    [BUGGY]  if(!this.isForwardDeclared())  {  return  true;  }  [BUGGY]    }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(!this.isForwardDeclared())  {  return  true;  }	  if(!this.isResolved())    {    return    true;    }    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
104	[BUG]  [BUGGY]  Predicate  <?>  property  =  this.getProperty(propertyName);  [CE]  cannot  find  symbol  propertyName  [FE]          AssertionFailedError    [CONTEXT]    public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;    [BUGGY]  Predicate  <?>  property  =  this.getProperty(propertyName);  [BUGGY]    }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	Predicate  <?>  property  =  this.getProperty(propertyName);	  if(this.isResolved())    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol  propertyName	3	None	replace
105	[BUG]  [BUGGY]  return(this.isValidator()  &&  this.validator!=  null);  [CE]  cannot  find  symbol  [FE]        AssertionFailedError    [CONTEXT]    public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;    [BUGGY]  return(this.isValidator()  &&  this.validator!=  null);  [BUGGY]    }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	return(this.isValidator()  &&  this.validator!=  null);	  return(this.isResolved()    &&    this.validator!=    null);    timeout    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
106	[BUG]  [BUGGY]  timeout  [FE]          AssertionFailedError    [CONTEXT]    public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;    [BUGGY]  return(this.isResolved()  ||  validator!=  null);  [BUGGY]    }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	add	return(this.isResolved()  ||  validator!=  null);	  return(this.isResolved()    &&    this.validator!=    null);    timeout    	compilable	timeout	11	1	replace
107	[BUG]  [BUGGY]  return(this.isResolved()  ||  validator!=  null);  timeout  [FE]          AssertionFailedError    [CONTEXT]    public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;    [BUGGY]  return(this.isResolved()  ||  validator!=  null);  [BUGGY]    }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	return(this.isResolved()  ||  validator!=  null);	  return(this.isResolved()    &&    this.validator!=    null);    timeout    	compilable	timeout	11	1	replace
108	[BUG]  [BUGGY]  if(this.isResolved())  {  Predicate  <  JSType>  propertyNode  =  this.referencedTypes.get(reference);  if(propertyNode!=  null)  {  return  propertyNode.setValidator(valueNode);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError    [CONTEXT]    public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;    [BUGGY]  if(this.isResolved())  {  Predicate  <  JSType>  propertyNode  =  this.referencedTypes.get(reference);  if(propertyNode!=  null)  {  return  propertyNode.setValidator(valueNode);  }  [BUGGY]    }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.isResolved())  {  Predicate  <  JSType>  propertyNode  =  this.referencedTypes.get(reference);  if(propertyNode!=  null)  {  return  propertyNode.setValidator(valueNode);  }	      	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
109	[BUG]  [BUGGY]  if(this.isResolved())  {  Predicate  <  JSType>  propertyNode  =  this.referencedTypes.get(reference);  if(propertyNode!=  null)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError    [CONTEXT]    public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;    [BUGGY]  if(this.isResolved())  {  Predicate  <  JSType>  propertyNode  =  this.referencedTypes.get(reference);  if(propertyNode!=  null)  {  return  false;  }  [BUGGY]    }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.isResolved())  {  Predicate  <  JSType>  propertyNode  =  this.referencedTypes.get(reference);  if(propertyNode!=  null)  {  return  false;  }	      	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
110	[BUG]  [BUGGY]  if(this.isResolved())  {  Predicate  <  JSType>  propertyNode  =  this.referencedTypes.get(reference);  if(propertyNode!=  null)  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError    [CONTEXT]    public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;    [BUGGY]  if(this.isResolved())  {  Predicate  <  JSType>  propertyNode  =  this.referencedTypes.get(reference);  if(propertyNode!=  null)  {  return  true;  }  [BUGGY]    }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.isResolved())  {  Predicate  <  JSType>  propertyNode  =  this.referencedTypes.get(reference);  if(propertyNode!=  null)  {  return  true;  }	      	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
111	[BUG]  [BUGGY]  if(this.isResolved())  {  Predicate  <  JSType>  propertyNode  =  this.getPropertyNode(propertyName);  if(propertyNode!=  null)  {  return  propertyNode.setValidator(valueNode);  }  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError    [CONTEXT]    public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;    [BUGGY]  if(this.isResolved())  {  Predicate  <  JSType>  propertyNode  =  this.getPropertyNode(propertyName);  if(propertyNode!=  null)  {  return  propertyNode.setValidator(valueNode);  }  [BUGGY]    }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.isResolved())  {  Predicate  <  JSType>  propertyNode  =  this.getPropertyNode(propertyName);  if(propertyNode!=  null)  {  return  propertyNode.setValidator(valueNode);  }	      	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
112	[BUG]  [BUGGY]  if(this.isResolved())  {  Predicate  <  JSType>  propertyNode  =  this.getPropertyNode(referenced);  if(propertyNode!=  null)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError    [CONTEXT]    public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;    [BUGGY]  if(this.isResolved())  {  Predicate  <  JSType>  propertyNode  =  this.getPropertyNode(referenced);  if(propertyNode!=  null)  {  return  false;  }  [BUGGY]    }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.isResolved())  {  Predicate  <  JSType>  propertyNode  =  this.getPropertyNode(referenced);  if(propertyNode!=  null)  {  return  false;  }	      	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
113	[BUG]  [BUGGY]  if(this.isResolved())  {  Predicate  <  JSType>  propertyNode  =  this.getPropertyNode(propertyName);  if(propertyNode!=  null)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                                AssertionFailedError    [CONTEXT]    public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;    [BUGGY]  if(this.isResolved())  {  Predicate  <  JSType>  propertyNode  =  this.getPropertyNode(propertyName);  if(propertyNode!=  null)  {  return  false;  }  [BUGGY]    }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.isResolved())  {  Predicate  <  JSType>  propertyNode  =  this.getPropertyNode(propertyName);  if(propertyNode!=  null)  {  return  false;  }	      	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
114	[BUG]  [BUGGY]  if(this.isResolved())  {  Predicate  <  JSType>  propertyNode  =  this.propertyNode.getValue();  if(propertyNode!=  null)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                                  AssertionFailedError    [CONTEXT]    public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;    [BUGGY]  if(this.isResolved())  {  Predicate  <  JSType>  propertyNode  =  this.propertyNode.getValue();  if(propertyNode!=  null)  {  return  false;  }  [BUGGY]    }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.isResolved())  {  Predicate  <  JSType>  propertyNode  =  this.propertyNode.getValue();  if(propertyNode!=  null)  {  return  false;  }	      	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
115	[BUG]  [BUGGY]  if(!this.validator.isResolved())  {  return  false;  }  [CE]  cannot  find  symbol  [FE]                AssertionFailedError    [CONTEXT]    public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;    [BUGGY]  if(!this.validator.isResolved())  {  return  false;  }  [BUGGY]    }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(!this.validator.isResolved())  {  return  false;  }	  if(!this.isResolved())    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
116	[BUG]  [BUGGY]  if(!this.isValidator)  {  return  false;  }  [CE]  cannot  find  symbol  isValidator  [FE]                  AssertionFailedError    [CONTEXT]    public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;    [BUGGY]  if(!this.isValidator)  {  return  false;  }  [BUGGY]    }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(!this.isValidator)  {  return  false;  }	  if(!this.isResolved())    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol  isValidator	6	None	replace
117	[BUG]  [BUGGY]  if(!this.isValidator)  {  return  true;  }  [CE]  cannot  find  symbol  isValidator  [FE]                  AssertionFailedError    [CONTEXT]    public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;    [BUGGY]  if(!this.isValidator)  {  return  true;  }  [BUGGY]    }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(!this.isValidator)  {  return  true;  }	  if(!this.isResolved())    {    return    true;    }    	non-compiled	[CE]  cannot  find  symbol  isValidator	7	None	replace
118	[BUG]  [BUGGY]  if(!this.isUnknownType())  {  return  true;  }  [CE]  missing  return  statement  [FE]                    AssertionFailedError    [CONTEXT]    public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;    [BUGGY]  if(!this.isUnknownType())  {  return  true;  }  [BUGGY]    }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(!this.isUnknownType())  {  return  true;  }	  if(!this.isResolved())    {    return    true;    }    	non-compiled	[CE]  missing  return  statement	7	None	replace
119	[BUG]  [BUGGY]  if(this.isResolved())  {  return  super.setValidator(validator);  }  else  {  for(int  i  =  0;  i  <  this.isResolved();  ++i)  {  return  super.setValidator(validator);  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;    [BUGGY]  if(this.isResolved())  {  return  super.setValidator(validator);  }  else  {  for(int  i  =  0;  i  <  this.isResolved();  ++i)  {  return  super.setValidator(validator);  }  [BUGGY]    }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.isResolved())  {  return  super.setValidator(validator);  }  else  {  for(int  i  =  0;  i  <  this.isResolved();  ++i)  {  return  super.setValidator(validator);  }	  return    super.setValidator(validator);    timeout    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
120	[BUG]  [BUGGY]  if(this.isResolved())  {  return  super.setValidator(validator);  }  else  {  for(int  i  =  0;  i  <  this.isResolved();  i++)  {  return  super.setValidator(validator);  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;    [BUGGY]  if(this.isResolved())  {  return  super.setValidator(validator);  }  else  {  for(int  i  =  0;  i  <  this.isResolved();  i++)  {  return  super.setValidator(validator);  }  [BUGGY]    }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.isResolved())  {  return  super.setValidator(validator);  }  else  {  for(int  i  =  0;  i  <  this.isResolved();  i++)  {  return  super.setValidator(validator);  }	  return    super.setValidator(validator);    timeout    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
121	[BUG]  [BUGGY]  if(this.validator!=  null)  {  return  super.setValidator(validator);  }  else  {  for(int  i  =  0;  i  <  this.isResolved();  ++i)  {  return  super.setValidator(validator);  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;    [BUGGY]  if(this.validator!=  null)  {  return  super.setValidator(validator);  }  else  {  for(int  i  =  0;  i  <  this.isResolved();  ++i)  {  return  super.setValidator(validator);  }  [BUGGY]    }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.validator!=  null)  {  return  super.setValidator(validator);  }  else  {  for(int  i  =  0;  i  <  this.isResolved();  ++i)  {  return  super.setValidator(validator);  }	  return    super.setValidator(validator);    timeout    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
122	[BUG]  [BUGGY]  if(this.slotType!=  null)  {  return  super.setValidator(validator);  }  [CE]  cannot  find  symbol  slotType  [FE]                AssertionFailedError    [CONTEXT]    public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;    [BUGGY]  if(this.slotType!=  null)  {  return  super.setValidator(validator);  }  [BUGGY]    }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.slotType!=  null)  {  return  super.setValidator(validator);  }	  return    super.setValidator(validator);    timeout    	non-compiled	[CE]  cannot  find  symbol  slotType	13	None	replace
123	[BUG]  [BUGGY]  if(this.isUnknownType())  {  return  false;  }  [CE]  missing  return  statement  [FE]          AssertionFailedError    [CONTEXT]    public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;    [BUGGY]  if(this.isUnknownType())  {  return  false;  }  [BUGGY]    }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.isUnknownType())  {  return  false;  }	  if(this.isResolved())    {    return    false;    }    	non-compiled	[CE]  missing  return  statement	3	None	replace
124	[BUG]  [BUGGY]  if(this.isUnknownType())  {  return  true;  }  [CE]  missing  return  statement  [FE]            AssertionFailedError    [CONTEXT]    public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;    [BUGGY]  if(this.isUnknownType())  {  return  true;  }  [BUGGY]    }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.isUnknownType())  {  return  true;  }	  if(this.isResolved())    {    return    true;    }    	non-compiled	[CE]  missing  return  statement	4	None	replace
125	[BUG]  [BUGGY]  return  super.setValidator(validator);  if(this.isResolved())  {  return  super.setValidator(validator);  }  else  {  Predicate  <  JSType>  propertyNode  =  this.isResolved();  return  super.setValidator(propertyNode);  }  [CE]  incompatible  types  [FE]          AssertionFailedError    [CONTEXT]    public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;    [BUGGY]  return  super.setValidator(validator);  if(this.isResolved())  {  return  super.setValidator(validator);  }  else  {  Predicate  <  JSType>  propertyNode  =  this.isResolved();  return  super.setValidator(propertyNode);  }  [BUGGY]    }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	return    super.setValidator(validator);    if(this.isResolved())  {  return  super.setValidator(validator);  }  else  {  Predicate  <  JSType>  propertyNode  =  this.isResolved();  return  super.setValidator(propertyNode);  }	  timeout    	non-compiled	[CE]  incompatible  types	12	None	add
126	[BUG]  [BUGGY]  return  super.setValidator(validator);  if(this.isResolved())  {  return  super.setValidator(validator);  }  else  {  for(int  i  =  0;  i  <  this.isResolved();  i++)  {  return  super.setValidator(validator);  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;    [BUGGY]  return  super.setValidator(validator);  if(this.isResolved())  {  return  super.setValidator(validator);  }  else  {  for(int  i  =  0;  i  <  this.isResolved();  i++)  {  return  super.setValidator(validator);  }  [BUGGY]    }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	return    super.setValidator(validator);    if(this.isResolved())  {  return  super.setValidator(validator);  }  else  {  for(int  i  =  0;  i  <  this.isResolved();  i++)  {  return  super.setValidator(validator);  }	  timeout    	non-compiled	[CE]  illegal  start  of  expression	12	None	add
127	[BUG]  [BUGGY]  return  super.setValidator(validator);  if(this.isResolved())  {  return  super.setValidator(validator);  }  else  {  for(int  i  =  0;  i  <  this.isResolved();  ++i)  {  return  super.setValidator(validator);  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;    [BUGGY]  return  super.setValidator(validator);  if(this.isResolved())  {  return  super.setValidator(validator);  }  else  {  for(int  i  =  0;  i  <  this.isResolved();  ++i)  {  return  super.setValidator(validator);  }  [BUGGY]    }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	return    super.setValidator(validator);    if(this.isResolved())  {  return  super.setValidator(validator);  }  else  {  for(int  i  =  0;  i  <  this.isResolved();  ++i)  {  return  super.setValidator(validator);  }	  timeout    	non-compiled	[CE]  illegal  start  of  expression	12	None	add
128	[BUG]  [BUGGY]  return  super.setValidator(validator);  if(this.isResolved())  {  return  super.setValidator(validator);  }  else  {  Predicate  <  JSType>  propertyNode  =  this.isResolved();  return  super.setValidator(valueNode);  }  [CE]  incompatible  types  [FE]                AssertionFailedError    [CONTEXT]    public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;    [BUGGY]  return  super.setValidator(validator);  if(this.isResolved())  {  return  super.setValidator(validator);  }  else  {  Predicate  <  JSType>  propertyNode  =  this.isResolved();  return  super.setValidator(valueNode);  }  [BUGGY]    }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	return    super.setValidator(validator);    if(this.isResolved())  {  return  super.setValidator(validator);  }  else  {  Predicate  <  JSType>  propertyNode  =  this.isResolved();  return  super.setValidator(valueNode);  }	  timeout    	non-compiled	[CE]  incompatible  types	12	None	add
129	[BUG]  [BUGGY]  return  super.setValidator(validator);  if(this.isResolved())  {  return  super.setValidator(validator);  }  else  {  for(int  i  =  0;  i  <  propertyContinuations.size();  ++i)  {  PropertyContinuation  <  NamedType>  propertyContinuations  =  propertyContinuations.get(i);  if  [CE]  '('  expected  [FE]                  AssertionFailedError    [CONTEXT]    public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;    [BUGGY]  return  super.setValidator(validator);  if(this.isResolved())  {  return  super.setValidator(validator);  }  else  {  for(int  i  =  0;  i  <  propertyContinuations.size();  ++i)  {  PropertyContinuation  <  NamedType>  propertyContinuations  =  propertyContinuations.get(i);  if  [BUGGY]    }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	return    super.setValidator(validator);    if(this.isResolved())  {  return  super.setValidator(validator);  }  else  {  for(int  i  =  0;  i  <  propertyContinuations.size();  ++i)  {  PropertyContinuation  <  NamedType>  propertyContinuations  =  propertyContinuations.get(i);  if	  timeout    	non-compiled	[CE]  '('  expected	12	None	add
130	[BUG]  [BUGGY]  return(this.isValidator()  &&  validator!=  null);  [CE]  cannot  find  symbol  [FE]        AssertionFailedError    [CONTEXT]    public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;    [BUGGY]  return(this.isValidator()  &&  validator!=  null);  [BUGGY]    }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	return(this.isValidator()  &&  validator!=  null);	  return(this.isResolved()    &&    this.validator!=    null);    timeout    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
131	[BUG]  [BUGGY]  return(this.isResolved()  &&  this.validator!=  null);  if(this.isResolved()  &&  this.validator!=  null);  }  [CE]  class,  interface,  or  enum  expected  [FE]        AssertionFailedError    [CONTEXT]    public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;    [BUGGY]  return(this.isResolved()  &&  this.validator!=  null);  if(this.isResolved()  &&  this.validator!=  null);  }  [BUGGY]    }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	return(this.isResolved()    &&    this.validator!=    null);    if(this.isResolved()  &&  this.validator!=  null);  }	  timeout    	non-compiled	[CE]  class,  interface,  or  enum  expected	10	None	add
132	[BUG]  [BUGGY]  Predicate  <?>  propertyNode  =  this.slotType.getPropertyNode(propertyName);  [CE]  cannot  find  symbol  propertyName  [FE]                      AssertionFailedError    [CONTEXT]    public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;    [BUGGY]  Predicate  <?>  propertyNode  =  this.slotType.getPropertyNode(propertyName);  [BUGGY]    }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	Predicate  <?>  propertyNode  =  this.slotType.getPropertyNode(propertyName);	      	non-compiled	[CE]  cannot  find  symbol  propertyName	9	None	replace
133	[BUG]  [BUGGY]  Predicate  <?>  propertyNode  =  getPropertyNode(propertyName);  return  propertyNode!=  null  &&  propertyNode.getType()  ==  Token.FUNCTION;  [CE]  cannot  find  symbol  propertyName  [FE]                        AssertionFailedError    [CONTEXT]    public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;    [BUGGY]  Predicate  <?>  propertyNode  =  getPropertyNode(propertyName);  return  propertyNode!=  null  &&  propertyNode.getType()  ==  Token.FUNCTION;  [BUGGY]    }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	Predicate  <?>  propertyNode  =  getPropertyNode(propertyName);  return  propertyNode!=  null  &&  propertyNode.getType()  ==  Token.FUNCTION;	      	non-compiled	[CE]  cannot  find  symbol  propertyName	9	None	replace
134	[BUG]  [BUGGY]  Predicate  <?>  propertyNode  =  this.propertyContinuations.get(propertyName);  [CE]  cannot  find  symbol  propertyName  [FE]                          AssertionFailedError    [CONTEXT]    public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;    [BUGGY]  Predicate  <?>  propertyNode  =  this.propertyContinuations.get(propertyName);  [BUGGY]    }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	Predicate  <?>  propertyNode  =  this.propertyContinuations.get(propertyName);	      	non-compiled	[CE]  cannot  find  symbol  propertyName	9	None	replace
135	[BUG]  [BUGGY]  Predicate  <?>  propertyNode  =  this.propertyContinuation.getProperty(propertyName);  [CE]  cannot  find  symbol  propertyName  [FE]                            AssertionFailedError    [CONTEXT]    public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;    [BUGGY]  Predicate  <?>  propertyNode  =  this.propertyContinuation.getProperty(propertyName);  [BUGGY]    }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	Predicate  <?>  propertyNode  =  this.propertyContinuation.getProperty(propertyName);	      	non-compiled	[CE]  cannot  find  symbol  propertyName	9	None	replace
136	[BUG]  [BUGGY]  Predicate  <?>  propertyNode  =  this.slotType.getPropertyNode();  [CE]  cannot  find  symbol  slotType  [FE]                              AssertionFailedError    [CONTEXT]    public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;    [BUGGY]  Predicate  <?>  propertyNode  =  this.slotType.getPropertyNode();  [BUGGY]    }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	Predicate  <?>  propertyNode  =  this.slotType.getPropertyNode();	      	non-compiled	[CE]  cannot  find  symbol  slotType	9	None	replace
137	[BUG]  [BUGGY]  Predicate  <?>  propertyNode  =  getPropertyNode(propertyName);  [CE]  cannot  find  symbol  propertyName  [FE]                                AssertionFailedError    [CONTEXT]    public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;    [BUGGY]  Predicate  <?>  propertyNode  =  getPropertyNode(propertyName);  [BUGGY]    }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	Predicate  <?>  propertyNode  =  getPropertyNode(propertyName);	      	non-compiled	[CE]  cannot  find  symbol  propertyName	9	None	replace
138	[BUG]  [BUGGY]  Predicate  <?>  propertyNode  =  getPropertyNode(propertyName).resolve();  [CE]  cannot  find  symbol  propertyName  [FE]                                  AssertionFailedError    [CONTEXT]    public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;    [BUGGY]  Predicate  <?>  propertyNode  =  getPropertyNode(propertyName).resolve();  [BUGGY]    }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	Predicate  <?>  propertyNode  =  getPropertyNode(propertyName).resolve();	      	non-compiled	[CE]  cannot  find  symbol  propertyName	9	None	replace
139	[BUG]  [BUGGY]  return  false;  if(isForwardDeclared)  {  forAnnotations  {  propertyNode  =  propertyNode.getFirstChild();  if(propertyNode!=  propertyNode)  {  return  true;  }  [CE]  not  a  statement  [FE]        AssertionFailedError    [CONTEXT]    public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;    [BUGGY]  return  false;  if(isForwardDeclared)  {  forAnnotations  {  propertyNode  =  propertyNode.getFirstChild();  if(propertyNode!=  propertyNode)  {  return  true;  }  [BUGGY]    }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	return    false;    if(isForwardDeclared)  {  forAnnotations  {  propertyNode  =  propertyNode.getFirstChild();  if(propertyNode!=  propertyNode)  {  return  true;  }	  timeout    	non-compiled	[CE]  not  a  statement	1	None	add
140	[BUG]  [BUGGY]  return  false;  if(isForwardDeclared)  {  forAnnotations  {  propertyNode  =  propertyNode.getFirstChild();  if(propertyNode!=  null)  {  return  true;  }  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]    public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;    [BUGGY]  return  false;  if(isForwardDeclared)  {  forAnnotations  {  propertyNode  =  propertyNode.getFirstChild();  if(propertyNode!=  null)  {  return  true;  }  [BUGGY]    }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	return    false;    if(isForwardDeclared)  {  forAnnotations  {  propertyNode  =  propertyNode.getFirstChild();  if(propertyNode!=  null)  {  return  true;  }	  timeout    	non-compiled	[CE]  not  a  statement	1	None	add
141	[BUG]  [BUGGY]  return  false;  if(validator!=  null)  {  forAnnotations  <  propertyNode  =  propertyNode.getFirstChild();  if(this.isResolved())  {  return  false;  }  [CE]  >  expected  [FE]            AssertionFailedError    [CONTEXT]    public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;    [BUGGY]  return  false;  if(validator!=  null)  {  forAnnotations  <  propertyNode  =  propertyNode.getFirstChild();  if(this.isResolved())  {  return  false;  }  [BUGGY]    }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	return    false;    if(validator!=  null)  {  forAnnotations  <  propertyNode  =  propertyNode.getFirstChild();  if(this.isResolved())  {  return  false;  }	  timeout    	non-compiled	[CE]  >  expected	1	None	add
142	[BUG]  [BUGGY]  return  false;  if(isForwardDeclared)  {  forAnnotations  {  propertyNode  =  propertyNode.getFirstChild();  if(propertyNode!=  null)  {  return  false;  }  [CE]  not  a  statement  [FE]              AssertionFailedError    [CONTEXT]    public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;    [BUGGY]  return  false;  if(isForwardDeclared)  {  forAnnotations  {  propertyNode  =  propertyNode.getFirstChild();  if(propertyNode!=  null)  {  return  false;  }  [BUGGY]    }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	return    false;    if(isForwardDeclared)  {  forAnnotations  {  propertyNode  =  propertyNode.getFirstChild();  if(propertyNode!=  null)  {  return  false;  }	  timeout    	non-compiled	[CE]  not  a  statement	1	None	add
143	[BUG]  [BUGGY]  return  false;  if(validator!=  null)  {  forAnnotations  <  propertyNode  =  propertyNode.getFirstChild();  if(!this.isResolved())  {  return  false;  }  [CE]  >  expected  [FE]                AssertionFailedError    [CONTEXT]    public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;    [BUGGY]  return  false;  if(validator!=  null)  {  forAnnotations  <  propertyNode  =  propertyNode.getFirstChild();  if(!this.isResolved())  {  return  false;  }  [BUGGY]    }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	return    false;    if(validator!=  null)  {  forAnnotations  <  propertyNode  =  propertyNode.getFirstChild();  if(!this.isResolved())  {  return  false;  }	  timeout    	non-compiled	[CE]  >  expected	1	None	add
144	[BUG]  [BUGGY]  return  false;  if(isForwardDeclared)  {  forAnnotations  {  propertyNode  =  propertyNode.getFirstChild();  if(propertyNode!=  propertyNode)  {  return  false;  }  [CE]  not  a  statement  [FE]                  AssertionFailedError    [CONTEXT]    public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;    [BUGGY]  return  false;  if(isForwardDeclared)  {  forAnnotations  {  propertyNode  =  propertyNode.getFirstChild();  if(propertyNode!=  propertyNode)  {  return  false;  }  [BUGGY]    }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	return    false;    if(isForwardDeclared)  {  forAnnotations  {  propertyNode  =  propertyNode.getFirstChild();  if(propertyNode!=  propertyNode)  {  return  false;  }	  timeout    	non-compiled	[CE]  not  a  statement	1	None	add
145	[BUG]  [BUGGY]  return  false;  if(validator!=  null)  {  forAnnotations  <  propertyNode  =  propertyNode.getFirstChild();  if(!this.isResolved())  {  return  true;  }  [CE]  >  expected  [FE]                    AssertionFailedError    [CONTEXT]    public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;    [BUGGY]  return  false;  if(validator!=  null)  {  forAnnotations  <  propertyNode  =  propertyNode.getFirstChild();  if(!this.isResolved())  {  return  true;  }  [BUGGY]    }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	return    false;    if(validator!=  null)  {  forAnnotations  <  propertyNode  =  propertyNode.getFirstChild();  if(!this.isResolved())  {  return  true;  }	  timeout    	non-compiled	[CE]  >  expected	1	None	add
146	[BUG]  [BUGGY]  if(this.slotType!=  null)return  false;  }  [CE]  class,  interface,  or  enum  expected  [FE]        AssertionFailedError    [CONTEXT]    public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;    [BUGGY]  if(this.slotType!=  null)return  false;  }  [BUGGY]    }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.slotType!=  null)return  false;  }	  if(this.slotType!=    null)    {    return    false;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	14	None	replace
147	[BUG]  [BUGGY]  if(this.slotType!=  null  ||  this.slotType!=  null)  {  return  false;  }  [CE]  cannot  find  symbol  slotType  [FE]          AssertionFailedError    [CONTEXT]    public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;    [BUGGY]  if(this.slotType!=  null  ||  this.slotType!=  null)  {  return  false;  }  [BUGGY]    }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.slotType!=  null  ||  this.slotType!=  null)  {  return  false;  }	  if(this.slotType!=    null)    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol  slotType	14	None	replace
148	[BUG]  [BUGGY]  if(this.slotType!=  null)  {  return  true;  }  [CE]  cannot  find  symbol  slotType  [FE]            AssertionFailedError    [CONTEXT]    public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;    [BUGGY]  if(this.slotType!=  null)  {  return  true;  }  [BUGGY]    }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.slotType!=  null)  {  return  true;  }	  if(this.slotType!=    null)    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol  slotType	14	None	replace
149	[BUG]  [BUGGY]  if(this.forAnnotations!=  null)return  false;  }  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError    [CONTEXT]    public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;    [BUGGY]  if(this.forAnnotations!=  null)return  false;  }  [BUGGY]    }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.forAnnotations!=  null)return  false;  }	  if(this.forAnnotations    ==    null)    {    return    false;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	8	None	replace
150	[BUG]  [BUGGY]  if(this.validator  ==  null)  {  return  false;  }  [CE]  missing  return  statement  [FE]                      AssertionFailedError    [CONTEXT]    public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;    [BUGGY]  if(this.validator  ==  null)  {  return  false;  }  [BUGGY]    }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.validator  ==  null)  {  return  false;  }	  if(this.forAnnotations    ==    null)    {    return    false;    }    	non-compiled	[CE]  missing  return  statement	8	None	replace
151	[BUG]  [BUGGY]  if(this.forAnnotations!=  null  ||  this.ignoreForwardReferencedTypes)  {  return  false;  }  [CE]  cannot  find  symbol  forAnnotations  [FE]              AssertionFailedError    [CONTEXT]    public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;    [BUGGY]  if(this.forAnnotations!=  null  ||  this.ignoreForwardReferencedTypes)  {  return  false;  }  [BUGGY]    }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.forAnnotations!=  null  ||  this.ignoreForwardReferencedTypes)  {  return  false;  }	  if(this.forAnnotations!=    null)    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol  forAnnotations	5	None	replace
152	[BUG]  [BUGGY]  if(this.forAnnotations  ==  null)return  false;  }  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError    [CONTEXT]    public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;    [BUGGY]  if(this.forAnnotations  ==  null)return  false;  }  [BUGGY]    }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(this.forAnnotations  ==  null)return  false;  }	  if(this.forAnnotations!=    null)    {    return    false;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	5	None	replace
153	[BUG]  [BUGGY]  if(isForwardDeclared)  {  return  false;  }  [CE]  cannot  find  symbol  isForwardDeclared  [FE]        AssertionFailedError    [CONTEXT]    public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  this.validator  =  validator;    [BUGGY]  if(isForwardDeclared)  {  return  false;  }  [BUGGY]    }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	373	373	3	replace	if(isForwardDeclared)  {  return  false;  }	  return    false;    timeout    	non-compiled	[CE]  cannot  find  symbol  isForwardDeclared	2	None	replace
