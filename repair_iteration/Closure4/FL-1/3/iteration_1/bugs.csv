bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  this.validator  =  validator.setValidator(this.isResolved());  [CE]  cannot  find  symbol  [FE]    AssertionFailedError  [CONTEXT]  public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  [BUGGY]  this.validator  =  validator.setValidator(this.isResolved());  [BUGGY]  return  true;  }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	372	372	3	replace	this.validator  =  validator.setValidator(this.isResolved());	this.validator  =  validator;  	non-compiled	[CE]  cannot  find  symbol	5	None	replace
2	[BUG]  [BUGGY]  this.validator  =  validator.resolveValidator();  [CE]  cannot  find  symbol  [FE]      AssertionFailedError  [CONTEXT]  public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  [BUGGY]  this.validator  =  validator.resolveValidator();  [BUGGY]  return  true;  }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	372	372	3	replace	this.validator  =  validator.resolveValidator();	this.validator  =  validator;  	non-compiled	[CE]  cannot  find  symbol	5	None	replace
3	[BUG]  [BUGGY]  this.validator  =  validator.getValue();  [CE]  cannot  find  symbol  [FE]        AssertionFailedError  [CONTEXT]  public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  [BUGGY]  this.validator  =  validator.getValue();  [BUGGY]  return  true;  }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	372	372	3	replace	this.validator  =  validator.getValue();	this.validator  =  validator;  	non-compiled	[CE]  cannot  find  symbol	5	None	replace
4	[BUG]  [BUGGY]  this.validator  =  validator.setValidator(this.referencedType);  [CE]  referencedType  has  private  access  in  ProxyObjectType  [FE]          AssertionFailedError  [CONTEXT]  public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  [BUGGY]  this.validator  =  validator.setValidator(this.referencedType);  [BUGGY]  return  true;  }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	372	372	3	replace	this.validator  =  validator.setValidator(this.referencedType);	this.validator  =  validator;  	non-compiled	[CE]  referencedType  has  private  access  in  ProxyObjectType	5	None	replace
5	[BUG]  [BUGGY]  this.validator  =  new  JSType(validator.getRawClass());  [CE]  cannot  find  symbol  [FE]            AssertionFailedError  [CONTEXT]  public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  [BUGGY]  this.validator  =  new  JSType(validator.getRawClass());  [BUGGY]  return  true;  }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	372	372	3	replace	this.validator  =  new  JSType(validator.getRawClass());	this.validator  =  validator;  	non-compiled	[CE]  cannot  find  symbol	5	None	replace
6	[BUG]  [BUGGY]  timeout  [FE]              AssertionFailedError  [CONTEXT]  public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  [BUGGY]    [BUGGY]  return  true;  }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	372	372	3	add	  	this.validator  =  validator;  	compilable	timeout	5	1	replace
7	[BUG]  [BUGGY]    timeout  [FE]              AssertionFailedError  [CONTEXT]  public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  [BUGGY]    [BUGGY]  return  true;  }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	372	372	3	replace	  	this.validator  =  validator;  	compilable	timeout	5	1	replace
8	[BUG]  [BUGGY]  this.validator  =  new  JSType(validator.getReferencedType());  [CE]  cannot  find  symbol  [FE]    AssertionFailedError  [CONTEXT]  public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  [BUGGY]  this.validator  =  new  JSType(validator.getReferencedType());  [BUGGY]  return  true;  }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	372	372	3	replace	this.validator  =  new  JSType(validator.getReferencedType());	this.validator  =  validator;  	non-compiled	[CE]  cannot  find  symbol	5	None	replace
9	[BUG]  [BUGGY]  this.validator  =  new  JSType(validator.getRawType());  [CE]  cannot  find  symbol  [FE]      AssertionFailedError  [CONTEXT]  public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  [BUGGY]  this.validator  =  new  JSType(validator.getRawType());  [BUGGY]  return  true;  }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	372	372	3	replace	this.validator  =  new  JSType(validator.getRawType());	this.validator  =  validator;  	non-compiled	[CE]  cannot  find  symbol	5	None	replace
10	[BUG]  [BUGGY]  this.validator  =  new  JSType(validator.getInstanceType());  [CE]  cannot  find  symbol  [FE]        AssertionFailedError  [CONTEXT]  public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  [BUGGY]  this.validator  =  new  JSType(validator.getInstanceType());  [BUGGY]  return  true;  }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	372	372	3	replace	this.validator  =  new  JSType(validator.getInstanceType());	this.validator  =  validator;  	non-compiled	[CE]  cannot  find  symbol	5	None	replace
11	[BUG]  [BUGGY]  this.validator  =  Validator.None.valueOf(validator);  [CE]  package  Validator  does  not  exist  [FE]          AssertionFailedError  [CONTEXT]  public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  [BUGGY]  this.validator  =  Validator.None.valueOf(validator);  [BUGGY]  return  true;  }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	372	372	3	replace	this.validator  =  Validator.None.valueOf(validator);	this.validator  =  validator;  	non-compiled	[CE]  package  Validator  does  not  exist	5	None	replace
12	[BUG]  [BUGGY]  this.validator  =  validateValidator;  [CE]  cannot  find  symbol  validateValidator  [FE]            AssertionFailedError  [CONTEXT]  public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  [BUGGY]  this.validator  =  validateValidator;  [BUGGY]  return  true;  }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	372	372	3	replace	this.validator  =  validateValidator;	this.validator  =  validator;  	non-compiled	[CE]  cannot  find  symbol  validateValidator	5	None	replace
13	[BUG]  [BUGGY]  this.validator  =  validator.restrictByNotNullOrUndefined();  [CE]  cannot  find  symbol  [FE]    AssertionFailedError  [CONTEXT]  public  boolean  setValidator(Predicate<JSType>  validator)  {    if  (this.isResolved())  {  return  super.setValidator(validator);  }  else  {  [BUGGY]  this.validator  =  validator.restrictByNotNullOrUndefined();  [BUGGY]  return  true;  }  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  setValidator  [RETURN_TYPE]  boolean  JSType>  validator  [VARIABLES]  JSType  referencedType  slotType  type  value  boolean  forAnnotations  ignoreForwardReferencedTypes  inferred  isForwardDeclared  resolved  Node  propertyNode  List  propertyContinuations  String  name  propertyName  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.3611575592573076	372	372	3	replace	this.validator  =  validator.restrictByNotNullOrUndefined();	this.validator  =  validator;  	non-compiled	[CE]  cannot  find  symbol	5	None	replace
