bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  return  registry.isInferred()?  getReferencedType()  :  null;  [CE]  cannot  find  symbol  [FE]        AssertionFailedError    [CONTEXT]      boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);  finishPropertyContinuations();    [BUGGY]  return  registry.isInferred()?  getReferencedType()  :  null;  [BUGGY]    getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  if  (isResolved())  {  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	197	198	3	replace	return  registry.isInferred()?  getReferencedType()  :  null;	  return    registry.isInferred()?    getReferencedType()    :    this;    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
2	[BUG]  [BUGGY]  return  registry.isInferred()?  getReferencedType()  :  Collections.EMPTY_LIST;  [CE]  cannot  find  symbol  [FE]          AssertionFailedError    [CONTEXT]      boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);  finishPropertyContinuations();    [BUGGY]  return  registry.isInferred()?  getReferencedType()  :  Collections.EMPTY_LIST;  [BUGGY]    getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  if  (isResolved())  {  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	197	198	3	replace	return  registry.isInferred()?  getReferencedType()  :  Collections.EMPTY_LIST;	  return    registry.isInferred()?    getReferencedType()    :    this;    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
3	[BUG]  [BUGGY]  return  registry.isInferred()?  getReferencedType()  :  REFERRED_TYPE;  [CE]  cannot  find  symbol  [FE]            AssertionFailedError    [CONTEXT]      boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);  finishPropertyContinuations();    [BUGGY]  return  registry.isInferred()?  getReferencedType()  :  REFERRED_TYPE;  [BUGGY]    getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  if  (isResolved())  {  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	197	198	3	replace	return  registry.isInferred()?  getReferencedType()  :  REFERRED_TYPE;	  return    registry.isInferred()?    getReferencedType()    :    this;    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
4	[BUG]  [BUGGY]  return  registry.isInferred()?  getReferencedType()  :  REFERENCE_TYPE;  [CE]  cannot  find  symbol  [FE]              AssertionFailedError    [CONTEXT]      boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);  finishPropertyContinuations();    [BUGGY]  return  registry.isInferred()?  getReferencedType()  :  REFERENCE_TYPE;  [BUGGY]    getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  if  (isResolved())  {  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	197	198	3	replace	return  registry.isInferred()?  getReferencedType()  :  REFERENCE_TYPE;	  return    registry.isInferred()?    getReferencedType()    :    this;    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
5	[BUG]  [BUGGY]  return  registry.isInferred()?  getReferencedType()  :  Collections.emptyList();  [CE]  cannot  find  symbol  [FE]                AssertionFailedError    [CONTEXT]      boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);  finishPropertyContinuations();    [BUGGY]  return  registry.isInferred()?  getReferencedType()  :  Collections.emptyList();  [BUGGY]    getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  if  (isResolved())  {  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	197	198	3	replace	return  registry.isInferred()?  getReferencedType()  :  Collections.emptyList();	  return    registry.isInferred()?    getReferencedType()    :    this;    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
6	[BUG]  [BUGGY]  return  registry.isInferred()?  getReferencedType()  :  REFERENCED_TYPE;  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError    [CONTEXT]      boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);  finishPropertyContinuations();    [BUGGY]  return  registry.isInferred()?  getReferencedType()  :  REFERENCED_TYPE;  [BUGGY]    getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  if  (isResolved())  {  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	197	198	3	replace	return  registry.isInferred()?  getReferencedType()  :  REFERENCED_TYPE;	  return    registry.isInferred()?    getReferencedType()    :    this;    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
7	[BUG]  [BUGGY]  return  registry.isLocal()?  getReferencedType()  :  null;  [CE]  cannot  find  symbol  [FE]        AssertionFailedError    [CONTEXT]      boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);  finishPropertyContinuations();    [BUGGY]  return  registry.isLocal()?  getReferencedType()  :  null;  [BUGGY]    getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  if  (isResolved())  {  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	197	198	3	replace	return  registry.isLocal()?  getReferencedType()  :  null;	  return    registry.isLocal()?    getReferencedType()    :    this;    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
8	[BUG]  [BUGGY]  return  registry.isLocal()?  getReferencedType()  :  Collections.EMPTY_LIST;  [CE]  cannot  find  symbol  [FE]          AssertionFailedError    [CONTEXT]      boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);  finishPropertyContinuations();    [BUGGY]  return  registry.isLocal()?  getReferencedType()  :  Collections.EMPTY_LIST;  [BUGGY]    getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  if  (isResolved())  {  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	197	198	3	replace	return  registry.isLocal()?  getReferencedType()  :  Collections.EMPTY_LIST;	  return    registry.isLocal()?    getReferencedType()    :    this;    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
9	[BUG]  [BUGGY]  return  registry.isLocal()?  getReferencedType()  :  REFERRED_TYPE;  [CE]  cannot  find  symbol  [FE]            AssertionFailedError    [CONTEXT]      boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);  finishPropertyContinuations();    [BUGGY]  return  registry.isLocal()?  getReferencedType()  :  REFERRED_TYPE;  [BUGGY]    getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  if  (isResolved())  {  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	197	198	3	replace	return  registry.isLocal()?  getReferencedType()  :  REFERRED_TYPE;	  return    registry.isLocal()?    getReferencedType()    :    this;    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
10	[BUG]  [BUGGY]  return  registry.isLocal()?  getReferencedType()  :  DEFAULT_TYPE;  [CE]  cannot  find  symbol  [FE]              AssertionFailedError    [CONTEXT]      boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);  finishPropertyContinuations();    [BUGGY]  return  registry.isLocal()?  getReferencedType()  :  DEFAULT_TYPE;  [BUGGY]    getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  if  (isResolved())  {  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	197	198	3	replace	return  registry.isLocal()?  getReferencedType()  :  DEFAULT_TYPE;	  return    registry.isLocal()?    getReferencedType()    :    this;    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
11	[BUG]  [BUGGY]  return  registry.isLocal()?  getReferencedType()  :  NodeUtil.getNativeType(JSTypeNative.NO_TYPE);  [CE]  cannot  find  symbol  [FE]                AssertionFailedError    [CONTEXT]      boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);  finishPropertyContinuations();    [BUGGY]  return  registry.isLocal()?  getReferencedType()  :  NodeUtil.getNativeType(JSTypeNative.NO_TYPE);  [BUGGY]    getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  if  (isResolved())  {  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	197	198	3	replace	return  registry.isLocal()?  getReferencedType()  :  NodeUtil.getNativeType(JSTypeNative.NO_TYPE);	  return    registry.isLocal()?    getReferencedType()    :    this;    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
12	[BUG]  [BUGGY]  return  registry.isLocal()?  getReferencedType()  :  NodeUtil.getPropertyType(propertyName);  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError    [CONTEXT]      boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);  finishPropertyContinuations();    [BUGGY]  return  registry.isLocal()?  getReferencedType()  :  NodeUtil.getPropertyType(propertyName);  [BUGGY]    getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  if  (isResolved())  {  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	197	198	3	replace	return  registry.isLocal()?  getReferencedType()  :  NodeUtil.getPropertyType(propertyName);	  return    registry.isLocal()?    getReferencedType()    :    this;    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
13	[BUG]  [BUGGY]  Predicate  validator  =  enclosing.getValue();  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError    [CONTEXT]      boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);  finishPropertyContinuations();    [BUGGY]  Predicate  validator  =  enclosing.getValue();  [BUGGY]    getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  if  (isResolved())  {  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	197	198	3	replace	Predicate  validator  =  enclosing.getValue();	      timeout    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
14	[BUG]  [BUGGY]  Predicate  validator  =  getValueForAnnotations(t,  enclosing);  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError    [CONTEXT]      boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);  finishPropertyContinuations();    [BUGGY]  Predicate  validator  =  getValueForAnnotations(t,  enclosing);  [BUGGY]    getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  if  (isResolved())  {  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	197	198	3	replace	Predicate  validator  =  getValueForAnnotations(t,  enclosing);	      timeout    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
15	[BUG]  [BUGGY]  Predicate  validator  =  getValueForAnnotations(t);  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError    [CONTEXT]      boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);  finishPropertyContinuations();    [BUGGY]  Predicate  validator  =  getValueForAnnotations(t);  [BUGGY]    getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  if  (isResolved())  {  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	197	198	3	replace	Predicate  validator  =  getValueForAnnotations(t);	      timeout    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
16	[BUG]  [BUGGY]  Predicate  validator  =  getValue();  [CE]  cannot  find  symbol  [FE]                          AssertionFailedError    [CONTEXT]      boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);  finishPropertyContinuations();    [BUGGY]  Predicate  validator  =  getValue();  [BUGGY]    getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  if  (isResolved())  {  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	197	198	3	replace	Predicate  validator  =  getValue();	      timeout    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
17	[BUG]  [BUGGY]  Predicates.checkNotNull(propertyContinuations);  [CE]  cannot  find  symbol  Predicates  [FE]                            AssertionFailedError    [CONTEXT]      boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);  finishPropertyContinuations();    [BUGGY]  Predicates.checkNotNull(propertyContinuations);  [BUGGY]    getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  if  (isResolved())  {  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	197	198	3	replace	Predicates.checkNotNull(propertyContinuations);	      timeout    	non-compiled	[CE]  cannot  find  symbol  Predicates	9	None	replace
18	[BUG]  [BUGGY]  Predicate  validator  =  getValueForAnnotations(enclosing);  [CE]  cannot  find  symbol  [FE]                              AssertionFailedError    [CONTEXT]      boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);  finishPropertyContinuations();    [BUGGY]  Predicate  validator  =  getValueForAnnotations(enclosing);  [BUGGY]    getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  if  (isResolved())  {  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	197	198	3	replace	Predicate  validator  =  getValueForAnnotations(enclosing);	      timeout    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
19	[BUG]  [BUGGY]  Predicate  validator  =  getValueForAnnotation(t,  enclosing);  [CE]  cannot  find  symbol  [FE]                                AssertionFailedError    [CONTEXT]      boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);  finishPropertyContinuations();    [BUGGY]  Predicate  validator  =  getValueForAnnotation(t,  enclosing);  [BUGGY]    getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  if  (isResolved())  {  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	197	198	3	replace	Predicate  validator  =  getValueForAnnotation(t,  enclosing);	      timeout    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
20	[BUG]  [BUGGY]  return  registry.isConstructor()?  getReferencedType()  :  null;  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError    [CONTEXT]      boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);  finishPropertyContinuations();    [BUGGY]  return  registry.isConstructor()?  getReferencedType()  :  null;  [BUGGY]    getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  if  (isResolved())  {  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	197	198	3	replace	return  registry.isConstructor()?  getReferencedType()  :  null;	  return    registry.isConstructor()?    getReferencedType()    :    this;    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
21	[BUG]  [BUGGY]  return  registry.isConstructor()?  getReferencedType()  :  DEFAULT_TYPE;  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError    [CONTEXT]      boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);  finishPropertyContinuations();    [BUGGY]  return  registry.isConstructor()?  getReferencedType()  :  DEFAULT_TYPE;  [BUGGY]    getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  if  (isResolved())  {  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	197	198	3	replace	return  registry.isConstructor()?  getReferencedType()  :  DEFAULT_TYPE;	  return    registry.isConstructor()?    getReferencedType()    :    this;    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
22	[BUG]  [BUGGY]  return  registry.isConstructor()?  getReferencedType()  :  REFERRED_TYPE;  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError    [CONTEXT]      boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);  finishPropertyContinuations();    [BUGGY]  return  registry.isConstructor()?  getReferencedType()  :  REFERRED_TYPE;  [BUGGY]    getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  if  (isResolved())  {  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	197	198	3	replace	return  registry.isConstructor()?  getReferencedType()  :  REFERRED_TYPE;	  return    registry.isConstructor()?    getReferencedType()    :    this;    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
23	[BUG]  [BUGGY]  return  type.isConstructor()?  getReferencedType()  :  this;  [CE]  cannot  find  symbol  type  [FE]                        AssertionFailedError    [CONTEXT]      boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);  finishPropertyContinuations();    [BUGGY]  return  type.isConstructor()?  getReferencedType()  :  this;  [BUGGY]    getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  if  (isResolved())  {  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	197	198	3	replace	return  type.isConstructor()?  getReferencedType()  :  this;	  return    registry.isConstructor()?    getReferencedType()    :    this;    	non-compiled	[CE]  cannot  find  symbol  type	7	None	replace
24	[BUG]  [BUGGY]  return  registry.isConstructor()?  getReferencedType()  :  REFERENCE_TYPE;  [CE]  cannot  find  symbol  [FE]                          AssertionFailedError    [CONTEXT]      boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);  finishPropertyContinuations();    [BUGGY]  return  registry.isConstructor()?  getReferencedType()  :  REFERENCE_TYPE;  [BUGGY]    getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  if  (isResolved())  {  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	197	198	3	replace	return  registry.isConstructor()?  getReferencedType()  :  REFERENCE_TYPE;	  return    registry.isConstructor()?    getReferencedType()    :    this;    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
25	[BUG]  [BUGGY]  return  registry.isConstructor()?  getReferencedType()  :  REFERENCED_TYPE;  [CE]  cannot  find  symbol  [FE]                            AssertionFailedError    [CONTEXT]      boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);  finishPropertyContinuations();    [BUGGY]  return  registry.isConstructor()?  getReferencedType()  :  REFERENCED_TYPE;  [BUGGY]    getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  if  (isResolved())  {  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	197	198	3	replace	return  registry.isConstructor()?  getReferencedType()  :  REFERENCED_TYPE;	  return    registry.isConstructor()?    getReferencedType()    :    this;    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
26	[BUG]  [BUGGY]  return  registry.isReferencedType()?  getReferencedType()  :  null;  [CE]  cannot  find  symbol  [FE]              AssertionFailedError    [CONTEXT]      boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);  finishPropertyContinuations();    [BUGGY]  return  registry.isReferencedType()?  getReferencedType()  :  null;  [BUGGY]    getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  if  (isResolved())  {  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	197	198	3	replace	return  registry.isReferencedType()?  getReferencedType()  :  null;	  return    registry.isReferencedType()?    getReferencedType()    :    this;    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
27	[BUG]  [BUGGY]  return  registry.isReferencedType()?  getReferencedType()  :  DEFAULT_TYPE;  [CE]  cannot  find  symbol  [FE]                AssertionFailedError    [CONTEXT]      boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);  finishPropertyContinuations();    [BUGGY]  return  registry.isReferencedType()?  getReferencedType()  :  DEFAULT_TYPE;  [BUGGY]    getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  if  (isResolved())  {  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	197	198	3	replace	return  registry.isReferencedType()?  getReferencedType()  :  DEFAULT_TYPE;	  return    registry.isReferencedType()?    getReferencedType()    :    this;    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
28	[BUG]  [BUGGY]  return  type.isReferencedType()?  getReferencedType()  :  this;  [CE]  cannot  find  symbol  type  [FE]                  AssertionFailedError    [CONTEXT]      boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);  finishPropertyContinuations();    [BUGGY]  return  type.isReferencedType()?  getReferencedType()  :  this;  [BUGGY]    getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  if  (isResolved())  {  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	197	198	3	replace	return  type.isReferencedType()?  getReferencedType()  :  this;	  return    registry.isReferencedType()?    getReferencedType()    :    this;    	non-compiled	[CE]  cannot  find  symbol  type	5	None	replace
29	[BUG]  [BUGGY]  return  registry.isReferencedType()?  getReferencedType()  :  REFERENCED_TYPE;  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError    [CONTEXT]      boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);  finishPropertyContinuations();    [BUGGY]  return  registry.isReferencedType()?  getReferencedType()  :  REFERENCED_TYPE;  [BUGGY]    getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  if  (isResolved())  {  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	197	198	3	replace	return  registry.isReferencedType()?  getReferencedType()  :  REFERENCED_TYPE;	  return    registry.isReferencedType()?    getReferencedType()    :    this;    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
30	[BUG]  [BUGGY]  return  registry.isReferencedType()?  getReferencedType()  :  REFERRED_TYPE;  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError    [CONTEXT]      boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);  finishPropertyContinuations();    [BUGGY]  return  registry.isReferencedType()?  getReferencedType()  :  REFERRED_TYPE;  [BUGGY]    getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  if  (isResolved())  {  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	197	198	3	replace	return  registry.isReferencedType()?  getReferencedType()  :  REFERRED_TYPE;	  return    registry.isReferencedType()?    getReferencedType()    :    this;    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
31	[BUG]  [BUGGY]  return  registry.isReferencedType()?  getReferencedType()  :  false;  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError    [CONTEXT]      boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);  finishPropertyContinuations();    [BUGGY]  return  registry.isReferencedType()?  getReferencedType()  :  false;  [BUGGY]    getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  if  (isResolved())  {  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	197	198	3	replace	return  registry.isReferencedType()?  getReferencedType()  :  false;	  return    registry.isReferencedType()?    getReferencedType()    :    this;    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
32	[BUG]  [BUGGY]  return  registry.isStatic()?  getReferencedType()  :  null;  [CE]  cannot  find  symbol  [FE]            AssertionFailedError    [CONTEXT]      boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);  finishPropertyContinuations();    [BUGGY]  return  registry.isStatic()?  getReferencedType()  :  null;  [BUGGY]    getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  if  (isResolved())  {  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	197	198	3	replace	return  registry.isStatic()?  getReferencedType()  :  null;	  return    registry.isStatic()?    getReferencedType()    :    this;    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
33	[BUG]  [BUGGY]  return  registry.isStatic()?  getReferencedType()  :  Collections.EMPTY_LIST;  [CE]  cannot  find  symbol  [FE]              AssertionFailedError    [CONTEXT]      boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);  finishPropertyContinuations();    [BUGGY]  return  registry.isStatic()?  getReferencedType()  :  Collections.EMPTY_LIST;  [BUGGY]    getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  if  (isResolved())  {  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	197	198	3	replace	return  registry.isStatic()?  getReferencedType()  :  Collections.EMPTY_LIST;	  return    registry.isStatic()?    getReferencedType()    :    this;    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
34	[BUG]  [BUGGY]  return  registry.isStatic()?  getReferencedType()  :  Collections.emptyList();  [CE]  cannot  find  symbol  [FE]                AssertionFailedError    [CONTEXT]      boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);  finishPropertyContinuations();    [BUGGY]  return  registry.isStatic()?  getReferencedType()  :  Collections.emptyList();  [BUGGY]    getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  if  (isResolved())  {  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	197	198	3	replace	return  registry.isStatic()?  getReferencedType()  :  Collections.emptyList();	  return    registry.isStatic()?    getReferencedType()    :    this;    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
35	[BUG]  [BUGGY]  return  registry.isStatic()?  getReferencedType()  :  REFERRED_TYPE;  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError    [CONTEXT]      boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);  finishPropertyContinuations();    [BUGGY]  return  registry.isStatic()?  getReferencedType()  :  REFERRED_TYPE;  [BUGGY]    getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  if  (isResolved())  {  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	197	198	3	replace	return  registry.isStatic()?  getReferencedType()  :  REFERRED_TYPE;	  return    registry.isStatic()?    getReferencedType()    :    this;    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
36	[BUG]  [BUGGY]  return  registry.isStatic()?  getReferencedType()  :  Collections.EMPTY_STRING;  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError    [CONTEXT]      boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);  finishPropertyContinuations();    [BUGGY]  return  registry.isStatic()?  getReferencedType()  :  Collections.EMPTY_STRING;  [BUGGY]    getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  if  (isResolved())  {  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	197	198	3	replace	return  registry.isStatic()?  getReferencedType()  :  Collections.EMPTY_STRING;	  return    registry.isStatic()?    getReferencedType()    :    this;    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
37	[BUG]  [BUGGY]  return  registry.isStatic()?  getReferencedType()  :  DEFAULT_TYPE;  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError    [CONTEXT]      boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);  finishPropertyContinuations();    [BUGGY]  return  registry.isStatic()?  getReferencedType()  :  DEFAULT_TYPE;  [BUGGY]    getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  if  (isResolved())  {  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	197	198	3	replace	return  registry.isStatic()?  getReferencedType()  :  DEFAULT_TYPE;	  return    registry.isStatic()?    getReferencedType()    :    this;    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
38	[BUG]  [BUGGY]  return  registry.isInstanceType()?  getReferencedType()  :  null;  [CE]  cannot  find  symbol  [FE]          AssertionFailedError    [CONTEXT]      boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);  finishPropertyContinuations();    [BUGGY]  return  registry.isInstanceType()?  getReferencedType()  :  null;  [BUGGY]    getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  if  (isResolved())  {  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	197	198	3	replace	return  registry.isInstanceType()?  getReferencedType()  :  null;	  return    registry.isInstanceType()?    getReferencedType()    :    this;    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
39	[BUG]  [BUGGY]  return  registry.isInstanceType()?  getReferencedType()  :  REFERRED_TYPE;  [CE]  cannot  find  symbol  [FE]            AssertionFailedError    [CONTEXT]      boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);  finishPropertyContinuations();    [BUGGY]  return  registry.isInstanceType()?  getReferencedType()  :  REFERRED_TYPE;  [BUGGY]    getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  if  (isResolved())  {  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	197	198	3	replace	return  registry.isInstanceType()?  getReferencedType()  :  REFERRED_TYPE;	  return    registry.isInstanceType()?    getReferencedType()    :    this;    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
40	[BUG]  [BUGGY]  return  registry.isInstanceType()?  getReferencedType()  :  NodeUtil.getPropertyType(propertyName);  [CE]  cannot  find  symbol  [FE]              AssertionFailedError    [CONTEXT]      boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);  finishPropertyContinuations();    [BUGGY]  return  registry.isInstanceType()?  getReferencedType()  :  NodeUtil.getPropertyType(propertyName);  [BUGGY]    getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  if  (isResolved())  {  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	197	198	3	replace	return  registry.isInstanceType()?  getReferencedType()  :  NodeUtil.getPropertyType(propertyName);	  return    registry.isInstanceType()?    getReferencedType()    :    this;    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
41	[BUG]  [BUGGY]  return  registry.isInstanceType()?  getReferencedType()  :  NodeUtil.getNativeType(JSTypeNative.NO_TYPE);  [CE]  cannot  find  symbol  [FE]                AssertionFailedError    [CONTEXT]      boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);  finishPropertyContinuations();    [BUGGY]  return  registry.isInstanceType()?  getReferencedType()  :  NodeUtil.getNativeType(JSTypeNative.NO_TYPE);  [BUGGY]    getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  if  (isResolved())  {  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	197	198	3	replace	return  registry.isInstanceType()?  getReferencedType()  :  NodeUtil.getNativeType(JSTypeNative.NO_TYPE);	  return    registry.isInstanceType()?    getReferencedType()    :    this;    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
42	[BUG]  [BUGGY]  return  registry.isFirstGeneration()?  getReferencedType()  :  null;  [CE]  cannot  find  symbol  [FE]        AssertionFailedError    [CONTEXT]      boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);  finishPropertyContinuations();    [BUGGY]  return  registry.isFirstGeneration()?  getReferencedType()  :  null;  [BUGGY]    getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  if  (isResolved())  {  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	197	198	3	replace	return  registry.isFirstGeneration()?  getReferencedType()  :  null;	  return    registry.isLastGeneration()?    getReferencedType()    :    null;    timeout    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
43	[BUG]  [BUGGY]  return  registry.isLastGeneration()?  getPropertyType(type):  this;  [CE]  cannot  find  symbol  type  [FE]            AssertionFailedError    [CONTEXT]      boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);  finishPropertyContinuations();    [BUGGY]  return  registry.isLastGeneration()?  getPropertyType(type):  this;  [BUGGY]    getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  if  (isResolved())  {  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	197	198	3	replace	return  registry.isLastGeneration()?  getPropertyType(type):  this;	  return    registry.isLastGeneration()?    getPropertyType(resolved):    this;    	non-compiled	[CE]  cannot  find  symbol  type	4	None	replace
44	[BUG]  [BUGGY]  return  registry.isLastGeneration()?  getPropertyType(resolved,  propertyNode):  this;  [CE]  cannot  find  symbol  propertyNode  [FE]              AssertionFailedError    [CONTEXT]      boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);  finishPropertyContinuations();    [BUGGY]  return  registry.isLastGeneration()?  getPropertyType(resolved,  propertyNode):  this;  [BUGGY]    getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  if  (isResolved())  {  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	197	198	3	replace	return  registry.isLastGeneration()?  getPropertyType(resolved,  propertyNode):  this;	  return    registry.isLastGeneration()?    getPropertyType(resolved):    this;    	non-compiled	[CE]  cannot  find  symbol  propertyNode	4	None	replace
45	[BUG]  [BUGGY]  return  registry.isLastGeneration()?  getPropertyType(type,  resolved):  this;  [CE]  cannot  find  symbol  type  [FE]                AssertionFailedError    [CONTEXT]      boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);  finishPropertyContinuations();    [BUGGY]  return  registry.isLastGeneration()?  getPropertyType(type,  resolved):  this;  [BUGGY]    getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  if  (isResolved())  {  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	197	198	3	replace	return  registry.isLastGeneration()?  getPropertyType(type,  resolved):  this;	  return    registry.isLastGeneration()?    getPropertyType(resolved):    this;    	non-compiled	[CE]  cannot  find  symbol  type	4	None	replace
46	[BUG]  [BUGGY]  return  registry.isLastGeneration()?  getPropertyType(resolved,  type):  this;  [CE]  cannot  find  symbol  type  [FE]                  AssertionFailedError    [CONTEXT]      boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);  finishPropertyContinuations();    [BUGGY]  return  registry.isLastGeneration()?  getPropertyType(resolved,  type):  this;  [BUGGY]    getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  if  (isResolved())  {  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	197	198	3	replace	return  registry.isLastGeneration()?  getPropertyType(resolved,  type):  this;	  return    registry.isLastGeneration()?    getPropertyType(resolved):    this;    	non-compiled	[CE]  cannot  find  symbol  type	4	None	replace
47	[BUG]  [BUGGY]  return  registry.isLastGeneration()?  getPropertyType(propertyName,  resolved):  this;  [CE]  cannot  find  symbol  propertyName  [FE]                    AssertionFailedError    [CONTEXT]      boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);  finishPropertyContinuations();    [BUGGY]  return  registry.isLastGeneration()?  getPropertyType(propertyName,  resolved):  this;  [BUGGY]    getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  if  (isResolved())  {  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	197	198	3	replace	return  registry.isLastGeneration()?  getPropertyType(propertyName,  resolved):  this;	  return    registry.isLastGeneration()?    getPropertyType(resolved):    this;    	non-compiled	[CE]  cannot  find  symbol  propertyName	4	None	replace
48	[BUG]  [BUGGY]  return  registry.isLastGeneration()?  getPropertyType(resolved):  null;  [CE]  method  getPropertyType  in  class  ObjectType  cannot  be  applied  to  given  types;  [FE]                      AssertionFailedError    [CONTEXT]      boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);  finishPropertyContinuations();    [BUGGY]  return  registry.isLastGeneration()?  getPropertyType(resolved):  null;  [BUGGY]    getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  if  (isResolved())  {  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	197	198	3	replace	return  registry.isLastGeneration()?  getPropertyType(resolved):  null;	  return    registry.isLastGeneration()?    getPropertyType(resolved):    this;    	non-compiled	[CE]  method  getPropertyType  in  class  ObjectType  cannot  be  applied  to  given  types;	4	None	replace
49	[BUG]  [BUGGY]      Predicate  validator  =  getValueForAnnotations();  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError    [CONTEXT]      boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);  finishPropertyContinuations();    [BUGGY]      Predicate  validator  =  getValueForAnnotations();  [BUGGY]    getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  if  (isResolved())  {  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	197	198	3	replace	        Predicate  validator  =  getValueForAnnotations();	  timeout    	non-compiled	[CE]  cannot  find  symbol	8	None	add
50	[BUG]  [BUGGY]  return  registry.isLastGeneration()?  getReferencedType()  :  null;  return  registry.isLastGeneration()?  getReferencedType()  :  null;  [CE]  unreachable  statement  [FE]        AssertionFailedError    [CONTEXT]      boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);  finishPropertyContinuations();    [BUGGY]  return  registry.isLastGeneration()?  getReferencedType()  :  null;  return  registry.isLastGeneration()?  getReferencedType()  :  null;  [BUGGY]    getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  if  (isResolved())  {  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	197	198	3	replace	return    registry.isLastGeneration()?    getReferencedType()    :    null;    return  registry.isLastGeneration()?  getReferencedType()  :  null;	  timeout    	non-compiled	[CE]  unreachable  statement	1	None	add
51	[BUG]  [BUGGY]  return  registry.isLastGeneration()?  getReferencedType()  :  null;  Collection  <  JSType>  propertyContinuations  =  registry.isLastGeneration()?  getReferencedType()  :  null;  [CE]  cannot  find  symbol  [FE]          AssertionFailedError    [CONTEXT]      boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);  finishPropertyContinuations();    [BUGGY]  return  registry.isLastGeneration()?  getReferencedType()  :  null;  Collection  <  JSType>  propertyContinuations  =  registry.isLastGeneration()?  getReferencedType()  :  null;  [BUGGY]    getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  if  (isResolved())  {  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	197	198	3	replace	return    registry.isLastGeneration()?    getReferencedType()    :    null;    Collection  <  JSType>  propertyContinuations  =  registry.isLastGeneration()?  getReferencedType()  :  null;	  timeout    	non-compiled	[CE]  cannot  find  symbol	1	None	add
52	[BUG]  [BUGGY]  return  registry.isLastGeneration()?  getReferencedType()  :  null;  PropertyContinuation  <  JSType>  propertyContinuations  =  registry.isLastGeneration()?  getReferencedType()  :  null;  [CE]  type  PropertyContinuation  does  not  take  parameters  [FE]            AssertionFailedError    [CONTEXT]      boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);  finishPropertyContinuations();    [BUGGY]  return  registry.isLastGeneration()?  getReferencedType()  :  null;  PropertyContinuation  <  JSType>  propertyContinuations  =  registry.isLastGeneration()?  getReferencedType()  :  null;  [BUGGY]    getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  if  (isResolved())  {  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	197	198	3	replace	return    registry.isLastGeneration()?    getReferencedType()    :    null;    PropertyContinuation  <  JSType>  propertyContinuations  =  registry.isLastGeneration()?  getReferencedType()  :  null;	  timeout    	non-compiled	[CE]  type  PropertyContinuation  does  not  take  parameters	1	None	add
53	[BUG]  [BUGGY]  return  registry.isLastGeneration()?  getReferencedType()  :  null;  Collections.sort(propertyContinuations);  [CE]  cannot  find  symbol  Collections  [FE]              AssertionFailedError    [CONTEXT]      boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);  finishPropertyContinuations();    [BUGGY]  return  registry.isLastGeneration()?  getReferencedType()  :  null;  Collections.sort(propertyContinuations);  [BUGGY]    getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  if  (isResolved())  {  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	197	198	3	replace	return    registry.isLastGeneration()?    getReferencedType()    :    null;    Collections.sort(propertyContinuations);	  timeout    	non-compiled	[CE]  cannot  find  symbol  Collections	1	None	add
54	[BUG]  [BUGGY]  return  registry.isLastGeneration()?  getReferencedType()  :  null;  Collection  <  JSType>  propertyContinuations  =  registry.getLastGeneration()?  getReferencedType()  :  null;  [CE]  cannot  find  symbol  [FE]                AssertionFailedError    [CONTEXT]      boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);  finishPropertyContinuations();    [BUGGY]  return  registry.isLastGeneration()?  getReferencedType()  :  null;  Collection  <  JSType>  propertyContinuations  =  registry.getLastGeneration()?  getReferencedType()  :  null;  [BUGGY]    getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  if  (isResolved())  {  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	197	198	3	replace	return    registry.isLastGeneration()?    getReferencedType()    :    null;    Collection  <  JSType>  propertyContinuations  =  registry.getLastGeneration()?  getReferencedType()  :  null;	  timeout    	non-compiled	[CE]  cannot  find  symbol	1	None	add
55	[BUG]  [BUGGY]  return  registry.isLastGeneration()?  getReferencedType()  :  null;  PropertyContinuation  <  JSType>  propertyContinuations  =  registry.getLastGeneration()?  getReferencedType()  :  null;  [CE]  type  PropertyContinuation  does  not  take  parameters  [FE]                  AssertionFailedError    [CONTEXT]      boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);  finishPropertyContinuations();    [BUGGY]  return  registry.isLastGeneration()?  getReferencedType()  :  null;  PropertyContinuation  <  JSType>  propertyContinuations  =  registry.getLastGeneration()?  getReferencedType()  :  null;  [BUGGY]    getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  if  (isResolved())  {  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	197	198	3	replace	return    registry.isLastGeneration()?    getReferencedType()    :    null;    PropertyContinuation  <  JSType>  propertyContinuations  =  registry.getLastGeneration()?  getReferencedType()  :  null;	  timeout    	non-compiled	[CE]  type  PropertyContinuation  does  not  take  parameters	1	None	add
56	[BUG]  [BUGGY]  timeout  [FE]                AssertionFailedError    [CONTEXT]      boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);  finishPropertyContinuations();    [BUGGY]  return  registry.isLastGeneration()?  getPropertyType(sourceName):  this;  [BUGGY]    getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  if  (isResolved())  {  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	197	198	3	add	return  registry.isLastGeneration()?  getPropertyType(sourceName):  this;	  return    registry.isLastGeneration()?    getPropertyType(propertyName):    this;    	compilable	timeout	6	1	replace
57	[BUG]  [BUGGY]  return  registry.isLastGeneration()?  getPropertyType(sourceName):  this;  timeout  [FE]                AssertionFailedError    [CONTEXT]      boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);  finishPropertyContinuations();    [BUGGY]  return  registry.isLastGeneration()?  getPropertyType(sourceName):  this;  [BUGGY]    getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  if  (isResolved())  {  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	197	198	3	replace	return  registry.isLastGeneration()?  getPropertyType(sourceName):  this;	  return    registry.isLastGeneration()?    getPropertyType(propertyName):    this;    	compilable	timeout	6	1	replace
58	[BUG]  [BUGGY]  return  registry.isLastGeneration()?  getPropertyType(propertyNode):  this;  [CE]  cannot  find  symbol  propertyNode  [FE]                  AssertionFailedError    [CONTEXT]      boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);  finishPropertyContinuations();    [BUGGY]  return  registry.isLastGeneration()?  getPropertyType(propertyNode):  this;  [BUGGY]    getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  if  (isResolved())  {  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	197	198	3	replace	return  registry.isLastGeneration()?  getPropertyType(propertyNode):  this;	  return    registry.isLastGeneration()?    getPropertyType(propertyName):    this;    	non-compiled	[CE]  cannot  find  symbol  propertyNode	6	None	replace
59	[BUG]  [BUGGY]  return  registry.isLastGeneration()?  getPropertyType(propertySourceName):  this;  [CE]  cannot  find  symbol  propertySourceName  [FE]                    AssertionFailedError    [CONTEXT]      boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);  finishPropertyContinuations();    [BUGGY]  return  registry.isLastGeneration()?  getPropertyType(propertySourceName):  this;  [BUGGY]    getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  if  (isResolved())  {  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	197	198	3	replace	return  registry.isLastGeneration()?  getPropertyType(propertySourceName):  this;	  return    registry.isLastGeneration()?    getPropertyType(propertyName):    this;    	non-compiled	[CE]  cannot  find  symbol  propertySourceName	6	None	replace
60	[BUG]  [BUGGY]  return  registry.isLastGeneration()?  getPropertyType(propertyName):  null;  [CE]  cannot  find  symbol  propertyName  [FE]                      AssertionFailedError    [CONTEXT]      boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);  finishPropertyContinuations();    [BUGGY]  return  registry.isLastGeneration()?  getPropertyType(propertyName):  null;  [BUGGY]    getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  if  (isResolved())  {  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	197	198	3	replace	return  registry.isLastGeneration()?  getPropertyType(propertyName):  null;	  return    registry.isLastGeneration()?    getPropertyType(propertyName):    this;    	non-compiled	[CE]  cannot  find  symbol  propertyName	6	None	replace
61	[BUG]  [BUGGY]  return  registry.isLastGeneration()?  getPropertyType(name):  this;  [CE]  cannot  find  symbol  name  [FE]                        AssertionFailedError    [CONTEXT]      boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);  finishPropertyContinuations();    [BUGGY]  return  registry.isLastGeneration()?  getPropertyType(name):  this;  [BUGGY]    getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  if  (isResolved())  {  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	197	198	3	replace	return  registry.isLastGeneration()?  getPropertyType(name):  this;	  return    registry.isLastGeneration()?    getPropertyType(propertyName):    this;    	non-compiled	[CE]  cannot  find  symbol  name	6	None	replace
62	[BUG]  [BUGGY]  return  registry.isReferenced()?  getReferencedType()  :  null;  [CE]  cannot  find  symbol  [FE]          AssertionFailedError    [CONTEXT]      boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);  finishPropertyContinuations();    [BUGGY]  return  registry.isReferenced()?  getReferencedType()  :  null;  [BUGGY]    getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  if  (isResolved())  {  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	197	198	3	replace	return  registry.isReferenced()?  getReferencedType()  :  null;	  return    registry.isReferenced()?    getReferencedType()    :    this;    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
63	[BUG]  [BUGGY]  return  registry.isReferenced()?  getReferencedType()  :  Collections.EMPTY_LIST;  [CE]  cannot  find  symbol  [FE]            AssertionFailedError    [CONTEXT]      boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);  finishPropertyContinuations();    [BUGGY]  return  registry.isReferenced()?  getReferencedType()  :  Collections.EMPTY_LIST;  [BUGGY]    getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  if  (isResolved())  {  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	197	198	3	replace	return  registry.isReferenced()?  getReferencedType()  :  Collections.EMPTY_LIST;	  return    registry.isReferenced()?    getReferencedType()    :    this;    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
64	[BUG]  [BUGGY]  return  registry.isReferenced()?  getReferencedType()  :  DEFAULT_TYPE;  [CE]  cannot  find  symbol  [FE]              AssertionFailedError    [CONTEXT]      boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);  finishPropertyContinuations();    [BUGGY]  return  registry.isReferenced()?  getReferencedType()  :  DEFAULT_TYPE;  [BUGGY]    getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  if  (isResolved())  {  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	197	198	3	replace	return  registry.isReferenced()?  getReferencedType()  :  DEFAULT_TYPE;	  return    registry.isReferenced()?    getReferencedType()    :    this;    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
65	[BUG]  [BUGGY]  return  registry.isReferenced()?  getReferencedType()  :  REFERENCED_TYPE;  [CE]  cannot  find  symbol  [FE]                AssertionFailedError    [CONTEXT]      boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);  finishPropertyContinuations();    [BUGGY]  return  registry.isReferenced()?  getReferencedType()  :  REFERENCED_TYPE;  [BUGGY]    getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  if  (isResolved())  {  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	197	198	3	replace	return  registry.isReferenced()?  getReferencedType()  :  REFERENCED_TYPE;	  return    registry.isReferenced()?    getReferencedType()    :    this;    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
66	[BUG]  [BUGGY]  return  registry.isReferenced()?  getReferencedType()  :  REFERENCE_TYPE;  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError    [CONTEXT]      boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);  finishPropertyContinuations();    [BUGGY]  return  registry.isReferenced()?  getReferencedType()  :  REFERENCE_TYPE;  [BUGGY]    getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  if  (isResolved())  {  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	197	198	3	replace	return  registry.isReferenced()?  getReferencedType()  :  REFERENCE_TYPE;	  return    registry.isReferenced()?    getReferencedType()    :    this;    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
67	[BUG]  [BUGGY]  return  registry.isReferenced()?  getReferencedType()  :  Collections.emptyList();  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError    [CONTEXT]      boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);  finishPropertyContinuations();    [BUGGY]  return  registry.isReferenced()?  getReferencedType()  :  Collections.emptyList();  [BUGGY]    getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  if  (isResolved())  {  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	197	198	3	replace	return  registry.isReferenced()?  getReferencedType()  :  Collections.emptyList();	  return    registry.isReferenced()?    getReferencedType()    :    this;    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
68	[BUG]  [BUGGY]  return  registry.isFirstGeneration()?  getReferencedType()  :  REFERRED_TYPE;  [CE]  cannot  find  symbol  [FE]          AssertionFailedError    [CONTEXT]      boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);  finishPropertyContinuations();    [BUGGY]  return  registry.isFirstGeneration()?  getReferencedType()  :  REFERRED_TYPE;  [BUGGY]    getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  if  (isResolved())  {  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	197	198	3	replace	return  registry.isFirstGeneration()?  getReferencedType()  :  REFERRED_TYPE;	  return    registry.isFirstGeneration()?    getReferencedType()    :    this;    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
69	[BUG]  [BUGGY]  return  registry.isFirstGeneration()?  getReferencedType()  :  resolved;  [CE]  cannot  find  symbol  [FE]            AssertionFailedError    [CONTEXT]      boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);  finishPropertyContinuations();    [BUGGY]  return  registry.isFirstGeneration()?  getReferencedType()  :  resolved;  [BUGGY]    getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  if  (isResolved())  {  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	197	198	3	replace	return  registry.isFirstGeneration()?  getReferencedType()  :  resolved;	  return    registry.isFirstGeneration()?    getReferencedType()    :    this;    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
70	[BUG]  [BUGGY]  return  registry.isFirstGeneration()?  getReferencedType()  :  NodeUtil.getNativeType(JSTypeNative.NO_TYPE);  [CE]  cannot  find  symbol  [FE]              AssertionFailedError    [CONTEXT]      boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);  finishPropertyContinuations();    [BUGGY]  return  registry.isFirstGeneration()?  getReferencedType()  :  NodeUtil.getNativeType(JSTypeNative.NO_TYPE);  [BUGGY]    getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  if  (isResolved())  {  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	197	198	3	replace	return  registry.isFirstGeneration()?  getReferencedType()  :  NodeUtil.getNativeType(JSTypeNative.NO_TYPE);	  return    registry.isFirstGeneration()?    getReferencedType()    :    this;    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
71	[BUG]  [BUGGY]  return  registry.isFirstGeneration()?  getReferencedType()  :  NodeUtil.getPropertyType(propertyName);  [CE]  cannot  find  symbol  [FE]                AssertionFailedError    [CONTEXT]      boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);  finishPropertyContinuations();    [BUGGY]  return  registry.isFirstGeneration()?  getReferencedType()  :  NodeUtil.getPropertyType(propertyName);  [BUGGY]    getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  if  (isResolved())  {  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	197	198	3	replace	return  registry.isFirstGeneration()?  getReferencedType()  :  NodeUtil.getPropertyType(propertyName);	  return    registry.isFirstGeneration()?    getReferencedType()    :    this;    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
72	[BUG]  [BUGGY]  return  registry.isLastGeneration()?  getPropertyType(resolved,  reference):  this;  [CE]  method  getPropertyType  in  class  ObjectType  cannot  be  applied  to  given  types;  [FE]            AssertionFailedError    [CONTEXT]      boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);  finishPropertyContinuations();    [BUGGY]  return  registry.isLastGeneration()?  getPropertyType(resolved,  reference):  this;  [BUGGY]    getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  if  (isResolved())  {  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	197	198	3	replace	return  registry.isLastGeneration()?  getPropertyType(resolved,  reference):  this;	  return    registry.isLastGeneration()?    getPropertyType(resolved):    this;    	non-compiled	[CE]  method  getPropertyType  in  class  ObjectType  cannot  be  applied  to  given  types;	4	None	replace
73	[BUG]  [BUGGY]  return  registry.isLastGeneration()?  getPropertyType(resolved,  sourceName):  this;  [CE]  method  getPropertyType  in  class  ObjectType  cannot  be  applied  to  given  types;  [FE]              AssertionFailedError    [CONTEXT]      boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);  finishPropertyContinuations();    [BUGGY]  return  registry.isLastGeneration()?  getPropertyType(resolved,  sourceName):  this;  [BUGGY]    getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  if  (isResolved())  {  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	197	198	3	replace	return  registry.isLastGeneration()?  getPropertyType(resolved,  sourceName):  this;	  return    registry.isLastGeneration()?    getPropertyType(resolved):    this;    	non-compiled	[CE]  method  getPropertyType  in  class  ObjectType  cannot  be  applied  to  given  types;	4	None	replace
74	[BUG]  [BUGGY]      Predicates.checkNotNull(propertyName);  [CE]  cannot  find  symbol  propertyName  [FE]                    AssertionFailedError    [CONTEXT]      boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);  finishPropertyContinuations();    [BUGGY]      Predicates.checkNotNull(propertyName);  [BUGGY]    getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  if  (isResolved())  {  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	197	198	3	replace	        Predicates.checkNotNull(propertyName);	  timeout    	non-compiled	[CE]  cannot  find  symbol  propertyName	8	None	add
75	[BUG]  [BUGGY]      Predicates.checkNotNull(resolved);  [CE]  cannot  find  symbol  Predicates  [FE]                      AssertionFailedError    [CONTEXT]      boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);  finishPropertyContinuations();    [BUGGY]      Predicates.checkNotNull(resolved);  [BUGGY]    getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  if  (isResolved())  {  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	197	198	3	replace	        Predicates.checkNotNull(resolved);	  timeout    	non-compiled	[CE]  cannot  find  symbol  Predicates	8	None	add
76	[BUG]  [BUGGY]  timeout  [FE]                        AssertionFailedError    [CONTEXT]      boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);  finishPropertyContinuations();    [BUGGY]      if(resolved)  {  handleTypeCycle(t);  }  [BUGGY]    getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  if  (isResolved())  {  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	197	198	3	add	        if(resolved)  {  handleTypeCycle(t);  }	  timeout    	compilable	timeout	8	1	add
77	[BUG]  [BUGGY]      if(resolved)  {  handleTypeCycle(t);  }  timeout  [FE]                        AssertionFailedError    [CONTEXT]      boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);  finishPropertyContinuations();    [BUGGY]      if(resolved)  {  handleTypeCycle(t);  }  [BUGGY]    getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  if  (isResolved())  {  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	197	198	3	replace	        if(resolved)  {  handleTypeCycle(t);  }	  timeout    	compilable	timeout	8	1	add
78	[BUG]  [BUGGY]      Predicate  validator  =  getValueForAnnotations(resolved);  [CE]  cannot  find  symbol  [FE]                          AssertionFailedError    [CONTEXT]      boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);  finishPropertyContinuations();    [BUGGY]      Predicate  validator  =  getValueForAnnotations(resolved);  [BUGGY]    getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  if  (isResolved())  {  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	197	198	3	replace	        Predicate  validator  =  getValueForAnnotations(resolved);	  timeout    	non-compiled	[CE]  cannot  find  symbol	8	None	add
79	[BUG]  [BUGGY]      Predicates.checkNotNull(propertyNode);  [CE]  cannot  find  symbol  propertyNode  [FE]                            AssertionFailedError    [CONTEXT]      boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);  finishPropertyContinuations();    [BUGGY]      Predicates.checkNotNull(propertyNode);  [BUGGY]    getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  if  (isResolved())  {  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	197	198	3	replace	        Predicates.checkNotNull(propertyNode);	  timeout    	non-compiled	[CE]  cannot  find  symbol  propertyNode	8	None	add
80	[BUG]  [BUGGY]      Predicates.checkArgument(resolved);  [CE]  cannot  find  symbol  Predicates  [FE]                              AssertionFailedError    [CONTEXT]      boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);  finishPropertyContinuations();    [BUGGY]      Predicates.checkArgument(resolved);  [BUGGY]    getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  if  (isResolved())  {  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	197	198	3	replace	        Predicates.checkArgument(resolved);	  timeout    	non-compiled	[CE]  cannot  find  symbol  Predicates	8	None	add
81	[BUG]  [BUGGY]  return  enclosing.isFirstGeneration()?  getReferencedType()  :  this;  [CE]  cannot  find  symbol  [FE]          AssertionFailedError    [CONTEXT]      boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);  finishPropertyContinuations();    [BUGGY]  return  enclosing.isFirstGeneration()?  getReferencedType()  :  this;  [BUGGY]    getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  if  (isResolved())  {  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	197	198	3	replace	return  enclosing.isFirstGeneration()?  getReferencedType()  :  this;	  return    registry.isFirstGeneration()?    getReferencedType()    :    this;    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
82	[BUG]  [BUGGY]  return  this.registry.isFirstGeneration()?  getReferencedType()  :  this;  [CE]  cannot  find  symbol  [FE]            AssertionFailedError    [CONTEXT]      boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);  finishPropertyContinuations();    [BUGGY]  return  this.registry.isFirstGeneration()?  getReferencedType()  :  this;  [BUGGY]    getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  if  (isResolved())  {  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	197	198	3	replace	return  this.registry.isFirstGeneration()?  getReferencedType()  :  this;	  return    registry.isFirstGeneration()?    getReferencedType()    :    this;    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
83	[BUG]  [BUGGY]  return  type.isFirstGeneration()?  getReferencedType()  :  this;  [CE]  cannot  find  symbol  type  [FE]              AssertionFailedError    [CONTEXT]      boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);  finishPropertyContinuations();    [BUGGY]  return  type.isFirstGeneration()?  getReferencedType()  :  this;  [BUGGY]    getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  if  (isResolved())  {  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	197	198	3	replace	return  type.isFirstGeneration()?  getReferencedType()  :  this;	  return    registry.isFirstGeneration()?    getReferencedType()    :    this;    	non-compiled	[CE]  cannot  find  symbol  type	3	None	replace
84	[BUG]  [BUGGY]  return  registry.isFirstGeneration()?  getReferencedType()  :  REFERENCE_TYPE;  [CE]  cannot  find  symbol  [FE]                AssertionFailedError    [CONTEXT]      boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);  finishPropertyContinuations();    [BUGGY]  return  registry.isFirstGeneration()?  getReferencedType()  :  REFERENCE_TYPE;  [BUGGY]    getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  if  (isResolved())  {  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	197	198	3	replace	return  registry.isFirstGeneration()?  getReferencedType()  :  REFERENCE_TYPE;	  return    registry.isFirstGeneration()?    getReferencedType()    :    this;    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
85	[BUG]  [BUGGY]  return  registry.isFirstGeneration()?  getReferencedType()  :  REFERENCED_TYPE;  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError    [CONTEXT]      boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);  finishPropertyContinuations();    [BUGGY]  return  registry.isFirstGeneration()?  getReferencedType()  :  REFERENCED_TYPE;  [BUGGY]    getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  if  (isResolved())  {  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	197	198	3	replace	return  registry.isFirstGeneration()?  getReferencedType()  :  REFERENCED_TYPE;	  return    registry.isFirstGeneration()?    getReferencedType()    :    this;    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
86	[BUG]  [BUGGY]  return  registry.isLastGeneration()?  getReferencedType()  :  null;  JSType  type  =  getReferencedType();  [CE]  unreachable  statement  [FE]        AssertionFailedError    [CONTEXT]      boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);  finishPropertyContinuations();    [BUGGY]  return  registry.isLastGeneration()?  getReferencedType()  :  null;  JSType  type  =  getReferencedType();  [BUGGY]    getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  if  (isResolved())  {  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	197	198	3	replace	return    registry.isLastGeneration()?    getReferencedType()    :    null;    JSType  type  =  getReferencedType();	  timeout    	non-compiled	[CE]  unreachable  statement	1	None	add
87	[BUG]  [BUGGY]  return  registry.isLastGeneration()?  getReferencedType()  :  null;  PropertyContinuation  <  JSType>  propertyContinuations  =  registry.getLastGeneration();  [CE]  type  PropertyContinuation  does  not  take  parameters  [FE]          AssertionFailedError    [CONTEXT]      boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);  finishPropertyContinuations();    [BUGGY]  return  registry.isLastGeneration()?  getReferencedType()  :  null;  PropertyContinuation  <  JSType>  propertyContinuations  =  registry.getLastGeneration();  [BUGGY]    getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  if  (isResolved())  {  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	197	198	3	replace	return    registry.isLastGeneration()?    getReferencedType()    :    null;    PropertyContinuation  <  JSType>  propertyContinuations  =  registry.getLastGeneration();	  timeout    	non-compiled	[CE]  type  PropertyContinuation  does  not  take  parameters	1	None	add
88	[BUG]  [BUGGY]  return  registry.isLastGeneration()?  getReferencedType()  :  null;  Predicates.checkNotNull(registry);  [CE]  cannot  find  symbol  Predicates  [FE]            AssertionFailedError    [CONTEXT]      boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);  finishPropertyContinuations();    [BUGGY]  return  registry.isLastGeneration()?  getReferencedType()  :  null;  Predicates.checkNotNull(registry);  [BUGGY]    getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  if  (isResolved())  {  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	197	198	3	replace	return    registry.isLastGeneration()?    getReferencedType()    :    null;    Predicates.checkNotNull(registry);	  timeout    	non-compiled	[CE]  cannot  find  symbol  Predicates	1	None	add
89	[BUG]  [BUGGY]  return  registry.isLastGeneration()?  getReferencedType()  :  null;  Collections.sort(properties);  [CE]  cannot  find  symbol  properties  [FE]              AssertionFailedError    [CONTEXT]      boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);  finishPropertyContinuations();    [BUGGY]  return  registry.isLastGeneration()?  getReferencedType()  :  null;  Collections.sort(properties);  [BUGGY]    getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  if  (isResolved())  {  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	197	198	3	replace	return    registry.isLastGeneration()?    getReferencedType()    :    null;    Collections.sort(properties);	  timeout    	non-compiled	[CE]  cannot  find  symbol  properties	1	None	add
90	[BUG]  [BUGGY]  return  enclosing.isReferenced()?  getReferencedType()  :  this;  [CE]  cannot  find  symbol  [FE]          AssertionFailedError    [CONTEXT]      boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);  finishPropertyContinuations();    [BUGGY]  return  enclosing.isReferenced()?  getReferencedType()  :  this;  [BUGGY]    getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  if  (isResolved())  {  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	197	198	3	replace	return  enclosing.isReferenced()?  getReferencedType()  :  this;	  return    registry.isReferenced()?    getReferencedType()    :    this;    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
91	[BUG]  [BUGGY]  return  type.isReferenced()?  getReferencedType()  :  this;  [CE]  cannot  find  symbol  type  [FE]            AssertionFailedError    [CONTEXT]      boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);  finishPropertyContinuations();    [BUGGY]  return  type.isReferenced()?  getReferencedType()  :  this;  [BUGGY]    getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  if  (isResolved())  {  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	197	198	3	replace	return  type.isReferenced()?  getReferencedType()  :  this;	  return    registry.isReferenced()?    getReferencedType()    :    this;    	non-compiled	[CE]  cannot  find  symbol  type	11	None	replace
92	[BUG]  [BUGGY]  return  this.registry.isReferenced()?  getReferencedType()  :  this;  [CE]  cannot  find  symbol  [FE]              AssertionFailedError    [CONTEXT]      boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);  finishPropertyContinuations();    [BUGGY]  return  this.registry.isReferenced()?  getReferencedType()  :  this;  [BUGGY]    getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  if  (isResolved())  {  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	197	198	3	replace	return  this.registry.isReferenced()?  getReferencedType()  :  this;	  return    registry.isReferenced()?    getReferencedType()    :    this;    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
93	[BUG]  [BUGGY]  return  propertyNode.isReferenced()?  getReferencedType()  :  this;  [CE]  cannot  find  symbol  propertyNode  [FE]                AssertionFailedError    [CONTEXT]      boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);  finishPropertyContinuations();    [BUGGY]  return  propertyNode.isReferenced()?  getReferencedType()  :  this;  [BUGGY]    getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  if  (isResolved())  {  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	197	198	3	replace	return  propertyNode.isReferenced()?  getReferencedType()  :  this;	  return    registry.isReferenced()?    getReferencedType()    :    this;    	non-compiled	[CE]  cannot  find  symbol  propertyNode	11	None	replace
94	[BUG]  [BUGGY]  timeout  [FE]                AssertionFailedError    [CONTEXT]      boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);  finishPropertyContinuations();    [BUGGY]  return  registry.isLastGeneration()?  getPropertyType(reference):  this;  [BUGGY]    getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  if  (isResolved())  {  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	197	198	3	add	return  registry.isLastGeneration()?  getPropertyType(reference):  this;	  return    registry.isLastGeneration()?    getPropertyType(propertyName):    this;    	compilable	timeout	6	1	replace
95	[BUG]  [BUGGY]  return  registry.isLastGeneration()?  getPropertyType(reference):  this;  timeout  [FE]                AssertionFailedError    [CONTEXT]      boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);  finishPropertyContinuations();    [BUGGY]  return  registry.isLastGeneration()?  getPropertyType(reference):  this;  [BUGGY]    getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  if  (isResolved())  {  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	197	198	3	replace	return  registry.isLastGeneration()?  getPropertyType(reference):  this;	  return    registry.isLastGeneration()?    getPropertyType(propertyName):    this;    	compilable	timeout	6	1	replace
96	[BUG]  [BUGGY]  return  registry.isLastGeneration()?  getPropertyType(REFERENCE):  this;  [CE]  cannot  find  symbol  REFERENCE  [FE]                  AssertionFailedError    [CONTEXT]      boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);  finishPropertyContinuations();    [BUGGY]  return  registry.isLastGeneration()?  getPropertyType(REFERENCE):  this;  [BUGGY]    getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  if  (isResolved())  {  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	197	198	3	replace	return  registry.isLastGeneration()?  getPropertyType(REFERENCE):  this;	  return    registry.isLastGeneration()?    getPropertyType(propertyName):    this;    	non-compiled	[CE]  cannot  find  symbol  REFERENCE	6	None	replace
97	[BUG]  [BUGGY]  return  inferred?  getReferencedType()  :  this;  [CE]  cannot  find  symbol  inferred  [FE]        AssertionFailedError    [CONTEXT]      boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);  finishPropertyContinuations();    [BUGGY]  return  inferred?  getReferencedType()  :  this;  [BUGGY]    getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  if  (isResolved())  {  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	197	198	3	replace	return  inferred?  getReferencedType()  :  this;	  return    registry.isInferred()?    getReferencedType()    :    this;    	non-compiled	[CE]  cannot  find  symbol  inferred	10	None	replace
98	[BUG]  [BUGGY]  return  enclosing.isInferred()?  getReferencedType()  :  this;  [CE]  cannot  find  symbol  [FE]          AssertionFailedError    [CONTEXT]      boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);  finishPropertyContinuations();    [BUGGY]  return  enclosing.isInferred()?  getReferencedType()  :  this;  [BUGGY]    getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  if  (isResolved())  {  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	197	198	3	replace	return  enclosing.isInferred()?  getReferencedType()  :  this;	  return    registry.isInferred()?    getReferencedType()    :    this;    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
99	[BUG]  [BUGGY]  return  this.registry.isInferred()?  getReferencedType()  :  this;  [CE]  cannot  find  symbol  [FE]            AssertionFailedError    [CONTEXT]      boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);  finishPropertyContinuations();    [BUGGY]  return  this.registry.isInferred()?  getReferencedType()  :  this;  [BUGGY]    getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  if  (isResolved())  {  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	197	198	3	replace	return  this.registry.isInferred()?  getReferencedType()  :  this;	  return    registry.isInferred()?    getReferencedType()    :    this;    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
100	[BUG]  [BUGGY]  return  propertyNode.isInferred()?  getReferencedType()  :  this;  [CE]  cannot  find  symbol  propertyNode  [FE]              AssertionFailedError    [CONTEXT]      boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);  finishPropertyContinuations();    [BUGGY]  return  propertyNode.isInferred()?  getReferencedType()  :  this;  [BUGGY]    getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  if  (isResolved())  {  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	197	198	3	replace	return  propertyNode.isInferred()?  getReferencedType()  :  this;	  return    registry.isInferred()?    getReferencedType()    :    this;    	non-compiled	[CE]  cannot  find  symbol  propertyNode	10	None	replace
101	[BUG]  [BUGGY]  return  type.isInferred()?  getReferencedType()  :  this;  [CE]  cannot  find  symbol  type  [FE]                AssertionFailedError    [CONTEXT]      boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);  finishPropertyContinuations();    [BUGGY]  return  type.isInferred()?  getReferencedType()  :  this;  [BUGGY]    getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  if  (isResolved())  {  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	197	198	3	replace	return  type.isInferred()?  getReferencedType()  :  this;	  return    registry.isInferred()?    getReferencedType()    :    this;    	non-compiled	[CE]  cannot  find  symbol  type	10	None	replace
102	[BUG]  [BUGGY]  return  type.isInstanceType()?  getReferencedType()  :  this;  [CE]  cannot  find  symbol  type  [FE]          AssertionFailedError    [CONTEXT]      boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);  finishPropertyContinuations();    [BUGGY]  return  type.isInstanceType()?  getReferencedType()  :  this;  [BUGGY]    getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  if  (isResolved())  {  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	197	198	3	replace	return  type.isInstanceType()?  getReferencedType()  :  this;	  return    registry.isInstanceType()?    getReferencedType()    :    this;    	non-compiled	[CE]  cannot  find  symbol  type	13	None	replace
103	[BUG]  [BUGGY]  return  enclosing.isInstanceType()?  getReferencedType()  :  this;  [CE]  cannot  find  symbol  [FE]            AssertionFailedError    [CONTEXT]      boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);  finishPropertyContinuations();    [BUGGY]  return  enclosing.isInstanceType()?  getReferencedType()  :  this;  [BUGGY]    getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  if  (isResolved())  {  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	197	198	3	replace	return  enclosing.isInstanceType()?  getReferencedType()  :  this;	  return    registry.isInstanceType()?    getReferencedType()    :    this;    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
104	[BUG]  [BUGGY]  return  this.registry.isInstanceType()?  getReferencedType()  :  this;  [CE]  cannot  find  symbol  [FE]              AssertionFailedError    [CONTEXT]      boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);  finishPropertyContinuations();    [BUGGY]  return  this.registry.isInstanceType()?  getReferencedType()  :  this;  [BUGGY]    getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  if  (isResolved())  {  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	197	198	3	replace	return  this.registry.isInstanceType()?  getReferencedType()  :  this;	  return    registry.isInstanceType()?    getReferencedType()    :    this;    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
105	[BUG]  [BUGGY]  return  registry.isInstanceType()?  getReferencedType()  :  REFERENCE_TYPE;  [CE]  cannot  find  symbol  [FE]                AssertionFailedError    [CONTEXT]      boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);  finishPropertyContinuations();    [BUGGY]  return  registry.isInstanceType()?  getReferencedType()  :  REFERENCE_TYPE;  [BUGGY]    getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  if  (isResolved())  {  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	197	198	3	replace	return  registry.isInstanceType()?  getReferencedType()  :  REFERENCE_TYPE;	  return    registry.isInstanceType()?    getReferencedType()    :    this;    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
106	[BUG]  [BUGGY]  return  registry.isInstanceType()?  getReferencedType()  :  DEFAULT_TYPE;  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError    [CONTEXT]      boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);  finishPropertyContinuations();    [BUGGY]  return  registry.isInstanceType()?  getReferencedType()  :  DEFAULT_TYPE;  [BUGGY]    getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  if  (isResolved())  {  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	197	198	3	replace	return  registry.isInstanceType()?  getReferencedType()  :  DEFAULT_TYPE;	  return    registry.isInstanceType()?    getReferencedType()    :    this;    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
107	[BUG]  [BUGGY]  return  registry.isLocal()?  getReferencedType()  :  REFERENCE_TYPE;  [CE]  cannot  find  symbol  [FE]        AssertionFailedError    [CONTEXT]      boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);  finishPropertyContinuations();    [BUGGY]  return  registry.isLocal()?  getReferencedType()  :  REFERENCE_TYPE;  [BUGGY]    getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  if  (isResolved())  {  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	197	198	3	replace	return  registry.isLocal()?  getReferencedType()  :  REFERENCE_TYPE;	  return    registry.isLocal()?    getReferencedType()    :    this;    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
108	[BUG]  [BUGGY]  return  registry.isLocal()?  getReferencedType()  :  REFERENCED_TYPE;  [CE]  cannot  find  symbol  [FE]          AssertionFailedError    [CONTEXT]      boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);  finishPropertyContinuations();    [BUGGY]  return  registry.isLocal()?  getReferencedType()  :  REFERENCED_TYPE;  [BUGGY]    getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  if  (isResolved())  {  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	197	198	3	replace	return  registry.isLocal()?  getReferencedType()  :  REFERENCED_TYPE;	  return    registry.isLocal()?    getReferencedType()    :    this;    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
109	[BUG]  [BUGGY]  return  registry.isLocal()?  getPropertyType(reference):  this;  [CE]  cannot  find  symbol  [FE]            AssertionFailedError    [CONTEXT]      boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);  finishPropertyContinuations();    [BUGGY]  return  registry.isLocal()?  getPropertyType(reference):  this;  [BUGGY]    getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  if  (isResolved())  {  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	197	198	3	replace	return  registry.isLocal()?  getPropertyType(reference):  this;	  return    registry.isLocal()?    getReferencedType()    :    this;    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
110	[BUG]  [BUGGY]  return  registry.isLocal()?  getReferencedType()  :  NodeUtil.getNativeType(JSTypeNative.UNKNOWN_TYPE);  [CE]  cannot  find  symbol  [FE]              AssertionFailedError    [CONTEXT]      boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);  finishPropertyContinuations();    [BUGGY]  return  registry.isLocal()?  getReferencedType()  :  NodeUtil.getNativeType(JSTypeNative.UNKNOWN_TYPE);  [BUGGY]    getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  if  (isResolved())  {  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	197	198	3	replace	return  registry.isLocal()?  getReferencedType()  :  NodeUtil.getNativeType(JSTypeNative.UNKNOWN_TYPE);	  return    registry.isLocal()?    getReferencedType()    :    this;    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
111	[BUG]  [BUGGY]  return  enclosing.isReferencedType()?  getReferencedType()  :  this;  [CE]  cannot  find  symbol  [FE]              AssertionFailedError    [CONTEXT]      boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);  finishPropertyContinuations();    [BUGGY]  return  enclosing.isReferencedType()?  getReferencedType()  :  this;  [BUGGY]    getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  if  (isResolved())  {  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	197	198	3	replace	return  enclosing.isReferencedType()?  getReferencedType()  :  this;	  return    registry.isReferencedType()?    getReferencedType()    :    this;    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
112	[BUG]  [BUGGY]  return  this.registry.isReferencedType()?  getReferencedType()  :  this;  [CE]  cannot  find  symbol  [FE]                AssertionFailedError    [CONTEXT]      boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);  finishPropertyContinuations();    [BUGGY]  return  this.registry.isReferencedType()?  getReferencedType()  :  this;  [BUGGY]    getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  if  (isResolved())  {  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	197	198	3	replace	return  this.registry.isReferencedType()?  getReferencedType()  :  this;	  return    registry.isReferencedType()?    getReferencedType()    :    this;    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
113	[BUG]  [BUGGY]  return  t.isReferencedType()?  getReferencedType()  :  this;  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError    [CONTEXT]      boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);  finishPropertyContinuations();    [BUGGY]  return  t.isReferencedType()?  getReferencedType()  :  this;  [BUGGY]    getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  if  (isResolved())  {  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	197	198	3	replace	return  t.isReferencedType()?  getReferencedType()  :  this;	  return    registry.isReferencedType()?    getReferencedType()    :    this;    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
114	[BUG]  [BUGGY]  return  this.registry.isStatic()?  getReferencedType()  :  this;  [CE]  cannot  find  symbol  [FE]            AssertionFailedError    [CONTEXT]      boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);  finishPropertyContinuations();    [BUGGY]  return  this.registry.isStatic()?  getReferencedType()  :  this;  [BUGGY]    getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  if  (isResolved())  {  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	197	198	3	replace	return  this.registry.isStatic()?  getReferencedType()  :  this;	  return    registry.isStatic()?    getReferencedType()    :    this;    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
115	[BUG]  [BUGGY]  return  propertyNode.isStatic()?  getReferencedType()  :  this;  [CE]  cannot  find  symbol  propertyNode  [FE]              AssertionFailedError    [CONTEXT]      boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);  finishPropertyContinuations();    [BUGGY]  return  propertyNode.isStatic()?  getReferencedType()  :  this;  [BUGGY]    getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  if  (isResolved())  {  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	197	198	3	replace	return  propertyNode.isStatic()?  getReferencedType()  :  this;	  return    registry.isStatic()?    getReferencedType()    :    this;    	non-compiled	[CE]  cannot  find  symbol  propertyNode	14	None	replace
116	[BUG]  [BUGGY]  return  registry.isStatic()?  getReferencedType()  :  REFERENCE_TYPE;  [CE]  cannot  find  symbol  [FE]                AssertionFailedError    [CONTEXT]      boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);  finishPropertyContinuations();    [BUGGY]  return  registry.isStatic()?  getReferencedType()  :  REFERENCE_TYPE;  [BUGGY]    getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  if  (isResolved())  {  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	197	198	3	replace	return  registry.isStatic()?  getReferencedType()  :  REFERENCE_TYPE;	  return    registry.isStatic()?    getReferencedType()    :    this;    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
117	[BUG]  [BUGGY]  return  type.isStatic()?  getReferencedType()  :  this;  [CE]  cannot  find  symbol  type  [FE]                  AssertionFailedError    [CONTEXT]      boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);  finishPropertyContinuations();    [BUGGY]  return  type.isStatic()?  getReferencedType()  :  this;  [BUGGY]    getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  if  (isResolved())  {  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	197	198	3	replace	return  type.isStatic()?  getReferencedType()  :  this;	  return    registry.isStatic()?    getReferencedType()    :    this;    	non-compiled	[CE]  cannot  find  symbol  type	14	None	replace
118	[BUG]  [BUGGY]  return  enclosing.isConstructor()?  getReferencedType()  :  this;  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError    [CONTEXT]      boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);  finishPropertyContinuations();    [BUGGY]  return  enclosing.isConstructor()?  getReferencedType()  :  this;  [BUGGY]    getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  if  (isResolved())  {  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	197	198	3	replace	return  enclosing.isConstructor()?  getReferencedType()  :  this;	  return    registry.isConstructor()?    getReferencedType()    :    this;    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
119	[BUG]  [BUGGY]  return  this.registry.isConstructor()?  getReferencedType()  :  this;  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError    [CONTEXT]      boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);  finishPropertyContinuations();    [BUGGY]  return  this.registry.isConstructor()?  getReferencedType()  :  this;  [BUGGY]    getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  if  (isResolved())  {  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	197	198	3	replace	return  this.registry.isConstructor()?  getReferencedType()  :  this;	  return    registry.isConstructor()?    getReferencedType()    :    this;    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
120	[BUG]  [BUGGY]  timeout  [FE]                    AssertionFailedError    [CONTEXT]      boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);  finishPropertyContinuations();    [BUGGY]  Preconditions.checkArgument(detectImplicitPrototypeCycle());  [BUGGY]    getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  if  (isResolved())  {  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	197	198	3	add	Preconditions.checkArgument(detectImplicitPrototypeCycle());	      timeout    	compilable	timeout	9	1	replace
121	[BUG]  [BUGGY]  Preconditions.checkArgument(detectImplicitPrototypeCycle());  timeout  [FE]                    AssertionFailedError    [CONTEXT]      boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);  finishPropertyContinuations();    [BUGGY]  Preconditions.checkArgument(detectImplicitPrototypeCycle());  [BUGGY]    getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  if  (isResolved())  {  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	197	198	3	replace	Preconditions.checkArgument(detectImplicitPrototypeCycle());	      timeout    	compilable	timeout	9	1	replace
122	[BUG]  [BUGGY]  Predicates.checkState(detectImplicitPrototypeCycle());  [CE]  cannot  find  symbol  Predicates  [FE]                      AssertionFailedError    [CONTEXT]      boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);  finishPropertyContinuations();    [BUGGY]  Predicates.checkState(detectImplicitPrototypeCycle());  [BUGGY]    getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  if  (isResolved())  {  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	197	198	3	replace	Predicates.checkState(detectImplicitPrototypeCycle());	      timeout    	non-compiled	[CE]  cannot  find  symbol  Predicates	9	None	replace
123	[BUG]  [BUGGY]  Predicates.checkState(detectImplicitPrototypeCycle());  handleTypeCycle(t);  [CE]  cannot  find  symbol  Predicates  [FE]                        AssertionFailedError    [CONTEXT]      boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);  finishPropertyContinuations();    [BUGGY]  Predicates.checkState(detectImplicitPrototypeCycle());  handleTypeCycle(t);  [BUGGY]    getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  if  (isResolved())  {  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	197	198	3	replace	Predicates.checkState(detectImplicitPrototypeCycle());  handleTypeCycle(t);	      timeout    	non-compiled	[CE]  cannot  find  symbol  Predicates	9	None	replace
124	[BUG]  [BUGGY]  t.report(JSError.make(t,  propertyNode,  NON_GLOBAL_TYPE));  [CE]  cannot  find  symbol  propertyNode  [FE]                          AssertionFailedError    [CONTEXT]      boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);  finishPropertyContinuations();    [BUGGY]  t.report(JSError.make(t,  propertyNode,  NON_GLOBAL_TYPE));  [BUGGY]    getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  if  (isResolved())  {  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	197	198	3	replace	t.report(JSError.make(t,  propertyNode,  NON_GLOBAL_TYPE));	      timeout    	non-compiled	[CE]  cannot  find  symbol  propertyNode	9	None	replace
125	[BUG]  [BUGGY]  timeout  [FE]                            AssertionFailedError    [CONTEXT]      boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);  finishPropertyContinuations();    [BUGGY]  Preconditions.checkArgument(detectImplicitPrototypeCycle());  handleTypeCycle(t);  [BUGGY]    getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  if  (isResolved())  {  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	197	198	3	add	Preconditions.checkArgument(detectImplicitPrototypeCycle());  handleTypeCycle(t);	      timeout    	compilable	timeout	9	1	replace
126	[BUG]  [BUGGY]  Preconditions.checkArgument(detectImplicitPrototypeCycle());  handleTypeCycle(t);  timeout  [FE]                            AssertionFailedError    [CONTEXT]      boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);  finishPropertyContinuations();    [BUGGY]  Preconditions.checkArgument(detectImplicitPrototypeCycle());  handleTypeCycle(t);  [BUGGY]    getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  if  (isResolved())  {  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	197	198	3	replace	Preconditions.checkArgument(detectImplicitPrototypeCycle());  handleTypeCycle(t);	      timeout    	compilable	timeout	9	1	replace
127	[BUG]  [BUGGY]  Predicate  validator  =  getValueForType(t,  enclosing);  [CE]  cannot  find  symbol  [FE]                              AssertionFailedError    [CONTEXT]      boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);  finishPropertyContinuations();    [BUGGY]  Predicate  validator  =  getValueForType(t,  enclosing);  [BUGGY]    getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  if  (isResolved())  {  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	197	198	3	replace	Predicate  validator  =  getValueForType(t,  enclosing);	      timeout    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
128	[BUG]  [BUGGY]  t.report(JSError.make(t,  propertyNode,  type,  forAnnotations));  [CE]  cannot  find  symbol  propertyNode  [FE]                                AssertionFailedError    [CONTEXT]      boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);  finishPropertyContinuations();    [BUGGY]  t.report(JSError.make(t,  propertyNode,  type,  forAnnotations));  [BUGGY]    getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  if  (isResolved())  {  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	197	198	3	replace	t.report(JSError.make(t,  propertyNode,  type,  forAnnotations));	      timeout    	non-compiled	[CE]  cannot  find  symbol  propertyNode	9	None	replace
129	[BUG]  [BUGGY]  return  t.isReferenced()?  getReferencedType()  :  this;  [CE]  cannot  find  symbol  [FE]          AssertionFailedError    [CONTEXT]      boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);  finishPropertyContinuations();    [BUGGY]  return  t.isReferenced()?  getReferencedType()  :  this;  [BUGGY]    getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  if  (isResolved())  {  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	197	198	3	replace	return  t.isReferenced()?  getReferencedType()  :  this;	  return    registry.isReferenced()?    getReferencedType()    :    this;    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
130	[BUG]  [BUGGY]  return  this.registry.isReferenced()?  getReferencedType()  :  null;  [CE]  cannot  find  symbol  [FE]            AssertionFailedError    [CONTEXT]      boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);  finishPropertyContinuations();    [BUGGY]  return  this.registry.isReferenced()?  getReferencedType()  :  null;  [BUGGY]    getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  if  (isResolved())  {  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	197	198	3	replace	return  this.registry.isReferenced()?  getReferencedType()  :  null;	  return    registry.isReferenced()?    getReferencedType()    :    this;    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
131	[BUG]  [BUGGY]  return  t.isInferred()?  getReferencedType()  :  this;  [CE]  cannot  find  symbol  [FE]        AssertionFailedError    [CONTEXT]      boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);  finishPropertyContinuations();    [BUGGY]  return  t.isInferred()?  getReferencedType()  :  this;  [BUGGY]    getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  if  (isResolved())  {  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	197	198	3	replace	return  t.isInferred()?  getReferencedType()  :  this;	  return    registry.isInferred()?    getReferencedType()    :    this;    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
132	[BUG]  [BUGGY]  return  this.registry.isReferencedType()?  getReferencedType()  :  null;  [CE]  cannot  find  symbol  [FE]              AssertionFailedError    [CONTEXT]      boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);  finishPropertyContinuations();    [BUGGY]  return  this.registry.isReferencedType()?  getReferencedType()  :  null;  [BUGGY]    getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  if  (isResolved())  {  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	197	198	3	replace	return  this.registry.isReferencedType()?  getReferencedType()  :  null;	  return    registry.isReferencedType()?    getReferencedType()    :    this;    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
133	[BUG]  [BUGGY]  return  propertyNode.isReferencedType()?  getReferencedType()  :  this;  [CE]  cannot  find  symbol  propertyNode  [FE]                AssertionFailedError    [CONTEXT]      boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);  finishPropertyContinuations();    [BUGGY]  return  propertyNode.isReferencedType()?  getReferencedType()  :  this;  [BUGGY]    getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  if  (isResolved())  {  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	197	198	3	replace	return  propertyNode.isReferencedType()?  getReferencedType()  :  this;	  return    registry.isReferencedType()?    getReferencedType()    :    this;    	non-compiled	[CE]  cannot  find  symbol  propertyNode	5	None	replace
134	[BUG]  [BUGGY]  return  registry.isLastGeneration()?  getReferencedType()  :  null;  if(registry.isLastGeneration()?  getReferencedType()  :  null)  {  return  registry.isLastGeneration()?  getReferencedType()  :  null;  }  [CE]  incompatible  types  [FE]        AssertionFailedError    [CONTEXT]      boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);  finishPropertyContinuations();    [BUGGY]  return  registry.isLastGeneration()?  getReferencedType()  :  null;  if(registry.isLastGeneration()?  getReferencedType()  :  null)  {  return  registry.isLastGeneration()?  getReferencedType()  :  null;  }  [BUGGY]    getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  if  (isResolved())  {  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	197	198	3	replace	return    registry.isLastGeneration()?    getReferencedType()    :    null;    if(registry.isLastGeneration()?  getReferencedType()  :  null)  {  return  registry.isLastGeneration()?  getReferencedType()  :  null;  }	  timeout    	non-compiled	[CE]  incompatible  types	1	None	add
135	[BUG]  [BUGGY]  return  registry.isLastGeneration()?  getReferencedType()  :  null;  if(registry.isLastGeneration())  {  return  getReferencedType()  :  null;  }  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]      boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);  finishPropertyContinuations();    [BUGGY]  return  registry.isLastGeneration()?  getReferencedType()  :  null;  if(registry.isLastGeneration())  {  return  getReferencedType()  :  null;  }  [BUGGY]    getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  if  (isResolved())  {  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	197	198	3	replace	return    registry.isLastGeneration()?    getReferencedType()    :    null;    if(registry.isLastGeneration())  {  return  getReferencedType()  :  null;  }	  timeout    	non-compiled	[CE]  ';'  expected	1	None	add
136	[BUG]  [BUGGY]  return  registry.isLastGeneration()?  getReferencedType()  :  null;  if(registry.isLastGeneration())  {  return  registry.isLastGeneration()?  getReferencedType()  :  null;  }  [CE]  unreachable  statement  [FE]            AssertionFailedError    [CONTEXT]      boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);  finishPropertyContinuations();    [BUGGY]  return  registry.isLastGeneration()?  getReferencedType()  :  null;  if(registry.isLastGeneration())  {  return  registry.isLastGeneration()?  getReferencedType()  :  null;  }  [BUGGY]    getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  if  (isResolved())  {  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	197	198	3	replace	return    registry.isLastGeneration()?    getReferencedType()    :    null;    if(registry.isLastGeneration())  {  return  registry.isLastGeneration()?  getReferencedType()  :  null;  }	  timeout    	non-compiled	[CE]  unreachable  statement	1	None	add
137	[BUG]  [BUGGY]  return  registry.isLastGeneration()?  getReferencedType()  :  null;  if(registry.isLastGeneration()?  getReferencedType()  :  null)  {  return  this;  }  [CE]  incompatible  types  [FE]              AssertionFailedError    [CONTEXT]      boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);  finishPropertyContinuations();    [BUGGY]  return  registry.isLastGeneration()?  getReferencedType()  :  null;  if(registry.isLastGeneration()?  getReferencedType()  :  null)  {  return  this;  }  [BUGGY]    getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  if  (isResolved())  {  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	197	198	3	replace	return    registry.isLastGeneration()?    getReferencedType()    :    null;    if(registry.isLastGeneration()?  getReferencedType()  :  null)  {  return  this;  }	  timeout    	non-compiled	[CE]  incompatible  types	1	None	add
138	[BUG]  [BUGGY]  return  registry.isLastGeneration()?  getReferencedType()  :  null;  if(registry.isLastGeneration())  {  getReferencedType()  :  null;  }  [CE]  ';'  expected  [FE]                AssertionFailedError    [CONTEXT]      boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);  finishPropertyContinuations();    [BUGGY]  return  registry.isLastGeneration()?  getReferencedType()  :  null;  if(registry.isLastGeneration())  {  getReferencedType()  :  null;  }  [BUGGY]    getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  if  (isResolved())  {  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	197	198	3	replace	return    registry.isLastGeneration()?    getReferencedType()    :    null;    if(registry.isLastGeneration())  {  getReferencedType()  :  null;  }	  timeout    	non-compiled	[CE]  ';'  expected	1	None	add
139	[BUG]  [BUGGY]  return  t.isFirstGeneration()?  getReferencedType()  :  this;  [CE]  cannot  find  symbol  [FE]          AssertionFailedError    [CONTEXT]      boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);  finishPropertyContinuations();    [BUGGY]  return  t.isFirstGeneration()?  getReferencedType()  :  this;  [BUGGY]    getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  if  (isResolved())  {  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	197	198	3	replace	return  t.isFirstGeneration()?  getReferencedType()  :  this;	  return    registry.isFirstGeneration()?    getReferencedType()    :    this;    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
140	[BUG]  [BUGGY]  return  propertyNode.isFirstGeneration()?  getReferencedType()  :  this;  [CE]  cannot  find  symbol  propertyNode  [FE]            AssertionFailedError    [CONTEXT]      boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);  finishPropertyContinuations();    [BUGGY]  return  propertyNode.isFirstGeneration()?  getReferencedType()  :  this;  [BUGGY]    getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  if  (isResolved())  {  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	197	198	3	replace	return  propertyNode.isFirstGeneration()?  getReferencedType()  :  this;	  return    registry.isFirstGeneration()?    getReferencedType()    :    this;    	non-compiled	[CE]  cannot  find  symbol  propertyNode	3	None	replace
141	[BUG]  [BUGGY]  return  this.registry.isFirstGeneration()?  getReferencedType()  :  null;  [CE]  cannot  find  symbol  [FE]              AssertionFailedError    [CONTEXT]      boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);  finishPropertyContinuations();    [BUGGY]  return  this.registry.isFirstGeneration()?  getReferencedType()  :  null;  [BUGGY]    getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  if  (isResolved())  {  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	197	198	3	replace	return  this.registry.isFirstGeneration()?  getReferencedType()  :  null;	  return    registry.isFirstGeneration()?    getReferencedType()    :    this;    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
142	[BUG]  [BUGGY]  return  t.isInstanceType()?  getReferencedType()  :  this;  [CE]  cannot  find  symbol  [FE]          AssertionFailedError    [CONTEXT]      boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);  finishPropertyContinuations();    [BUGGY]  return  t.isInstanceType()?  getReferencedType()  :  this;  [BUGGY]    getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  if  (isResolved())  {  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	197	198	3	replace	return  t.isInstanceType()?  getReferencedType()  :  this;	  return    registry.isInstanceType()?    getReferencedType()    :    this;    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
143	[BUG]  [BUGGY]  return  propertyNode.isInstanceType()?  getReferencedType()  :  this;  [CE]  cannot  find  symbol  propertyNode  [FE]            AssertionFailedError    [CONTEXT]      boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);  finishPropertyContinuations();    [BUGGY]  return  propertyNode.isInstanceType()?  getReferencedType()  :  this;  [BUGGY]    getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  if  (isResolved())  {  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	197	198	3	replace	return  propertyNode.isInstanceType()?  getReferencedType()  :  this;	  return    registry.isInstanceType()?    getReferencedType()    :    this;    	non-compiled	[CE]  cannot  find  symbol  propertyNode	13	None	replace
144	[BUG]  [BUGGY]  return  getReferencedType()?  registry.isInstanceType()  :  this;  [CE]  incompatible  types  [FE]              AssertionFailedError    [CONTEXT]      boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);  finishPropertyContinuations();    [BUGGY]  return  getReferencedType()?  registry.isInstanceType()  :  this;  [BUGGY]    getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  if  (isResolved())  {  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	197	198	3	replace	return  getReferencedType()?  registry.isInstanceType()  :  this;	  return    registry.isInstanceType()?    getReferencedType()    :    this;    	non-compiled	[CE]  incompatible  types	13	None	replace
145	[BUG]  [BUGGY]  return  propertyNode.isLastGeneration()?  getPropertyType(propertyName):  this;  [CE]  cannot  find  symbol  propertyNode  [FE]                AssertionFailedError    [CONTEXT]      boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);  finishPropertyContinuations();    [BUGGY]  return  propertyNode.isLastGeneration()?  getPropertyType(propertyName):  this;  [BUGGY]    getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  if  (isResolved())  {  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	197	198	3	replace	return  propertyNode.isLastGeneration()?  getPropertyType(propertyName):  this;	  return    registry.isLastGeneration()?    getPropertyType(propertyName):    this;    	non-compiled	[CE]  cannot  find  symbol  propertyNode	6	None	replace
146	[BUG]  [BUGGY]  return  t.isConstructor()?  getReferencedType()  :  this;  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError    [CONTEXT]      boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);  finishPropertyContinuations();    [BUGGY]  return  t.isConstructor()?  getReferencedType()  :  this;  [BUGGY]    getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  if  (isResolved())  {  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	197	198	3	replace	return  t.isConstructor()?  getReferencedType()  :  this;	  return    registry.isConstructor()?    getReferencedType()    :    this;    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
147	[BUG]  [BUGGY]  return  propertyNode.isConstructor()?  getReferencedType()  :  this;  [CE]  cannot  find  symbol  propertyNode  [FE]                    AssertionFailedError    [CONTEXT]      boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);  finishPropertyContinuations();    [BUGGY]  return  propertyNode.isConstructor()?  getReferencedType()  :  this;  [BUGGY]    getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  if  (isResolved())  {  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	197	198	3	replace	return  propertyNode.isConstructor()?  getReferencedType()  :  this;	  return    registry.isConstructor()?    getReferencedType()    :    this;    	non-compiled	[CE]  cannot  find  symbol  propertyNode	7	None	replace
148	[BUG]  [BUGGY]  return  this.registry.isConstructor()?  getReferencedType()  :  null;  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError    [CONTEXT]      boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);  finishPropertyContinuations();    [BUGGY]  return  this.registry.isConstructor()?  getReferencedType()  :  null;  [BUGGY]    getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  if  (isResolved())  {  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	197	198	3	replace	return  this.registry.isConstructor()?  getReferencedType()  :  null;	  return    registry.isConstructor()?    getReferencedType()    :    this;    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
149	[BUG]  [BUGGY]  return  t.isStatic()?  getReferencedType()  :  this;  [CE]  cannot  find  symbol  [FE]            AssertionFailedError    [CONTEXT]      boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);  finishPropertyContinuations();    [BUGGY]  return  t.isStatic()?  getReferencedType()  :  this;  [BUGGY]    getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  if  (isResolved())  {  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	197	198	3	replace	return  t.isStatic()?  getReferencedType()  :  this;	  return    registry.isStatic()?    getReferencedType()    :    this;    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
150	[BUG]  [BUGGY]  return  this.registry.isStatic()?  getReferencedType()  :  null;  [CE]  cannot  find  symbol  [FE]              AssertionFailedError    [CONTEXT]      boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);  finishPropertyContinuations();    [BUGGY]  return  this.registry.isStatic()?  getReferencedType()  :  null;  [BUGGY]    getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  if  (isResolved())  {  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	197	198	3	replace	return  this.registry.isStatic()?  getReferencedType()  :  null;	  return    registry.isStatic()?    getReferencedType()    :    this;    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
151	[BUG]  [BUGGY]  return  type.isLocal()?  getReferencedType()  :  this;  [CE]  cannot  find  symbol  type  [FE]        AssertionFailedError    [CONTEXT]      boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);  finishPropertyContinuations();    [BUGGY]  return  type.isLocal()?  getReferencedType()  :  this;  [BUGGY]    getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  if  (isResolved())  {  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	197	198	3	replace	return  type.isLocal()?  getReferencedType()  :  this;	  return    registry.isLocal()?    getReferencedType()    :    this;    	non-compiled	[CE]  cannot  find  symbol  type	12	None	replace
152	[BUG]  [BUGGY]  return  t.isLocal()?  getReferencedType()  :  this;  [CE]  cannot  find  symbol  [FE]          AssertionFailedError    [CONTEXT]      boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);  finishPropertyContinuations();    [BUGGY]  return  t.isLocal()?  getReferencedType()  :  this;  [BUGGY]    getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  if  (isResolved())  {  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	197	198	3	replace	return  t.isLocal()?  getReferencedType()  :  this;	  return    registry.isLocal()?    getReferencedType()    :    this;    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
153	[BUG]  [BUGGY]  return  propertyNode.isLocal()?  getReferencedType()  :  this;  [CE]  cannot  find  symbol  propertyNode  [FE]            AssertionFailedError    [CONTEXT]      boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);  finishPropertyContinuations();    [BUGGY]  return  propertyNode.isLocal()?  getReferencedType()  :  this;  [BUGGY]    getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  if  (isResolved())  {  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	197	198	3	replace	return  propertyNode.isLocal()?  getReferencedType()  :  this;	  return    registry.isLocal()?    getReferencedType()    :    this;    	non-compiled	[CE]  cannot  find  symbol  propertyNode	12	None	replace
154	[BUG]  [BUGGY]  return  this.registry.isLocal()?  getReferencedType()  :  null;  [CE]  cannot  find  symbol  [FE]              AssertionFailedError    [CONTEXT]      boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);  finishPropertyContinuations();    [BUGGY]  return  this.registry.isLocal()?  getReferencedType()  :  null;  [BUGGY]    getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  if  (isResolved())  {  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	197	198	3	replace	return  this.registry.isLocal()?  getReferencedType()  :  null;	  return    registry.isLocal()?    getReferencedType()    :    this;    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
155	[BUG]  [BUGGY]  return  this.registry.isLocal()?  getReferencedType()  :  this;  [CE]  cannot  find  symbol  [FE]                AssertionFailedError    [CONTEXT]      boolean  resolved  =  resolveViaRegistry(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);  finishPropertyContinuations();    [BUGGY]  return  this.registry.isLocal()?  getReferencedType()  :  this;  [BUGGY]    getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  if  (detectImplicitPrototypeCycle())  {  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  if  (isResolved())  {  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.20701966780270628	197	198	3	replace	return  this.registry.isLocal()?  getReferencedType()  :  this;	  return    registry.isLocal()?    getReferencedType()    :    this;    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
