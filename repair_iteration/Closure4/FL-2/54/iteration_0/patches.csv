bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(isImplicitPrototypeCycle())  {  [CE]  cannot  find  symbol  [FE]    AssertionFailedError  [CONTEXT]  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);  finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  [BUGGY]  if(isImplicitPrototypeCycle())  {  [BUGGY]  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  if  (isResolved())  {  finishPropertyContinuations();  }  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.0	202	202	1	replace	if(isImplicitPrototypeCycle())  {	if  (detectImplicitPrototypeCycle())  {  	non-compiled	[CE]  cannot  find  symbol	107	None	replace
2	[BUG]  [BUGGY]  timeout  [FE]      AssertionFailedError  [CONTEXT]  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);  finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  [BUGGY]  if(isResolved())  {  [BUGGY]  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  if  (isResolved())  {  finishPropertyContinuations();  }  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.0	202	202	1	add	if(isResolved())  {	if  (detectImplicitPrototypeCycle())  {  	compilable	timeout	107	1	replace
3	[BUG]  [BUGGY]  if(isResolved())  {  timeout  [FE]      AssertionFailedError  [CONTEXT]  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);  finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  [BUGGY]  if(isResolved())  {  [BUGGY]  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  if  (isResolved())  {  finishPropertyContinuations();  }  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.0	202	202	1	replace	if(isResolved())  {	if  (detectImplicitPrototypeCycle())  {  	compilable	timeout	107	1	replace
4	[BUG]  [BUGGY]  timeout  [FE]        AssertionFailedError  [CONTEXT]  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);  finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  [BUGGY]  if(!detectImplicitPrototypeCycle())  {  [BUGGY]  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  if  (isResolved())  {  finishPropertyContinuations();  }  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.0	202	202	1	add	if(!detectImplicitPrototypeCycle())  {	if  (detectImplicitPrototypeCycle())  {  	compilable	timeout	107	1	replace
5	[BUG]  [BUGGY]  if(!detectImplicitPrototypeCycle())  {  timeout  [FE]        AssertionFailedError  [CONTEXT]  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);  finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  [BUGGY]  if(!detectImplicitPrototypeCycle())  {  [BUGGY]  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  if  (isResolved())  {  finishPropertyContinuations();  }  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.0	202	202	1	replace	if(!detectImplicitPrototypeCycle())  {	if  (detectImplicitPrototypeCycle())  {  	compilable	timeout	107	1	replace
6	[BUG]  [BUGGY]  timeout  [FE]          AssertionFailedError  [CONTEXT]  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);  finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  [BUGGY]  if(validator!=  null  &&  detectImplicitPrototypeCycle())  {  [BUGGY]  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  if  (isResolved())  {  finishPropertyContinuations();  }  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.0	202	202	1	add	if(validator!=  null  &&  detectImplicitPrototypeCycle())  {	if  (detectImplicitPrototypeCycle())  {  	compilable	timeout	107	1	replace
7	[BUG]  [BUGGY]  if(validator!=  null  &&  detectImplicitPrototypeCycle())  {  timeout  [FE]          AssertionFailedError  [CONTEXT]  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);  finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  [BUGGY]  if(validator!=  null  &&  detectImplicitPrototypeCycle())  {  [BUGGY]  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  if  (isResolved())  {  finishPropertyContinuations();  }  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.0	202	202	1	replace	if(validator!=  null  &&  detectImplicitPrototypeCycle())  {	if  (detectImplicitPrototypeCycle())  {  	compilable	timeout	107	1	replace
8	[BUG]  [BUGGY]  timeout  [FE]            AssertionFailedError  [CONTEXT]  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);  finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  [BUGGY]  if(detectImplicitPrototypeCycle()  &&  registry.isLastGeneration())  {  [BUGGY]  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  if  (isResolved())  {  finishPropertyContinuations();  }  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.0	202	202	1	add	if(detectImplicitPrototypeCycle()  &&  registry.isLastGeneration())  {	if  (detectImplicitPrototypeCycle())  {  	compilable	timeout	107	1	replace
9	[BUG]  [BUGGY]  if(detectImplicitPrototypeCycle()  &&  registry.isLastGeneration())  {  timeout  [FE]            AssertionFailedError  [CONTEXT]  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);  finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  [BUGGY]  if(detectImplicitPrototypeCycle()  &&  registry.isLastGeneration())  {  [BUGGY]  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  if  (isResolved())  {  finishPropertyContinuations();  }  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.0	202	202	1	replace	if(detectImplicitPrototypeCycle()  &&  registry.isLastGeneration())  {	if  (detectImplicitPrototypeCycle())  {  	compilable	timeout	107	1	replace
10	[BUG]  [BUGGY]  if(detectImplicitPrototypeCycle()  ||  handleTypeCycle(t))  {  [CE]  'void'  type  not  allowed  here  [FE]              AssertionFailedError  [CONTEXT]  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);  finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  [BUGGY]  if(detectImplicitPrototypeCycle()  ||  handleTypeCycle(t))  {  [BUGGY]  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  if  (isResolved())  {  finishPropertyContinuations();  }  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.0	202	202	1	replace	if(detectImplicitPrototypeCycle()  ||  handleTypeCycle(t))  {	if  (detectImplicitPrototypeCycle())  {  	non-compiled	[CE]  'void'  type  not  allowed  here	107	None	replace
11	[BUG]  [BUGGY]  timeout  [FE]                AssertionFailedError  [CONTEXT]  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);  finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  [BUGGY]  if(validator  ==  null  &&  detectImplicitPrototypeCycle())  {  [BUGGY]  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  if  (isResolved())  {  finishPropertyContinuations();  }  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.0	202	202	1	add	if(validator  ==  null  &&  detectImplicitPrototypeCycle())  {	if  (detectImplicitPrototypeCycle())  {  	compilable	timeout	107	1	replace
12	[BUG]  [BUGGY]  if(validator  ==  null  &&  detectImplicitPrototypeCycle())  {  timeout  [FE]                AssertionFailedError  [CONTEXT]  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);  finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  [BUGGY]  if(validator  ==  null  &&  detectImplicitPrototypeCycle())  {  [BUGGY]  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  if  (isResolved())  {  finishPropertyContinuations();  }  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.0	202	202	1	replace	if(validator  ==  null  &&  detectImplicitPrototypeCycle())  {	if  (detectImplicitPrototypeCycle())  {  	compilable	timeout	107	1	replace
13	[BUG]  [BUGGY]  if(!validator.isConstructor()  &&  detectImplicitPrototypeCycle())  {  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError  [CONTEXT]  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);  finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  [BUGGY]  if(!validator.isConstructor()  &&  detectImplicitPrototypeCycle())  {  [BUGGY]  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  if  (isResolved())  {  finishPropertyContinuations();  }  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.0	202	202	1	replace	if(!validator.isConstructor()  &&  detectImplicitPrototypeCycle())  {	if  (detectImplicitPrototypeCycle())  {  	non-compiled	[CE]  cannot  find  symbol	107	None	replace
14	[BUG]  [BUGGY]  timeout  [FE]                    AssertionFailedError  [CONTEXT]  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);  finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  [BUGGY]  if(isConstructor()  ||  detectImplicitPrototypeCycle())  {  [BUGGY]  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  if  (isResolved())  {  finishPropertyContinuations();  }  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.0	202	202	1	add	if(isConstructor()  ||  detectImplicitPrototypeCycle())  {	if  (detectImplicitPrototypeCycle())  {  	compilable	timeout	107	1	replace
15	[BUG]  [BUGGY]  if(isConstructor()  ||  detectImplicitPrototypeCycle())  {  timeout  [FE]                    AssertionFailedError  [CONTEXT]  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);  finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  [BUGGY]  if(isConstructor()  ||  detectImplicitPrototypeCycle())  {  [BUGGY]  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  if  (isResolved())  {  finishPropertyContinuations();  }  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.0	202	202	1	replace	if(isConstructor()  ||  detectImplicitPrototypeCycle())  {	if  (detectImplicitPrototypeCycle())  {  	compilable	timeout	107	1	replace
16	[BUG]  [BUGGY]  if(!validator.detectImplicitPrototypeCycle())  {  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError  [CONTEXT]  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);  finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  [BUGGY]  if(!validator.detectImplicitPrototypeCycle())  {  [BUGGY]  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  if  (isResolved())  {  finishPropertyContinuations();  }  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.0	202	202	1	replace	if(!validator.detectImplicitPrototypeCycle())  {	if  (detectImplicitPrototypeCycle())  {  	non-compiled	[CE]  cannot  find  symbol	107	None	replace
17	[BUG]  [BUGGY]  timeout  [FE]                        AssertionFailedError  [CONTEXT]  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);  finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  [BUGGY]  if(isConstructor()  &&  detectImplicitPrototypeCycle())  {  [BUGGY]  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  if  (isResolved())  {  finishPropertyContinuations();  }  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.0	202	202	1	add	if(isConstructor()  &&  detectImplicitPrototypeCycle())  {	if  (detectImplicitPrototypeCycle())  {  	compilable	timeout	107	1	replace
18	[BUG]  [BUGGY]  if(isConstructor()  &&  detectImplicitPrototypeCycle())  {  timeout  [FE]                        AssertionFailedError  [CONTEXT]  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);  finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  [BUGGY]  if(isConstructor()  &&  detectImplicitPrototypeCycle())  {  [BUGGY]  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  if  (isResolved())  {  finishPropertyContinuations();  }  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.0	202	202	1	replace	if(isConstructor()  &&  detectImplicitPrototypeCycle())  {	if  (detectImplicitPrototypeCycle())  {  	compilable	timeout	107	1	replace
19	[BUG]  [BUGGY]  timeout  [FE]                          AssertionFailedError  [CONTEXT]  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);  finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  [BUGGY]  if(detectImplicitPrototypeCycle()  ||  registry.isLastGeneration())  {  [BUGGY]  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  if  (isResolved())  {  finishPropertyContinuations();  }  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.0	202	202	1	add	if(detectImplicitPrototypeCycle()  ||  registry.isLastGeneration())  {	if  (detectImplicitPrototypeCycle())  {  	compilable	timeout	107	1	replace
20	[BUG]  [BUGGY]  if(detectImplicitPrototypeCycle()  ||  registry.isLastGeneration())  {  timeout  [FE]                          AssertionFailedError  [CONTEXT]  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);  finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  [BUGGY]  if(detectImplicitPrototypeCycle()  ||  registry.isLastGeneration())  {  [BUGGY]  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  if  (isResolved())  {  finishPropertyContinuations();  }  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.0	202	202	1	replace	if(detectImplicitPrototypeCycle()  ||  registry.isLastGeneration())  {	if  (detectImplicitPrototypeCycle())  {  	compilable	timeout	107	1	replace
21	[BUG]  [BUGGY]  if(!validator.isImplicitPrototypeCycle())  {  [CE]  cannot  find  symbol  [FE]                            AssertionFailedError  [CONTEXT]  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);  finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  [BUGGY]  if(!validator.isImplicitPrototypeCycle())  {  [BUGGY]  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  if  (isResolved())  {  finishPropertyContinuations();  }  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.0	202	202	1	replace	if(!validator.isImplicitPrototypeCycle())  {	if  (detectImplicitPrototypeCycle())  {  	non-compiled	[CE]  cannot  find  symbol	107	None	replace
22	[BUG]  [BUGGY]  timeout  [FE]                              AssertionFailedError  [CONTEXT]  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);  finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  [BUGGY]  if(detectImplicitPrototypeCycle()  ||  isResolved())  {  [BUGGY]  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  if  (isResolved())  {  finishPropertyContinuations();  }  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.0	202	202	1	add	if(detectImplicitPrototypeCycle()  ||  isResolved())  {	if  (detectImplicitPrototypeCycle())  {  	compilable	timeout	107	1	replace
23	[BUG]  [BUGGY]  if(detectImplicitPrototypeCycle()  ||  isResolved())  {  timeout  [FE]                              AssertionFailedError  [CONTEXT]  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);  finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  [BUGGY]  if(detectImplicitPrototypeCycle()  ||  isResolved())  {  [BUGGY]  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  if  (isResolved())  {  finishPropertyContinuations();  }  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.0	202	202	1	replace	if(detectImplicitPrototypeCycle()  ||  isResolved())  {	if  (detectImplicitPrototypeCycle())  {  	compilable	timeout	107	1	replace
24	[BUG]  [BUGGY]  if(detectImplicitPrototypeCycle()  &&  handleTypeCycle(t))  {  [timeout]  [FE]                                AssertionFailedError  [CONTEXT]  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);  finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  [BUGGY]  if(detectImplicitPrototypeCycle()  &&  handleTypeCycle(t))  {  [BUGGY]  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  if  (isResolved())  {  finishPropertyContinuations();  }  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.0	202	202	1	replace	if(detectImplicitPrototypeCycle()  &&  handleTypeCycle(t))  {	if  (detectImplicitPrototypeCycle())  {  	non-compiled	[timeout]	107	None	replace
25	[BUG]  [BUGGY]  if(validator!=  null  &&  resolveImplicitPrototypeCycle())  {  [timeout]  [FE]                                  AssertionFailedError  [CONTEXT]  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);  finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  [BUGGY]  if(validator!=  null  &&  resolveImplicitPrototypeCycle())  {  [BUGGY]  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  if  (isResolved())  {  finishPropertyContinuations();  }  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.0	202	202	1	replace	if(validator!=  null  &&  resolveImplicitPrototypeCycle())  {	if  (detectImplicitPrototypeCycle())  {  	non-compiled	[timeout]	107	None	replace
26	[BUG]  [BUGGY]  if(detectImplicitPrototypeCycle()  &&  isResolved)  {  [CE]  cannot  find  symbol  isResolved  [FE]                                    AssertionFailedError  [CONTEXT]  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);  finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  [BUGGY]  if(detectImplicitPrototypeCycle()  &&  isResolved)  {  [BUGGY]  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  if  (isResolved())  {  finishPropertyContinuations();  }  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.0	202	202	1	replace	if(detectImplicitPrototypeCycle()  &&  isResolved)  {	if  (detectImplicitPrototypeCycle())  {  	non-compiled	[CE]  cannot  find  symbol  isResolved	107	None	replace
27	[BUG]  [BUGGY]  timeout  [FE]                                      AssertionFailedError  [CONTEXT]  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);  finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  [BUGGY]  if(detectImplicitPrototypeCycle()  &&  getReferencedType()!=  null)  {  [BUGGY]  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  if  (isResolved())  {  finishPropertyContinuations();  }  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.0	202	202	1	add	if(detectImplicitPrototypeCycle()  &&  getReferencedType()!=  null)  {	if  (detectImplicitPrototypeCycle())  {  	compilable	timeout	107	1	replace
28	[BUG]  [BUGGY]  if(detectImplicitPrototypeCycle()  &&  getReferencedType()!=  null)  {  timeout  [FE]                                      AssertionFailedError  [CONTEXT]  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);  finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  [BUGGY]  if(detectImplicitPrototypeCycle()  &&  getReferencedType()!=  null)  {  [BUGGY]  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  if  (isResolved())  {  finishPropertyContinuations();  }  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.0	202	202	1	replace	if(detectImplicitPrototypeCycle()  &&  getReferencedType()!=  null)  {	if  (detectImplicitPrototypeCycle())  {  	compilable	timeout	107	1	replace
29	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError  [CONTEXT]  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);  finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  [BUGGY]  if  (resolved)  {  [BUGGY]  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  if  (isResolved())  {  finishPropertyContinuations();  }  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.0	202	202	1	add	if  (resolved)  {	if  (detectImplicitPrototypeCycle())  {  	compilable	  [FE]  AssertionFailedError  	107	66	replace
30	[BUG]  [BUGGY]  if  (resolved)  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError  [CONTEXT]  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);  finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  [BUGGY]  if  (resolved)  {  [BUGGY]  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  if  (isResolved())  {  finishPropertyContinuations();  }  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.0	202	202	1	replace	if  (resolved)  {	if  (detectImplicitPrototypeCycle())  {  	compilable	  [FE]  AssertionFailedError  	107	66	replace
31	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError  [CONTEXT]  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);  finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  [BUGGY]  if  (detectInheritanceCycle())  {  [BUGGY]  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  if  (isResolved())  {  finishPropertyContinuations();  }  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.0	202	202	1	add	  if  (detectInheritanceCycle())  {  	if  (detectImplicitPrototypeCycle())  {  	compilable	  [FE]  AssertionFailedError  	107	66	replace
32	[BUG]  [BUGGY]  if  (detectInheritanceCycle())  {    [FE]  AssertionFailedError  [FE]      AssertionFailedError  [CONTEXT]  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);  finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  [BUGGY]  if  (detectInheritanceCycle())  {  [BUGGY]  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  if  (isResolved())  {  finishPropertyContinuations();  }  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.0	202	202	1	replace	  if  (detectInheritanceCycle())  {  	if  (detectImplicitPrototypeCycle())  {  	compilable	  [FE]  AssertionFailedError  	107	66	replace
33	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError  [CONTEXT]  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);  finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  [BUGGY]  if(isResolved()  ||  detectImplicitPrototypeCycle())  {  [BUGGY]  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  if  (isResolved())  {  finishPropertyContinuations();  }  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.0	202	202	1	add	if(isResolved()  ||  detectImplicitPrototypeCycle())  {	if  (detectImplicitPrototypeCycle())  {  	compilable	  [FE]  AssertionFailedError  	107	100	replace
34	[BUG]  [BUGGY]  if(isResolved()  ||  detectImplicitPrototypeCycle())  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError  [CONTEXT]  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);  finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  [BUGGY]  if(isResolved()  ||  detectImplicitPrototypeCycle())  {  [BUGGY]  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  if  (isResolved())  {  finishPropertyContinuations();  }  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.0	202	202	1	replace	if(isResolved()  ||  detectImplicitPrototypeCycle())  {	if  (detectImplicitPrototypeCycle())  {  	compilable	  [FE]  AssertionFailedError  	107	100	replace
35	[BUG]  [BUGGY]  if(isDetectImplicitPrototypeCycle())  {  [CE]  cannot  find  symbol  [FE]          AssertionFailedError  [CONTEXT]  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);  finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  [BUGGY]  if(isDetectImplicitPrototypeCycle())  {  [BUGGY]  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  if  (isResolved())  {  finishPropertyContinuations();  }  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.0	202	202	1	replace	if(isDetectImplicitPrototypeCycle())  {	if  (detectImplicitPrototypeCycle())  {  	non-compiled	[CE]  cannot  find  symbol	107	None	replace
36	[BUG]  [BUGGY]  if(!validator.isNative()  &&  detectImplicitPrototypeCycle())  {  [CE]  cannot  find  symbol  [FE]    AssertionFailedError  [CONTEXT]  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);  finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  [BUGGY]  if(!validator.isNative()  &&  detectImplicitPrototypeCycle())  {  [BUGGY]  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  if  (isResolved())  {  finishPropertyContinuations();  }  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.0	202	202	1	replace	if(!validator.isNative()  &&  detectImplicitPrototypeCycle())  {	if  (detectImplicitPrototypeCycle())  {  	non-compiled	[CE]  cannot  find  symbol	107	None	replace
37	[BUG]  [BUGGY]  if  (isTypeCycle())  {  [CE]  cannot  find  symbol  [FE]      AssertionFailedError  [CONTEXT]  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);  finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  [BUGGY]  if  (isTypeCycle())  {  [BUGGY]  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  if  (isResolved())  {  finishPropertyContinuations();  }  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.0	202	202	1	replace	if  (isTypeCycle())  {	if  (detectImplicitPrototypeCycle())  {  	non-compiled	[CE]  cannot  find  symbol	107	None	replace
38	[BUG]  [BUGGY]  if(validator!=  null  &&  redefineImplicitPrototypeCycle())  {  [CE]  cannot  find  symbol  [FE]        AssertionFailedError  [CONTEXT]  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);  finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  [BUGGY]  if(validator!=  null  &&  redefineImplicitPrototypeCycle())  {  [BUGGY]  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  if  (isResolved())  {  finishPropertyContinuations();  }  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.0	202	202	1	replace	if(validator!=  null  &&  redefineImplicitPrototypeCycle())  {	if  (detectImplicitPrototypeCycle())  {  	non-compiled	[CE]  cannot  find  symbol	107	None	replace
39	[BUG]  [BUGGY]  if(validator!=  null  &&  defineImplicitPrototypeCycle())  {  [CE]  cannot  find  symbol  [FE]          AssertionFailedError  [CONTEXT]  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);  finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  [BUGGY]  if(validator!=  null  &&  defineImplicitPrototypeCycle())  {  [BUGGY]  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  if  (isResolved())  {  finishPropertyContinuations();  }  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.0	202	202	1	replace	if(validator!=  null  &&  defineImplicitPrototypeCycle())  {	if  (detectImplicitPrototypeCycle())  {  	non-compiled	[CE]  cannot  find  symbol	107	None	replace
40	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError  [CONTEXT]  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);  finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  [BUGGY]  if(detectImplicitPrototypeCycle()  &&  getReferencedType()  ==  null)  {  [BUGGY]  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  if  (isResolved())  {  finishPropertyContinuations();  }  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.0	202	202	1	add	if(detectImplicitPrototypeCycle()  &&  getReferencedType()  ==  null)  {	if  (detectImplicitPrototypeCycle())  {  	compilable	  [FE]  AssertionFailedError  	107	66	replace
41	[BUG]  [BUGGY]  if(detectImplicitPrototypeCycle()  &&  getReferencedType()  ==  null)  {  [FE]  AssertionFailedError  [FE]            AssertionFailedError  [CONTEXT]  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);  finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  [BUGGY]  if(detectImplicitPrototypeCycle()  &&  getReferencedType()  ==  null)  {  [BUGGY]  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  if  (isResolved())  {  finishPropertyContinuations();  }  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.0	202	202	1	replace	if(detectImplicitPrototypeCycle()  &&  getReferencedType()  ==  null)  {	if  (detectImplicitPrototypeCycle())  {  	compilable	  [FE]  AssertionFailedError  	107	66	replace
42	[BUG]  [BUGGY]  if(detectImplicitPrototypeCycle()  &&  propertyNode  ==  null)  {  [CE]  cannot  find  symbol  propertyNode  [FE]    AssertionFailedError  [CONTEXT]  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);  finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  [BUGGY]  if(detectImplicitPrototypeCycle()  &&  propertyNode  ==  null)  {  [BUGGY]  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  if  (isResolved())  {  finishPropertyContinuations();  }  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.0	202	202	1	replace	if(detectImplicitPrototypeCycle()  &&  propertyNode  ==  null)  {	if  (detectImplicitPrototypeCycle())  {  	non-compiled	[CE]  cannot  find  symbol  propertyNode	107	None	replace
43	[BUG]  [BUGGY]  if(detectImplicitPrototypeCycle()  &&  isEnabled(Feature.QUOTE_TYPE))  {  [CE]  cannot  find  symbol  Feature  [FE]      AssertionFailedError  [CONTEXT]  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);  finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  [BUGGY]  if(detectImplicitPrototypeCycle()  &&  isEnabled(Feature.QUOTE_TYPE))  {  [BUGGY]  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  if  (isResolved())  {  finishPropertyContinuations();  }  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.0	202	202	1	replace	if(detectImplicitPrototypeCycle()  &&  isEnabled(Feature.QUOTE_TYPE))  {	if  (detectImplicitPrototypeCycle())  {  	non-compiled	[CE]  cannot  find  symbol  Feature	107	None	replace
44	[BUG]  [BUGGY]  if(detectImplicitPrototypeCycle()  ||  handleTypeCycle(t,  enclosing))  {  [CE]  method  handleTypeCycle  in  class  NamedType  cannot  be  applied  to  given  types;  [FE]        AssertionFailedError  [CONTEXT]  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);  finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  [BUGGY]  if(detectImplicitPrototypeCycle()  ||  handleTypeCycle(t,  enclosing))  {  [BUGGY]  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  if  (isResolved())  {  finishPropertyContinuations();  }  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.0	202	202	1	replace	if(detectImplicitPrototypeCycle()  ||  handleTypeCycle(t,  enclosing))  {	if  (detectImplicitPrototypeCycle())  {  	non-compiled	[CE]  method  handleTypeCycle  in  class  NamedType  cannot  be  applied  to  given  types;	107	None	replace
45	[BUG]  [BUGGY]  if(detectImplicitPrototypeCycle()  ||  isEnabled(Feature.QUOTE_TYPE))  {  [CE]  cannot  find  symbol  Feature  [FE]          AssertionFailedError  [CONTEXT]  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);  finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  [BUGGY]  if(detectImplicitPrototypeCycle()  ||  isEnabled(Feature.QUOTE_TYPE))  {  [BUGGY]  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  if  (isResolved())  {  finishPropertyContinuations();  }  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.0	202	202	1	replace	if(detectImplicitPrototypeCycle()  ||  isEnabled(Feature.QUOTE_TYPE))  {	if  (detectImplicitPrototypeCycle())  {  	non-compiled	[CE]  cannot  find  symbol  Feature	107	None	replace
46	[BUG]  [BUGGY]  if(detectImplementedPrototypeCycle())  {  [CE]  cannot  find  symbol  [FE]            AssertionFailedError  [CONTEXT]  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);  finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  [BUGGY]  if(detectImplementedPrototypeCycle())  {  [BUGGY]  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  if  (isResolved())  {  finishPropertyContinuations();  }  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.0	202	202	1	replace	if(detectImplementedPrototypeCycle())  {	if  (detectImplicitPrototypeCycle())  {  	non-compiled	[CE]  cannot  find  symbol	107	None	replace
47	[BUG]  [BUGGY]  if(detectImplicitPrototypeCycle()  &&  propertyNode!=  null)  {  [CE]  cannot  find  symbol  propertyNode  [FE]              AssertionFailedError  [CONTEXT]  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);  finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  [BUGGY]  if(detectImplicitPrototypeCycle()  &&  propertyNode!=  null)  {  [BUGGY]  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  if  (isResolved())  {  finishPropertyContinuations();  }  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.0	202	202	1	replace	if(detectImplicitPrototypeCycle()  &&  propertyNode!=  null)  {	if  (detectImplicitPrototypeCycle())  {  	non-compiled	[CE]  cannot  find  symbol  propertyNode	107	None	replace
48	[BUG]  [BUGGY]  if(detectImplicitPrototypeCycle()  &&  handleTypeCycle(t,  enclosing))  {  [CE]  method  handleTypeCycle  in  class  NamedType  cannot  be  applied  to  given  types;  [FE]                AssertionFailedError  [CONTEXT]  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);  finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  [BUGGY]  if(detectImplicitPrototypeCycle()  &&  handleTypeCycle(t,  enclosing))  {  [BUGGY]  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  if  (isResolved())  {  finishPropertyContinuations();  }  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.0	202	202	1	replace	if(detectImplicitPrototypeCycle()  &&  handleTypeCycle(t,  enclosing))  {	if  (detectImplicitPrototypeCycle())  {  	non-compiled	[CE]  method  handleTypeCycle  in  class  NamedType  cannot  be  applied  to  given  types;	107	None	replace
49	[BUG]  [BUGGY]  if(detectImplicitPrototypeCycle()  ||  propertyNode  ==  null)  {  [CE]  cannot  find  symbol  propertyNode  [FE]                  AssertionFailedError  [CONTEXT]  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);  finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  [BUGGY]  if(detectImplicitPrototypeCycle()  ||  propertyNode  ==  null)  {  [BUGGY]  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  if  (isResolved())  {  finishPropertyContinuations();  }  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.0	202	202	1	replace	if(detectImplicitPrototypeCycle()  ||  propertyNode  ==  null)  {	if  (detectImplicitPrototypeCycle())  {  	non-compiled	[CE]  cannot  find  symbol  propertyNode	107	None	replace
50	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                    AssertionFailedError  [CONTEXT]  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);  finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  [BUGGY]  if(detectImplicitPrototypeCycle()  &&  isResolved())  {  [BUGGY]  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  if  (isResolved())  {  finishPropertyContinuations();  }  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.0	202	202	1	add	if(detectImplicitPrototypeCycle()  &&  isResolved())  {	if  (detectImplicitPrototypeCycle())  {  	compilable	  [FE]  AssertionFailedError  	107	66	replace
51	[BUG]  [BUGGY]  if(detectImplicitPrototypeCycle()  &&  isResolved())  {  [FE]  AssertionFailedError  [FE]                    AssertionFailedError  [CONTEXT]  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);  finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  [BUGGY]  if(detectImplicitPrototypeCycle()  &&  isResolved())  {  [BUGGY]  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  if  (isResolved())  {  finishPropertyContinuations();  }  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.0	202	202	1	replace	if(detectImplicitPrototypeCycle()  &&  isResolved())  {	if  (detectImplicitPrototypeCycle())  {  	compilable	  [FE]  AssertionFailedError  	107	66	replace
52	[BUG]  [BUGGY]  if  (detectInheritanceCycle)  {  [timeout]  [FE]    AssertionFailedError  [CONTEXT]  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);  finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  [BUGGY]  if  (detectInheritanceCycle)  {  [BUGGY]  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  if  (isResolved())  {  finishPropertyContinuations();  }  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.0	202	202	1	replace	  if  (detectInheritanceCycle)  {  	if  (detectImplicitPrototypeCycle())  {  	non-compiled	[timeout]	107	None	replace
53	[BUG]  [BUGGY]  if(isImplicitPrototypeCycle())  {  [CE]  cannot  find  symbol  [FE]    AssertionFailedError  [CONTEXT]  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);  finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  [BUGGY]  if(isImplicitPrototypeCycle())  {  [BUGGY]  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  if  (isResolved())  {  finishPropertyContinuations();  }  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.0	202	202	1	replace	if(isImplicitPrototypeCycle())  {	if  (detectImplicitPrototypeCycle())  {  	non-compiled	[CE]  cannot  find  symbol	107	None	replace
54	[BUG]  [BUGGY]  if  (detectInheritanceCycle)  {  [CE]  cannot  find  symbol  detectInheritanceCycle  [FE]      AssertionFailedError  [CONTEXT]  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);  finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  [BUGGY]  if  (detectInheritanceCycle)  {  [BUGGY]  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  if  (isResolved())  {  finishPropertyContinuations();  }  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.0	202	202	1	replace	  if  (detectInheritanceCycle)  {  	if  (detectImplicitPrototypeCycle())  {  	non-compiled	[CE]  cannot  find  symbol  detectInheritanceCycle	107	None	replace
55	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError  [CONTEXT]  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);  finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  [BUGGY]  if(isResolved())  {  [BUGGY]  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  if  (isResolved())  {  finishPropertyContinuations();  }  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.0	202	202	1	add	if(isResolved())  {	if  (detectImplicitPrototypeCycle())  {  	compilable	  [FE]  AssertionFailedError  	107	35	replace
56	[BUG]  [BUGGY]  if(isResolved())  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError  [CONTEXT]  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);  finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  [BUGGY]  if(isResolved())  {  [BUGGY]  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  if  (isResolved())  {  finishPropertyContinuations();  }  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.0	202	202	1	replace	if(isResolved())  {	if  (detectImplicitPrototypeCycle())  {  	compilable	  [FE]  AssertionFailedError  	107	35	replace
57	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError  [CONTEXT]  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);  finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  [BUGGY]  if(!detectImplicitPrototypeCycle())  {  [BUGGY]  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  if  (isResolved())  {  finishPropertyContinuations();  }  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.0	202	202	1	add	if(!detectImplicitPrototypeCycle())  {	if  (detectImplicitPrototypeCycle())  {  	compilable	  [FE]  AssertionFailedError  	107	35	replace
58	[BUG]  [BUGGY]  if(!detectImplicitPrototypeCycle())  {  [FE]  AssertionFailedError  [FE]          AssertionFailedError  [CONTEXT]  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);  finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  [BUGGY]  if(!detectImplicitPrototypeCycle())  {  [BUGGY]  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  if  (isResolved())  {  finishPropertyContinuations();  }  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.0	202	202	1	replace	if(!detectImplicitPrototypeCycle())  {	if  (detectImplicitPrototypeCycle())  {  	compilable	  [FE]  AssertionFailedError  	107	35	replace
59	[BUG]  [BUGGY]  if(detectImplicitPrototypeCycle()  ||  handleTypeCycle(t))  {  [CE]  'void'  type  not  allowed  here  [FE]                AssertionFailedError  [CONTEXT]  }  if  (resolved)  {  super.resolveInternal(t,  enclosing);  finishPropertyContinuations();  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  resolveViaProperties(t,  enclosing);  [BUGGY]  if(detectImplicitPrototypeCycle()  ||  handleTypeCycle(t))  {  [BUGGY]  handleTypeCycle(t);  }  super.resolveInternal(t,  enclosing);  if  (isResolved())  {  finishPropertyContinuations();  }  return  registry.isLastGeneration()  ?  getReferencedType()  :  this;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveInternal  [RETURN_TYPE]  JSType  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.0	202	202	1	replace	if(detectImplicitPrototypeCycle()  ||  handleTypeCycle(t))  {	if  (detectImplicitPrototypeCycle())  {  	non-compiled	[CE]  'void'  type  not  allowed  here	107	None	replace
