bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  JSType  type  =  registry.getType(reference,  enclosing);  [CE]  no  suitable  method  found  for  getType(String,StaticScope<JSType>)  [FE]    AssertionFailedError  [CONTEXT]  private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  [BUGGY]  JSType  type  =  registry.getType(reference,  enclosing);  [BUGGY]  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);  return  true;  }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.839664201465694	220	220	1	replace	JSType  type  =  registry.getType(reference,  enclosing);	JSType  type  =  registry.getType(reference);  	non-compiled	[CE]  no  suitable  method  found  for  getType(String,StaticScope<JSType>)	69	None	replace
2	[BUG]  [BUGGY]  JSType  type  =  registry.getType(enclosing);  [CE]  no  suitable  method  found  for  getType(StaticScope<JSType>)  [FE]      AssertionFailedError  [CONTEXT]  private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  [BUGGY]  JSType  type  =  registry.getType(enclosing);  [BUGGY]  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);  return  true;  }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.839664201465694	220	220	1	replace	JSType  type  =  registry.getType(enclosing);	JSType  type  =  registry.getType(reference);  	non-compiled	[CE]  no  suitable  method  found  for  getType(StaticScope<JSType>)	69	None	replace
3	[BUG]  [BUGGY]  JSType  type  =  enclosing.getType(reference);  [CE]  cannot  find  symbol  [FE]        AssertionFailedError  [CONTEXT]  private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  [BUGGY]  JSType  type  =  enclosing.getType(reference);  [BUGGY]  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);  return  true;  }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.839664201465694	220	220	1	replace	JSType  type  =  enclosing.getType(reference);	JSType  type  =  registry.getType(reference);  	non-compiled	[CE]  cannot  find  symbol	69	None	replace
4	[BUG]  [BUGGY]  JSType  type  =  registry.getType(reference,  forAnnotations);  [CE]  cannot  find  symbol  forAnnotations  [FE]          AssertionFailedError  [CONTEXT]  private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  [BUGGY]  JSType  type  =  registry.getType(reference,  forAnnotations);  [BUGGY]  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);  return  true;  }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.839664201465694	220	220	1	replace	JSType  type  =  registry.getType(reference,  forAnnotations);	JSType  type  =  registry.getType(reference);  	non-compiled	[CE]  cannot  find  symbol  forAnnotations	69	None	replace
5	[BUG]  [BUGGY]  JSType  type  =  registry.getType(reporter);  [CE]  cannot  find  symbol  reporter  [FE]            AssertionFailedError  [CONTEXT]  private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  [BUGGY]  JSType  type  =  registry.getType(reporter);  [BUGGY]  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);  return  true;  }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.839664201465694	220	220	1	replace	JSType  type  =  registry.getType(reporter);	JSType  type  =  registry.getType(reference);  	non-compiled	[CE]  cannot  find  symbol  reporter	69	None	replace
6	[BUG]  [BUGGY]  JSType  type  =  registry.getType(reference,  t);  [CE]  no  suitable  method  found  for  getType(String,ErrorReporter)  [FE]              AssertionFailedError  [CONTEXT]  private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  [BUGGY]  JSType  type  =  registry.getType(reference,  t);  [BUGGY]  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);  return  true;  }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.839664201465694	220	220	1	replace	JSType  type  =  registry.getType(reference,  t);	JSType  type  =  registry.getType(reference);  	non-compiled	[CE]  no  suitable  method  found  for  getType(String,ErrorReporter)	69	None	replace
7	[BUG]  [BUGGY]  JSType  type  =  enclosing.getType(registry);  [CE]  cannot  find  symbol  [FE]                AssertionFailedError  [CONTEXT]  private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  [BUGGY]  JSType  type  =  enclosing.getType(registry);  [BUGGY]  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);  return  true;  }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.839664201465694	220	220	1	replace	JSType  type  =  enclosing.getType(registry);	JSType  type  =  registry.getType(reference);  	non-compiled	[CE]  cannot  find  symbol	69	None	replace
8	[BUG]  [BUGGY]  JSType  type  =  registry.getType(t,  reference);  [CE]  no  suitable  method  found  for  getType(ErrorReporter,String)  [FE]                  AssertionFailedError  [CONTEXT]  private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  [BUGGY]  JSType  type  =  registry.getType(t,  reference);  [BUGGY]  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);  return  true;  }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.839664201465694	220	220	1	replace	JSType  type  =  registry.getType(t,  reference);	JSType  type  =  registry.getType(reference);  	non-compiled	[CE]  no  suitable  method  found  for  getType(ErrorReporter,String)	69	None	replace
9	[BUG]  [BUGGY]  JSType  type  =  registry.getType(reporter,  enclosing);  [CE]  cannot  find  symbol  reporter  [FE]                    AssertionFailedError  [CONTEXT]  private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  [BUGGY]  JSType  type  =  registry.getType(reporter,  enclosing);  [BUGGY]  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);  return  true;  }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.839664201465694	220	220	1	replace	JSType  type  =  registry.getType(reporter,  enclosing);	JSType  type  =  registry.getType(reference);  	non-compiled	[CE]  cannot  find  symbol  reporter	69	None	replace
10	[BUG]  [BUGGY]  JSType  type  =  registry.getType(t);  [CE]  no  suitable  method  found  for  getType(ErrorReporter)  [FE]                      AssertionFailedError  [CONTEXT]  private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  [BUGGY]  JSType  type  =  registry.getType(t);  [BUGGY]  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);  return  true;  }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.839664201465694	220	220	1	replace	JSType  type  =  registry.getType(t);	JSType  type  =  registry.getType(reference);  	non-compiled	[CE]  no  suitable  method  found  for  getType(ErrorReporter)	69	None	replace
11	[BUG]  [BUGGY]  JSType  type  =  registry.getType(resolved);  [CE]  resolved  has  private  access  in  JSType  [FE]                        AssertionFailedError  [CONTEXT]  private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  [BUGGY]  JSType  type  =  registry.getType(resolved);  [BUGGY]  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);  return  true;  }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.839664201465694	220	220	1	replace	JSType  type  =  registry.getType(resolved);	JSType  type  =  registry.getType(reference);  	non-compiled	[CE]  resolved  has  private  access  in  JSType	69	None	replace
12	[BUG]  [BUGGY]  JSType  type  =  registry.getType(type);  [CE]  no  suitable  method  found  for  getType(JSType)  [FE]                          AssertionFailedError  [CONTEXT]  private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  [BUGGY]  JSType  type  =  registry.getType(type);  [BUGGY]  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);  return  true;  }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.839664201465694	220	220	1	replace	JSType  type  =  registry.getType(type);	JSType  type  =  registry.getType(reference);  	non-compiled	[CE]  no  suitable  method  found  for  getType(JSType)	69	None	replace
13	[BUG]  [BUGGY]  JSType  type  =  registry.resolveType(t,  enclosing);  [CE]  cannot  find  symbol  [FE]                            AssertionFailedError  [CONTEXT]  private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  [BUGGY]  JSType  type  =  registry.resolveType(t,  enclosing);  [BUGGY]  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);  return  true;  }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.839664201465694	220	220	1	replace	JSType  type  =  registry.resolveType(t,  enclosing);	JSType  type  =  registry.getType(reference);  	non-compiled	[CE]  cannot  find  symbol	69	None	replace
14	[BUG]  [BUGGY]  JSType  type  =  registry.getType(referred);  [CE]  cannot  find  symbol  referred  [FE]                              AssertionFailedError  [CONTEXT]  private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  [BUGGY]  JSType  type  =  registry.getType(referred);  [BUGGY]  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);  return  true;  }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.839664201465694	220	220	1	replace	JSType  type  =  registry.getType(referred);	JSType  type  =  registry.getType(reference);  	non-compiled	[CE]  cannot  find  symbol  referred	69	None	replace
15	[BUG]  [BUGGY]  JSType  type  =  registry.getType(reference,  this.forAnnotations);  [CE]  cannot  find  symbol  forAnnotations  [FE]                                AssertionFailedError  [CONTEXT]  private  boolean  resolveViaRegistry(  ErrorReporter  t,  StaticScope<JSType>  enclosing)  {  [BUGGY]  JSType  type  =  registry.getType(reference,  this.forAnnotations);  [BUGGY]  if  (type  !=  null)  {  setReferencedAndResolvedType(type,  t,  enclosing);  return  true;  }  return  false;  }  [CLASS]  NamedType  PropertyContinuation  [METHOD]  resolveViaRegistry  [RETURN_TYPE]  boolean  ErrorReporter  t  JSType>  enclosing  [VARIABLES]  ErrorReporter  t  JSType  type  boolean  forAnnotations  inferred  resolved  Node  propertyNode  StaticScope  enclosing  List  propertyContinuations  String  propertyName  reference  sourceName  long  serialVersionUID  int  charno  lineno  Predicate  validator  	projects/Closure4/src/com/google/javascript/rhino/jstype/NamedType.java	0.839664201465694	220	220	1	replace	JSType  type  =  registry.getType(reference,  this.forAnnotations);	JSType  type  =  registry.getType(reference);  	non-compiled	[CE]  cannot  find  symbol  forAnnotations	69	None	replace
