projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93privatefinalInflaterinf=newInflater(true);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93privatestaticfinalInflaterinf=newInflater(true);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93privatefinalInflaterinf=newInflater(false);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93privatefinalInflaterinf=newInflater(false,false);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93publicfinalInflaterinf=newInflater(true);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93protectedfinalInflaterinf=newInflater(true);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93privatestaticfinalInflaterinf=newInflater(false);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93publicfinalInflaterinf=newInflater(false);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93privatefinalInflaterinf=newInflater(0);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93protectedfinalInflaterinf=newInflater(false);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93if(currentEntry==null){currentEntry=newZipArchiveInputStream();System.arraycopy(currentEntry.getValue(),currentEntry.getKey(),currentEntry.getValue());}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93if(currentEntry==null){currentEntry=newZipArchiveInputStream();System.arraycopy(currentEntry.getValue(),0,currentEntry.getValue(),currentEntry.getValue());}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93if(currentEntry==null){currentEntry=newZipArchiveInputStream();System.arraycopy(currentEntry.getValue(),0,currentEntry.getValue());}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93if(currentEntry==null){currentEntry=newZipArchiveInputStream();System.arraycopy(currentEntry.getValue(),0,currentEntry.getValue()+1,currentEntry.getValue());}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93if(currentEntry==null){currentEntry=newZipArchiveInputStream();System.arraycopy(currentEntry.getValue(),0,currentEntry.getValue(),currentEntry.getClass().getName());}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93if(currentEntry==null){currentEntry=newZipArchiveInputStream();System.arraycopy(currentEntry.getValue(),0,currentEntry.getValue(),currentEntry.getChronology());}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93if(currentEntry==null){currentEntry=newZipArchiveInputStream();System.arraycopy(currentEntry,0,currentEntry,0,currentEntry.length);}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93privatestaticfinalInflaterinf=newInflater(0);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93staticfinalInflaterinf=newInflater(true);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93privatestaticfinalInflaterinf=newInflater(true,false);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93privatestaticfinalInflaterinf=newInflater();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93publicstaticfinalInflaterinf=newInflater(true);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93privatestaticfinalInflaterinf=newInflater(false,false);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93privatefinalInflaterinf=newInflater(true,true);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93privatefinalInflaterinf=newInflater(true,false);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93privatestaticfinalInflaterinf=newInflater(false,true);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93publicfinalInflaterinf=newInflater(false,false);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93protectedfinalInflaterinf=newInflater(false,false);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93protectedfinalInflaterinf=newInflater(false,true);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93protectedstaticfinalInflaterinf=newInflater(true);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93protectedfinalInflaterinf=newInflater(true,false);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93protectedfinalInflaterinf=newInflater(0);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93staticfinalInflaterinf=newInflater(false);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93publicfinalInflaterinf=newInflater(true,false);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93publicfinalInflaterinf=newInflater(false,true);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93publicfinalInflaterinf=newInflater(0);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93finalZipArchiveInputStreamstream=newZipArchiveInputStream();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93AssertionError.warning("JSC_INTERNAL_ERROR","Unexpectedinitializationoftype{0}");
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93AssertionError.warning("JSC_INTERNAL_ERROR".getMessage());
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93AssertionError.warning("JSC_INTERNAL_ERROR");
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93finalZipArchiveInputStreamstream=newZipArchiveInputStream(System.err);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93AssertionError.warning("JSC_INTERNAL_ERROR",null);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93AssertionError.warning("JSC_INTERNAL_ERROR","Unexpectedinitializationoftype:{0}");
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93protectedstaticfinalInflaterinf=newInflater(false);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93publicstaticfinalInflaterinf=newInflater(true,false);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93publicstaticfinalInflaterinf=newInflater(false);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93publicstaticfinalInflaterinf=newInflater(true,true);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93this.zipArchiveInputStream=newZipArchiveInputStream();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93this.zipArchiveInputStream=newZipArchiveInputStream(ZipArchiveInputStream.DEFAULT_INIT_ERROR);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93this.zipArchiveInputStream=newZipArchiveInputStream(System.currentTimeMillis());
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93this.zipArchiveInputStream=newZipArchiveInputStream(ZipArchiveInputStream.DEFAULT_SYNTHETIC);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93this.zipArchiveInputStream=newZipArchiveInputStream(ZipArchiveInputStream.DEFAULT_ENTRY_ERROR);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93this.zipArchiveInputStream=newZipArchiveInputStream(ZipArchiveInputStream.DEFAULT_SIZE);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93this.zipArchiveInputStream=newZipArchiveInputStream(ZipArchiveInputStream.DEFAULT_OUTPUT);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93finalZipArchiveInputStreamstream=newZipArchiveInputStream(System.err,System.err);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93finalZipArchiveInputStreamstream=newZipArchiveInputStream(System.err,1);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93staticfinalZipArchiveInputStreamstream=newZipArchiveInputStream(System.err);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93finalZipArchiveInputStreamstream=newZipArchiveInputStream(System.out);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93finalZipArchiveInputStreamstream=newZipArchiveInputStream(System.err,0);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93finalZipArchiveInputStreamstream=newZipArchiveInputStream(System.err,true);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93AssertionError<K,V>currentEntry=newZipArchiveInputStream();System.arraycopy(currentEntry.getValue(),0,currentEntry.getValue(),currentEntry.getChronology());
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93AssertionError<?>currentEntry=newZipArchiveInputStream();System.arraycopy(currentEntry.getValue(),0,currentEntry.getValue(),currentEntry.getChronology());
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93AssertionError<T>currentEntry=newAssertionError(currentEntry.getKey(),currentEntry.getValue());System.arraycopy(currentEntry.getValue(),0,currentEntry.getValue(),currentEntry.getChronology());
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93AssertionError<K,V>currentEntry=newZipArchiveInputStream();System.arraycopy(currentEntry.getKey(),0,currentEntry.getValue(),currentEntry.getChronology());
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93AssertionError<K,V>currentEntry=newZipArchiveInputStream();System.arraycopy(currentEntry.getValue(),0,currentEntry.getValue(),currentEntry.getChronology());}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93AssertionError<K,V>currentEntry=newZipArchiveInputStream();System.arraycopy(currentEntry.getValue(),1,currentEntry.getValue(),currentEntry.getChronology());
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93AssertionError<T>currentEntry=newAssertionError(currentEntry.getValue(),0,currentEntry.getValue(),currentEntry.getChronology());
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93AssertionError<K,V>currentEntry=newZipArchiveInputStream();System.arraycopy(currentEntry.getValue(),0,currentEntry.getValue()+1,currentEntry.getValue());
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93AssertionError<K,V>currentEntry=newZipArchiveInputStream();System.arraycopy(currentEntry.getValue(),0,currentEntry.getValue()+1,currentEntry.getValue());}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93AssertionError<K,V>currentEntry=newZipArchiveInputStream();System.arraycopy(currentEntry.getKey(),0,currentEntry.getValue()+1,currentEntry.getValue());
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93mutableValues(currentEntry.getValue(),0,currentEntry.getValue()+1,currentEntry.getValue());
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93AssertionError<K,V>currentEntry=newZipArchiveInputStream();System.arraycopy(currentEntry.getValue(),0,currentEntry.getValue()*1,currentEntry.getValue());
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93AssertionError<K,V>currentEntry=newZipArchiveInputStream();System.arraycopy(currentEntry.getValue(),0,currentEntry.getValue(),currentEntry.getValue());
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93AssertionError<K,V>currentEntry=newZipArchiveInputStream();System.arraycopy(currentEntry.getValue(),1,currentEntry.getValue()+1,currentEntry.getValue());
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93AssertionError.warning("JSC_INTERNAL_ERROR"+name,null);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93AssertionError.warning("JSC_INTERNAL_ERROR",null,expected);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93AssertionError.warning("JSC_INTERNAL_ERROR","identifiernotfollowedbyastringvalue");
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93AssertionError.warning("JSC_INTERNAL_ERROR","identifiernotfollowedbyaURI");
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93AssertionError.warning("JSC_INTERNAL_ERROR","identifiernotfollowedbyadigit");
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93AssertionError.warning("JSC_INTERNAL_ERROR","CannotinitializeaJSC_INTERNAL_ERRORvalue");
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93this.zipArchiveInputStream=newZipArchiveInputStream(ZipArchiveInputStream.DEFAULT_INIT_ERROR,1);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93this.zipArchiveInputStream=newZipArchiveInputStream(ZipArchiveInputStream.DEFAULT_INIT_ERROR,true);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93this.zipArchiveInputStream=newZipArchiveInputStream(ZipArchiveInputStream.DEFAULT_INIT_ERROR,false);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93this.zipArchiveInputStream=newZipArchiveInputStream(ZipArchiveInputStream.DEFAULT_INIT_ERROR,null);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93this.zipArchiveInputStream=newZipArchiveInputStream(ZipArchiveInputStream.DEFAULT_INIT_ERROR,0);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93this.zipArchiveInputStream=newZipArchiveInputStream(ZipArchiveInputStream.DEFAULT_INIT_ERROR,-1);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93this.zipArchiveInputStream=newZipArchiveInputStream(ZipArchiveInputStream.DEFAULT_INIT_ERROR,2);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93publicstaticfinalInflaterinf=newInflater(false,true);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93publicfinalInflaterinf=newInflater(true,true);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93publicstaticfinalInflaterinf=newInflater(false,false);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93publicstaticfinalInflaterinf=newInflater(false,null);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93publicstaticfinalInflaterinf=newInflater(0.0,0.0);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93publicstaticfinalInflaterinf=newInflater(-1,-1);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93this.zipArchiveInputStream=newZipArchiveInputStream(System.currentTimeMillis(),1);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93this.zipArchiveInputStream=newZipArchiveInputStream(System.currentTimeMillis(),System.currentTimeMillis());
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93this.zipArchiveInputStream=newZipArchiveInputStream(System.currentTimeMillis(),2);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93this.zipArchiveInputStream=newZipArchiveInputStream(System.currentTimeMillis()+1);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93this.zipArchiveInputStream=newZipArchiveInputStream(System.currentTimeMillis(),4);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93this.zipArchiveInputStream=newZipArchiveInputStream(System.currentTimeMillis(),BoundedInputStream.DEFAULT);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93staticfinalInflaterinf=newInflater(0);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93staticfinalInflaterinf=newInflater(true,false);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93staticfinalInflaterinf=newInflater();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93finalInflaterinf=newInflater(true);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93staticfinalInflaterinf=newInflater(true,true);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93staticfinalInflaterinf=newInflater(1);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93AssertionError.warning("JSC_INTERNAL_ERROR"+getMessage());
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93AssertionError.error("JSC_INTERNAL_ERROR".getMessage());
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93AssertionError.warning("JSC_INTERNAL_ERROR"+getName());
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93AssertionError.warning("JSC_INTERNAL_ERROR:"+getMessage());
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93AssertionError.warning("JSC_INTERNAL_ERROR"+this.getMessage());
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93AssertionError.error("JSC_INTERNAL_ERROR");
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93privatefinalInflaterinf=newInflater(false,true);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93publicstaticfinalInflaterinf=newInflater(true,false,true);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93publicstaticfinalInflaterinf=newInflater(false,0);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93privatestaticfinalInflaterinf=newInflater(true,true);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93protectedfinalInflaterinf=newInflater(true,true);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93AssertionError.error("JSC_INTERNAL_ERROR","Unexpectedinitializationoftype{0}");
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93AssertionError.warning("JSC_INTERNAL_ERROR"+"Unexpectedinitializationoftype{0}");
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93AssertionError.warning("JSC_INTERNAL_ERROR"+name,"Unexpectedinitializationoftype{0}");
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93AssertionError.warning("JSC_INTERNAL_ERROR"+File.separator+"Unexpectedinitializationoftype{0}");
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93AssertionError.warning("JSC_INTERNAL_ERROR"+File.separatorChar+"Unexpectedinitializationoftype{0}");
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93protectedstaticfinalInflaterinf=newInflater(false,false);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93finalInflaterinf=newInflater(true,true);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93finalInflaterinf=newInflater(true,false);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93AssertionError<K,V>currentEntry=newZipArchiveInputStream();System.arraycopy(currentEntry,0,currentEntry,0,currentEntry.length);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93AssertionError<?>currentEntry=newZipArchiveInputStream();System.arraycopy(currentEntry,0,currentEntry,0,currentEntry.length);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93AssertionError.this.currentEntry=newZipArchiveInputStream();System.arraycopy(currentEntry,0,currentEntry,0,currentEntry.length);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93AssertionError<K,V>currentEntry=newZipArchiveInputStream();System.arraycopy(currentEntry,0,currentEntry,0,currentEntry.length);}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93AssertionError<?>currentEntry=newAssertionError();System.arraycopy(currentEntry,0,currentEntry,0,currentEntry.length);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93AssertionError<?>currentEntry=newZipArchiveInputStream();System.arraycopy(currentEntry,0,currentEntry,0,currentEntry.length);}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93AssertionError.this.currentEntry=newZipArchiveInputStream();System.arraycopy(currentEntry,0,currentEntry,0,currentEntry.length);}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93AssertionError.warning("JSC_INTERNAL_ERROR"+name);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93AssertionError.warning("JSC_INTERNAL_ERROR"+identifier);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93AssertionError.warning("JSC_INTERNAL_ERROR"+this);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93protectedstaticfinalInflaterinf=newInflater(false,true);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93protectedstaticfinalInflaterinf=newInflater(true,false);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93staticfinalZipArchiveInputStreamstream=newZipArchiveInputStream();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93finalZipArchiveInputStreamstream=newZipArchiveInputStream(this.currentEntry);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93finalZipArchiveInputStreamstream=newZipArchiveInputStream(currentEntry);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93finalZipArchiveInputStreamstream=newZipArchiveInputStream(System.in);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93protectedfinalInflaterinf=newInflater(false,0);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93protectedfinalInflaterinf=newInflater(true,false,true);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93publicfinalInflaterinf=newInflater(true,false,true);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93publicfinalInflaterinf=newInflater(false,0);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93publicstaticfinalInflaterinf=newInflater(0);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93publicstaticfinalInflaterinf=newInflater(1);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93publicfinalInflaterinf=newInflater(1.0);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93publicfinalInflaterinf=newInflater(1);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93publicfinalInflaterinf=newInflater(0L);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93publicfinalInflaterinf=newInflater(0,1);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93AssertionError<K,V>currentEntry=newZipArchiveInputStream();System.arraycopy(currentEntry.getValue(),currentEntry.getKey(),currentEntry.getValue());
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93AssertionError<?>currentEntry=newZipArchiveInputStream();System.arraycopy(currentEntry.getValue(),currentEntry.getKey(),currentEntry.getValue());
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93AssertionError<K,V>currentEntry=newZipArchiveInputStream();System.arraycopy(currentEntry.getValue(),currentEntry.getKey(),currentEntry.getValue());}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93AssertionError<K,V>currentEntry=newZipArchiveInputStream();System.arraycopy(currentEntry.getKey(),currentEntry.getValue(),currentEntry.getValue());
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93AssertionError<?>currentEntry=newZipArchiveInputStream();System.arraycopy(currentEntry.getKey(),currentEntry.getValue(),currentEntry.getValue());
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93AssertionError<?>currentEntry=newZipArchiveInputStream();System.arraycopy(currentEntry.getValue(),currentEntry.getKey(),currentEntry.getValue());}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93AssertionError<K,V>currentEntry=newZipArchiveInputStream();System.arraycopy(currentEntry.getValue()+1,currentEntry.getKey(),currentEntry.getValue());
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93publicstaticInflaterinf=newInflater(false,false);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93publicfinalInflaterinf=newInflater();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93publicstaticInflaterinf=newInflater(false);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93AssertionError<K,V>currentEntry=newZipArchiveInputStream();System.arraycopy(currentEntry.getValue(),0,currentEntry.getValue());
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93AssertionError<?>currentEntry=newZipArchiveInputStream();System.arraycopy(currentEntry.getValue(),0,currentEntry.getValue());
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93AssertionError<K,V>currentEntry=newZipArchiveInputStream();System.arraycopy(currentEntry.getKey(),0,currentEntry.getValue());
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93AssertionError<K,V>currentEntry=newZipArchiveInputStream();System.arraycopy(currentEntry.getValue(),0,currentEntry.getValue());}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93AssertionError<?>currentEntry=newZipArchiveInputStream();System.arraycopy(currentEntry.getKey(),0,currentEntry.getValue());
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93AssertionError<K,V>currentEntry=newZipArchiveInputStream();System.arraycopy(currentEntry.getValue(),1,currentEntry.getValue());
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93AssertionError<?>currentEntry=newZipArchiveInputStream();System.arraycopy(currentEntry.getValue(),0,currentEntry.getValue());}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93this.zipArchiveInputStream=newZipArchiveInputStream(ZipArchiveInputStream.DEFAULT_ENTRY_ERROR,1);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93this.zipArchiveInputStream=newZipArchiveInputStream(ZipArchiveInputStream.DEFAULT_ENTRY_ERROR,true);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93this.zipArchiveInputStream=newZipArchiveInputStream(ZipArchiveInputStream.DEFAULT_ENTRY_ERROR,false);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93this.zipArchiveInputStream=newZipArchiveInputStream(ZipArchiveInputStream.DEFAULT_ENTRY_ERROR,null);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93this.zipArchiveInputStream=newZipArchiveInputStream(ZipArchiveInputStream.DEFAULT_ENTRY_ERROR,0);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93this.zipArchiveInputStream=newZipArchiveInputStream(ZipArchiveInputStream.DEFAULT_ENTRY_ERROR,2);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93this.zipArchiveInputStream=newZipArchiveInputStream(JarArchiveInputStream.DEFAULT_ENTRY_ERROR);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93protectedfinalInflaterinf=newInflater();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93AssertionError<?>currentEntry=newZipArchiveInputStream();System.arraycopy(currentEntry.getValue(),0,currentEntry.getValue(),currentEntry.getValue());
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93AssertionError<K,V>currentEntry=newZipArchiveInputStream();System.arraycopy(currentEntry.getKey(),0,currentEntry.getValue(),currentEntry.getValue());
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93AssertionError<K,V>currentEntry=newZipArchiveInputStream();System.arraycopy(currentEntry.getValue(),0,currentEntry.getValue(),currentEntry.getValue());}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93AssertionError<?>currentEntry=newZipArchiveInputStream();System.arraycopy(currentEntry.getKey(),0,currentEntry.getValue(),currentEntry.getValue());
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93AssertionError<?>currentEntry=newZipArchiveInputStream();System.arraycopy(currentEntry.getValue(),0,currentEntry.getValue(),currentEntry.getValue());}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93AssertionError<K,V>currentEntry=newZipArchiveInputStream();System.arraycopy(currentEntry.getValue(),1,currentEntry.getValue(),currentEntry.getValue());
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93privatestaticfinalInflaterinf=newInflater(false,0);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93privatestaticfinalInflaterinf=newInflater(true,false,true);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93privatestaticfinalInflaterinf=newInflater(false,null);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93this.zipArchiveInputStream=newZipArchiveInputStream(ZipArchiveInputStream.DEFAULT_SYNTHETIC,1);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93this.zipArchiveInputStream=newZipArchiveInputStream(ZipArchiveInputStream.DEFAULT_SYNTHETIC,2);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93this.zipArchiveInputStream=newZipArchiveInputStream(ZipArchiveInputStream.DEFAULT_SYNTHETIC,true);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93this.zipArchiveInputStream=newZipArchiveInputStream(ZipArchiveInputStream.DEFAULT_SYNTHETIC,0);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93this.zipArchiveInputStream=newZipArchiveInputStream(ZipArchiveInputStream.DEFAULT_SYNTHETIC,false);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93this.zipArchiveInputStream=newZipArchiveInputStream(ZipArchiveInputStream.DEFAULT_SYNTHETIC,-1);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93this.zipArchiveInputStream=newZipArchiveInputStream(System.err);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93this.zipArchiveInputStream=newZipArchiveInputStream(true);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93this.zipArchiveInputStream=newZipArchiveInputStream(0);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93this.zipArchiveInputStream=newZipArchiveInputStream(System.out);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93this.zipArchiveInputStream=newZipArchiveInputStream(this.currentEntry);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93this.zipArchiveInputStream=newZipArchiveInputStream(BoundedInputStream.DEFAULT);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93publicstaticfinalInflaterinf=newInflater();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93publicfinalstaticInflaterinf=newInflater(true);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93safeMultiply(currentEntry.getValue(),0,currentEntry.getValue(),currentEntry.getClass().getName());
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93safeMultiply(currentEntry.getValue(),currentEntry.getValue(),currentEntry.getClass().getName());
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93aughtExceptionHandler.handleMissingName(currentEntry.getClass(),currentEntry.getValue(),currentEntry.getClass().getName());
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93aughtExceptionHandler.handleMissingName(currentEntry.getValue(),currentEntry.getClass().getName());
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93safeMultiply(currentEntry.getValue(),false,currentEntry.getClass().getName());
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93safeMultiply(currentEntry.getValue(),0,currentEntry.getValue(),currentEntry.getClass().getName()));
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93AssertionError.error("JSC_INTERNAL_ERROR","Unexpectedinitializationoftype:{0}");
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93AssertionError.warning("JSC_INTERNAL_ERROR"+"Unexpectedinitializationoftype:{0}");
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93AssertionError.warning("JSC_INTERNAL_ERROR"+name,"Unexpectedinitializationoftype:{0}");
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93AssertionError.warning("JSC_INTERNAL_ERROR"+File.separator+"Unexpectedinitializationoftype:{0}");
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93AssertionError.warning("JSC_INTERNAL_ERROR"+File.separatorChar+"Unexpectedinitializationoftype:{0}");
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93AssertionError.warning("JSC_INTERNAL_ERROR"+",expectedinitializationoftype:{0}");
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93this.zipArchiveInputStream=newZipArchiveInputStream(ZipArchiveInputStream.DEFAULT_OUTPUT,1);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93this.zipArchiveInputStream=newZipArchiveInputStream(ZipArchiveInputStream.DEFAULT_OUTPUT+1);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93this.zipArchiveInputStream=newZipArchiveInputStream(ZipArchiveInputStream.DEFAULT_OUTPUT,2);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93this.zipArchiveInputStream=newZipArchiveInputStream(ZipArchiveInputStream.DEFAULT_OUTPUT,4);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93this.zipArchiveInputStream=newZipArchiveInputStream(ZipArchiveInputStream.DEFAULT_OUTPUT,true);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93this.zipArchiveInputStream=newZipArchiveInputStream(ZipArchiveInputStream.DEFAULT_OUTPUT,0);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93staticfinalInflaterinf=newInflater(false,false);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93staticfinalInflaterinf=newInflater(false,true);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93staticfinalInflaterinf=newInflater(false,0);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93protectedstaticfinalInflaterinf=newInflater(0);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93protectedstaticfinalInflaterinf=newInflater();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93protectedfinalInflaterinf=newInflater(1);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93protectedfinalInflaterinf=newInflater(0,1);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93protectedfinalInflaterinf=newInflater(0L);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93protectedfinalInflaterinf=newInflater(0,0);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93protectedfinalInflaterinf=newInflater(1.0);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93privatestaticfinalInflaterinf=newInflater(1);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93privatefinalInflaterinf=newInflater(1);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93privatefinalInflaterinf=newInflater(1.0);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93privatefinalInflaterinf=newInflater(0L);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93privatefinalInflaterinf=newInflater(0,1);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93this.zipArchiveInputStream=newZipArchiveInputStream(ZipArchiveInputStream.DEFAULT_SIZE+1);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93this.zipArchiveInputStream=newZipArchiveInputStream(ZipArchiveInputStream.DEFAULT_SIZE,1);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93this.zipArchiveInputStream=newZipArchiveInputStream(ZipArchiveInputStream.DEFAULT_SIZE,2);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93this.zipArchiveInputStream=newZipArchiveInputStream(ZipArchiveInputStream.DEFAULT_SIZE,true);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93this.zipArchiveInputStream=newZipArchiveInputStream(ZipArchiveInputStream.DEFAULT_SIZE-1);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93this.zipArchiveInputStream=newZipArchiveInputStream(ZipArchiveInputStream.DEFAULT_SIZE,4);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93privatestaticfinalInflaterinf=newInflater(true,null);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93privatestaticfinalInflaterinf=newInflater(newZipArchiveInputStream());
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93privatestaticfinalInflaterinf=newInflater(1.0);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93privatestaticfinalInflaterinf=newInflater(64);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93privatestaticfinalInflaterinf=newInflater(newZipInputStream());
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93privatestaticfinalInflaterinf=newInflater(0L);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93privatestaticfinalInflaterinf=newInflater(10);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93privatestaticfinalInflaterinf=newInflater(0,1);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93AssertionError.warning("JSC_INTERNAL_ERROR"+identifierName.getMessage());
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93AssertionError.warning("JSC_INTERNAL_ERROR:missing"{0}".getMessage());
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93AssertionError.warning("JSC_INTERNAL_ERROR:""+getMessage());
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93finalZipArchiveInputStreamstream=newZipArchiveInputStream(true);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93finalZipArchiveInputStreamstream=newZipArchiveInputStream(System.currentTimeMillis());
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93finalZipArchiveInputStreamstream=newZipArchiveInputStream(0);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93this.zipArchiveInputStream=newZipArchiveInputStream(ZipArchiveInputStream.DEFAULT_OUTPUT,-1);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93privatestaticfinalInflaterinf=newInflater(System.err);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93publicabstractInflaterinf=newInflater(false,false);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93AssertionError.warning("JSC_INTERNAL_ERROR",currentEntry);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93AssertionError.warning("JSC_RESULT_ERROR",currentEntry);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93AssertionError.checkState(currentEntry!=null);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93AssertionError.warning("JSC_INTERNAL_ERROR",currentEntry.length);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93AssertionError.warning("JSC_NOT_START_ERROR");
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93AssertionError.checkState(currentEntry==null);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93this.zipArchiveInputStream=newZipArchiveInputStream(System.currentTimeMillis(),32);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93AssertionError.warning("JSC_INTERNAL_ERROR","Unexpectedinitializationoftype:{0}",name);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93AssertionError.warning("JSC_INTERNAL_ERROR","Unexpectedinitializationoftype:{0}",expected);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93safeMultiply(currentEntry.getKey(),currentEntry.getValue(),currentEntry.getClass().getName());
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93safeMultiply(currentEntry.getValue(),currentEntry.getValue(),currentEntry.getClass().getName()));
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93safeMultiply(currentEntry.getValue(),currentEntry.getClass().getName()));
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93safeMultiply(currentEntry.getKey(),currentEntry.getValue(),currentEntry.getClass().getName()));
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93publicstaticfinalInflaterinf=newInflater(FALSE);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93PrivatestaticfinalInflaterinf=newInflater(true,false);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93AssertionError.warning("JSC_INTERNAL_ERROR:expected");
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93AssertionError.warning("JSC_INTERNAL_ERROR"+identifierName);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93this.zipArchiveInputStream=newZipArchiveInputStream(newBoundedInputStream());
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93AssertionError<ZipArchiveInputStream>currentEntry=newZipArchiveInputStream();System.arraycopy(currentEntry.getValue(),0,currentEntry.getValue(),currentEntry.getValue());
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93AssertionError<K,V>currentEntry=newAssertionError(currentEntry.getValue());System.arraycopy(currentEntry.getValue(),0,currentEntry.getValue(),currentEntry.getValue());
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93AssertionError<K,V>currentEntry=newAssertionError(currentEntry.getKey());System.arraycopy(currentEntry.getValue(),0,currentEntry.getValue(),currentEntry.getValue());
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93AssertionError<ZipArchiveInputStream>currentEntry=newZipArchiveInputStream();System.arraycopy(currentEntry.getKey(),0,currentEntry.getValue(),currentEntry.getValue());
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93AssertionError<K,V>currentEntry=newAssertionError(currentEntry.getValue());System.arraycopy(currentEntry.getValue(),0,currentEntry.getValue(),currentEntry.getValu
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93protectedfinalInflaterinf=newInflater(2);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93AssertionError<ZipArchiveInputStream>currentEntry=newZipArchiveInputStream();System.arraycopy(currentEntry.getValue(),0,currentEntry.getValue());
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93AssertionError<ZipArchiveElement>currentEntry=newZipArchiveInputStream();System.arraycopy(currentEntry.getValue(),0,currentEntry.getValue());
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93AssertionError<ZipArchiveInputStream>currentEntry=newAssertionError(currentEntry.getValue());System.arraycopy(currentEntry.getValue(),0,currentEntry.getValue());
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93AssertionError<ZipArchiveInputStream>currentEntry=newAssertionError();System.arraycopy(currentEntry.getValue(),0,currentEntry.getValue());
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93AssertionError<ZipArchiveInputStream>currentEntry=newZipArchiveInputStream();System.arraycopy(currentEntry.getKey(),0,currentEntry.getValue());
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93AssertionError<ZipArchiveInputStream>currentEntry=newZipArchiveInputStream();System.arraycopy(currentEntry.getValue(),1,currentEntry.getValue());
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93privatestaticfinalInflaterinf=newInflater(0,0);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93AssertionError<K,V>currentEntry=newAssertionError(currentEntry.getValue());System.arraycopy(currentEntry.getValue(),currentEntry.getKey(),currentEntry.getValue());
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93AssertionError<?>currentEntry=newZipArchiveInputStream();System.arraycopy(currentEntry.getKey(),currentEntry.getKey(),currentEntry.getValue());
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93AssertionError<K,V>currentEntry=newAssertionError(currentEntry.getValue());System.arraycopy(currentEntry.getKey(),currentEntry.getKey(),currentEntry.getValue());
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93AssertionError<K,V>currentEntry=newAssertionError(currentEntry.getValue());System.arraycopy(currentEntry.getValue(),currentEntry.getKey(),currentEntry.getValu
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93publicstaticfinalInflaterinf=newInflater(0,0);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93privatestaticfinalInflaterinf=newInflater(-1);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93privatestaticfinalInflaterinf=newInflater(0.0);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93AssertionError.warning("JSC_INTERNAL_ERROR","Unexpectedinitializationoftype{0}",name);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93AssertionError.warning("JSC_INTERNAL_ERROR","Unexpectedinitializationoftype{0}",expected);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93AssertionError.warning("JSC_INTERNAL_ERROR","Unexpectedinitializationoftype{0}",this);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93publicfinalInflaterinf=newInflater(0,0);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93AssertionError.warning("JSC_INTERNAL_ERROR","Cannotaccesspath:{0}");
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93AssertionError.warning("JSC_INTERNAL_ERROR","Cannotaccesspath:{0}",null);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93AssertionError.warning("JSC_INTERNAL_ERROR","Unexpectedidentifier:{0}");
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93AssertionError.warning("JSC_INTERNAL_ERROR","Unexpectedidentifier:{0}",null);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93AssertionError.warning("JSC_INTERNAL_ERROR","Cannotaccesspath:{0}",name);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93AssertionError.warning("JSC_INTERNAL_ERROR","CannotaccessavalidZipArchiveInputStreamfor{0}");
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93safeMultiply(currentEntry.getValue(),System.arraycopy(currentEntry.getValue(),0,currentEntry.getValue(),currentEntry.getChronology()));
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93safeMultiply(currentEntry.getValue(),System.arraycopy(currentEntry.getValue(),0,currentEntry.getValue(),currentEntry.getChronology());
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93safeMultiply(currentEntry.getValue(),System.arraycopy(currentEntry.getKey(),0,currentEntry.getValue(),currentEntry.getChronology()));
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93safeMultiply(currentEntry.getValue(),System.arraycopy(currentEntry.getValue(),0,currentEntry.getValue()),currentEntry.getChronology());
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93safeMultiply(currentEntry.getValue(),System.arraycopy(currentEntry.getValue(),currentEntry.getValue(),currentEntry.getChronology()));
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93safeMultiply(currentEntry.getValue(),System.arraycopy(currentEntry.getValue(),0,currentEntry.getValue(),currentEntry.getChronology()),false);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93this.zipArchiveInputStream=newZipArchiveInputStream(ZipArchiveInputStream.DEFAULT_SIZE,false);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93this.zipArchiveInputStream=newZipArchiveInputStream(ZipArchiveInputStream.DEFAULT_ENTRY_ERROR,-1);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93this.zipArchiveInputStream=newZipArchiveInputStream(ZipArchiveInputStream.DEFAULT_TEMP_ERROR);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93finalZipArchiveInputStreamstream=newZipArchiveInputStream(System.out,System.err);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93safeMultiply(currentEntry.getValue(),currentEntry.getValue()+1,currentEntry.getValue());
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93mutableValues(currentEntry.getValue(),currentEntry.getValue()+1,currentEntry.getValue());
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93safeMultiply(currentEntry.getValue(),currentEntry.getValue()),currentEntry.getValue());
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93mutableValues(currentEntry.getValue(),currentEntry.getValue(),currentEntry.getValue());
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93safeMultiply(currentEntry.getValue(),currentEntry.getValue()));
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93mutableValues(currentEntry.getValue(),currentEntry.getValue(),currentEntry.getValue()));
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93this.zipArchiveInputStream=newZipArchiveInputStream(ZipArchiveInputStream.DEFAULT_SIZE,0);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93finalZipArchiveInputStreamstream=newZipArchiveInputStream(BoundedInputStream.DEFAULT);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93this.zipArchiveInputStream=newZipArchiveInputStream(ZipArchiveInputStream.DEFAULT);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93System.arraycopy(currentEntry,0,currentEntry,0,currentEntry.length);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93System.arraycopy(ZipArchiveInputStream.DEFAULT,0,currentEntry,0,currentEntry.length);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93System.arraycopy(ZipArchiveInputStream.DEFAULT_ENTRY_ERROR,0,currentEntry.length);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93System.arraycopy(ZipArchiveInputStream.DEFAULT_ENTRY,0,currentEntry,0,currentEntry.length);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93aughtInputException(ZipArchiveInputStream.DEFAULT_EXPECTED_ERROR,currentEntry.length);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93aughtInputException(ZipArchiveInputStream.DEFAULT_ENTRY_ERROR,currentEntry.length);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93nullZipArchiveInputStreamstream=newZipArchiveInputStream(System.err);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93System.arraycopy(currentEntry.getValue(),0,currentEntry.getValue(),currentEntry.getChronology());
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93System.arraycopy(currentEntry.getName(),0,currentEntry.getValue(),currentEntry.getChronology());
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93System.arraycopy(currentEntry.getKey(),0,currentEntry.getValue(),currentEntry.getChronology());
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93System.arraycopy(currentEntry.getValue(),1,currentEntry.getValue(),currentEntry.getChronology());
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93System.arraycopy(currentEntry.getValue(),0,currentEntry.getKey(),currentEntry.getChronology());
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93System.arraycopy(currentEntry.getValue(),0,currentEntry.getValue(),this.currentEntry.getChronology());
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93protectedstaticfinalInflaterinf=newInflater(true,true);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93AssertionError.warning("JSC_INTERNAL_ERROR","Unknownname:{0}");
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93AssertionError.warning("JSC_INTERNAL_ERROR","Unknownobject:{0}");
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93AssertionError.warning("JSC_INTERNAL_ERROR","Unknownname:{0}",null);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93AssertionError.warning("JSC_INTERNAL_ERROR","Identifier{0}cannotbedeprecated:{1}");
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93AssertionError.warning("JSC_INTERNAL_ERROR","Identifier{0}cannotbedeprecatedfor{1}");
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93System.arraycopy(currentEntry.getValue(),0,currentEntry.getValue()+1,currentEntry.getValue());
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93System.arraycopy(currentEntry.getKey(),0,currentEntry.getValue()+1,currentEntry.getValue());
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93System.arraycopy(currentEntry.getValue(),0,currentEntry.getValue(),currentEntry.getValue());
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93System.arraycopy(currentEntry.getName(),0,currentEntry.getValue()+1,currentEntry.getValue());
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93System.arraycopy(currentEntry.getValue(),0,currentEntry.getValue()*1,currentEntry.getValue());
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93System.arraycopy(currentEntry.getValue(),0,currentEntry.getValue()-1,currentEntry.getValue());
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93AssertionError.error(currentEntry.getKey(),currentEntry.getValue()+1,currentEntry.getValue());
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93System.arraycopy(currentEntry.getValue(),0,currentEntry.getValue());
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93AssertionError<ZipArchiveInputStream>currentEntry=newZipArchiveInputStream();System.arraycopy(currentEntry.getValue()+1,currentEntry.getValue(),0,currentEntry.getValue());
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93AssertionError<ZipArchiveInputStream>currentEntry=newZipArchiveInputStream();System.arraycopy(currentEntry.getValue(),0,currentEntry.getValue());}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93AssertionError<ZipArchiveInputStream>currentEntry=newZipArchiveInputStream();System.arraycopy(currentEntry.getName(),0,currentEntry.getValue());
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93System.arraycopy(currentEntry.getValue(),currentEntry.getKey(),currentEntry.getValue());
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93System.arraycopy(currentEntry.getKey(),currentEntry.getKey(),currentEntry.getValue());
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93System.arraycopy(currentEntry.getKey(),currentEntry.getValue(),currentEntry.getValue());
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93System.arraycopy(currentEntry.getType(),currentEntry.getKey(),currentEntry.getValue());
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93System.arraycopy(currentEntry.getName(),currentEntry.getKey(),currentEntry.getValue());
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93System.arraycopy(currentEntry.getKey(),currentEntry.getValue(),currentEntry.getName());
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93AssertionError.warning("JSC_INTERNAL_ERROR"+asPath());
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93this.zipArchiveInputStream=newZipArchiveInputStream(BoundedInputStream.DEFAULT_ZIZE);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93AssertionError.warning("JSC_INTERNAL_ERROR","Unexpectedinitializationoftype:{0}",this);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93protectedfinalInflaterinf=newInflater(-1);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93this.zipArchiveInputStream=newZipArchiveInputStream(ZipArchiveInputStream.DEFAULT_SYNTHETIC,File.separator);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93System.arraycopy(currentEntry.getName(),0,currentEntry.getValue(),currentEntry.getValue());
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93System.arraycopy(currentEntry.getKey(),0,currentEntry.getValue(),currentEntry.getValue());
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93System.arraycopy(currentEntry.getType(),0,currentEntry.getValue(),currentEntry.getValue());
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93System.arraycopy(currentEntry.getValue(),0,currentEntry.getValue(),currentEntry.getKey());
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93System.arraycopy(currentEntry.getValue(),0,currentEntry.getValue(),currentEntry.getType());
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93System.arraycopy(currentEntry.getValue(),0,currentEntry.getValue(),currentEntry.getName());
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93AssertionError.warning("JSC_INTERNAL_ERROR"+this.name);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93AssertionError.warning("JSC_INTERNAL_ERROR"+System.identityHashCode(this));
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93publicstaticfinalInflaterinf=newInflater(0,1);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93AssertionError(currentEntry.getClass(),currentEntry.getValue(),currentEntry.getClass().getName());
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93aught(ZipArchiveInputStream.DEFAULT_TRY_ERROR,currentEntry.getValue(),currentEntry.getClass().getName());
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93aught(ZipArchiveInputStream.DEFAULT_TRY_ERROR,currentEntry.getClass(),currentEntry.getClass().getName());
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93AssertionError.error(currentEntry.getClass(),currentEntry.getValue(),currentEntry.getClass().getName());
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93mutableValues.add(currentEntry.getClass(),currentEntry.getClass().getName());
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93aught(ZipArchiveInputStream.DEFAULT_TRY_ERROR,currentEntry.getClass(),currentEntry.getClass().getName()));
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93publicabstractInflaterinf=newInflater(false);
