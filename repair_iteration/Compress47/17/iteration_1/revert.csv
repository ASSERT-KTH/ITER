projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93privatefinalInflaterinf=newInflater(true);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93privatestaticfinalInflaterinf=newInflater(true);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93privatefinalInflaterinf=newInflater(false);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93privatefinalInflaterinf=newInflater(false,false);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93publicfinalInflaterinf=newInflater(true);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93protectedfinalInflaterinf=newInflater(true);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93privatestaticfinalInflaterinf=newInflater(false);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93publicfinalInflaterinf=newInflater(false);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93privatefinalInflaterinf=newInflater(0);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93protectedfinalInflaterinf=newInflater(false);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93if(currentEntry==null){currentEntry=newZipArchiveInputStream();System.arraycopy(currentEntry.getValue(),currentEntry.getKey(),currentEntry.getValue());}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93if(currentEntry==null){currentEntry=newZipArchiveInputStream();System.arraycopy(currentEntry.getValue(),0,currentEntry.getValue(),currentEntry.getValue());}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93if(currentEntry==null){currentEntry=newZipArchiveInputStream();System.arraycopy(currentEntry.getValue(),0,currentEntry.getValue());}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93if(currentEntry==null){currentEntry=newZipArchiveInputStream();System.arraycopy(currentEntry.getValue(),0,currentEntry.getValue()+1,currentEntry.getValue());}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93if(currentEntry==null){currentEntry=newZipArchiveInputStream();System.arraycopy(currentEntry.getValue(),0,currentEntry.getValue(),currentEntry.getClass().getName());}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93if(currentEntry==null){currentEntry=newZipArchiveInputStream();System.arraycopy(currentEntry.getValue(),0,currentEntry.getValue(),currentEntry.getChronology());}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93if(currentEntry==null){currentEntry=newZipArchiveInputStream();System.arraycopy(currentEntry,0,currentEntry,0,currentEntry.length);}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93privatestaticfinalInflaterinf=newInflater(0);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93staticfinalInflaterinf=newInflater(true);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93privatestaticfinalInflaterinf=newInflater(true,false);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93privatestaticfinalInflaterinf=newInflater();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93publicstaticfinalInflaterinf=newInflater(true);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93privatestaticfinalInflaterinf=newInflater(false,false);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93privatefinalInflaterinf=newInflater(true,true);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93privatefinalInflaterinf=newInflater(true,false);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93privatestaticfinalInflaterinf=newInflater(false,true);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93publicfinalInflaterinf=newInflater(false,false);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93protectedfinalInflaterinf=newInflater(false,false);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93protectedfinalInflaterinf=newInflater(false,true);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93protectedstaticfinalInflaterinf=newInflater(true);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93protectedfinalInflaterinf=newInflater(true,false);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93protectedfinalInflaterinf=newInflater(0);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93staticfinalInflaterinf=newInflater(false);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93publicfinalInflaterinf=newInflater(true,false);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93publicfinalInflaterinf=newInflater(false,true);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93publicfinalInflaterinf=newInflater(0);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93finalZipArchiveInputStreamstream=newZipArchiveInputStream();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93AssertionError.warning("JSC_INTERNAL_ERROR","Unexpectedinitializationoftype{0}");
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93AssertionError.warning("JSC_INTERNAL_ERROR".getMessage());
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93AssertionError.warning("JSC_INTERNAL_ERROR");
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93finalZipArchiveInputStreamstream=newZipArchiveInputStream(System.err);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93AssertionError.warning("JSC_INTERNAL_ERROR",null);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93AssertionError.warning("JSC_INTERNAL_ERROR","Unexpectedinitializationoftype:{0}");
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93protectedstaticfinalInflaterinf=newInflater(false);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93publicstaticfinalInflaterinf=newInflater(true,false);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93publicstaticfinalInflaterinf=newInflater(false);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93publicstaticfinalInflaterinf=newInflater(true,true);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93this.zipArchiveInputStream=newZipArchiveInputStream();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93this.zipArchiveInputStream=newZipArchiveInputStream(ZipArchiveInputStream.DEFAULT_INIT_ERROR);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93this.zipArchiveInputStream=newZipArchiveInputStream(System.currentTimeMillis());
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93this.zipArchiveInputStream=newZipArchiveInputStream(ZipArchiveInputStream.DEFAULT_SYNTHETIC);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93this.zipArchiveInputStream=newZipArchiveInputStream(ZipArchiveInputStream.DEFAULT_ENTRY_ERROR);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93this.zipArchiveInputStream=newZipArchiveInputStream(ZipArchiveInputStream.DEFAULT_SIZE);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java93this.zipArchiveInputStream=newZipArchiveInputStream(ZipArchiveInputStream.DEFAULT_OUTPUT);
