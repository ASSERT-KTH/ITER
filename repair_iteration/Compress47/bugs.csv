bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	failing_test_number	action	patch
1	[BUG] [BUGGY] if (ae instanceof ZipArchiveEntry) { [FE] AssertionError [CONTEXT] public boolean canReadEntryData(final ArchiveEntry ae) { [BUGGY] if (ae instanceof ZipArchiveEntry) { [BUGGY] final ZipArchiveEntry ze = (ZipArchiveEntry) ae; return ZipUtil.canHandleEntryData(ze) && supportsDataDescriptorFor(ze); } return false; } [CLASS] ZipArchiveInputStream CurrentEntry BoundedInputStream [METHOD] canReadEntryData [RETURN_TYPE] boolean  ArchiveEntry ae [VARIABLES] ZipEncoding entryEncoding zipEncoding CRC32 crc InputStream bis in inputStream ArchiveEntry ae String encoding ByteBuffer buf int CFH_LEN LFH_LEN entriesRead extraLen fileNameLen off versionMadeBy long TWO_EXP_32 bytesRead bytesReadFromStream currentHeaderOffset max pos size time byte[] CFH DD LFH extraData fileName lfh lfhBuf missedLfhBytes shortBuf skipBuf twoDwordBuf wordBuf CurrentEntry current boolean allowStoredEntriesWithDataDescriptor closed firstEntry hasDataDescriptor hasUTF8Flag hitCentralDirectory useUnicodeExtraFields usesZip64 ByteArrayInputStream lastStoredEntry ZipArchiveEntry entry ze Inflater inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.7071067811865475	412	412	1	replace	
2	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] public boolean canReadEntryData(final ArchiveEntry ae) { [BUGGY] [BUGGY] if (ae instanceof ZipArchiveEntry) { final ZipArchiveEntry ze = (ZipArchiveEntry) ae; return ZipUtil.canHandleEntryData(ze) && supportsDataDescriptorFor(ze); } return false; } [CLASS] ZipArchiveInputStream CurrentEntry BoundedInputStream [METHOD] canReadEntryData [RETURN_TYPE] boolean  ArchiveEntry ae [VARIABLES] ZipEncoding entryEncoding zipEncoding CRC32 crc InputStream bis in inputStream ArchiveEntry ae String encoding ByteBuffer buf int CFH_LEN LFH_LEN entriesRead extraLen fileNameLen off versionMadeBy long TWO_EXP_32 bytesRead bytesReadFromStream currentHeaderOffset max pos size time byte[] CFH DD LFH extraData fileName lfh lfhBuf missedLfhBytes shortBuf skipBuf twoDwordBuf wordBuf CurrentEntry current boolean allowStoredEntriesWithDataDescriptor closed firstEntry hasDataDescriptor hasUTF8Flag hitCentralDirectory useUnicodeExtraFields usesZip64 ByteArrayInputStream lastStoredEntry ZipArchiveEntry entry ze Inflater inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.7071067811865475	412	412	1	add	
3	[BUG] [BUGGY] final ZipArchiveEntry ze = (ZipArchiveEntry) ae; [FE] AssertionError [CONTEXT] public boolean canReadEntryData(final ArchiveEntry ae) { if (ae instanceof ZipArchiveEntry) { [BUGGY] final ZipArchiveEntry ze = (ZipArchiveEntry) ae; [BUGGY] return ZipUtil.canHandleEntryData(ze) && supportsDataDescriptorFor(ze); } return false; } [CLASS] ZipArchiveInputStream CurrentEntry BoundedInputStream [METHOD] canReadEntryData [RETURN_TYPE] boolean  ArchiveEntry ae [VARIABLES] ZipEncoding entryEncoding zipEncoding CRC32 crc InputStream bis in inputStream ArchiveEntry ae String encoding ByteBuffer buf int CFH_LEN LFH_LEN entriesRead extraLen fileNameLen off versionMadeBy long TWO_EXP_32 bytesRead bytesReadFromStream currentHeaderOffset max pos size time byte[] CFH DD LFH extraData fileName lfh lfhBuf missedLfhBytes shortBuf skipBuf twoDwordBuf wordBuf CurrentEntry current boolean allowStoredEntriesWithDataDescriptor closed firstEntry hasDataDescriptor hasUTF8Flag hitCentralDirectory useUnicodeExtraFields usesZip64 ByteArrayInputStream lastStoredEntry ZipArchiveEntry entry ze Inflater inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.7071067811865475	413	413	1	replace	
4	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] public boolean canReadEntryData(final ArchiveEntry ae) { if (ae instanceof ZipArchiveEntry) { [BUGGY] [BUGGY] final ZipArchiveEntry ze = (ZipArchiveEntry) ae; return ZipUtil.canHandleEntryData(ze) && supportsDataDescriptorFor(ze); } return false; } [CLASS] ZipArchiveInputStream CurrentEntry BoundedInputStream [METHOD] canReadEntryData [RETURN_TYPE] boolean  ArchiveEntry ae [VARIABLES] ZipEncoding entryEncoding zipEncoding CRC32 crc InputStream bis in inputStream ArchiveEntry ae String encoding ByteBuffer buf int CFH_LEN LFH_LEN entriesRead extraLen fileNameLen off versionMadeBy long TWO_EXP_32 bytesRead bytesReadFromStream currentHeaderOffset max pos size time byte[] CFH DD LFH extraData fileName lfh lfhBuf missedLfhBytes shortBuf skipBuf twoDwordBuf wordBuf CurrentEntry current boolean allowStoredEntriesWithDataDescriptor closed firstEntry hasDataDescriptor hasUTF8Flag hitCentralDirectory useUnicodeExtraFields usesZip64 ByteArrayInputStream lastStoredEntry ZipArchiveEntry entry ze Inflater inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.7071067811865475	413	413	1	add	
5	[BUG] [BUGGY] return ZipUtil.canHandleEntryData(ze) && supportsDataDescriptorFor(ze); [FE] AssertionError [CONTEXT] public boolean canReadEntryData(final ArchiveEntry ae) { if (ae instanceof ZipArchiveEntry) { final ZipArchiveEntry ze = (ZipArchiveEntry) ae; [BUGGY] return ZipUtil.canHandleEntryData(ze)    && supportsDataDescriptorFor(ze); [BUGGY] && supportsDataDescriptorFor(ze); } return false; } [CLASS] ZipArchiveInputStream CurrentEntry BoundedInputStream [METHOD] canReadEntryData [RETURN_TYPE] boolean  ArchiveEntry ae [VARIABLES] ZipEncoding entryEncoding zipEncoding CRC32 crc InputStream bis in inputStream ArchiveEntry ae String encoding ByteBuffer buf int CFH_LEN LFH_LEN entriesRead extraLen fileNameLen off versionMadeBy long TWO_EXP_32 bytesRead bytesReadFromStream currentHeaderOffset max pos size time byte[] CFH DD LFH extraData fileName lfh lfhBuf missedLfhBytes shortBuf skipBuf twoDwordBuf wordBuf CurrentEntry current boolean allowStoredEntriesWithDataDescriptor closed firstEntry hasDataDescriptor hasUTF8Flag hitCentralDirectory useUnicodeExtraFields usesZip64 ByteArrayInputStream lastStoredEntry ZipArchiveEntry entry ze Inflater inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.7071067811865475	414	415	1	replace	
6	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] public boolean canReadEntryData(final ArchiveEntry ae) { if (ae instanceof ZipArchiveEntry) { final ZipArchiveEntry ze = (ZipArchiveEntry) ae; [BUGGY] [BUGGY] return ZipUtil.canHandleEntryData(ze)    && supportsDataDescriptorFor(ze); && supportsDataDescriptorFor(ze); } return false; } [CLASS] ZipArchiveInputStream CurrentEntry BoundedInputStream [METHOD] canReadEntryData [RETURN_TYPE] boolean  ArchiveEntry ae [VARIABLES] ZipEncoding entryEncoding zipEncoding CRC32 crc InputStream bis in inputStream ArchiveEntry ae String encoding ByteBuffer buf int CFH_LEN LFH_LEN entriesRead extraLen fileNameLen off versionMadeBy long TWO_EXP_32 bytesRead bytesReadFromStream currentHeaderOffset max pos size time byte[] CFH DD LFH extraData fileName lfh lfhBuf missedLfhBytes shortBuf skipBuf twoDwordBuf wordBuf CurrentEntry current boolean allowStoredEntriesWithDataDescriptor closed firstEntry hasDataDescriptor hasUTF8Flag hitCentralDirectory useUnicodeExtraFields usesZip64 ByteArrayInputStream lastStoredEntry ZipArchiveEntry entry ze Inflater inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.7071067811865475	414	415	1	add	
7	[BUG] [BUGGY] return !entry.getGeneralPurposeBit().usesDataDescriptor()  || (allowStoredEntriesWithDataDescriptor && entry.getMethod() == ZipEntry.STORED) [FE] AssertionError [CONTEXT] private boolean supportsDataDescriptorFor(final ZipArchiveEntry entry) { [BUGGY] return !entry.getGeneralPurposeBit().usesDataDescriptor()        || (allowStoredEntriesWithDataDescriptor && entry.getMethod() == ZipEntry.STORED) [BUGGY]  || (allowStoredEntriesWithDataDescriptor && entry.getMethod() == ZipEntry.STORED) || entry.getMethod() == ZipEntry.DEFLATED || entry.getMethod() == ZipMethod.ENHANCED_DEFLATED.getCode(); } [CLASS] ZipArchiveInputStream CurrentEntry BoundedInputStream [METHOD] supportsDataDescriptorFor [RETURN_TYPE] boolean  ZipArchiveEntry entry [VARIABLES] ZipEncoding entryEncoding zipEncoding CRC32 crc InputStream bis in inputStream String encoding ByteBuffer buf int CFH_LEN LFH_LEN count diff entriesRead extraLen fileNameLen i l length off offset read toRead versionMadeBy x long TWO_EXP_32 bytesRead bytesReadFromStream csize currentHeaderOffset inB max n pos rem remaining size skipped time value byte[] CFH DD LFH b buffer expected extraData fileName lfh lfhBuf missedLfhBytes shortBuf signature skipBuf twoDwordBuf wordBuf CurrentEntry current boolean allowStoredEntriesWithDataDescriptor closed firstEntry hasDataDescriptor hasUTF8Flag hitCentralDirectory useUnicodeExtraFields usesZip64 ByteArrayInputStream lastStoredEntry ZipArchiveEntry entry ze Inflater inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.3333333333333333	798	800	1	replace	
8	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] private boolean supportsDataDescriptorFor(final ZipArchiveEntry entry) { [BUGGY] [BUGGY] return !entry.getGeneralPurposeBit().usesDataDescriptor()        || (allowStoredEntriesWithDataDescriptor && entry.getMethod() == ZipEntry.STORED) || (allowStoredEntriesWithDataDescriptor && entry.getMethod() == ZipEntry.STORED) || entry.getMethod() == ZipEntry.DEFLATED || entry.getMethod() == ZipMethod.ENHANCED_DEFLATED.getCode(); } [CLASS] ZipArchiveInputStream CurrentEntry BoundedInputStream [METHOD] supportsDataDescriptorFor [RETURN_TYPE] boolean  ZipArchiveEntry entry [VARIABLES] ZipEncoding entryEncoding zipEncoding CRC32 crc InputStream bis in inputStream String encoding ByteBuffer buf int CFH_LEN LFH_LEN count diff entriesRead extraLen fileNameLen i l length off offset read toRead versionMadeBy x long TWO_EXP_32 bytesRead bytesReadFromStream csize currentHeaderOffset inB max n pos rem remaining size skipped time value byte[] CFH DD LFH b buffer expected extraData fileName lfh lfhBuf missedLfhBytes shortBuf signature skipBuf twoDwordBuf wordBuf CurrentEntry current boolean allowStoredEntriesWithDataDescriptor closed firstEntry hasDataDescriptor hasUTF8Flag hitCentralDirectory useUnicodeExtraFields usesZip64 ByteArrayInputStream lastStoredEntry ZipArchiveEntry entry ze Inflater inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.3333333333333333	798	800	1	add	
9	[BUG] [BUGGY] if (!closed) { [FE] AssertionError [CONTEXT] public void close() throws IOException { [BUGGY] if (!closed) { [BUGGY] closed = true; try { in.close(); } finally { inf.end(); } } } [CLASS] ZipArchiveInputStream CurrentEntry BoundedInputStream [METHOD] close [RETURN_TYPE] void  [VARIABLES] ZipEncoding entryEncoding zipEncoding CRC32 crc InputStream bis in inputStream String encoding ByteBuffer buf int CFH_LEN LFH_LEN entriesRead extraLen fileNameLen l length off offset read toRead versionMadeBy long TWO_EXP_32 bytesRead bytesReadFromStream csize currentHeaderOffset max pos size time byte[] CFH DD LFH buffer extraData fileName lfh lfhBuf missedLfhBytes shortBuf skipBuf twoDwordBuf wordBuf CurrentEntry current boolean allowStoredEntriesWithDataDescriptor closed firstEntry hasDataDescriptor hasUTF8Flag hitCentralDirectory useUnicodeExtraFields usesZip64 ByteArrayInputStream lastStoredEntry ZipArchiveEntry entry ze Inflater inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.25	549	549	1	replace	
10	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] public void close() throws IOException { [BUGGY] [BUGGY] if (!closed) { closed = true; try { in.close(); } finally { inf.end(); } } } [CLASS] ZipArchiveInputStream CurrentEntry BoundedInputStream [METHOD] close [RETURN_TYPE] void  [VARIABLES] ZipEncoding entryEncoding zipEncoding CRC32 crc InputStream bis in inputStream String encoding ByteBuffer buf int CFH_LEN LFH_LEN entriesRead extraLen fileNameLen l length off offset read toRead versionMadeBy long TWO_EXP_32 bytesRead bytesReadFromStream csize currentHeaderOffset max pos size time byte[] CFH DD LFH buffer extraData fileName lfh lfhBuf missedLfhBytes shortBuf skipBuf twoDwordBuf wordBuf CurrentEntry current boolean allowStoredEntriesWithDataDescriptor closed firstEntry hasDataDescriptor hasUTF8Flag hitCentralDirectory useUnicodeExtraFields usesZip64 ByteArrayInputStream lastStoredEntry ZipArchiveEntry entry ze Inflater inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.25	549	549	1	add	
11	[BUG] [BUGGY] closed = true; [FE] AssertionError [CONTEXT] public void close() throws IOException { if (!closed) { [BUGGY] closed = true; [BUGGY] try { in.close(); } finally { inf.end(); } } } [CLASS] ZipArchiveInputStream CurrentEntry BoundedInputStream [METHOD] close [RETURN_TYPE] void  [VARIABLES] ZipEncoding entryEncoding zipEncoding CRC32 crc InputStream bis in inputStream String encoding ByteBuffer buf int CFH_LEN LFH_LEN entriesRead extraLen fileNameLen l length off offset read toRead versionMadeBy long TWO_EXP_32 bytesRead bytesReadFromStream csize currentHeaderOffset max pos size time byte[] CFH DD LFH buffer extraData fileName lfh lfhBuf missedLfhBytes shortBuf skipBuf twoDwordBuf wordBuf CurrentEntry current boolean allowStoredEntriesWithDataDescriptor closed firstEntry hasDataDescriptor hasUTF8Flag hitCentralDirectory useUnicodeExtraFields usesZip64 ByteArrayInputStream lastStoredEntry ZipArchiveEntry entry ze Inflater inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.25	550	550	1	replace	
12	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] public void close() throws IOException { if (!closed) { [BUGGY] [BUGGY] closed = true; try { in.close(); } finally { inf.end(); } } } [CLASS] ZipArchiveInputStream CurrentEntry BoundedInputStream [METHOD] close [RETURN_TYPE] void  [VARIABLES] ZipEncoding entryEncoding zipEncoding CRC32 crc InputStream bis in inputStream String encoding ByteBuffer buf int CFH_LEN LFH_LEN entriesRead extraLen fileNameLen l length off offset read toRead versionMadeBy long TWO_EXP_32 bytesRead bytesReadFromStream csize currentHeaderOffset max pos size time byte[] CFH DD LFH buffer extraData fileName lfh lfhBuf missedLfhBytes shortBuf skipBuf twoDwordBuf wordBuf CurrentEntry current boolean allowStoredEntriesWithDataDescriptor closed firstEntry hasDataDescriptor hasUTF8Flag hitCentralDirectory useUnicodeExtraFields usesZip64 ByteArrayInputStream lastStoredEntry ZipArchiveEntry entry ze Inflater inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.25	550	550	1	add	
13	[BUG] [BUGGY] in.close(); [FE] AssertionError [CONTEXT] public void close() throws IOException { if (!closed) { closed = true; try { [BUGGY] in.close(); [BUGGY] } finally { inf.end(); } } } [CLASS] ZipArchiveInputStream CurrentEntry BoundedInputStream [METHOD] close [RETURN_TYPE] void  [VARIABLES] ZipEncoding entryEncoding zipEncoding CRC32 crc InputStream bis in inputStream String encoding ByteBuffer buf int CFH_LEN LFH_LEN entriesRead extraLen fileNameLen l length off offset read toRead versionMadeBy long TWO_EXP_32 bytesRead bytesReadFromStream csize currentHeaderOffset max pos size time byte[] CFH DD LFH buffer extraData fileName lfh lfhBuf missedLfhBytes shortBuf skipBuf twoDwordBuf wordBuf CurrentEntry current boolean allowStoredEntriesWithDataDescriptor closed firstEntry hasDataDescriptor hasUTF8Flag hitCentralDirectory useUnicodeExtraFields usesZip64 ByteArrayInputStream lastStoredEntry ZipArchiveEntry entry ze Inflater inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.25	552	552	1	replace	
14	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] public void close() throws IOException { if (!closed) { closed = true; try { [BUGGY] [BUGGY] in.close(); } finally { inf.end(); } } } [CLASS] ZipArchiveInputStream CurrentEntry BoundedInputStream [METHOD] close [RETURN_TYPE] void  [VARIABLES] ZipEncoding entryEncoding zipEncoding CRC32 crc InputStream bis in inputStream String encoding ByteBuffer buf int CFH_LEN LFH_LEN entriesRead extraLen fileNameLen l length off offset read toRead versionMadeBy long TWO_EXP_32 bytesRead bytesReadFromStream csize currentHeaderOffset max pos size time byte[] CFH DD LFH buffer extraData fileName lfh lfhBuf missedLfhBytes shortBuf skipBuf twoDwordBuf wordBuf CurrentEntry current boolean allowStoredEntriesWithDataDescriptor closed firstEntry hasDataDescriptor hasUTF8Flag hitCentralDirectory useUnicodeExtraFields usesZip64 ByteArrayInputStream lastStoredEntry ZipArchiveEntry entry ze Inflater inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.25	552	552	1	add	
15	[BUG] [BUGGY] inf.end(); [FE] AssertionError [CONTEXT] public void close() throws IOException { if (!closed) { closed = true; try { in.close(); } finally { [BUGGY] inf.end(); [BUGGY] } } } [CLASS] ZipArchiveInputStream CurrentEntry BoundedInputStream [METHOD] close [RETURN_TYPE] void  [VARIABLES] ZipEncoding entryEncoding zipEncoding CRC32 crc InputStream bis in inputStream String encoding ByteBuffer buf int CFH_LEN LFH_LEN entriesRead extraLen fileNameLen l length off offset read toRead versionMadeBy long TWO_EXP_32 bytesRead bytesReadFromStream csize currentHeaderOffset max pos size time byte[] CFH DD LFH buffer extraData fileName lfh lfhBuf missedLfhBytes shortBuf skipBuf twoDwordBuf wordBuf CurrentEntry current boolean allowStoredEntriesWithDataDescriptor closed firstEntry hasDataDescriptor hasUTF8Flag hitCentralDirectory useUnicodeExtraFields usesZip64 ByteArrayInputStream lastStoredEntry ZipArchiveEntry entry ze Inflater inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.25	554	554	1	replace	
16	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] public void close() throws IOException { if (!closed) { closed = true; try { in.close(); } finally { [BUGGY] [BUGGY] inf.end(); } } } [CLASS] ZipArchiveInputStream CurrentEntry BoundedInputStream [METHOD] close [RETURN_TYPE] void  [VARIABLES] ZipEncoding entryEncoding zipEncoding CRC32 crc InputStream bis in inputStream String encoding ByteBuffer buf int CFH_LEN LFH_LEN entriesRead extraLen fileNameLen l length off offset read toRead versionMadeBy long TWO_EXP_32 bytesRead bytesReadFromStream csize currentHeaderOffset max pos size time byte[] CFH DD LFH buffer extraData fileName lfh lfhBuf missedLfhBytes shortBuf skipBuf twoDwordBuf wordBuf CurrentEntry current boolean allowStoredEntriesWithDataDescriptor closed firstEntry hasDataDescriptor hasUTF8Flag hitCentralDirectory useUnicodeExtraFields usesZip64 ByteArrayInputStream lastStoredEntry ZipArchiveEntry entry ze Inflater inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.25	554	554	1	add	
17	[BUG] [BUGGY] } [FE] AssertionError [CONTEXT] public void close() throws IOException { if (!closed) { closed = true; try { in.close(); } finally { inf.end(); [BUGGY] } [BUGGY] } } [CLASS] ZipArchiveInputStream CurrentEntry BoundedInputStream [METHOD] close [RETURN_TYPE] void  [VARIABLES] ZipEncoding entryEncoding zipEncoding CRC32 crc InputStream bis in inputStream String encoding ByteBuffer buf int CFH_LEN LFH_LEN entriesRead extraLen fileNameLen l length off offset read toRead versionMadeBy long TWO_EXP_32 bytesRead bytesReadFromStream csize currentHeaderOffset max pos size time byte[] CFH DD LFH buffer extraData fileName lfh lfhBuf missedLfhBytes shortBuf skipBuf twoDwordBuf wordBuf CurrentEntry current boolean allowStoredEntriesWithDataDescriptor closed firstEntry hasDataDescriptor hasUTF8Flag hitCentralDirectory useUnicodeExtraFields usesZip64 ByteArrayInputStream lastStoredEntry ZipArchiveEntry entry ze Inflater inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.25	555	555	1	replace	
18	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] public void close() throws IOException { if (!closed) { closed = true; try { in.close(); } finally { inf.end(); [BUGGY] [BUGGY] } } } [CLASS] ZipArchiveInputStream CurrentEntry BoundedInputStream [METHOD] close [RETURN_TYPE] void  [VARIABLES] ZipEncoding entryEncoding zipEncoding CRC32 crc InputStream bis in inputStream String encoding ByteBuffer buf int CFH_LEN LFH_LEN entriesRead extraLen fileNameLen l length off offset read toRead versionMadeBy long TWO_EXP_32 bytesRead bytesReadFromStream csize currentHeaderOffset max pos size time byte[] CFH DD LFH buffer extraData fileName lfh lfhBuf missedLfhBytes shortBuf skipBuf twoDwordBuf wordBuf CurrentEntry current boolean allowStoredEntriesWithDataDescriptor closed firstEntry hasDataDescriptor hasUTF8Flag hitCentralDirectory useUnicodeExtraFields usesZip64 ByteArrayInputStream lastStoredEntry ZipArchiveEntry entry ze Inflater inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.25	555	555	1	add	
20	[BUG] [BUGGY] this(inputStream, ZipEncodingHelper.UTF8); [FE] AssertionError [CONTEXT] public ZipArchiveInputStream(final InputStream inputStream) { [BUGGY] this(inputStream, ZipEncodingHelper.UTF8); [BUGGY] } [CLASS] ZipArchiveInputStream CurrentEntry BoundedInputStream [METHOD] <init> [RETURN_TYPE] InputStream)  InputStream inputStream [VARIABLES] ZipEncoding zipEncoding CRC32 crc InputStream in inputStream String encoding ByteBuffer buf int CFH_LEN LFH_LEN entriesRead long TWO_EXP_32 bytesRead bytesReadFromStream max pos byte[] CFH DD LFH lfhBuf shortBuf skipBuf twoDwordBuf wordBuf CurrentEntry current boolean allowStoredEntriesWithDataDescriptor closed hasDataDescriptor hitCentralDirectory useUnicodeExtraFields usesZip64 ByteArrayInputStream lastStoredEntry ZipArchiveEntry entry Inflater inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	169	169	1	replace	
21	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] public ZipArchiveInputStream(final InputStream inputStream) { [BUGGY] [BUGGY] this(inputStream, ZipEncodingHelper.UTF8); } [CLASS] ZipArchiveInputStream CurrentEntry BoundedInputStream [METHOD] <init> [RETURN_TYPE] InputStream)  InputStream inputStream [VARIABLES] ZipEncoding zipEncoding CRC32 crc InputStream in inputStream String encoding ByteBuffer buf int CFH_LEN LFH_LEN entriesRead long TWO_EXP_32 bytesRead bytesReadFromStream max pos byte[] CFH DD LFH lfhBuf shortBuf skipBuf twoDwordBuf wordBuf CurrentEntry current boolean allowStoredEntriesWithDataDescriptor closed hasDataDescriptor hitCentralDirectory useUnicodeExtraFields usesZip64 ByteArrayInputStream lastStoredEntry ZipArchiveEntry entry Inflater inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	169	169	1	add	
22	[BUG] [BUGGY] } [FE] AssertionError [CONTEXT] public ZipArchiveInputStream(final InputStream inputStream) { this(inputStream, ZipEncodingHelper.UTF8); [BUGGY] } [BUGGY]  [CLASS] ZipArchiveInputStream CurrentEntry BoundedInputStream [METHOD] <init> [RETURN_TYPE] InputStream)  InputStream inputStream [VARIABLES] ZipEncoding zipEncoding CRC32 crc InputStream in inputStream String encoding ByteBuffer buf int CFH_LEN LFH_LEN entriesRead long TWO_EXP_32 bytesRead bytesReadFromStream max pos byte[] CFH DD LFH lfhBuf shortBuf skipBuf twoDwordBuf wordBuf CurrentEntry current boolean allowStoredEntriesWithDataDescriptor closed hasDataDescriptor hitCentralDirectory useUnicodeExtraFields usesZip64 ByteArrayInputStream lastStoredEntry ZipArchiveEntry entry Inflater inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	replace	
23	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] public ZipArchiveInputStream(final InputStream inputStream) { this(inputStream, ZipEncodingHelper.UTF8); [BUGGY] [BUGGY] } [CLASS] ZipArchiveInputStream CurrentEntry BoundedInputStream [METHOD] <init> [RETURN_TYPE] InputStream)  InputStream inputStream [VARIABLES] ZipEncoding zipEncoding CRC32 crc InputStream in inputStream String encoding ByteBuffer buf int CFH_LEN LFH_LEN entriesRead long TWO_EXP_32 bytesRead bytesReadFromStream max pos byte[] CFH DD LFH lfhBuf shortBuf skipBuf twoDwordBuf wordBuf CurrentEntry current boolean allowStoredEntriesWithDataDescriptor closed hasDataDescriptor hitCentralDirectory useUnicodeExtraFields usesZip64 ByteArrayInputStream lastStoredEntry ZipArchiveEntry entry Inflater inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	170	170	1	add	
24	[BUG] [BUGGY] this(inputStream, encoding, true); [FE] AssertionError [CONTEXT] public ZipArchiveInputStream(final InputStream inputStream, final String encoding) { [BUGGY] this(inputStream, encoding, true); [BUGGY] } [CLASS] ZipArchiveInputStream CurrentEntry BoundedInputStream [METHOD] <init> [RETURN_TYPE] String)  InputStream inputStream String encoding [VARIABLES] ZipEncoding zipEncoding CRC32 crc InputStream in inputStream String encoding ByteBuffer buf int CFH_LEN LFH_LEN entriesRead long TWO_EXP_32 bytesRead bytesReadFromStream max pos byte[] CFH DD LFH lfhBuf shortBuf skipBuf twoDwordBuf wordBuf CurrentEntry current boolean allowStoredEntriesWithDataDescriptor closed hasDataDescriptor hitCentralDirectory useUnicodeExtraFields usesZip64 ByteArrayInputStream lastStoredEntry ZipArchiveEntry entry Inflater inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	180	180	1	replace	
25	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] public ZipArchiveInputStream(final InputStream inputStream, final String encoding) { [BUGGY] [BUGGY] this(inputStream, encoding, true); } [CLASS] ZipArchiveInputStream CurrentEntry BoundedInputStream [METHOD] <init> [RETURN_TYPE] String)  InputStream inputStream String encoding [VARIABLES] ZipEncoding zipEncoding CRC32 crc InputStream in inputStream String encoding ByteBuffer buf int CFH_LEN LFH_LEN entriesRead long TWO_EXP_32 bytesRead bytesReadFromStream max pos byte[] CFH DD LFH lfhBuf shortBuf skipBuf twoDwordBuf wordBuf CurrentEntry current boolean allowStoredEntriesWithDataDescriptor closed hasDataDescriptor hitCentralDirectory useUnicodeExtraFields usesZip64 ByteArrayInputStream lastStoredEntry ZipArchiveEntry entry Inflater inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	180	180	1	add	
26	[BUG] [BUGGY] } [FE] AssertionError [CONTEXT] public ZipArchiveInputStream(final InputStream inputStream, final String encoding) { this(inputStream, encoding, true); [BUGGY] } [BUGGY]  [CLASS] ZipArchiveInputStream CurrentEntry BoundedInputStream [METHOD] <init> [RETURN_TYPE] String)  InputStream inputStream String encoding [VARIABLES] ZipEncoding zipEncoding CRC32 crc InputStream in inputStream String encoding ByteBuffer buf int CFH_LEN LFH_LEN entriesRead long TWO_EXP_32 bytesRead bytesReadFromStream max pos byte[] CFH DD LFH lfhBuf shortBuf skipBuf twoDwordBuf wordBuf CurrentEntry current boolean allowStoredEntriesWithDataDescriptor closed hasDataDescriptor hitCentralDirectory useUnicodeExtraFields usesZip64 ByteArrayInputStream lastStoredEntry ZipArchiveEntry entry Inflater inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	181	181	1	replace	
27	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] public ZipArchiveInputStream(final InputStream inputStream, final String encoding) { this(inputStream, encoding, true); [BUGGY] [BUGGY] } [CLASS] ZipArchiveInputStream CurrentEntry BoundedInputStream [METHOD] <init> [RETURN_TYPE] String)  InputStream inputStream String encoding [VARIABLES] ZipEncoding zipEncoding CRC32 crc InputStream in inputStream String encoding ByteBuffer buf int CFH_LEN LFH_LEN entriesRead long TWO_EXP_32 bytesRead bytesReadFromStream max pos byte[] CFH DD LFH lfhBuf shortBuf skipBuf twoDwordBuf wordBuf CurrentEntry current boolean allowStoredEntriesWithDataDescriptor closed hasDataDescriptor hitCentralDirectory useUnicodeExtraFields usesZip64 ByteArrayInputStream lastStoredEntry ZipArchiveEntry entry Inflater inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	181	181	1	add	
28	[BUG] [BUGGY] this(inputStream, encoding, useUnicodeExtraFields, false); [FE] AssertionError [CONTEXT] public ZipArchiveInputStream(final InputStream inputStream, final String encoding, final boolean useUnicodeExtraFields) { [BUGGY] this(inputStream, encoding, useUnicodeExtraFields, false); [BUGGY] } [CLASS] ZipArchiveInputStream CurrentEntry BoundedInputStream [METHOD] <init> [RETURN_TYPE] String,boolean)  InputStream inputStream String encoding final boolean useUnicodeExtraFields [VARIABLES] ZipEncoding zipEncoding CRC32 crc InputStream in inputStream String encoding ByteBuffer buf int CFH_LEN LFH_LEN entriesRead long TWO_EXP_32 bytesRead bytesReadFromStream max pos byte[] CFH DD LFH lfhBuf shortBuf skipBuf twoDwordBuf wordBuf CurrentEntry current boolean allowStoredEntriesWithDataDescriptor closed hasDataDescriptor hitCentralDirectory useUnicodeExtraFields usesZip64 ByteArrayInputStream lastStoredEntry ZipArchiveEntry entry Inflater inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	192	192	1	replace	
29	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] public ZipArchiveInputStream(final InputStream inputStream, final String encoding, final boolean useUnicodeExtraFields) { [BUGGY] [BUGGY] this(inputStream, encoding, useUnicodeExtraFields, false); } [CLASS] ZipArchiveInputStream CurrentEntry BoundedInputStream [METHOD] <init> [RETURN_TYPE] String,boolean)  InputStream inputStream String encoding final boolean useUnicodeExtraFields [VARIABLES] ZipEncoding zipEncoding CRC32 crc InputStream in inputStream String encoding ByteBuffer buf int CFH_LEN LFH_LEN entriesRead long TWO_EXP_32 bytesRead bytesReadFromStream max pos byte[] CFH DD LFH lfhBuf shortBuf skipBuf twoDwordBuf wordBuf CurrentEntry current boolean allowStoredEntriesWithDataDescriptor closed hasDataDescriptor hitCentralDirectory useUnicodeExtraFields usesZip64 ByteArrayInputStream lastStoredEntry ZipArchiveEntry entry Inflater inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	192	192	1	add	
30	[BUG] [BUGGY] } [FE] AssertionError [CONTEXT] public ZipArchiveInputStream(final InputStream inputStream, final String encoding, final boolean useUnicodeExtraFields) { this(inputStream, encoding, useUnicodeExtraFields, false); [BUGGY] } [BUGGY]  [CLASS] ZipArchiveInputStream CurrentEntry BoundedInputStream [METHOD] <init> [RETURN_TYPE] String,boolean)  InputStream inputStream String encoding final boolean useUnicodeExtraFields [VARIABLES] ZipEncoding zipEncoding CRC32 crc InputStream in inputStream String encoding ByteBuffer buf int CFH_LEN LFH_LEN entriesRead long TWO_EXP_32 bytesRead bytesReadFromStream max pos byte[] CFH DD LFH lfhBuf shortBuf skipBuf twoDwordBuf wordBuf CurrentEntry current boolean allowStoredEntriesWithDataDescriptor closed hasDataDescriptor hitCentralDirectory useUnicodeExtraFields usesZip64 ByteArrayInputStream lastStoredEntry ZipArchiveEntry entry Inflater inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	replace	
31	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] public ZipArchiveInputStream(final InputStream inputStream, final String encoding, final boolean useUnicodeExtraFields) { this(inputStream, encoding, useUnicodeExtraFields, false); [BUGGY] [BUGGY] } [CLASS] ZipArchiveInputStream CurrentEntry BoundedInputStream [METHOD] <init> [RETURN_TYPE] String,boolean)  InputStream inputStream String encoding final boolean useUnicodeExtraFields [VARIABLES] ZipEncoding zipEncoding CRC32 crc InputStream in inputStream String encoding ByteBuffer buf int CFH_LEN LFH_LEN entriesRead long TWO_EXP_32 bytesRead bytesReadFromStream max pos byte[] CFH DD LFH lfhBuf shortBuf skipBuf twoDwordBuf wordBuf CurrentEntry current boolean allowStoredEntriesWithDataDescriptor closed hasDataDescriptor hitCentralDirectory useUnicodeExtraFields usesZip64 ByteArrayInputStream lastStoredEntry ZipArchiveEntry entry Inflater inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	193	193	1	add	
32	[BUG] [BUGGY] final boolean allowStoredEntriesWithDataDescriptor) { [FE] AssertionError [CONTEXT] public ZipArchiveInputStream(final InputStream inputStream, final String encoding, final boolean useUnicodeExtraFields, [BUGGY] final boolean allowStoredEntriesWithDataDescriptor) { [BUGGY] this.encoding = encoding; zipEncoding = ZipEncodingHelper.getZipEncoding(encoding); this.useUnicodeExtraFields = useUnicodeExtraFields; in = new PushbackInputStream(inputStream, buf.capacity()); this.allowStoredEntriesWithDataDescriptor = allowStoredEntriesWithDataDescriptor;  buf.limit(0); } [CLASS] ZipArchiveInputStream CurrentEntry BoundedInputStream [METHOD] <init> [RETURN_TYPE] String,boolean,boolean)  InputStream inputStream String encoding final boolean useUnicodeExtraFields final boolean allowStoredEntriesWithDataDescriptor [VARIABLES] ZipEncoding zipEncoding CRC32 crc InputStream in inputStream String encoding ByteBuffer buf int CFH_LEN LFH_LEN entriesRead long TWO_EXP_32 bytesRead bytesReadFromStream max pos byte[] CFH DD LFH lfhBuf shortBuf skipBuf twoDwordBuf wordBuf CurrentEntry current boolean allowStoredEntriesWithDataDescriptor closed hasDataDescriptor hitCentralDirectory useUnicodeExtraFields usesZip64 ByteArrayInputStream lastStoredEntry ZipArchiveEntry entry Inflater inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	209	209	1	replace	
33	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] public ZipArchiveInputStream(final InputStream inputStream, final String encoding, final boolean useUnicodeExtraFields, [BUGGY] [BUGGY] final boolean allowStoredEntriesWithDataDescriptor) { this.encoding = encoding; zipEncoding = ZipEncodingHelper.getZipEncoding(encoding); this.useUnicodeExtraFields = useUnicodeExtraFields; in = new PushbackInputStream(inputStream, buf.capacity()); this.allowStoredEntriesWithDataDescriptor = allowStoredEntriesWithDataDescriptor;  buf.limit(0); } [CLASS] ZipArchiveInputStream CurrentEntry BoundedInputStream [METHOD] <init> [RETURN_TYPE] String,boolean,boolean)  InputStream inputStream String encoding final boolean useUnicodeExtraFields final boolean allowStoredEntriesWithDataDescriptor [VARIABLES] ZipEncoding zipEncoding CRC32 crc InputStream in inputStream String encoding ByteBuffer buf int CFH_LEN LFH_LEN entriesRead long TWO_EXP_32 bytesRead bytesReadFromStream max pos byte[] CFH DD LFH lfhBuf shortBuf skipBuf twoDwordBuf wordBuf CurrentEntry current boolean allowStoredEntriesWithDataDescriptor closed hasDataDescriptor hitCentralDirectory useUnicodeExtraFields usesZip64 ByteArrayInputStream lastStoredEntry ZipArchiveEntry entry Inflater inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	209	209	1	add	
34	[BUG] [BUGGY] private final Inflater inf = new Inflater(true); [FE] AssertionError [CONTEXT] [BUGGY] private final Inflater inf = new Inflater(true); [BUGGY]  [CLASS] ZipArchiveInputStream CurrentEntry BoundedInputStream  [VARIABLES] 	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	93	93	1	replace	
35	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] [BUGGY] [BUGGY] private final Inflater inf = new Inflater(true); [CLASS] ZipArchiveInputStream CurrentEntry BoundedInputStream  [VARIABLES] 	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	93	93	1	add	
36	[BUG] [BUGGY] private final ByteBuffer buf = ByteBuffer.allocate(ZipArchiveOutputStream.BUFFER_SIZE); [FE] AssertionError [CONTEXT] [BUGGY] private final ByteBuffer buf = ByteBuffer.allocate(ZipArchiveOutputStream.BUFFER_SIZE); [BUGGY]  [CLASS] ZipArchiveInputStream CurrentEntry BoundedInputStream  [VARIABLES] 	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	96	96	1	replace	
37	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] [BUGGY] [BUGGY] private final ByteBuffer buf = ByteBuffer.allocate(ZipArchiveOutputStream.BUFFER_SIZE); [CLASS] ZipArchiveInputStream CurrentEntry BoundedInputStream  [VARIABLES] 	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	96	96	1	add	
38	[BUG] [BUGGY] private CurrentEntry current = null; [FE] AssertionError [CONTEXT] [BUGGY] private CurrentEntry current = null; [BUGGY]  [CLASS] ZipArchiveInputStream CurrentEntry BoundedInputStream  [VARIABLES] 	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	99	99	1	replace	
39	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] [BUGGY] [BUGGY] private CurrentEntry current = null; [CLASS] ZipArchiveInputStream CurrentEntry BoundedInputStream  [VARIABLES] 	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	99	99	1	add	
40	[BUG] [BUGGY] private boolean closed = false; [FE] AssertionError [CONTEXT] [BUGGY] private boolean closed = false; [BUGGY]  [CLASS] ZipArchiveInputStream CurrentEntry BoundedInputStream  [VARIABLES] 	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	102	102	1	replace	
41	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] [BUGGY] [BUGGY] private boolean closed = false; [CLASS] ZipArchiveInputStream CurrentEntry BoundedInputStream  [VARIABLES] 	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	102	102	1	add	
42	[BUG] [BUGGY] private boolean hitCentralDirectory = false; [FE] AssertionError [CONTEXT] [BUGGY] private boolean hitCentralDirectory = false; [BUGGY]  [CLASS] ZipArchiveInputStream CurrentEntry BoundedInputStream  [VARIABLES] 	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	105	105	1	replace	
43	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] [BUGGY] [BUGGY] private boolean hitCentralDirectory = false; [CLASS] ZipArchiveInputStream CurrentEntry BoundedInputStream  [VARIABLES] 	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	105	105	1	add	
44	[BUG] [BUGGY] private ByteArrayInputStream lastStoredEntry = null; [FE] AssertionError [CONTEXT] [BUGGY] private ByteArrayInputStream lastStoredEntry = null; [BUGGY]  [CLASS] ZipArchiveInputStream CurrentEntry BoundedInputStream  [VARIABLES] 	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	112	112	1	replace	
45	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] [BUGGY] [BUGGY] private ByteArrayInputStream lastStoredEntry = null; [CLASS] ZipArchiveInputStream CurrentEntry BoundedInputStream  [VARIABLES] 	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	112	112	1	add	
46	[BUG] [BUGGY] private boolean allowStoredEntriesWithDataDescriptor = false; [FE] AssertionError [CONTEXT] [BUGGY] private boolean allowStoredEntriesWithDataDescriptor = false; [BUGGY]  [CLASS] ZipArchiveInputStream CurrentEntry BoundedInputStream  [VARIABLES] 	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	115	115	1	replace	
47	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] [BUGGY] [BUGGY] private boolean allowStoredEntriesWithDataDescriptor = false; [CLASS] ZipArchiveInputStream CurrentEntry BoundedInputStream  [VARIABLES] 	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	115	115	1	add	
48	[BUG] [BUGGY] private final byte[] lfhBuf = new byte[LFH_LEN]; [FE] AssertionError [CONTEXT] [BUGGY] private final byte[] lfhBuf = new byte[LFH_LEN]; [BUGGY]  [CLASS] ZipArchiveInputStream CurrentEntry BoundedInputStream  [VARIABLES] 	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	156	156	1	replace	
49	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] [BUGGY] [BUGGY] private final byte[] lfhBuf = new byte[LFH_LEN]; [CLASS] ZipArchiveInputStream CurrentEntry BoundedInputStream  [VARIABLES] 	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	156	156	1	add	
50	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] private final byte[] lfhBuf = new byte[LFH_LEN]; [CLASS] ZipArchiveInputStream CurrentEntry BoundedInputStream  [VARIABLES] 	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	157	157	1	replace	
51	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] private final byte[] lfhBuf = new byte[LFH_LEN]; [CLASS] ZipArchiveInputStream CurrentEntry BoundedInputStream  [VARIABLES] 	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	157	157	1	add	
52	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] private final byte[] lfhBuf = new byte[LFH_LEN]; [CLASS] ZipArchiveInputStream CurrentEntry BoundedInputStream  [VARIABLES] 	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	158	158	1	replace	
53	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] private final byte[] lfhBuf = new byte[LFH_LEN]; [CLASS] ZipArchiveInputStream CurrentEntry BoundedInputStream  [VARIABLES] 	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	158	158	1	add	
54	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] private final byte[] skipBuf = new byte[1024]; [CLASS] ZipArchiveInputStream CurrentEntry BoundedInputStream  [VARIABLES] 	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	159	159	1	replace	
55	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] private final byte[] skipBuf = new byte[1024]; [CLASS] ZipArchiveInputStream CurrentEntry BoundedInputStream  [VARIABLES] 	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	159	159	1	add	
56	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] private final byte[] shortBuf = new byte[SHORT]; [CLASS] ZipArchiveInputStream CurrentEntry BoundedInputStream  [VARIABLES] 	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	160	160	1	replace	
57	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] private final byte[] shortBuf = new byte[SHORT]; [CLASS] ZipArchiveInputStream CurrentEntry BoundedInputStream  [VARIABLES] 	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	160	160	1	add	
58	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] private final byte[] twoDwordBuf = new byte[2 * DWORD]; [CLASS] ZipArchiveInputStream CurrentEntry BoundedInputStream  [VARIABLES] 	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	162	162	1	replace	
59	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] private final byte[] twoDwordBuf = new byte[2 * DWORD]; [CLASS] ZipArchiveInputStream CurrentEntry BoundedInputStream  [VARIABLES] 	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	162	162	1	add	
60	[BUG] [BUGGY] this.encoding = encoding; [FE] AssertionError [CONTEXT] public ZipArchiveInputStream(final InputStream inputStream, final String encoding, final boolean useUnicodeExtraFields, final boolean allowStoredEntriesWithDataDescriptor) { [BUGGY] this.encoding = encoding; [BUGGY] zipEncoding = ZipEncodingHelper.getZipEncoding(encoding); this.useUnicodeExtraFields = useUnicodeExtraFields; in = new PushbackInputStream(inputStream, buf.capacity()); this.allowStoredEntriesWithDataDescriptor = allowStoredEntriesWithDataDescriptor;  buf.limit(0); } [CLASS] ZipArchiveInputStream CurrentEntry BoundedInputStream [METHOD] <init> [RETURN_TYPE] String,boolean,boolean)  InputStream inputStream String encoding final boolean useUnicodeExtraFields final boolean allowStoredEntriesWithDataDescriptor [VARIABLES] ZipEncoding zipEncoding CRC32 crc InputStream in inputStream String encoding ByteBuffer buf int CFH_LEN LFH_LEN entriesRead long TWO_EXP_32 bytesRead bytesReadFromStream max pos byte[] CFH DD LFH lfhBuf shortBuf skipBuf twoDwordBuf wordBuf CurrentEntry current boolean allowStoredEntriesWithDataDescriptor closed hasDataDescriptor hitCentralDirectory useUnicodeExtraFields usesZip64 ByteArrayInputStream lastStoredEntry ZipArchiveEntry entry Inflater inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	210	210	1	replace	
61	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] public ZipArchiveInputStream(final InputStream inputStream, final String encoding, final boolean useUnicodeExtraFields, final boolean allowStoredEntriesWithDataDescriptor) { [BUGGY] [BUGGY] this.encoding = encoding; zipEncoding = ZipEncodingHelper.getZipEncoding(encoding); this.useUnicodeExtraFields = useUnicodeExtraFields; in = new PushbackInputStream(inputStream, buf.capacity()); this.allowStoredEntriesWithDataDescriptor = allowStoredEntriesWithDataDescriptor;  buf.limit(0); } [CLASS] ZipArchiveInputStream CurrentEntry BoundedInputStream [METHOD] <init> [RETURN_TYPE] String,boolean,boolean)  InputStream inputStream String encoding final boolean useUnicodeExtraFields final boolean allowStoredEntriesWithDataDescriptor [VARIABLES] ZipEncoding zipEncoding CRC32 crc InputStream in inputStream String encoding ByteBuffer buf int CFH_LEN LFH_LEN entriesRead long TWO_EXP_32 bytesRead bytesReadFromStream max pos byte[] CFH DD LFH lfhBuf shortBuf skipBuf twoDwordBuf wordBuf CurrentEntry current boolean allowStoredEntriesWithDataDescriptor closed hasDataDescriptor hitCentralDirectory useUnicodeExtraFields usesZip64 ByteArrayInputStream lastStoredEntry ZipArchiveEntry entry Inflater inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	210	210	1	add	
62	[BUG] [BUGGY] zipEncoding = ZipEncodingHelper.getZipEncoding(encoding); [FE] AssertionError [CONTEXT] public ZipArchiveInputStream(final InputStream inputStream, final String encoding, final boolean useUnicodeExtraFields, final boolean allowStoredEntriesWithDataDescriptor) { this.encoding = encoding; [BUGGY] zipEncoding = ZipEncodingHelper.getZipEncoding(encoding); [BUGGY] this.useUnicodeExtraFields = useUnicodeExtraFields; in = new PushbackInputStream(inputStream, buf.capacity()); this.allowStoredEntriesWithDataDescriptor = allowStoredEntriesWithDataDescriptor;  buf.limit(0); } [CLASS] ZipArchiveInputStream CurrentEntry BoundedInputStream [METHOD] <init> [RETURN_TYPE] String,boolean,boolean)  InputStream inputStream String encoding final boolean useUnicodeExtraFields final boolean allowStoredEntriesWithDataDescriptor [VARIABLES] ZipEncoding zipEncoding CRC32 crc InputStream in inputStream String encoding ByteBuffer buf int CFH_LEN LFH_LEN entriesRead long TWO_EXP_32 bytesRead bytesReadFromStream max pos byte[] CFH DD LFH lfhBuf shortBuf skipBuf twoDwordBuf wordBuf CurrentEntry current boolean allowStoredEntriesWithDataDescriptor closed hasDataDescriptor hitCentralDirectory useUnicodeExtraFields usesZip64 ByteArrayInputStream lastStoredEntry ZipArchiveEntry entry Inflater inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	211	211	1	replace	
63	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] public ZipArchiveInputStream(final InputStream inputStream, final String encoding, final boolean useUnicodeExtraFields, final boolean allowStoredEntriesWithDataDescriptor) { this.encoding = encoding; [BUGGY] [BUGGY] zipEncoding = ZipEncodingHelper.getZipEncoding(encoding); this.useUnicodeExtraFields = useUnicodeExtraFields; in = new PushbackInputStream(inputStream, buf.capacity()); this.allowStoredEntriesWithDataDescriptor = allowStoredEntriesWithDataDescriptor;  buf.limit(0); } [CLASS] ZipArchiveInputStream CurrentEntry BoundedInputStream [METHOD] <init> [RETURN_TYPE] String,boolean,boolean)  InputStream inputStream String encoding final boolean useUnicodeExtraFields final boolean allowStoredEntriesWithDataDescriptor [VARIABLES] ZipEncoding zipEncoding CRC32 crc InputStream in inputStream String encoding ByteBuffer buf int CFH_LEN LFH_LEN entriesRead long TWO_EXP_32 bytesRead bytesReadFromStream max pos byte[] CFH DD LFH lfhBuf shortBuf skipBuf twoDwordBuf wordBuf CurrentEntry current boolean allowStoredEntriesWithDataDescriptor closed hasDataDescriptor hitCentralDirectory useUnicodeExtraFields usesZip64 ByteArrayInputStream lastStoredEntry ZipArchiveEntry entry Inflater inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	211	211	1	add	
64	[BUG] [BUGGY] this.useUnicodeExtraFields = useUnicodeExtraFields; [FE] AssertionError [CONTEXT] public ZipArchiveInputStream(final InputStream inputStream, final String encoding, final boolean useUnicodeExtraFields, final boolean allowStoredEntriesWithDataDescriptor) { this.encoding = encoding; zipEncoding = ZipEncodingHelper.getZipEncoding(encoding); [BUGGY] this.useUnicodeExtraFields = useUnicodeExtraFields; [BUGGY] in = new PushbackInputStream(inputStream, buf.capacity()); this.allowStoredEntriesWithDataDescriptor = allowStoredEntriesWithDataDescriptor;  buf.limit(0); } [CLASS] ZipArchiveInputStream CurrentEntry BoundedInputStream [METHOD] <init> [RETURN_TYPE] String,boolean,boolean)  InputStream inputStream String encoding final boolean useUnicodeExtraFields final boolean allowStoredEntriesWithDataDescriptor [VARIABLES] ZipEncoding zipEncoding CRC32 crc InputStream in inputStream String encoding ByteBuffer buf int CFH_LEN LFH_LEN entriesRead long TWO_EXP_32 bytesRead bytesReadFromStream max pos byte[] CFH DD LFH lfhBuf shortBuf skipBuf twoDwordBuf wordBuf CurrentEntry current boolean allowStoredEntriesWithDataDescriptor closed hasDataDescriptor hitCentralDirectory useUnicodeExtraFields usesZip64 ByteArrayInputStream lastStoredEntry ZipArchiveEntry entry Inflater inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	212	212	1	replace	
65	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] public ZipArchiveInputStream(final InputStream inputStream, final String encoding, final boolean useUnicodeExtraFields, final boolean allowStoredEntriesWithDataDescriptor) { this.encoding = encoding; zipEncoding = ZipEncodingHelper.getZipEncoding(encoding); [BUGGY] [BUGGY] this.useUnicodeExtraFields = useUnicodeExtraFields; in = new PushbackInputStream(inputStream, buf.capacity()); this.allowStoredEntriesWithDataDescriptor = allowStoredEntriesWithDataDescriptor;  buf.limit(0); } [CLASS] ZipArchiveInputStream CurrentEntry BoundedInputStream [METHOD] <init> [RETURN_TYPE] String,boolean,boolean)  InputStream inputStream String encoding final boolean useUnicodeExtraFields final boolean allowStoredEntriesWithDataDescriptor [VARIABLES] ZipEncoding zipEncoding CRC32 crc InputStream in inputStream String encoding ByteBuffer buf int CFH_LEN LFH_LEN entriesRead long TWO_EXP_32 bytesRead bytesReadFromStream max pos byte[] CFH DD LFH lfhBuf shortBuf skipBuf twoDwordBuf wordBuf CurrentEntry current boolean allowStoredEntriesWithDataDescriptor closed hasDataDescriptor hitCentralDirectory useUnicodeExtraFields usesZip64 ByteArrayInputStream lastStoredEntry ZipArchiveEntry entry Inflater inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	212	212	1	add	
66	[BUG] [BUGGY] in = new PushbackInputStream(inputStream, buf.capacity()); [FE] AssertionError [CONTEXT] public ZipArchiveInputStream(final InputStream inputStream, final String encoding, final boolean useUnicodeExtraFields, final boolean allowStoredEntriesWithDataDescriptor) { this.encoding = encoding; zipEncoding = ZipEncodingHelper.getZipEncoding(encoding); this.useUnicodeExtraFields = useUnicodeExtraFields; [BUGGY] in = new PushbackInputStream(inputStream, buf.capacity()); [BUGGY] this.allowStoredEntriesWithDataDescriptor = allowStoredEntriesWithDataDescriptor;  buf.limit(0); } [CLASS] ZipArchiveInputStream CurrentEntry BoundedInputStream [METHOD] <init> [RETURN_TYPE] String,boolean,boolean)  InputStream inputStream String encoding final boolean useUnicodeExtraFields final boolean allowStoredEntriesWithDataDescriptor [VARIABLES] ZipEncoding zipEncoding CRC32 crc InputStream in inputStream String encoding ByteBuffer buf int CFH_LEN LFH_LEN entriesRead long TWO_EXP_32 bytesRead bytesReadFromStream max pos byte[] CFH DD LFH lfhBuf shortBuf skipBuf twoDwordBuf wordBuf CurrentEntry current boolean allowStoredEntriesWithDataDescriptor closed hasDataDescriptor hitCentralDirectory useUnicodeExtraFields usesZip64 ByteArrayInputStream lastStoredEntry ZipArchiveEntry entry Inflater inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	213	213	1	replace	
67	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] public ZipArchiveInputStream(final InputStream inputStream, final String encoding, final boolean useUnicodeExtraFields, final boolean allowStoredEntriesWithDataDescriptor) { this.encoding = encoding; zipEncoding = ZipEncodingHelper.getZipEncoding(encoding); this.useUnicodeExtraFields = useUnicodeExtraFields; [BUGGY] [BUGGY] in = new PushbackInputStream(inputStream, buf.capacity()); this.allowStoredEntriesWithDataDescriptor = allowStoredEntriesWithDataDescriptor;  buf.limit(0); } [CLASS] ZipArchiveInputStream CurrentEntry BoundedInputStream [METHOD] <init> [RETURN_TYPE] String,boolean,boolean)  InputStream inputStream String encoding final boolean useUnicodeExtraFields final boolean allowStoredEntriesWithDataDescriptor [VARIABLES] ZipEncoding zipEncoding CRC32 crc InputStream in inputStream String encoding ByteBuffer buf int CFH_LEN LFH_LEN entriesRead long TWO_EXP_32 bytesRead bytesReadFromStream max pos byte[] CFH DD LFH lfhBuf shortBuf skipBuf twoDwordBuf wordBuf CurrentEntry current boolean allowStoredEntriesWithDataDescriptor closed hasDataDescriptor hitCentralDirectory useUnicodeExtraFields usesZip64 ByteArrayInputStream lastStoredEntry ZipArchiveEntry entry Inflater inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	213	213	1	add	
68	[BUG] [BUGGY] this.allowStoredEntriesWithDataDescriptor = allowStoredEntriesWithDataDescriptor; [FE] AssertionError [CONTEXT] public ZipArchiveInputStream(final InputStream inputStream, final String encoding, final boolean useUnicodeExtraFields, final boolean allowStoredEntriesWithDataDescriptor) { this.encoding = encoding; zipEncoding = ZipEncodingHelper.getZipEncoding(encoding); this.useUnicodeExtraFields = useUnicodeExtraFields; in = new PushbackInputStream(inputStream, buf.capacity()); [BUGGY] this.allowStoredEntriesWithDataDescriptor =   allowStoredEntriesWithDataDescriptor; [BUGGY] allowStoredEntriesWithDataDescriptor;  buf.limit(0); } [CLASS] ZipArchiveInputStream CurrentEntry BoundedInputStream [METHOD] <init> [RETURN_TYPE] String,boolean,boolean)  InputStream inputStream String encoding final boolean useUnicodeExtraFields final boolean allowStoredEntriesWithDataDescriptor [VARIABLES] ZipEncoding zipEncoding CRC32 crc InputStream in inputStream String encoding ByteBuffer buf int CFH_LEN LFH_LEN entriesRead long TWO_EXP_32 bytesRead bytesReadFromStream max pos byte[] CFH DD LFH lfhBuf shortBuf skipBuf twoDwordBuf wordBuf CurrentEntry current boolean allowStoredEntriesWithDataDescriptor closed hasDataDescriptor hitCentralDirectory useUnicodeExtraFields usesZip64 ByteArrayInputStream lastStoredEntry ZipArchiveEntry entry Inflater inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	214	215	1	replace	
69	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] public ZipArchiveInputStream(final InputStream inputStream, final String encoding, final boolean useUnicodeExtraFields, final boolean allowStoredEntriesWithDataDescriptor) { this.encoding = encoding; zipEncoding = ZipEncodingHelper.getZipEncoding(encoding); this.useUnicodeExtraFields = useUnicodeExtraFields; in = new PushbackInputStream(inputStream, buf.capacity()); [BUGGY] [BUGGY] this.allowStoredEntriesWithDataDescriptor =   allowStoredEntriesWithDataDescriptor; allowStoredEntriesWithDataDescriptor;  buf.limit(0); } [CLASS] ZipArchiveInputStream CurrentEntry BoundedInputStream [METHOD] <init> [RETURN_TYPE] String,boolean,boolean)  InputStream inputStream String encoding final boolean useUnicodeExtraFields final boolean allowStoredEntriesWithDataDescriptor [VARIABLES] ZipEncoding zipEncoding CRC32 crc InputStream in inputStream String encoding ByteBuffer buf int CFH_LEN LFH_LEN entriesRead long TWO_EXP_32 bytesRead bytesReadFromStream max pos byte[] CFH DD LFH lfhBuf shortBuf skipBuf twoDwordBuf wordBuf CurrentEntry current boolean allowStoredEntriesWithDataDescriptor closed hasDataDescriptor hitCentralDirectory useUnicodeExtraFields usesZip64 ByteArrayInputStream lastStoredEntry ZipArchiveEntry entry Inflater inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	214	215	1	add	
70	[BUG] [BUGGY] buf.limit(0); [FE] AssertionError [CONTEXT] final String encoding, final boolean useUnicodeExtraFields, final boolean allowStoredEntriesWithDataDescriptor) { this.encoding = encoding; zipEncoding = ZipEncodingHelper.getZipEncoding(encoding); this.useUnicodeExtraFields = useUnicodeExtraFields; in = new PushbackInputStream(inputStream, buf.capacity()); this.allowStoredEntriesWithDataDescriptor = allowStoredEntriesWithDataDescriptor;  [BUGGY] buf.limit(0); [BUGGY] } [CLASS] ZipArchiveInputStream CurrentEntry BoundedInputStream [METHOD] <init> [RETURN_TYPE] String,boolean,boolean)  InputStream inputStream String encoding final boolean useUnicodeExtraFields final boolean allowStoredEntriesWithDataDescriptor [VARIABLES] ZipEncoding zipEncoding CRC32 crc InputStream in inputStream String encoding ByteBuffer buf int CFH_LEN LFH_LEN entriesRead long TWO_EXP_32 bytesRead bytesReadFromStream max pos byte[] CFH DD LFH lfhBuf shortBuf skipBuf twoDwordBuf wordBuf CurrentEntry current boolean allowStoredEntriesWithDataDescriptor closed hasDataDescriptor hitCentralDirectory useUnicodeExtraFields usesZip64 ByteArrayInputStream lastStoredEntry ZipArchiveEntry entry Inflater inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	217	217	1	replace	
71	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] final String encoding, final boolean useUnicodeExtraFields, final boolean allowStoredEntriesWithDataDescriptor) { this.encoding = encoding; zipEncoding = ZipEncodingHelper.getZipEncoding(encoding); this.useUnicodeExtraFields = useUnicodeExtraFields; in = new PushbackInputStream(inputStream, buf.capacity()); this.allowStoredEntriesWithDataDescriptor = allowStoredEntriesWithDataDescriptor;  [BUGGY] [BUGGY] buf.limit(0); } [CLASS] ZipArchiveInputStream CurrentEntry BoundedInputStream [METHOD] <init> [RETURN_TYPE] String,boolean,boolean)  InputStream inputStream String encoding final boolean useUnicodeExtraFields final boolean allowStoredEntriesWithDataDescriptor [VARIABLES] ZipEncoding zipEncoding CRC32 crc InputStream in inputStream String encoding ByteBuffer buf int CFH_LEN LFH_LEN entriesRead long TWO_EXP_32 bytesRead bytesReadFromStream max pos byte[] CFH DD LFH lfhBuf shortBuf skipBuf twoDwordBuf wordBuf CurrentEntry current boolean allowStoredEntriesWithDataDescriptor closed hasDataDescriptor hitCentralDirectory useUnicodeExtraFields usesZip64 ByteArrayInputStream lastStoredEntry ZipArchiveEntry entry Inflater inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	217	217	1	add	
72	[BUG] [BUGGY] } [FE] AssertionError [CONTEXT] final boolean useUnicodeExtraFields, final boolean allowStoredEntriesWithDataDescriptor) { this.encoding = encoding; zipEncoding = ZipEncodingHelper.getZipEncoding(encoding); this.useUnicodeExtraFields = useUnicodeExtraFields; in = new PushbackInputStream(inputStream, buf.capacity()); this.allowStoredEntriesWithDataDescriptor = allowStoredEntriesWithDataDescriptor;  buf.limit(0); [BUGGY] } [BUGGY]  [CLASS] ZipArchiveInputStream CurrentEntry BoundedInputStream [METHOD] <init> [RETURN_TYPE] String,boolean,boolean)  InputStream inputStream String encoding final boolean useUnicodeExtraFields final boolean allowStoredEntriesWithDataDescriptor [VARIABLES] ZipEncoding zipEncoding CRC32 crc InputStream in inputStream String encoding ByteBuffer buf int CFH_LEN LFH_LEN entriesRead long TWO_EXP_32 bytesRead bytesReadFromStream max pos byte[] CFH DD LFH lfhBuf shortBuf skipBuf twoDwordBuf wordBuf CurrentEntry current boolean allowStoredEntriesWithDataDescriptor closed hasDataDescriptor hitCentralDirectory useUnicodeExtraFields usesZip64 ByteArrayInputStream lastStoredEntry ZipArchiveEntry entry Inflater inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	218	218	1	replace	
73	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] final boolean useUnicodeExtraFields, final boolean allowStoredEntriesWithDataDescriptor) { this.encoding = encoding; zipEncoding = ZipEncodingHelper.getZipEncoding(encoding); this.useUnicodeExtraFields = useUnicodeExtraFields; in = new PushbackInputStream(inputStream, buf.capacity()); this.allowStoredEntriesWithDataDescriptor = allowStoredEntriesWithDataDescriptor;  buf.limit(0); [BUGGY] [BUGGY] } [CLASS] ZipArchiveInputStream CurrentEntry BoundedInputStream [METHOD] <init> [RETURN_TYPE] String,boolean,boolean)  InputStream inputStream String encoding final boolean useUnicodeExtraFields final boolean allowStoredEntriesWithDataDescriptor [VARIABLES] ZipEncoding zipEncoding CRC32 crc InputStream in inputStream String encoding ByteBuffer buf int CFH_LEN LFH_LEN entriesRead long TWO_EXP_32 bytesRead bytesReadFromStream max pos byte[] CFH DD LFH lfhBuf shortBuf skipBuf twoDwordBuf wordBuf CurrentEntry current boolean allowStoredEntriesWithDataDescriptor closed hasDataDescriptor hitCentralDirectory useUnicodeExtraFields usesZip64 ByteArrayInputStream lastStoredEntry ZipArchiveEntry entry Inflater inf  	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	218	218	1	add	
74	[BUG] [BUGGY] private static final byte[] LFH = ZipLong.LFH_SIG.getBytes(); [FE] AssertionError [CONTEXT] [BUGGY] private static final byte[] LFH = ZipLong.LFH_SIG.getBytes(); [BUGGY]  [CLASS] ZipArchiveInputStream CurrentEntry BoundedInputStream  [VARIABLES] 	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	858	858	1	replace	
75	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] [BUGGY] [BUGGY] private static final byte[] LFH = ZipLong.LFH_SIG.getBytes(); [CLASS] ZipArchiveInputStream CurrentEntry BoundedInputStream  [VARIABLES] 	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	858	858	1	add	
76	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] private static final byte[] LFH = ZipLong.LFH_SIG.getBytes(); [CLASS] ZipArchiveInputStream CurrentEntry BoundedInputStream  [VARIABLES] 	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	859	859	1	replace	
77	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] private static final byte[] LFH = ZipLong.LFH_SIG.getBytes(); [CLASS] ZipArchiveInputStream CurrentEntry BoundedInputStream  [VARIABLES] 	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	859	859	1	add	
78	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] private static final byte[] LFH = ZipLong.LFH_SIG.getBytes(); [CLASS] ZipArchiveInputStream CurrentEntry BoundedInputStream  [VARIABLES] 	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	860	860	1	replace	
79	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] private static final byte[] LFH = ZipLong.LFH_SIG.getBytes(); [CLASS] ZipArchiveInputStream CurrentEntry BoundedInputStream  [VARIABLES] 	projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	0.24253562503633297	860	860	1	add	
