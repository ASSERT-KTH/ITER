projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnZipUtil.canHandleEntryData(ze)&&supportsDataDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnZipUtil.canHandleEntryData(ze)||supportsDataDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnZipUtil.canHandleEntryData(entry)&&supportsDataDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnZipUtil.canReadEntryData(ze)||supportsDataDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnZipUtil.canHandleEntryData(entry)||supportsDataDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnzipEncoding.canHandleEntryData(ze)&&supportsDataDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnze.canHandleEntryData()&&supportsDataDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasDataDescriptor&&supportsDataDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasDataDescriptor&&ZipUtil.canHandleEntryData(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnZipUtil.canReadEntryData(ze)&&supportsDataDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnZipUtil.canHandleEntryData(entry)&&supportsUnicodeExtraFieldsFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnZipUtil.canHandleEntryData(ze)&&supportsUnicodeExtraFields(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnZipUtil.canHandleEntryData(ze)&&supportsDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnZipUtil.canHandleEntryData(ze)&&supportsZip64For(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnZipUtil.canReadEntryData(entry)||supportsDataDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnZipUtil.canReadEntryData(entry)&&supportsDataDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnZipUtil.canReadEntryData(ae)||supportsDataDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnzipEncoding.canReadEntryData(ze)||supportsDataDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414&&supportsDataDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnZipUtil.canReadEntryData(ze)||supportsZip64For(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnzipEncoding.canHandleEntryData(entry)&&supportsDataDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnentryEncoding.canHandleEntryData(ze)&&supportsDataDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnze.canHandleEntryData(zipEncoding)&&supportsDataDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnzipEncoding.canHandleEntryData(ze)||supportsDataDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnzipEncoding.canHandleEntryData(ae)&&supportsDataDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasDataDescriptor&&zipEncoding.canHandleEntryData(ze)&&supportsDataDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnzipEncoding.canHandleEntryData(ze)&&supportsZip64For(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasDataDescriptor&&ZipUtil.canHandleEntryData(entry);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasDataDescriptor&&ZipUtil.canReadEntryData(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasDataDescriptor||ZipUtil.canHandleEntryData(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasDataDescriptor&&ZipUtil.canReadEntryData(entry);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasDataDescriptor&&ZipUtil.canHandleEntryData(ze,entry);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasDescriptor&&ZipUtil.canHandleEntryData(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasDataDescriptor||supportsDataDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasEntryDataDescriptor&&supportsDataDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasUTF8Flag&&supportsDataDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasDescriptor&&supportsDataDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasValueDescriptor&&supportsDataDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasDataDescriptor&&supportsZip64For(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasDataDescriptor&&supportsUseUnicodeExtraFieldsFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnZipUtil.canHandleEntryData(entry)&&supportsUnicodeExtraFields(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnZipUtil.canHandleEntryData(ze)||supportsUnicodeExtraFields(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnzipEncoding.canHandleEntryData(ze)&&supportsUnicodeExtraFields(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnZipUtil.canHandleEntryData(ae)&&supportsUnicodeExtraFields(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnZipUtil.canHandleEntryData(ze)&&supportsZip64(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnZipUtil.canHandleEntryData(entry)&&supportsZip64(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnze.canHandleEntryData()&&supportsUnicodeExtraFields(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnZipUtil.canHandleEntryData(entry)||supportsUnicodeExtraFieldsFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnzipEncoding.canHandleEntryData(entry)&&supportsUnicodeExtraFieldsFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnZipUtil.canHandleEntryData(entry)&&supportsZip64For(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnZipUtil.canHandleEntryData(ze)&&supportsUnicodeExtraFieldsFor(entry);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnZipUtil.canHandleEntryData(ze)&&supportsUnicodeExtraFieldsFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasDataDescriptor&&supportsUnicodeExtraFieldsFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnZipUtil.canHandleEntryData(entry)&&supportsFieldsFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnzipEncoding.canHandleEntryData(entry)||supportsDataDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnZipUtil.canHandleEntryData(entry,ae)||supportsDataDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnZipUtil.canHandleEntryData(entry)||supportsZip64For(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnZipUtil.canHandleEntryData(ze)||supportsZip64For(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnZipUtil.canHandleEntryData(entry)&&supportsFileDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnze.canHandleEntryData()||supportsDataDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnze.canHandleEntryData()&&supportsZip64For(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnze.canHandleEntryData()&&hasUTF8Flag&&supportsDataDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnentry.canHandleEntryData()&&supportsDataDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnze.canHandleEntryData()&&supportsFieldDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnze.canReadEntryData()&&supportsDataDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnZipUtil.canHandleEntryData(ze)||supportsDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnZipUtil.canHandleEntryData(ze)||supportsFileDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnZipUtil.canHandleEntryData(ze)&&supportsFunctionDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414if(entry.getValue()==null){finalStringencoding=ze.getEncoding();if(encoding!=null){returntrue;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414if(entry.getValue()==null){finalStringencoding=ze.getEncoding();if(encoding!=null){returnfalse;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414Inflaterinf=ze.getInputStream();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414if(entry.getValue()==null){for(ArchiveEntryze:entry.getValue()){returntrue;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414if(entry.getValue()==null){for(ArchiveEntryze:entry.getValues()){returntrue;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414if(entry.getValue()==null){for(inti=0,len=entry.length;i<len;++i){returntrue;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414if(entry.getValue()==null){for(ArchiveEntryze:ze.getValue()){returntrue;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnZipUtil.canHandleEntryData(entry)&&supportsDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnZipUtil.canHandleEntryData(entry)&&supportsFileDataDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnZipUtil.canHandleEntryData(ae)&&supportsZip64For(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnZipUtil.canHandleEntryData(ze)&&supportsFileDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnZipUtil.canHandleEntryData(ze)&&supportsFieldsFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414if(zeinstanceofZipArchiveEntry){returnZipUtil.canReadEntryData(ze)&&supportsDataDescriptorFor(ze);}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnZipUtil.canReadEntryData(ae)&&supportsDataDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnzipEncoding.canReadEntryData(ze)&&supportsDataDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414if(zeinstanceofZipArchiveEntry){returnZipUtil.canReadEntryData(ze)&&supportsDataDescriptorFor(ze);}else{returntrue;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414if(zeinstanceofZipArchiveEntry){returnZipUtil.canReadEntryData(ze)&&supportsDataDescriptorFor(ze);}else{returnfalse;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414if(zeinstanceofZipArchiveEntry){returnZipUtil.canHandleEntryData(ze)&&supportsDescriptorFor(ze);}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnzipEncoding.canHandleEntryData(ze)&&supportsDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnZipUtil.canHandleEntryData(ae)&&supportsDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414if(zeinstanceofZipArchiveEntry){returnZipUtil.canHandleEntryData(ze)&&supportsDescriptorFor(ze);}else{returntrue;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasDataDescriptor&&supportsUnicodeExtraFields(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasDataDescriptor&&ZipUtil.canHandleEntryData(ze)&&supportsDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasDataDescriptor||ZipUtil.canHandleEntryData(ze)&&supportsDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnze.canHandleEntryData()&&supportsDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnze.canHandleEntryData(zipEncoding)&&supportsUnicodeExtraFieldsFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnentryEncoding.canHandleEntryData(ze)&&supportsUnicodeExtraFieldsFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasDataDescriptor&&zipEncoding.canHandleEntryData(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnentryEncoding.canHandleEntryData(ze)&&supportsZip64For(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnze.canReadEntryData()||supportsDataDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnze.canHandleEntryData()&&hasUTF8Flag;
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasDataDescriptor||ZipUtil.canReadEntryData(ze)&&supportsDataDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnZipUtil.canReadEntryData(entry)&&supportsUnicodeExtraFieldsFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnZipUtil.canReadEntryData(ze)&&supportsFileDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasDataDescriptor&&ZipUtil.canHandleEntryData(ze)||supportsDataDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasUTF8Flag&&supportsUnicodeExtraFieldsFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasZip64&&supportsDataDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasFlag&&supportsDataDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasEntryDescriptor&&supportsDataDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasUTF8Flag&&supportsUseUnicodeExtraFieldsFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasDataDescriptor&&ZipUtil.canHandleEntryData(entry)||supportsDataDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasDataDescriptor&&zipEncoding.canHandleEntryData(entry)||supportsDataDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnze.canHandleEntryData(entry)||supportsDataDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasDataDescriptor||ZipUtil.canHandleEntryData(entry)&&supportsDataDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasDataDescriptor&&ZipUtil.canHandleEntryData(entry)&&supportsDataDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasDataDescriptor&&zipEncoding.canHandleEntryData(entry);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414if(ze!=null){if(entry.getName().endsWith("/")){returntrue;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414if(ze!=null){if(entry.getName().equals(zipEncoding)){returntrue;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414if(ze!=null){if(entry.hasDataDescriptor()){returntrue;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414if(ze!=null){if(entry.canRead()){returntrue;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414if(ze!=null){if(entry.getName().startsWith("/")){returntrue;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414if(ze!=null){if(entry.getName().endsWith("/")){returnfalse;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414Inflaterinf=entryEncoding.getInputStream();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasDataDescriptor||ZipUtil.canHandleEntryData(entry)&&supportsUnicodeExtraFieldsFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnze.canHandleEntryData(entry)&&supportsUnicodeExtraFieldsFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasUTF8Flag&&ZipUtil.canHandleEntryData(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasFlag&&ZipUtil.canHandleEntryData(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasDataDescriptor&&ZipUtil.canReadEntryData(ze)||supportsDataDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnZipUtil.canReadEntryData(ze)||supportsFileDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnZipUtil.canReadEntryData(entry)||supportsZip64For(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnZipUtil.canHandleEntryData(ze)||supportsUnicodeExtraFieldsFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnze.canHandleEntryData()&&canStoredEntriesWithDataDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnze.canHandleEntryData()&&supportsUnicodeExtraFieldsFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnZipUtil.canReadEntryData(ze)||supportsDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnZipUtil.canHandleEntryData(entry)&&supportsZip64;
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnZipUtil.canHandleEntryData(ze)&&supportsZip64;
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnZipUtil.canHandleEntryData(entry)&&supportsFileExtraFieldsFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414if(ze!=null){if(entry.getName().endsWith("Archive")){returntrue;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414intpos=entryEncoding.indexOf(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414if(ze!=null){if(entry.getMethod()==ZipEncoding.UTF8){returntrue;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414if(ze!=null){if(entry.getMethod()==ZipEncoding.DEFAULT){returntrue;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414if(ze!=null){if(entry.getName().length()==0){returntrue;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnZipUtil.canHandleEntryData(ze)&&supportsFileExtraFields(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnZipUtil.canReadEntryData(ze)&&supportsUnicodeExtraFields(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnZipUtil.canReadEntryData(ze)&&supportsZip64For(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasDataDescriptor&&ZipUtil.canReadArchiveEntryData(ze);
