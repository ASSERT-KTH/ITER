projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnZipUtil.canHandleEntryData(ze)&&supportsDataDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnZipUtil.canHandleEntryData(ze)||supportsDataDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnZipUtil.canHandleEntryData(entry)&&supportsDataDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnZipUtil.canReadEntryData(ze)||supportsDataDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnZipUtil.canHandleEntryData(entry)||supportsDataDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnzipEncoding.canHandleEntryData(ze)&&supportsDataDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnze.canHandleEntryData()&&supportsDataDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasDataDescriptor&&supportsDataDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasDataDescriptor&&ZipUtil.canHandleEntryData(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnZipUtil.canReadEntryData(ze)&&supportsDataDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnZipUtil.canHandleEntryData(entry)&&supportsUnicodeExtraFieldsFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnZipUtil.canHandleEntryData(ze)&&supportsUnicodeExtraFields(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnZipUtil.canHandleEntryData(ze)&&supportsDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnZipUtil.canHandleEntryData(ze)&&supportsZip64For(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnZipUtil.canReadEntryData(entry)||supportsDataDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnZipUtil.canReadEntryData(entry)&&supportsDataDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnZipUtil.canReadEntryData(ae)||supportsDataDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnzipEncoding.canReadEntryData(ze)||supportsDataDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414&&supportsDataDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnZipUtil.canReadEntryData(ze)||supportsZip64For(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnzipEncoding.canHandleEntryData(entry)&&supportsDataDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnentryEncoding.canHandleEntryData(ze)&&supportsDataDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnze.canHandleEntryData(zipEncoding)&&supportsDataDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnzipEncoding.canHandleEntryData(ze)||supportsDataDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnzipEncoding.canHandleEntryData(ae)&&supportsDataDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasDataDescriptor&&zipEncoding.canHandleEntryData(ze)&&supportsDataDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnzipEncoding.canHandleEntryData(ze)&&supportsZip64For(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasDataDescriptor&&ZipUtil.canHandleEntryData(entry);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasDataDescriptor&&ZipUtil.canReadEntryData(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasDataDescriptor||ZipUtil.canHandleEntryData(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasDataDescriptor&&ZipUtil.canReadEntryData(entry);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasDataDescriptor&&ZipUtil.canHandleEntryData(ze,entry);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasDescriptor&&ZipUtil.canHandleEntryData(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasDataDescriptor||supportsDataDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasEntryDataDescriptor&&supportsDataDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasUTF8Flag&&supportsDataDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasDescriptor&&supportsDataDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasValueDescriptor&&supportsDataDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasDataDescriptor&&supportsZip64For(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasDataDescriptor&&supportsUseUnicodeExtraFieldsFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnZipUtil.canHandleEntryData(entry)&&supportsUnicodeExtraFields(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnZipUtil.canHandleEntryData(ze)||supportsUnicodeExtraFields(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnzipEncoding.canHandleEntryData(ze)&&supportsUnicodeExtraFields(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnZipUtil.canHandleEntryData(ae)&&supportsUnicodeExtraFields(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnZipUtil.canHandleEntryData(ze)&&supportsZip64(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnZipUtil.canHandleEntryData(entry)&&supportsZip64(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnze.canHandleEntryData()&&supportsUnicodeExtraFields(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnZipUtil.canHandleEntryData(entry)||supportsUnicodeExtraFieldsFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnzipEncoding.canHandleEntryData(entry)&&supportsUnicodeExtraFieldsFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnZipUtil.canHandleEntryData(entry)&&supportsZip64For(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnZipUtil.canHandleEntryData(ze)&&supportsUnicodeExtraFieldsFor(entry);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnZipUtil.canHandleEntryData(ze)&&supportsUnicodeExtraFieldsFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasDataDescriptor&&supportsUnicodeExtraFieldsFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnZipUtil.canHandleEntryData(entry)&&supportsFieldsFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnzipEncoding.canHandleEntryData(entry)||supportsDataDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnZipUtil.canHandleEntryData(entry,ae)||supportsDataDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnZipUtil.canHandleEntryData(entry)||supportsZip64For(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnZipUtil.canHandleEntryData(ze)||supportsZip64For(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnZipUtil.canHandleEntryData(entry)&&supportsFileDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnze.canHandleEntryData()||supportsDataDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnze.canHandleEntryData()&&supportsZip64For(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnze.canHandleEntryData()&&hasUTF8Flag&&supportsDataDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnentry.canHandleEntryData()&&supportsDataDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnze.canHandleEntryData()&&supportsFieldDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnze.canReadEntryData()&&supportsDataDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnZipUtil.canHandleEntryData(ze)||supportsDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnZipUtil.canHandleEntryData(ze)||supportsFileDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnZipUtil.canHandleEntryData(ze)&&supportsFunctionDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414if(entry.getValue()==null){finalStringencoding=ze.getEncoding();if(encoding!=null){returntrue;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414if(entry.getValue()==null){finalStringencoding=ze.getEncoding();if(encoding!=null){returnfalse;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414Inflaterinf=ze.getInputStream();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414if(entry.getValue()==null){for(ArchiveEntryze:entry.getValue()){returntrue;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414if(entry.getValue()==null){for(ArchiveEntryze:entry.getValues()){returntrue;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414if(entry.getValue()==null){for(inti=0,len=entry.length;i<len;++i){returntrue;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414if(entry.getValue()==null){for(ArchiveEntryze:ze.getValue()){returntrue;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnZipUtil.canHandleEntryData(entry)&&supportsDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnZipUtil.canHandleEntryData(entry)&&supportsFileDataDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnZipUtil.canHandleEntryData(ae)&&supportsZip64For(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnZipUtil.canHandleEntryData(ze)&&supportsFileDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnZipUtil.canHandleEntryData(ze)&&supportsFieldsFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414if(zeinstanceofZipArchiveEntry){returnZipUtil.canReadEntryData(ze)&&supportsDataDescriptorFor(ze);}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnZipUtil.canReadEntryData(ae)&&supportsDataDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnzipEncoding.canReadEntryData(ze)&&supportsDataDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414if(zeinstanceofZipArchiveEntry){returnZipUtil.canReadEntryData(ze)&&supportsDataDescriptorFor(ze);}else{returntrue;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414if(zeinstanceofZipArchiveEntry){returnZipUtil.canReadEntryData(ze)&&supportsDataDescriptorFor(ze);}else{returnfalse;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414if(zeinstanceofZipArchiveEntry){returnZipUtil.canHandleEntryData(ze)&&supportsDescriptorFor(ze);}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnzipEncoding.canHandleEntryData(ze)&&supportsDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnZipUtil.canHandleEntryData(ae)&&supportsDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414if(zeinstanceofZipArchiveEntry){returnZipUtil.canHandleEntryData(ze)&&supportsDescriptorFor(ze);}else{returntrue;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasDataDescriptor&&supportsUnicodeExtraFields(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasDataDescriptor&&ZipUtil.canHandleEntryData(ze)&&supportsDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasDataDescriptor||ZipUtil.canHandleEntryData(ze)&&supportsDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnze.canHandleEntryData()&&supportsDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnze.canHandleEntryData(zipEncoding)&&supportsUnicodeExtraFieldsFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnentryEncoding.canHandleEntryData(ze)&&supportsUnicodeExtraFieldsFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasDataDescriptor&&zipEncoding.canHandleEntryData(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnentryEncoding.canHandleEntryData(ze)&&supportsZip64For(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnze.canReadEntryData()||supportsDataDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnze.canHandleEntryData()&&hasUTF8Flag;
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasDataDescriptor||ZipUtil.canReadEntryData(ze)&&supportsDataDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnZipUtil.canReadEntryData(entry)&&supportsUnicodeExtraFieldsFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnZipUtil.canReadEntryData(ze)&&supportsFileDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasDataDescriptor&&ZipUtil.canHandleEntryData(ze)||supportsDataDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasUTF8Flag&&supportsUnicodeExtraFieldsFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasZip64&&supportsDataDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasFlag&&supportsDataDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasEntryDescriptor&&supportsDataDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasUTF8Flag&&supportsUseUnicodeExtraFieldsFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasDataDescriptor&&ZipUtil.canHandleEntryData(entry)||supportsDataDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasDataDescriptor&&zipEncoding.canHandleEntryData(entry)||supportsDataDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnze.canHandleEntryData(entry)||supportsDataDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasDataDescriptor||ZipUtil.canHandleEntryData(entry)&&supportsDataDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasDataDescriptor&&ZipUtil.canHandleEntryData(entry)&&supportsDataDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasDataDescriptor&&zipEncoding.canHandleEntryData(entry);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414if(ze!=null){if(entry.getName().endsWith("/")){returntrue;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414if(ze!=null){if(entry.getName().equals(zipEncoding)){returntrue;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414if(ze!=null){if(entry.hasDataDescriptor()){returntrue;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414if(ze!=null){if(entry.canRead()){returntrue;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414if(ze!=null){if(entry.getName().startsWith("/")){returntrue;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414if(ze!=null){if(entry.getName().endsWith("/")){returnfalse;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414Inflaterinf=entryEncoding.getInputStream();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasDataDescriptor||ZipUtil.canHandleEntryData(entry)&&supportsUnicodeExtraFieldsFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnze.canHandleEntryData(entry)&&supportsUnicodeExtraFieldsFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasUTF8Flag&&ZipUtil.canHandleEntryData(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasFlag&&ZipUtil.canHandleEntryData(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasDataDescriptor&&ZipUtil.canReadEntryData(ze)||supportsDataDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnZipUtil.canReadEntryData(ze)||supportsFileDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnZipUtil.canReadEntryData(entry)||supportsZip64For(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnZipUtil.canHandleEntryData(ze)||supportsUnicodeExtraFieldsFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnze.canHandleEntryData()&&canStoredEntriesWithDataDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnze.canHandleEntryData()&&supportsUnicodeExtraFieldsFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnZipUtil.canReadEntryData(ze)||supportsDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnZipUtil.canHandleEntryData(entry)&&supportsZip64;
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnZipUtil.canHandleEntryData(ze)&&supportsZip64;
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnZipUtil.canHandleEntryData(entry)&&supportsFileExtraFieldsFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414if(ze!=null){if(entry.getName().endsWith("Archive")){returntrue;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414intpos=entryEncoding.indexOf(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414if(ze!=null){if(entry.getMethod()==ZipEncoding.UTF8){returntrue;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414if(ze!=null){if(entry.getMethod()==ZipEncoding.DEFAULT){returntrue;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414if(ze!=null){if(entry.getName().length()==0){returntrue;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnZipUtil.canHandleEntryData(ze)&&supportsFileExtraFields(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnZipUtil.canReadEntryData(ze)&&supportsUnicodeExtraFields(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnZipUtil.canReadEntryData(ze)&&supportsZip64For(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasDataDescriptor&&ZipUtil.canReadArchiveEntryData(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnZipUtil.canHandleEntryData(entry)||supportsFileDataDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnzipEncoding.canHandleEntryData(entry)&&supportsFileDataDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnZipUtil.canHandleEntryData(ze)&&supportsFileDataDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnZipUtil.canHandleEntryData(ze)||supportsFileDataDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnze.canHandleEntryData(entry)&&supportsFileDataDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnZipUtil.canReadEntryData(entry)&&supportsFileDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414if(zeinstanceofZipArchiveEntry){returnZipUtil.canReadEntryData(ze)&&supportsFileDescriptorFor(ze);}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnzipEncoding.canReadEntryData(ze)&&supportsFileDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414if(ze!=null){returnZipUtil.canReadEntryData(ze)&&supportsFileDescriptorFor(ze);}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnZipUtil.canReadEntryData(ae)&&supportsFileDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnZipUtil.canHandleEntryData(entry)||supportsFieldsFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnzipEncoding.canHandleEntryData(entry)&&supportsFieldsFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnZipUtil.canHandleEntryData(ze)&&supportsFieldsFor(entry);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnze.canHandleEntryData()||supportsZip64For(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnze.canHandleEntryData()&&supportsZip64For(entry);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnentry.canHandleEntryData()&&supportsZip64For(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnze.canHandleEntryData()&&supportsZip64For(ae);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnze.canHandleEntryData()&&supportsFieldsFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasDataDescriptor||ZipUtil.canHandleEntryData(entry);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasDataDescriptor&&ZipUtil.canHandleEntryData(entry,ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414&&supportsUnicodeExtraFieldsFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414&&supportsZip64For(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414&&supportsUseUnicodeExtraFields(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414&&supportsFileDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414&&supportsFieldDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414&&supportsEntryDataDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasUTF8Flag&&supportsZip64For(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasUTF8Flag||supportsUnicodeExtraFieldsFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasUTF8Flag&&supportsUicodeExtraFieldsFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasUTF8Flag&&supportsFieldsFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasUTF8Flag&&supportsUnicodeExtraFieldsFor(ze.getEntry());
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnentryEncoding.canHandleEntryData(ze)||supportsZip64For(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnze.canHandleEntryData(entry)&&supportsZip64For(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnze.canHandleEntryData(entryEncoding)&&supportsZip64For(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnentryEncoding.canHandleEntryData(ze)&&supportsFileDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnentryEncoding.canHandleEntryData(ze)&&supportsZip64For(ze,ae);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnentryEncoding.canHandleEntryData(ze)||supportsDataDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnze.canHandleEntryData(zipEncoding)||supportsDataDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnzipEncoding.canHandleEntryData(ae)||supportsDataDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnzipEncoding.canHandleEntryData(ze)||supportsZip64For(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasDataDescriptor||ZipUtil.canReadEntryData(entry);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasDataDescriptor||ZipUtil.canReadEntryData(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasDataDescriptor&&ZipUtil.canReadEntryData(entry,ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasDescriptor&&ZipUtil.canReadEntryData(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasDataDescriptor&&zipEncoding.canReadEntryData(entry);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnZipUtil.canReadEntryData(entry)||supportsUnicodeExtraFieldsFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnzipEncoding.canReadEntryData(entry)&&supportsUnicodeExtraFieldsFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnZipUtil.canReadEntryData(entry)&&supportsZip64For(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnZipUtil.canReadEntryData(ze)&&supportsUnicodeExtraFieldsFor(entry);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnZipUtil.canReadEntryData(ze)&&supportsUnicodeExtraFieldsFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnZipUtil.canReadEntryData(entry)&&supportsFieldsFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnZipUtil.canReadEntryData(entry)&&supportsUnicodeExtraFieldsFor(ae);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasDataDescriptor||supportsUseUnicodeExtraFieldsFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasValueDescriptor&&supportsUseUnicodeExtraFieldsFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasDataDescriptor&&supportsUseUnicodeExtraFields(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasDescriptor&&supportsUseUnicodeExtraFieldsFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasEntryDescriptor&&supportsUseUnicodeExtraFieldsFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414if(entry.getName().endsWith("Archive")){returntrue;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414if(entry.getName().endsWith(".Archive")){returntrue;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414if(entry!=null){if(entry.getName().endsWith("Archive")){returntrue;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnZipUtil.canHandleEntryData(ae)||supportsZip64For(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnZipUtil.canHandleEntryData(ze)||supportsZip64For(ae);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnentryEncoding.canHandleEntryData(ze)||supportsUnicodeExtraFieldsFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnze.canHandleEntryData(entry)&&supportsUnicodeExtraFieldsFor(zipEncoding);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnzipEncoding.canHandleEntryData(entry)||supportsUnicodeExtraFieldsFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnentryEncoding.canHandleEntryData(ze)&&supportsUnicodeExtraFieldsFor(z);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnzipEncoding.canHandleEntryData(ze)&&supportsUnicodeExtraFieldsFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnZipUtil.canHandleEntryData(entry)||supportsFileDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414if(zeinstanceofZipArchiveEntry){returnZipUtil.canHandleEntryData(ze)||supportsFileDescriptorFor(ze);}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnzipEncoding.canHandleEntryData(ze)||supportsFileDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnZipUtil.canHandleEntryData(ae)||supportsFileDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasDataDescriptor||supportsZip64For(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasDataDescriptor&&supportsUicodeExtraFieldsFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasDescriptor&&supportsZip64For(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasDataDescriptor&&supportsZip64For(ze.getValue());
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnZipUtil.canReadEntryData(entry)&&supportsUnicodeExtraFields(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnZipUtil.canReadEntryData(ze)||supportsUnicodeExtraFields(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnzipEncoding.canReadEntryData(ze)&&supportsUnicodeExtraFields(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnZipUtil.canReadEntryData(ae)&&supportsUnicodeExtraFields(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnZipUtil.canReadEntryData(entry)&&supportsZip64(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnZipUtil.canReadEntryData(ze)&&supportsZip64(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnze.canReadEntryData()&&supportsUnicodeExtraFields(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414finalStringencoding=ze.getEncoding();if(encoding!=null){returntrue;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414if(entry.getValue()!=null){finalStringencoding=ze.getEncoding();if(encoding!=null){returntrue;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414if(ze.getValue()!=null){finalStringencoding=ze.getEncoding();if(encoding!=null){returntrue;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414if(ze.getValue()==null){finalStringencoding=ze.getEncoding();if(encoding!=null){returntrue;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414if(entry.getValue()!=null){finalStringencoding=ae.getEncoding();if(encoding!=null){returntrue;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414if(entry.getValue()!=null){finalStringencoding=ze.getEncoding();if(encoding==null){returntrue;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasDescriptor||supportsDataDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasDescriptor&&supportsUnicodeExtraFieldsFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasDescriptor&&supportsUseUnicodeExtraFields(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasDescriptor&&supportsDataDescriptorFor(ze.getValue());
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnZipUtil.canHandleEntryData(entry)||supportsUnicodeExtraFields(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnzipEncoding.canHandleEntryData(ze)||supportsUnicodeExtraFields(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnZipUtil.canHandleEntryData(ze)||supportsZip64(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnZipUtil.canHandleEntryData(entry)||supportsZip64(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasDataDescriptor&&zipEncoding.canReadEntryData(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasDataDescriptor&&entryEncoding.canHandleEntryData(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasDataDescriptor||zipEncoding.canHandleEntryData(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnzipEncoding&&hasDataDescriptor.canHandleEntryData(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnzipEncoding&&hasDataDescriptor.canHandleEntryData(entry);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnzipEncoding.canHandleEntryData(entry);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnentry.canHandleEntryData(ze)&&supportsDataDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnentry.canHandleEntryData(ze)||supportsUnicodeExtraFieldsFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnze.canHandleEntryData(entry)||supportsZip64For(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasDataDescriptorFor(ze)||supportsDataDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnentry.canHandleEntryData(ze)||supportsZip64For(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnze.canHandleEntryData(entry)&&supportsDataDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnZipUtil.canReadEntryData(entry,ae)||supportsDataDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnzipEncoding.canReadEntryData(entry)||supportsDataDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnzipEncoding.canReadEntryData(entry)&&supportsDataDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414if(zeinstanceofZipArchiveEntry){returnZipUtil.canHandleEntryData(entry)&&supportsDescriptorFor(ze);}else{returntrue;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414if(zeinstanceofZipArchiveEntry){returnZipUtil.canHandleEntryData(ze)||supportsDescriptorFor(ze);}else{returntrue;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414if(aeinstanceofZipArchiveEntry){returnZipUtil.canHandleEntryData(ze)&&supportsDescriptorFor(ze);}else{returntrue;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414if(zeinstanceofArchiveEntry){returnZipUtil.canHandleEntryData(entry)&&supportsDescriptorFor(ze);}else{returntrue;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414if(entryinstanceofZipArchiveEntry){returnZipUtil.canHandleEntryData(ze)&&supportsDescriptorFor(ze);}else{returntrue;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414if(zeinstanceofArchiveEntry){returnZipUtil.canHandleEntryData(ze)||supportsDescriptorFor(ze);}else{returntrue;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasDataDescriptorFor(ze.canHandleEntryData()||supportsDataDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnentry.canHandleEntryData()||supportsDataDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasDataDescriptorFor(ze.canHandleEntryData())||supportsDataDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnze.canHandleEntryData()||supportsFieldDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnZipUtil.canHandleEntryData(entry)&&supportsFileExtraFields(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnZipUtil.canHandleEntryData(ze)||supportsFileExtraFields(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnzipEncoding.canHandleEntryData(ze)&&supportsFileExtraFields(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnZipUtil.canHandleEntryData(ae)&&supportsFileExtraFields(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnZipUtil.canHandleEntryData(ze)&&supportsFileExtraFields(ae);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnze.canHandleEntryData()&&supportsFileExtraFields(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnze.canHandleEntryData()||canStoredEntriesWithDataDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnentry.canHandleEntryData()&&canStoredEntriesWithDataDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnze.canHandleEntryData()&&canStoredEntriesWithDataDescriptorFor(entry);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414if(ze.canHandleEntryData()){returncanStoredEntriesWithDataDescriptorFor(ze);}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnze.canHandleEntryData()&&canStoredEntriesWithDataDescriptorFor(ae);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returncanStoredEntriesWithDataDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasDataDescriptor&&canStoredEntriesWithDataDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasDataDescriptor&&ZipUtil.canHandleEntryData(entry,ae)&&supportsDataDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasDataDescriptor||ZipUtil.canHandleEntryData(ze)&&supportsDataDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasDescriptor&&ZipUtil.canHandleEntryData(entry)&&supportsDataDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasDataDescriptor&&ZipUtil.canHandleEntryData(entry)&&supportsZip64For(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnze.canHandleEntryData()&&supportsFieldDescriptorFor(entry);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasDataDescriptor&&supportsFieldDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnze.canHandleEntryData()&&supportsFieldDescriptorFor(ae);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnentry.canHandleEntryData()&&supportsFieldDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnze.canReadEntryData()&&supportsFieldDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414if(zeinstanceofZipArchiveEntry){returnZipUtil.canHandleEntryData(ze)&&supportsFileDescriptorFor(ze);}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnzipEncoding.canHandleEntryData(ze)&&supportsFileDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnZipUtil.canHandleEntryData(ae)&&supportsFileDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414if(zeinstanceofZipArchiveEntry){returnZipUtil.canHandleEntryData(ze)&&supportsFileDescriptorFor(ze);}else{returntrue;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnze.canHandleEntryData()&&supportsDataDescriptorFor(entry);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnentry.canHandleEntryData()&&hasUTF8Flag&&supportsDataDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnentry.canReadEntryData()&&supportsDataDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasDataDescriptor&&entry.canHandleEntryData();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414if(entry.getMethod()==ZipEncoding.DEFAULT){returntrue;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414if(entry!=null){if(entry.getMethod()==ZipEncoding.DEFAULT){returntrue;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414if(entry==null){if(entry.getMethod()==ZipEncoding.DEFAULT){returntrue;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414if(ze==null){if(entry.getMethod()==ZipEncoding.DEFAULT){returntrue;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414if(ze!=null){if(entry.getMethod()==ZipEncoding.DEFAULT){returnfalse;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414if(entry.getMethod()!=ZipEncoding.DEFAULT){returntrue;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414if(entry.getMethod()==ZipEncoding.UTF8){returntrue;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414if(entry!=null){if(entry.getMethod()==ZipEncoding.UTF8){returntrue;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414if(entry==null){if(entry.getMethod()==ZipEncoding.UTF8){returntrue;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414if(ze==null){if(entry.getMethod()==ZipEncoding.UTF8){returntrue;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414if(ze!=null){if(entry.getMethod()==ZipEncoding.UTF8){returnfalse;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414if(entry!=null){if(entry.getMethod()==ZipEncoding.UTF8){returnfalse;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414if(zeinstanceofZipArchiveEntry){returnZipUtil.canHandleEntryData(entry)&&supportsDescriptorFor(ze);}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414if(zeinstanceofZipArchiveEntry){returnZipUtil.canHandleEntryData(ze)||supportsDescriptorFor(ze);}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414if(zeinstanceofZipArchiveEntry){returnZipUtil.canHandleEntryData(entry)||supportsDescriptorFor(ze);}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414if(aeinstanceofZipArchiveEntry){returnZipUtil.canHandleEntryData(ze)&&supportsDescriptorFor(ze);}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414if(zeinstanceofZipArchiveEntry){returnZipUtil.canHandleEntryData(ae)&&supportsDescriptorFor(ze);}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414if(zeinstanceofZipArchiveEntry){returnzipEncoding.canHandleEntryData(ze)&&supportsDescriptorFor(ze);}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasDataDescriptor&&entryEncoding.canHandleEntryData(ze)||supportsDataDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasDataDescriptor&&zipEncoding.canHandleEntryData(entry)||supportsZip64For(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasDataDescriptor||zipEncoding.canHandleEntryData(ze)||supportsDataDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasDataDescriptor&&zipEncoding.canHandleEntryData(ae)||supportsDataDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasDataDescriptor&&zipEncoding.canHandleEntryData(ze)||supportsFileDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasDataDescriptor&&zipEncoding.canHandleEntryData(entry)||supportsFileDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnze.canHandleEntryData(ae)&&supportsDataDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnentryEncoding.canHandleEntryData(ae)&&supportsDataDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414if(entry.getName().startsWith("/")){returntrue;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414if(entry!=null){if(entry.getName().startsWith("/")){returntrue;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414if(entry==null){if(entry.getName().startsWith("/")){returntrue;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414if(entry.getName().startsWith("/")||ze.getName().startsWith("/")){returntrue;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414if(entry.getName().startsWith("/")||entry.getName().startsWith("/")){returntrue;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414if(entry.getName().endsWith("/")){returntrue;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasDataDescriptor&&zipEncoding.canHandleEntryData(entry)&&supportsDataDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasDataDescriptor&&zipEncoding.canHandleEntryData(ae)&&supportsDataDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasDataDescriptor&&entryEncoding.canHandleEntryData(ze)&&supportsDataDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasDataDescriptor&&zipEncoding.canReadEntryData(ze)&&supportsDataDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasDataDescriptor&&zipEncoding.canHandleEntryData(ze)||supportsDataDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnzipEncoding.canHandleEntryData(ze)&&hasDataDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnZipUtil.canReadEntryData(entry,ae)&&supportsDataDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnzipEncoding.canHandleEntryData(ze)&&supportsZip64(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnZipUtil.canHandleEntryData(ae)&&supportsZip64(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnze.canHandleEntryData()&&supportsZip64(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnZipUtil.canHandleEntryData(ze)&&supportsZip64(ze,entryEncoding);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasFlag&&supportsUnicodeExtraFieldsFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasFlag&&supportsUseUnicodeExtraFieldsFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasFlag&&supportsUseUnicodeExtraFields(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasFlag&&supportsUTF8Flag(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasFlag||supportsDataDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasFlag&&supportsUTF8Flag;
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnZipUtil.canHandleEntryData(entry)||supportsFileExtraFieldsFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnzipEncoding.canHandleEntryData(entry)&&supportsFileExtraFieldsFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnZipUtil.canHandleEntryData(ze)&&supportsFileExtraFieldsFor(entry);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnZipUtil.canHandleEntryData(entry)&&supportsFileExtraFieldsFor(ae);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnZipUtil.canHandleEntryData(ze)&&supportsFileExtraFieldsFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasDataDescriptor&&ZipUtil.canHandleEntryData(entry)&&supportsUnicodeExtraFieldsFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasDataDescriptor&&ZipUtil.canHandleEntryData(ze)&&supportsUnicodeExtraFieldsFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasDataDescriptor||ZipUtil.canHandleEntryData(entry)&&supportsZip64For(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasDataDescriptor||ZipUtil.canHandleEntryData(ze)&&supportsUnicodeExtraFieldsFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasDataDescriptor||ZipUtil.canHandleEntryData(entry)&&supportsFieldsFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasDataDescriptor||ZipUtil.canHandleEntryData(ze)&&supportsZip64For(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasEntryDataDescriptor||supportsDataDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasEntryDataDescriptor&&supportsUnicodeExtraFieldsFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasEntryDataDescriptor&&supportsZip64For(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasEntryDataDescriptor&&supportsUseUnicodeExtraFieldsFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasEntryDataDescriptor&&supportsUseUnicodeExtraFields(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasEntryDataDescriptor&&supportsReadEntryFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasDataDescriptor&&ZipUtil.canReadEntryData(ae);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasDataDescriptor&&ZipUtil.canReadEntryData(ze,entry);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasDataDescriptor&&ZipUtil.canReadEntryData(ze,ae);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnze.canHandleEntryData()||hasUTF8Flag&&supportsDataDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnze.canHandleEntryData()&&hasUTF8Flag&&supportsZip64For(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnze.canHandleEntryData()&&hasUTF8Flag||supportsDataDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414if(ze.canHandleEntryData()){returnhasUTF8Flag&&supportsDataDescriptorFor(ze);}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnze.canHandleEntryData()&&hasUTF8Flag&&supportsUnicodeExtraFieldsFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnze.canHandleEntryData()&&hasUTF8Flag&&supportsZip64(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnze.canHandleEntryData()&&hasUTF8Flag&&supportsFieldDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnzipEncoding.canHandleEntryData(entry)&&supportsZip64For(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnze.canHandleEntryData(zipEncoding)&&supportsZip64For(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnzipEncoding.canHandleEntryData(ae)&&supportsZip64For(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnzipEncoding.canHandleEntryData(ze)&&supportsZip64For(entry);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414Inflaterinf=ae.getInputStream();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414Inflaterinf=entry.getInputStream();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414Inflaterinf=ze.getFileInputStream();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414Inflaterinf=ze.getInputStream()+1;
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414Inflaterinf=z.getInputStream();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414Inflaterinf=ze.getEntry();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasDataDescriptor&&ZipUtil.canHandleEntryData(ze)&&supportsDataDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasDataDescriptor||ZipUtil.canHandleEntryData(entry)&&supportsFieldDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasDataDescriptor||ZipUtil.canHandleEntryData(entry)&&supportsFunctionDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasDataDescriptor||ZipUtil.canHandleEntryData(entry)&&supportsFileDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasDataDescriptor||ZipUtil.canHandleEntryData(entry)&&supportsFullDataDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasZip64||supportsDataDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasZip64&&supportsUnicodeExtraFieldsFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasZip64&&supportsUseUnicodeExtraFieldsFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasZip64&&supportsUseUnicodeExtraFields(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasEntryData&&supportsDataDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414if(zeinstanceofZipArchiveEntry){returnZipUtil.canReadEntryData(entry)&&supportsDataDescriptorFor(ze);}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414if(zeinstanceofZipArchiveEntry){returnZipUtil.canReadEntryData(entry)||supportsDataDescriptorFor(ze);}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414if(zeinstanceofArchiveEntry){returnZipUtil.canReadEntryData(entry)&&supportsDataDescriptorFor(ze);}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414if(zeinstanceofZipArchiveEntry){returnZipUtil.canReadEntryData(entry,ze)&&supportsDataDescriptorFor(ze);}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414if(zeinstanceofZipArchiveEntry){returnZipUtil.canReadEntryData(ze)||supportsDataDescriptorFor(ze);}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414||zeinstanceofZipArchiveEntry){returnZipUtil.canReadEntryData(ze)&&supportsDataDescriptorFor(ze);}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414if(zeinstanceofZipArchiveEntry){returnZipUtil.canReadEntryData(entry)&&supportsDataDescriptorFor(ze);}else{returntrue;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414if(zeinstanceofArchiveEntry){returnZipUtil.canReadEntryData(entry)&&supportsDataDescriptorFor(ze);}else{returntrue;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414if(aeinstanceofZipArchiveEntry){returnZipUtil.canReadEntryData(ze)&&supportsDataDescriptorFor(ze);}else{returntrue;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414if(zeinstanceofZipArchiveEntry){returnZipUtil.canReadEntryData(entry)||supportsDataDescriptorFor(ze);}else{returntrue;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414if(zeinstanceofZipArchiveEntry){returnZipUtil.canReadEntryData(ae)&&supportsDataDescriptorFor(ze);}else{returntrue;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414if(zeinstanceofZipArchiveEntry){returnZipUtil.canReadEntryData(entry,ze)&&supportsDataDescriptorFor(ze);}else{returntrue;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414if(zeinstanceofZipArchiveEntry){returnZipUtil.canReadEntryData(entry);}else{returntrue;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnzipEncoding.canReadEntryData(ze)&&supportsZip64For(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnZipUtil.canReadEntryData(ae)&&supportsZip64For(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnZipUtil.canReadEntryData(ze)&&supportsFieldsFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414if(entry!=null){if(entry.hasDataDescriptor()){returntrue;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414if(entry==null){if(entry.hasDataDescriptor()){returntrue;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414if(entry.hasDataDescriptor()){returntrue;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414if(entry!=null){if(entry.hasDataDescriptor()){returnfalse;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414if(entry==null){if(entry.hasDataDescriptor()){returnfalse;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414if(entry!=null){if(!entry.hasDataDescriptor()){returntrue;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasDataDescriptor&&ZipUtil.canHandleEntryData(entry,ae)||supportsDataDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasDataDescriptor&&ZipUtil.canHandleEntryData(entry)||supportsZip64For(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasDataDescriptor||ZipUtil.canHandleEntryData(ze)||supportsDataDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasDataDescriptor||ZipUtil.canHandleEntryData(entry)||supportsDataDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasDescriptor&&ZipUtil.canHandleEntryData(entry)||supportsDataDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasDescriptor&&ZipUtil.canHandleEntryData(ze)||supportsDataDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasDataDescriptor&&ZipUtil.canHandleEntryData(entry)||supportsFileDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasDataDescriptor&&ZipUtil.canHandleEntryData(ze)||supportsZip64For(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasDataDescriptor&&ZipUtil.canHandleEntryData(ae)||supportsDataDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasDataDescriptor&&ZipUtil.canHandleEntryData(ze)||supportsFileDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasDataDescriptor&&ZipUtil.canHandleEntryData(ze)||supportsFunctionDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasValueDescriptor||ZipUtil.canHandleEntryData(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasDescriptor||ZipUtil.canHandleEntryData(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasEntryDescriptor||ZipUtil.canHandleEntryData(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasUTF8Flag&&supportsUseUnicodeExtraFields(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasUTF8Flag&&supportsUseUnicodeExtraFieldsFor(ze.getEntry());
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasUTF8Flag||supportsUseUnicodeExtraFieldsFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasUTF8Flag&&supportsUseUnicodeExtraFieldsFor(ze.getValue());
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasUTF8Flag&&supportsUseUnicodeExtraFieldsFor(ze,entry);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnZipUtil.canHandleEntryData(ze)&&supportsDescriptorFor(ae);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnzipEncoding.canHandleEntryData(ae)&&supportsDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414if(ze!=null){returnZipUtil.canHandleEntryData(ae)&&supportsDescriptorFor(ze);}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnzipEncoding.canHandleEntryData(ze)||supportsUnicodeExtraFieldsFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnZipUtil.canHandleEntryData(ae)||supportsUnicodeExtraFieldsFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnZipUtil.canReadEntryData(ze)&&supportsDataDescriptorFor(ae);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414if(ze!=null){returnZipUtil.canReadEntryData(ae)&&supportsDataDescriptorFor(ze);}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnzipEncoding.canReadEntryData(ae)&&supportsDataDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnze.canReadEntryData(zipEncoding)&&supportsDataDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnentryEncoding.canReadEntryData(ze)&&supportsDataDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414for(ArchiveEntryze:ze.getValue()){returntrue;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414for(ArchiveEntryze:ae.getValue()){returntrue;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414For(ArchiveEntryze:ze.getValue()){returntrue;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414For(ZipArchiveEntryze:ze.getValue()){returntrue;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414for(ArchiveEntryze:entry.getValue()){returntrue;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414For(ArchiveEntryze:ae.getValue()){returntrue;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnZipUtil.canHandleEntryData(ze)||supportsUnicodeExtraFieldsFor(entry);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasUTF8Flag||supportsDataDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasUTF8Flag&&supportsFieldDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnZipUtil.canReadEntryData(entry)||supportsDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnZipUtil.canReadEntryData(ze)&&supportsDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnZipUtil.canReadEntryData(entry)&&supportsDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414if(zeinstanceofZipArchiveEntry){returnZipUtil.canReadEntryData(ze)||supportsDescriptorFor(ze);}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnZipUtil.canReadEntryData(ae)||supportsDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnzipEncoding.canReadEntryData(ze)||supportsDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414if(entry.getName().length()==0){returntrue;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414if(entry!=null){if(entry.getName().length()==0){returntrue;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414if(ze==null){if(entry.getName().length()==0){returntrue;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414if(entry==null){if(entry.getName().length()==0){returntrue;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414if(ze!=null){if(entry.getName().length()==0){returnfalse;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414if(ze==null){if(entry.getName().length()!=0){returntrue;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnzipEncoding.canReadEntryData(ze)||supportsZip64For(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnZipUtil.canReadEntryData(ae)||supportsZip64For(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnZipUtil.canHandleEntryData(ze)&&supportsZip64For(entry);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnZipUtil.canHandleEntryData(entry)&&supportsZip64For(ze,ae);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnzipEncoding.canHandleEntryData(entry)&&supportsUnicodeExtraFields(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasDataDescriptorFor(ze)&&supportsUnicodeExtraFields(entry);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnZipUtil.canHandleEntryData(ze)&&supportsUnicodeExtraFields(entry);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnZipUtil.canHandleEntryData(entry)&&supportsUnicodeExtraFields(ae);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasDataDescriptor&&ZipUtil.canHandleEntryData(ze)||supportsDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasDataDescriptor&&ZipUtil.canHandleEntryData(entry)&&supportsDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasDescriptor&&ZipUtil.canHandleEntryData(ze)&&supportsDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasDataDescriptor&&ZipUtil.canHandleEntryData(ae)&&supportsDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasDescriptor&&ZipUtil.canHandleEntryData(entry)&&supportsDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnze.canReadEntryData()&&supportsZip64For(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414if(ze.canReadEntryData()){returnhasDataDescriptorFor(ze);}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnze.canReadEntryData()&&supportsFileDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnZipUtil.canReadEntryData(ze)||supportsZip64For(entry);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnzipEncoding.canReadEntryData(entry)||supportsZip64For(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnZipUtil.canReadEntryData(ze)&&supportsZip64For(entry);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasFlag&&ZipUtil.canHandleEntryData(entry);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasFlag&&ZipUtil.canReadEntryData(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasFlag&&ZipUtil.canReadEntryData(entry);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasFlag&&ZipUtil.canHandleEntryData(ze,entry);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasFlag&&ZipUtil.canHandleEntryData(ae);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasFlag||ZipUtil.canHandleEntryData(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnentry.canHandleEntryData(ze)&&supportsUnicodeExtraFieldsFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnze.canHandleEntryData(entry)||supportsUnicodeExtraFieldsFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnentry.canHandleEntryData(ze)&&supportsZip64For(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnze.canHandleEntryData(entry)&&supportsZip64;
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnze.canHandleEntryData(entry)&&supportsUnicodeExtraFieldsFor(ae);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnze.canHandleEntryData()||supportsUnicodeExtraFields(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnentry.canHandleEntryData()&&supportsUnicodeExtraFields(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnze.canHandleEntryData()&&supportsUnicodeExtraFields(ae);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnze.canHandleEntryData()&&supportsUnicodeExtraFields(entry);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnze.canHandleEntryData()&&supportsFields(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414For(ArchiveEntryze:entry.getValue()){returntrue;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414if(entry.getValue()!=null){for(ArchiveEntryze:ze.getValue()){returntrue;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414For(ZipArchiveEntryze:entry.getValue()){returntrue;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnze.canHandleEntryData()||supportsDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnze.canHandleEntryData()&&supportsDescriptorFor(entry);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnze.canHandleEntryData()&&supportsDescriptorFor(ae);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnentry.canHandleEntryData()&&supportsDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasDataDescriptor&&supportsDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnze.canReadEntryData()&&supportsDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasDataDescriptor||supportsUnicodeExtraFieldsFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasDataDescriptor&&supportsUnicodeExtraFieldsFor(ze.getEntry());
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasDataDescriptor&&ZipUtil.canReadEntryData(ze)&&supportsDataDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasDataDescriptor||ZipUtil.canReadEntryData(entry)&&supportsDataDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasDataDescriptor||ZipUtil.canReadEntryData(ae)&&supportsDataDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasDescriptor||ZipUtil.canReadEntryData(ze)&&supportsDataDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasDataDescriptor||ZipUtil.canReadEntryData(ze)&&supportsFieldDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasDataDescriptor||ZipUtil.canReadEntryData(ze)&&supportsZip64For(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasDataDescriptor||ZipUtil.canReadEntryData(ze)&&supportsFunctionDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasDataDescriptor&&ZipUtil.canReadEntryData(entry)||supportsDataDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasDataDescriptor||ZipUtil.canReadEntryData(ze)||supportsDataDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasDataDescriptor&&ZipUtil.canReadEntryData(ae)||supportsDataDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasDescriptor&&ZipUtil.canReadEntryData(ze)||supportsDataDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasDataDescriptor&&ZipUtil.canReadEntryData(ze)||supportsZip64For(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasDataDescriptor&&ZipUtil.canReadEntryData(ze)||supportsFileDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasDataDescriptor&&ZipUtil.canReadEntryData(ze)||supportsHaveSideEffects(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasUTF8Flag&&ZipUtil.canHandleEntryData(entry);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasUTF8Flag&&ZipUtil.canReadEntryData(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasUTF8Flag&&ZipUtil.canReadEntryData(entry);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasUTF8Flag&&ZipUtil.canHandleEntryData(ae);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasUTF8Flag||ZipUtil.canHandleEntryData(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasUTF8Flag&&ZipUtil.canHandleEntryData(ze,entry);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasDescriptor&&ZipUtil.canHandleEntryData(entry);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasDescriptor&&ZipUtil.canHandleEntryData(ze,entry);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasDescriptor&&ZipUtil.canHandleEntryData(ae);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasDescriptor&&ZipUtil.canReadEntryData(entry);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnZipUtil.canReadEntryData(entry)||supportsFileDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414if(zeinstanceofZipArchiveEntry){returnZipUtil.canReadEntryData(ze)||supportsFileDescriptorFor(ze);}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnzipEncoding.canReadEntryData(ze)||supportsFileDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasDataDescriptor&&ZipUtil.canReadArchiveEntryData(entry);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasDataDescriptor||ZipUtil.canReadArchiveEntryData(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasDataDescriptor&&ZipUtil.canReadArchiveEntryData(ae);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasDataDescriptor&&ZipUtil.canReadArchiveEntryData(ze,entry);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasDataDescriptor&&ZipUtil.canReadArchiveEntryData(ze,ae);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasDescriptor&&ZipUtil.canReadArchiveEntryData(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414if(zeinstanceofZipArchiveEntry){returnZipUtil.canReadEntryData(entry)&&supportsDataDescriptorFor(ze);}else{returnfalse;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414if(aeinstanceofZipArchiveEntry){returnZipUtil.canReadEntryData(ze)&&supportsDataDescriptorFor(ze);}else{returnfalse;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414if(zeinstanceofArchiveEntry){returnZipUtil.canReadEntryData(entry)&&supportsDataDescriptorFor(ze);}else{returnfalse;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414if(zeinstanceofZipArchiveEntry){returnZipUtil.canReadEntryData(ae)&&supportsDataDescriptorFor(ze);}else{returnfalse;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414if(zeinstanceofZipArchiveEntry){returnZipUtil.canReadEntryData(entry)||supportsDataDescriptorFor(ze);}else{returnfalse;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414if(zeinstanceofZipArchiveEntry){returnZipUtil.canReadEntryData(entry,ze)&&supportsDataDescriptorFor(ze);}else{returnfalse;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414if(zeinstanceofZipArchiveEntry){returnZipUtil.canReadEntryData(entry);}else{returnfalse;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnZipUtil.canHandleEntryData(ze)&&supportsZip64For(ae);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414if(ze!=null){returnZipUtil.canHandleEntryData(ae)&&supportsZip64For(ze);}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414if(zeinstanceofZipArchiveEntry){returnZipUtil.canHandleEntryData(ze)&&supportsZip64For(ze);}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414if(zeinstanceofZipArchiveEntry){returnZipUtil.canHandleEntryData(ae)&&supportsZip64For(ze);}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnzipEncoding.canHandleEntryData(entry)&&supportsZip64(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnZipUtil.canHandleEntryData(ze)&&supportsZip64(entry);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnZipUtil.canHandleEntryData(entry)&&supportsZip64(ze,entryEncoding);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnze.canHandleEntryData(entryEncoding)&&supportsUnicodeExtraFieldsFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnentryEncoding.canHandleEntryData(ze)&&supportsFieldsFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnentryEncoding.canHandleEntryData(ze)&&supportsUnicodeExtraFieldsFor(ae);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414finalStringencoding=ze.getEncoding();if(encoding!=null){returnfalse;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414if(entry.getValue()!=null){finalStringencoding=ze.getEncoding();if(encoding!=null){returnfalse;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414if(ze.getValue()!=null){finalStringencoding=ze.getEncoding();if(encoding!=null){returnfalse;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414if(ze.getValue()==null){finalStringencoding=ze.getEncoding();if(encoding!=null){returnfalse;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414if(entry.getValue()!=null){finalStringencoding=ae.getEncoding();if(encoding!=null){returnfalse;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414if(entry.getValue()==null){finalStringencoding=ae.getEncoding();if(encoding!=null){returnfalse;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnZipUtil.canReadEntryData(ze)||supportsDataDescriptorFor(ae);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnzipEncoding.canReadEntryData(ae)||supportsDataDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnzipEncoding.canHandleEntryData(entry)&&supportsDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnze.canHandleEntryData(zipEncoding)&&supportsDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnentryEncoding.canHandleEntryData(ze)&&supportsDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnzipEncoding.canHandleEntryData(ze)||supportsDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasDataDescriptorFor(ze)&&zipEncoding.canHandleEntryData(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnZipUtil.canHandleEntryData(ze)||supportsZip64For(entry);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnzipEncoding.canHandleEntryData(entry)||supportsZip64For(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnze.canReadEntryData()||supportsZip64For(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnze.canReadEntryData(entry)||supportsDataDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnze.canReadEntryData(ae)||supportsDataDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnze.canReadEntryData()||supportsFieldDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnentry.canReadEntryData()||supportsDataDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnze.canReadEntryData()||supportsFieldsFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnZipUtil.canHandleEntryData(ze,ae)||supportsDataDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnZipUtil.canHandleEntryData(ze,entry)||supportsDataDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnzipEncoding.canHandleEntryData(entry,ae)||supportsDataDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnZipUtil.canHandleEntryData(ze,ae)&&supportsDataDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnZipUtil.canHandleEntryData(ze,ae)||supportsDataDescriptorFor(entry);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnZipUtil.canHandleEntryData(entry,ze)&&supportsDataDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnZipUtil.canHandleEntryData(entry,ae)&&supportsZip64For(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnze.canHandleEntryData(entryEncoding)&&supportsFieldsFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnze.canHandleEntryData(entryEncoding)&&supportsUnicodeExtraFieldsFor(z);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnze.canHandleEntryData(encoding)&&supportsUnicodeExtraFieldsFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnzipEncoding.canHandleEntryData(ze)&&supportsUnicodeExtraFieldsFor(entry);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnze.canHandleEntryData(entry)&&supportsDataDescriptorFor(zipEncoding);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnZipUtil.canHandleEntryData(ze)&&supportsUnicodeExtraFields(ae);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnzipEncoding.canHandleEntryData(ae)&&supportsUnicodeExtraFields(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnze.canHandleEntryData(ae)&&supportsUnicodeExtraFields(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasDataDescriptorFor(ze)&&supportsUnicodeExtraFields(ae);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414for(ArchiveEntryze:entry.getValues()){returntrue;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414for(ArchiveEntryze:ze.getValues()){returntrue;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414for(ArchiveEntryze:ae.getValues()){returntrue;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414if(entry.getValue()!=null){for(ArchiveEntryze:entry.getValues()){returntrue;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414For(ArchiveEntryze:entry.getValues()){returntrue;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414For(ZipArchiveEntryze:entry.getValues()){returntrue;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414if(entry.getName().endsWith("/")){returnfalse;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414if(entry!=null){if(entry.getName().endsWith("/")){returnfalse;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414if(entry==null){if(entry.getName().endsWith("/")){returnfalse;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414if(entry.getName().endsWith(".zip")){returnfalse;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414if(entry.getName().endsWith("/")||ze.getName().endsWith("/")){returnfalse;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414if(entry.getName().startsWith("/")){returnfalse;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414if(entry!=null){if(entry.getName().endsWith("/")){returntrue;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414if(ze==null){if(entry.getName().endsWith("/")){returntrue;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414if(entry.getName().endsWith("/")||ze.getName().endsWith("/")){returntrue;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414if(entry.getName().endsWith(".zip")){returntrue;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414if(ze!=null){if(entry.getName().endsWith(".zip")){returntrue;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnZipUtil.canHandleEntryData(ae)&&supportsUnicodeExtraFieldsFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414if(entry.getName().equals(encoding)){returntrue;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414if(entry.getName().equals(zipEncoding)){returntrue;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414if(ze!=null){if(entry.getName().equals(encoding)){returntrue;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414if(zipEncoding!=null){if(entry.getName().equals(ze)){returntrue;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414if(ze==null){if(entry.getName().equals(encoding)){returntrue;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414if(ze==null){if(entry.getName().equals(zipEncoding)){returntrue;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414if(entry.getValue()!=null){for(inti=0,len=entry.length;i<len;++i){returntrue;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414for(inti=0,len=entry.length;i<len;++i){returntrue;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414if(entry.getValue()!=null){for(inti=0,len=entry.length;i<len;++i){returnfalse;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414if(entry.getValue()!=null){for(inti=0,len=ze.length;i<len;++i){returntrue;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414if(entry.getValue()==null){for(inti=0,len=entry.length;i<len;++i){returnfalse;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414if(entry.getValue()==null){for(inti=0,len=ze.length;i<len;++i){returntrue;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnZipUtil.canHandleEntryData(ze)||supportsZip64;
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnzipEncoding.canHandleEntryData(ze)&&supportsZip64;
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnze.canHandleEntryData(zip64)&&supportsZip64;
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnZipUtil.canHandleEntryData(ze)&&supportsFields;
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnZipUtil.canHandleEntryData(ze)&&supportsZip64+1;
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnze.canHandleEntryData(entryEncoding)&&supportsDataDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnze.canHandleEntryData(entryEncoding)&&supportsFieldDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414if(ze.canHandleEntryData(entryEncoding)&&supportsDataDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnze.canHandleEntryData(encoding)&&supportsDataDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasValueDescriptor||supportsDataDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnze.hasDataDescriptor||supportsDataDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasEntryDescriptor||supportsDataDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnZipUtil.canHandleEntryData(entry)&&supportsFunctionDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnZipUtil.canHandleEntryData(ze)||supportsFunctionDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414if(zeinstanceofZipArchiveEntry){returnZipUtil.canHandleEntryData(ze)&&supportsFunctionDescriptorFor(ze);}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnzipEncoding.canHandleEntryData(ze)&&supportsFunctionDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnZipUtil.canHandleEntryData(ae)&&supportsFunctionDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414if(zeinstanceofZipArchiveEntry){returnZipUtil.canHandleEntryData(ze)&&supportsFunctionDescriptorFor(ze);}else{returntrue;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnzipEncoding.canHandleEntryData(entry)&&supportsFileDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnZipUtil.canHandleEntryData(ze)&&supportsFileDescriptorFor(entry);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnZipUtil.canHandleEntryData(entry)&&supportsFileDescriptorFor(ze,ae);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnZipUtil.canHandleEntryData(entry)&&supportsFileDescriptorFor(ze,entryEncoding);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414intpos=entryEncoding.lastIndexOf(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414intpos=entryEncoding.indexOf(ze)+1;
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414intpos=entryEncoding.indexOf(ze)-1;
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414intpos=entryEncoding.indexOf(ze.getKey());
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414intpos=entryEncoding.indexOf(zipEncoding);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414intpos=ze.indexOf(entryEncoding);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414Inflaterinf=entryEncoding.canReadEntry()?ze.getInputStream():null;
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414Inflaterinf=entryEncoding.canReadEntryData()?ze.getInputStream():null;
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414Inflaterinf=entryEncoding.canReadEntry();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414Inflaterinf=entryEncoding.canReadEntryData(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnzipEncoding.canHandleEntryData(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnentryEncoding.canReadEntryData(ze)||supportsDataDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnze.canReadEntryData(zipEncoding)||supportsDataDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnentryEncoding.canHandleEntryData(ze)||supportsFileDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnentryEncoding.canHandleEntryData(ze)&&supportsFieldDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnentryEncoding.canHandleEntryData(ze)&&supportsZip64For(z);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasDataDescriptor&&supportsZip64(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasUTF8Flag&&supportsUnicodeExtraFields(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasDataDescriptor||supportsUnicodeExtraFields(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasDescriptor&&supportsUnicodeExtraFields(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasDataDescriptor&&supportsZip64Fields(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414if(entry!=null){if(entry.canRead()){returntrue;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414if(entry==null){if(entry.canRead()){returntrue;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414if(entry!=null){if(entry.canRead()){returnfalse;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414if(entry.canRead()){returntrue;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414if(ze!=null){if(entry.canRead()){returnfalse;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414if(entry==null){if(entry.canRead()){returnfalse;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnZipUtil.canHandleEntryData(entry)||supportsDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnze.canHandleEntryData()||hasUTF8Flag;
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasUTF8Flag&&ze.canHandleEntryData();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnze.canHandleEntryData(ae)&&hasUTF8Flag;
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnae.canHandleEntryData()&&hasUTF8Flag;
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnentry.canHandleEntryData()&&hasUTF8Flag;
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnze.canHandleEntryData(ae);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnentryEncoding.canHandleEntryData(ze)&&supportsUnicodeExtraFields(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnze.canHandleEntryData(zipEncoding)&&supportsUnicodeExtraFields(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasDataDescriptorFor(ze)&&supportsUnicodeExtraFields(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnZipUtil.canHandleEntryData(entry)&&supportsDescriptorFor(ze,entryEncoding);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnZipUtil.canHandleEntryData(entry)&&supportsDescriptorFor(ze,ae);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnZipUtil.canHandleEntryData(ze)&&supportsDescriptorFor(entry);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasDataDescriptor||ZipUtil.canHandleEntryData(ze,entry);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasDataDescriptor&&ZipUtil.canHandleEntryData(ze,entryEncoding);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasDataDescriptor&&ZipUtil.canHandleEntryData(ze,entry.getValue());
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasDescriptor&&ZipUtil.canHandleEntryData(entry,ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasValueDescriptor&&supportsZip64For(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasValueDescriptor&&supportsUseUnicodeExtraFields(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasValueDescriptor&&supportsFieldDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasValueDescriptor&&supportsReadEntryData(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasValueDescriptor&&supportsReadEntryFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnZipUtil.canHandleEntryData(ze)||supportsFieldsFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnzipEncoding.canHandleEntryData(ze)&&supportsFieldsFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnZipUtil.canHandleEntryData(ae)&&supportsFieldsFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasEntryDescriptor&&supportsZip64For(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasEntryDescriptor&&supportsUnicodeExtraFieldsFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasEntryDescriptor&&supportsUseUnicodeExtraFields(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasEntryDescriptor&&supportsReadEntryFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasDataDescriptor||ZipUtil.canHandleEntryData(entry)&&supportsDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasDescriptor||ZipUtil.canHandleEntryData(ze)&&supportsDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasDataDescriptor||ZipUtil.canHandleEntryData(ae)&&supportsDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasDataDescriptor||ZipUtil.canHandleEntryData(ze)||supportsDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasDataDescriptor||ZipUtil.canHandleEntryData(ze)&&supportsFunctionDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnZipUtil.canHandleEntryData(entry)||supportsZip64;
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnzipEncoding.canHandleEntryData(entry)&&supportsZip64;
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnZipUtil.canHandleEntryData(entry)&&supportsZip64+1;
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnze.canHandleEntryData()||supportsUnicodeExtraFieldsFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnentry.canHandleEntryData()&&supportsUnicodeExtraFieldsFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnze.canHandleEntryData()&&supportsUnicodeExtraFieldsFor(ae);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnze.canHandleEntryData()&&supportsUnicodeExtraFieldsFor(entry);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasDataDescriptor||zipEncoding.canHandleEntryData(ze)&&supportsDataDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasFlag&&zipEncoding.canHandleEntryData(ze)&&supportsDataDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasUTF8Flag&&zipEncoding.canHandleEntryData(ze)&&supportsDataDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasDataDescriptor&&zipEncoding.canHandleEntryData(ze)&&supportsZip64For(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasFunctionDescriptor&&ZipUtil.canHandleEntryData(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnze.canHandleEntryData()&&supportsFunctionDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasFunctionDescriptor&&ZipUtil.canHandleEntryData(ze)&&supportsFunctionDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnze.canHandleEntryData()&&supportsZip64;
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasDataDescriptor&&ze.canHandleEntryData(zipEncoding);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnze.hasDataDescriptor&&zipEncoding.canHandleEntryData(entry);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasDataDescriptor||zipEncoding.canHandleEntryData(entry);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasUTF8Flag&&zipEncoding.canHandleEntryData(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnze.canHandleEntryData()||supportsFileDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasDataDescriptor||ZipUtil.canHandleEntryData(entry)&&supportsFileExtraFieldsFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasDataDescriptor&&supportsFileExtraFieldsFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnze.canHandleEntryData(entry)&&supportsFileExtraFieldsFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasUTF8Flag&&ZipUtil.canHandleEntryData(ze)&&supportsDataDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasUTF8Flag&&ZipUtil.canHandleEntryData(entry)&&supportsDataDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasFlag&&ZipUtil.canHandleEntryData(entry)&&supportsDataDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasFlag&&ZipUtil.canHandleEntryData(ze)&&supportsDataDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasDataDescriptor||zipEncoding.canReadEntryData(ze)&&supportsDataDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnze.canReadEntryData(zipEncoding)&&supportsUnicodeExtraFieldsFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnentryEncoding.canReadEntryData(ze)&&supportsUnicodeExtraFieldsFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnZipUtil.canReadEntryData(entry)&&hasUTF8Flag&&supportsDataDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasDataDescriptor&&ZipUtil.canReadEntryData(entry)&&supportsDataDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414if(entry.getName()==null){for(inti=0,len=entry.length;i<len;++i){returntrue;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414if(entry.getValue()!=null){for(inti=0,len=entryEnd;i<len;++i){returntrue;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasFlag&&supportsUTF8FlagFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasFlag&&supportsZip64For(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasUTF8Flag&&ZipUtil.canHandleEntryData(ze,entryEncoding);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnze.hasUTF8Flag&&ZipUtil.canHandleEntryData(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasDirectoryDescriptor&&supportsDataDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasFlags&&supportsDataDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasDataDescriptor&&ZipUtil.canReadEntryData(ze,entryEncoding);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnze.canHandleEntryData(lockEncoding)&&supportsDataDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnze.canHandleEntryData(ae)&&supportsDataDescriptorFor(zipEncoding);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasDataDescriptor&&zipEncoding.canHandleEntryData(entry)&&supportsUnicodeExtraFieldsFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasDataDescriptor&&zipEncoding.canHandleEntryData(ze)&&supportsUnicodeExtraFieldsFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasDataDescriptor&&zipEncoding.canHandleEntryData(ze)&&supportsUnicodeExtraFieldsFor(entry);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnze.canHandleEntryData(entry)&&supportsUnicodeExtraFieldsFor(z);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasUseUnicodeExtraFieldsFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnze.canReadEntryData()&&supportsUnicodeExtraFieldsFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414if(ze.getValue()!=null){for(ArchiveEntryze:ze.getValue()){returntrue;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414if(ze.getValue()==null){for(ArchiveEntryze:ze.getValue()){returntrue;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414Pentru(ArchiveEntryze:ze.getValue()){returntrue;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasUTF8Flag&&isUseUnicodeExtraFields(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnze.canHandleEntryData(ZipUtil.canHandleEntryData(ae)&&supportsZip64For(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnZipUtil.canHandleEntryData(ze)&&supportsZip64For(z);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasDataDescriptor&&ZipUtil.canHandleEntryData(ze)&&supportsZip64(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasZip64(ze)&&supportsZip64(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnZipUtil.canHandleEntryData(ze)&&supportsUnicodeExtraFields();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnze.canHandleEntryData(ae)&&supportsUnicodeExtraFields();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasDataDescriptor&&ZipUtil.canHandleEntryData(entry)&&supportsZip64(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasDataDescriptor&&zipEncoding.canHandleEntryData(entry)&&supportsZip64(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnze.canHandleEntryData(entry)&&supportsZip64(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414if(ze==null){if(entry.canRead()){returntrue;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnaccessZipEncoding.canHandleEntryData(ze)&&supportsZip64For(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnze.canHandleEntryData()&&supportsFileDescriptorFor(entry);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasUTF8Flag||ZipUtil.canHandleEntryData(entry)&&supportsUnicodeExtraFieldsFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasFlag&&ZipUtil.canHandleEntryData(entry)&&supportsUnicodeExtraFieldsFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasUTF8Flag||ZipUtil.canHandleEntryData(ze)&&supportsUnicodeExtraFieldsFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasFlag||ZipUtil.canHandleEntryData(entry)&&supportsUnicodeExtraFieldsFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasDataDescriptor||ZipUtil.canHandleEntryData(entry)&&supportsZip64(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414if(entry.getName()!=null){returntrue;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasDataDescriptor&&supportsFileDataDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasDataDescriptor||ZipUtil.canReadEntryData(ze)&&supportsUnicodeExtraFields(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasDataDescriptor||ZipUtil.canHandleEntryData(ze)&&supportsUnicodeExtraFieldsFor(entry);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasUTF8Flag||ZipUtil.canReadEntryData(ze)&&supportsDataDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasFlag||ZipUtil.canReadEntryData(ze)&&supportsDataDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasFlag&&ZipUtil.canReadEntryData(ze)&&supportsDataDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasZip64||ZipUtil.canReadEntryData(ze)&&supportsDataDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414if(entry.getValue()!=null){for(ArchiveEntryze:entry.getValue()){returntrue;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414if(entry.getValue()!=null){for(ArchiveEntryze:ze.getValue()){returnfalse;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414Inflaterinf=ze.getInputStream(bis);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414Inflaterinf=ze.canReadEntry();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414Inflaterinf=ze!=null?ze.getInputStream():bis;
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnze.canHandleEntryData(entry)&&supportsUnicodeExtraFields(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnze.canHandleEntryData(entry)&&supportsUnicodeExtraFields();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasUTF8Flag&&ZipUtil.canReadEntryData(ze)||supportsDataDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasFlag&&ZipUtil.canReadEntryData(ze)||supportsDataDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasZip64&&ZipUtil.canReadEntryData(ze)||supportsDataDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnentryEncoding.canHandleEntryData(ze)&&hasUTF8Flag&&supportsDataDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414if(entry==null){if(entry.getName().endsWith("/")){returntrue;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasZip64&&hasUTF8Flag&&supportsDataDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasUseUnicodeExtraFields&&supportsDataDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasZip64&&isUseUnicodeExtraFields(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasDataDescriptor&&zipEncoding.canHandleEntryData(ze)&&supportsUnicodeExtraFields(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnentryEncoding.canHandleEntryData(ze)&&supportsZip64(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnze.canHandleEntryData(zipEncoding)&&supportsZip64(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasUTF8Flag&&ZipUtil.canHandleEntryData(ze)&&supportsDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasFlag&&ZipUtil.canHandleEntryData(ze)&&supportsDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasDataDescriptor&&ZipUtil.canReadEntryData(ze)&&supportsDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnze.canReadEntryData()||hasUTF8Flag;
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnze.canReadEntryData()&&hasUTF8Flag;
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnze.canHandleEntryData(entry)&&hasUTF8Flag;
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasFileExtraFields&&ZipUtil.canHandleEntryData(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasDataDescriptor&&ze.canHandleEntryData(entry)||supportsDataDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnze.canHandleEntryData(entry)||supportsFileDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414finalZipEncodingencoding=ze.getEncoding();if(encoding!=null){returntrue;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnze.canHandleEntryData(entry)&&supportsFileDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasDataDescriptor&&supportsFileDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasUTF8Flag&&zipEncoding.canHandleEntryData(ze)||supportsDataDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasUTF8Flag&&zipEncoding.canHandleEntryData(entry)||supportsDataDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasDataDescriptor||zipEncoding.canHandleEntryData(entry)||supportsDataDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasDataDescriptor&&zipEncoding.canHandleEntryData(ze)||supportsZip64For(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasFlag&&zipEncoding.canHandleEntryData(ze)||supportsDataDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414if(ze!=null){if(zeinstanceofZipArchiveEntry){returnZipUtil.canReadEntryData(ze)&&supportsDataDescriptorFor(ze);}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414if(ze!=null){if(zeinstanceofZipArchiveEntry){returnZipUtil.canReadEntryData(ze)&&supportsDataDescriptorFor(ze);}else{returnfalse;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414if(ze==null){if(zeinstanceofZipArchiveEntry){returnZipUtil.canReadEntryData(ze)&&supportsDataDescriptorFor(ze);}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414if(ze==null){if(zeinstanceofZipArchiveEntry){returnZipUtil.canReadEntryData(ze)&&supportsDataDescriptorFor(ze);}else{returnfalse;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414if(ze!=null){returnZipUtil.canReadEntryData(ze)&&supportsDataDescriptorFor(ze);}else{returnfalse;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414if(entry.getMethod()!=ZipEncoding.UTF8){returntrue;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnze.canHandleEntryData()&&supportsZip64(entry);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnentry.canHandleEntryData(ze)&&supportsZip64;
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414finalZipEncodingencoding=ze.getEncoding();if(encoding!=null){returnfalse;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414if(entry!=null){finalStringencoding=ze.getEncoding();if(encoding!=null){returnfalse;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnze.canHandleEntryData(entry,ae)||supportsDataDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnZipUtil.canHandleEntryData(ze,ae)||supportsZip64For(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414if(ze!=null){returnZipUtil.canHandleEntryData(ze)&&supportsDescriptorFor(ze);}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414if(zeinstanceofZipArchiveEntry){returnZipUtil.canHandleEntryData(entry,ze)&&supportsDescriptorFor(ze);}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasDataDescriptor&&supportsUTF8FlagFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnze.canReadEntryData()&&hasUTF8Flag&&supportsDataDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasDataDescriptor&&ze.canReadEntryData();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnze.canHandleEntryData(entryEncoding)&&supportsFileDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasDataDescriptor&&zipEncoding.canReadEntryData(ze)||supportsDataDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnentryEncoding.canReadEntryData(ze)||supportsFileDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414&&hasDataDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414&&supportsUnicodeExtraFields(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414&&hasUTF8Flag&&hasDataDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnze.canHandleEntryData(entry)&&supportsDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasDataDescriptor&&ZipUtil.canHandleEntryData(entry)&&supportsZip64;
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasDataDescriptor&&ZipUtil.canHandleEntryData(ze)&&supportsZip64;
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414if(entry.getValue()!=null){for(ArchiveEntryze:ze.getValues()){returntrue;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414if(entry.getValue()!=null){for(ArchiveEntryze:entry.getValues()){returnfalse;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414if(ze!=null){if(zeinstanceofZipArchiveEntry){returnZipUtil.canHandleEntryData(ze)&&supportsDescriptorFor(ze);}else{returntrue;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414if(ze==null){if(zeinstanceofZipArchiveEntry){returnZipUtil.canHandleEntryData(ze)&&supportsDescriptorFor(ze);}else{returntrue;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414if(ze!=null){returnZipUtil.canHandleEntryData(ze)&&supportsDescriptorFor(ze);}else{returntrue;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasDataDescriptor&&ZipUtil.canReadEntryData(entry)||supportsZip64For(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasDataDescriptor&&ZipUtil.canReadEntryData(ze)||supportsZip64For(entry);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasDataDescriptor||ZipUtil.canReadEntryData(ze)&&supportsFileDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414if(ze!=null){returnZipUtil.canReadEntryData(ze)&&supportsDataDescriptorFor(ze);}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414if(ze==null){returnZipUtil.canReadEntryData(ze)&&supportsDataDescriptorFor(ze);}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414if(zeinstanceofZipArchiveEntry){returnZipUtil.canReadEntryData(entry);}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414if(entry!=null){if(entry.getName().equals(zipEncoding)){returntrue;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414if(entry==null){if(entry.getName().equals(zipEncoding)){returntrue;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasDataDescriptor&&ZipUtil.canHandleEntryData(ze)||supportsUnicodeExtraFields(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasUTF8Flag||ZipUtil.canHandleEntryData(entry)&&supportsDataDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasDescriptor||ZipUtil.canHandleEntryData(entry)&&supportsDataDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasFlag||ZipUtil.canHandleEntryData(entry)&&supportsDataDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnze.canHandleEntryData(ZipUtil.canHandleEntryData(ae)&&supportsDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnze.canHandleEntryData(ae)&&supportsDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasUTF8Flag&&ZipUtil.canHandleEntryData(ze)||supportsDataDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasUTF8Flag&&ZipUtil.canHandleEntryData(entry)||supportsDataDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasFlag&&ZipUtil.canHandleEntryData(ze)||supportsDataDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasFlag&&ZipUtil.canHandleEntryData(entry)||supportsDataDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasDirectoryDataDescriptor&&supportsDataDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasZip64&&ZipUtil.canHandleEntryData(ze)||supportsDataDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnze.canHandleEntryData(entryEncoding)&&supportsZip64;
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnze.canHandleEntryData(entryEncoding)&&supportsZip64(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414if(entry==null){if(entry.getName().endsWith("Archive")){returntrue;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnze.canReadEntryData()||supportsFileDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasDataDescriptor&&entryEncoding.canHandleEntryData(ze)&&supportsZip64For(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasZip64For(ze)&&entryEncoding.canHandleEntryData(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasUTF8Flag&&supportsUseUnicodeExtraFields(ze,entryEncoding);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasUTF8Flag&&supportsUseUnicodeExtraFields(ze.getName());
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasUTF8Flag&&supportsUseUnicodeExtraFieldsFor(ze.getName());
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414if(entry.getName()!=null){returnfalse;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414if(entry!=null){if(entry.getName().endsWith(".zip")){returnfalse;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414if(ze==null){if(entry.getName().endsWith("/")){returnfalse;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasDataDescriptor&&ze.canReadEntryData()||supportsDataDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnze.canReadEntryData()&&canStoredEntriesWithDataDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnze.canHandleEntryData()&&hasUTF8Flag&&canStoredEntriesWithDataDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnze.canReadEntryData()||canStoredEntriesWithDataDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnze.canHandleEntryData(entry)||supportsDataDescriptorFor(zipEncoding);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasDataDescriptor&&ZipUtil.canHandleEntryData(entry)||supportsUnicodeExtraFieldsFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasDataDescriptor&&zipEncoding.canHandleEntryData(entry)||supportsUnicodeExtraFieldsFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasZip64&&zipEncoding.canHandleEntryData(ze)&&supportsDataDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasUTF8Flag&&ZipUtil.canReadArchiveEntryData(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasFlag&&ZipUtil.canReadArchiveEntryData(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasDataDescriptor&&ZipUtil.canReadArchiveEntryData(ze,entryEncoding);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnze.canHandleEntryData()&&supportsFileDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasFileDescriptor&&ZipUtil.canHandleEntryData(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414intpos=zipEncoding.indexOf(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasValueDescriptor&&hasUTF8Flag&&supportsDataDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasValueDescriptor&&canReadEntryData(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasValueDescriptor&&hasUTF8Flag&&supportsUnicodeExtraFieldsFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasDescriptor&&hasUTF8Flag&&supportsDataDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasDescriptor&&hasUTF8Flag&&supportsUnicodeExtraFieldsFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnze.canHandleEntryData()&&hasUTF8Flag&&supportsUnicodeExtraFields(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnze.canReadEntryData()&&supportsUnicodeExtraFields(ae);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414if(entry.getName()!=null||ze.getName().length()==0){returntrue;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414if(entry.getName()==null){returntrue;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasDataDescriptor&&ZipUtil.canReadEntryData(ze)||supportsDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasDataDescriptor&&entryEncoding.canHandleEntryData(ze)&&supportsUnicodeExtraFieldsFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnentryEncoding.canHandleEntryData(ze)&&supportsZip64;
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnze.hasDataDescriptor&&zipEncoding.canHandleEntryData(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasFlag&&zipEncoding.canHandleEntryData(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasUTF8Flag&&supportsZip64(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnze.hasUTF8Flag&&supportsUnicodeExtraFieldsFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasUTF8Flag&&supportsZip64AndExtraFieldsFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasDataDescriptor&&ZipUtil.canHandleEntryData(ze)&&supportsFieldsFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasFlag&&supportsUnicodeExtraFields(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasZip64&&supportsUnicodeExtraFields(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnze.hasDataDescriptor&&supportsUnicodeExtraFields();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasFlag||ZipUtil.canHandleEntryData(ze)&&supportsDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasUTF8Flag||ZipUtil.canHandleEntryData(ze)&&supportsDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasEntryDescriptor||ZipUtil.canHandleEntryData(ze)&&supportsDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasDataDescriptor&&zipEncoding.canHandleEntryData(ze)&&supportsDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnzipEncoding.canReadEntryData(ze)&&supportsDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasDataDescriptor||ZipUtil.canReadEntryData(entry)&&supportsUnicodeExtraFieldsFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnZipUtil.canReadEntryData(entry)&&supportsZip64;
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414Inflaterinf=entryEncoding.canReadEntry(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414Inflaterinf=entryEncoding.canReadEntryData();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414Inflaterinf=entryEncoding.encode(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnze.hasDataDescriptor||ZipUtil.canHandleEntryData(hasDataDescriptor);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnze!=null||ZipUtil.canHandleEntryData(hasDataDescriptor);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnze==null||ZipUtil.canHandleEntryData(hasDataDescriptor);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnze.canHandleEntryData()&&hasUTF8Flag&&supportsDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnze.canReadEntryData()||supportsDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasDataDescriptor&&ZipUtil.canHandleEntryData(entry)&&supportsFieldsFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasDataDescriptor&&ZipUtil.canHandleEntryData(ze)&&supportsFieldsFor(entry);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnze.canHandleEntryData(entry)&&supportsFieldsFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasFlag&&ZipUtil.canHandleEntryData(ze,entryEncoding);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasDescriptor&&ZipUtil.canHandleEntryData(ze,entryEncoding);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414if(ze!=null){if(zeinstanceofZipArchiveEntry){returnZipUtil.canReadEntryData(ze)&&supportsDataDescriptorFor(ze);}else{returntrue;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414if(ze==null){if(zeinstanceofZipArchiveEntry){returnZipUtil.canReadEntryData(ze)&&supportsDataDescriptorFor(ze);}else{returntrue;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414if(ze!=null){returnZipUtil.canReadEntryData(ze)&&supportsDataDescriptorFor(ze);}else{returntrue;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414if(zeinstanceofZipArchiveEntry){returnZipUtil.canReadEntryData(ze)||supportsDataDescriptorFor(ze);}else{returntrue;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414if(entry!=null){if(entry.canReadEntryData(ze)){returntrue;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414if(ze==null){if(entry.hasDataDescriptor()){returntrue;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414if(entry!=null){if(entry.canReadEntry()){returntrue;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnZipUtil.canHandleEntryData(entry)&&supportsDescriptor;
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnZipUtil.hasHandleEntryData(ze)&&supportsZip64;
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasDataDescriptor&&ze.canHandleEntryData();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasDataDescriptor&&entryEncoding.canReadEntryData(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnZipUtil.canReadEntryData(ze)||supportsUnicodeExtraFieldsFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasDescriptor&&supportsUicodeExtraFieldsFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasDescriptor&&supportsFileDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasDescriptor&&canReadEntryData(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasDataDescriptor||ZipUtil.canReadEntryData(ze)&&supportsUnicodeExtraFieldsFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasDataDescriptor||ZipUtil.canReadEntryData(ze)&&supportsBoundedInputStream(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasDataDescriptor&&ze.canHandleEntryData(entry)||supportsDataDescriptorFor(ce);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414if(entry.getName().startsWith("/")||ze.getName().endsWith("/")){returntrue;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414if(entry.getName().startsWith("/")||entry.getName().endsWith("/")){returntrue;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414if(entry.canReadEntry()){returntrue;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414if(entry!=null){if(entry.canReadEntryData()){returntrue;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasDataDescriptor&&supportsUicodeExtraFields(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnZipUtil.canHandleEntryData(ze,ae)||supportsDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnZipUtil.canHandleEntryData(entry,ze)||supportsZip64For(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414&&supportsFileDataDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414&&supportsZip64Entry(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414&&supportsZip64(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasDataDescriptor&&ZipUtil.canHandleEntryData(ze)||supportsUnicodeExtraFieldsFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasDataDescriptor&&ZipUtil.canHandleEntryData(ze)||supportsZip64For(entry);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnze.canHandleEntryData(entryEncoding)&&supportsDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasZip64&&supportsUicodeExtraFieldsFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnZipUtil.canHandleEntryData(entry)||supportsZip64Fields(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414&&entry.getMethod()==ZipEncoding.DEFAULT){returntrue;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasDataDescriptor&&ZipUtil.canHandleEntryData(ze)&&supportsZip64For(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasDataDescriptor&&ZipUtil.canHandleEntryData(ze)&&supportsFileDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnze.canReadEntryData()&&canStoredEntriesWithDataDescriptorFor(entry);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnze.canReadEntryData()&&canStoredEntriesWithDataDescriptorFor(e);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasDataDescriptor&&ZipUtil.canHandleEntryData(ze)||supportsBoundedDirectory(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnZipUtil.canHandleEntryData(entry)&&supportsZip64DescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414if(entry.getValue()==null){for(ArchiveEntryze:ze.getValues()){returntrue;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnZipUtil.canReadEntryData(ze)&&supportsZip64;
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnZipUtil.canReadEntryData(entry)&&supportsFileExtraFieldsFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnze.canHandleEntryData()&&!hasUTF8Flag;
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnze.canHandleEntryData();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasValueDescriptor&&supportsUnicodeExtraFieldsFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasValueDescriptor&&supportsUnicodeExtraFields(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasValueDescriptor&&supportsZip64(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasValueDescriptor&&supportsFileDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasDataDescriptor&&ZipUtil.canReadEntryData(e);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasEntryDataDescriptor&&supportsUnicodeExtraFields(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasEntryDataDescriptor&&supportsUicodeExtraFieldsFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasDataDescriptor||supportsFileDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasEntryDescriptor&&supportsUicodeExtraFieldsFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnze.canReadEntryData()||supportsUnicodeExtraFieldsFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnze.canReadEntryData()||supportsZip64(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414if(zeinstanceofZipArchiveEntry){returnZipUtil.canReadEntryData(entry.getValue())&&supportsDataDescriptorFor(ze);}else{returntrue;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414if(ze==null){returnZipUtil.canReadEntryData(ze)&&supportsDataDescriptorFor(ze);}else{returntrue;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414intpos=this.entryEncoding.indexOf(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414intpos=entryEncoding.length();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasFlag&&supportsFieldDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasFlag&&supportsEntryDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414Inflaterinf=ze.inputStream();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414Inflaterinf=ze.getDataInputStream();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnZipUtil.canHandleEntryData(ze)&&supportsZip64For(e);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnze.canHandleEntryData(ae)&&supportsDataDescriptorFor(z);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasDataDescriptor||ZipUtil.canHandleEntryData(entry)&&supportsZip64;
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasDataDescriptor||ZipUtil.canHandleEntryData(ze)&&supportsZip64;
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnze.canHandleEntryData()||supportsZip64(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414if(ze.getValue()==null){for(ArchiveEntryze:ze.getValue()){returnfalse;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasDataDescriptor&&ze.canHandleEntryData(zipEncoding)&&supportsDataDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasDataDescriptor&&ze.canHandleEntryData()&&supportsDataDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasEntryDescriptor&&ZipUtil.canHandleEntryData(ze)&&supportsDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnZipUtil.canHandleEntryData(ze)&&supportsDescriptorFor(ce);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414if(entry.getName()!=null){finalStringencoding=ze.getEncoding();if(encoding!=null){returntrue;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414if(entry.getValue()!=null){finalZipEncodingentryEncoding=ze.getEncoding();if(encoding!=null){returntrue;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414if(entry.getName().endsWith("/")||entry.getName().endsWith("/")){returntrue;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414if(ze!=null&&entry.getName().endsWith("/")){returntrue;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414&&entry.getName().endsWith("/")){returntrue;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414if(zeinstanceofZipArchiveEntry){returnZipUtil.canReadEntryData(entry.getValue())&&supportsDataDescriptorFor(ze);}else{returnfalse;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnze.canHandleEntryData(entry)&&supportsDataDescriptorFor(z);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnze.canReadEntryData()&&supportsDataDescriptorFor(zipEncoding);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasDataDescriptor||ZipUtil.canHandleEntryData(entry)&&supportsArchiveEntry(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414if(ze!=null&&entry.getName().equals(zipEncoding)){returntrue;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414if(ze.getName().equals(zipEncoding)){returntrue;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnZipUtil.canReadEntryData(ze)||supportsBoundedInputStream(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasUTF8Flag&&supportsZip64;
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasUTF8Flag&&supportsExtraFieldsFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414for(ArchiveEntrye:ze.getValue()){returntrue;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnZipUtil.canReadEntryData(ze)&&supportsFileExtraFields(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnze.canHandleEntryData(entryEncoding)&&supportsFileExtraFieldsFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414if(entry.getName()!=null){finalStringencoding=ze.getEncoding();if(encoding!=null){returnfalse;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414if(entry.getValue()!=null){finalZipEncodingentryEncoding=ze.getEncoding();if(encoding!=null){returnfalse;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnze.canHandleEntryData(entry)||supportsZip64;
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnze.canReadEntryData()&&supportsZip64(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnze.canReadEntry()||supportsDataDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasEntryDescriptor&&supportsUnicodeExtraFields(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnze.canReadEntryData()&&supportsZip64For(entry);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnZipUtil.canHandleEntryData(ze)||supportsDirectoryDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414if(entry==null){if(ze!=null){returntrue;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414if(entry==null){if(ze!=null){returnfalse;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414if(entry.getName().endsWith("Archive_")){returntrue;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414&&entry.getName().endsWith("Archive")){returntrue;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414if(entry.getName().endsWith("Archive/")){returntrue;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414&&supportsDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasDataDescriptor||ZipUtil.canReadEntryData(ze)&&supportsDescriptorFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnZipUtil.canHandleEntryData(ze)&&supportsDataDescriptor;
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnZipUtil.canHandleEntryData(ze)&&supportsDescriptor;
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnZipUtil.canHandleEntryData(ze)&&supportsInputStream;
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnZipUtil.canHandleEntryData(ze)&&supportsInputStream(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasDataDescriptor&&ZipUtil.canReadArchiveEntryData(e);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasDataDescriptor&&zipEncoding.canReadArchiveEntryData(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414if(entry.getName()!=null||entry.getName().length()==0){returntrue;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414if(entry.getName()==null||entry.getName().length()==0){returntrue;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasDataDescriptor&&ZipUtil.canReadEntryData(ze)||supportsUnicodeExtraFieldsFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasDataDescriptor&&ZipUtil.canReadEntryData(ze)||supportsUnicodeExtraFields(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasDataDescriptor&&ZipUtil.canReadEntryData(ze)||supportsHandlerFor(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414if(zeinstanceofZipArchiveEntry){returnZipUtil.canReadEntryData(entry.getValue())&&supportsDataDescriptorFor(ze);}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414if(zeinstanceofZipArchiveEntry){returnZipUtil.canReadEntryData(entry,ze)||supportsDataDescriptorFor(ze);}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnZipUtil.canHandleEntryData(ze)&&supportsZip64Fields(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasUTF8Flag&&isEntryData(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasUTF8Flag&&isDirectoryEntry(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnze.canReadEntryData()&&supportsUnicodeExtraFieldsFor(e);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnze.canReadEntryData()&&supportsUnicodeExtraFieldsFor(entry);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnZipUtil.canHandleEntryData(ze)&&supportsUnicodeExtraFields(entriesZip64);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnZipUtil.canHandleEntryData(ze)&&supportsUnicodeExtraFields(e);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnze.canReadEntryData()&&supportsUnicodeExtraFields(e);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnze.canReadEntryData()&&supportsUnicodeExtraFields(entry);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnze.canReadEntryData()||supportsUnicodeExtraFields(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414if(zeinstanceofZipArchiveEntry){returnZipUtil.canHandleEntryData(entry,ze)&&supportsDescriptorFor(ze);}else{returntrue;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414if(zeinstanceofZipArchiveEntry){returnZipUtil.canHandleEntryData(entry);}else{returntrue;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnze.hasDataDescriptor||ZipUtil.canHandleEntryData(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnze!=null||ZipUtil.canHandleEntryData(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnze==null||ZipUtil.canHandleEntryData(ze);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414returnhasDataDescriptor&&ze.canHandleEntryData(entry);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414if(entry.getName().endsWith("/")||entry.getName().endsWith("/")){returnfalse;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414&&entry.getName().endsWith("/")){returnfalse;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414if(entry.getName().endsWith(".js")){returnfalse;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414if(entry.getName().endsWith("/")||ze.getName().endsWith(".zip")){returnfalse;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414if(ze.getValue()==null){for(inti=0,len=entry.length;i<len;++i){returntrue;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java414if(entry.getName()!=null){for(inti=0,len=entry.length;i<len;++i){returntrue;}
