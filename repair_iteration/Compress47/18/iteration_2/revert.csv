projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96privatefinalByteBufferbuf=ByteBuffer.allocate(ZipArchiveOutputStream.BUFFER_SIZE);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96privatestaticfinalByteBufferbuf=ByteBuffer.allocate(ZipArchiveOutputStream.BUFFER_SIZE);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96privatefinalByteBufferbuf=ByteBuffer.allocate(ZipArchiveInputStream.BUFFER_SIZE);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96privatefinalByteBufferbuf=ByteBuffer.allocate(ZipArchiveOutputStream.BUFFER_SIZE+1);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96staticfinalByteBufferbuf=ByteBuffer.allocate(ZipArchiveOutputStream.BUFFER_SIZE);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96privatefinalByteBufferbuf=ByteBuffer.allocate(ZipArchiveOutputStream.BUFFER_SIZE,1);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96privatefinalByteBufferbuf=ByteBuffer.allocate(ZipArchiveOutputStream.BUFFER_SIZE,2);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96privatefinalByteBufferbuf=ByteBuffer.allocate(ZipArchiveOutputStream.BUFFER_SIZE-1);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96protectedfinalByteBufferbuf=ByteBuffer.allocate(ZipArchiveOutputStream.BUFFER_SIZE);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96privatefinalByteBufferbuf=ByteBuffer.allocate(ZipArchiveInputStream.BUFFER_SIZE+1);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96privatestaticfinalByteBufferbuf=ByteBuffer.allocate(ZipArchiveOutputStream.BUFFER_SIZE+1);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96nullbuf=ByteBuffer.allocate(ZipArchiveOutputStream.BUFFER_SIZE);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96privatefinalByteBufferbuf=ByteBuffer.allocate(ZipArchiveOutputStream.BUFFER_SIZE,4);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96privatestaticfinalByteBufferbuf=ByteBuffer.allocate(ZipArchiveOutputStream.BUFFER_SIZE,2);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96privatestaticfinalByteBufferbuf=ByteBuffer.allocate(ZipArchiveOutputStream.BUFFER_SIZE,1);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96privatefinalByteBufferbuf=ByteBuffer.allocate(ZipArchiveOutputStream.BUFFER_SIZE,0);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96privatestaticfinalByteBufferbuf=ByteBuffer.allocate(ZipArchiveOutputStream.BUFFER_SIZE,0);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96privatefinalByteBufferbuf=ByteBuffer.allocate(ZipArchiveOutputStream.BUFFER_SIZE,3);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96privatefinalByteBufferbuf=ByteBuffer.allocate(ZipArchiveOutputStream.BUFFER_SIZE/1);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96privatefinalByteBufferbuf=ByteBuffer.allocate(ZipArchiveOutputStream.BUFFER_SIZE+2);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96privatestaticfinalByteBufferbuf=ByteBuffer.allocate(ZipArchiveInputStream.BUFFER_SIZE);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96privatefinalByteBufferbuf=ByteBuffer.allocate(ZipArchiveInputStream.BUFFER_SIZE,1);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96privatefinalByteBufferbuf=ByteBuffer.allocate(ZipArchiveInputStream.BUFFER_SIZE,2);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96privatefinalByteBufferbuf=ByteBuffer.allocate(ZipArchiveInputStream.BUFFER_SIZE,ZipArchiveInputStream.UTF8);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96privatefinalByteBufferbuf=ByteBuffer.allocate(ZipArchiveInputStream.BUFFER_SIZE,0);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96privatefinalByteBufferbuf=ByteBuffer.allocate(ZipArchiveInputStream.BUFFER_SIZE,10);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96privatestaticfinalByteBufferbuf=ByteBuffer.allocate(ZipArchiveInputStream.BUFFER_SIZE+1);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96privatefinalByteBufferbuf=ByteBuffer.allocate(ZipArchiveInputStream.BUFFER_SIZE/1);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96privatefinalByteBufferbuf=ByteBuffer.allocate(ZipArchiveInputStream.BUFFER_SIZE+2);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96privatestaticfinalByteBufferbuf=ByteBuffer.allocate(ZipArchiveOutputStream.BUFFER_SIZE-1);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96privatefinalByteBufferbuf=ByteBuffer.allocate(ZipArchiveOutputStream.BUFFER_SIZE*2);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96if(currentEntry==null){currentEntry=newZipArchiveInputStream();System.arraycopy(currentEntry.getValue(),currentEntry.getKey(),currentEntry.getValue());}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96if(currentEntry==null){currentEntry=newZipArchiveInputStream();System.arraycopy(currentEntry.getValue(),0,currentEntry.getValue(),currentEntry.getValue());}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96if(currentEntry==null){currentEntry=newZipArchiveInputStream();System.arraycopy(currentEntry.getValue(),0,currentEntry.getValue());}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96if(currentEntry==null){currentEntry=newZipArchiveInputStream();System.arraycopy(currentEntry.getValue(),0,currentEntry.getValue()+1,currentEntry.getValue());}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96if(currentEntry==null){currentEntry=newZipArchiveInputStream();System.arraycopy(currentEntry.getValue(),0,currentEntry.getValue(),currentEntry.getClass().getName());}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96if(currentEntry==null){currentEntry=newZipArchiveInputStream();System.arraycopy(currentEntry.getValue(),0,currentEntry.getValue(),currentEntry.getChronology());}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96if(currentEntry==null){currentEntry=newZipArchiveInputStream();System.arraycopy(currentEntry,0,currentEntry,0,currentEntry.length);}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96protectedfinalByteBufferbuf=ByteBuffer.allocate(ZipArchiveOutputStream.BUFFER_SIZE+1);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96protectedfinalByteBufferbuf=ByteBuffer.allocate(BoundedInputStream.BUFFER_SIZE);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96protectedfinalByteBufferbuf=ByteBuffer.allocate(ZipArchiveInputStream.BUFFER_SIZE);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96protectedfinalByteBufferbuf=ByteBuffer.allocate(ZipArchiveOutputStream.BUFFER_SIZE,1);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96finalByteBufferbuf=ByteBuffer.allocate(ZipArchiveOutputStream.BUFFER_SIZE,1);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96protectedfinalByteBufferbuf=ByteBuffer.allocate(ZipArchiveOutputStream.BUFFER_SIZE,2);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96privatestaticfinalByteBufferbuf=ByteBuffer.allocate(ZipArchiveOutputStream.BUFFER_SIZE,ZipArchiveInputStream.UTF8);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96privatestaticfinalByteBufferbuf=ByteBuffer.allocate(ZipArchiveOutputStream.BUFFER_SIZE,10);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96privatestaticfinalByteBufferbuf=ByteBuffer.allocate(ZipArchiveOutputStream.BUFFER_SIZE/1);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96privatestaticfinalByteBufferbuf=ByteBuffer.allocate(ZipArchiveOutputStream.BUFFER_SIZE+2);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96privatestaticfinalByteBufferbuf=ByteBuffer.allocate(ZipArchiveOutputStream.BUFFER_SIZE+4);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96staticfinalByteBufferbuf=ByteBuffer.allocate(ZipArchiveOutputStream.BUFFER_SIZE+1);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96staticfinalByteBufferbuf=ByteBuffer.allocate(ZipArchiveOutputStream.BUFFER_SIZE,1);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96staticfinalByteBufferbuf=ByteBuffer.allocate(ZipArchiveInputStream.BUFFER_SIZE);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96staticfinalByteBufferbuf=ByteBuffer.allocate(ZipArchiveOutputStream.BUFFER_SIZE,2);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96staticfinalByteBufferbuf=ByteBuffer.allocate(ZipArchiveOutputStream.BUFFER_SIZE,0);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96staticfinalByteBufferbuf=ByteBuffer.allocate(ZipArchiveOutputStream.BUFFER_SIZE,10);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96staticfinalByteBufferbuf=ByteBuffer.allocate(BoundedInputStream.BUFFER_SIZE);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96finalnullbuf=ByteBuffer.allocate(ZipArchiveOutputStream.BUFFER_SIZE);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96nullbuf=ByteBuffer.allocate(ZipArchiveOutputStream.BUFFER_SIZE,1);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96nullbuf=ByteBuffer.allocate(ZipArchiveOutputStream.BUFFER_SIZE,0);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96nullbuf=ByteBuffer.allocate(ZipArchiveOutputStream.BUFFER_SIZE+1);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96nullbuf=ByteBuffer.allocate(ZipArchiveOutputStream.BUFFER_SIZE,2);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96nullbuf=ByteBuffer.allocate(ZipArchiveInputStream.BUFFER_SIZE);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96privatefinalByteBufferbuf=ByteBuffer.allocate(ZipArchiveInputStream.BUFFER_SIZE+4);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96privatefinalByteBufferbuf=ByteBuffer.allocate(ZipArchiveInputStream.BUFFER_SIZE+3);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96finalZipArchiveInputStreamstream=newZipArchiveInputStream();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96AssertionError.warning("JSC_INTERNAL_ERROR","Unexpectedinitializationoftype{0}");
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96AssertionError.warning("JSC_INTERNAL_ERROR".getMessage());
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96AssertionError.warning("JSC_INTERNAL_ERROR");
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96finalZipArchiveInputStreamstream=newZipArchiveInputStream(System.err);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96AssertionError.warning("JSC_INTERNAL_ERROR",null);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96AssertionError.warning("JSC_INTERNAL_ERROR","Unexpectedinitializationoftype:{0}");
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96staticfinalByteBufferbuf=ByteBuffer.allocate(ZipArchiveOutputStream.BUFFER_SIZE-1);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96staticfinalByteBufferbuf=ByteBuffer.allocate(ZipArchiveInputStream.BUFFER_SIZE+1);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96staticfinalByteBufferbuf=ByteBuffer.allocate(ZipArchiveInputStream.BUFFER_SIZE,ZipArchiveOutputStream.UTF8);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96staticfinalByteBufferbuf=ByteBuffer.allocate(ZipArchiveInputStream.BUFFER_SIZE,0);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96staticfinallongbuf=ByteBuffer.allocate(ZipArchiveOutputStream.BUFFER_SIZE);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96privatefinalByteBufferbuf=ByteBuffer.allocate(ZipArchiveInputStream.BUFFER_SIZE-1);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96privatestaticfinalByteBufferbuf=ByteBuffer.allocate(ZipArchiveInputStream.BUFFER_SIZE,ZipArchiveInputStream.UTF8);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96privatefinalByteBufferbuf=ByteBuffer.allocate(ZipArchiveInputStream.DEFAULT_BUFFER_SIZE);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96privatestaticfinalByteBufferbuf=ByteBuffer.allocate(ZipArchiveInputStream.BUFFER_SIZE,ZipArchiveOutputStream.UTF8);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96privatestaticfinalByteBufferbuf=ByteBuffer.allocate(ZipArchiveOutputStream.BUFFER_SIZE+3);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96protectedfinalByteBufferbuf=ByteBuffer.allocate(ZipArchiveInputStream.BUFFER_SIZE+1);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96protectedfinalByteBufferbuf=ByteBuffer.allocate(ZipArchiveOutputStream.BUFFER_SIZE-1);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96protectedfinalByteBufferbuf=ByteBuffer.allocate(ZipArchiveInputStream.BUFFER_SIZE,0);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96protectedfinalByteBufferbuf=ByteBuffer.allocate(ZipArchiveInputStream.BUFFER_SIZE-1);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96protectedfinalByteBufferbuf=ByteBuffer.allocate(ZipArchiveOutputStream.BUFFER_SIZE,0);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96privatefinalByteBufferbuf=ByteBuffer.allocate(ZipArchiveOutputStream.BUFFER_SIZE*1);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96privatefinalByteBufferbuf=ByteBuffer.allocate(ZipArchiveOutputStream.BUFFER_SIZE*2-1);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96privatefinalByteBufferbuf=ByteBuffer.allocate(ZipArchiveOutputStream.BUFFER_SIZE+4);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96privatefinalByteBufferbuf=ByteBuffer.allocate(ZipArchiveOutputStream.BUFFER_SIZE+3);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96privatestaticfinalByteBufferbuf=ByteBuffer.allocate(ZipArchiveOutputStream.BUFFER_SIZE/2);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96privatestaticfinalByteBufferbuf=ByteBuffer.allocate(ZipArchiveOutputStream.BUFFER_SIZE*2);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96privatestaticfinalByteBufferbuf=ByteBuffer.allocate(ZipArchiveOutputStream.BUFFER_SIZE*1);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96nullbuf=ByteBuffer.allocate(ZipArchiveOutputStream.BUFFER_SIZE-1);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96nullbuf=ByteBuffer.allocate(ZipArchiveOutputStream.BUFFER_SIZE,ZipArchiveInputStream.UTF8);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96privatefinalByteBufferbuf=ByteBuffer.allocate(ZipArchiveInputStream.BUFFER_SIZE,ZipArchiveInputStream.DEFAULT);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96privatestaticfinalByteBufferbuf=ByteBuffer.allocate(ZipArchiveOutputStream.BUFFER_SIZE,ZipArchiveInputStream.DEFAULT);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96staticfinalByteBufferbuf=ByteBuffer.allocate(ZipArchiveOutputStream.BUFFER_SIZE,ZipArchiveInputStream.UTF8);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96staticfinalByteBufferbuf=ByteBuffer.allocate(ZipArchiveOutputStream.BUFFER_SIZE,ZipArchiveInputStream.DEFAULT);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96this.zipArchiveInputStream=newZipArchiveInputStream();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96this.zipArchiveInputStream=newZipArchiveInputStream(ZipArchiveInputStream.DEFAULT_INIT_ERROR);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96this.zipArchiveInputStream=newZipArchiveInputStream(System.currentTimeMillis());
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96this.zipArchiveInputStream=newZipArchiveInputStream(ZipArchiveInputStream.DEFAULT_SYNTHETIC);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96this.zipArchiveInputStream=newZipArchiveInputStream(ZipArchiveInputStream.DEFAULT_ENTRY_ERROR);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96this.zipArchiveInputStream=newZipArchiveInputStream(ZipArchiveInputStream.DEFAULT_SIZE);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96this.zipArchiveInputStream=newZipArchiveInputStream(ZipArchiveInputStream.DEFAULT_OUTPUT);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96protectedByteBufferbuf=ByteBuffer.allocate(ZipArchiveOutputStream.BUFFER_SIZE+1);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96protectedfinalByteBufferbuf=ByteBuffer.allocate(ZipArchiveOutputStream.BUFFER_SIZE,ZipArchiveInputStream.UTF8);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96protectedfinalByteBufferbuf=ByteBuffer.allocate(ZipArchiveInputStream.BUFFER_SIZE,ZipArchiveOutputStream.UTF8);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96privatestaticfinalByteBufferbuf=ByteBuffer.allocate(ZipArchiveInputStream.BUFFER_SIZE/1);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96privatefinalByteBufferbuf=ByteBuffer.allocate(ZipArchiveInputStream.BUFFER_SIZE/2);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96privatefinalByteBufferbuf=ByteBuffer.allocate(ZipArchiveInputStream.BUFFER_SIZE*2);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96privatefinalByteBufferbuf=ByteBuffer.allocate(ZipArchiveOutputStream.BUFFER_SIZE/2);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96privatestaticfinalByteBufferbuf=ByteBuffer.allocate(ZipArchiveInputStream.BUFFER_SIZE,10);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96privatefinalByteBufferbuf=ByteBuffer.allocate(ZipArchiveInputStream.BUFFER_SIZE,4);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96privatefinalByteBufferbuf=ByteBuffer.allocate(ZipArchiveInputStream.BUFFER_SIZE,3);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96privatefinalByteBufferbuf=ByteBuffer.allocate(ZipArchiveInputStream.BUFFER_SIZE,12);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96privatestaticfinalByteBufferbuf=ByteBuffer.allocate(ZipArchiveOutputStream.BUFFER_SIZE,4);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96AssertionError<K,V>currentEntry=newZipArchiveInputStream();System.arraycopy(currentEntry,0,currentEntry,0,currentEntry.length);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96AssertionError<?>currentEntry=newZipArchiveInputStream();System.arraycopy(currentEntry,0,currentEntry,0,currentEntry.length);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96AssertionError.this.currentEntry=newZipArchiveInputStream();System.arraycopy(currentEntry,0,currentEntry,0,currentEntry.length);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96AssertionError<K,V>currentEntry=newZipArchiveInputStream();System.arraycopy(currentEntry,0,currentEntry,0,currentEntry.length);}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96AssertionError<?>currentEntry=newAssertionError();System.arraycopy(currentEntry,0,currentEntry,0,currentEntry.length);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96AssertionError<?>currentEntry=newZipArchiveInputStream();System.arraycopy(currentEntry,0,currentEntry,0,currentEntry.length);}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96AssertionError.this.currentEntry=newZipArchiveInputStream();System.arraycopy(currentEntry,0,currentEntry,0,currentEntry.length);}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96protectedfinalByteBufferbuf=ByteBuffer.allocate(ZipArchiveInputStream.BUFFER_SIZE,1);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96protectedfinalByteBufferbuf=ByteBuffer.allocate(ZipArchiveInputStream.BUFFER_SIZE,2);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96finalByteBufferbuf=ByteBuffer.allocate(ZipArchiveInputStream.BUFFER_SIZE,1);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96protectedfinalByteBufferbuf=ByteBuffer.allocate(ZipArchiveInputStream.BUFFER_SIZE,4);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96protectedfinalByteBufferbuf=ByteBuffer.allocate(ZipArchiveInputStream.BUFFER_SIZE,10);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96protectedByteBufferbuf=ByteBuffer.allocate(ZipArchiveInputStream.BUFFER_SIZE,1);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96protectedfinalByteBufferbuf=ByteBuffer.allocate(ZipArchiveInputStream.BUFFER_SIZE,3);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96privatefinalByteBufferbuf=ByteBuffer.allocate(ZipArchiveOutputStream.BUFFER_SIZE,10);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96privatestaticfinalByteBufferbuf=ByteBuffer.allocate(ZipArchiveInputStream.BUFFER_SIZE/2);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96privatestaticfinalByteBufferbuf=ByteBuffer.allocate(ZipArchiveOutputStream.BUFFER_SIZE/3);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96staticfinalByteBufferbuf=ByteBuffer.allocate(ZipArchiveOutputStream.BUFFER_SIZE,4);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96staticfinalByteBufferbuf=ByteBuffer.allocate(ZipArchiveOutputStream.BUFFER_SIZE,3);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96staticfinalByteBufferbuf=ByteBuffer.allocate(ZipArchiveOutputStream.BUFFER_SIZE,12);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96staticfinalByteBufferbuf=ByteBuffer.allocate(ZipArchiveOutputStream.BUFFER_SIZE,16);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96privatestaticfinalByteBufferbuf=ByteBuffer.allocate(ZipArchiveInputStream.BUFFER_SIZE,0);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96privatestaticfinalByteBufferbuf=ByteBuffer.allocate(ZipArchiveInputStream.BUFFER_SIZE,1);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96this.zipArchiveInputStream=newZipArchiveInputStream(System.currentTimeMillis(),1);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96this.zipArchiveInputStream=newZipArchiveInputStream(System.currentTimeMillis(),System.currentTimeMillis());
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96this.zipArchiveInputStream=newZipArchiveInputStream(System.currentTimeMillis(),2);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96this.zipArchiveInputStream=newZipArchiveInputStream(System.currentTimeMillis()+1);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96this.zipArchiveInputStream=newZipArchiveInputStream(System.currentTimeMillis(),4);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96this.zipArchiveInputStream=newZipArchiveInputStream(System.currentTimeMillis(),BoundedInputStream.DEFAULT);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96finalByteBufferbuf=ByteBuffer.allocate(ZipArchiveInputStream.BUFFER_SIZE,ZipArchiveOutputStream.UTF8);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96staticfinalByteBufferbuf=ByteBuffer.allocate(ZipArchiveOutputStream.BUFFER_SIZE,ZipArchiveOutputStream.UTF8);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96staticfinalByteBufferbuf=ByteBuffer.allocate(ZipArchiveInputStream.BUFFER,ZipArchiveOutputStream.UTF8);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96staticfinalByteBufferbuf=ByteBuffer.allocate(ZipArchiveInputStream.BUFFER_SIZE,ZipArchiveOutputStream.UTF8)+1;
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96staticfinalByteBufferbuf=ByteBuffer.allocate(zipArchiveInputStream.BUFFER_SIZE,ZipArchiveOutputStream.UTF8);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96AssertionError.warning("JSC_INTERNAL_ERROR"+name,null);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96AssertionError.warning("JSC_INTERNAL_ERROR",null,expected);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96AssertionError.warning("JSC_INTERNAL_ERROR","identifiernotfollowedbyastringvalue");
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96AssertionError.warning("JSC_INTERNAL_ERROR","identifiernotfollowedbyaURI");
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96AssertionError.warning("JSC_INTERNAL_ERROR","identifiernotfollowedbyadigit");
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96AssertionError.warning("JSC_INTERNAL_ERROR","CannotinitializeaJSC_INTERNAL_ERRORvalue");
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96AssertionError<K,V>currentEntry=newZipArchiveInputStream();System.arraycopy(currentEntry.getValue(),0,currentEntry.getValue()+1,currentEntry.getValue());
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96AssertionError<K,V>currentEntry=newZipArchiveInputStream();System.arraycopy(currentEntry.getValue(),0,currentEntry.getValue()+1,currentEntry.getValue());}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96AssertionError<K,V>currentEntry=newZipArchiveInputStream();System.arraycopy(currentEntry.getKey(),0,currentEntry.getValue()+1,currentEntry.getValue());
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96mutableValues(currentEntry.getValue(),0,currentEntry.getValue()+1,currentEntry.getValue());
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96AssertionError<K,V>currentEntry=newZipArchiveInputStream();System.arraycopy(currentEntry.getValue(),0,currentEntry.getValue()*1,currentEntry.getValue());
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96AssertionError<K,V>currentEntry=newZipArchiveInputStream();System.arraycopy(currentEntry.getValue(),0,currentEntry.getValue(),currentEntry.getValue());
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96AssertionError<K,V>currentEntry=newZipArchiveInputStream();System.arraycopy(currentEntry.getValue(),1,currentEntry.getValue()+1,currentEntry.getValue());
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96AssertionError<?>currentEntry=newZipArchiveInputStream();System.arraycopy(currentEntry.getValue(),0,currentEntry.getValue(),currentEntry.getValue());
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96AssertionError<K,V>currentEntry=newZipArchiveInputStream();System.arraycopy(currentEntry.getKey(),0,currentEntry.getValue(),currentEntry.getValue());
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96AssertionError<K,V>currentEntry=newZipArchiveInputStream();System.arraycopy(currentEntry.getValue(),0,currentEntry.getValue(),currentEntry.getValue());}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96AssertionError<?>currentEntry=newZipArchiveInputStream();System.arraycopy(currentEntry.getKey(),0,currentEntry.getValue(),currentEntry.getValue());
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96AssertionError<?>currentEntry=newZipArchiveInputStream();System.arraycopy(currentEntry.getValue(),0,currentEntry.getValue(),currentEntry.getValue());}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96AssertionError<K,V>currentEntry=newZipArchiveInputStream();System.arraycopy(currentEntry.getValue(),1,currentEntry.getValue(),currentEntry.getValue());
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96staticfinalByteBufferbuf=ByteBuffer.allocate(ZipArchiveInputStream.BUFFER_SIZE,1);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96staticfinalByteBufferbuf=ByteBuffer.allocate(ZipArchiveInputStream.BUFFER_SIZE,2);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96staticfinalByteBufferbuf=ByteBuffer.allocate(ZipArchiveInputStream.BUFFER_SIZE,4);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96staticfinalByteBufferbuf=ByteBuffer.allocate(ZipArchiveInputStream.BUFFER_SIZE,10);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96staticfinalByteBufferbuf=ByteBuffer.allocate(ZipArchiveInputStream.BUFFER_SIZE,3);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96staticfinalByteBufferbuf=ByteBuffer.allocate(ZipArchiveInputStream.BUFFER_SIZE,12);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96this.zipArchiveInputStream=newZipArchiveInputStream(ZipArchiveInputStream.DEFAULT_ENTRY_ERROR,1);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96this.zipArchiveInputStream=newZipArchiveInputStream(ZipArchiveInputStream.DEFAULT_ENTRY_ERROR,true);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96this.zipArchiveInputStream=newZipArchiveInputStream(ZipArchiveInputStream.DEFAULT_ENTRY_ERROR,false);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96this.zipArchiveInputStream=newZipArchiveInputStream(ZipArchiveInputStream.DEFAULT_ENTRY_ERROR,null);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96this.zipArchiveInputStream=newZipArchiveInputStream(ZipArchiveInputStream.DEFAULT_ENTRY_ERROR,0);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96this.zipArchiveInputStream=newZipArchiveInputStream(ZipArchiveInputStream.DEFAULT_ENTRY_ERROR,2);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96this.zipArchiveInputStream=newZipArchiveInputStream(JarArchiveInputStream.DEFAULT_ENTRY_ERROR);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96privatestaticfinalByteBufferbuf=ByteBuffer.allocate(ZipArchiveOutputStream.BUFFER_SIZE,3);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96privatestaticfinalByteBufferbuf=ByteBuffer.allocate(ZipArchiveOutputStream.BUFFER_SIZE,12);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96privatestaticfinalByteBufferbuf=ByteBuffer.allocate(ZipArchiveOutputStream.BUFFER_SIZE,16);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96nullbuf=ByteBuffer.allocate(ZipArchiveOutputStream.BUFFER_SIZE,4);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96protectedfinalByteBufferbuf=ByteBuffer.allocate(ZipArchiveOutputStream.BUFFER_SIZE/1);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96protectedfinalByteBufferbuf=ByteBuffer.allocate(ZipArchiveOutputStream.BUFFER_SIZE*2);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96protectedfinalByteBufferbuf=ByteBuffer.allocate(ZipArchiveOutputStream.BUFFER_SIZE*2-1);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96privatestaticfinalByteBufferbuf=ByteBuffer.allocate(ZipArchiveOutputStream.BUFFER_SIZE*2-1);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96finalByteBufferbuf=ByteBuffer.allocate(ZipArchiveOutputStream.BUFFER_SIZE+1);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96privateByteBufferbuf=ByteBuffer.allocate(ZipArchiveOutputStream.BUFFER_SIZE+1);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96buffer=ByteBuffer.allocate(ZipArchiveOutputStream.BUFFER_SIZE+1);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96protectedByteBufferbuf=ByteBuffer.allocate(ZipArchiveOutputStream.BUFFER_SIZE+2);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96protectedfinalByteBufferbuf=ByteBuffer.allocate(ZipArchiveOutputStream.BUFFER_SIZE,4);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96protectedfinalByteBufferbuf=ByteBuffer.allocate(ZipArchiveOutputStream.BUFFER_SIZE,10);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96protectedByteBufferbuf=ByteBuffer.allocate(ZipArchiveOutputStream.BUFFER_SIZE,1);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96staticfinalZipArchiveInputStreamstream=newZipArchiveInputStream();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96finalZipArchiveInputStreamstream=newZipArchiveInputStream(System.out);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96finalZipArchiveInputStreamstream=newZipArchiveInputStream(this.currentEntry);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96finalZipArchiveInputStreamstream=newZipArchiveInputStream(currentEntry);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96finalZipArchiveInputStreamstream=newZipArchiveInputStream(System.in);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96protectedfinalByteBufferbuf=ByteBuffer.allocate(ZipArchiveOutputStream.BUFFER_SIZE,3);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96protectedfinalByteBufferbuf=ByteBuffer.allocate(ZipArchiveOutputStream.BUFFER_SIZE,2L);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96protectedfinalByteBufferbuf=ByteBuffer.allocate(ZipArchiveInputStream.BUFFER_SIZE/1);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96protectedfinalByteBufferbuf=ByteBuffer.allocate(ZipArchiveInputStream.BUFFER_SIZE*2);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96protectedfinalByteBufferbuf=ByteBuffer.allocate(ZipArchiveInputStream.BUFFER_SIZE*2-1);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96this.zipArchiveInputStream=newZipArchiveInputStream(System.err);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96this.zipArchiveInputStream=newZipArchiveInputStream(true);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96this.zipArchiveInputStream=newZipArchiveInputStream(0);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96this.zipArchiveInputStream=newZipArchiveInputStream(System.out);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96this.zipArchiveInputStream=newZipArchiveInputStream(this.currentEntry);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96this.zipArchiveInputStream=newZipArchiveInputStream(BoundedInputStream.DEFAULT);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96nullbuf=ByteBuffer.allocate(ZipArchiveOutputStream.BUFFER_SIZE/1);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96staticfinalByteBufferbuf=ByteBuffer.allocate(ZipArchiveOutputStream.BUFFER_SIZE/1);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96staticfinalByteBufferbuf=ByteBuffer.allocate(ZipArchiveOutputStream.BUFFER_SIZE+2);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96staticfinalByteBufferbuf=ByteBuffer.allocate(ZipArchiveOutputStream.BUFFER_SIZE+4);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96staticfinalByteBufferbuf=ByteBuffer.allocate(ZipArchiveOutputStream.BUFFER_SIZE+3);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96privatestaticfinalByteBufferbuf=ByteBuffer.allocate(ZipArchiveInputStream.BUFFER_SIZE,2);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96staticfinalByteBufferbuf=ByteBuffer.allocate(ZipArchiveOutputStream.BUFFER_SIZE*2);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96staticfinalByteBufferbuf=ByteBuffer.allocate(ZipArchiveOutputStream.BUFFER_SIZE*2-1);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96staticfinalByteBufferbuf=ByteBuffer.allocate(ZipArchiveInputStream.BUFFER_SIZE,ZipArchiveInputStream.UTF8);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96finalByteBufferbuf=ByteBuffer.allocate(ZipArchiveInputStream.BUFFER_SIZE,ZipArchiveInputStream.UTF8);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96privatestaticfinalByteBufferbuf=ByteBuffer.allocate(ZipArchiveInputStream.BUFFER_SIZE,ZipArchiveInputStream.US_ASCII);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96privatestaticfinalByteBufferbuf=ByteBuffer.allocate(zipArchiveInputStream.BUFFER_SIZE,ZipArchiveInputStream.UTF8);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96privatestaticfinalByteBufferbuf=ByteBuffer.allocate(ZipArchiveInputStream.BUFFER,ZipArchiveInputStream.UTF8);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96AssertionError<K,V>currentEntry=newZipArchiveInputStream();System.arraycopy(currentEntry.getValue(),0,currentEntry.getValue());
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96AssertionError<?>currentEntry=newZipArchiveInputStream();System.arraycopy(currentEntry.getValue(),0,currentEntry.getValue());
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96AssertionError<K,V>currentEntry=newZipArchiveInputStream();System.arraycopy(currentEntry.getKey(),0,currentEntry.getValue());
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96AssertionError<K,V>currentEntry=newZipArchiveInputStream();System.arraycopy(currentEntry.getValue(),0,currentEntry.getValue());}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96AssertionError<?>currentEntry=newZipArchiveInputStream();System.arraycopy(currentEntry.getKey(),0,currentEntry.getValue());
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96AssertionError<K,V>currentEntry=newZipArchiveInputStream();System.arraycopy(currentEntry.getValue(),1,currentEntry.getValue());
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96AssertionError<?>currentEntry=newZipArchiveInputStream();System.arraycopy(currentEntry.getValue(),0,currentEntry.getValue());}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96privatestaticfinalByteBufferbuf=ByteBuffer.allocate(ZipArchiveInputStream.DEFAULT,ZipArchiveOutputStream.BUFFER_SIZE);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96privatestaticfinalByteBufferbuf=ByteBuffer.allocate(ZipArchiveInputStream.BUFFER_SIZE,ZipArchiveInputStream.DEFAULT);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96privatestaticfinalByteBufferbuf=ByteBuffer.allocate(ZipArchiveOutputStream.BUFFER_SIZE,ZipArchiveInputStream.DEFAULT,0);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96privatestaticfinalByteBufferbuf=ByteBuffer.allocate(ZipArchiveInputStream.BUFFER_SIZE,ZipArchiveInputStream.DEFAULT,0);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96privatefinalByteBufferbuf=ByteBuffer.allocate(ZipArchiveInputStream.DEFAULT,ZipArchiveInputStream.BUFFER_SIZE);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96privatefinalByteBufferbuf=ByteBuffer.allocate(ZipArchiveInputStream.BUFFER_SIZE,ZipArchiveInputStream.DEFAULT,0);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96privatefinalByteBufferbuf=ByteBuffer.allocate(ZipArchiveInputStream.BUFFER_SIZE,ZipArchiveInputStream.DEFAULT,1);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96privatefinalByteBufferbuf=ByteBuffer.allocate(ZipArchiveInputStream.BUFFER_SIZE,ZipArchiveInputStream.DEFAULT,true);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96privatestaticfinalByteBufferbuf=ByteBuffer.allocate(ZipArchiveInputStream.DEFAULT_BUFFER_SIZE);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96privatefinalByteBufferbuf=ByteBuffer.allocate(ZipArchiveInputStream.DEFAULT_BUFFER_SIZE+1);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96privatefinalByteBufferbuf=ByteBuffer.allocate(ZipArchiveInputStream.DEFAULT_BUFFER_SIZE,1);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96privatefinalByteBufferbuf=ByteBuffer.allocate(ZipArchiveInputStream.DEFAULT_BUFFER_SIZE,2);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96privatefinalByteBufferbuf=ByteBuffer.allocate(BoundedInputStream.DEFAULT_BUFFER_SIZE);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96privatefinalByteBufferbuf=ByteBuffer.allocate(ZipArchiveInputStream.DEFAULT_BUFFER_SIZE,ZipArchiveInputStream.DEFAULT_BUFFER_SIZE);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96privatefinalByteBufferbuf=ByteBuffer.allocate(ZipArchiveInputStream.DEFAULT_BUFFER_SIZE,10);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96safeMultiply(currentEntry.getValue(),0,currentEntry.getValue(),currentEntry.getClass().getName());
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96safeMultiply(currentEntry.getValue(),currentEntry.getValue(),currentEntry.getClass().getName());
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96aughtExceptionHandler.handleMissingName(currentEntry.getClass(),currentEntry.getValue(),currentEntry.getClass().getName());
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96aughtExceptionHandler.handleMissingName(currentEntry.getValue(),currentEntry.getClass().getName());
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96safeMultiply(currentEntry.getValue(),false,currentEntry.getClass().getName());
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96safeMultiply(currentEntry.getValue(),0,currentEntry.getValue(),currentEntry.getClass().getName()));
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96AssertionError<K,V>currentEntry=newZipArchiveInputStream();System.arraycopy(currentEntry.getValue(),0,currentEntry.getValue(),currentEntry.getChronology());
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96AssertionError<?>currentEntry=newZipArchiveInputStream();System.arraycopy(currentEntry.getValue(),0,currentEntry.getValue(),currentEntry.getChronology());
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96AssertionError<T>currentEntry=newAssertionError(currentEntry.getKey(),currentEntry.getValue());System.arraycopy(currentEntry.getValue(),0,currentEntry.getValue(),currentEntry.getChronology());
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96AssertionError<K,V>currentEntry=newZipArchiveInputStream();System.arraycopy(currentEntry.getKey(),0,currentEntry.getValue(),currentEntry.getChronology());
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96AssertionError<K,V>currentEntry=newZipArchiveInputStream();System.arraycopy(currentEntry.getValue(),0,currentEntry.getValue(),currentEntry.getChronology());}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96AssertionError<K,V>currentEntry=newZipArchiveInputStream();System.arraycopy(currentEntry.getValue(),1,currentEntry.getValue(),currentEntry.getChronology());
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96AssertionError<T>currentEntry=newAssertionError(currentEntry.getValue(),0,currentEntry.getValue(),currentEntry.getChronology());
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96staticfinalByteBufferbuf=ByteBuffer.allocate(ZipArchiveInputStream.BUFFER_SIZE/1);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96staticfinalByteBufferbuf=ByteBuffer.allocate(ZipArchiveInputStream.BUFFER_SIZE+2);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96staticfinalByteBufferbuf=ByteBuffer.allocate(ZipArchiveInputStream.BUFFER_SIZE+4);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96staticfinalByteBufferbuf=ByteBuffer.allocate(ZipArchiveInputStream.BUFFER_SIZE+3);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96privatestaticfinalByteBufferbuf=ByteBuffer.allocate(ZipArchiveInputStream.BUFFER_SIZE-1);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96protectedByteBufferbuf=ByteBuffer.allocate(ZipArchiveInputStream.BUFFER_SIZE,ZipArchiveOutputStream.UTF8);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96privatefinalByteBufferbuf=ByteBuffer.allocate(ZipArchiveInputStream.BUFFER_SIZE,ZipArchiveOutputStream.UTF8);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96protectedfinalByteBufferbuf=ByteBuffer.allocate(ZipArchiveOutputStream.BUFFER_SIZE,ZipArchiveOutputStream.UTF8);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96protectedfinalByteBufferbuf=ByteBuffer.allocate(ZipArchiveInputStream.BUFFER_SIZE,ZipArchiveOutputStream.UTF8)+1;
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96protectedfinalByteBufferbuf=ByteBuffer.allocate(ZipArchiveInputStream.BUFFER_SIZE,ZipArchiveInputStream.UTF8);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96protectedByteBufferbuf=ByteBuffer.allocate(ZipArchiveInputStream.BUFFER_SIZE,ZipArchiveInputStream.UTF8);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96finalByteBufferbuf=ByteBuffer.allocate(ZipArchiveOutputStream.BUFFER_SIZE,ZipArchiveInputStream.UTF8);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96protectedByteBufferbuf=ByteBuffer.allocate(ZipArchiveOutputStream.BUFFER_SIZE,ZipArchiveInputStream.UTF8);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96AssertionError.warning("JSC_INTERNAL_ERROR"+getMessage());
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96AssertionError.error("JSC_INTERNAL_ERROR".getMessage());
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96AssertionError.warning("JSC_INTERNAL_ERROR"+getName());
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96AssertionError.warning("JSC_INTERNAL_ERROR:"+getMessage());
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96AssertionError.warning("JSC_INTERNAL_ERROR"+this.getMessage());
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96AssertionError.error("JSC_INTERNAL_ERROR");
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96AssertionError.warning("JSC_INTERNAL_ERROR"+name);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96AssertionError.warning("JSC_INTERNAL_ERROR"+identifier);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96AssertionError.warning("JSC_INTERNAL_ERROR"+this);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96privateByteBufferbuf=ByteBuffer.allocate(ZipArchiveInputStream.BUFFER_SIZE,ZipArchiveInputStream.UTF8);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96privatefinalByteBufferbuf=ByteBuffer.allocate(ZipArchiveInputStream.BUFFER_SIZE,ZipArchiveInputStream.US_ASCII);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96finalByteBufferbuf=ByteBuffer.allocate(ZipArchiveOutputStream.BUFFER_SIZE);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96AssertionError.error("JSC_INTERNAL_ERROR","Unexpectedinitializationoftype{0}");
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96AssertionError.warning("JSC_INTERNAL_ERROR"+"Unexpectedinitializationoftype{0}");
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96AssertionError.warning("JSC_INTERNAL_ERROR"+name,"Unexpectedinitializationoftype{0}");
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96AssertionError.warning("JSC_INTERNAL_ERROR"+File.separator+"Unexpectedinitializationoftype{0}");
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96AssertionError.warning("JSC_INTERNAL_ERROR"+File.separatorChar+"Unexpectedinitializationoftype{0}");
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96staticfinalByteBufferbuf=ByteBuffer.allocate(ZipArchiveInputStream.BUFFER_SIZE,ZipArchiveInputStream.US_ASCII);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96staticfinalByteBufferbuf=ByteBuffer.allocate(ZipArchiveInputStream.BUFFER,ZipArchiveInputStream.UTF8);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96protectedfinalByteBufferbuf=ByteBuffer.allocate(ZipArchiveOutputStream.BUFFER_SIZE+2);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96this.zipArchiveInputStream=newZipArchiveInputStream(ZipArchiveInputStream.DEFAULT_SYNTHETIC,1);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96this.zipArchiveInputStream=newZipArchiveInputStream(ZipArchiveInputStream.DEFAULT_SYNTHETIC,2);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96this.zipArchiveInputStream=newZipArchiveInputStream(ZipArchiveInputStream.DEFAULT_SYNTHETIC,true);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96this.zipArchiveInputStream=newZipArchiveInputStream(ZipArchiveInputStream.DEFAULT_SYNTHETIC,0);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96this.zipArchiveInputStream=newZipArchiveInputStream(ZipArchiveInputStream.DEFAULT_SYNTHETIC,false);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96this.zipArchiveInputStream=newZipArchiveInputStream(ZipArchiveInputStream.DEFAULT_SYNTHETIC,-1);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96privatefinalByteBufferbuf=ByteBuffer.allocate(ZipArchiveInputStream.BUFFER_SIZE*1);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96NullBufferbuf=ByteBuffer.allocate(ZipArchiveOutputStream.BUFFER_SIZE,1);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96nullbuf=ByteBuffer.allocate(ZipArchiveInputStream.BUFFER_SIZE,1);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96nullbuf=ByteBuffer.allocate(ZipArchiveOutputStream.BUFFER_SIZE+2);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96NullBufferbuf=ByteBuffer.allocate(ZipArchiveOutputStream.BUFFER_SIZE+1);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96nullbuf=ByteBuffer.allocate(ZipArchiveInputStream.BUFFER_SIZE+1);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96staticfinalintbuf=ByteBuffer.allocate(ZipArchiveOutputStream.BUFFER_SIZE);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96staticfinallongbuf=ByteBuffer.allocate(ZipArchiveInputStream.BUFFER_SIZE);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96staticfinallongbuf=ByteBuffer.allocate(ZipArchiveOutputStream.BUFFER_SIZE,1);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96staticfinallongbuf=ByteBuffer.allocate(ZipArchiveOutputStream.BUFFER_SIZE+1);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96staticfinallongbuf=ByteBuffer.allocate(ZipArchiveOutputStream.BUFFER_SIZE,2);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96staticfinallongbuf=ByteBuffer.allocate(ZipArchiveOutputStream.BUFFER_SIZE,10);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96staticfinallongbuf=ByteBuffer.allocate(ZipArchiveOutputStream.BUFFER_SIZE,0);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96AssertionError.error("JSC_INTERNAL_ERROR","Unexpectedinitializationoftype:{0}");
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96AssertionError.warning("JSC_INTERNAL_ERROR"+"Unexpectedinitializationoftype:{0}");
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96AssertionError.warning("JSC_INTERNAL_ERROR"+name,"Unexpectedinitializationoftype:{0}");
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96AssertionError.warning("JSC_INTERNAL_ERROR"+File.separator+"Unexpectedinitializationoftype:{0}");
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96AssertionError.warning("JSC_INTERNAL_ERROR"+File.separatorChar+"Unexpectedinitializationoftype:{0}");
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96AssertionError.warning("JSC_INTERNAL_ERROR"+",expectedinitializationoftype:{0}");
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96privatestaticfinalByteBufferbuf=ByteBuffer.allocate(ZipArchiveOutputStream.BUFFER_SIZE*4);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96privatestaticfinalByteBufferbuf=ByteBuffer.allocate(ZipArchiveInputStream.BUFFER_SIZE+2);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96privatestaticfinalByteBufferbuf=ByteBuffer.allocate(ZipArchiveInputStream.BUFFER_SIZE+4);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96finalByteBufferbuf=ByteBuffer.allocate(ZipArchiveOutputStream.BUFFER_SIZE,2);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96privatestaticfinalByteBufferbuf=ByteBuffer.allocate(ZipArchiveOutputStream.BUFFER_SIZE/4);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96this.zipArchiveInputStream=newZipArchiveInputStream(ZipArchiveInputStream.DEFAULT_SIZE+1);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96this.zipArchiveInputStream=newZipArchiveInputStream(ZipArchiveInputStream.DEFAULT_SIZE,1);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96this.zipArchiveInputStream=newZipArchiveInputStream(ZipArchiveInputStream.DEFAULT_SIZE,2);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96this.zipArchiveInputStream=newZipArchiveInputStream(ZipArchiveInputStream.DEFAULT_SIZE,true);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96this.zipArchiveInputStream=newZipArchiveInputStream(ZipArchiveInputStream.DEFAULT_SIZE-1);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96this.zipArchiveInputStream=newZipArchiveInputStream(ZipArchiveInputStream.DEFAULT_SIZE,4);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96finalByteBufferbuf=ByteBuffer.allocate(ZipArchiveOutputStream.BUFFER_SIZE,4);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96finalByteBufferbuf=ByteBuffer.allocate(ZipArchiveOutputStream.BUFFER_SIZE,0);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96finalByteBufferbuf=ByteBuffer.allocate(ZipArchiveOutputStream.BUFFER_SIZE,3);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96finalByteBufferbuf=ByteBuffer.allocate(ZipArchiveOutputStream.BUFFER_SIZE,1L);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96staticfinalByteBufferbuf=ByteBuffer.allocate(ZipArchiveOutputStream.BUFFER_SIZE,1L);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96staticfinalByteBufferbuf=ByteBuffer.allocate(ZipArchiveInputStream.DEFAULT,ZipArchiveOutputStream.BUFFER_SIZE);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96staticfinalByteBufferbuf=ByteBuffer.allocate(ZipArchiveInputStream.BUFFER_SIZE,ZipArchiveInputStream.DEFAULT);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96staticfinalByteBufferbuf=ByteBuffer.allocate(ZipArchiveInputStream.BUFFER_SIZE,ZipArchiveInputStream.DEFAULT,0);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96staticfinalByteBufferbuf=ByteBuffer.allocate(ZipArchiveOutputStream.BUFFER_SIZE,ZipArchiveInputStream.DEFAULT,0);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96staticfinalByteBufferbuf=ByteBuffer.allocate(ZipArchiveInputStream.DEFAULT,ZipArchiveOutputStream.BUFFER);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96privatestaticfinalByteBufferbuf=ByteBuffer.allocate(ZipArchiveInputStream.BUFFER_SIZE*2);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96privatestaticfinalByteBufferbuf=ByteBuffer.allocate(ZipArchiveInputStream.BUFFER_SIZE*1);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96AssertionError<K,V>currentEntry=newZipArchiveInputStream();System.arraycopy(currentEntry.getValue(),currentEntry.getKey(),currentEntry.getValue());
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96AssertionError<?>currentEntry=newZipArchiveInputStream();System.arraycopy(currentEntry.getValue(),currentEntry.getKey(),currentEntry.getValue());
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96AssertionError<K,V>currentEntry=newZipArchiveInputStream();System.arraycopy(currentEntry.getValue(),currentEntry.getKey(),currentEntry.getValue());}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96AssertionError<K,V>currentEntry=newZipArchiveInputStream();System.arraycopy(currentEntry.getKey(),currentEntry.getValue(),currentEntry.getValue());
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96AssertionError<?>currentEntry=newZipArchiveInputStream();System.arraycopy(currentEntry.getKey(),currentEntry.getValue(),currentEntry.getValue());
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96AssertionError<?>currentEntry=newZipArchiveInputStream();System.arraycopy(currentEntry.getValue(),currentEntry.getKey(),currentEntry.getValue());}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96AssertionError<K,V>currentEntry=newZipArchiveInputStream();System.arraycopy(currentEntry.getValue()+1,currentEntry.getKey(),currentEntry.getValue());
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96finalByteBufferbuf=ByteBuffer.allocate(ZipArchiveInputStream.BUFFER_SIZE+1);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96protectedfinalByteBufferbuf=ByteBuffer.allocate(ZipArchiveInputStream.BUFFER_SIZE+2);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96protectedByteBufferbuf=ByteBuffer.allocate(ZipArchiveInputStream.BUFFER_SIZE+1);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96protectedfinalByteBufferbuf=ByteBuffer.allocate(BoundedInputStream.BUFFER_SIZE+1);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96protectedfinalByteBufferbuf=ByteBuffer.allocate(BoundedInputStream.BUFFER_SIZE,1);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96protectedfinalByteBufferbuf=ByteBuffer.allocate(BoundedInputStream.BUFFER_SIZE,2);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96finalByteBufferbuf=ByteBuffer.allocate(BoundedInputStream.BUFFER_SIZE,1);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96protectedfinalByteBufferbuf=ByteBuffer.allocate(BoundedInputStream.BUFFER_SIZE-1);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96protectedfinalByteBufferbuf=ByteBuffer.allocate(BoundedInputStream.BUFFER_SIZE,4);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96privatefinalByteBufferbuf=ByteBuffer.allocate(ZipArchiveOutputStream.BUFFER_SIZE/2-1);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96privatestaticfinalByteBufferbuf=ByteBuffer.allocate(ZipArchiveOutputStream.BUFFER_SIZE/2-1);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96finalZipArchiveInputStreamstream=newZipArchiveInputStream(System.err,System.err);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96finalZipArchiveInputStreamstream=newZipArchiveInputStream(System.err,1);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96staticfinalZipArchiveInputStreamstream=newZipArchiveInputStream(System.err);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96finalZipArchiveInputStreamstream=newZipArchiveInputStream(System.err,0);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96finalZipArchiveInputStreamstream=newZipArchiveInputStream(System.err,true);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96finalZipArchiveOutputStreamzipArchiveOutputStream=ByteBuffer.allocate(ZipArchiveOutputStream.BUFFER_SIZE);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96finalintbuf=ByteBuffer.allocate(ZipArchiveOutputStream.BUFFER_SIZE);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96finalZipArchiveInputStreamstream=ByteBuffer.allocate(ZipArchiveOutputStream.BUFFER_SIZE);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96finalZipArchiveOutputStreamzipArchiveInputStream=ByteBuffer.allocate(ZipArchiveOutputStream.BUFFER_SIZE);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96finalStringbuf=ByteBuffer.allocate(ZipArchiveOutputStream.BUFFER_SIZE);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96finalZipArchiveInputStreamzipArchiveInputStream=ByteBuffer.allocate(ZipArchiveOutputStream.BUFFER_SIZE);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96finalZipArchiveInputStreamzipArchiveOutputStream=ByteBuffer.allocate(ZipArchiveOutputStream.BUFFER_SIZE);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96nullbuf=ByteBuffer.allocate(ZipArchiveInputStream.BUFFER_SIZE,ZipArchiveInputStream.UTF8);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96NullBufferbuf=ByteBuffer.allocate(ZipArchiveInputStream.BUFFER_SIZE,ZipArchiveInputStream.UTF8);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96finalnullbuf=ByteBuffer.allocate(ZipArchiveOutputStream.BUFFER_SIZE,ZipArchiveInputStream.UTF8);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96finalnullbuf=ByteBuffer.allocate(ZipArchiveInputStream.BUFFER_SIZE,ZipArchiveInputStream.UTF8);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96finalByteBufferbuf=ByteBuffer.allocate(ZipArchiveInputStream.BUFFER_SIZE);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96privatefinalByteBufferbuf=ByteBuffer.allocate(ZipArchiveInputStream.BUFFER_SIZE/4);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96finalnullbuf=ByteBuffer.allocate(ZipArchiveInputStream.BUFFER_SIZE);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96nullbuf=ByteBuffer.allocate(ZipArchiveInputStream.BUFFER_SIZE,0);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96nullbuf=ByteBuffer.allocate(ZipArchiveInputStream.BUFFER_SIZE,2);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96nullbuf=ByteBuffer.allocate(BoundedInputStream.BUFFER_SIZE);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96staticfinalByteBufferbuf=ByteBuffer.allocate(BoundedInputStream.BUFFER_SIZE+1);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96staticfinalByteBufferbuf=ByteBuffer.allocate(BoundedInputStream.BUFFER_SIZE,1);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96staticfinalByteBufferbuf=ByteBuffer.allocate(BoundedInputStream.BUFFER_SIZE,2);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96staticfinalByteBufferbuf=ByteBuffer.allocate(BoundedInputStream.BUFFER_SIZE,4);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96staticfinalByteBufferbuf=ByteBuffer.allocate(BoundedInputStream.DEFAULT_BUFFER_SIZE);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96staticfinalByteBufferbuf=ByteBuffer.allocate(BoundedInputStream.BUFFER_SIZE-1);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96staticfinalByteBufferbuf=ByteBuffer.allocate(BoundedInputStream.BUFFER_SIZE,0);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96privatestaticfinalByteBufferbuf=ByteBuffer.allocate(ZipArchiveOutputStream.BUFFER_SIZE,2L);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96privatestaticfinalByteBufferbuf=ByteBuffer.allocate(ZipArchiveOutputStream.BUFFER_SIZE,2-1);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96this.zipArchiveInputStream=newZipArchiveInputStream(ZipArchiveInputStream.DEFAULT_INIT_ERROR,1);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96this.zipArchiveInputStream=newZipArchiveInputStream(ZipArchiveInputStream.DEFAULT_INIT_ERROR,true);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96this.zipArchiveInputStream=newZipArchiveInputStream(ZipArchiveInputStream.DEFAULT_INIT_ERROR,false);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96this.zipArchiveInputStream=newZipArchiveInputStream(ZipArchiveInputStream.DEFAULT_INIT_ERROR,null);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96this.zipArchiveInputStream=newZipArchiveInputStream(ZipArchiveInputStream.DEFAULT_INIT_ERROR,0);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96this.zipArchiveInputStream=newZipArchiveInputStream(ZipArchiveInputStream.DEFAULT_INIT_ERROR,-1);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96this.zipArchiveInputStream=newZipArchiveInputStream(ZipArchiveInputStream.DEFAULT_INIT_ERROR,2);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96staticfinalByteBufferbuf=ByteBuffer.allocate(ZipArchiveOutputStream.BUFFER_SIZE,2L);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96privatestaticfinalByteBufferbuf=ByteBuffer.allocate(ZipArchiveOutputStream.BUFFER_SIZE,ZipArchiveOutputStream.UTF8);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96privatestaticfinalByteBufferbuf=ByteBuffer.allocate(ZipArchiveInputStream.BUFFER,ZipArchiveOutputStream.UTF8);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96this.zipArchiveInputStream=newZipArchiveInputStream(ZipArchiveInputStream.DEFAULT_OUTPUT,1);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96this.zipArchiveInputStream=newZipArchiveInputStream(ZipArchiveInputStream.DEFAULT_OUTPUT+1);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96this.zipArchiveInputStream=newZipArchiveInputStream(ZipArchiveInputStream.DEFAULT_OUTPUT,2);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96this.zipArchiveInputStream=newZipArchiveInputStream(ZipArchiveInputStream.DEFAULT_OUTPUT,4);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96this.zipArchiveInputStream=newZipArchiveInputStream(ZipArchiveInputStream.DEFAULT_OUTPUT,true);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96this.zipArchiveInputStream=newZipArchiveInputStream(ZipArchiveInputStream.DEFAULT_OUTPUT,0);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96staticfinalByteBufferbuf=ByteBuffer.allocate(BoundedInputStream.UTF_8);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96staticfinalByteBufferbuf=ByteBuffer.allocate(BoundedInputStream.US_ASCII);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96staticfinalByteBufferbuf=ByteBuffer.allocate(BoundedInputStream.DEFAULT_SIZE);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96this.zipArchiveInputStream=newZipArchiveInputStream(ZipArchiveInputStream.DEFAULT_OUTPUT,-1);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96protectedfinalByteBufferbuf=ByteBuffer.allocate(ZipArchiveInputStream.BUFFER_SIZE+4);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96protectedfinalByteBufferbuf=ByteBuffer.allocate(ZipArchiveInputStream.BUFFER_SIZE+3);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96privatestaticfinalByteBufferbuf=ByteBuffer.allocate(ZipArchiveOutputStream.BUFFER_SIZE,32);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96staticfinalByteBufferbuf=ByteBuffer.allocate(ZipArchiveInputStream.BUFFER_SIZE,0L);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96this.zipArchiveInputStream=newZipArchiveInputStream(newBoundedInputStream());
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96staticfinalByteBufferbuf=ByteBuffer.allocate(ZipArchiveInputStream.BUFFER_SIZE-1);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96staticfinalByteBufferbuf=ByteBuffer.allocate(ZipArchiveInputStream.DEFAULT_BUFFER_SIZE);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96staticfinalByteBufferbuf=ByteBuffer.allocate(ZipArchiveInputStream.DEFAULT_SIZE);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96privatestaticfinalByteBufferbuf=ByteBuffer.allocate(ZipArchiveOutputStream.BUFFER_SIZE*3);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96this.zipArchiveInputStream=newZipArchiveInputStream(System.currentTimeMillis(),32);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96privatefinalByteBufferbuf=ByteBuffer.allocate(ZipArchiveInputStream.DEFAULT,ZipArchiveInputStream.BUFFER);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96privatefinalByteBufferbuf=ByteBuffer.allocate(ZipArchiveInputStream.DEFAULT_SIZE,ZipArchiveInputStream.DEFAULT);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96this.zipArchiveInputStream=newZipArchiveInputStream(ZipArchiveInputStream.DEFAULT_SIZE,false);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96privatestaticfinalByteBufferbuf=ByteBuffer.allocate(ZipArchiveOutputStream.BUFFER_SIZE/2+1);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96protectedfinalByteBufferbuf=ByteBuffer.allocate(ZipArchiveInputStream.BUFFER_SIZE,0L);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96privatestaticfinalByteBufferbuf=ByteBuffer.allocate(ZipArchiveInputStream.BUFFER_SIZE/4);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96finalZipArchiveInputStreamstream=newZipArchiveInputStream(System.out,System.err);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96privatefinalByteBufferbuf=ByteBuffer.allocate(ZipArchiveInputStream.DEFAULT_BUFFER_SIZE-1);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96privatestaticfinalByteBufferbuf=ByteBuffer.allocate(ZipArchiveInputStream.DEFAULT_BUFFER_SIZE,ZipArchiveInputStream.DEFAULT_BUFFER_SIZE);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96privatefinalByteBufferbuf=ByteBuffer.allocate(ZipArchiveInputStream.DEFAULT_BUFFER_SIZE,0);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96privatestaticfinalByteBufferbuf=ByteBuffer.allocate(ZipArchiveInputStream.DEFAULT_BUFFER_SIZE,0);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96safeMultiply(currentEntry.getKey(),currentEntry.getValue(),currentEntry.getClass().getName());
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96safeMultiply(currentEntry.getValue(),currentEntry.getValue(),currentEntry.getClass().getName()));
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96safeMultiply(currentEntry.getValue(),currentEntry.getClass().getName()));
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96safeMultiply(currentEntry.getKey(),currentEntry.getValue(),currentEntry.getClass().getName()));
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96privatefinalByteBufferbuf=ByteBuffer.allocate(ZipArchiveOutputStream.BUFFER_SIZE/3);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96this.zipArchiveInputStream=newZipArchiveInputStream(ZipArchiveInputStream.DEFAULT_ENTRY_ERROR,-1);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96this.zipArchiveInputStream=newZipArchiveInputStream(ZipArchiveInputStream.DEFAULT_TEMP_ERROR);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96privatefinalByteBufferbuf=ByteBuffer.allocate(ZipArchiveOutputStream.BUFFER_SIZE/4);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96privatestaticfinalByteBufferbuf=ByteBuffer.allocate(ZipArchiveInputStream.BUFFER_SIZE+3);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96staticfinalByteBufferbuf=ByteBuffer.allocate(ZipArchiveOutputStream.BUFFER_SIZE*1);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96staticfinalByteBufferbuf=ByteBuffer.allocate(ZipArchiveOutputStream.BUFFER_SIZE-2);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96finalprotectedByteBufferbuf=ByteBuffer.allocate(ZipArchiveOutputStream.BUFFER_SIZE+1);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96protectedByteBufferbuf=ByteBuffer.allocate(ZipArchiveOutputStream.BUFFER_SIZE/1);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96safeMultiply(currentEntry.getValue(),System.arraycopy(currentEntry.getValue(),0,currentEntry.getValue(),currentEntry.getChronology()));
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96safeMultiply(currentEntry.getValue(),System.arraycopy(currentEntry.getValue(),0,currentEntry.getValue(),currentEntry.getChronology());
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96safeMultiply(currentEntry.getValue(),System.arraycopy(currentEntry.getKey(),0,currentEntry.getValue(),currentEntry.getChronology()));
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96safeMultiply(currentEntry.getValue(),System.arraycopy(currentEntry.getValue(),0,currentEntry.getValue()),currentEntry.getChronology());
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96safeMultiply(currentEntry.getValue(),System.arraycopy(currentEntry.getValue(),currentEntry.getValue(),currentEntry.getChronology()));
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96safeMultiply(currentEntry.getValue(),System.arraycopy(currentEntry.getValue(),0,currentEntry.getValue(),currentEntry.getChronology()),false);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96Nullbuf=ByteBuffer.allocate(ZipArchiveOutputStream.BUFFER_SIZE,1);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96safeMultiply(currentEntry.getValue(),currentEntry.getValue()+1,currentEntry.getValue());
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96mutableValues(currentEntry.getValue(),currentEntry.getValue()+1,currentEntry.getValue());
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96safeMultiply(currentEntry.getValue(),currentEntry.getValue()),currentEntry.getValue());
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96mutableValues(currentEntry.getValue(),currentEntry.getValue(),currentEntry.getValue());
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96safeMultiply(currentEntry.getValue(),currentEntry.getValue()));
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96mutableValues(currentEntry.getValue(),currentEntry.getValue(),currentEntry.getValue()));
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96Nullbuf=ByteBuffer.allocate(ZipArchiveOutputStream.BUFFER_SIZE+1);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96staticfinallongbuf=ByteBuffer.allocate(ZipArchiveOutputStream.BUFFER_SIZE-1);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96staticfinalbytebuf=ByteBuffer.allocate(ZipArchiveOutputStream.BUFFER_SIZE);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96privatestaticfinalByteBufferbuf=ByteBuffer.allocate(zipArchiveOutputStream.BUFFER_SIZE,ZipArchiveInputStream.UTF8);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96privatestaticfinalByteBufferbuf=ByteBuffer.allocate(ZipArchiveInputStream.BUFFER_SIZE,ZipArchiveInputStream.UTF4);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96AssertionError.warning("JSC_INTERNAL_ERROR","Cannotaccesspath:{0}");
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96AssertionError.warning("JSC_INTERNAL_ERROR","Cannotaccesspath:{0}",null);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96AssertionError.warning("JSC_INTERNAL_ERROR","Unexpectedidentifier:{0}");
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96AssertionError.warning("JSC_INTERNAL_ERROR","Unexpectedidentifier:{0}",null);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96AssertionError.warning("JSC_INTERNAL_ERROR","Cannotaccesspath:{0}",name);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96AssertionError.warning("JSC_INTERNAL_ERROR","CannotaccessavalidZipArchiveInputStreamfor{0}");
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96AssertionError.warning("JSC_INTERNAL_ERROR","Unexpectedinitializationoftype{0}",name);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96AssertionError.warning("JSC_INTERNAL_ERROR","Unexpectedinitializationoftype{0}",expected);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96AssertionError.warning("JSC_INTERNAL_ERROR","Unexpectedinitializationoftype{0}",this);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96AssertionError.warning("JSC_INTERNAL_ERROR"+identifierName.getMessage());
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96AssertionError.warning("JSC_INTERNAL_ERROR:missing"{0}".getMessage());
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96AssertionError.warning("JSC_INTERNAL_ERROR:""+getMessage());
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96privatefinalByteBufferbuf=ByteBuffer.allocate(ZipArchiveOutputStream.BUFFER_SIZE/2+1);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96staticfinalByteBufferbuf=ByteBuffer.allocate(ZipArchiveOutputStream.BUFFER_SIZE,32);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96privatefinalByteBufferbuf=ByteBuffer.allocate(ZipArchiveInputStream.BUFFER_SIZE,16);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96privatefinalByteBufferbuf=ByteBuffer.allocate(ZipArchiveInputStream.BUFFER_SIZE/2+1);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96privatefinalByteBufferbuf=ByteBuffer.allocate(ZipArchiveInputStream.BUFFER_SIZE/2-1);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96protectedfinalByteBufferbuf=ByteBuffer.allocate(ZipArchiveOutputStream.BUFFER_SIZE*1);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96AssertionError<K,V>currentEntry=newAssertionError(currentEntry.getValue());System.arraycopy(currentEntry.getValue(),currentEntry.getKey(),currentEntry.getValue());
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96AssertionError<?>currentEntry=newZipArchiveInputStream();System.arraycopy(currentEntry.getKey(),currentEntry.getKey(),currentEntry.getValue());
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96AssertionError<K,V>currentEntry=newAssertionError(currentEntry.getValue());System.arraycopy(currentEntry.getKey(),currentEntry.getKey(),currentEntry.getValue());
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96AssertionError<K,V>currentEntry=newAssertionError(currentEntry.getValue());System.arraycopy(currentEntry.getValue(),currentEntry.getKey(),currentEntry.getValu
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96finalByteBufferbuf=ByteBuffer.allocate(ZipArchiveOutputStream.BUFFER_SIZE,ZipArchiveInputStream.DEFAULT);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96privatestaticfinalByteBufferbuf=ByteBuffer.allocate(ZipArchiveInputStream.DEFAULT,ZipArchiveOutputStream.BUFFER);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96privatestaticfinalByteBufferbuf=ByteBuffer.allocate(ZipArchiveOutputStream.DEFAULT,ZipArchiveInputStream.BUFFER_SIZE);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96privatestaticfinalByteBufferbuf=ByteBuffer.allocate(ZipArchiveInputStream.BUFFER,ZipArchiveInputStream.DEFAULT);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96privatefinalByteBufferbuf=ByteBuffer.allocate(ZipArchiveOutputStream.BUFFER_SIZE*4);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96finalByteBufferbuf=ByteBuffer.allocate(ZipArchiveOutputStream.BUFFER_SIZE,32);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96finalByteBufferbuf=ByteBuffer.allocate(ZipArchiveOutputStream.BUFFER_SIZE,16);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96nullbuf=ByteBuffer.allocate(ZipArchiveOutputStream.BUFFER_SIZE*1);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96Nullbuf=ByteBuffer.allocate(ZipArchiveOutputStream.BUFFER_SIZE-1);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96AssertionError.warning("JSC_INTERNAL_ERROR",currentEntry);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96AssertionError.warning("JSC_RESULT_ERROR",currentEntry);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96AssertionError.checkState(currentEntry!=null);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96AssertionError.warning("JSC_INTERNAL_ERROR",currentEntry.length);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96AssertionError.warning("JSC_NOT_START_ERROR");
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96AssertionError.checkState(currentEntry==null);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96protectedfinalByteBufferbuf=ByteBuffer.allocate(ZipArchiveInputStream.DEFAULT_SIZE);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96protectedfinalByteBufferbuf=ByteBuffer.allocate(ZipArchiveInputStream.DEFAULT_BUFFER_SIZE);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96protectedfinalByteBufferbuf=ByteBuffer.allocate(zipArchiveInputStream.BUFFER_SIZE);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96finalZipArchiveInputStreamstream=newZipArchiveInputStream(true);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96finalZipArchiveInputStreamstream=newZipArchiveInputStream(System.currentTimeMillis());
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96finalZipArchiveInputStreamstream=newZipArchiveInputStream(0);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96staticfinalByteBufferbuf=ByteBuffer.allocate(ZipArchiveOutputStream.BUFFER_SIZE,2-1);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96nullbuf=ByteBuffer.allocate(ZipArchiveInputStream.BUFFER_SIZE-1);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96protectedfinalByteBufferbuf=ByteBuffer.allocate(ZipArchiveInputStream.BUFFER_SIZE*1);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96finalByteBufferbuf=ByteBuffer.allocate(ZipArchiveInputStream.BUFFER_SIZE-1);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96privatefinalByteBufferbuf=ByteBuffer.allocate(ZipArchiveOutputStream.BUFFER_SIZE*2+1);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96Nullbuf=ByteBuffer.allocate(ZipArchiveInputStream.BUFFER_SIZE,ZipArchiveInputStream.UTF8);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96Nullbuf=ByteBuffer.allocate(ZipArchiveOutputStream.BUFFER_SIZE,ZipArchiveInputStream.UTF8);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96privatestaticfinalByteBufferbuf=ByteBuffer.allocate(ZipArchiveInputStream.DEFAULT_SIZE);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96privatefinalByteBufferbuf=ByteBuffer.allocate(zipArchiveInputStream.BUFFER_SIZE,ZipArchiveInputStream.UTF8);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96privatefinalByteBufferbuf=ByteBuffer.allocate(ZipArchiveInputStream.BUFFER,ZipArchiveInputStream.UTF8);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96privatestaticfinalByteBufferbuf=ByteBuffer.allocate(ZipArchiveOutputStream.BUFFER_SIZE*2+1);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96protectedfinalByteBufferbuf=ByteBuffer.allocate(ZipArchiveOutputStream.BUFFER_SIZE+4);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96protectedfinalByteBufferbuf=ByteBuffer.allocate(ZipArchiveOutputStream.BUFFER_SIZE+3);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96protectedfinalByteBufferbuf=ByteBuffer.allocate(ZipArchiveInputStream.BUFFER,ZipArchiveOutputStream.UTF8);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96privatefinalByteBufferbuf=ByteBuffer.allocate(ZipArchiveInputStream.BUFFER_SIZE*2-1);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96protectedfinalByteBufferbuf=ByteBuffer.allocate(ZipArchiveOutputStream.BUFFER_SIZE,2-1);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96protectedfinalByteBufferbuf=ByteBuffer.allocate(ZipArchiveOutputStream.BUFFER_SIZE,16);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96AssertionError.warning("JSC_INTERNAL_ERROR:expected");
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96AssertionError.warning("JSC_INTERNAL_ERROR"+identifierName);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96privatefinalByteBufferbuf=ByteBuffer.allocate(ZipArchiveOutputStream.BUFFER_SIZE*4-1);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96privatefinalByteBufferbuf=ByteBuffer.allocate(ZipArchiveInputStream.BUFFER_SIZE/3);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96AssertionError<ZipArchiveInputStream>currentEntry=newZipArchiveInputStream();System.arraycopy(currentEntry.getValue(),0,currentEntry.getValue(),currentEntry.getValue());
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96AssertionError<K,V>currentEntry=newAssertionError(currentEntry.getValue());System.arraycopy(currentEntry.getValue(),0,currentEntry.getValue(),currentEntry.getValue());
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96AssertionError<K,V>currentEntry=newAssertionError(currentEntry.getKey());System.arraycopy(currentEntry.getValue(),0,currentEntry.getValue(),currentEntry.getValue());
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96AssertionError<ZipArchiveInputStream>currentEntry=newZipArchiveInputStream();System.arraycopy(currentEntry.getKey(),0,currentEntry.getValue(),currentEntry.getValue());
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96AssertionError<K,V>currentEntry=newAssertionError(currentEntry.getValue());System.arraycopy(currentEntry.getValue(),0,currentEntry.getValue(),currentEntry.getValu
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96privatestaticfinalByteBufferbuf=ByteBuffer.allocate(zipArchiveInputStream.BUFFER_SIZE,ZipArchiveOutputStream.UTF8);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96finalstaticZipArchiveInputStreambuf=ByteBuffer.allocate(ZipArchiveOutputStream.BUFFER_SIZE);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96finalbytebuf=ByteBuffer.allocate(ZipArchiveOutputStream.BUFFER_SIZE);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96finalstaticintbuf=ByteBuffer.allocate(ZipArchiveOutputStream.BUFFER_SIZE);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96AssertionError.warning("JSC_INTERNAL_ERROR","Unexpectedinitializationoftype:{0}",name);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96AssertionError.warning("JSC_INTERNAL_ERROR","Unexpectedinitializationoftype:{0}",expected);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96protectedfinalByteBufferbuf=ByteBuffer.allocate(BoundedInputStream.DEFAULT_SIZE);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96protectedfinalByteBufferbuf=ByteBuffer.allocate(BoundedInputStream.DEFAULT_BUFFER_SIZE);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96protectedfinalByteBufferbuf=ByteBuffer.allocate(BoundedInputStream.UTF_8);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96protectedfinalByteBufferbuf=ByteBuffer.allocate(BoundedInputStream.US_ASCII);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96privatefinalByteBufferbuf=ByteBuffer.allocate(ZipArchiveInputStream.BUFFER_SIZE*4);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96privatefinalByteBufferbuf=ByteBuffer.allocate(ZipArchiveInputStream.BUFFER_SIZE*2+1);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96AssertionError<ZipArchiveInputStream>currentEntry=newZipArchiveInputStream();System.arraycopy(currentEntry.getValue(),0,currentEntry.getValue());
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96AssertionError<ZipArchiveElement>currentEntry=newZipArchiveInputStream();System.arraycopy(currentEntry.getValue(),0,currentEntry.getValue());
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96AssertionError<ZipArchiveInputStream>currentEntry=newAssertionError(currentEntry.getValue());System.arraycopy(currentEntry.getValue(),0,currentEntry.getValue());
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96AssertionError<ZipArchiveInputStream>currentEntry=newAssertionError();System.arraycopy(currentEntry.getValue(),0,currentEntry.getValue());
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96AssertionError<ZipArchiveInputStream>currentEntry=newZipArchiveInputStream();System.arraycopy(currentEntry.getKey(),0,currentEntry.getValue());
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96AssertionError<ZipArchiveInputStream>currentEntry=newZipArchiveInputStream();System.arraycopy(currentEntry.getValue(),1,currentEntry.getValue());
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96privatestaticfinalByteBufferbuf=ByteBuffer.allocate(ZipArchiveInputStream.BUFFER_SIZE,ZipArchiveInputStream.DEFAULT_OUTPUT);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96System.arraycopy(currentEntry.getValue(),0,currentEntry.getValue(),currentEntry.getChronology());
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96System.arraycopy(currentEntry.getName(),0,currentEntry.getValue(),currentEntry.getChronology());
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96System.arraycopy(currentEntry.getKey(),0,currentEntry.getValue(),currentEntry.getChronology());
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96System.arraycopy(currentEntry.getValue(),1,currentEntry.getValue(),currentEntry.getChronology());
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96System.arraycopy(currentEntry.getValue(),0,currentEntry.getKey(),currentEntry.getChronology());
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96System.arraycopy(currentEntry.getValue(),0,currentEntry.getValue(),this.currentEntry.getChronology());
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96System.arraycopy(currentEntry.getValue(),0,currentEntry.getValue(),currentEntry.getValue());
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96System.arraycopy(currentEntry.getName(),0,currentEntry.getValue(),currentEntry.getValue());
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96System.arraycopy(currentEntry.getKey(),0,currentEntry.getValue(),currentEntry.getValue());
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96System.arraycopy(currentEntry.getType(),0,currentEntry.getValue(),currentEntry.getValue());
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96System.arraycopy(currentEntry.getValue(),0,currentEntry.getValue(),currentEntry.getKey());
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96System.arraycopy(currentEntry.getValue(),0,currentEntry.getValue(),currentEntry.getType());
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96System.arraycopy(currentEntry.getValue(),0,currentEntry.getValue(),currentEntry.getName());
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96nullbuf=ByteBuffer.allocate(ZipArchiveOutputStream.BUFFER_SIZE/2);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96this.zipArchiveInputStream=newZipArchiveInputStream(ZipArchiveInputStream.DEFAULT_SIZE,0);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96AssertionError.warning("JSC_INTERNAL_ERROR","Unexpectedinitializationoftype:{0}",this);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96privatefinalByteBufferbuf=ByteBuffer.allocate(ZipArchiveInputStream.BUFFER_SIZE*3);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96protectedfinalByteBufferbuf=ByteBuffer.allocate(ZipArchiveOutputStream.BUFFER_SIZE/2);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96System.arraycopy(currentEntry,0,currentEntry,0,currentEntry.length);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96System.arraycopy(ZipArchiveInputStream.DEFAULT,0,currentEntry,0,currentEntry.length);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96System.arraycopy(ZipArchiveInputStream.DEFAULT_ENTRY_ERROR,0,currentEntry.length);
