projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96privatefinalByteBufferbuf=ByteBuffer.allocate(ZipArchiveOutputStream.BUFFER_SIZE);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96privatestaticfinalByteBufferbuf=ByteBuffer.allocate(ZipArchiveOutputStream.BUFFER_SIZE);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96privatefinalByteBufferbuf=ByteBuffer.allocate(ZipArchiveInputStream.BUFFER_SIZE);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96privatefinalByteBufferbuf=ByteBuffer.allocate(ZipArchiveOutputStream.BUFFER_SIZE+1);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96staticfinalByteBufferbuf=ByteBuffer.allocate(ZipArchiveOutputStream.BUFFER_SIZE);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96privatefinalByteBufferbuf=ByteBuffer.allocate(ZipArchiveOutputStream.BUFFER_SIZE,1);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96privatefinalByteBufferbuf=ByteBuffer.allocate(ZipArchiveOutputStream.BUFFER_SIZE,2);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96privatefinalByteBufferbuf=ByteBuffer.allocate(ZipArchiveOutputStream.BUFFER_SIZE-1);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96protectedfinalByteBufferbuf=ByteBuffer.allocate(ZipArchiveOutputStream.BUFFER_SIZE);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96privatefinalByteBufferbuf=ByteBuffer.allocate(ZipArchiveInputStream.BUFFER_SIZE+1);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96privatestaticfinalByteBufferbuf=ByteBuffer.allocate(ZipArchiveOutputStream.BUFFER_SIZE+1);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96nullbuf=ByteBuffer.allocate(ZipArchiveOutputStream.BUFFER_SIZE);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96privatefinalByteBufferbuf=ByteBuffer.allocate(ZipArchiveOutputStream.BUFFER_SIZE,4);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96privatestaticfinalByteBufferbuf=ByteBuffer.allocate(ZipArchiveOutputStream.BUFFER_SIZE,2);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96privatestaticfinalByteBufferbuf=ByteBuffer.allocate(ZipArchiveOutputStream.BUFFER_SIZE,1);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96privatefinalByteBufferbuf=ByteBuffer.allocate(ZipArchiveOutputStream.BUFFER_SIZE,0);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96privatestaticfinalByteBufferbuf=ByteBuffer.allocate(ZipArchiveOutputStream.BUFFER_SIZE,0);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96privatefinalByteBufferbuf=ByteBuffer.allocate(ZipArchiveOutputStream.BUFFER_SIZE,3);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96privatefinalByteBufferbuf=ByteBuffer.allocate(ZipArchiveOutputStream.BUFFER_SIZE/1);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96privatefinalByteBufferbuf=ByteBuffer.allocate(ZipArchiveOutputStream.BUFFER_SIZE+2);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96privatestaticfinalByteBufferbuf=ByteBuffer.allocate(ZipArchiveInputStream.BUFFER_SIZE);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96privatefinalByteBufferbuf=ByteBuffer.allocate(ZipArchiveInputStream.BUFFER_SIZE,1);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96privatefinalByteBufferbuf=ByteBuffer.allocate(ZipArchiveInputStream.BUFFER_SIZE,2);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96privatefinalByteBufferbuf=ByteBuffer.allocate(ZipArchiveInputStream.BUFFER_SIZE,ZipArchiveInputStream.UTF8);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96privatefinalByteBufferbuf=ByteBuffer.allocate(ZipArchiveInputStream.BUFFER_SIZE,0);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96privatefinalByteBufferbuf=ByteBuffer.allocate(ZipArchiveInputStream.BUFFER_SIZE,10);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96privatestaticfinalByteBufferbuf=ByteBuffer.allocate(ZipArchiveInputStream.BUFFER_SIZE+1);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96privatefinalByteBufferbuf=ByteBuffer.allocate(ZipArchiveInputStream.BUFFER_SIZE/1);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96privatefinalByteBufferbuf=ByteBuffer.allocate(ZipArchiveInputStream.BUFFER_SIZE+2);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96privatestaticfinalByteBufferbuf=ByteBuffer.allocate(ZipArchiveOutputStream.BUFFER_SIZE-1);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96privatefinalByteBufferbuf=ByteBuffer.allocate(ZipArchiveOutputStream.BUFFER_SIZE*2);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96if(currentEntry==null){currentEntry=newZipArchiveInputStream();System.arraycopy(currentEntry.getValue(),currentEntry.getKey(),currentEntry.getValue());}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96if(currentEntry==null){currentEntry=newZipArchiveInputStream();System.arraycopy(currentEntry.getValue(),0,currentEntry.getValue(),currentEntry.getValue());}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96if(currentEntry==null){currentEntry=newZipArchiveInputStream();System.arraycopy(currentEntry.getValue(),0,currentEntry.getValue());}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96if(currentEntry==null){currentEntry=newZipArchiveInputStream();System.arraycopy(currentEntry.getValue(),0,currentEntry.getValue()+1,currentEntry.getValue());}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96if(currentEntry==null){currentEntry=newZipArchiveInputStream();System.arraycopy(currentEntry.getValue(),0,currentEntry.getValue(),currentEntry.getClass().getName());}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96if(currentEntry==null){currentEntry=newZipArchiveInputStream();System.arraycopy(currentEntry.getValue(),0,currentEntry.getValue(),currentEntry.getChronology());}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96if(currentEntry==null){currentEntry=newZipArchiveInputStream();System.arraycopy(currentEntry,0,currentEntry,0,currentEntry.length);}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96protectedfinalByteBufferbuf=ByteBuffer.allocate(ZipArchiveOutputStream.BUFFER_SIZE+1);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96protectedfinalByteBufferbuf=ByteBuffer.allocate(BoundedInputStream.BUFFER_SIZE);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96protectedfinalByteBufferbuf=ByteBuffer.allocate(ZipArchiveInputStream.BUFFER_SIZE);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96protectedfinalByteBufferbuf=ByteBuffer.allocate(ZipArchiveOutputStream.BUFFER_SIZE,1);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96finalByteBufferbuf=ByteBuffer.allocate(ZipArchiveOutputStream.BUFFER_SIZE,1);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96protectedfinalByteBufferbuf=ByteBuffer.allocate(ZipArchiveOutputStream.BUFFER_SIZE,2);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96privatestaticfinalByteBufferbuf=ByteBuffer.allocate(ZipArchiveOutputStream.BUFFER_SIZE,ZipArchiveInputStream.UTF8);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96privatestaticfinalByteBufferbuf=ByteBuffer.allocate(ZipArchiveOutputStream.BUFFER_SIZE,10);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96privatestaticfinalByteBufferbuf=ByteBuffer.allocate(ZipArchiveOutputStream.BUFFER_SIZE/1);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96privatestaticfinalByteBufferbuf=ByteBuffer.allocate(ZipArchiveOutputStream.BUFFER_SIZE+2);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96privatestaticfinalByteBufferbuf=ByteBuffer.allocate(ZipArchiveOutputStream.BUFFER_SIZE+4);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96staticfinalByteBufferbuf=ByteBuffer.allocate(ZipArchiveOutputStream.BUFFER_SIZE+1);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96staticfinalByteBufferbuf=ByteBuffer.allocate(ZipArchiveOutputStream.BUFFER_SIZE,1);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96staticfinalByteBufferbuf=ByteBuffer.allocate(ZipArchiveInputStream.BUFFER_SIZE);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96staticfinalByteBufferbuf=ByteBuffer.allocate(ZipArchiveOutputStream.BUFFER_SIZE,2);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96staticfinalByteBufferbuf=ByteBuffer.allocate(ZipArchiveOutputStream.BUFFER_SIZE,0);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96staticfinalByteBufferbuf=ByteBuffer.allocate(ZipArchiveOutputStream.BUFFER_SIZE,10);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96staticfinalByteBufferbuf=ByteBuffer.allocate(BoundedInputStream.BUFFER_SIZE);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96finalnullbuf=ByteBuffer.allocate(ZipArchiveOutputStream.BUFFER_SIZE);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96nullbuf=ByteBuffer.allocate(ZipArchiveOutputStream.BUFFER_SIZE,1);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96nullbuf=ByteBuffer.allocate(ZipArchiveOutputStream.BUFFER_SIZE,0);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96nullbuf=ByteBuffer.allocate(ZipArchiveOutputStream.BUFFER_SIZE+1);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96nullbuf=ByteBuffer.allocate(ZipArchiveOutputStream.BUFFER_SIZE,2);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96nullbuf=ByteBuffer.allocate(ZipArchiveInputStream.BUFFER_SIZE);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96privatefinalByteBufferbuf=ByteBuffer.allocate(ZipArchiveInputStream.BUFFER_SIZE+4);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96privatefinalByteBufferbuf=ByteBuffer.allocate(ZipArchiveInputStream.BUFFER_SIZE+3);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96finalZipArchiveInputStreamstream=newZipArchiveInputStream();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96AssertionError.warning("JSC_INTERNAL_ERROR","Unexpectedinitializationoftype{0}");
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96AssertionError.warning("JSC_INTERNAL_ERROR".getMessage());
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96AssertionError.warning("JSC_INTERNAL_ERROR");
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96finalZipArchiveInputStreamstream=newZipArchiveInputStream(System.err);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96AssertionError.warning("JSC_INTERNAL_ERROR",null);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96AssertionError.warning("JSC_INTERNAL_ERROR","Unexpectedinitializationoftype:{0}");
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96staticfinalByteBufferbuf=ByteBuffer.allocate(ZipArchiveOutputStream.BUFFER_SIZE-1);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96staticfinalByteBufferbuf=ByteBuffer.allocate(ZipArchiveInputStream.BUFFER_SIZE+1);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96staticfinalByteBufferbuf=ByteBuffer.allocate(ZipArchiveInputStream.BUFFER_SIZE,ZipArchiveOutputStream.UTF8);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96staticfinalByteBufferbuf=ByteBuffer.allocate(ZipArchiveInputStream.BUFFER_SIZE,0);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96staticfinallongbuf=ByteBuffer.allocate(ZipArchiveOutputStream.BUFFER_SIZE);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96privatefinalByteBufferbuf=ByteBuffer.allocate(ZipArchiveInputStream.BUFFER_SIZE-1);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96privatestaticfinalByteBufferbuf=ByteBuffer.allocate(ZipArchiveInputStream.BUFFER_SIZE,ZipArchiveInputStream.UTF8);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96privatefinalByteBufferbuf=ByteBuffer.allocate(ZipArchiveInputStream.DEFAULT_BUFFER_SIZE);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96privatestaticfinalByteBufferbuf=ByteBuffer.allocate(ZipArchiveInputStream.BUFFER_SIZE,ZipArchiveOutputStream.UTF8);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96privatestaticfinalByteBufferbuf=ByteBuffer.allocate(ZipArchiveOutputStream.BUFFER_SIZE+3);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96protectedfinalByteBufferbuf=ByteBuffer.allocate(ZipArchiveInputStream.BUFFER_SIZE+1);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96protectedfinalByteBufferbuf=ByteBuffer.allocate(ZipArchiveOutputStream.BUFFER_SIZE-1);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96protectedfinalByteBufferbuf=ByteBuffer.allocate(ZipArchiveInputStream.BUFFER_SIZE,0);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96protectedfinalByteBufferbuf=ByteBuffer.allocate(ZipArchiveInputStream.BUFFER_SIZE-1);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96protectedfinalByteBufferbuf=ByteBuffer.allocate(ZipArchiveOutputStream.BUFFER_SIZE,0);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96privatefinalByteBufferbuf=ByteBuffer.allocate(ZipArchiveOutputStream.BUFFER_SIZE*1);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96privatefinalByteBufferbuf=ByteBuffer.allocate(ZipArchiveOutputStream.BUFFER_SIZE*2-1);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96privatefinalByteBufferbuf=ByteBuffer.allocate(ZipArchiveOutputStream.BUFFER_SIZE+4);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96privatefinalByteBufferbuf=ByteBuffer.allocate(ZipArchiveOutputStream.BUFFER_SIZE+3);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96privatestaticfinalByteBufferbuf=ByteBuffer.allocate(ZipArchiveOutputStream.BUFFER_SIZE/2);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96privatestaticfinalByteBufferbuf=ByteBuffer.allocate(ZipArchiveOutputStream.BUFFER_SIZE*2);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96privatestaticfinalByteBufferbuf=ByteBuffer.allocate(ZipArchiveOutputStream.BUFFER_SIZE*1);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96nullbuf=ByteBuffer.allocate(ZipArchiveOutputStream.BUFFER_SIZE-1);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96nullbuf=ByteBuffer.allocate(ZipArchiveOutputStream.BUFFER_SIZE,ZipArchiveInputStream.UTF8);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96privatefinalByteBufferbuf=ByteBuffer.allocate(ZipArchiveInputStream.BUFFER_SIZE,ZipArchiveInputStream.DEFAULT);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96privatestaticfinalByteBufferbuf=ByteBuffer.allocate(ZipArchiveOutputStream.BUFFER_SIZE,ZipArchiveInputStream.DEFAULT);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96staticfinalByteBufferbuf=ByteBuffer.allocate(ZipArchiveOutputStream.BUFFER_SIZE,ZipArchiveInputStream.UTF8);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96staticfinalByteBufferbuf=ByteBuffer.allocate(ZipArchiveOutputStream.BUFFER_SIZE,ZipArchiveInputStream.DEFAULT);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96this.zipArchiveInputStream=newZipArchiveInputStream();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96this.zipArchiveInputStream=newZipArchiveInputStream(ZipArchiveInputStream.DEFAULT_INIT_ERROR);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96this.zipArchiveInputStream=newZipArchiveInputStream(System.currentTimeMillis());
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96this.zipArchiveInputStream=newZipArchiveInputStream(ZipArchiveInputStream.DEFAULT_SYNTHETIC);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96this.zipArchiveInputStream=newZipArchiveInputStream(ZipArchiveInputStream.DEFAULT_ENTRY_ERROR);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96this.zipArchiveInputStream=newZipArchiveInputStream(ZipArchiveInputStream.DEFAULT_SIZE);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96this.zipArchiveInputStream=newZipArchiveInputStream(ZipArchiveInputStream.DEFAULT_OUTPUT);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96protectedByteBufferbuf=ByteBuffer.allocate(ZipArchiveOutputStream.BUFFER_SIZE+1);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96protectedfinalByteBufferbuf=ByteBuffer.allocate(ZipArchiveOutputStream.BUFFER_SIZE,ZipArchiveInputStream.UTF8);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96protectedfinalByteBufferbuf=ByteBuffer.allocate(ZipArchiveInputStream.BUFFER_SIZE,ZipArchiveOutputStream.UTF8);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96privatestaticfinalByteBufferbuf=ByteBuffer.allocate(ZipArchiveInputStream.BUFFER_SIZE/1);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96privatefinalByteBufferbuf=ByteBuffer.allocate(ZipArchiveInputStream.BUFFER_SIZE/2);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96privatefinalByteBufferbuf=ByteBuffer.allocate(ZipArchiveInputStream.BUFFER_SIZE*2);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java96privatefinalByteBufferbuf=ByteBuffer.allocate(ZipArchiveOutputStream.BUFFER_SIZE/2);
