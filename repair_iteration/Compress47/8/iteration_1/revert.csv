projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java554inf.end();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java554inf.close();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java554in.close();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java554if(in.isEnabled()){inf.end();}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java554inf.flush();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java554if(in.close()){inf.end();}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java554if(in.isInputStream()){inf.end();}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java554if(in.isInput()){inf.end();}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java554
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java554if(inf!=null){inf.end();}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java554if(inf!=null){inf.end();}else{System.err.println("UnicodeExtraFieldsclosed:"+entryEncoding);}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java554if(inf!=null){inf.end();}else{ZipArchiveEntryentry=newZipArchiveEntry(inf);entry.closeEntry();}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java554if(inf!=null){inf.end();}else{inputStream.close();}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java554if(inf!=null){inf.end();}else{System.err.println("Currententry:"+entryEncoding);}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java554if(inf!=null){inf.close();}else{inputStream.close();}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java554if(inf.length>0){inf.end();}else{inputStream.close();}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java554if(in.isEnabled()){inf.end();}else{inputStream.close();}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java554if(in.close()){inf.close();}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java554Inflaterbis=inf.close();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java554if(in.close()){inf.flush();}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java554InputStreambis=newZipInputStream(inf.close());
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java554InputStreambis=newZipInputStream(inf.getBytes());
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java554InputStreambis=newZipInputStream(inf);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java554InputStreambis=newZipInputStream(inf.getValue());
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java554InputStreambis=getInputStream();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java554InputStreambis=newZipInputStream(inf.read());
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java554InputStreambis=newZipInputStream(inf.getEncoding());
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java554when(in.isEnabled()){inf.end();}else{inputStream.close();}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java554when(in.isEnabled()){inputStream.end();}else{inputStream.close();}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java554Inflaterbis=inf.end();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java554InputStreambis=in.getInputStream();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java554Inflaterbis=inf.getInputStream();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java554when(in.isEnabled()){inputStream.end();}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java554InputStreambis=newZipInputStream(inf.length);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java554InputStreambis=newZipInputStream(inf.length());
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java554Inflaterbis=newZipInputStream(inf.length);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java554InputStreambis=newZipInputStream(inf.length-1);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java554if(in.isEnabled()||in.isEnabled()){inf.end();}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java554if(in.isEnabled()){inf.close();}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java554if(in.isEnabled()||inf.isEnabled()){inf.end();}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java554Inflaterinf=in.isEnabled();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java554if(entry!=null){inf.end();}else{ZipArchiveEntryentry=newZipArchiveEntry(inf);entry.closeEntry();}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java554if(entry==null){inf.end();}else{ZipArchiveEntryentry=newZipArchiveEntry(inf);entry.closeEntry();}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java554if(inf!=null){inf.end();}else{ZipArchiveEntryentry=newZipArchiveEntry(inf,entry.closeEntry());entry.closeEntry();}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java554if(inf!=null){inf.end();}else{ZipArchiveEntryentry=(ZipArchiveEntry)inf.clone();entry.closeEntry();}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java554if(entry!=null){inf.end();}else{ZipArchiveEntryentry=newZipArchiveEntry(inf,entry.closeEntry());entry.closeEntry();}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java554Inflaterinf=entry.getInputStream();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java554if(in.isInputStream()){inf.close();}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java554if(entryEncoding!=null){inf.end();}else{System.err.println("UnicodeExtraFieldsclosed:"+entryEncoding);}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java554if(entryEncoding!=null){inf.end();}else{System.err.println("UseUnicodeExtraFieldsclosed:"+entryEncoding);}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java554if(entryEncoding!=null){inf.end();}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java554if(entryEncoding!=null){inf.end();}else{System.err.println("ZipArchiveEntryclosed:"+entryEncoding);}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java554if(entryEncoding!=null){inf.end();}else{System.err.println("JavaExtraFieldsclosed:"+entryEncoding);}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java554if(entryEncoding!=null){inf.end();}else{System.err.println("UsageUnicodeExtraFieldsclosed:"+entryEncoding);}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java554inf.defaultWriteEncoding();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java554inf.defaultReader();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java554inf.write('n');
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java554inf.defaultWriteStream();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java554if(inf!=null){inf.close();}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java554inf!=null){inf.end();}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java554inf!=null&&inf.end();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java554inf!=null){inf.close();}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java554Inflaterinf=getInputStream();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java554Inflaterinf=in.isInput();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java554InputStreambis=inf.getInputStream();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java554InputStreambis=in.isInput();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java554InputStreambis=in.readInput();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java554if(in!=null){try{in.close();}catch(IOExceptionioe){}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java554if(in!=null){for(inti=0;i<in.length();++i){inputStream.close();}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java554if(in!=null){for(inti=0;i<in.length();++i){out.close();}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java554if(in!=null){for(inti=0;i<in.length();i++){current.close();}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java554if(in!=null){try{in.close();}catch(IOExceptione){}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java554if(in!=null){in.close();}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java554InputStreambis=in.readInputStream();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java554InputStreambis=newZipInputStream(entryEncoding);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java554InputStreambis=newZipInputStream(entryEncoding.getBytes());
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java554Inflaterbis=entryEncoding.getInputStream();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java554Inflaterbis=newZipInputStream(entryEncoding);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java554Inflaterbis=entryEncoding.openInputStream();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java554Inflaterbis=newZipInputStream(entryEncoding.getBytes());
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java554if(in!=null){in.close();}else{try{bis.close();}catch(IOExceptionioe){}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java554if(in!=null){in.close();}else{thrownewIllegalStateException("");}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java554if(in!=null){in.close();}else{try{bis.close();}catch(IOExceptione){}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java554if(in!=null){in.close();}else{thrownewIllegalArgumentException("");}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java554if(in!=null){in.close();}else{closed=true;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java554if(in.isEnabled()){in.close();}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java554Inflaterbis=newZipInputStream(inf.getBytes());
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java554Inflaterbis=in.getInputStream();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java554Inflaterbis=in.readIn();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java554Inflaterbis=newZipInputStream(inf.getByteBuffer());
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java554Inflaterbis=newZipInputStream(inf.read());
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java554Inflaterbis=newZipInputStream(inf.getValue());
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java554Inflaterbis=newZipArchiveEntry(inf.getValue());
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java554Inflaterbis=newZipArchiveEntry(inf);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java554if(in.isEnabled()){inf.close();}else{inputStream.close();}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java554Inflaterbis=entryEncoding.enabled()?inf.end():null;
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java554Inflaterbis=inf.getInput();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java554if(in.isEnabled()){inputStream.close();}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java554if(in.close()){in.close();}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java554if(entryEncoding!=null){inf.end();}else{System.err.println("Currententry:"+entryEncoding);}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java554if(entryEncoding!=null){inf.end();}else{System.err.println("Currententry:n"+entryEncoding);}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java554if(entryEncoding!=null){inf.end();}else{System.err.println(")Currententry:"+entryEncoding);}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java554ZipArchiveEntryentry=newZipArchiveEntry(inf);entry.closeEntry();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java554if(inf!=null){inf.close();}else{ZipArchiveEntryentry=newZipArchiveEntry(inf);entry.closeEntry();}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java554if(inf!=null){inf.start();}else{ZipArchiveEntryentry=newZipArchiveEntry(inf);entry.closeEntry();}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java554if(inf!=null){inf.end();}else{ZipArchiveEntryentry=newZIPArchiveEntry(inf);entry.closeEntry();}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java554if(entryEncoding!=null){inf.end();}else{System.err.println("ZipExtraFieldsclosed:"+entryEncoding);}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java554if(in!=null){for(inti=0;i<in.size();++i){ZipArchiveEntryentry=(ZipArchiveEntry)in.clone();}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java554if(in!=null){for(inti=0;i<in.size();++i){ZipArchiveEntryentry=(ZipArchiveEntry)in.clone();if(entry.getValue().equals(entry.getValue())){
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java554if(in!=null){for(inti=0;i<in.size();++i){ZipArchiveEntryentry=(ZipArchiveEntry)in.next();if(entry.getValue()==entry.getValue()){return;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java554if(in!=null){for(inti=0;i<in.size();++i){ZipArchiveEntryentry=(ZipArchiveEntry)in.clone();if(entry.getValue().equals(entry.getValue())){return;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java554if(in!=null){for(inti=0;i<in.length;++i){ZipArchiveEntryentry=(ZipArchiveEntry)in.clone();}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java554if(in!=null){for(inti=0;i<in.size();++i){ZipArchiveEntryentry=(ZipArchiveEntry)in.clone();if(entry.getValue().equals(entry.getValue())){}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java554if(in.isInput()){inf.close();}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java554Inflaterbis=newZipInputStream(in.read());
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java554in.flush();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java554Inflaterbis=newZipInputStream(in);
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java554ze.close();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java554if(inf!=null){inf.flush();}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java554Inflaterinf=inf.getInputStream();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java554finalZipArchiveEntryentry=newZipArchiveEntry(inf);entry.closeEntry();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java554if(entry!=null){inf.close();}else{ZipArchiveEntryentry=newZipArchiveEntry(inf);entry.closeEntry();}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java554if(entry!=null){inf.end();}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java554if(entry!=null){inf.end();}else{ZipArchiveEntryentry=(ZipArchiveEntry)entry.clone();entry.closeEntry();}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java554if(in.isInputStream()||bis.endsWith(".zip")){inf.end();}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java554if(in.isInputStream()||bis.endsWith("/")){inf.end();}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java554if(in.isInputStream()||bis.isInputStream()){inf.end();}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java554if(in.isInputStream()||bis.endsWith("-")){inf.end();}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java554if(in.isInputStream()||bis.endsWith("n")){inf.end();}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java554Inflaterinf=inputStream.close();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java554if(in.isInput()||in.isEnabled()){inf.end();}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java554if(in.isInput()||bis.endsWith(".zip")){inf.end();}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java554if(in.isInput()||bis.endsWith("/")){inf.end();}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java554if(in.isInput()||bis.endsWith("-")){inf.end();}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java554if(in.isInput()||bis.endsWith("n")){inf.end();}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java554closeEntry();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java554inf.closeEntry();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java554if(in!=null){for(inti=0;i<in.size();++i){ZipArchiveEntryentry=(ZipArchiveEntry)in.clone();closed=true;}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java554if(in!=null){for(inti=0;i<in.size();++i){ZipArchiveEntryentry=newZipArchiveEntry(entry.getValue());entry.closeEntry();}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java554if(in!=null){for(inti=0;i<in.size();++i){ZipArchiveEntryentry=newZipArchiveEntry(in.getValue());entry.closeEntry();}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java554if(in.isEnabled()&&inf.length>0){inf.close();}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java554if(in.isEnabled()||in.isEnabled()){inf.close();}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java554if(in.isEnabled()&&inf.endsWith("/")){inf.close();}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java554if(inf!=null){inf.close();}else{System.err.println("UnicodeExtraFieldsclosed:"+entryEncoding);}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java554if(entryEncoding!=null){inf.close();}else{System.err.println("Currententry:"+entryEncoding);}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java554if(entryEncoding!=null){inf.end();}else{System.err.println("Cannotcloseentry:"+entryEncoding);}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java554if(in.read()>0){inf.flush();}else{ZipArchiveEntryentry=newZipArchiveEntry(entry.getValue());entry.closeEntry();}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java554if(in.read()>0){inf.flush();}else{ZipArchiveEntryentry=newZipArchiveEntry(entry.getKey());entry.closeEntry();}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java554if(in.close()){inf.close();}else{System.err.println("UnicodeExtraFieldsclosed:"+entryEncoding);}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java554if(in.close()){inf.close();}else{System.err.println("Failedtocloseentry.");}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java554while(inf!=null&&inf.length>0){inf.end();}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java554while(inf!=null&&inf.length>0){inf.end();
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java554if(inf!=null){inputStream.close();}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java554if(inf!=null){inf=newZipInputStream(inf.getBytes());}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java554if(inf!=null){inputStream.flush();}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java554while(inf!=null){inputStream.close();}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java554if(inf.length>0){inf.close();}else{inputStream.close();}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java554if(inf.length>0){inputStream.close();}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java554if(inf.length>0){inf.close();}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java554if(inf.length>0){inputStream.flush();}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java554if(inf.length>0){inf.flush();}else{inputStream.close();}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java554if(in!=null){in.close();}else{System.err.println("UnicodeExtraFieldsclosed:"+entryEncoding);}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java554if(in!=null){in.close();}else{System.err.println("UnicodeExtraFieldsclosed");}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java554if(in!=null){in.close();}else{System.err.println("Failedtocloseentry.");}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java554if(in!=null){in.close();}else{System.err.println("ZipArchiveEntryclosed:"+entryEncoding);}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java554if(in.isEnabled()||in.isEnabled()){inputStream.end();}else{inputStream.close();}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java554if(in.isEnabled()||bis.isEnabled()){inf.end();}else{inputStream.close();}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java554if(in.isEnabled()||in.isEnabled()){inputStream.close();}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java554if(in.isEnabled()||in.isEnabled()){inputStream.end();}
projects/Compress47/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java554if(in.isEnabled()||in.isEnabled()){inf.end();}else{inputStream.close();}
